public abstract class org.apache.james.mime4j.storage.StorageOutputStream extends java.io.OutputStream
{
    public boolean closed;
    public byte[] singleByte;
    public boolean usedUp;

    public void <init>()
    {
        org.apache.james.mime4j.storage.StorageOutputStream r0;

        r0 := @this: org.apache.james.mime4j.storage.StorageOutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void close()
    {
        org.apache.james.mime4j.storage.StorageOutputStream r0;

        r0 := @this: org.apache.james.mime4j.storage.StorageOutputStream;

        r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean closed> = 1;

        return;
    }

    public final org.apache.james.mime4j.storage.Storage toStorage()
    {
        java.lang.IllegalStateException $r2;
        org.apache.james.mime4j.storage.Storage $r1;
        org.apache.james.mime4j.storage.StorageOutputStream r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.storage.StorageOutputStream;

        $z0 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean usedUp>;

        if $z0 != 0 goto label2;

        $z0 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean closed>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.james.mime4j.storage.StorageOutputStream: void close()>();

     label1:
        r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean usedUp> = 1;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.storage.StorageOutputStream: org.apache.james.mime4j.storage.Storage toStorage0()>();

        return $r1;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("toStorage may be invoked only once");

        throw $r2;
    }

    public abstract org.apache.james.mime4j.storage.Storage toStorage0();

    public final void write(int)
    {
        byte[] $r1;
        byte $b1;
        int $i0;
        org.apache.james.mime4j.storage.StorageOutputStream r0;
        java.io.IOException $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.storage.StorageOutputStream;

        $i0 := @parameter0: int;

        $z0 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean closed>;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: byte[] singleByte>;

        if $r1 != null goto label1;

        $r1 = newarray (byte)[1];

        r0.<org.apache.james.mime4j.storage.StorageOutputStream: byte[] singleByte> = $r1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: byte[] singleByte>;

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        virtualinvoke r0.<org.apache.james.mime4j.storage.StorageOutputStream: void write0(byte[],int,int)>($r1, 0, 1);

        return;

     label2:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("StorageOutputStream has been closed");

        throw $r2;
    }

    public final void write(byte[])
    {
        byte[] $r1;
        int $i0;
        org.apache.james.mime4j.storage.StorageOutputStream r0;
        java.io.IOException $r3;
        java.lang.NullPointerException $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.storage.StorageOutputStream;

        $r1 := @parameter0: byte[];

        $z0 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean closed>;

        if $z0 != 0 goto label3;

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i0 = lengthof $r1;

        virtualinvoke r0.<org.apache.james.mime4j.storage.StorageOutputStream: void write0(byte[],int,int)>($r1, 0, $i0);

        return;

     label2:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label3:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("StorageOutputStream has been closed");

        throw $r3;
    }

    public final void write(byte[], int, int)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        org.apache.james.mime4j.storage.StorageOutputStream r0;
        java.io.IOException $r4;
        java.lang.NullPointerException $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.storage.StorageOutputStream;

        $r1 := @parameter0: byte[];

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $z0 = r0.<org.apache.james.mime4j.storage.StorageOutputStream: boolean closed>;

        if $z0 != 0 goto label4;

        if $r1 == null goto label3;

        if $i2 < 0 goto label2;

        if $i0 < 0 goto label2;

        $i3 = $i2 + $i0;

        $i1 = lengthof $r1;

        if $i3 > $i1 goto label2;

        if $i0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.james.mime4j.storage.StorageOutputStream: void write0(byte[],int,int)>($r1, $i2, $i0);

        return;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label3:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label4:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("StorageOutputStream has been closed");

        throw $r4;
    }

    public abstract void write0(byte[], int, int);
}
