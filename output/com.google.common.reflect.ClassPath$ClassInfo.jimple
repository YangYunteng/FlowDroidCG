public final class com.google.common.reflect.ClassPath$ClassInfo extends com.google.common.reflect.ClassPath$ResourceInfo
{
    public final java.lang.String className;

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.ClassLoader $r1;
        java.lang.String $r2;
        com.google.common.reflect.ClassPath$ClassInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$ClassInfo;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<com.google.common.reflect.ClassPath$ResourceInfo: void <init>(java.lang.String,java.lang.ClassLoader)>($r2, $r1);

        $r2 = staticinvoke <com.google.common.reflect.ClassPath: java.lang.String getClassName(java.lang.String)>($r2);

        r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className> = $r2;

        return;
    }

    public static java.lang.String access$000(com.google.common.reflect.ClassPath$ClassInfo)
    {
        java.lang.String r1;
        com.google.common.reflect.ClassPath$ClassInfo $r0;

        $r0 := @parameter0: com.google.common.reflect.ClassPath$ClassInfo;

        r1 = $r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        return r1;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        com.google.common.reflect.ClassPath$ClassInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$ClassInfo;

        r1 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        return r1;
    }

    public java.lang.String getPackageName()
    {
        java.lang.String $r1;
        com.google.common.reflect.ClassPath$ClassInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$ClassInfo;

        $r1 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        $r1 = staticinvoke <com.google.common.reflect.Reflection: java.lang.String getPackageName(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getSimpleName()
    {
        com.google.common.reflect.ClassPath$ClassInfo r0;
        int $i0, $i1;
        com.google.common.base.CharMatcher $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.common.reflect.ClassPath$ClassInfo;

        $r1 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(36);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $r1 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher digit()>();

        $r1 = virtualinvoke $r2.<com.google.common.base.CharMatcher: java.lang.String trimLeadingFrom(java.lang.CharSequence)>($r1);

        return $r1;

     label1:
        $r1 = virtualinvoke r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        return $r1;

     label2:
        $r3 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r1;
    }

    public java.lang.Class load()
    {
        java.lang.IllegalStateException $r5;
        com.google.common.reflect.ClassPath$ClassInfo r0;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r4;
        java.lang.ClassLoader $r2;
        java.lang.String $r3;

        r0 := @this: com.google.common.reflect.ClassPath$ClassInfo;

        $r2 = r0.<com.google.common.reflect.ClassPath$ResourceInfo: java.lang.ClassLoader loader>;

        $r3 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

     label1:
        $r1 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r3);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        java.lang.String r1;
        com.google.common.reflect.ClassPath$ClassInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$ClassInfo;

        r1 = r0.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String className>;

        return r1;
    }
}
