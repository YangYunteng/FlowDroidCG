public final class com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask extends com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture implements com.google.common.util.concurrent.ListenableScheduledFuture
{
    public final java.util.concurrent.ScheduledFuture scheduledDelegate;

    public void <init>(com.google.common.util.concurrent.ListenableFuture, java.util.concurrent.ScheduledFuture)
    {
        com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask r0;
        java.util.concurrent.ScheduledFuture $r2;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r2 := @parameter1: java.util.concurrent.ScheduledFuture;

        specialinvoke r0.<com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture: void <init>(com.google.common.util.concurrent.ListenableFuture)>($r1);

        r0.<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: java.util.concurrent.ScheduledFuture scheduledDelegate> = $r2;

        return;
    }

    public boolean cancel(boolean)
    {
        java.util.concurrent.ScheduledFuture $r1;
        com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;

        $z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.google.common.util.concurrent.ForwardingFuture: boolean cancel(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r1 = r0.<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: java.util.concurrent.ScheduledFuture scheduledDelegate>;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>($z0);

     label1:
        return $z1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask r0;
        java.util.concurrent.Delayed $r2;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.concurrent.Delayed) $r1;

        $i0 = virtualinvoke r0.<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: int compareTo(java.util.concurrent.Delayed)>($r2);

        return $i0;
    }

    public int compareTo(java.util.concurrent.Delayed)
    {
        java.util.concurrent.ScheduledFuture $r1;
        int $i0;
        com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask r0;
        java.util.concurrent.Delayed $r2;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;

        $r2 := @parameter0: java.util.concurrent.Delayed;

        $r1 = r0.<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: java.util.concurrent.ScheduledFuture scheduledDelegate>;

        $i0 = interfaceinvoke $r1.<java.util.concurrent.ScheduledFuture: int compareTo(java.lang.Object)>($r2);

        return $i0;
    }

    public long getDelay(java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledFuture $r2;
        long $l0;
        com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask r0;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;

        $r1 := @parameter0: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask: java.util.concurrent.ScheduledFuture scheduledDelegate>;

        $l0 = interfaceinvoke $r2.<java.util.concurrent.ScheduledFuture: long getDelay(java.util.concurrent.TimeUnit)>($r1);

        return $l0;
    }
}
