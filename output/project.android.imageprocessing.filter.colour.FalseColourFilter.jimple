public class project.android.imageprocessing.filter.colour.FalseColourFilter extends project.android.imageprocessing.filter.BasicFilter
{
    public static final java.lang.String UNIFORM_HIGHLIGHT_COLOUR;
    public static final java.lang.String UNIFORM_SHADOW_COLOUR;
    public float[] highlightColour;
    public int highlightColourHandle;
    public float[] shadowColour;
    public int shadowColourHandle;

    public void <init>(float[], float[])
    {
        project.android.imageprocessing.filter.colour.FalseColourFilter r0;
        float[] $r1, $r2;

        r0 := @this: project.android.imageprocessing.filter.colour.FalseColourFilter;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: float[];

        specialinvoke r0.<project.android.imageprocessing.filter.BasicFilter: void <init>()>();

        r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: float[] shadowColour> = $r1;

        r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: float[] highlightColour> = $r2;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.colour.FalseColourFilter r0;

        r0 := @this: project.android.imageprocessing.filter.colour.FalseColourFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nvarying vec2 v_TexCoord;\nuniform vec3 u_ShadowColour;\nuniform vec3 u_HightlightColour;\nvec3 luminanceWeighting = vec3(0.2125, 0.7154, 0.0721);\nvoid main(){\n   vec4 color = texture2D(u_Texture0,v_TexCoord);\n   float luminance =  dot(color.rgb, luminanceWeighting);\n   gl_FragColor = vec4(mix(u_ShadowColour, u_HightlightColour, luminance), color.a);\n}\n";
    }

    public void initShaderHandles()
    {
        int $i0;
        project.android.imageprocessing.filter.colour.FalseColourFilter r0;

        r0 := @this: project.android.imageprocessing.filter.colour.FalseColourFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void initShaderHandles()>();

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_ShadowColour");

        r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: int shadowColourHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_HightlightColour");

        r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: int highlightColourHandle> = $i0;

        return;
    }

    public void passShaderValues()
    {
        project.android.imageprocessing.filter.colour.FalseColourFilter r0;
        int $i0;
        float $f0, $f1, $f2;
        float[] $r1;

        r0 := @this: project.android.imageprocessing.filter.colour.FalseColourFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void passShaderValues()>();

        $i0 = r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: int shadowColourHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: float[] shadowColour>;

        $f1 = $r1[0];

        $f0 = $r1[1];

        $f2 = $r1[2];

        staticinvoke <android.opengl.GLES20: void glUniform3f(int,float,float,float)>($i0, $f1, $f0, $f2);

        $i0 = r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: int highlightColourHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.colour.FalseColourFilter: float[] highlightColour>;

        $f0 = $r1[0];

        $f1 = $r1[1];

        $f2 = $r1[2];

        staticinvoke <android.opengl.GLES20: void glUniform3f(int,float,float,float)>($i0, $f0, $f1, $f2);

        return;
    }

    public static void <clinit>()
    {
        <project.android.imageprocessing.filter.colour.FalseColourFilter: java.lang.String UNIFORM_SHADOW_COLOUR> = "u_ShadowColour";

        <project.android.imageprocessing.filter.colour.FalseColourFilter: java.lang.String UNIFORM_HIGHLIGHT_COLOUR> = "u_HightlightColour";

        return;
    }
}
