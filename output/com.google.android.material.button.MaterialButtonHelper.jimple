public class com.google.android.material.button.MaterialButtonHelper extends java.lang.Object
{
    public static final boolean IS_LOLLIPOP;
    public boolean backgroundOverwritten;
    public android.content.res.ColorStateList backgroundTint;
    public android.graphics.PorterDuff$Mode backgroundTintMode;
    public boolean checkable;
    public int cornerRadius;
    public boolean cornerRadiusSet;
    public int insetBottom;
    public int insetLeft;
    public int insetRight;
    public int insetTop;
    public android.graphics.drawable.Drawable maskDrawable;
    public final com.google.android.material.button.MaterialButton materialButton;
    public android.content.res.ColorStateList rippleColor;
    public android.graphics.drawable.LayerDrawable rippleDrawable;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel;
    public boolean shouldDrawSurfaceColorStroke;
    public android.content.res.ColorStateList strokeColor;
    public int strokeWidth;

    static void <clinit>()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP> = $z0;

        return;
    }

    public void <init>(com.google.android.material.button.MaterialButton, com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.button.MaterialButton $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: com.google.android.material.button.MaterialButton;

        $r2 := @parameter1: com.google.android.material.shape.ShapeAppearanceModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean shouldDrawSurfaceColorStroke> = 0;

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean backgroundOverwritten> = 0;

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean cornerRadiusSet> = 0;

        r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton> = $r1;

        r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r2;

        return;
    }

    private android.graphics.drawable.Drawable createBackground()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.drawable.LayerDrawable $r1, $r14;
        android.content.Context $r5;
        android.graphics.drawable.Drawable $r10;
        com.google.android.material.ripple.RippleDrawableCompat $r16;
        android.content.res.ColorStateList $r6;
        com.google.android.material.button.MaterialButton $r4;
        int $i0;
        boolean $z0;
        android.graphics.drawable.InsetDrawable $r12;
        com.google.android.material.shape.ShapeAppearanceModel $r3;
        android.graphics.PorterDuff$Mode $r7;
        com.google.android.material.shape.MaterialShapeDrawable $r2, $r8, $r9, $r13;
        android.graphics.drawable.RippleDrawable $r15;
        float $f0;
        android.graphics.drawable.Drawable[] $r11;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r8 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r2 = $r8;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r8.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r3);

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r5 = virtualinvoke $r4.<android.widget.Button: android.content.Context getContext()>();

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r5);

        $r6 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r6);

        $r7 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode>;

        if $r7 == null goto label1;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r7);

     label1:
        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth>;

        $f0 = (float) $i0;

        $r6 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor>;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,android.content.res.ColorStateList)>($f0, $r6);

        $r9 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r8 = $r9;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r9.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r3);

        virtualinvoke $r8.<com.google.android.material.shape.MaterialShapeDrawable: void setTint(int)>(0);

        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth>;

        $f0 = (float) $i0;

        $z0 = r0.<com.google.android.material.button.MaterialButtonHelper: boolean shouldDrawSurfaceColorStroke>;

        if $z0 == 0 goto label2;

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>($r4, $i0);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        virtualinvoke $r8.<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,int)>($f0, $i0);

        $z0 = <com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>;

        if $z0 == 0 goto label4;

        $r13 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r13.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r3);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable> = $r13;

        $r10 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable>;

        $i0 = -1;

        staticinvoke <b.i.c.a.a: void b(android.graphics.drawable.Drawable,int)>($r10, $i0);

        $r15 = new android.graphics.drawable.RippleDrawable;

        $r6 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor>;

        $r6 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>($r6);

        $r14 = new android.graphics.drawable.LayerDrawable;

        $r11 = newarray (android.graphics.drawable.Drawable)[2];

        $r11[0] = $r8;

        $r11[1] = $r2;

        specialinvoke $r14.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r11);

        $r12 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)>($r14);

        $r10 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable>;

        specialinvoke $r15.<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r6, $r12, $r10);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable> = $r15;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        return $r1;

     label4:
        $r16 = new com.google.android.material.ripple.RippleDrawableCompat;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r16.<com.google.android.material.ripple.RippleDrawableCompat: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r3);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable> = $r16;

        $r10 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable>;

        $r6 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor>;

        $r6 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>($r6);

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r10, $r6);

        $r14 = new android.graphics.drawable.LayerDrawable;

        $r11 = newarray (android.graphics.drawable.Drawable)[3];

        $r11[0] = $r8;

        $r11[1] = $r2;

        $r10 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable>;

        $r11[2] = $r10;

        specialinvoke $r14.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r11);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable> = $r14;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        $r12 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)>($r1);

        return $r12;
    }

    private com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.drawable.LayerDrawable $r1;
        android.graphics.drawable.InsetDrawable $r3;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r4;
        byte $b1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>();

        if $i0 <= 0 goto label2;

        $z1 = <com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>;

        if $z1 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $r3 = (android.graphics.drawable.InsetDrawable) $r2;

        $r2 = virtualinvoke $r3.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        $r1 = (android.graphics.drawable.LayerDrawable) $r2;

        $b1 = $z0 ^ 1;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>($b1);

        $r4 = (com.google.android.material.shape.MaterialShapeDrawable) $r2;

        return $r4;

     label1:
        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        $b1 = $z0 ^ 1;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>($b1);

        $r4 = (com.google.android.material.shape.MaterialShapeDrawable) $r2;

        return $r4;

     label2:
        return null;
    }

    private com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>(1);

        return $r1;
    }

    private void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.Shapeable $r3;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $r2 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label1:
        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()>();

        if $r2 == null goto label2;

        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()>();

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label2:
        $r3 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.Shapeable getMaskDrawable()>();

        if $r3 == null goto label3;

        $r3 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.Shapeable getMaskDrawable()>();

        interfaceinvoke $r3.<com.google.android.material.shape.Shapeable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label3:
        return;
    }

    private void updateStroke()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1, $r2;
        android.content.res.ColorStateList $r3;
        com.google.android.material.button.MaterialButton $r4;
        int $i0;
        float $f0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()>();

        if $r1 == null goto label3;

        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth>;

        $f0 = (float) $i0;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor>;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,android.content.res.ColorStateList)>($f0, $r3);

        if $r2 == null goto label3;

        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth>;

        $f0 = (float) $i0;

        $z0 = r0.<com.google.android.material.button.MaterialButtonHelper: boolean shouldDrawSurfaceColorStroke>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>($r4, $i0);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,int)>($f0, $i0);

     label3:
        return;
    }

    private android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.drawable.InsetDrawable $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = new android.graphics.drawable.InsetDrawable;

        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetLeft>;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetTop>;

        $i2 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetRight>;

        $i3 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetBottom>;

        specialinvoke $r2.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return $r2;
    }

    public int getCornerRadius()
    {
        int i0;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int cornerRadius>;

        return i0;
    }

    public com.google.android.material.shape.Shapeable getMaskDrawable()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.drawable.LayerDrawable $r1;
        com.google.android.material.shape.Shapeable $r3;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>();

        if $i0 <= 1 goto label2;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>();

        if $i0 <= 2 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(2);

        $r3 = (com.google.android.material.shape.Shapeable) $r2;

        return $r3;

     label1:
        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.LayerDrawable rippleDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $r3 = (com.google.android.material.shape.Shapeable) $r2;

        return $r3;

     label2:
        return null;
    }

    public com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>(0);

        return $r1;
    }

    public android.content.res.ColorStateList getRippleColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor>;

        return r1;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.ShapeAppearanceModel r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        r1 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        return r1;
    }

    public android.content.res.ColorStateList getStrokeColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor>;

        return r1;
    }

    public int getStrokeWidth()
    {
        int i0;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth>;

        return i0;
    }

    public android.content.res.ColorStateList getSupportBackgroundTintList()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint>;

        return r1;
    }

    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode>;

        return r1;
    }

    public boolean isBackgroundOverwritten()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        boolean z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        z0 = r0.<com.google.android.material.button.MaterialButtonHelper: boolean backgroundOverwritten>;

        return z0;
    }

    public boolean isCheckable()
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        boolean z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        z0 = r0.<com.google.android.material.button.MaterialButtonHelper: boolean checkable>;

        return z0;
    }

    public void loadFromAttributes(android.content.res.TypedArray)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.content.Context $r5;
        android.graphics.drawable.Drawable $r7;
        android.content.res.TypedArray $r1;
        android.content.res.ColorStateList $r6;
        com.google.android.material.button.MaterialButton $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        android.graphics.PorterDuff$Mode $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r8;
        float $f0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: android.content.res.TypedArray;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_android_insetLeft>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButtonHelper: int insetLeft> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_android_insetRight>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButtonHelper: int insetRight> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_android_insetTop>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButtonHelper: int insetTop> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_android_insetBottom>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButtonHelper: int insetBottom> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_cornerRadius>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_cornerRadius>;

        $i4 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, $i4);

        r0.<com.google.android.material.button.MaterialButtonHelper: int cornerRadius> = $i0;

        $r2 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int cornerRadius>;

        $f0 = (float) $i0;

        $r2 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float)>($f0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r2);

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean cornerRadiusSet> = 1;

     label1:
        $i0 = <com.google.android.material.R$styleable: int MaterialButton_strokeWidth>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_backgroundTintMode>;

        $i4 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i4);

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r3 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i0, $r3);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode> = $r3;

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r5 = virtualinvoke $r4.<android.widget.Button: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_backgroundTint>;

        $r6 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r5, $r1, $i0);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint> = $r6;

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r5 = virtualinvoke $r4.<android.widget.Button: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_strokeColor>;

        $r6 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r5, $r1, $i0);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor> = $r6;

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r5 = virtualinvoke $r4.<android.widget.Button: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_rippleColor>;

        $r6 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r5, $r1, $i0);

        r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor> = $r6;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_android_checkable>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean checkable> = $z0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_elevation>;

        $i1 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i2 = staticinvoke <b.i.i.y: int u(android.view.View)>($r4);

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i3 = virtualinvoke $r4.<android.widget.Button: int getPaddingTop()>();

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i4 = staticinvoke <b.i.i.y: int t(android.view.View)>($r4);

        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i0 = virtualinvoke $r4.<android.widget.Button: int getPaddingBottom()>();

        $i5 = <com.google.android.material.R$styleable: int MaterialButton_android_background>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i5);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>();

        goto label3;

     label2:
        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r7 = specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()>();

        virtualinvoke $r4.<com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)>($r7);

        $r8 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        if $r8 == null goto label3;

        $f0 = (float) $i1;

        virtualinvoke $r8.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

     label3:
        $r4 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetLeft>;

        $i2 = $i2 + $i1;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetTop>;

        $i3 = $i3 + $i1;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetRight>;

        $i4 = $i4 + $i1;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetBottom>;

        $i0 = $i0 + $i1;

        staticinvoke <b.i.i.y: void b(android.view.View,int,int,int,int)>($r4, $i2, $i3, $i4, $i0);

        return;
    }

    public void setBackgroundColor(int)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setTint(int)>($i0);

     label1:
        return;
    }

    public void setBackgroundOverwritten()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.button.MaterialButton $r1;
        android.graphics.PorterDuff$Mode $r3;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean backgroundOverwritten> = 1;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r2 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>($r2);

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r3);

        return;
    }

    public void setCheckable(boolean)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean checkable> = $z0;

        return;
    }

    public void setCornerRadius(int)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        int $i0, $i1;
        float $f0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $i0 := @parameter0: int;

        $z0 = r0.<com.google.android.material.button.MaterialButtonHelper: boolean cornerRadiusSet>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int cornerRadius>;

        if $i1 == $i0 goto label2;

     label1:
        r0.<com.google.android.material.button.MaterialButtonHelper: int cornerRadius> = $i0;

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean cornerRadiusSet> = 1;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $f0 = (float) $i0;

        $r1 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float)>($f0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label2:
        return;
    }

    public void setRippleColor(android.content.res.ColorStateList)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.drawable.Drawable $r4;
        com.google.android.material.ripple.RippleDrawableCompat $r6;
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.button.MaterialButton $r3;
        android.graphics.drawable.RippleDrawable $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor>;

        if $r2 == $r1 goto label2;

        r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList rippleColor> = $r1;

        $z0 = <com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r4 = virtualinvoke $r3.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $z0 = $r4 instanceof android.graphics.drawable.RippleDrawable;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r4 = virtualinvoke $r3.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $r5 = (android.graphics.drawable.RippleDrawable) $r4;

        $r1 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>($r1);

        virtualinvoke $r5.<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>($r1);

        return;

     label1:
        $z0 = <com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>;

        if $z0 != 0 goto label2;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r4 = virtualinvoke $r3.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $z0 = $r4 instanceof com.google.android.material.ripple.RippleDrawableCompat;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.button.MaterialButton materialButton>;

        $r4 = virtualinvoke $r3.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $r6 = (com.google.android.material.ripple.RippleDrawableCompat) $r4;

        $r1 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>($r1);

        virtualinvoke $r6.<com.google.android.material.ripple.RippleDrawableCompat: void setTintList(android.content.res.ColorStateList)>($r1);

     label2:
        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        return;
    }

    public void setShouldDrawSurfaceColorStroke(boolean)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.button.MaterialButtonHelper: boolean shouldDrawSurfaceColorStroke> = $z0;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void updateStroke()>();

        return;
    }

    public void setStrokeColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList strokeColor> = $r1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void updateStroke()>();

     label1:
        return;
    }

    public void setStrokeWidth(int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonHelper r0;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.button.MaterialButtonHelper: int strokeWidth> = $i0;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonHelper: void updateStroke()>();

     label1:
        return;
    }

    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.button.MaterialButtonHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint> = $r1;

        $r3 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList backgroundTint>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r3, $r1);

     label1:
        return;
    }

    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        android.graphics.PorterDuff$Mode $r1, $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode> = $r1;

        $r3 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        if $r3 == null goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode>;

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode backgroundTintMode>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r3, $r1);

     label1:
        return;
    }

    public void updateMaskBounds(int, int)
    {
        com.google.android.material.button.MaterialButtonHelper r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonHelper;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $r1 = r0.<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable maskDrawable>;

        if $r1 == null goto label1;

        $i0 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetLeft>;

        $i1 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetTop>;

        $i4 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetRight>;

        $i3 = $i3 - $i4;

        $i4 = r0.<com.google.android.material.button.MaterialButtonHelper: int insetBottom>;

        $i2 = $i2 - $i4;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i3, $i2);

     label1:
        return;
    }
}
