public final class com.google.android.gms.internal.ads.zzck extends java.lang.Object
{
    public static javax.crypto.Cipher zzrf;
    public static final java.lang.Object zzrg;
    public static final java.lang.Object zzrh;
    public final java.security.SecureRandom zzre;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.google.android.gms.internal.ads.zzck: java.lang.Object zzrg> = $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.google.android.gms.internal.ads.zzck: java.lang.Object zzrh> = $r0;

        return;
    }

    public void <init>(java.security.SecureRandom)
    {
        java.security.SecureRandom $r1;
        com.google.android.gms.internal.ads.zzck r0;

        r0 := @this: com.google.android.gms.internal.ads.zzck;

        $r1 := @parameter0: java.security.SecureRandom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gms.internal.ads.zzck: java.security.SecureRandom zzre> = null;

        return;
    }

    public static javax.crypto.Cipher getCipher()
    {
        java.lang.Throwable $r2;
        java.lang.Object $r0;
        javax.crypto.Cipher $r1;

        $r0 = <com.google.android.gms.internal.ads.zzck: java.lang.Object zzrh>;

        entermonitor $r0;

     label1:
        $r1 = <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher zzrf>;

        if $r1 != null goto label2;

        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher zzrf> = $r1;

     label2:
        $r1 = <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher zzrf>;

        exitmonitor $r0;

     label3:
        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final byte[] zza(byte[], java.lang.String)
    {
        java.lang.Throwable $r10;
        byte[] $r1, $r3, $r5;
        com.google.android.gms.internal.ads.zzck r0;
        javax.crypto.spec.SecretKeySpec $r7;
        javax.crypto.Cipher $r9;
        java.nio.ByteBuffer $r6;
        java.security.InvalidAlgorithmParameterException $r13;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.NoSuchPaddingException $r15;
        com.google.android.gms.internal.ads.zzcl $r11;
        int $i0;
        java.lang.String $r4;
        javax.crypto.IllegalBlockSizeException $r16;
        java.lang.IllegalArgumentException $r12;
        javax.crypto.BadPaddingException $r14;
        java.security.NoSuchAlgorithmException $r18;
        java.lang.Object $r8;
        java.security.InvalidKeyException $r17;

        r0 := @this: com.google.android.gms.internal.ads.zzck;

        $r3 := @parameter0: byte[];

        $r4 := @parameter1: java.lang.String;

        $i0 = lengthof $r3;

        if $i0 != 16 goto label23;

     label01:
        $r5 = staticinvoke <com.google.android.gms.internal.ads.zzbi: byte[] zza(java.lang.String,boolean)>($r4, 0);

     label02:
        $i0 = lengthof $r5;

        if $i0 <= 16 goto label13;

        $i0 = lengthof $r5;

     label03:
        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r5);

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

     label04:
        $r1 = newarray (byte)[16];

        $i0 = lengthof $r5;

        $i0 = $i0 - 16;

        $r5 = newarray (byte)[$i0];

     label05:
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r1);

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r5);

     label06:
        $r7 = new javax.crypto.spec.SecretKeySpec;

     label07:
        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "AES");

     label08:
        $r8 = <com.google.android.gms.internal.ads.zzck: java.lang.Object zzrg>;

        entermonitor $r8;

     label09:
        $r9 = staticinvoke <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher getCipher()>();

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r7, $r2);

        $r9 = staticinvoke <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher getCipher()>();

        $r3 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        exitmonitor $r8;

     label10:
        return $r3;

     label11:
        $r10 := @caughtexception;

        exitmonitor $r8;

     label12:
        throw $r10;

     label13:
        $r11 = new com.google.android.gms.internal.ads.zzcl;

     label14:
        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck)>(r0);

     label15:
        throw $r11;

     label16:
        $r12 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r12);

        throw $r11;

     label17:
        $r13 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r13);

        throw $r11;

     label18:
        $r14 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r14);

        throw $r11;

     label19:
        $r15 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r15);

        throw $r11;

     label20:
        $r16 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r16);

        throw $r11;

     label21:
        $r17 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r17);

        throw $r11;

     label22:
        $r18 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r18);

        throw $r11;

     label23:
        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck)>(r0);

        throw $r11;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label22;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label22;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label22;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label22;
        catch java.security.InvalidKeyException from label01 to label02 with label21;
        catch java.security.InvalidKeyException from label03 to label04 with label21;
        catch java.security.InvalidKeyException from label05 to label06 with label21;
        catch java.security.InvalidKeyException from label07 to label08 with label21;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label20;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label20;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label20;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label20;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label19;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label19;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label19;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label19;
        catch javax.crypto.BadPaddingException from label01 to label02 with label18;
        catch javax.crypto.BadPaddingException from label03 to label04 with label18;
        catch javax.crypto.BadPaddingException from label05 to label06 with label18;
        catch javax.crypto.BadPaddingException from label07 to label08 with label18;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label17;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label17;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label17;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label17;
        catch java.lang.IllegalArgumentException from label01 to label02 with label16;
        catch java.lang.IllegalArgumentException from label03 to label04 with label16;
        catch java.lang.IllegalArgumentException from label05 to label06 with label16;
        catch java.lang.IllegalArgumentException from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label22;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label22;
        catch java.security.InvalidKeyException from label12 to label13 with label21;
        catch java.security.InvalidKeyException from label14 to label15 with label21;
        catch javax.crypto.IllegalBlockSizeException from label12 to label13 with label20;
        catch javax.crypto.IllegalBlockSizeException from label14 to label15 with label20;
        catch javax.crypto.NoSuchPaddingException from label12 to label13 with label19;
        catch javax.crypto.NoSuchPaddingException from label14 to label15 with label19;
        catch javax.crypto.BadPaddingException from label12 to label13 with label18;
        catch javax.crypto.BadPaddingException from label14 to label15 with label18;
        catch java.security.InvalidAlgorithmParameterException from label12 to label13 with label17;
        catch java.security.InvalidAlgorithmParameterException from label14 to label15 with label17;
        catch java.lang.IllegalArgumentException from label12 to label13 with label16;
        catch java.lang.IllegalArgumentException from label14 to label15 with label16;
    }

    public final java.lang.String zzb(byte[], byte[])
    {
        java.lang.Throwable $r9;
        byte[] $r1, $r2;
        com.google.android.gms.internal.ads.zzck r0;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;
        java.nio.ByteBuffer $r6, $r7;
        javax.crypto.NoSuchPaddingException $r12;
        com.google.android.gms.internal.ads.zzcl $r11;
        int $i0, $i1;
        java.lang.String $r8;
        javax.crypto.IllegalBlockSizeException $r13;
        javax.crypto.BadPaddingException $r10;
        java.security.NoSuchAlgorithmException $r15;
        java.lang.Object $r4;
        java.security.InvalidKeyException $r14;

        r0 := @this: com.google.android.gms.internal.ads.zzck;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = lengthof $r1;

        if $i0 != 16 goto label17;

        $r3 = new javax.crypto.spec.SecretKeySpec;

     label01:
        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, "AES");

     label02:
        $r4 = <com.google.android.gms.internal.ads.zzck: java.lang.Object zzrg>;

        entermonitor $r4;

     label03:
        $r5 = staticinvoke <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher getCipher()>();

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(1, $r3, null);

        $r5 = staticinvoke <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher getCipher()>();

        $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

        $r5 = staticinvoke <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher getCipher()>();

        $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] getIV()>();

        exitmonitor $r4;

     label04:
        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

     label05:
        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r1);

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

     label06:
        $r1 = newarray (byte)[$i0];

     label07:
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r1);

        $r8 = staticinvoke <com.google.android.gms.internal.ads.zzbi: java.lang.String zza(byte[],boolean)>($r1, 0);

     label08:
        return $r8;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor $r4;

     label11:
        throw $r9;

     label12:
        $r10 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r10);

        throw $r11;

     label13:
        $r12 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r12);

        throw $r11;

     label14:
        $r13 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r13);

        throw $r11;

     label15:
        $r14 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r14);

        throw $r11;

     label16:
        $r15 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r15);

        throw $r11;

     label17:
        $r11 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r11.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck)>(r0);

        throw $r11;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label16;
        catch java.security.InvalidKeyException from label01 to label02 with label15;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label13;
        catch javax.crypto.BadPaddingException from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label16;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label16;
        catch java.security.InvalidKeyException from label05 to label06 with label15;
        catch java.security.InvalidKeyException from label07 to label08 with label15;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label14;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label13;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label13;
        catch javax.crypto.BadPaddingException from label05 to label06 with label12;
        catch javax.crypto.BadPaddingException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label16;
        catch java.security.InvalidKeyException from label11 to label12 with label15;
        catch javax.crypto.IllegalBlockSizeException from label11 to label12 with label14;
        catch javax.crypto.NoSuchPaddingException from label11 to label12 with label13;
        catch javax.crypto.BadPaddingException from label11 to label12 with label12;
    }

    public final byte[] zzl(java.lang.String)
    {
        byte[] $r2;
        com.google.android.gms.internal.ads.zzck r0;
        java.lang.IllegalArgumentException $r5;
        java.nio.ByteBuffer $r3;
        byte $b2;
        com.google.android.gms.internal.ads.zzcl $r4;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: com.google.android.gms.internal.ads.zzck;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label01:
        $r2 = staticinvoke <com.google.android.gms.internal.ads.zzbi: byte[] zza(java.lang.String,boolean)>($r1, 0);

     label02:
        $i1 = lengthof $r2;

        if $i1 != 32 goto label08;

     label03:
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r2, 4, 16);

     label04:
        $r2 = newarray (byte)[16];

     label05:
        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r2);

     label06:
        if $i0 >= 16 goto label07;

        $b2 = $r2[$i0];

        $b2 = $b2 ^ 68;

        $r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        return $r2;

     label08:
        $r4 = new com.google.android.gms.internal.ads.zzcl;

     label09:
        specialinvoke $r4.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck)>(r0);

     label10:
        throw $r4;

     label11:
        $r5 := @caughtexception;

        $r4 = new com.google.android.gms.internal.ads.zzcl;

        specialinvoke $r4.<com.google.android.gms.internal.ads.zzcl: void <init>(com.google.android.gms.internal.ads.zzck,java.lang.Throwable)>(r0, $r5);

        goto label12;

     label12:
        throw $r4;

        catch java.lang.IllegalArgumentException from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
    }
}
