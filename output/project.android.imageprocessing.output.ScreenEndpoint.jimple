public class project.android.imageprocessing.output.ScreenEndpoint extends project.android.imageprocessing.GLRenderer implements project.android.imageprocessing.output.GLTextureInputRenderer
{
    public project.android.imageprocessing.FastImageProcessingPipeline rendererContext;

    public void <init>(project.android.imageprocessing.FastImageProcessingPipeline)
    {
        project.android.imageprocessing.output.ScreenEndpoint r0;
        project.android.imageprocessing.FastImageProcessingPipeline $r1;

        r0 := @this: project.android.imageprocessing.output.ScreenEndpoint;

        $r1 := @parameter0: project.android.imageprocessing.FastImageProcessingPipeline;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void <init>()>();

        r0.<project.android.imageprocessing.output.ScreenEndpoint: project.android.imageprocessing.FastImageProcessingPipeline rendererContext> = $r1;

        return;
    }

    public void initWithGLContext()
    {
        project.android.imageprocessing.FastImageProcessingPipeline $r1;
        int $i0, $i1;
        project.android.imageprocessing.output.ScreenEndpoint r0;

        r0 := @this: project.android.imageprocessing.output.ScreenEndpoint;

        $r1 = r0.<project.android.imageprocessing.output.ScreenEndpoint: project.android.imageprocessing.FastImageProcessingPipeline rendererContext>;

        $i0 = virtualinvoke $r1.<project.android.imageprocessing.FastImageProcessingPipeline: int getWidth()>();

        $r1 = r0.<project.android.imageprocessing.output.ScreenEndpoint: project.android.imageprocessing.FastImageProcessingPipeline rendererContext>;

        $i1 = virtualinvoke $r1.<project.android.imageprocessing.FastImageProcessingPipeline: int getHeight()>();

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void setRenderSize(int,int)>($i0, $i1);

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void initWithGLContext()>();

        return;
    }

    public void newTextureReady(int, project.android.imageprocessing.input.GLTextureOutputRenderer, boolean)
    {
        project.android.imageprocessing.input.GLTextureOutputRenderer $r1;
        int $i0;
        project.android.imageprocessing.output.ScreenEndpoint r0;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.output.ScreenEndpoint;

        $i0 := @parameter0: int;

        $r1 := @parameter1: project.android.imageprocessing.input.GLTextureOutputRenderer;

        $z0 := @parameter2: boolean;

        r0.<project.android.imageprocessing.GLRenderer: int texture_in> = $i0;

        $i0 = virtualinvoke $r1.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void setWidth(int)>($i0);

        $i0 = virtualinvoke $r1.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void setHeight(int)>($i0);

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void onDrawFrame()>();

        return;
    }
}
