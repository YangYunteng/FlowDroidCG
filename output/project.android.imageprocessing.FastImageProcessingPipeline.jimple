public class project.android.imageprocessing.FastImageProcessingPipeline extends java.lang.Object implements android.opengl.GLSurfaceView$Renderer
{
    public java.util.List filtersToDestroy;
    public int height;
    public project.android.imageprocessing.RendererListener rendererlistener;
    public boolean rendering;
    public java.util.List rootRenderers;
    public int width;

    public void <init>(project.android.imageprocessing.RendererListener)
    {
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        project.android.imageprocessing.RendererListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r1 := @parameter0: project.android.imageprocessing.RendererListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: boolean rendering> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List filtersToDestroy> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List rootRenderers> = $r2;

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: project.android.imageprocessing.RendererListener rendererlistener> = $r1;

        return;
    }

    private boolean isRendering()
    {
        java.lang.Throwable $r1;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        boolean z0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        entermonitor r0;

     label1:
        z0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: boolean rendering>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void addFilterToDestroy(project.android.imageprocessing.GLRenderer)
    {
        java.lang.Throwable $r4;
        java.util.List $r1, $r2;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        project.android.imageprocessing.GLRenderer $r3;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r3 := @parameter0: project.android.imageprocessing.GLRenderer;

        $r1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List filtersToDestroy>;

        entermonitor $r1;

     label1:
        $r2 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List filtersToDestroy>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addRootRenderer(project.android.imageprocessing.GLRenderer)
    {
        java.lang.Throwable $r3;
        java.util.List $r1;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        project.android.imageprocessing.GLRenderer $r2;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r2 := @parameter0: project.android.imageprocessing.GLRenderer;

        entermonitor r0;

     label1:
        $r1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List rootRenderers>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void convertRenderedImageToBitmap(javax.microedition.khronos.opengles.GL10)
    {
        project.android.imageprocessing.RendererListener $r6;
        android.graphics.Bitmap$Config $r4;
        java.nio.IntBuffer $r2, $r3;
        android.graphics.Bitmap $r5;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        int $i0, $i1, $i2, $i3, $i4;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r1 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $i0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width>;

        $i1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height>;

        $i0 = $i0 * $i1;

        $r2 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>($i0);

        $i0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width>;

        $i1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height>;

        $i0 = $i0 * $i1;

        $r3 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>($i0);

        $i1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width>;

        $i0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>(0, 0, $i1, $i0, 6408, 5121, $r2);

        $i0 = 0;

     label1:
        $i1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height>;

        if $i0 < $i1 goto label2;

        $i0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width>;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r4);

        virtualinvoke $r5.<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>($r3);

        $r6 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: project.android.imageprocessing.RendererListener rendererlistener>;

        interfaceinvoke $r6.<project.android.imageprocessing.RendererListener: void onRenderBitmapCompleted(android.graphics.Bitmap)>($r5);

        return;

     label2:
        $i1 = 0;

     label3:
        $i2 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width>;

        if $i1 < $i2 goto label4;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $i3 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height>;

        $i3 = $i3 - $i0;

        $i4 = -1;

        $i3 = $i3 + $i4;

        $i3 = $i3 * $i2;

        $i3 = $i3 + $i1;

        $i2 = $i2 * $i0;

        $i2 = $i2 + $i1;

        $i2 = virtualinvoke $r2.<java.nio.IntBuffer: int get(int)>($i2);

        virtualinvoke $r3.<java.nio.IntBuffer: java.nio.IntBuffer put(int,int)>($i3, $i2);

        $i1 = $i1 + 1;

        goto label3;
    }

    public int getHeight()
    {
        int i0;
        project.android.imageprocessing.FastImageProcessingPipeline r0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        i0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height>;

        return i0;
    }

    public int getWidth()
    {
        int i0;
        project.android.imageprocessing.FastImageProcessingPipeline r0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        i0 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width>;

        return i0;
    }

    public void onDrawFrame(javax.microedition.khronos.opengles.GL10)
    {
        java.lang.Throwable $r5, $r8;
        java.util.Iterator $r7;
        project.android.imageprocessing.GLRenderer $r4;
        java.util.List $r2, $r6;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        javax.microedition.khronos.opengles.GL10 $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r1 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $z0 = specialinvoke r0.<project.android.imageprocessing.FastImageProcessingPipeline: boolean isRendering()>();

        if $z0 == 0 goto label08;

        $i0 = 0;

     label01:
        $r2 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List rootRenderers>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < $i1 goto label02;

        goto label08;

     label02:
        entermonitor r0;

     label03:
        $r2 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List rootRenderers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (project.android.imageprocessing.GLRenderer) $r3;

        exitmonitor r0;

     label04:
        virtualinvoke $r4.<project.android.imageprocessing.GLRenderer: void onDrawFrame()>();

        $i0 = $i0 + 1;

        goto label01;

     label05:
        $r5 := @caughtexception;

     label06:
        exitmonitor r0;

     label07:
        throw $r5;

     label08:
        $r2 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List filtersToDestroy>;

        entermonitor $r2;

     label09:
        $r6 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List filtersToDestroy>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label12;

        $r6 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List filtersToDestroy>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        exitmonitor $r2;

     label11:
        virtualinvoke r0.<project.android.imageprocessing.FastImageProcessingPipeline: void convertRenderedImageToBitmap(javax.microedition.khronos.opengles.GL10)>($r1);

        return;

     label12:
        $r3 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (project.android.imageprocessing.GLRenderer) $r3;

        virtualinvoke $r4.<project.android.imageprocessing.GLRenderer: void destroy()>();

        goto label10;

     label13:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label14:
        goto label15;

     label15:
        throw $r8;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label11 with label13;
        catch java.lang.Throwable from label12 to label14 with label13;
    }

    public void onSurfaceChanged(javax.microedition.khronos.opengles.GL10, int, int)
    {
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        javax.microedition.khronos.opengles.GL10 $r1;
        int $i0, $i1;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r1 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: int width> = $i0;

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: int height> = $i1;

        return;
    }

    public void onSurfaceCreated(javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.egl.EGLConfig)
    {
        javax.microedition.khronos.opengles.GL10 $r1;
        javax.microedition.khronos.egl.EGLConfig $r2;
        project.android.imageprocessing.FastImageProcessingPipeline r0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r1 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        staticinvoke <android.opengl.GLES20: void glEnable(int)>(3042);

        staticinvoke <android.opengl.GLES20: void glBlendFunc(int,int)>(770, 771);

        return;
    }

    public void pauseRendering()
    {
        java.lang.Throwable $r1;
        project.android.imageprocessing.FastImageProcessingPipeline r0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        entermonitor r0;

     label1:
        r0.<project.android.imageprocessing.FastImageProcessingPipeline: boolean rendering> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeRootRenderer(project.android.imageprocessing.GLRenderer)
    {
        java.lang.Throwable $r3;
        java.util.List $r1;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        project.android.imageprocessing.GLRenderer $r2;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        $r2 := @parameter0: project.android.imageprocessing.GLRenderer;

        entermonitor r0;

     label1:
        $r1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List rootRenderers>;

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>($r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void startRendering()
    {
        java.lang.Throwable $r2;
        java.util.List $r1;
        project.android.imageprocessing.FastImageProcessingPipeline r0;
        int $i0;

        r0 := @this: project.android.imageprocessing.FastImageProcessingPipeline;

        entermonitor r0;

     label1:
        $r1 = r0.<project.android.imageprocessing.FastImageProcessingPipeline: java.util.List rootRenderers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == 0 goto label2;

        r0.<project.android.imageprocessing.FastImageProcessingPipeline: boolean rendering> = 1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
