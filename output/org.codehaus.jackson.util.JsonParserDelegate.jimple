public class org.codehaus.jackson.util.JsonParserDelegate extends org.codehaus.jackson.JsonParser
{
    public org.codehaus.jackson.JsonParser delegate;

    public void <init>(org.codehaus.jackson.JsonParser)
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        specialinvoke r0.<org.codehaus.jackson.JsonParser: void <init>()>();

        r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate> = $r1;

        return;
    }

    public boolean canUseSchema(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema $r2;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean canUseSchema(org.codehaus.jackson.FormatSchema)>($r2);

        return $z0;
    }

    public void clearCurrentToken()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return;
    }

    public void close()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void close()>();

        return;
    }

    public org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature)
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser$Feature $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser$Feature;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature)>($r1);

        return r0;
    }

    public org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature)
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser$Feature $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser$Feature;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature)>($r1);

        return r0;
    }

    public java.math.BigInteger getBigIntegerValue()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        java.math.BigInteger $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.math.BigInteger getBigIntegerValue()>();

        return $r1;
    }

    public byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)
    {
        byte[] $r2;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.Base64Variant $r3;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r3 := @parameter0: org.codehaus.jackson.Base64Variant;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>($r3);

        return $r2;
    }

    public byte getByteValue()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        byte $b0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $b0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: byte getByteValue()>();

        return $b0;
    }

    public org.codehaus.jackson.ObjectCodec getCodec()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.ObjectCodec $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.ObjectCodec getCodec()>();

        return $r1;
    }

    public org.codehaus.jackson.JsonLocation getCurrentLocation()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonLocation $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonLocation getCurrentLocation()>();

        return $r1;
    }

    public java.lang.String getCurrentName()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        java.lang.String $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        return $r1;
    }

    public org.codehaus.jackson.JsonToken getCurrentToken()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonToken $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        return $r1;
    }

    public java.math.BigDecimal getDecimalValue()
    {
        java.math.BigDecimal $r1;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.math.BigDecimal getDecimalValue()>();

        return $r1;
    }

    public double getDoubleValue()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;
        double $d0;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $d0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: double getDoubleValue()>();

        return $d0;
    }

    public float getFloatValue()
    {
        float $f0;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $f0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: float getFloatValue()>();

        return $f0;
    }

    public java.lang.Object getInputSource()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.lang.Object getInputSource()>();

        return $r1;
    }

    public int getIntValue()
    {
        int $i0;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        return $i0;
    }

    public org.codehaus.jackson.JsonToken getLastClearedToken()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonToken $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getLastClearedToken()>();

        return $r1;
    }

    public long getLongValue()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        long $l0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $l0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: long getLongValue()>();

        return $l0;
    }

    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser$NumberType $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser$NumberType getNumberType()>();

        return $r1;
    }

    public java.lang.Number getNumberValue()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        java.lang.Number $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.lang.Number getNumberValue()>();

        return $r1;
    }

    public org.codehaus.jackson.JsonStreamContext getParsingContext()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonStreamContext $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonStreamContext getParsingContext()>();

        return $r1;
    }

    public short getShortValue()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        short $s0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $s0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: short getShortValue()>();

        return $s0;
    }

    public java.lang.String getText()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        java.lang.String $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        return $r1;
    }

    public char[] getTextCharacters()
    {
        char[] $r1;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: char[] getTextCharacters()>();

        return $r1;
    }

    public int getTextLength()
    {
        int $i0;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getTextLength()>();

        return $i0;
    }

    public int getTextOffset()
    {
        int $i0;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getTextOffset()>();

        return $i0;
    }

    public org.codehaus.jackson.JsonLocation getTokenLocation()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonLocation $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonLocation getTokenLocation()>();

        return $r1;
    }

    public boolean hasCurrentToken()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean hasCurrentToken()>();

        return $z0;
    }

    public boolean isClosed()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean isClosed()>();

        return $z0;
    }

    public boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser$Feature $r2;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser$Feature;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)>($r2);

        return $z0;
    }

    public org.codehaus.jackson.JsonToken nextToken()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonToken $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        return $r1;
    }

    public void setCodec(org.codehaus.jackson.ObjectCodec)
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.ObjectCodec $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 := @parameter0: org.codehaus.jackson.ObjectCodec;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonParser: void setCodec(org.codehaus.jackson.ObjectCodec)>($r1);

        return;
    }

    public void setSchema(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema $r1;
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r1);

        return;
    }

    public org.codehaus.jackson.JsonParser skipChildren()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r1 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        return r0;
    }

    public org.codehaus.jackson.Version version()
    {
        org.codehaus.jackson.util.JsonParserDelegate r0;
        org.codehaus.jackson.Version $r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.util.JsonParserDelegate;

        $r2 = r0.<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser delegate>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.Version version()>();

        return $r1;
    }
}
