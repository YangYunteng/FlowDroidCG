public class org.codehaus.jackson.map.deser.StdDeserializers extends java.lang.Object
{
    public final java.util.HashMap _deserializers;

    public void <init>()
    {
        org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer $r7;
        java.lang.Float $r20;
        org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer $r4;
        org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer $r12;
        java.lang.Integer $r18;
        org.codehaus.jackson.map.deser.TimestampDeserializer $r27;
        org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer $r5;
        org.codehaus.jackson.map.deser.FromStringDeserializer $r32;
        org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer $r11;
        java.lang.Character $r17;
        java.lang.Long $r19;
        java.lang.Short $r16;
        org.codehaus.jackson.map.deser.UntypedObjectDeserializer $r2;
        org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer $r6;
        java.lang.Byte $r15;
        boolean $z0;
        org.codehaus.jackson.map.deser.StdDeserializer$StackTraceElementDeserializer $r33;
        org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer $r3;
        org.codehaus.jackson.map.deser.StdDeserializer$SqlDateDeserializer $r26;
        org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer $r23;
        org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer $r8;
        org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer $r22;
        org.codehaus.jackson.map.deser.StdDeserializer$TokenBufferDeserializer $r34;
        java.lang.Double $r21;
        org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer $r28;
        java.util.HashMap $r1;
        java.lang.Iterable $r29;
        java.lang.Boolean $r14;
        org.codehaus.jackson.map.deser.DateDeserializer $r25;
        org.codehaus.jackson.map.deser.StdDeserializers r0;
        org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer $r9;
        java.util.Iterator $r30;
        org.codehaus.jackson.map.deser.StdDeserializer$BigIntegerDeserializer $r24;
        org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer $r10;
        org.codehaus.jackson.map.deser.StdDeserializer$AtomicBooleanDeserializer $r35;
        java.lang.Class $r13;
        java.lang.Object $r31;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap _deserializers> = $r1;

        $r2 = new org.codehaus.jackson.map.deser.UntypedObjectDeserializer;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.UntypedObjectDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r2);

        $r3 = new org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer,java.lang.Class)>($r3, class "Ljava/lang/String;");

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer,java.lang.Class)>($r3, class "Ljava/lang/CharSequence;");

        $r4 = new org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r4);

        $r5 = new org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>(class "Ljava/lang/Boolean;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r5);

        $r6 = new org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>(class "Ljava/lang/Byte;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r6);

        $r7 = new org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer: void <init>(java.lang.Class,java.lang.Short)>(class "Ljava/lang/Short;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r7);

        $r8 = new org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>(class "Ljava/lang/Character;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r8);

        $r9 = new org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer;

        specialinvoke $r9.<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>(class "Ljava/lang/Integer;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r9);

        $r10 = new org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer;

        specialinvoke $r10.<org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer: void <init>(java.lang.Class,java.lang.Long)>(class "Ljava/lang/Long;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r10);

        $r11 = new org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer;

        specialinvoke $r11.<org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>(class "Ljava/lang/Float;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r11);

        $r12 = new org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: void <init>(java.lang.Class,java.lang.Double)>(class "Ljava/lang/Double;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r12);

        $r5 = new org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer;

        $r13 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>($r13, $r14);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r5);

        $r6 = new org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer;

        $r13 = <java.lang.Byte: java.lang.Class TYPE>;

        $r15 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        specialinvoke $r6.<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>($r13, $r15);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r6);

        $r7 = new org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer;

        $r13 = <java.lang.Short: java.lang.Class TYPE>;

        $r16 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        specialinvoke $r7.<org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer: void <init>(java.lang.Class,java.lang.Short)>($r13, $r16);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r7);

        $r8 = new org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer;

        $r13 = <java.lang.Character: java.lang.Class TYPE>;

        $r17 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        specialinvoke $r8.<org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>($r13, $r17);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r8);

        $r9 = new org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer;

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r9.<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>($r13, $r18);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r9);

        $r10 = new org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer;

        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        specialinvoke $r10.<org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer: void <init>(java.lang.Class,java.lang.Long)>($r13, $r19);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r10);

        $r11 = new org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer;

        $r13 = <java.lang.Float: java.lang.Class TYPE>;

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        specialinvoke $r11.<org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>($r13, $r20);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r11);

        $r12 = new org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer;

        $r13 = <java.lang.Double: java.lang.Class TYPE>;

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        specialinvoke $r12.<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: void <init>(java.lang.Class,java.lang.Double)>($r13, $r21);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r12);

        $r22 = new org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer;

        specialinvoke $r22.<org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r22);

        $r23 = new org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer;

        specialinvoke $r23.<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r23);

        $r24 = new org.codehaus.jackson.map.deser.StdDeserializer$BigIntegerDeserializer;

        specialinvoke $r24.<org.codehaus.jackson.map.deser.StdDeserializer$BigIntegerDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r24);

        $r25 = new org.codehaus.jackson.map.deser.DateDeserializer;

        specialinvoke $r25.<org.codehaus.jackson.map.deser.DateDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r25);

        $r26 = new org.codehaus.jackson.map.deser.StdDeserializer$SqlDateDeserializer;

        specialinvoke $r26.<org.codehaus.jackson.map.deser.StdDeserializer$SqlDateDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r26);

        $r27 = new org.codehaus.jackson.map.deser.TimestampDeserializer;

        specialinvoke $r27.<org.codehaus.jackson.map.deser.TimestampDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r27);

        $r28 = new org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer;

        specialinvoke $r28.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r28);

        $r28 = new org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer;

        specialinvoke $r28.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/GregorianCalendar;");

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer,java.lang.Class)>($r28, class "Ljava/util/GregorianCalendar;");

        $r29 = staticinvoke <org.codehaus.jackson.map.deser.FromStringDeserializer: java.lang.Iterable all()>();

        $r30 = interfaceinvoke $r29.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (org.codehaus.jackson.map.deser.FromStringDeserializer) $r31;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r32);

        goto label1;

     label2:
        $r33 = new org.codehaus.jackson.map.deser.StdDeserializer$StackTraceElementDeserializer;

        specialinvoke $r33.<org.codehaus.jackson.map.deser.StdDeserializer$StackTraceElementDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r33);

        $r34 = new org.codehaus.jackson.map.deser.StdDeserializer$TokenBufferDeserializer;

        specialinvoke $r34.<org.codehaus.jackson.map.deser.StdDeserializer$TokenBufferDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r34);

        $r35 = new org.codehaus.jackson.map.deser.StdDeserializer$AtomicBooleanDeserializer;

        specialinvoke $r35.<org.codehaus.jackson.map.deser.StdDeserializer$AtomicBooleanDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>($r35);

        return;
    }

    private void add(org.codehaus.jackson.map.deser.StdDeserializer)
    {
        org.codehaus.jackson.map.deser.StdDeserializers r0;
        java.lang.Class $r2;
        org.codehaus.jackson.map.deser.StdDeserializer $r1;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializers;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.StdDeserializer;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class getValueClass()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer,java.lang.Class)>($r1, $r2);

        return;
    }

    private void add(org.codehaus.jackson.map.deser.StdDeserializer, java.lang.Class)
    {
        org.codehaus.jackson.map.deser.StdDeserializers r0;
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.type.JavaType $r5;
        java.util.HashMap $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.deser.StdDeserializer $r1;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializers;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.StdDeserializer;

        $r3 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap _deserializers>;

        $r4 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);

        return;
    }

    public static java.util.HashMap constructAll()
    {
        org.codehaus.jackson.map.deser.StdDeserializers $r0;
        java.util.HashMap r1;

        $r0 = new org.codehaus.jackson.map.deser.StdDeserializers;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.StdDeserializers: void <init>()>();

        r1 = $r0.<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap _deserializers>;

        return r1;
    }
}
