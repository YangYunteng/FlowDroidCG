public final class org.codehaus.jackson.impl.JsonReadContext extends org.codehaus.jackson.JsonStreamContext
{
    public org.codehaus.jackson.impl.JsonReadContext _child;
    public int _columnNr;
    public java.lang.String _currentName;
    public int _lineNr;
    public final org.codehaus.jackson.impl.JsonReadContext _parent;

    public void <init>(org.codehaus.jackson.impl.JsonReadContext, int, int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0, $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 := @parameter0: org.codehaus.jackson.impl.JsonReadContext;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        specialinvoke r0.<org.codehaus.jackson.JsonStreamContext: void <init>()>();

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child> = null;

        r0.<org.codehaus.jackson.JsonStreamContext: int _type> = $i0;

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _parent> = $r1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _lineNr> = $i1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _columnNr> = $i2;

        $i0 = -1;

        r0.<org.codehaus.jackson.JsonStreamContext: int _index> = $i0;

        return;
    }

    public static org.codehaus.jackson.impl.JsonReadContext createRootContext(int, int)
    {
        int $i0, $i1;
        org.codehaus.jackson.impl.JsonReadContext $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new org.codehaus.jackson.impl.JsonReadContext;

        specialinvoke $r0.<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>(null, 0, $i0, $i1);

        return $r0;
    }

    public final org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0, $r1;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child>;

        if $r1 != null goto label1;

        $r1 = new org.codehaus.jackson.impl.JsonReadContext;

        specialinvoke $r1.<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>(r0, 1, $i0, $i1);

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child> = $r1;

        return $r1;

     label1:
        virtualinvoke $r1.<org.codehaus.jackson.impl.JsonReadContext: void reset(int,int,int)>(1, $i0, $i1);

        return $r1;
    }

    public final org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0, $r1;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child>;

        if $r1 != null goto label1;

        $r1 = new org.codehaus.jackson.impl.JsonReadContext;

        specialinvoke $r1.<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>(r0, 2, $i0, $i1);

        r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _child> = $r1;

        return $r1;

     label1:
        virtualinvoke $r1.<org.codehaus.jackson.impl.JsonReadContext: void reset(int,int,int)>(2, $i0, $i1);

        return $r1;
    }

    public final boolean expectComma()
    {
        int $i0, $i1;
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _index>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.JsonStreamContext: int _index> = $i1;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _type>;

        if $i0 == 0 goto label1;

        if $i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.String getCurrentName()
    {
        java.lang.String r1;
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        r1 = r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName>;

        return r1;
    }

    public volatile org.codehaus.jackson.JsonStreamContext getParent()
    {
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        r0 = virtualinvoke r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext getParent()>();

        return r0;
    }

    public final org.codehaus.jackson.impl.JsonReadContext getParent()
    {
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        r0 = r0.<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext _parent>;

        return r0;
    }

    public final org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object)
    {
        org.codehaus.jackson.impl.JsonReadContext r0;
        int $i0, $i1;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonLocation $r2;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.codehaus.jackson.JsonLocation;

        $i0 = r0.<org.codehaus.jackson.impl.JsonReadContext: int _lineNr>;

        $i1 = r0.<org.codehaus.jackson.impl.JsonReadContext: int _columnNr>;

        specialinvoke $r2.<org.codehaus.jackson.JsonLocation: void <init>(java.lang.Object,long,int,int)>($r1, -1L, $i0, $i1);

        return $r2;
    }

    public final void reset(int, int, int)
    {
        org.codehaus.jackson.impl.JsonReadContext r0;
        int $i0, $i1, $i2;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r0.<org.codehaus.jackson.JsonStreamContext: int _type> = $i2;

        $i2 = -1;

        r0.<org.codehaus.jackson.JsonStreamContext: int _index> = $i2;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _lineNr> = $i0;

        r0.<org.codehaus.jackson.impl.JsonReadContext: int _columnNr> = $i1;

        r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName> = null;

        return;
    }

    public void setCurrentName(java.lang.String)
    {
        java.lang.String $r1;
        org.codehaus.jackson.impl.JsonReadContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName> = $r1;

        return;
    }

    public final java.lang.String toString()
    {
        org.codehaus.jackson.impl.JsonReadContext r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.impl.JsonReadContext;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(64);

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _type>;

        if $i0 == 0 goto label5;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label1;

        goto label6;

     label1:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r2 = r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName>;

        if $r2 == null goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r2 = r0.<org.codehaus.jackson.impl.JsonReadContext: java.lang.String _currentName>;

        staticinvoke <org.codehaus.jackson.util.CharTypes: void appendQuoted(java.lang.StringBuilder,java.lang.String)>($r1, $r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label3;

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label6;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $i0 = virtualinvoke r0.<org.codehaus.jackson.JsonStreamContext: int getCurrentIndex()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label6;

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label6:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
