public class com.google.android.material.appbar.AppBarLayout$BaseBehavior extends com.google.android.material.appbar.HeaderBehavior
{
    public static final int INVALID_POSITION;
    public static final int MAX_OFFSET_ANIMATION_DURATION;
    public java.lang.ref.WeakReference lastNestedScrollingChildRef;
    public int lastStartedType;
    public android.animation.ValueAnimator offsetAnimator;
    public int offsetDelta;
    public int offsetToChildIndexOnLayout;
    public boolean offsetToChildIndexOnLayoutIsMinHeight;
    public float offsetToChildIndexOnLayoutPerc;
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback;

    public void <init>()
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        specialinvoke r0.<com.google.android.material.appbar.HeaderBehavior: void <init>()>();

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout> = $i0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        android.util.AttributeSet $r1;
        int $i0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.google.android.material.appbar.HeaderBehavior: void <init>(android.content.Context,android.util.AttributeSet)>($r2, $r1);

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout> = $i0;

        return;
    }

    public static int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
    {
        int i0;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior $r0;

        $r0 := @parameter0: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        i0 = $r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetDelta>;

        return i0;
    }

    private void addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 $r5;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1;
        android.view.View $r3;
        b.i.i.a.b$a $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r3 := @parameter2: android.view.View;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>();

        $i1 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        $i1 = neg $i1;

        if $i0 == $i1 goto label1;

        $z0 = virtualinvoke $r3.<android.view.View: boolean canScrollVertically(int)>(1);

        if $z0 == 0 goto label1;

        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a m>;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,b.i.i.a.b$a,boolean)>($r1, $r2, $r4, 0);

     label1:
        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>();

        if $i0 == 0 goto label3;

        $i0 = -1;

        $z0 = virtualinvoke $r3.<android.view.View: boolean canScrollVertically(int)>($i0);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>();

        $i0 = neg $i0;

        if $i0 == 0 goto label3;

        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a n>;

        $r5 = new com.google.android.material.appbar.AppBarLayout$BaseBehavior$2;

        specialinvoke $r5.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$2: void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)>(r0, $r1, $r2, $r3, $i0);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a.b$a,java.lang.CharSequence,b.i.i.a.e)>($r1, $r4, null, $r5);

        return;

     label2:
        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a n>;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,b.i.i.a.b$a,boolean)>($r1, $r2, $r4, 1);

     label3:
        return;
    }

    private void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, b.i.i.a.b$a, boolean)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 $r3;
        b.i.i.a.b$a $r2;
        com.google.android.material.appbar.AppBarLayout $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r4 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter2: b.i.i.a.b$a;

        $z0 := @parameter3: boolean;

        $r3 = new com.google.android.material.appbar.AppBarLayout$BaseBehavior$3;

        specialinvoke $r3.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$3: void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean)>(r0, $r4, $z0);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a.b$a,java.lang.CharSequence,b.i.i.a.e)>($r1, $r2, null, $r3);

        return;
    }

    private void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, float)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        byte $b2;
        int $i0, $i1, $i3;
        float $f0, $f1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter2: int;

        $f0 := @parameter3: float;

        $i1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>();

        $i1 = $i1 - $i0;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $b2 = $f0 cmpl 0.0F;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        $f1 = (float) $i1;

        $f0 = $f1 / $f0;

        $f0 = $f0 * 1000.0F;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i1 = $i1 * 3;

        goto label2;

     label1:
        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getHeight()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = $f0 + 1.0F;

        $f0 = $f0 * 150.0F;

        $i1 = (int) $f0;

     label2:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)>($r1, $r2, $i0, $i1);

        return;
    }

    private void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, int)
    {
        android.animation.TimeInterpolator $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 $r5;
        long $l3;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int[] $r6;
        int $i0, $i1, $i2;
        android.animation.ValueAnimator $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>();

        if $i2 != $i0 goto label1;

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        if $r3 == null goto label4;

        $z0 = virtualinvoke $r3.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void cancel()>();

        return;

     label1:
        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        if $r3 != null goto label2;

        $r3 = new android.animation.ValueAnimator;

        specialinvoke $r3.<android.animation.ValueAnimator: void <init>()>();

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator> = $r3;

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        $r4 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        $r5 = new com.google.android.material.appbar.AppBarLayout$BaseBehavior$1;

        specialinvoke $r5.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>(r0, $r1, $r2);

        virtualinvoke $r3.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        goto label3;

     label2:
        virtualinvoke $r3.<android.animation.ValueAnimator: void cancel()>();

     label3:
        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 600);

        $l3 = (long) $i1;

        virtualinvoke $r3.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l3);

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        $r6 = newarray (int)[2];

        $r6[0] = $i2;

        $r6[1] = $i0;

        virtualinvoke $r3.<android.animation.ValueAnimator: void setIntValues(int[])>($r6);

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void start()>();

     label4:
        return;
    }

    private boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.view.View)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int $i0, $i1;
        android.view.View $r3;
        com.google.android.material.appbar.AppBarLayout $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r3 := @parameter2: android.view.View;

        $z0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: boolean hasScrollableChildren()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        $i1 = virtualinvoke $r3.<android.view.View: int getHeight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getHeight()>();

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkFlag(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = $i1 & $i0;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int $i0, $i1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $z0 = $r2 instanceof b.i.i.k;

        if $z0 != 0 goto label3;

        $z0 = $r2 instanceof android.widget.ListView;

        if $z0 != 0 goto label5;

        $z0 = $r2 instanceof android.widget.ScrollView;

        if $z0 == 0 goto label2;

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r2;

     label4:
        return null;

     label5:
        return $r2;
    }

    public static android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout, int)
    {
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout $r0;

        $r0 := @parameter0: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i1 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i2);

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i0 < $i3 goto label2;

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        if $i0 > $i3 goto label2;

        return $r1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout, int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r4;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i2);

        $i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i4 = $i3;

        $i5 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i6 = $i5;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r3;

        $i7 = virtualinvoke $r4.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int getScrollFlags()>();

        $z0 = staticinvoke <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean checkFlag(int,int)>($i7, 32);

        if $z0 == 0 goto label2;

        $i4 = $r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i4 = $i3 - $i4;

        $i3 = $r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i6 = $i5 + $i3;

     label2:
        $i5 = neg $i0;

        if $i4 > $i5 goto label3;

        if $i6 < $i5 goto label3;

        return $i2;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i0 = -1;

        return $i0;
    }

    private int interpolateOffset(com.google.android.material.appbar.AppBarLayout, int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        android.view.animation.Interpolator $r5;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r4;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i4 >= $i2 goto label5;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i4);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r3;

        $r5 = virtualinvoke $r4.<com.google.android.material.appbar.AppBarLayout$LayoutParams: android.view.animation.Interpolator getScrollInterpolator()>();

        $i5 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if $i1 < $i5 goto label4;

        $i5 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        if $i1 > $i5 goto label4;

        if $r5 == null goto label5;

        $i2 = virtualinvoke $r4.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int getScrollFlags()>();

        $i4 = $i2 & 1;

        if $i4 == 0 goto label2;

        $i3 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i4 = $r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i3 = $i3 + $i4;

        $i4 = $r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i3 = $i3 + $i4;

        $i2 = $i2 & 2;

        if $i2 == 0 goto label2;

        $i2 = staticinvoke <b.i.i.y: int q(android.view.View)>($r2);

        $i3 = $i3 - $i2;

     label2:
        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>($r2);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i3 = $i3 - $i2;

     label3:
        if $i3 <= 0 goto label5;

        $i2 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i1 - $i2;

        $f0 = (float) $i3;

        $f1 = (float) $i1;

        $f1 = $f1 / $f0;

        $f1 = interfaceinvoke $r5.<android.view.animation.Interpolator: float getInterpolation(float)>($f1);

        $f0 = $f0 * $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = staticinvoke <java.lang.Integer: int signum(int)>($i0);

        $i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i3 + $i1;

        $i0 = $i0 * $i1;

        return $i0;

     label4:
        $i4 = $i4 + 1;

        goto label1;

     label5:
        return $i0;
    }

    private boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r8;
        com.google.android.material.appbar.AppBarLayout $r2;
        java.util.List $r3;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1;
        android.view.View $r5;
        java.lang.Object $r4;
        com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior $r9;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r7;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r3 = virtualinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependents(android.view.View)>($r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (android.view.View) $r4;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r6;

        $r8 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()>();

        $z0 = $r8 instanceof com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior;

        if $z0 == 0 goto label2;

        $r9 = (com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior) $r8;

        $i0 = virtualinvoke $r9.<com.google.android.material.appbar.HeaderScrollingViewBehavior: int getOverlayTop()>();

        if $i0 == 0 goto label3;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        android.view.ViewGroup$LayoutParams $r4;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r5;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>();

        $i1 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)>($r2, $i0);

        if $i1 < 0 goto label7;

        $r3 = virtualinvoke $r2.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r4;

        $i2 = virtualinvoke $r5.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int getScrollFlags()>();

        $i3 = $i2 & 17;

        if $i3 != 17 goto label7;

        $i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i3 = neg $i3;

        $i4 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i4 = neg $i4;

        $i5 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        $i6 = -1;

        $i5 = $i5 + $i6;

        if $i1 != $i5 goto label1;

        $i1 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i4 = $i4 + $i1;

     label1:
        $z0 = staticinvoke <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean checkFlag(int,int)>($i2, 2);

        if $z0 == 0 goto label2;

        $i1 = staticinvoke <b.i.i.y: int q(android.view.View)>($r3);

        $i4 = $i4 + $i1;

        goto label4;

     label2:
        $z0 = staticinvoke <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean checkFlag(int,int)>($i2, 5);

        if $z0 == 0 goto label4;

        $i1 = staticinvoke <b.i.i.y: int q(android.view.View)>($r3);

        $i1 = $i1 + $i4;

        if $i0 >= $i1 goto label3;

        $i3 = $i1;

        goto label4;

     label3:
        $i4 = $i1;

     label4:
        $z0 = staticinvoke <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean checkFlag(int,int)>($i2, 32);

        if $z0 == 0 goto label5;

        $i2 = $r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i3 = $i3 + $i2;

        $i2 = $r5.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 - $i2;

     label5:
        $i2 = $i4 + $i3;

        $i2 = $i2 / 2;

        if $i0 >= $i2 goto label6;

        $i3 = $i4;

     label6:
        $i0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        $i0 = neg $i0;

        $i0 = staticinvoke <b.i.d.a: int a(int,int,int)>($i3, $i0, 0);

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float)>($r1, $r2, $i0, 0.0F);

     label7:
        return;
    }

    private void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r7;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0;
        android.view.View $r4;
        b.i.i.a.b$a $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r6;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r3 = <b.i.i.a.b$a: b.i.i.a.b$a m>;

        $i0 = virtualinvoke $r3.<b.i.i.a.b$a: int a()>();

        staticinvoke <b.i.i.y: void f(android.view.View,int)>($r1, $i0);

        $r3 = <b.i.i.a.b$a: b.i.i.a.b$a n>;

        $i0 = virtualinvoke $r3.<b.i.i.a.b$a: int a()>();

        staticinvoke <b.i.i.y: void f(android.view.View,int)>($r1, $i0);

        $r4 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r1);

        if $r4 == null goto label3;

        $i0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r5;

        $r7 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()>();

        $z0 = $r7 instanceof com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior;

        if $z0 != 0 goto label2;

        return;

     label2:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>($r1, $r2, $r4);

     label3:
        return;
    }

    private void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, int, boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        android.view.ViewGroup$LayoutParams $r4;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r5;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r3 = staticinvoke <com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)>($r1, $i0);

        if $r3 == null goto label6;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r4;

        $i2 = virtualinvoke $r5.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int getScrollFlags()>();

        $i3 = $i2 & 1;

        $z1 = 0;

        if $i3 == 0 goto label3;

        $i3 = staticinvoke <b.i.i.y: int q(android.view.View)>($r3);

        if $i1 <= 0 goto label2;

        $i1 = $i2 & 12;

        if $i1 == 0 goto label2;

        $i0 = neg $i0;

        $i1 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i1 = $i1 - $i3;

        $i3 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i1 = $i1 - $i3;

        if $i0 < $i1 goto label3;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $i1 = $i2 & 2;

        if $i1 == 0 goto label3;

        $i0 = neg $i0;

        $i1 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i1 = $i1 - $i3;

        $i3 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i1 = $i1 - $i3;

        if $i0 < $i1 goto label3;

        goto label1;

     label3:
        $z2 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()>();

        if $z2 == 0 goto label4;

        $r3 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r2);

        $z1 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean shouldLift(android.view.View)>($r3);

     label4:
        $z1 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)>($z1);

        if $z0 != 0 goto label5;

        if $z1 == 0 goto label6;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r2, $r1);

        if $z0 == 0 goto label6;

     label5:
        virtualinvoke $r1.<android.widget.LinearLayout: void jumpDrawablesToCurrentState()>();

     label6:
        return;
    }

    public volatile boolean canDragView(android.view.View)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: android.view.View;

        $r2 = (com.google.android.material.appbar.AppBarLayout) $r1;

        $z0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canDragView(com.google.android.material.appbar.AppBarLayout)>($r2);

        return $z0;
    }

    public boolean canDragView(com.google.android.material.appbar.AppBarLayout)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback $r2;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0;
        android.view.View $r5;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback: boolean canDrag(com.google.android.material.appbar.AppBarLayout)>($r1);

        return $z0;

     label1:
        $r3 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: java.lang.ref.WeakReference lastNestedScrollingChildRef>;

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (android.view.View) $r4;

        if $r5 == null goto label2;

        $z0 = virtualinvoke $r5.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label2;

        $i0 = -1;

        $z0 = virtualinvoke $r5.<android.view.View: boolean canScrollVertically(int)>($i0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 1;
    }

    public volatile int getMaxDragOffset(android.view.View)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout $r2;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: android.view.View;

        $r2 = (com.google.android.material.appbar.AppBarLayout) $r1;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)>($r2);

        return $i0;
    }

    public int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        com.google.android.material.appbar.AppBarLayout $r1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>();

        $i0 = neg $i0;

        return $i0;
    }

    public volatile int getScrollRangeForDragFling(android.view.View)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout $r2;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: android.view.View;

        $r2 = (com.google.android.material.appbar.AppBarLayout) $r1;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)>($r2);

        return $i0;
    }

    public int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        com.google.android.material.appbar.AppBarLayout $r1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        return $i0;
    }

    public int getTopBottomOffsetForScrollingSibling()
    {
        int $i0, $i1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $i1 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        $i0 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetDelta>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public boolean isOffsetAnimatorRunning()
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        boolean $z0;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        android.view.View $r2;
        com.google.android.material.appbar.AppBarLayout $r3;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 = (com.google.android.material.appbar.AppBarLayout) $r2;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r1, $r3);

        return;
    }

    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        android.view.View $r3;
        com.google.android.material.appbar.AppBarLayout $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r2, $r1);

        $z0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()>();

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r2);

        $z0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean shouldLift(android.view.View)>($r3);

        virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)>($z0);

     label1:
        return;
    }

    public volatile boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, int)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int $i0;
        android.view.View $r2;
        com.google.android.material.appbar.AppBarLayout $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = (com.google.android.material.appbar.AppBarLayout) $r2;

        $z0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>($r1, $r3, $i0);

        return $z0;
    }

    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2;
        android.view.View $r3;
        float $f0, $f1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, $i0);

        $i0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getPendingAction()>();

        $i1 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout>;

        if $i1 < 0 goto label3;

        $i2 = $i0 & 8;

        if $i2 != 0 goto label3;

        $r3 = virtualinvoke $r2.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $i0 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i0 = neg $i0;

        $z1 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean offsetToChildIndexOnLayoutIsMinHeight>;

        if $z1 == 0 goto label1;

        $i1 = staticinvoke <b.i.i.y: int q(android.view.View)>($r3);

        $i2 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i1 = $i1 + $i2;

        goto label2;

     label1:
        $i1 = virtualinvoke $r3.<android.view.View: int getHeight()>();

        $f0 = (float) $i1;

        $f1 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: float offsetToChildIndexOnLayoutPerc>;

        $f0 = $f0 * $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

     label2:
        $i0 = $i0 + $i1;

        virtualinvoke r0.<com.google.android.material.appbar.HeaderBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, $i0);

        goto label9;

     label3:
        if $i0 == 0 goto label9;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label7;

        $i0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>();

        $i0 = neg $i0;

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float)>($r1, $r2, $i0, 0.0F);

        goto label9;

     label6:
        virtualinvoke r0.<com.google.android.material.appbar.HeaderBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, $i0);

        goto label9;

     label7:
        $i0 = $i0 & 1;

        if $i0 == 0 goto label9;

        if $z1 == 0 goto label8;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float)>($r1, $r2, 0, 0.0F);

        goto label9;

     label8:
        virtualinvoke r0.<com.google.android.material.appbar.HeaderBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, 0);

     label9:
        virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: void resetPendingAction()>();

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout> = $i0;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        $i1 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        $i1 = neg $i1;

        $i0 = staticinvoke <b.i.d.a: int a(int,int,int)>($i0, $i1, 0);

        virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: boolean setTopAndBottomOffset(int)>($i0);

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean)>($r1, $r2, $i0, 0, 1);

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: void onOffsetChanged(int)>($i0);

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r1, $r2);

        return $z0;
    }

    public volatile boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, int, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r3;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r3 = (com.google.android.material.appbar.AppBarLayout) $r2;

        $z0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)>($r1, $r3, $i0, $i1, $i2, $i3);

        return $z0;
    }

    public boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i3 := @parameter4: int;

        $i2 := @parameter5: int;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i5 = -2;

        if $i4 != $i5 goto label1;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i3, $i2);

        return 1;

     label1:
        $z0 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)>($r2, $r1, $i0, $i1, $i3, $i2);

        return $z0;
    }

    public volatile void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int, int, int[], int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r5;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int[] $r3;
        int $i0, $i1, $i2;
        android.view.View $r2, $r4;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r4 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 := @parameter5: int[];

        $i2 := @parameter6: int;

        $r5 = (com.google.android.material.appbar.AppBarLayout) $r4;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)>($r1, $r5, $r2, $i0, $i1, $r3, $i2);

        return;
    }

    public void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.view.View, int, int, int[], int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r4;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int[] $r3;
        int $i0, $i1, $i2;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r4 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter2: android.view.View;

        $i1 := @parameter3: int;

        $i0 := @parameter4: int;

        $r3 := @parameter5: int[];

        $i2 := @parameter6: int;

        if $i0 == 0 goto label3;

        if $i0 >= 0 goto label1;

        $i1 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        $i1 = neg $i1;

        $i2 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>();

        $i2 = $i2 + $i1;

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>();

        $i1 = neg $i1;

        $i2 = 0;

     label2:
        if $i1 == $i2 goto label3;

        $i1 = virtualinvoke r0.<com.google.android.material.appbar.HeaderBehavior: int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int)>($r4, $r1, $i0, $i1, $i2);

        $r3[1] = $i1;

     label3:
        $z0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()>();

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean shouldLift(android.view.View)>($r2);

        virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)>($z0);

     label4:
        return;
    }

    public volatile void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int, int, int, int, int, int[])
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r5;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r2, $r4;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r4 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $i4 := @parameter7: int;

        $r3 := @parameter8: int[];

        $r5 = (com.google.android.material.appbar.AppBarLayout) $r4;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[])>($r1, $r5, $r2, $i0, $i1, $i2, $i3, $i4, $r3);

        return;
    }

    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.view.View, int, int, int, int, int, int[])
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r4;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r4 := @parameter2: android.view.View;

        $i4 := @parameter3: int;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $i3 := @parameter7: int;

        $r3 := @parameter8: int[];

        if $i2 >= 0 goto label1;

        $i4 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>();

        $i4 = neg $i4;

        $i4 = virtualinvoke r0.<com.google.android.material.appbar.HeaderBehavior: int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int)>($r1, $r2, $i2, $i4, 0);

        $r3[1] = $i4;

     label1:
        if $i2 != 0 goto label2;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r1, $r2);

     label2:
        return;
    }

    public volatile void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.os.Parcelable)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        android.os.Parcelable $r2;
        android.view.View $r3;
        com.google.android.material.appbar.AppBarLayout $r4;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: android.view.View;

        $r2 := @parameter2: android.os.Parcelable;

        $r4 = (com.google.android.material.appbar.AppBarLayout) $r3;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)>($r1, $r4, $r2);

        return;
    }

    public void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.os.Parcelable)
    {
        android.os.Parcelable $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState $r4;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0;
        float $f0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter2: android.os.Parcelable;

        $z0 = $r2 instanceof com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState;

        if $z0 == 0 goto label1;

        $r4 = (com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState) $r2;

        $r2 = virtualinvoke $r4.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>($r3, $r1, $r2);

        $i0 = $r4.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: int firstVisibleChildIndex>;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout> = $i0;

        $f0 = $r4.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: float firstVisibleChildPercentageShown>;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: float offsetToChildIndexOnLayoutPerc> = $f0;

        $z0 = $r4.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: boolean firstVisibleChildAtMinimumHeight>;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean offsetToChildIndexOnLayoutIsMinHeight> = $z0;

        return;

     label1:
        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>($r3, $r1, $r2);

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetToChildIndexOnLayout> = $i0;

        return;
    }

    public volatile android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        android.os.Parcelable $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        android.view.View $r3;
        com.google.android.material.appbar.AppBarLayout $r4;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: android.view.View;

        $r4 = (com.google.android.material.appbar.AppBarLayout) $r3;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r2, $r4);

        return $r1;
    }

    public android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        android.os.Parcelable $r3;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState $r5;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r4;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r3 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r1, $r2);

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        $z0 = 0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r4 = virtualinvoke $r2.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i2);

        $i3 = virtualinvoke $r4.<android.view.View: int getBottom()>();

        $i3 = $i3 + $i0;

        $i4 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $i4 = $i4 + $i0;

        if $i4 > 0 goto label3;

        if $i3 < 0 goto label3;

        $r5 = new com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState;

        specialinvoke $r5.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: void <init>(android.os.Parcelable)>($r3);

        $r5.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: int firstVisibleChildIndex> = $i2;

        $i0 = staticinvoke <b.i.i.y: int q(android.view.View)>($r4);

        $i1 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i0 = $i0 + $i1;

        if $i3 != $i0 goto label2;

        $z0 = 1;

     label2:
        $r5.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: boolean firstVisibleChildAtMinimumHeight> = $z0;

        $f0 = (float) $i3;

        $i3 = virtualinvoke $r4.<android.view.View: int getHeight()>();

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $r5.<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: float firstVisibleChildPercentageShown> = $f0;

        return $r5;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return $r3;
    }

    public volatile boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        com.google.android.material.appbar.AppBarLayout $r5;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1;
        android.view.View $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r4 := @parameter1: android.view.View;

        $r1 := @parameter2: android.view.View;

        $r2 := @parameter3: android.view.View;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $r5 = (com.google.android.material.appbar.AppBarLayout) $r4;

        $z0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>($r3, $r5, $r1, $r2, $i0, $i1);

        return $z0;
    }

    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.view.View, android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        com.google.android.material.appbar.AppBarLayout $r3;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1;
        android.view.View $r1, $r4;
        boolean $z0;
        android.animation.ValueAnimator $r5;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter2: android.view.View;

        $r4 := @parameter3: android.view.View;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $z0 = virtualinvoke $r3.<com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()>();

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>($r2, $r3, $r1);

        if $z0 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        $r5 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.animation.ValueAnimator offsetAnimator>;

        if $r5 == null goto label4;

        virtualinvoke $r5.<android.animation.ValueAnimator: void cancel()>();

     label4:
        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: java.lang.ref.WeakReference lastNestedScrollingChildRef> = null;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int lastStartedType> = $i1;

        return $z0;
    }

    public volatile void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int $i0;
        android.view.View $r2, $r3;
        com.google.android.material.appbar.AppBarLayout $r4;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $r4 = (com.google.android.material.appbar.AppBarLayout) $r3;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)>($r1, $r4, $r2, $i0);

        return;
    }

    public void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        com.google.android.material.appbar.AppBarLayout $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        int $i0, $i1;
        android.view.View $r2;
        java.lang.ref.WeakReference $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i1 = r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int lastStartedType>;

        if $i1 == 0 goto label1;

        if $i0 != 1 goto label2;

     label1:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r3, $r1);

        $z0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean shouldLift(android.view.View)>($r2);

        virtualinvoke $r1.<com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)>($z0);

     label2:
        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: java.lang.ref.WeakReference lastNestedScrollingChildRef> = $r4;

        return;
    }

    public void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback $r1;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback> = $r1;

        return;
    }

    public volatile int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, int, int, int)
    {
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int $i0, $i1, $i2;
        android.view.View $r2;
        com.google.android.material.appbar.AppBarLayout $r3;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r3 = (com.google.android.material.appbar.AppBarLayout) $r2;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int)>($r1, $r3, $i0, $i1, $i2);

        return $i0;
    }

    public int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.appbar.AppBarLayout $r2;
        com.google.android.material.appbar.AppBarLayout$BaseBehavior r0;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout$BaseBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: com.google.android.material.appbar.AppBarLayout;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i0 := @parameter4: int;

        $i3 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>();

        $i4 = 0;

        if $i2 == 0 goto label6;

        if $i3 < $i2 goto label6;

        if $i3 > $i0 goto label6;

        $i1 = staticinvoke <b.i.d.a: int a(int,int,int)>($i1, $i2, $i0);

        if $i3 == $i1 goto label7;

        $z0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: boolean hasChildWithInterpolator()>();

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)>($r2, $i1);

        goto label2;

     label1:
        $i2 = $i1;

     label2:
        $z0 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: boolean setTopAndBottomOffset(int)>($i2);

        $i4 = $i3 - $i1;

        $i2 = $i1 - $i2;

        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetDelta> = $i2;

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: boolean hasChildWithInterpolator()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout: void dispatchDependentViewsChanged(android.view.View)>($r2);

     label3:
        $i2 = virtualinvoke r0.<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        virtualinvoke $r2.<com.google.android.material.appbar.AppBarLayout: void onOffsetChanged(int)>($i2);

        if $i1 >= $i3 goto label4;

        $b5 = -1;

        goto label5;

     label4:
        $b5 = 1;

     label5:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean)>($r1, $r2, $i1, $b5, 0);

        goto label7;

     label6:
        r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int offsetDelta> = 0;

     label7:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>($r1, $r2);

        return $i4;
    }

    public static void <clinit>()
    {
        <com.google.android.material.appbar.AppBarLayout$BaseBehavior: int MAX_OFFSET_ANIMATION_DURATION> = 600;

        <com.google.android.material.appbar.AppBarLayout$BaseBehavior: int INVALID_POSITION> = -1;

        return;
    }
}
