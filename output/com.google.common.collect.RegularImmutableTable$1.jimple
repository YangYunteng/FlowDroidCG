public final class com.google.common.collect.RegularImmutableTable$1 extends java.lang.Object implements java.util.Comparator
{
    public final java.util.Comparator val$columnComparator;
    public final java.util.Comparator val$rowComparator;

    public void <init>(java.util.Comparator, java.util.Comparator)
    {
        java.util.Comparator $r1, $r2;
        com.google.common.collect.RegularImmutableTable$1 r0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$1;

        $r1 := @parameter0: java.util.Comparator;

        $r2 := @parameter1: java.util.Comparator;

        r0.<com.google.common.collect.RegularImmutableTable$1: java.util.Comparator val$rowComparator> = $r1;

        r0.<com.google.common.collect.RegularImmutableTable$1: java.util.Comparator val$columnComparator> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.google.common.collect.Table$Cell, com.google.common.collect.Table$Cell)
    {
        int $i0;
        com.google.common.collect.Table$Cell $r1, $r2;
        java.lang.Object $r4, $r5;
        java.util.Comparator $r3;
        com.google.common.collect.RegularImmutableTable$1 r0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$1;

        $r1 := @parameter0: com.google.common.collect.Table$Cell;

        $r2 := @parameter1: com.google.common.collect.Table$Cell;

        $r3 = r0.<com.google.common.collect.RegularImmutableTable$1: java.util.Comparator val$rowComparator>;

        if $r3 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r5 = interfaceinvoke $r2.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

     label2:
        if $i0 == 0 goto label3;

        return $i0;

     label3:
        $r3 = r0.<com.google.common.collect.RegularImmutableTable$1: java.util.Comparator val$columnComparator>;

        if $r3 != null goto label4;

        return 0;

     label4:
        $r4 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r5 = interfaceinvoke $r2.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        com.google.common.collect.Table$Cell $r3, $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.RegularImmutableTable$1 r0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.google.common.collect.Table$Cell) $r1;

        $r4 = (com.google.common.collect.Table$Cell) $r2;

        $i0 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$1: int compare(com.google.common.collect.Table$Cell,com.google.common.collect.Table$Cell)>($r3, $r4);

        return $i0;
    }
}
