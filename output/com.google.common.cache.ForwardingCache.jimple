public abstract class com.google.common.cache.ForwardingCache extends com.google.common.collect.ForwardingObject implements com.google.common.cache.Cache
{

    public void <init>()
    {
        com.google.common.cache.ForwardingCache r0;

        r0 := @this: com.google.common.cache.ForwardingCache;

        specialinvoke r0.<com.google.common.collect.ForwardingObject: void <init>()>();

        return;
    }

    public java.util.concurrent.ConcurrentMap asMap()
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r1;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.cache.Cache: java.util.concurrent.ConcurrentMap asMap()>();

        return $r2;
    }

    public void cleanUp()
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        interfaceinvoke $r1.<com.google.common.cache.Cache: void cleanUp()>();

        return;
    }

    public abstract com.google.common.cache.Cache delegate();

    public volatile java.lang.Object delegate()
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        return $r1;
    }

    public java.lang.Object get(java.lang.Object, java.util.concurrent.Callable)
    {
        com.google.common.cache.ForwardingCache r0;
        java.util.concurrent.Callable $r1;
        java.lang.Object $r2;
        com.google.common.cache.Cache $r3;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.concurrent.Callable;

        $r3 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        $r2 = interfaceinvoke $r3.<com.google.common.cache.Cache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)>($r2, $r1);

        return $r2;
    }

    public com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable)
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.collect.ImmutableMap $r3;
        com.google.common.cache.Cache $r2;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        $r3 = interfaceinvoke $r2.<com.google.common.cache.Cache: com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable)>($r1);

        return $r3;
    }

    public java.lang.Object getIfPresent(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r2;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        $r1 = interfaceinvoke $r2.<com.google.common.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>($r1);

        return $r1;
    }

    public void invalidate(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r2;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        interfaceinvoke $r2.<com.google.common.cache.Cache: void invalidate(java.lang.Object)>($r1);

        return;
    }

    public void invalidateAll()
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        interfaceinvoke $r1.<com.google.common.cache.Cache: void invalidateAll()>();

        return;
    }

    public void invalidateAll(java.lang.Iterable)
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r2;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        interfaceinvoke $r2.<com.google.common.cache.Cache: void invalidateAll(java.lang.Iterable)>($r1);

        return;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.ForwardingCache r0;
        java.lang.Object $r1, $r2;
        com.google.common.cache.Cache $r3;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        interfaceinvoke $r3.<com.google.common.cache.Cache: void put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putAll(java.util.Map)
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        interfaceinvoke $r2.<com.google.common.cache.Cache: void putAll(java.util.Map)>($r1);

        return;
    }

    public long size()
    {
        long $l0;
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r1;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        $l0 = interfaceinvoke $r1.<com.google.common.cache.Cache: long size()>();

        return $l0;
    }

    public com.google.common.cache.CacheStats stats()
    {
        com.google.common.cache.ForwardingCache r0;
        com.google.common.cache.Cache $r1;
        com.google.common.cache.CacheStats $r2;

        r0 := @this: com.google.common.cache.ForwardingCache;

        $r1 = virtualinvoke r0.<com.google.common.cache.ForwardingCache: com.google.common.cache.Cache delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.cache.Cache: com.google.common.cache.CacheStats stats()>();

        return $r2;
    }
}
