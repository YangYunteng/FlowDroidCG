public class org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1 extends java.lang.Object
{
    public static final int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As;
    public static final int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id;

    static void <clinit>()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r10;
        java.lang.NoSuchFieldError $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        org.codehaus.jackson.annotate.JsonTypeInfo$As[] $r11;
        int[] $r9;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $r8;
        int $i0;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r12;

        $r8 = staticinvoke <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values()>();

        $i0 = lengthof $r8;

        $r9 = newarray (int)[$i0];

        <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id> = $r9;

     label01:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id>;

        $r10 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $i0 = virtualinvoke $r10.<java.lang.Enum: int ordinal()>();

     label02:
        $r9[$i0] = 1;

     label03:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id>;

        $r10 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS>;

        $i0 = virtualinvoke $r10.<java.lang.Enum: int ordinal()>();

     label04:
        $r9[$i0] = 2;

     label05:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id>;

        $r10 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME>;

        $i0 = virtualinvoke $r10.<java.lang.Enum: int ordinal()>();

     label06:
        $r9[$i0] = 3;

     label07:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id>;

        $r10 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM>;

        $i0 = virtualinvoke $r10.<java.lang.Enum: int ordinal()>();

     label08:
        $r9[$i0] = 4;

     label09:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id>;

        $r10 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE>;

        $i0 = virtualinvoke $r10.<java.lang.Enum: int ordinal()>();

     label10:
        $r9[$i0] = 5;

     label11:
        $r11 = staticinvoke <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As[] values()>();

        $i0 = lengthof $r11;

        $r9 = newarray (int)[$i0];

        <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As> = $r9;

     label12:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As>;

        $r12 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY>;

        $i0 = virtualinvoke $r12.<java.lang.Enum: int ordinal()>();

     label13:
        $r9[$i0] = 1;

     label14:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As>;

        $r12 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY>;

        $i0 = virtualinvoke $r12.<java.lang.Enum: int ordinal()>();

     label15:
        $r9[$i0] = 2;

     label16:
        $r9 = <org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As>;

        $r12 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT>;

        $i0 = virtualinvoke $r12.<java.lang.Enum: int ordinal()>();

     label17:
        $r9[$i0] = 3;

        return;

     label18:
        $r0 := @caughtexception;

        goto label03;

     label19:
        $r1 := @caughtexception;

        goto label05;

     label20:
        $r2 := @caughtexception;

        goto label07;

     label21:
        $r3 := @caughtexception;

        goto label09;

     label22:
        $r4 := @caughtexception;

        goto label11;

     label23:
        $r5 := @caughtexception;

        goto label14;

     label24:
        $r6 := @caughtexception;

        goto label16;

     label25:
        $r7 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label18;
        catch java.lang.NoSuchFieldError from label03 to label04 with label19;
        catch java.lang.NoSuchFieldError from label05 to label06 with label20;
        catch java.lang.NoSuchFieldError from label07 to label08 with label21;
        catch java.lang.NoSuchFieldError from label09 to label10 with label22;
        catch java.lang.NoSuchFieldError from label12 to label13 with label23;
        catch java.lang.NoSuchFieldError from label14 to label15 with label24;
        catch java.lang.NoSuchFieldError from label16 to label17 with label25;
    }
}
