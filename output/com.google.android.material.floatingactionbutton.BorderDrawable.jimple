public class com.google.android.material.floatingactionbutton.BorderDrawable extends android.graphics.drawable.Drawable
{
    public static final float DRAW_STROKE_WIDTH_MULTIPLE;
    public android.content.res.ColorStateList borderTint;
    public float borderWidth;
    public int bottomInnerStrokeColor;
    public int bottomOuterStrokeColor;
    public final android.graphics.RectF boundsRectF;
    public int currentBorderTintColor;
    public boolean invalidateShader;
    public final android.graphics.Paint paint;
    public final com.google.android.material.shape.ShapeAppearancePathProvider pathProvider;
    public final android.graphics.Rect rect;
    public final android.graphics.RectF rectF;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel;
    public final android.graphics.Path shapePath;
    public final com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state;
    public int topInnerStrokeColor;
    public int topOuterStrokeColor;

    public void <init>(com.google.android.material.shape.ShapeAppearanceModel)
    {
        android.graphics.RectF $r5;
        android.graphics.Path $r3;
        android.graphics.Rect $r4;
        com.google.android.material.shape.ShapeAppearancePathProvider $r2;
        com.google.android.material.floatingactionbutton.BorderDrawable$BorderState $r6;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        android.graphics.Paint$Style $r8;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        android.graphics.Paint $r7;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new com.google.android.material.shape.ShapeAppearancePathProvider;

        specialinvoke $r2.<com.google.android.material.shape.ShapeAppearancePathProvider: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearancePathProvider pathProvider> = $r2;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Path shapePath> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Rect rect> = $r4;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF> = $r5;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF boundsRectF> = $r5;

        $r6 = new com.google.android.material.floatingactionbutton.BorderDrawable$BorderState;

        specialinvoke $r6.<com.google.android.material.floatingactionbutton.BorderDrawable$BorderState: void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1)>(r0, null);

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state> = $r6;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader> = 1;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r1;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint> = $r7;

        $r7 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        return;
    }

    private android.graphics.Shader createGradientShader()
    {
        android.graphics.Rect $r2;
        android.graphics.Shader$TileMode $r5;
        android.graphics.LinearGradient $r4;
        float[] $r3;
        int[] $r1;
        int $i0, $i1;
        float $f0, $f1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Rect rect>;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r2);

        $f0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: float borderWidth>;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $r1 = newarray (int)[6];

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int topOuterStrokeColor>;

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = staticinvoke <b.i.c.e: int b(int,int)>($i0, $i1);

        $r1[0] = $i0;

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int topInnerStrokeColor>;

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = staticinvoke <b.i.c.e: int b(int,int)>($i0, $i1);

        $r1[1] = $i0;

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int topInnerStrokeColor>;

        $i0 = staticinvoke <b.i.c.e: int c(int,int)>($i0, 0);

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = staticinvoke <b.i.c.e: int b(int,int)>($i0, $i1);

        $r1[2] = $i0;

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int bottomInnerStrokeColor>;

        $i0 = staticinvoke <b.i.c.e: int c(int,int)>($i0, 0);

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = staticinvoke <b.i.c.e: int b(int,int)>($i0, $i1);

        $r1[3] = $i0;

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int bottomInnerStrokeColor>;

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = staticinvoke <b.i.c.e: int b(int,int)>($i0, $i1);

        $r1[4] = $i0;

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int bottomOuterStrokeColor>;

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = staticinvoke <b.i.c.e: int b(int,int)>($i0, $i1);

        $r1[5] = $i0;

        $r3 = newarray (float)[6];

        $r3[0] = 0.0F;

        $r3[1] = $f0;

        $r3[2] = 0.5F;

        $r3[3] = 0.5F;

        $f0 = 1.0F - $f0;

        $r3[4] = $f0;

        $r3[5] = 1.0F;

        $r4 = new android.graphics.LinearGradient;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i0;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $f1 = (float) $i0;

        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r4.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>(0.0F, $f0, 0.0F, $f1, $r1, $r3, $r5);

        return $r4;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.RectF $r5;
        android.graphics.Rect $r4;
        com.google.android.material.shape.ShapeAppearanceModel $r6;
        android.graphics.Shader $r3;
        float $f0, $f1, $f2;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.google.android.material.shape.CornerSize $r7;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Shader createGradientShader()>();

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r3);

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader> = 0;

     label1:
        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        $f0 = $f0 / 2.0F;

        $r4 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Rect rect>;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r4);

        $r5 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF>;

        $r4 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Rect rect>;

        virtualinvoke $r5.<android.graphics.RectF: void set(android.graphics.Rect)>($r4);

        $r6 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r7 = virtualinvoke $r6.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $r5 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF getBoundsAsRectF()>();

        $f1 = interfaceinvoke $r7.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r5);

        $r5 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF>;

        $f2 = virtualinvoke $r5.<android.graphics.RectF: float width()>();

        $f2 = $f2 / 2.0F;

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f2);

        $r6 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r5 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF getBoundsAsRectF()>();

        $z0 = virtualinvoke $r6.<com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)>($r5);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF>;

        virtualinvoke $r5.<android.graphics.RectF: void inset(float,float)>($f0, $f0);

        $r5 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF>;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f1, $f1, $r2);

     label2:
        return;
    }

    public android.graphics.RectF getBoundsAsRectF()
    {
        android.graphics.RectF $r2;
        android.graphics.Rect $r1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF boundsRectF>;

        $r1 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.Rect)>($r1);

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF boundsRectF>;

        return $r2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        com.google.android.material.floatingactionbutton.BorderDrawable$BorderState r1;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        r1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state>;

        return r1;
    }

    public int getOpacity()
    {
        byte $b0;
        int $i1;
        float $f0;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $f0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: float borderWidth>;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $i1 = -3;

        return $i1;

     label1:
        $i1 = -2;

        return $i1;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.RectF $r2;
        android.graphics.Path $r3;
        android.graphics.Rect $r6;
        com.google.android.material.shape.ShapeAppearancePathProvider $r7;
        com.google.android.material.shape.ShapeAppearanceModel $r4;
        android.graphics.Outline $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        com.google.android.material.shape.CornerSize $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: android.graphics.Outline;

        $r4 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r2 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF getBoundsAsRectF()>();

        $z0 = virtualinvoke $r4.<com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)>($r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r5 = virtualinvoke $r4.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $r2 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF getBoundsAsRectF()>();

        $f0 = interfaceinvoke $r5.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r2);

        $r6 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r1.<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>($r6, $f0);

        return;

     label1:
        $r6 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Rect rect>;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r6);

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF>;

        $r6 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Rect rect>;

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.Rect)>($r6);

        $r7 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearancePathProvider pathProvider>;

        $r4 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF rectF>;

        $r3 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Path shapePath>;

        virtualinvoke $r7.<com.google.android.material.shape.ShapeAppearancePathProvider: void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)>($r4, 1.0F, $r2, $r3);

        $r3 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Path shapePath>;

        $z0 = virtualinvoke $r3.<android.graphics.Path: boolean isConvex()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Path shapePath>;

        virtualinvoke $r1.<android.graphics.Outline: void setConvexPath(android.graphics.Path)>($r3);

     label2:
        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.RectF $r3;
        android.graphics.Rect $r1;
        int $i0;
        float $f0;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r3 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF getBoundsAsRectF()>();

        $z0 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)>($r3);

        if $z0 == 0 goto label1;

        $f0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: float borderWidth>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i0, $i0, $i0);

     label1:
        return 1;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        com.google.android.material.shape.ShapeAppearanceModel r1;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        r1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        return r1;
    }

    public boolean isStateful()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.content.res.ColorStateList borderTint>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 != 0 goto label2;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader> = 1;

        return;
    }

    public boolean onStateChange(int[])
    {
        android.content.res.ColorStateList $r2;
        int[] $r1;
        int $i0, $i1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: int[];

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.content.res.ColorStateList borderTint>;

        if $r2 == null goto label1;

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r1, $i0);

        $i1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        if $i0 == $i1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader> = 1;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor> = $i0;

     label1:
        $z0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label2:
        $z0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader>;

        return $z0;
    }

    public void setAlpha(int)
    {
        int $i0;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        android.graphics.Paint $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void setBorderTint(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        int[] $r2;
        int $i0;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: android.content.res.ColorStateList;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        $i0 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor>;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int currentBorderTintColor> = $i0;

     label1:
        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.content.res.ColorStateList borderTint> = $r1;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader> = 1;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void setBorderWidth(float)
    {
        byte $b0;
        float $f0, $f1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        android.graphics.Paint $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: float borderWidth>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: float borderWidth> = $f0;

        $r1 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        $f0 = $f0 * 1.3333F;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: boolean invalidateShader> = 1;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        android.graphics.Paint $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void setGradientColors(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        com.google.android.material.floatingactionbutton.BorderDrawable r0;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int topOuterStrokeColor> = $i0;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int topInnerStrokeColor> = $i1;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int bottomOuterStrokeColor> = $i2;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: int bottomInnerStrokeColor> = $i3;

        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.floatingactionbutton.BorderDrawable r0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.BorderDrawable;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        r0.<com.google.android.material.floatingactionbutton.BorderDrawable: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r1;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.floatingactionbutton.BorderDrawable: float DRAW_STROKE_WIDTH_MULTIPLE> = 1.3333F;

        return;
    }
}
