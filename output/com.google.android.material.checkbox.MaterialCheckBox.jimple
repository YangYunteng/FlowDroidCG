public class com.google.android.material.checkbox.MaterialCheckBox extends androidx.appcompat.widget.AppCompatCheckBox
{
    public static final int DEF_STYLE_RES;
    public static final int[][] ENABLED_CHECKED_STATES;
    public android.content.res.ColorStateList materialThemeColorsTintList;
    public boolean useMaterialThemeColors;

    static void <clinit>()
    {
        int $i0;
        int[][] $r0;
        int[] $r1;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_CompoundButton_CheckBox>;

        <com.google.android.material.checkbox.MaterialCheckBox: int DEF_STYLE_RES> = $i0;

        $r0 = newarray (int[])[4];

        $r1 = newarray (int)[2];

        $r1[0] = 16842910;

        $r1[1] = 16842912;

        $r0[0] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842910;

        $r1[1] = -16842912;

        $r0[1] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = -16842910;

        $r1[1] = 16842912;

        $r0[2] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = -16842910;

        $r1[1] = -16842912;

        $r0[3] = $r1;

        <com.google.android.material.checkbox.MaterialCheckBox: int[][] ENABLED_CHECKED_STATES> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.google.android.material.checkbox.MaterialCheckBox r0;
        android.content.Context $r1;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.checkbox.MaterialCheckBox r0;
        int $i0;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int checkboxStyle>;

        specialinvoke r0.<com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r3;
        android.content.res.TypedArray $r5;
        android.content.res.ColorStateList $r6;
        android.util.AttributeSet $r4;
        int[] $r1, $r2;
        com.google.android.material.checkbox.MaterialCheckBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.checkbox.MaterialCheckBox: int DEF_STYLE_RES>;

        $r3 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r3, $r4, $i1, $i0);

        specialinvoke r0.<androidx.appcompat.widget.AppCompatCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r4, $i1);

        $r3 = virtualinvoke r0.<android.widget.CheckBox: android.content.Context getContext()>();

        $r1 = <com.google.android.material.R$styleable: int[] MaterialCheckBox>;

        $i0 = <com.google.android.material.checkbox.MaterialCheckBox: int DEF_STYLE_RES>;

        $r2 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r3, $r4, $r1, $i1, $i0, $r2);

        $i1 = <com.google.android.material.R$styleable: int MaterialCheckBox_buttonTint>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label1;

        $i1 = <com.google.android.material.R$styleable: int MaterialCheckBox_buttonTint>;

        $r6 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r3, $r5, $i1);

        staticinvoke <b.i.j.b: void a(android.widget.CompoundButton,android.content.res.ColorStateList)>(r0, $r6);

     label1:
        $i1 = <com.google.android.material.R$styleable: int MaterialCheckBox_useMaterialThemeColors>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.checkbox.MaterialCheckBox: boolean useMaterialThemeColors> = $z0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private android.content.res.ColorStateList getMaterialThemeColorsTintList()
    {
        android.content.res.ColorStateList $r1;
        int[][] $r2;
        int[] $r3;
        com.google.android.material.checkbox.MaterialCheckBox r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        $r1 = r0.<com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList materialThemeColorsTintList>;

        if $r1 != null goto label1;

        $r2 = <com.google.android.material.checkbox.MaterialCheckBox: int[][] ENABLED_CHECKED_STATES>;

        $i0 = lengthof $r2;

        $r3 = newarray (int)[$i0];

        $i0 = <com.google.android.material.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i0);

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i0);

        $i2 = <com.google.android.material.R$attr: int colorOnSurface>;

        $i2 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i2);

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i1, 1.0F);

        $r3[0] = $i1;

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i2, 0.54F);

        $r3[1] = $i1;

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i2, 0.38F);

        $r3[2] = $i1;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i2, 0.38F);

        $r3[3] = $i0;

        $r1 = new android.content.res.ColorStateList;

        $r2 = <com.google.android.material.checkbox.MaterialCheckBox: int[][] ENABLED_CHECKED_STATES>;

        specialinvoke $r1.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r2, $r3);

        r0.<com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList materialThemeColorsTintList> = $r1;

     label1:
        $r1 = r0.<com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList materialThemeColorsTintList>;

        return $r1;
    }

    public boolean isUseMaterialThemeColors()
    {
        com.google.android.material.checkbox.MaterialCheckBox r0;
        boolean z0;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        z0 = r0.<com.google.android.material.checkbox.MaterialCheckBox: boolean useMaterialThemeColors>;

        return z0;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.checkbox.MaterialCheckBox r0;
        android.content.res.ColorStateList $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        specialinvoke r0.<android.widget.CheckBox: void onAttachedToWindow()>();

        $z0 = r0.<com.google.android.material.checkbox.MaterialCheckBox: boolean useMaterialThemeColors>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <b.i.j.b: android.content.res.ColorStateList b(android.widget.CompoundButton)>(r0);

        if $r1 != null goto label1;

        virtualinvoke r0.<com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)>(1);

     label1:
        return;
    }

    public void setUseMaterialThemeColors(boolean)
    {
        com.google.android.material.checkbox.MaterialCheckBox r0;
        android.content.res.ColorStateList $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.checkbox.MaterialCheckBox;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.checkbox.MaterialCheckBox: boolean useMaterialThemeColors> = $z0;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()>();

        staticinvoke <b.i.j.b: void a(android.widget.CompoundButton,android.content.res.ColorStateList)>(r0, $r1);

        return;

     label1:
        staticinvoke <b.i.j.b: void a(android.widget.CompoundButton,android.content.res.ColorStateList)>(r0, null);

        return;
    }
}
