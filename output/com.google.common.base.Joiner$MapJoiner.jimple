public final class com.google.common.base.Joiner$MapJoiner extends java.lang.Object
{
    public final com.google.common.base.Joiner joiner;
    public final java.lang.String keyValueSeparator;

    public void <init>(com.google.common.base.Joiner, java.lang.String)
    {
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.String $r2;
        com.google.common.base.Joiner $r1;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: com.google.common.base.Joiner;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner> = $r1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r0.<com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator> = $r2;

        return;
    }

    public void <init>(com.google.common.base.Joiner, java.lang.String, com.google.common.base.Joiner$1)
    {
        com.google.common.base.Joiner$1 $r3;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.String $r2;
        com.google.common.base.Joiner $r1;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: com.google.common.base.Joiner;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.google.common.base.Joiner$1;

        specialinvoke r0.<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String)>($r1, $r2);

        return;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.lang.Iterable)
    {
        java.util.Iterator $r3;
        java.lang.Appendable $r1;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.Iterable $r2;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>($r1, $r3);

        return $r1;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Iterator)
    {
        java.util.Map$Entry $r4;
        java.util.Iterator $r2;
        java.lang.CharSequence $r6;
        java.lang.Appendable $r1;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.Object $r3;
        java.lang.String $r7;
        boolean $z0;
        com.google.common.base.Joiner $r5;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: java.util.Iterator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        $r5 = r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner>;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = virtualinvoke $r5.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $r7 = r0.<com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator>;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

        $r5 = r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner>;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r5.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner>;

        $r7 = staticinvoke <com.google.common.base.Joiner: java.lang.String access$100(com.google.common.base.Joiner)>($r5);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        $r5 = r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner>;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = virtualinvoke $r5.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $r7 = r0.<com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator>;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

        $r5 = r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner>;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r5.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label1;

     label2:
        return $r1;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Map)
    {
        java.lang.Appendable $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        com.google.common.base.Joiner$MapJoiner r0;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable)>($r1, $r3);

        return $r1;
    }

    public java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable)
    {
        java.util.Iterator $r3;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder $r1;
        java.lang.Iterable $r2;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>($r1, $r3);

        return $r1;
    }

    public java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator)
    {
        java.util.Iterator $r2;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder $r1;
        java.io.IOException $r3;
        java.lang.AssertionError $r4;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.util.Iterator;

     label1:
        virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>($r1, $r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Map)
    {
        java.util.Map $r2;
        java.util.Set $r3;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder $r1;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable)>($r1, $r3);

        return $r1;
    }

    public java.lang.String join(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.String $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.util.Iterator)>($r2);

        return $r3;
    }

    public java.lang.String join(java.util.Iterator)
    {
        java.util.Iterator $r2;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r2 := @parameter0: java.util.Iterator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>($r1, $r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String join(java.util.Map)
    {
        java.util.Map $r1;
        java.util.Set $r2;
        com.google.common.base.Joiner$MapJoiner r0;
        java.lang.String $r3;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r1 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = virtualinvoke r0.<com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.lang.Iterable)>($r2);

        return $r3;
    }

    public com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String)
    {
        com.google.common.base.Joiner$MapJoiner r0, $r1;
        java.lang.String $r3;
        com.google.common.base.Joiner $r2;

        r0 := @this: com.google.common.base.Joiner$MapJoiner;

        $r3 := @parameter0: java.lang.String;

        $r1 = new com.google.common.base.Joiner$MapJoiner;

        $r2 = r0.<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner joiner>;

        $r2 = virtualinvoke $r2.<com.google.common.base.Joiner: com.google.common.base.Joiner useForNull(java.lang.String)>($r3);

        $r3 = r0.<com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator>;

        specialinvoke $r1.<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String)>($r2, $r3);

        return $r1;
    }
}
