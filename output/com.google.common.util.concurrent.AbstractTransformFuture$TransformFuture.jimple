public final class com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture extends com.google.common.util.concurrent.AbstractTransformFuture
{

    public void <init>(com.google.common.util.concurrent.ListenableFuture, com.google.common.base.Function)
    {
        com.google.common.base.Function $r2;
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r2 := @parameter1: com.google.common.base.Function;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractTransformFuture: void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object)>($r1, $r2);

        return;
    }

    public java.lang.Object doTransform(com.google.common.base.Function, java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Function $r2;
        com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture;

        $r2 := @parameter0: com.google.common.base.Function;

        $r1 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke $r2.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r1);

        return $r1;
    }

    public volatile java.lang.Object doTransform(java.lang.Object, java.lang.Object)
    {
        com.google.common.base.Function $r3;
        com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (com.google.common.base.Function) $r2;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(com.google.common.base.Function,java.lang.Object)>($r3, $r1);

        return $r2;
    }

    public void setResult(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>($r1);

        return;
    }
}
