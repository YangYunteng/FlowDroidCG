public final class c.g.a.k.a extends java.lang.Object
{
    public static int a;
    public static int b;
    public final java.util.List c;

    public void <init>()
    {
        c.g.a.k.a r0;
        java.util.ArrayList $r1;

        r0 := @this: c.g.a.k.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<c.g.a.k.a: java.util.List c> = $r1;

        return;
    }

    public static c.g.a.k.a b()
    {
        int $i0, $i1;
        c.g.a.k.a $r0;

        $r0 = new c.g.a.k.a;

        specialinvoke $r0.<c.g.a.k.a: void <init>()>();

        $i0 = <c.g.a.k.a: int b>;

        $i0 = $i0 + 66;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.k.a: int a> = $i0;

        return $r0;
    }

    public final c.g.a.k.a a(java.lang.Iterable)
    {
        java.lang.Throwable $r8, $r9;
        c.g.a.k.a r0;
        java.lang.Iterable $r1;
        java.lang.NullPointerException r10, $r11;
        byte $b2;
        int $i0, $i1, $i3;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;
        java.util.Map$Entry $r4;
        java.util.Iterator $r2;
        java.util.List $r7;
        java.util.AbstractMap$SimpleEntry $r12;
        java.lang.Object $r3;

        r0 := @this: c.g.a.k.a;

        $r1 := @parameter0: java.lang.Iterable;

        $i0 = <c.g.a.k.a: int b>;

        $i0 = $i0 + 110;

        $z0 = 1;

        $i0 = $i0 - 1;

        $i1 = $i0 % 128;

        <c.g.a.k.a: int a> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label01;

        $b2 = 16;

        goto label02;

     label01:
        $b2 = 54;

     label02:
        if $b2 == 16 goto label03;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label07;

     label03:
        interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $r11 = new java.lang.NullPointerException;

     label05:
        r10 = $r11;

     label06:
        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r10;

     label07:
        $i1 = <c.g.a.k.a: int b>;

        $i0 = $i1 ^ 47;

        $i1 = $i1 & 47;

        $i1 = $i1 << 1;

        $i1 = neg $i1;

        $i1 = neg $i1;

        $i3 = -1;

        $i1 = $i1 ^ $i3;

        $i0 = $i0 - $i1;

        $i0 = $i0 - 1;

        $i1 = $i0 % 128;

        <c.g.a.k.a: int a> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label08;

        goto label08;

     label08:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r3;

        $r7 = r0.<c.g.a.k.a: java.util.List c>;

        $r12 = new java.util.AbstractMap$SimpleEntry;

        specialinvoke $r12.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r5, $r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r12);

        $i1 = <c.g.a.k.a: int a>;

        $i0 = $i1 ^ 27;

        $i1 = $i1 & 27;

        $i1 = $i1 << 1;

        $i3 = $i0 | $i1;

        $i3 = $i3 << 1;

        $i0 = $i1 ^ $i0;

        $i0 = $i3 - $i0;

        $i0 = $i0 % 128;

        <c.g.a.k.a: int b> = $i0;

        goto label08;

     label09:
        $i1 = <c.g.a.k.a: int b>;

        $i0 = $i1 ^ 117;

        $i1 = $i1 & 117;

        $i1 = $i1 << 1;

        $i0 = $i0 + $i1;

        $i1 = $i0 % 128;

        <c.g.a.k.a: int a> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label10;

        goto label11;

     label10:
        $z0 = 0;

     label11:
        if $z0 == 0 goto label17;

     label12:
        $i0 = 76 / 0;

     label13:
        return r0;

     label14:
        $r8 := @caughtexception;

        throw $r8;

     label15:
        $r9 := @caughtexception;

        goto label16;

     label16:
        throw $r9;

     label17:
        return r0;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public final c.g.a.k.a a(java.lang.String, java.lang.Integer)
    {
        c.g.a.k.a r0;
        java.lang.Integer $r3;
        java.util.List $r4;
        java.util.AbstractMap$SimpleEntry $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        r0 := @this: c.g.a.k.a;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.Integer;

        $r4 = r0.<c.g.a.k.a: java.util.List c>;

        $r1 = new java.util.AbstractMap$SimpleEntry;

        specialinvoke $r1.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i0 = <c.g.a.k.a: int a>;

        $i1 = $i0 & 25;

        $i0 = $i0 ^ 25;

        $i0 = $i0 | $i1;

        $i0 = neg $i0;

        $i2 = neg $i0;

        $i0 = $i1 & $i2;

        $i1 = $i2 | $i1;

        $i1 = $i0 + $i1;

        $i1 = $i1 % 128;

        <c.g.a.k.a: int b> = $i1;

        return r0;
    }

    public final c.g.a.k.a a(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r4;
        c.g.a.k.a r0;
        java.lang.NullPointerException r6;
        java.util.List $r3;
        java.util.AbstractMap$SimpleEntry $r5;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: c.g.a.k.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<c.g.a.k.a: java.util.List c>;

        $r5 = new java.util.AbstractMap$SimpleEntry;

        specialinvoke $r5.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i0 = <c.g.a.k.a: int b>;

        $i1 = $i0 ^ 21;

        $i0 = $i0 & 21;

        $z0 = 1;

        $i0 = $i0 << 1;

        $i0 = neg $i0;

        $i0 = neg $i0;

        $i2 = -1;

        $i0 = $i0 ^ $i2;

        $i1 = $i1 - $i0;

        $i1 = $i1 - 1;

        $i0 = $i1 % 128;

        <c.g.a.k.a: int a> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label5;

     label3:
        r6 = new java.lang.NullPointerException;

        specialinvoke r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: specialinvoke $u3#16.<java.lang.Object: int hashCode()>()");

        throw r6;

     label4:
        $r4 := @caughtexception;

        throw $r4;

     label5:
        return r0;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public final n.a.b.a a()
    {
        java.lang.Throwable $r7;
        c.g.a.k.a r0;
        java.lang.NullPointerException r11;
        n.a.b.a $r1, $r9;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6;
        boolean $z0, $z1;
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.lang.RuntimeException $r10;
        repackaged.org.json.JSONException $r8;
        java.util.List $r2;
        java.lang.Object $r4;

        r0 := @this: c.g.a.k.a;

        $r9 = new n.a.b.a;

        $r1 = $r9;

        specialinvoke $r9.<n.a.b.a: void <init>()>();

        $r2 = r0.<c.g.a.k.a: java.util.List c>;

     label01:
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $i0 = <c.g.a.k.a: int a>;

        $i1 = $i0 ^ 87;

        $i0 = $i0 & 87;

        $i0 = $i0 | $i1;

        $i0 = $i0 << 1;

        $i1 = neg $i1;

        $i2 = -1;

        $i1 = $i1 ^ $i2;

        $i1 = $i0 - $i1;

        $i1 = $i1 - 1;

        $i1 = $i1 % 128;

        <c.g.a.k.a: int b> = $i1;

     label03:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label04:
        $z1 = 0;

        if $z0 == 0 goto label05;

        $z0 = 0;

        goto label06;

     label05:
        $z0 = 1;

     label06:
        if $z0 == 1 goto label14;

        $i1 = <c.g.a.k.a: int b>;

        $i0 = $i1 | 85;

        $i0 = $i0 << 1;

        $i1 = $i1 ^ 85;

        $i1 = $i0 - $i1;

        $i1 = $i1 % 128;

        <c.g.a.k.a: int a> = $i1;

     label07:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

     label08:
        $r5 = (java.util.Map$Entry) $r4;

     label09:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

     label10:
        $r6 = (java.lang.String) $r4;

     label11:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<n.a.b.a: n.a.b.a a(java.lang.String,java.lang.Object)>($r6, $r4);

     label12:
        $i0 = <c.g.a.k.a: int a>;

        $i1 = $i0 & 19;

        $i2 = -1;

        $i2 = $i1 ^ $i2;

        $i0 = $i0 | 19;

        $i0 = $i0 & $i2;

        $i1 = $i1 << 1;

        $i1 = neg $i1;

        $i2 = neg $i1;

        $i1 = $i0 & $i2;

        $i0 = $i0 | $i2;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.k.a: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label13;

        goto label03;

     label13:
        goto label03;

     label14:
        $i0 = <c.g.a.k.a: int a>;

        $i1 = $i0 ^ 85;

        $i2 = $i0 & 85;

        $i1 = $i1 | $i2;

        $i1 = $i1 << 1;

        $i3 = -1;

        $i2 = $i2 ^ $i3;

        $i0 = $i0 | 85;

        $i0 = $i0 & $i2;

        $i2 = neg $i0;

        $i0 = $i1 ^ $i2;

        $i1 = $i2 & $i1;

        $i1 = $i1 << 1;

        $i1 = $i0 + $i1;

        $i0 = $i1 % 128;

        <c.g.a.k.a: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label15;

        goto label15;

     label15:
        $i1 = <c.g.a.k.a: int a>;

        $i1 = $i1 + 39;

        $i1 = $i1 - 1;

        $i0 = -1;

        $i0 = $i1 | $i0;

        $i0 = $i0 << 1;

        $i2 = -1;

        $i1 = $i1 ^ $i2;

        $i1 = $i0 - $i1;

        $i0 = $i1 % 128;

        <c.g.a.k.a: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label16;

        goto label17;

     label16:
        $z1 = 1;

     label17:
        if $z1 == 0 goto label18;

        return $r1;

     label18:
        r11 = new java.lang.NullPointerException;

        specialinvoke r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: specialinvoke $u1#77.<java.lang.Object: int hashCode()>()");

        throw r11;

     label19:
        $r7 := @caughtexception;

        throw $r7;

     label20:
        $r8 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        goto label21;

     label21:
        throw $r10;

        catch repackaged.org.json.JSONException from label01 to label02 with label20;
        catch repackaged.org.json.JSONException from label03 to label04 with label20;
        catch repackaged.org.json.JSONException from label07 to label08 with label20;
        catch repackaged.org.json.JSONException from label09 to label10 with label20;
        catch repackaged.org.json.JSONException from label11 to label12 with label20;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    public static void <clinit>()
    {
        <c.g.a.k.a: int b> = 1;

        <c.g.a.k.a: int a> = 0;

        return;
    }
}
