public class com.google.common.collect.ImmutableSetMultimap extends com.google.common.collect.ImmutableMultimap implements com.google.common.collect.SetMultimap
{
    public static final long serialVersionUID;
    public final transient com.google.common.collect.ImmutableSet emptySet;
    public transient com.google.common.collect.ImmutableSet entries;
    public transient com.google.common.collect.ImmutableSetMultimap inverse;

    public void <init>(com.google.common.collect.ImmutableMap, int, java.util.Comparator)
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.ImmutableMap $r3;
        int $i0;
        java.util.Comparator $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r3 := @parameter0: com.google.common.collect.ImmutableMap;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.util.Comparator;

        specialinvoke r0.<com.google.common.collect.ImmutableMultimap: void <init>(com.google.common.collect.ImmutableMap,int)>($r3, $i0);

        $r2 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet emptySet(java.util.Comparator)>($r1);

        r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet emptySet> = $r2;

        return;
    }

    public static java.lang.Object a(java.util.function.Function, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.function.Function $r1;

        $r1 := @parameter0: java.util.function.Function;

        $r0 := @parameter1: java.lang.Object;

        $r0 = interfaceinvoke $r1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        return $r0;
    }

    public static void a(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableSetMultimap$Builder, java.lang.Object)
    {
        java.lang.Object $r1, $r4;
        java.util.function.Function $r2, $r3;
        com.google.common.collect.ImmutableSetMultimap$Builder $r0;

        $r2 := @parameter0: java.util.function.Function;

        $r3 := @parameter1: java.util.function.Function;

        $r0 := @parameter2: com.google.common.collect.ImmutableSetMultimap$Builder;

        $r1 := @parameter3: java.lang.Object;

        $r4 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        $r1 = interfaceinvoke $r3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        virtualinvoke $r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r4, $r1);

        return;
    }

    public static com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap, java.util.Comparator)
    {
        java.util.Comparator $r0;
        com.google.common.collect.Multimap $r2;
        com.google.common.collect.ImmutableSetMultimap $r1;

        $r2 := @parameter0: com.google.common.collect.Multimap;

        $r0 := @parameter1: java.util.Comparator;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator)>($r2, $r0);

        return $r1;
    }

    public static java.util.stream.Stream b(java.util.function.Function, java.lang.Object)
    {
        java.util.stream.Stream $r2;
        java.lang.Object $r1;
        c.i.b.c.ic $r3;
        java.util.function.Function $r0;

        $r0 := @parameter0: java.util.function.Function;

        $r1 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke $r0.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        $r2 = (java.util.stream.Stream) $r1;

        $r3 = <c.i.b.c.ic: c.i.b.c.ic a>;

        $r2 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream peek(java.util.function.Consumer)>($r3);

        return $r2;
    }

    public static com.google.common.collect.ImmutableSetMultimap$Builder builder()
    {
        com.google.common.collect.ImmutableSetMultimap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableSetMultimap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableSetMultimap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap)
    {
        com.google.common.collect.Multimap $r1;
        com.google.common.collect.ImmutableSetMultimap $r0;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        $r0 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator)>($r1, null);

        return $r0;
    }

    public static com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap, java.util.Comparator)
    {
        com.google.common.collect.Multimap $r1;
        java.util.Map $r4;
        int $i0, $i1;
        boolean $z0;
        com.google.common.collect.ImmutableSetMultimap $r2;
        java.util.Map$Entry $r8;
        com.google.common.collect.ImmutableSet $r11;
        java.util.Iterator $r6;
        com.google.common.collect.ImmutableMap $r12;
        java.util.Collection $r10;
        java.util.Set $r5;
        com.google.common.collect.ImmutableMap$Builder $r3;
        java.lang.Object $r7, $r9;
        java.util.Comparator $r0;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r1.<com.google.common.collect.Multimap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap of()>();

        return $r2;

     label1:
        $z0 = $r1 instanceof com.google.common.collect.ImmutableSetMultimap;

        if $z0 == 0 goto label2;

        $r2 = (com.google.common.collect.ImmutableSetMultimap) $r1;

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableMultimap: boolean isPartialView()>();

        if $z0 != 0 goto label2;

        return $r2;

     label2:
        $r3 = new com.google.common.collect.ImmutableMap$Builder;

        $r4 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        specialinvoke $r3.<com.google.common.collect.ImmutableMap$Builder: void <init>(int)>($i0);

        $i0 = 0;

        $r4 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.Collection) $r9;

        $r11 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet valueSet(java.util.Comparator,java.util.Collection)>($r0, $r10);

        $z0 = virtualinvoke $r11.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r7, $r11);

        $i1 = virtualinvoke $r11.<java.util.AbstractCollection: int size()>();

        $i0 = $i0 + $i1;

        goto label3;

     label4:
        $r2 = new com.google.common.collect.ImmutableSetMultimap;

        $r12 = virtualinvoke $r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r2.<com.google.common.collect.ImmutableSetMultimap: void <init>(com.google.common.collect.ImmutableMap,int,java.util.Comparator)>($r12, $i0, $r0);

        return $r2;
    }

    public static com.google.common.collect.ImmutableSetMultimap copyOf(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSetMultimap$Builder $r0;
        java.lang.Iterable $r1;
        com.google.common.collect.ImmutableSetMultimap $r2;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 = new com.google.common.collect.ImmutableSetMultimap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableSetMultimap$Builder: void <init>()>();

        $r0 = virtualinvoke $r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Iterable)>($r1);

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r2;
    }

    public static com.google.common.collect.ImmutableSet emptySet(java.util.Comparator)
    {
        com.google.common.collect.ImmutableSet $r1;
        java.util.Comparator $r0;
        com.google.common.collect.RegularImmutableSortedSet $r2;

        $r0 := @parameter0: java.util.Comparator;

        if $r0 != null goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r1;

     label1:
        $r2 = staticinvoke <com.google.common.collect.ImmutableSortedSet: com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator)>($r0);

        return $r2;
    }

    public static java.util.stream.Collector flatteningToImmutableSetMultimap(java.util.function.Function, java.util.function.Function)
    {
        com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys $r5;
        c.i.b.c.ta $r0;
        c.i.b.c.tc $r8;
        java.util.function.Function $r2, $r3;
        c.i.b.c.va $r4;
        java.util.stream.Collector $r7;
        com.google.common.collect.MultimapBuilder$SetMultimapBuilder $r6;
        c.i.b.c.jc $r1;

        $r2 := @parameter0: java.util.function.Function;

        $r3 := @parameter1: java.util.function.Function;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r0 = new c.i.b.c.ta;

        specialinvoke $r0.<c.i.b.c.ta: void <init>(java.util.function.Function)>($r2);

        $r4 = new c.i.b.c.va;

        specialinvoke $r4.<c.i.b.c.va: void <init>(java.util.function.Function)>($r3);

        $r5 = staticinvoke <com.google.common.collect.MultimapBuilder: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys()>();

        $r6 = virtualinvoke $r5.<com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys: com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues()>();

        virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = new c.i.b.c.jc;

        specialinvoke $r1.<c.i.b.c.jc: void <init>(com.google.common.collect.MultimapBuilder$SetMultimapBuilder)>($r6);

        $r7 = staticinvoke <com.google.common.collect.Multimaps: java.util.stream.Collector flatteningToMultimap(java.util.function.Function,java.util.function.Function,java.util.function.Supplier)>($r0, $r4, $r1);

        $r8 = <c.i.b.c.tc: c.i.b.c.tc a>;

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector collectingAndThen(java.util.stream.Collector,java.util.function.Function)>($r7, $r8);

        return $r7;
    }

    private com.google.common.collect.ImmutableSetMultimap invert()
    {
        java.util.Map$Entry $r5;
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.ImmutableSetMultimap$Builder $r1;
        java.lang.Object $r4, $r6;
        com.google.common.collect.UnmodifiableIterator $r3;
        com.google.common.collect.ImmutableSetMultimap r0, $r7;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap$Builder builder()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet entries()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r1.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        $r7 = virtualinvoke $r1.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        $r7.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap inverse> = r0;

        return $r7;
    }

    public static com.google.common.collect.ImmutableSetMultimap of()
    {
        com.google.common.collect.EmptyImmutableSetMultimap r0;

        r0 = <com.google.common.collect.EmptyImmutableSetMultimap: com.google.common.collect.EmptyImmutableSetMultimap INSTANCE>;

        return r0;
    }

    public static com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        com.google.common.collect.ImmutableSetMultimap$Builder $r2;
        com.google.common.collect.ImmutableSetMultimap $r3;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap$Builder builder()>();

        virtualinvoke $r2.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r1, $r0);

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r3;
    }

    public static com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1, $r2, $r3;
        com.google.common.collect.ImmutableSetMultimap$Builder $r4;
        com.google.common.collect.ImmutableSetMultimap $r5;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r4 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap$Builder builder()>();

        virtualinvoke $r4.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r0);

        virtualinvoke $r4.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r5;
    }

    public static com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableSetMultimap$Builder $r6;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5;
        com.google.common.collect.ImmutableSetMultimap $r7;

        $r5 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 := @parameter4: java.lang.Object;

        $r4 := @parameter5: java.lang.Object;

        $r6 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap$Builder builder()>();

        virtualinvoke $r6.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r5, $r0);

        virtualinvoke $r6.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r6.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r7 = virtualinvoke $r6.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r7;
    }

    public static com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableSetMultimap$Builder $r8;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        com.google.common.collect.ImmutableSetMultimap $r9;

        $r7 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 := @parameter4: java.lang.Object;

        $r4 := @parameter5: java.lang.Object;

        $r5 := @parameter6: java.lang.Object;

        $r6 := @parameter7: java.lang.Object;

        $r8 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap$Builder builder()>();

        virtualinvoke $r8.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r7, $r0);

        virtualinvoke $r8.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r8.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r8.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r9;
    }

    public static com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableSetMultimap$Builder $r10;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        com.google.common.collect.ImmutableSetMultimap $r11;

        $r9 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 := @parameter4: java.lang.Object;

        $r4 := @parameter5: java.lang.Object;

        $r5 := @parameter6: java.lang.Object;

        $r6 := @parameter7: java.lang.Object;

        $r7 := @parameter8: java.lang.Object;

        $r8 := @parameter9: java.lang.Object;

        $r10 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap$Builder builder()>();

        virtualinvoke $r10.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r9, $r0);

        virtualinvoke $r10.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r10.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r10.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r5, $r6);

        virtualinvoke $r10.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r11 = virtualinvoke $r10.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r11;
    }

    private void readObject(java.io.ObjectInputStream)
    {
        java.lang.Throwable $r14;
        com.google.common.collect.ImmutableSet$Builder $r5;
        java.io.ObjectInputStream $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.InvalidObjectException $r8;
        java.lang.String $r10;
        com.google.common.collect.ImmutableSetMultimap r0;
        com.google.common.collect.Serialization$FieldSetter $r12;
        com.google.common.collect.ImmutableSet $r7;
        com.google.common.collect.ImmutableMap $r11;
        java.lang.IllegalArgumentException $r13;
        com.google.common.collect.ImmutableMap$Builder $r4;
        java.lang.Object $r2, $r6;
        java.lang.StringBuilder $r9;
        java.util.Comparator $r3;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Comparator) $r2;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        if $i0 < 0 goto label09;

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i1 >= $i0 goto label06;

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $i3 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        if $i3 <= 0 goto label05;

        $r5 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet$Builder valuesBuilder(java.util.Comparator)>($r3);

        $i4 = 0;

     label02:
        if $i4 >= $i3 goto label03;

        $r6 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke $r5.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r6);

        $i4 = $i4 + 1;

        goto label02;

     label03:
        $r7 = virtualinvoke $r5.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        $i4 = virtualinvoke $r7.<java.util.AbstractCollection: int size()>();

        if $i4 != $i3 goto label04;

        virtualinvoke $r4.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r2, $r7);

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label01;

     label04:
        $r8 = new java.io.InvalidObjectException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key-value pairs exist for key ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label05:
        $r8 = new java.io.InvalidObjectException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value count ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label06:
        $r11 = virtualinvoke $r4.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

     label07:
        $r12 = <com.google.common.collect.ImmutableMultimap$FieldSettersHolder: com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER>;

        virtualinvoke $r12.<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,java.lang.Object)>(r0, $r11);

        $r12 = <com.google.common.collect.ImmutableMultimap$FieldSettersHolder: com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER>;

        virtualinvoke $r12.<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,int)>(r0, $i2);

        $r12 = <com.google.common.collect.ImmutableMultimap$FieldSettersHolder: com.google.common.collect.Serialization$FieldSetter EMPTY_SET_FIELD_SETTER>;

        $r7 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet emptySet(java.util.Comparator)>($r3);

        virtualinvoke $r12.<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,java.lang.Object)>(r0, $r7);

        return;

     label08:
        $r13 := @caughtexception;

        $r8 = new java.io.InvalidObjectException;

        $r10 = virtualinvoke $r13.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r10);

        $r14 = virtualinvoke $r8.<java.io.InvalidObjectException: java.lang.Throwable initCause(java.lang.Throwable)>($r13);

        $r8 = (java.io.InvalidObjectException) $r14;

        throw $r8;

     label09:
        $r8 = new java.io.InvalidObjectException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key count ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r10);

        goto label10;

     label10:
        throw $r8;

        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
    }

    public static java.util.stream.Collector toImmutableSetMultimap(java.util.function.Function, java.util.function.Function)
    {
        c.i.b.c.Pa $r4;
        c.i.b.c.W $r6;
        java.util.function.Function $r2, $r3;
        c.i.b.c.ua $r0;
        c.i.b.c.wb $r5;
        java.util.stream.Collector $r1;
        java.util.stream.Collector$Characteristics[] $r7;

        $r2 := @parameter0: java.util.function.Function;

        $r3 := @parameter1: java.util.function.Function;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "keyFunction");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "valueFunction");

        $r4 = <c.i.b.c.Pa: c.i.b.c.Pa a>;

        $r0 = new c.i.b.c.ua;

        specialinvoke $r0.<c.i.b.c.ua: void <init>(java.util.function.Function,java.util.function.Function)>($r2, $r3);

        $r5 = <c.i.b.c.wb: c.i.b.c.wb a>;

        $r6 = <c.i.b.c.W: c.i.b.c.W a>;

        $r7 = newarray (java.util.stream.Collector$Characteristics)[0];

        $r1 = staticinvoke <g.a.b.a: java.util.stream.Collector a(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector$Characteristics[])>($r4, $r0, $r5, $r6, $r7);

        return $r1;
    }

    public static com.google.common.collect.ImmutableSet valueSet(java.util.Comparator, java.util.Collection)
    {
        com.google.common.collect.ImmutableSortedSet $r3;
        com.google.common.collect.ImmutableSet $r2;
        java.util.Collection $r0;
        java.util.Comparator $r1;

        $r1 := @parameter0: java.util.Comparator;

        $r0 := @parameter1: java.util.Collection;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r0);

        return $r2;

     label1:
        $r3 = staticinvoke <com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection)>($r1, $r0);

        return $r3;
    }

    public static com.google.common.collect.ImmutableSet$Builder valuesBuilder(java.util.Comparator)
    {
        com.google.common.collect.ImmutableSortedSet$Builder $r0;
        java.util.Comparator $r1;
        com.google.common.collect.ImmutableSet$Builder $r2;

        $r1 := @parameter0: java.util.Comparator;

        if $r1 != null goto label1;

        $r2 = new com.google.common.collect.ImmutableSet$Builder;

        specialinvoke $r2.<com.google.common.collect.ImmutableSet$Builder: void <init>()>();

        return $r2;

     label1:
        $r0 = new com.google.common.collect.ImmutableSortedSet$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedSet$Builder: void <init>(java.util.Comparator)>($r1);

        return $r0;
    }

    private void writeObject(java.io.ObjectOutputStream)
    {
        java.io.ObjectOutputStream $r1;
        java.util.Comparator $r2;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: java.util.Comparator valueComparator()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        staticinvoke <com.google.common.collect.Serialization: void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)>(r0, $r1);

        return;
    }

    public volatile com.google.common.collect.ImmutableCollection entries()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet entries()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet entries()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap$EntrySet $r2;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 = r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet entries>;

        if $r1 != null goto label1;

        $r2 = new com.google.common.collect.ImmutableSetMultimap$EntrySet;

        specialinvoke $r2.<com.google.common.collect.ImmutableSetMultimap$EntrySet: void <init>(com.google.common.collect.ImmutableSetMultimap)>(r0);

        r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet entries> = $r2;

        return $r2;

     label1:
        return $r1;
    }

    public volatile java.util.Collection entries()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet entries()>();

        return $r1;
    }

    public volatile java.util.Set entries()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet entries()>();

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection get(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet get(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableSet get(java.lang.Object)
    {
        com.google.common.collect.ImmutableSet $r3, $r4;
        com.google.common.collect.ImmutableMap $r2;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (com.google.common.collect.ImmutableSet) $r1;

        $r4 = r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet emptySet>;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r3 = (com.google.common.collect.ImmutableSet) $r1;

        return $r3;
    }

    public volatile java.util.Collection get(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet get(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Set get(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet get(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableMultimap inverse()
    {
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap inverse()>();

        return r0;
    }

    public com.google.common.collect.ImmutableSetMultimap inverse()
    {
        com.google.common.collect.ImmutableSetMultimap r0, $r1;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 = r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap inverse>;

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap invert()>();

        r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap inverse> = $r1;

     label1:
        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableSet removeAll(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public volatile java.util.Collection removeAll(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Set removeAll(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public com.google.common.collect.ImmutableSet replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r2;
        java.lang.Iterable $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public volatile java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        com.google.common.collect.ImmutableSetMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public java.util.Comparator valueComparator()
    {
        com.google.common.collect.ImmutableSortedSet $r3;
        com.google.common.collect.ImmutableSet $r2;
        java.util.Comparator $r1;
        com.google.common.collect.ImmutableSetMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap;

        $r2 = r0.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet emptySet>;

        $z0 = $r2 instanceof com.google.common.collect.ImmutableSortedSet;

        if $z0 == 0 goto label1;

        $r3 = (com.google.common.collect.ImmutableSortedSet) $r2;

        $r1 = virtualinvoke $r3.<com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator()>();

        return $r1;

     label1:
        return null;
    }
}
