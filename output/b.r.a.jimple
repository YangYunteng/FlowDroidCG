public final class b.r.a extends java.lang.Object
{
    public static final java.util.Set a;
    public static final boolean b;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <b.r.a: java.util.Set a> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.version");

        $z0 = staticinvoke <b.r.a: boolean a(java.lang.String)>($r1);

        <b.r.a: boolean b> = $z0;

        return;
    }

    public static java.io.File a(android.content.Context, java.io.File, java.lang.String)
    {
        android.content.Context $r3;
        java.io.IOException $r2;
        java.lang.String $r1;
        java.io.File $r0, $r4;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.io.File;

        $r1 := @parameter2: java.lang.String;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, "code_cache");

     label1:
        staticinvoke <b.r.a: void a(java.io.File)>($r4);

     label2:
        goto label4;

     label3:
        $r4 = new java.io.File;

        $r0 = virtualinvoke $r3.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, "code_cache");

        staticinvoke <b.r.a: void a(java.io.File)>($r4);

     label4:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r1);

        staticinvoke <b.r.a: void a(java.io.File)>($r0);

        return $r0;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch java.io.IOException from label1 to label2 with label5;
    }

    public static java.lang.reflect.Field a(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String $r0;
        java.lang.reflect.Field $r1;

        $r2 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <b.r.a: java.lang.reflect.Field b(java.lang.Object,java.lang.String)>($r2, $r0);

        return $r1;
    }

    public static java.lang.reflect.Method a(java.lang.Object, java.lang.String, java.lang.Class[])
    {
        java.lang.Class[] $r1;
        java.lang.Object $r3;
        java.lang.String $r0;
        java.lang.reflect.Method $r2;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.Class[];

        $r2 = staticinvoke <b.r.a: java.lang.reflect.Method b(java.lang.Object,java.lang.String,java.lang.Class[])>($r3, $r0, $r1);

        return $r2;
    }

    public static void a(android.content.Context)
    {
        android.content.Context $r0;
        long $l2;
        java.io.File $r1, $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.File[] $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.io.File;

        $r2 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "secondary-dexes");

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label7;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing old secondary dex dir (");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r4);

        $r5 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r5 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to list secondary dex dir content (");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r4);

        return;

     label1:
        $i0 = lengthof $r5;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r2 = $r5[$i1];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to delete old file ");

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ");

        $l2 = virtualinvoke $r2.<java.io.File: long length()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r4);

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete old file ");

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r4);

        goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old file ");

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r4);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete secondary dex dir ");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r4);

        return;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old secondary dex dir ");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r4);

     label7:
        return;
    }

    public static void a(android.content.Context, java.io.File, java.io.File, java.lang.String, java.lang.String, boolean)
    {
        java.lang.Throwable $r11, $r16, $r17;
        android.content.Context $r3;
        int $i0;
        java.lang.String $r0, $r6, $r9;
        boolean $z0, $z1;
        b.r.c $r12;
        java.util.Set $r1, $r7;
        java.io.IOException $r2, $r13, $r15;
        java.io.File $r4, $r5;
        java.util.List $r14;
        java.lang.StringBuilder $r8;
        java.lang.ClassLoader $r10;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.io.File;

        $r5 := @parameter2: java.io.File;

        $r6 := @parameter3: java.lang.String;

        $r0 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $r1 = <b.r.a: java.util.Set a>;

        entermonitor $r1;

     label01:
        $r7 = <b.r.a: java.util.Set a>;

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z1 == 0 goto label03;

        exitmonitor $r1;

     label02:
        return;

     label03:
        $r7 = <b.r.a: java.util.Set a>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 20 goto label04;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex is not guaranteed to work in SDK version ");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": SDK version higher than ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(20);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be backed by ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runtime with built-in multidex capabilty but it\'s not the ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("case here: java.vm.version=\"");

        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.version");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r9);

     label04:
        $r10 = staticinvoke <b.r.a: java.lang.ClassLoader c(android.content.Context)>($r3);

        if $r10 != null goto label06;

        exitmonitor $r1;

     label05:
        return;

     label06:
        staticinvoke <b.r.a: void a(android.content.Context)>($r3);

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Something went wrong when trying to clear old MultiDex extraction, continuing without cleaning.", $r11);

     label10:
        $r5 = staticinvoke <b.r.a: java.io.File a(android.content.Context,java.io.File,java.lang.String)>($r3, $r5, $r6);

        $r12 = new b.r.c;

        specialinvoke $r12.<b.r.c: void <init>(java.io.File,java.io.File)>($r4, $r5);

     label11:
        $r13 = null;

     label12:
        $r14 = virtualinvoke $r12.<b.r.c: java.util.List a(android.content.Context,java.lang.String,boolean)>($r3, $r0, 0);

     label13:
        staticinvoke <b.r.a: void a(java.lang.ClassLoader,java.io.File,java.util.List)>($r10, $r5, $r14);

     label14:
        goto label17;

     label15:
        $r15 := @caughtexception;

        if $z0 == 0 goto label24;

     label16:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failed to install extracted secondary dex files, retrying with forced extraction", $r15);

        $r14 = virtualinvoke $r12.<b.r.c: java.util.List a(android.content.Context,java.lang.String,boolean)>($r3, $r0, 1);

        staticinvoke <b.r.a: void a(java.lang.ClassLoader,java.io.File,java.util.List)>($r10, $r5, $r14);

     label17:
        virtualinvoke $r12.<b.r.c: void close()>();

     label18:
        goto label20;

     label19:
        $r13 := @caughtexception;

     label20:
        if $r13 != null goto label23;

     label21:
        exitmonitor $r1;

     label22:
        return;

     label23:
        throw $r13;

     label24:
        throw $r15;

     label25:
        $r16 := @caughtexception;

     label26:
        virtualinvoke $r12.<b.r.c: void close()>();

     label27:
        throw $r16;

     label28:
        $r17 := @caughtexception;

        exitmonitor $r1;

     label29:
        throw $r17;

     label30:
        $r2 := @caughtexception;

        goto label27;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label09 to label11 with label28;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label24 to label25 with label25;
        catch java.io.IOException from label26 to label27 with label30;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label27 to label29 with label28;
    }

    public static void a(java.io.File)
    {
        java.lang.StringBuilder $r0;
        java.io.IOException $r4;
        java.lang.String $r3;
        java.io.File $r1, $r2;
        boolean $z0;

        $r1 := @parameter0: java.io.File;

        virtualinvoke $r1.<java.io.File: boolean mkdir()>();

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label3;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File getParentFile()>();

        if $r2 != null goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create dir ");

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Parent file is null.");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MultiDex", $r3);

        goto label2;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create dir ");

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". parent file is a dir ");

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", a file ");

        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", exists ");

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", readable ");

        $z0 = virtualinvoke $r2.<java.io.File: boolean canRead()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", writable ");

        $z0 = virtualinvoke $r2.<java.io.File: boolean canWrite()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MultiDex", $r3);

     label2:
        $r4 = new java.io.IOException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory ");

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label3:
        return;
    }

    public static void a(java.lang.ClassLoader, java.io.File, java.util.List)
    {
        java.util.List $r1;
        int $i0;
        java.lang.ClassLoader $r0;
        java.io.File $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.ClassLoader;

        $r2 := @parameter1: java.io.File;

        $r1 := @parameter2: java.util.List;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        staticinvoke <b.r.a$b: void a(java.lang.ClassLoader,java.util.List,java.io.File)>($r0, $r1, $r2);

        return;

     label1:
        if $i0 < 14 goto label2;

        staticinvoke <b.r.a$a: void a(java.lang.ClassLoader,java.util.List)>($r0, $r1);

        return;

     label2:
        staticinvoke <b.r.a$c: void a(java.lang.ClassLoader,java.util.List)>($r0, $r1);

     label3:
        return;
    }

    public static void a(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object[];

        staticinvoke <b.r.a: void b(java.lang.Object,java.lang.String,java.lang.Object[])>($r0, $r1, $r2);

        return;
    }

    public static boolean a(java.lang.String)
    {
        java.lang.NumberFormatException $r0;
        java.util.StringTokenizer $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r3, $r4;
        boolean $z0, $z1;

        $r1 := @parameter0: java.lang.String;

        $z0 = 0;

        if $r1 == null goto label07;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ".");

        $z1 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        $r3 = null;

        if $z1 == 0 goto label01;

        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label02;

     label01:
        $r4 = null;

     label02:
        $z1 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label03;

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label03:
        if $r4 == null goto label07;

        if $r3 == null goto label07;

     label04:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label05:
        if $i0 > 2 goto label06;

        if $i0 != 2 goto label07;

        if $i1 < 1 goto label07;

     label06:
        $z0 = 1;

     label07:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VM with version ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        if $z0 == 0 goto label08;

        $r1 = " has multidex support";

        goto label09;

     label08:
        $r1 = " does not have multidex support";

     label09:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r1);

        return $z0;

     label10:
        $r0 := @caughtexception;

        goto label07;

        catch java.lang.NumberFormatException from label04 to label05 with label10;
    }

    public static android.content.pm.ApplicationInfo b(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.RuntimeException $r2;
        android.content.pm.ApplicationInfo $r0;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r0 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failure while trying to obtain ApplicationInfo from Context. Must be running in test mode. Skip patching.", $r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static java.lang.reflect.Field b(java.lang.Object, java.lang.String)
    {
        java.lang.NoSuchFieldException $r0;
        java.lang.Object $r1;
        java.lang.Class $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r2;
        java.lang.reflect.Field $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

     label01:
        if $r3 == null goto label07;

     label02:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.reflect.Field: boolean isAccessible()>();

     label03:
        if $z0 != 0 goto label10;

     label04:
        virtualinvoke $r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label05:
        return $r4;

     label06:
        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label01;

     label07:
        $r0 = new java.lang.NoSuchFieldException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in ");

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.NoSuchFieldException: void <init>(java.lang.String)>($r2);

        goto label08;

     label08:
        throw $r0;

     label09:
        $r0 := @caughtexception;

        goto label06;

     label10:
        return $r4;

        catch java.lang.NoSuchFieldException from label02 to label03 with label09;
        catch java.lang.NoSuchFieldException from label04 to label05 with label09;
    }

    public static transient java.lang.reflect.Method b(java.lang.Object, java.lang.String, java.lang.Class[])
    {
        java.lang.NoSuchMethodException $r1;
        java.lang.Class[] $r0;
        java.util.List $r7;
        java.lang.Object $r2;
        java.lang.Class $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r3;
        java.lang.reflect.Method $r5;
        boolean $z0;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Class[];

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

     label01:
        if $r4 == null goto label07;

     label02:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r3, $r0);

        $z0 = virtualinvoke $r5.<java.lang.reflect.Method: boolean isAccessible()>();

     label03:
        if $z0 != 0 goto label10;

     label04:
        virtualinvoke $r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label05:
        return $r5;

     label06:
        $r4 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label01;

     label07:
        $r1 = new java.lang.NoSuchMethodException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with parameters ");

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in ");

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r3);

        goto label08;

     label08:
        throw $r1;

     label09:
        $r1 := @caughtexception;

        goto label06;

     label10:
        return $r5;

        catch java.lang.NoSuchMethodException from label02 to label03 with label09;
        catch java.lang.NoSuchMethodException from label04 to label05 with label09;
    }

    public static void b(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r1, $r5, $r7;
        java.lang.reflect.Field $r3;
        int $i0, $i1;
        java.lang.Object $r0, $r4;
        java.lang.Class $r6;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <b.r.a: java.lang.reflect.Field b(java.lang.Object,java.lang.String)>($r0, $r2);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        $r5 = (java.lang.Object[]) $r4;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $i0 = lengthof $r5;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r6, $i0);

        $r7 = (java.lang.Object[]) $r4;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r7, 0, $i0);

        $i0 = lengthof $r5;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r7, $i0, $i1);

        virtualinvoke $r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r0, $r7);

        return;
    }

    public static java.lang.ClassLoader c(android.content.Context)
    {
        android.content.Context $r1;
        int $i0;
        java.lang.ClassLoader $r0;
        java.lang.RuntimeException $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r0 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label3;

        $z0 = $r0 instanceof dalvik.system.BaseDexClassLoader;

        if $z0 == 0 goto label4;

        return $r0;

     label3:
        $z0 = $r0 instanceof dalvik.system.DexClassLoader;

        if $z0 != 0 goto label5;

        $z0 = $r0 instanceof dalvik.system.PathClassLoader;

        if $z0 == 0 goto label4;

        return $r0;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MultiDex", "Context class loader is null or not dex-capable. Must be running in test mode. Skip patching.");

        return null;

     label5:
        return $r0;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failure while trying to obtain Context class loader. Must be running in test mode. Skip patching.", $r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label6;
    }

    public static void d(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.RuntimeException $r6;
        java.io.File $r2, $r4;
        java.lang.Exception $r5;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "Installing application");

        $z0 = <b.r.a: boolean b>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "VM has multidex support, MultiDex support library is disabled.");

        return;

     label01:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 4 goto label12;

     label02:
        $r1 = staticinvoke <b.r.a: android.content.pm.ApplicationInfo b(android.content.Context)>($r0);

     label03:
        if $r1 != null goto label06;

     label04:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "No ApplicationInfo available, i.e. running on a test Context: MultiDex support library is disabled.");

     label05:
        return;

     label06:
        $r2 = new java.io.File;

     label07:
        $r3 = $r1.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

     label08:
        $r4 = new java.io.File;

     label09:
        $r3 = $r1.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r3);

        staticinvoke <b.r.a: void a(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>($r0, $r2, $r4, "secondary-dexes", "", 1);

     label10:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "install done");

        return;

     label11:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "MultiDex installation failure", $r5);

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex installation failed (");

        $r3 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label12:
        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDex installation failed. SDK ");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unsupported. Min SDK version is ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r6;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
