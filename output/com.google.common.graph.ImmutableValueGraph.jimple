public final class com.google.common.graph.ImmutableValueGraph extends com.google.common.graph.ConfigurableValueGraph
{

    public void <init>(com.google.common.graph.ValueGraph)
    {
        com.google.common.graph.ValueGraphBuilder $r2;
        com.google.common.graph.ValueGraph $r1;
        com.google.common.collect.ImmutableMap $r3;
        int $i1;
        java.util.Set $r4;
        long $l0;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r1 := @parameter0: com.google.common.graph.ValueGraph;

        $r2 = staticinvoke <com.google.common.graph.ValueGraphBuilder: com.google.common.graph.ValueGraphBuilder 'from'(com.google.common.graph.ValueGraph)>($r1);

        $r3 = staticinvoke <com.google.common.graph.ImmutableValueGraph: com.google.common.collect.ImmutableMap getNodeConnections(com.google.common.graph.ValueGraph)>($r1);

        $r4 = interfaceinvoke $r1.<com.google.common.graph.ValueGraph: java.util.Set edges()>();

        $i1 = interfaceinvoke $r4.<java.util.Set: int size()>();

        $l0 = (long) $i1;

        specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: void <init>(com.google.common.graph.AbstractGraphBuilder,java.util.Map,long)>($r2, $r3, $l0);

        return;
    }

    public static com.google.common.graph.GraphConnections connectionsOf(com.google.common.graph.ValueGraph, java.lang.Object)
    {
        java.util.Set $r3, $r4;
        com.google.common.graph.UndirectedGraphConnections $r7;
        com.google.common.graph.ValueGraph $r2;
        com.google.common.graph.ImmutableValueGraph$1 $r1;
        java.util.Map $r5;
        java.lang.Object $r0;
        com.google.common.graph.DirectedGraphConnections $r6;
        boolean $z0;

        $r2 := @parameter0: com.google.common.graph.ValueGraph;

        $r0 := @parameter1: java.lang.Object;

        $r1 = new com.google.common.graph.ImmutableValueGraph$1;

        specialinvoke $r1.<com.google.common.graph.ImmutableValueGraph$1: void <init>(com.google.common.graph.ValueGraph,java.lang.Object)>($r2, $r0);

        $z0 = interfaceinvoke $r2.<com.google.common.graph.ValueGraph: boolean isDirected()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<com.google.common.graph.ValueGraph: java.util.Set predecessors(java.lang.Object)>($r0);

        $r4 = interfaceinvoke $r2.<com.google.common.graph.ValueGraph: java.util.Set successors(java.lang.Object)>($r0);

        $r5 = staticinvoke <com.google.common.collect.Maps: java.util.Map asMap(java.util.Set,com.google.common.base.Function)>($r4, $r1);

        $r6 = staticinvoke <com.google.common.graph.DirectedGraphConnections: com.google.common.graph.DirectedGraphConnections ofImmutable(java.util.Set,java.util.Map)>($r3, $r5);

        return $r6;

     label1:
        $r3 = interfaceinvoke $r2.<com.google.common.graph.ValueGraph: java.util.Set adjacentNodes(java.lang.Object)>($r0);

        $r5 = staticinvoke <com.google.common.collect.Maps: java.util.Map asMap(java.util.Set,com.google.common.base.Function)>($r3, $r1);

        $r7 = staticinvoke <com.google.common.graph.UndirectedGraphConnections: com.google.common.graph.UndirectedGraphConnections ofImmutable(java.util.Map)>($r5);

        return $r7;
    }

    public static com.google.common.graph.ImmutableValueGraph copyOf(com.google.common.graph.ImmutableValueGraph)
    {
        com.google.common.graph.ImmutableValueGraph $r0;

        $r0 := @parameter0: com.google.common.graph.ImmutableValueGraph;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        return $r0;
    }

    public static com.google.common.graph.ImmutableValueGraph copyOf(com.google.common.graph.ValueGraph)
    {
        com.google.common.graph.ValueGraph $r0;
        com.google.common.graph.ImmutableValueGraph $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.graph.ValueGraph;

        $z0 = $r0 instanceof com.google.common.graph.ImmutableValueGraph;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.graph.ImmutableValueGraph) $r0;

        return $r1;

     label1:
        $r1 = new com.google.common.graph.ImmutableValueGraph;

        specialinvoke $r1.<com.google.common.graph.ImmutableValueGraph: void <init>(com.google.common.graph.ValueGraph)>($r0);

        return $r1;
    }

    public static com.google.common.collect.ImmutableMap getNodeConnections(com.google.common.graph.ValueGraph)
    {
        java.util.Iterator $r3;
        com.google.common.collect.ImmutableMap $r6;
        java.util.Set $r2;
        com.google.common.collect.ImmutableMap$Builder $r1;
        com.google.common.graph.ValueGraph $r0;
        java.lang.Object $r4;
        boolean $z0;
        com.google.common.graph.GraphConnections $r5;

        $r0 := @parameter0: com.google.common.graph.ValueGraph;

        $r1 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r2 = interfaceinvoke $r0.<com.google.common.graph.ValueGraph: java.util.Set nodes()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = staticinvoke <com.google.common.graph.ImmutableValueGraph: com.google.common.graph.GraphConnections connectionsOf(com.google.common.graph.ValueGraph,java.lang.Object)>($r0, $r4);

        virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label1;

     label2:
        $r6 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        return $r6;
    }

    public volatile java.util.Set adjacentNodes(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: java.util.Set adjacentNodes(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile boolean allowsSelfLoops()
    {
        com.google.common.graph.ImmutableValueGraph r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $z0 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean allowsSelfLoops()>();

        return $z0;
    }

    public volatile com.google.common.graph.Graph asGraph()
    {
        com.google.common.graph.ImmutableValueGraph r0;
        com.google.common.graph.ImmutableGraph $r1;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r1 = virtualinvoke r0.<com.google.common.graph.ImmutableValueGraph: com.google.common.graph.ImmutableGraph asGraph()>();

        return $r1;
    }

    public com.google.common.graph.ImmutableGraph asGraph()
    {
        com.google.common.graph.ImmutableValueGraph r0;
        com.google.common.graph.ImmutableGraph $r1;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r1 = new com.google.common.graph.ImmutableGraph;

        specialinvoke $r1.<com.google.common.graph.ImmutableGraph: void <init>(com.google.common.graph.BaseGraph)>(r0);

        return $r1;
    }

    public volatile java.lang.Object edgeValueOrDefault(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2, $r3;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: java.lang.Object edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r1, $r2);

        return $r3;
    }

    public volatile boolean hasEdgeConnecting(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.graph.ImmutableValueGraph r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean hasEdgeConnecting(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public volatile boolean isDirected()
    {
        com.google.common.graph.ImmutableValueGraph r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $z0 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean isDirected()>();

        return $z0;
    }

    public volatile com.google.common.graph.ElementOrder nodeOrder()
    {
        com.google.common.graph.ElementOrder $r1;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r1 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.ElementOrder nodeOrder()>();

        return $r1;
    }

    public volatile java.util.Set nodes()
    {
        java.util.Set $r1;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r1 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: java.util.Set nodes()>();

        return $r1;
    }

    public volatile java.util.Set predecessors(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: java.util.Set predecessors(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Set successors(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.graph.ImmutableValueGraph r0;

        r0 := @this: com.google.common.graph.ImmutableValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: java.util.Set successors(java.lang.Object)>($r2);

        return $r1;
    }
}
