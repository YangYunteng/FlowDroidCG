public final class c.k.a.w extends java.lang.Object
{
    public static final javax.lang.model.element.Modifier a;

    static void <clinit>()
    {
        java.lang.IllegalArgumentException $r1;
        javax.lang.model.element.Modifier $r0;

     label1:
        $r0 = staticinvoke <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier valueOf(java.lang.String)>("DEFAULT");

     label2:
        goto label4;

     label3:
        $r0 = null;

     label4:
        <c.k.a.w: javax.lang.model.element.Modifier a> = $r0;

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
    }

    public static transient java.lang.Object a(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        java.lang.NullPointerException $r3;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object[];

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.NullPointerException;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r0);

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public static java.lang.String a(char)
    {
        java.lang.Object[] $r0;
        int $i1;
        char $c0;
        java.lang.String $r2;
        java.lang.Integer $r1;
        boolean $z0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 == 12 goto label10;

        $i1 = (int) $c0;

        if $i1 == 13 goto label09;

        $i1 = (int) $c0;

        if $i1 == 34 goto label08;

        $i1 = (int) $c0;

        if $i1 == 39 goto label07;

        $i1 = (int) $c0;

        if $i1 == 92 goto label06;

        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label03;
            default: goto label01;
        };

     label01:
        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(char)>($c0);

        if $z0 == 0 goto label02;

        $r0 = newarray (java.lang.Object)[1];

        $i1 = (int) $c0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", $r0);

        return $r2;

     label02:
        $r2 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c0);

        return $r2;

     label03:
        return "\\n";

     label04:
        return "\\t";

     label05:
        return "\\b";

     label06:
        return "\\\\";

     label07:
        return "\\\'";

     label08:
        return "\"";

     label09:
        return "\\r";

     label10:
        return "\\f";
    }

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        char $c2;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r0, $r2, $r3;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        $r1 = $r4;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + 2;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 != 39 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        goto label4;

     label2:
        $i1 = (int) $c2;

        if $i1 != 34 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

        goto label4;

     label3:
        $r3 = staticinvoke <c.k.a.w: java.lang.String a(char)>($c2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = (int) $c2;

        if $i1 != 10 goto label4;

        $i1 = $i0 + 1;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 >= $i3 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+ \"");

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String a(java.lang.String, java.util.List)
    {
        java.util.List $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        java.lang.String $r1, $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.List;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = 1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.util.Map a(java.util.Map)
    {
        java.util.LinkedHashMap $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r1);

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        return $r1;
    }

    public static java.util.Set a(java.util.Set, java.util.Set)
    {
        java.util.Set $r0, $r1;
        java.util.LinkedHashSet $r2;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.util.Set;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r0);

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        return $r2;
    }

    public static transient void a(java.util.Set, javax.lang.model.element.Modifier[])
    {
        java.lang.Object[] $r4;
        javax.lang.model.element.Modifier $r1, $r3;
        java.util.Set $r2;
        javax.lang.model.element.Modifier[] $r0;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        boolean $z0;

        $r2 := @parameter0: java.util.Set;

        $r0 := @parameter1: javax.lang.model.element.Modifier[];

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = $r0[$i1];

        if $r3 != null goto label2;

        $r1 = <c.k.a.w: javax.lang.model.element.Modifier a>;

        if $r1 != null goto label2;

        goto label3;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $i2 = $i2 + 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $i2 != 1 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r2;

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r0);

        $r4[1] = $r5;

        staticinvoke <c.k.a.w: void a(boolean,java.lang.String,java.lang.Object[])>($z0, "modifiers %s must contain one of %s", $r4);

        return;
    }

    public static transient void a(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object[];

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r0);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static boolean a(java.util.Collection)
    {
        javax.lang.model.element.Modifier $r0;
        boolean $z0;
        java.util.Collection $r1;

        $r1 := @parameter0: java.util.Collection;

        $r0 = <c.k.a.w: javax.lang.model.element.Modifier a>;

        if $r0 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.util.List b(java.util.Collection)
    {
        java.util.List $r1;
        java.util.ArrayList $r0;
        java.util.Collection $r2;

        $r2 := @parameter0: java.util.Collection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r1;
    }

    public static java.util.Map b(java.util.Map)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Collection $r8;
        java.util.Set $r2;
        java.util.LinkedHashMap $r0;
        java.util.List $r6;
        java.util.Map $r1;
        java.lang.Object $r4, $r7;
        boolean $z0;

        $r1 := @parameter0: java.util.Map;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.util.List) $r4;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.util.Collection) $r7;

        $r6 = staticinvoke <c.k.a.w: java.util.List b(java.util.Collection)>($r8);

        virtualinvoke $r0.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label3:
        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        return $r1;
    }

    public static transient void b(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.IllegalStateException $r2;
        java.lang.Object[] $r0;
        java.lang.String $r1;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.Object[];

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r0);

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static java.util.Set c(java.util.Collection)
    {
        java.util.Set $r1;
        java.util.LinkedHashSet $r0;
        java.util.Collection $r2;

        $r2 := @parameter0: java.util.Collection;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r2);

        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r1;
    }
}
