public final class com.google.common.hash.HashingOutputStream extends java.io.FilterOutputStream
{
    public final com.google.common.hash.Hasher hasher;

    public void <init>(com.google.common.hash.HashFunction, java.io.OutputStream)
    {
        java.io.OutputStream $r3;
        com.google.common.hash.HashingOutputStream r0;
        com.google.common.hash.Hasher $r1;
        com.google.common.hash.HashFunction $r2;

        r0 := @this: com.google.common.hash.HashingOutputStream;

        $r2 := @parameter0: com.google.common.hash.HashFunction;

        $r3 := @parameter1: java.io.OutputStream;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3);

        $r1 = interfaceinvoke $r2.<com.google.common.hash.HashFunction: com.google.common.hash.Hasher newHasher()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.hash.HashingOutputStream: com.google.common.hash.Hasher hasher> = $r1;

        return;
    }

    public void close()
    {
        java.io.OutputStream $r1;
        com.google.common.hash.HashingOutputStream r0;

        r0 := @this: com.google.common.hash.HashingOutputStream;

        $r1 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public com.google.common.hash.HashCode hash()
    {
        com.google.common.hash.HashingOutputStream r0;
        com.google.common.hash.Hasher $r2;
        com.google.common.hash.HashCode $r1;

        r0 := @this: com.google.common.hash.HashingOutputStream;

        $r2 = r0.<com.google.common.hash.HashingOutputStream: com.google.common.hash.Hasher hasher>;

        $r1 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();

        return $r1;
    }

    public void write(int)
    {
        java.io.OutputStream $r2;
        com.google.common.hash.HashingOutputStream r0;
        byte $b1;
        int $i0;
        com.google.common.hash.Hasher $r1;

        r0 := @this: com.google.common.hash.HashingOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.hash.HashingOutputStream: com.google.common.hash.Hasher hasher>;

        $b1 = (byte) $i0;

        interfaceinvoke $r1.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putByte(byte)>($b1);

        $r2 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i0);

        return;
    }

    public void write(byte[], int, int)
    {
        java.io.OutputStream $r3;
        byte[] $r1;
        com.google.common.hash.HashingOutputStream r0;
        int $i0, $i1;
        com.google.common.hash.Hasher $r2;

        r0 := @this: com.google.common.hash.HashingOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.google.common.hash.HashingOutputStream: com.google.common.hash.Hasher hasher>;

        interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putBytes(byte[],int,int)>($r1, $i0, $i1);

        $r3 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
}
