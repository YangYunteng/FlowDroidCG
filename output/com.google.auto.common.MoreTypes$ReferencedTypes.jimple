public final class com.google.auto.common.MoreTypes$ReferencedTypes extends javax.lang.model.util.SimpleTypeVisitor6
{
    public static final com.google.auto.common.MoreTypes$ReferencedTypes INSTANCE;

    static void <clinit>()
    {
        com.google.auto.common.MoreTypes$ReferencedTypes $r0;

        $r0 = new com.google.auto.common.MoreTypes$ReferencedTypes;

        specialinvoke $r0.<com.google.auto.common.MoreTypes$ReferencedTypes: void <init>()>();

        <com.google.auto.common.MoreTypes$ReferencedTypes: com.google.auto.common.MoreTypes$ReferencedTypes INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        specialinvoke r0.<javax.lang.model.util.SimpleTypeVisitor6: void <init>()>();

        return;
    }

    public static com.google.auto.common.MoreTypes$ReferencedTypes access$900()
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;

        r0 = <com.google.auto.common.MoreTypes$ReferencedTypes: com.google.auto.common.MoreTypes$ReferencedTypes INSTANCE>;

        return r0;
    }

    public volatile java.lang.Object visitArray(javax.lang.model.type.ArrayType, java.lang.Object)
    {
        javax.lang.model.type.ArrayType $r2;
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        java.lang.Void $r1;
        com.google.common.collect.ImmutableSet$Builder $r4;
        java.lang.Object $r3;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.ArrayType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.collect.ImmutableSet$Builder) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$ReferencedTypes: java.lang.Void visitArray(javax.lang.model.type.ArrayType,com.google.common.collect.ImmutableSet$Builder)>($r2, $r4);

        return $r1;
    }

    public java.lang.Void visitArray(javax.lang.model.type.ArrayType, com.google.common.collect.ImmutableSet$Builder)
    {
        javax.lang.model.type.ArrayType $r3;
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        javax.lang.model.type.TypeMirror $r2;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.common.collect.ImmutableSet$Builder $r1;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r3 := @parameter0: javax.lang.model.type.ArrayType;

        $r1 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        $r2 = interfaceinvoke $r3.<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>();

        $r4 = (javax.lang.model.type.TypeVisitor) r0;

        interfaceinvoke $r2.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, $r1);

        return null;
    }

    public volatile java.lang.Object visitDeclared(javax.lang.model.type.DeclaredType, java.lang.Object)
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        java.lang.Void $r1;
        javax.lang.model.type.DeclaredType $r2;
        com.google.common.collect.ImmutableSet$Builder $r4;
        java.lang.Object $r3;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.DeclaredType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.collect.ImmutableSet$Builder) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$ReferencedTypes: java.lang.Void visitDeclared(javax.lang.model.type.DeclaredType,com.google.common.collect.ImmutableSet$Builder)>($r2, $r4);

        return $r1;
    }

    public java.lang.Void visitDeclared(javax.lang.model.type.DeclaredType, com.google.common.collect.ImmutableSet$Builder)
    {
        java.util.Iterator $r6;
        com.google.common.collect.ImmutableSet$Builder $r1;
        javax.lang.model.element.Element $r3;
        javax.lang.model.element.TypeElement $r4;
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        java.util.List $r5;
        javax.lang.model.type.TypeMirror $r8;
        javax.lang.model.type.TypeVisitor $r9;
        javax.lang.model.type.DeclaredType $r2;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.DeclaredType;

        $r1 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        $r3 = interfaceinvoke $r2.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r4 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r3);

        virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r4);

        $r5 = interfaceinvoke $r2.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (javax.lang.model.type.TypeMirror) $r7;

        $r9 = (javax.lang.model.type.TypeVisitor) r0;

        interfaceinvoke $r8.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r9, $r1);

        goto label1;

     label2:
        return null;
    }

    public volatile java.lang.Object visitTypeVariable(javax.lang.model.type.TypeVariable, java.lang.Object)
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        java.lang.Void $r1;
        com.google.common.collect.ImmutableSet$Builder $r4;
        javax.lang.model.type.TypeVariable $r2;
        java.lang.Object $r3;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.TypeVariable;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.collect.ImmutableSet$Builder) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$ReferencedTypes: java.lang.Void visitTypeVariable(javax.lang.model.type.TypeVariable,com.google.common.collect.ImmutableSet$Builder)>($r2, $r4);

        return $r1;
    }

    public java.lang.Void visitTypeVariable(javax.lang.model.type.TypeVariable, com.google.common.collect.ImmutableSet$Builder)
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        javax.lang.model.type.TypeMirror $r3;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.common.collect.ImmutableSet$Builder $r1;
        javax.lang.model.type.TypeVariable $r2;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.TypeVariable;

        $r1 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        $r3 = interfaceinvoke $r2.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getLowerBound()>();

        $r4 = (javax.lang.model.type.TypeVisitor) r0;

        interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, $r1);

        $r3 = interfaceinvoke $r2.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>();

        $r4 = (javax.lang.model.type.TypeVisitor) r0;

        interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, $r1);

        return null;
    }

    public volatile java.lang.Object visitWildcard(javax.lang.model.type.WildcardType, java.lang.Object)
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        java.lang.Void $r1;
        com.google.common.collect.ImmutableSet$Builder $r4;
        java.lang.Object $r3;
        javax.lang.model.type.WildcardType $r2;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.WildcardType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.collect.ImmutableSet$Builder) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$ReferencedTypes: java.lang.Void visitWildcard(javax.lang.model.type.WildcardType,com.google.common.collect.ImmutableSet$Builder)>($r2, $r4);

        return $r1;
    }

    public java.lang.Void visitWildcard(javax.lang.model.type.WildcardType, com.google.common.collect.ImmutableSet$Builder)
    {
        com.google.auto.common.MoreTypes$ReferencedTypes r0;
        javax.lang.model.type.TypeMirror $r3;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.common.collect.ImmutableSet$Builder $r1;
        javax.lang.model.type.WildcardType $r2;

        r0 := @this: com.google.auto.common.MoreTypes$ReferencedTypes;

        $r2 := @parameter0: javax.lang.model.type.WildcardType;

        $r1 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        $r3 = interfaceinvoke $r2.<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getExtendsBound()>();

        if $r3 == null goto label1;

        $r4 = (javax.lang.model.type.TypeVisitor) r0;

        interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, $r1);

     label1:
        $r3 = interfaceinvoke $r2.<javax.lang.model.type.WildcardType: javax.lang.model.type.TypeMirror getSuperBound()>();

        if $r3 == null goto label2;

        $r4 = (javax.lang.model.type.TypeVisitor) r0;

        interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, $r1);

     label2:
        return null;
    }
}
