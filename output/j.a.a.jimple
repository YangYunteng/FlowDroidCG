public final class j.a.A extends java.lang.Object
{

    public static final java.lang.String a(i.c.e)
    {
        java.lang.Throwable $r5;
        i.g$a $r2;
        i.c.e $r0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4, $r6;
        java.lang.Class $r7;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: i.c.e;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toDebugString");

        $z0 = $r0 instanceof j.a.D;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;

     label1:
        $r2 = <i.g: i.g$a a>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r1 = staticinvoke <j.a.A: java.lang.String b(java.lang.Object)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r4 = $r1;

     label3:
        staticinvoke <i.g: java.lang.Object a(java.lang.Object)>($r1);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r2 = <i.g: i.g$a a>;

        $r6 = staticinvoke <i.h: java.lang.Object a(java.lang.Throwable)>($r5);

        $r4 = $r6;

        staticinvoke <i.g: java.lang.Object a(java.lang.Object)>($r6);

     label6:
        $r5 = staticinvoke <i.g: java.lang.Throwable b(java.lang.Object)>($r4);

        if $r5 != null goto label7;

        goto label8;

     label7:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r1 = staticinvoke <j.a.A: java.lang.String b(java.lang.Object)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        $r1 = (java.lang.String) $r4;

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static final java.lang.String a(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Object;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$classSimpleName");

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r2, "this::class.java.simpleName");

        return $r2;
    }

    public static final java.lang.String b(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$hexAddress");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r1, "Integer.toHexString(System.identityHashCode(this))");

        return $r1;
    }
}
