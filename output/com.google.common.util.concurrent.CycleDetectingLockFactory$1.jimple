public final class com.google.common.util.concurrent.CycleDetectingLockFactory$1 extends java.lang.ThreadLocal
{

    public void <init>()
    {
        com.google.common.util.concurrent.CycleDetectingLockFactory$1 r0;

        r0 := @this: com.google.common.util.concurrent.CycleDetectingLockFactory$1;

        specialinvoke r0.<java.lang.ThreadLocal: void <init>()>();

        return;
    }

    public volatile java.lang.Object initialValue()
    {
        com.google.common.util.concurrent.CycleDetectingLockFactory$1 r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.common.util.concurrent.CycleDetectingLockFactory$1;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.CycleDetectingLockFactory$1: java.util.ArrayList initialValue()>();

        return $r1;
    }

    public java.util.ArrayList initialValue()
    {
        com.google.common.util.concurrent.CycleDetectingLockFactory$1 r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.common.util.concurrent.CycleDetectingLockFactory$1;

        $r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>(3);

        return $r1;
    }
}
