public final class com.google.common.reflect.Types$WildcardTypeImpl extends java.lang.Object implements java.lang.reflect.WildcardType, java.io.Serializable
{
    public static final long serialVersionUID;
    public final com.google.common.collect.ImmutableList lowerBounds;
    public final com.google.common.collect.ImmutableList upperBounds;

    public void <init>(java.lang.reflect.Type[], java.lang.reflect.Type[])
    {
        com.google.common.collect.ImmutableList $r4;
        com.google.common.reflect.Types$WildcardTypeImpl r0;
        java.lang.reflect.Type[] $r1, $r2;
        com.google.common.reflect.Types$JavaVersion $r3;

        r0 := @this: com.google.common.reflect.Types$WildcardTypeImpl;

        $r2 := @parameter0: java.lang.reflect.Type[];

        $r1 := @parameter1: java.lang.reflect.Type[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.reflect.Types: void access$200(java.lang.reflect.Type[],java.lang.String)>($r2, "lower bound for wildcard");

        staticinvoke <com.google.common.reflect.Types: void access$200(java.lang.reflect.Type[],java.lang.String)>($r1, "upper bound for wildcard");

        $r3 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $r4 = virtualinvoke $r3.<com.google.common.reflect.Types$JavaVersion: com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[])>($r2);

        r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList lowerBounds> = $r4;

        $r3 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $r4 = virtualinvoke $r3.<com.google.common.reflect.Types$JavaVersion: com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[])>($r1);

        r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList upperBounds> = $r4;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r5;
        com.google.common.collect.ImmutableList $r3;
        java.lang.reflect.WildcardType $r2;
        com.google.common.reflect.Types$WildcardTypeImpl r0;
        java.lang.reflect.Type[] $r4;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Types$WildcardTypeImpl;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.reflect.WildcardType) $r1;

        $r3 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList lowerBounds>;

        $r4 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $z0 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList upperBounds>;

        $r4 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $z0 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.reflect.Type[] getLowerBounds()
    {
        com.google.common.reflect.Types$WildcardTypeImpl r0;
        java.lang.reflect.Type[] $r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: com.google.common.reflect.Types$WildcardTypeImpl;

        $r2 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList lowerBounds>;

        $r1 = staticinvoke <com.google.common.reflect.Types: java.lang.reflect.Type[] access$300(java.util.Collection)>($r2);

        return $r1;
    }

    public java.lang.reflect.Type[] getUpperBounds()
    {
        com.google.common.reflect.Types$WildcardTypeImpl r0;
        java.lang.reflect.Type[] $r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: com.google.common.reflect.Types$WildcardTypeImpl;

        $r2 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList upperBounds>;

        $r1 = staticinvoke <com.google.common.reflect.Types: java.lang.reflect.Type[] access$300(java.util.Collection)>($r2);

        return $r1;
    }

    public int hashCode()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.reflect.Types$WildcardTypeImpl r0;
        int $i0, $i1;

        r0 := @this: com.google.common.reflect.Types$WildcardTypeImpl;

        $r1 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList lowerBounds>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int hashCode()>();

        $r1 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList upperBounds>;

        $i1 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r9;
        com.google.common.reflect.Types$JavaVersion $r6;
        java.lang.Iterable $r8;
        com.google.common.collect.ImmutableList $r2;
        java.lang.reflect.Type $r5;
        com.google.common.reflect.Types$WildcardTypeImpl r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        com.google.common.collect.UnmodifiableIterator $r3;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Types$WildcardTypeImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("?");

        $r2 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList lowerBounds>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.reflect.Type) $r4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" super ");

        $r6 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $r7 = virtualinvoke $r6.<com.google.common.reflect.Types$JavaVersion: java.lang.String typeName(java.lang.reflect.Type)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r2 = r0.<com.google.common.reflect.Types$WildcardTypeImpl: com.google.common.collect.ImmutableList upperBounds>;

        $r8 = staticinvoke <com.google.common.reflect.Types: java.lang.Iterable access$700(java.lang.Iterable)>($r2);

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.reflect.Type) $r4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extends ");

        $r6 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $r7 = virtualinvoke $r6.<com.google.common.reflect.Types$JavaVersion: java.lang.String typeName(java.lang.reflect.Type)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label3;

     label4:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
