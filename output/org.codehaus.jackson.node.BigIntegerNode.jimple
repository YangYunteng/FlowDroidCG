public final class org.codehaus.jackson.node.BigIntegerNode extends org.codehaus.jackson.node.NumericNode
{
    public final java.math.BigInteger _value;

    public void <init>(java.math.BigInteger)
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 := @parameter0: java.math.BigInteger;

        specialinvoke r0.<org.codehaus.jackson.node.NumericNode: void <init>()>();

        r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value> = $r1;

        return;
    }

    public static org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger)
    {
        java.math.BigInteger $r0;
        org.codehaus.jackson.node.BigIntegerNode $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 = new org.codehaus.jackson.node.BigIntegerNode;

        specialinvoke $r1.<org.codehaus.jackson.node.BigIntegerNode: void <init>(java.math.BigInteger)>($r0);

        return $r1;
    }

    public org.codehaus.jackson.JsonToken asToken()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        org.codehaus.jackson.JsonToken r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        r1 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.node.BigIntegerNode r0, $r3;
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.math.BigInteger $r4, $r5;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r2 := @parameter0: java.lang.Object;

        if $r2 != r0 goto label1;

        return 1;

     label1:
        if $r2 != null goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lorg/codehaus/jackson/node/BigIntegerNode;" goto label3;

        return 0;

     label3:
        $r3 = (org.codehaus.jackson.node.BigIntegerNode) $r2;

        $r4 = $r3.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $r5 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        if $r4 != $r5 goto label4;

        return 1;

     label4:
        return 0;
    }

    public java.math.BigInteger getBigIntegerValue()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        return r1;
    }

    public java.math.BigDecimal getDecimalValue()
    {
        java.math.BigDecimal $r1;
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r2;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 = new java.math.BigDecimal;

        $r2 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r2);

        return $r1;
    }

    public double getDoubleValue()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        double $d0;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $d0 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        return $d0;
    }

    public int getIntValue()
    {
        int $i0;
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public long getLongValue()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }

    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        org.codehaus.jackson.JsonParser$NumberType r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        r1 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER>;

        return r1;
    }

    public java.lang.Number getNumberValue()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        return r1;
    }

    public boolean getValueAsBoolean(boolean)
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $z0 := @parameter0: boolean;

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $z0 = virtualinvoke $r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r1);

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public java.lang.String getValueAsText()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r2;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r2 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $r1 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString()>();

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        org.codehaus.jackson.node.BigIntegerNode r0;
        java.math.BigInteger $r1;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        return $i0;
    }

    public boolean isBigInteger()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        return 1;
    }

    public boolean isIntegralNumber()
    {
        org.codehaus.jackson.node.BigIntegerNode r0;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        return 1;
    }

    public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.node.BigIntegerNode r0;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.math.BigInteger $r3;

        r0 := @this: org.codehaus.jackson.node.BigIntegerNode;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        $r3 = r0.<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger _value>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeNumber(java.math.BigInteger)>($r3);

        return;
    }
}
