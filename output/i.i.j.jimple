public final class i.i.j extends java.lang.Object implements java.util.Iterator, i.f.b.a.a
{
    public final java.util.Iterator a;
    public final i.i.k b;

    public void <init>(i.i.k)
    {
        java.util.Iterator $r3;
        i.i.b $r2;
        i.i.j r0;
        i.i.k $r1;

        r0 := @this: i.i.j;

        $r1 := @parameter0: i.i.k;

        r0.<i.i.j: i.i.k b> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <i.i.k: i.i.b a(i.i.k)>($r1);

        $r3 = interfaceinvoke $r2.<i.i.b: java.util.Iterator iterator()>();

        r0.<i.i.j: java.util.Iterator a> = $r3;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        i.i.j r0;
        boolean $z0;

        r0 := @this: i.i.j;

        $r1 = r0.<i.i.j: java.util.Iterator a>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        i.f.a.l $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        i.i.j r0;
        i.i.k $r1;

        r0 := @this: i.i.j;

        $r1 = r0.<i.i.j: i.i.k b>;

        $r2 = staticinvoke <i.i.k: i.f.a.l b(i.i.k)>($r1);

        $r3 = r0.<i.i.j: java.util.Iterator a>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r2.<i.f.a.l: java.lang.Object invoke(java.lang.Object)>($r4);

        return $r4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        i.i.j r0;

        r0 := @this: i.i.j;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
