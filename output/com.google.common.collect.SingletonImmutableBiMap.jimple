public final class com.google.common.collect.SingletonImmutableBiMap extends com.google.common.collect.ImmutableBiMap
{
    public transient com.google.common.collect.ImmutableBiMap inverse;
    public final transient java.lang.Object singleKey;
    public final transient java.lang.Object singleValue;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.SingletonImmutableBiMap r0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.ImmutableBiMap: void <init>()>();

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>($r1, $r2);

        r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey> = $r1;

        r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue> = $r2;

        return;
    }

    public void <init>(java.lang.Object, java.lang.Object, com.google.common.collect.ImmutableBiMap)
    {
        com.google.common.collect.ImmutableBiMap $r3;
        com.google.common.collect.SingletonImmutableBiMap r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.google.common.collect.ImmutableBiMap;

        specialinvoke r0.<com.google.common.collect.ImmutableBiMap: void <init>()>();

        r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey> = $r1;

        r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue> = $r2;

        r0.<com.google.common.collect.SingletonImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse> = $r3;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.SingletonImmutableBiMap r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.google.common.collect.SingletonImmutableBiMap r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public com.google.common.collect.ImmutableSet createEntrySet()
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.ImmutableSet $r4;
        com.google.common.collect.SingletonImmutableBiMap r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r2 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey>;

        $r1 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue>;

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r4 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>($r3);

        return $r4;
    }

    public com.google.common.collect.ImmutableSet createKeySet()
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.SingletonImmutableBiMap r0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r2 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey>;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>($r2);

        return $r1;
    }

    public void forEach(java.util.function.BiConsumer)
    {
        com.google.common.collect.SingletonImmutableBiMap r0;
        java.util.function.BiConsumer $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r3 := @parameter0: java.util.function.BiConsumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r1 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey>;

        $r2 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue>;

        interfaceinvoke $r3.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.SingletonImmutableBiMap r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue>;

        return $r2;

     label1:
        return null;
    }

    public volatile com.google.common.collect.BiMap inverse()
    {
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.SingletonImmutableBiMap r0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.SingletonImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableBiMap inverse()
    {
        com.google.common.collect.ImmutableBiMap $r3;
        com.google.common.collect.SingletonImmutableBiMap r0, $r4;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        $r3 = r0.<com.google.common.collect.SingletonImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse>;

        if $r3 != null goto label1;

        $r4 = new com.google.common.collect.SingletonImmutableBiMap;

        $r1 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleValue>;

        $r2 = r0.<com.google.common.collect.SingletonImmutableBiMap: java.lang.Object singleKey>;

        specialinvoke $r4.<com.google.common.collect.SingletonImmutableBiMap: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.ImmutableBiMap)>($r1, $r2, r0);

        r0.<com.google.common.collect.SingletonImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse> = $r4;

        return $r4;

     label1:
        return $r3;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.SingletonImmutableBiMap r0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        return 0;
    }

    public int size()
    {
        com.google.common.collect.SingletonImmutableBiMap r0;

        r0 := @this: com.google.common.collect.SingletonImmutableBiMap;

        return 1;
    }
}
