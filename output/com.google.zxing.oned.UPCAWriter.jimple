public final class com.google.zxing.oned.UPCAWriter extends java.lang.Object implements com.google.zxing.Writer
{
    public final com.google.zxing.oned.EAN13Writer subWriter;

    public void <init>()
    {
        com.google.zxing.oned.EAN13Writer $r1;
        com.google.zxing.oned.UPCAWriter r0;

        r0 := @this: com.google.zxing.oned.UPCAWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.zxing.oned.EAN13Writer;

        specialinvoke $r1.<com.google.zxing.oned.EAN13Writer: void <init>()>();

        r0.<com.google.zxing.oned.UPCAWriter: com.google.zxing.oned.EAN13Writer subWriter> = $r1;

        return;
    }

    public static java.lang.String preencode(java.lang.String)
    {
        char $c2;
        java.lang.IllegalArgumentException $r3;
        byte $b5;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 11 goto label5;

        $i0 = 0;

        $i1 = 0;

     label1:
        if $i0 >= 11 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i3 = (int) $c2;

        $i3 = $i3 - 48;

        $i4 = $i0 % 2;

        if $i4 != 0 goto label2;

        $b5 = 3;

        goto label3;

     label2:
        $b5 = 1;

     label3:
        $i3 = $i3 * $b5;

        $i1 = $i1 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r2 = new java.lang.StringBuilder;

        $r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i0 = 1000 - $i1;

        $i0 = $i0 % 10;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        if $i0 != 12 goto label7;

     label6:
        $r2 = new java.lang.StringBuilder;

        $r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label7:
        $r3 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        $r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested contents should be 11 or 12 digits long, but got ");

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        goto label8;

     label8:
        throw $r3;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int)
    {
        com.google.zxing.oned.UPCAWriter r0;
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r2;
        java.lang.String $r3;
        com.google.zxing.BarcodeFormat $r1;

        r0 := @this: com.google.zxing.oned.UPCAWriter;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.google.zxing.oned.UPCAWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>($r3, $r1, $i0, $i1, null);

        return $r2;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Map)
    {
        com.google.zxing.oned.EAN13Writer $r3;
        java.lang.IllegalArgumentException $r7;
        com.google.zxing.oned.UPCAWriter r0;
        java.util.Map $r1;
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r5;
        com.google.zxing.BarcodeFormat $r2, $r4;

        r0 := @this: com.google.zxing.oned.UPCAWriter;

        $r5 := @parameter0: java.lang.String;

        $r4 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 := @parameter4: java.util.Map;

        $r2 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_A>;

        if $r4 != $r2 goto label1;

        $r3 = r0.<com.google.zxing.oned.UPCAWriter: com.google.zxing.oned.EAN13Writer subWriter>;

        $r5 = staticinvoke <com.google.zxing.oned.UPCAWriter: java.lang.String preencode(java.lang.String)>($r5);

        $r4 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat EAN_13>;

        $r6 = virtualinvoke $r3.<com.google.zxing.oned.EAN13Writer: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>($r5, $r4, $i0, $i1, $r1);

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only encode UPC-A, but got ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r7;
    }
}
