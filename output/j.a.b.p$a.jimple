public abstract class j.a.b.p$a extends j.a.b.c
{
    public j.a.b.p b;
    public final j.a.b.p c;

    public void <init>(j.a.b.p)
    {
        j.a.b.p$a r0;
        j.a.b.p $r1;

        r0 := @this: j.a.b.p$a;

        $r1 := @parameter0: j.a.b.p;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "newNode");

        specialinvoke r0.<j.a.b.c: void <init>()>();

        r0.<j.a.b.p$a: j.a.b.p c> = $r1;

        return;
    }

    public void a(j.a.b.p, java.lang.Object)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r1;
        java.lang.NullPointerException r5;
        j.a.b.p$a r0;
        j.a.b.p $r2, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: j.a.b.p$a;

        $r2 := @parameter0: j.a.b.p;

        $r3 := @parameter1: java.lang.Object;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "affected");

        if $r3 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r0.<j.a.b.p$a: j.a.b.p c>;

        goto label4;

     label3:
        $r4 = r0.<j.a.b.p$a: j.a.b.p b>;

     label4:
        if $r4 == null goto label6;

        $r1 = <j.a.b.p: java.util.concurrent.atomic.AtomicReferenceFieldUpdater a>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r0, $r4);

        if $z0 == 0 goto label6;

        if $z1 == 0 goto label6;

        $r2 = r0.<j.a.b.p$a: j.a.b.p c>;

        $r4 = r0.<j.a.b.p$a: j.a.b.p b>;

        if $r4 == null goto label5;

        staticinvoke <j.a.b.p: void a(j.a.b.p,j.a.b.p)>($r2, $r4);

        return;

     label5:
        staticinvoke <i.f.b.i: void a()>();

        r5 = new java.lang.NullPointerException;

        specialinvoke r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r5;

     label6:
        return;
    }

    public volatile void a(java.lang.Object, java.lang.Object)
    {
        j.a.b.p$a r0;
        j.a.b.p $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: j.a.b.p$a;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (j.a.b.p) $r2;

        virtualinvoke r0.<j.a.b.p$a: void a(j.a.b.p,java.lang.Object)>($r3, $r1);

        return;
    }
}
