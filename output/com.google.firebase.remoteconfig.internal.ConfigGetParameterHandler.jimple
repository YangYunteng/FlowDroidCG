public class com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler extends java.lang.Object
{
    public static final java.util.regex.Pattern FALSE_REGEX;
    public static final java.nio.charset.Charset FRC_BYTE_ARRAY_ENCODING;
    public static final java.util.regex.Pattern TRUE_REGEX;
    public final com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache;
    public final com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache;

    static void <clinit>()
    {
        java.util.regex.Pattern $r1;
        java.nio.charset.Charset $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.nio.charset.Charset FRC_BYTE_ARRAY_ENCODING> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("^(1|true|t|yes|y|on)$", 2);

        <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.regex.Pattern TRUE_REGEX> = $r1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("^(0|false|f|no|n|off|)$", 2);

        <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.regex.Pattern FALSE_REGEX> = $r1;

        return;
    }

    public void <init>(com.google.firebase.remoteconfig.internal.ConfigCacheClient, com.google.firebase.remoteconfig.internal.ConfigCacheClient)
    {
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r1, $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r2 := @parameter1: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache> = $r1;

        r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache> = $r2;

        return;
    }

    public static com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)
    {
        com.google.firebase.remoteconfig.internal.ConfigContainer $r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r1;

        $r1 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r0 = virtualinvoke $r1.<com.google.firebase.remoteconfig.internal.ConfigCacheClient: com.google.firebase.remoteconfig.internal.ConfigContainer getBlocking()>();

        return $r0;
    }

    public static java.lang.Double getDoubleFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient, java.lang.String)
    {
        org.json.JSONException $r1;
        org.json.JSONObject $r4;
        java.lang.Double $r5;
        java.lang.String $r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r3;
        double $d0;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r0 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<com.google.firebase.remoteconfig.internal.ConfigContainer: org.json.JSONObject getConfigs()>();

        $d0 = virtualinvoke $r4.<org.json.JSONObject: double getDouble(java.lang.String)>($r0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label2:
        return $r5;

     label3:
        $r1 := @caughtexception;

        return null;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.util.Set getKeySetFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)
    {
        java.util.Iterator $r4;
        java.util.HashSet $r0;
        org.json.JSONObject $r3;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r1;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r2;
        boolean $z0;

        $r1 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r1);

        if $r2 != null goto label1;

        return $r0;

     label1:
        $r3 = virtualinvoke $r2.<com.google.firebase.remoteconfig.internal.ConfigContainer: org.json.JSONObject getConfigs()>();

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.util.Iterator keys()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        return $r0;
    }

    public static java.util.TreeSet getKeysByPrefix(java.lang.String, com.google.firebase.remoteconfig.internal.ConfigContainer)
    {
        java.util.Iterator $r4;
        java.util.TreeSet $r1;
        org.json.JSONObject $r3;
        java.lang.Object $r5;
        java.lang.String $r0, $r6;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.firebase.remoteconfig.internal.ConfigContainer;

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        $r3 = virtualinvoke $r2.<com.google.firebase.remoteconfig.internal.ConfigContainer: org.json.JSONObject getConfigs()>();

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.util.TreeSet: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r1;
    }

    public static java.lang.Long getLongFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient, java.lang.String)
    {
        org.json.JSONException $r1;
        org.json.JSONObject $r4;
        java.lang.Long $r5;
        long $l0;
        java.lang.String $r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r3;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r0 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<com.google.firebase.remoteconfig.internal.ConfigContainer: org.json.JSONObject getConfigs()>();

        $l0 = virtualinvoke $r4.<org.json.JSONObject: long getLong(java.lang.String)>($r0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        return $r5;

     label3:
        $r1 := @caughtexception;

        return null;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient, java.lang.String)
    {
        org.json.JSONException $r1;
        org.json.JSONObject $r4;
        java.lang.String $r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r3;

        $r2 := @parameter0: com.google.firebase.remoteconfig.internal.ConfigCacheClient;

        $r0 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<com.google.firebase.remoteconfig.internal.ConfigContainer: org.json.JSONObject getConfigs()>();

        $r0 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r0);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        return null;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static void logParameterValueDoesNotExist(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r1;

        $r2[1] = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No value of type \'%s\' exists for parameter key \'%s\'.", $r2);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FirebaseRemoteConfig", $r0);

        return;
    }

    public java.util.Map getAll()
    {
        java.util.Iterator $r5;
        java.util.Set $r3;
        java.util.HashMap $r4;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        java.util.HashSet $r1;
        java.lang.Object $r6;
        java.lang.String $r7;
        com.google.firebase.remoteconfig.FirebaseRemoteConfigValue $r8;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.Set getKeySetFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r2);

        interfaceinvoke $r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.Set getKeySetFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r2);

        interfaceinvoke $r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.FirebaseRemoteConfigValue getValue(java.lang.String)>($r7);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        goto label1;

     label2:
        return $r4;
    }

    public boolean getBoolean(java.lang.String)
    {
        java.util.regex.Matcher $r5;
        java.lang.String $r1, $r3;
        java.util.regex.Pattern $r4;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label2;

        $r4 = <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.regex.Pattern TRUE_REGEX>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.regex.Pattern FALSE_REGEX>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label4;

        $r4 = <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.regex.Pattern TRUE_REGEX>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r4 = <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.regex.Pattern FALSE_REGEX>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label4;

        return 0;

     label4:
        staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: void logParameterValueDoesNotExist(java.lang.String,java.lang.String)>($r1, "Boolean");

        return 0;
    }

    public byte[] getByteArray(java.lang.String)
    {
        byte[] $r5;
        java.nio.charset.Charset $r4;
        java.lang.String $r1, $r3;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        $r4 = <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.nio.charset.Charset FRC_BYTE_ARRAY_ENCODING>;

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        return $r5;

     label1:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label2;

        $r4 = <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.nio.charset.Charset FRC_BYTE_ARRAY_ENCODING>;

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        return $r5;

     label2:
        staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: void logParameterValueDoesNotExist(java.lang.String,java.lang.String)>($r1, "ByteArray");

        $r5 = <com.google.firebase.remoteconfig.FirebaseRemoteConfig: byte[] DEFAULT_VALUE_FOR_BYTE_ARRAY>;

        return $r5;
    }

    public double getDouble(java.lang.String)
    {
        java.lang.Double $r3;
        java.lang.String $r1;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        double $d0;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.Double getDoubleFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;

     label1:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.Double getDoubleFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label2;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;

     label2:
        staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: void logParameterValueDoesNotExist(java.lang.String,java.lang.String)>($r1, "Double");

        return 0.0;
    }

    public java.util.Set getKeysByPrefix(java.lang.String)
    {
        java.lang.String $r2;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        java.util.TreeSet $r1, $r5;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r3;
        com.google.firebase.remoteconfig.internal.ConfigContainer $r4;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label1;

        $r2 = "";

     label1:
        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        $r3 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r4 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r3);

        if $r4 == null goto label2;

        $r5 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.TreeSet getKeysByPrefix(java.lang.String,com.google.firebase.remoteconfig.internal.ConfigContainer)>($r2, $r4);

        virtualinvoke $r1.<java.util.TreeSet: boolean addAll(java.util.Collection)>($r5);

     label2:
        $r3 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r4 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigContainer getConfigsFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient)>($r3);

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.util.TreeSet getKeysByPrefix(java.lang.String,com.google.firebase.remoteconfig.internal.ConfigContainer)>($r2, $r4);

        virtualinvoke $r1.<java.util.TreeSet: boolean addAll(java.util.Collection)>($r5);

     label3:
        return $r1;
    }

    public long getLong(java.lang.String)
    {
        java.lang.Long $r3;
        long $l0;
        java.lang.String $r1;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.Long getLongFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;

     label1:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.Long getLongFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;

     label2:
        staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: void logParameterValueDoesNotExist(java.lang.String,java.lang.String)>($r1, "Long");

        return 0L;
    }

    public java.lang.String getString(java.lang.String)
    {
        java.lang.String $r1, $r3;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label2;

        return $r3;

     label2:
        staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: void logParameterValueDoesNotExist(java.lang.String,java.lang.String)>($r1, "String");

        return "";
    }

    public com.google.firebase.remoteconfig.FirebaseRemoteConfigValue getValue(java.lang.String)
    {
        java.lang.String $r1, $r3;
        com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler r0;
        com.google.firebase.remoteconfig.internal.ConfigCacheClient $r2;
        com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl $r4;

        r0 := @this: com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient activatedConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        $r4 = new com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl;

        specialinvoke $r4.<com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl: void <init>(java.lang.String,int)>($r3, 2);

        return $r4;

     label1:
        $r2 = r0.<com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: com.google.firebase.remoteconfig.internal.ConfigCacheClient defaultConfigsCache>;

        $r3 = staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: java.lang.String getStringFromCache(com.google.firebase.remoteconfig.internal.ConfigCacheClient,java.lang.String)>($r2, $r1);

        if $r3 == null goto label2;

        $r4 = new com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl;

        specialinvoke $r4.<com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl: void <init>(java.lang.String,int)>($r3, 1);

        return $r4;

     label2:
        staticinvoke <com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler: void logParameterValueDoesNotExist(java.lang.String,java.lang.String)>($r1, "FirebaseRemoteConfigValue");

        $r4 = new com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl;

        specialinvoke $r4.<com.google.firebase.remoteconfig.internal.FirebaseRemoteConfigValueImpl: void <init>(java.lang.String,int)>("", 0);

        return $r4;
    }
}
