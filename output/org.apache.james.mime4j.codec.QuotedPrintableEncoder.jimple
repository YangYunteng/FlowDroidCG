public final class org.apache.james.mime4j.codec.QuotedPrintableEncoder extends java.lang.Object
{
    public static final byte CR;
    public static final byte EQUALS;
    public static final byte[] HEX_DIGITS;
    public static final byte LF;
    public static final byte QUOTED_PRINTABLE_LAST_PLAIN;
    public static final int QUOTED_PRINTABLE_MAX_LINE_LENGTH;
    public static final int QUOTED_PRINTABLE_OCTETS_PER_ESCAPE;
    public static final byte SPACE;
    public static final byte TAB;
    public final boolean binary;
    public final byte[] inBuffer;
    public int nextSoftBreak;
    public java.io.OutputStream out;
    public final byte[] outBuffer;
    public int outputIndex;
    public boolean pendingCR;
    public boolean pendingSpace;
    public boolean pendingTab;

    static void <clinit>()
    {
        byte[] $r0;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte TAB> = 9;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte SPACE> = 32;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: int QUOTED_PRINTABLE_OCTETS_PER_ESCAPE> = 3;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: int QUOTED_PRINTABLE_MAX_LINE_LENGTH> = 76;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte QUOTED_PRINTABLE_LAST_PLAIN> = 126;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte LF> = 10;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte EQUALS> = 61;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte CR> = 13;

        $r0 = newarray (byte)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] HEX_DIGITS> = $r0;

        return;
    }

    public void <init>(int, boolean)
    {
        byte[] $r1;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] inBuffer> = $r1;

        $i0 = $i0 * 3;

        $r1 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] outBuffer> = $r1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int outputIndex> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = 77;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: java.io.OutputStream out> = null;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean binary> = $z0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingSpace> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingTab> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingCR> = 0;

        return;
    }

    private void clearPending()
    {
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingSpace> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingTab> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingCR> = 0;

        return;
    }

    private void encode(byte)
    {
        byte $b0;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $b0 := @parameter0: byte;

        $i1 = (int) $b0;

        if $i1 != 10 goto label05;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean binary>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void writePending()>();

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label01:
        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingCR>;

        if $z0 == 0 goto label04;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingSpace>;

        if $z0 == 0 goto label02;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>(32);

        goto label03;

     label02:
        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingTab>;

        if $z0 == 0 goto label03;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>(9);

     label03:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void lineBreak()>();

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void clearPending()>();

        return;

     label04:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void writePending()>();

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void plain(byte)>($b0);

        return;

     label05:
        $i1 = (int) $b0;

        if $i1 != 13 goto label07;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean binary>;

        if $z0 == 0 goto label06;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label06:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingCR> = 1;

        return;

     label07:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void writePending()>();

        $i1 = (int) $b0;

        if $i1 != 32 goto label09;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean binary>;

        if $z0 == 0 goto label08;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label08:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingSpace> = 1;

        return;

     label09:
        $i1 = (int) $b0;

        if $i1 != 9 goto label11;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean binary>;

        if $z0 == 0 goto label10;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label10:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingTab> = 1;

        return;

     label11:
        $i1 = (int) $b0;

        if $i1 >= 32 goto label12;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label12:
        $i1 = (int) $b0;

        if $i1 <= 126 goto label13;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label13:
        $i1 = (int) $b0;

        if $i1 != 61 goto label14;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void escape(byte)>($b0);

        return;

     label14:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void plain(byte)>($b0);

        return;
    }

    private void escape(byte)
    {
        byte[] $r1;
        short $s2;
        byte $b0;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i1, $i3;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $b0 := @parameter0: byte;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak>;

        $i3 = -1;

        $i1 = $i1 + $i3;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = $i1;

        if $i1 > 3 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void softBreak()>();

     label1:
        $s2 = (short) $b0;

        $s2 = $s2 & 255;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>(61);

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak>;

        $i3 = -1;

        $i1 = $i1 + $i3;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = $i1;

        $r1 = <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] HEX_DIGITS>;

        $i1 = (int) $s2;

        $i1 = $i1 >> 4;

        $b0 = $r1[$i1];

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>($b0);

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak>;

        $i3 = -1;

        $i1 = $i1 + $i3;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = $i1;

        $r1 = <org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] HEX_DIGITS>;

        $i1 = (int) $s2;

        $i1 = $i1 % 16;

        $b0 = $r1[$i1];

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>($b0);

        return;
    }

    private void lineBreak()
    {
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>(13);

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>(10);

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = 76;

        return;
    }

    private void plain(byte)
    {
        int $i1;
        byte $b0;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $b0 := @parameter0: byte;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak>;

        $i1 = $i1 - 1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = $i1;

        if $i1 > 1 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void softBreak()>();

     label1:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>($b0);

        return;
    }

    private void softBreak()
    {
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void write(byte)>(61);

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void lineBreak()>();

        return;
    }

    private void write(byte)
    {
        byte[] $r1;
        byte $b2;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $b2 := @parameter0: byte;

        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] outBuffer>;

        $i0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int outputIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int outputIndex> = $i1;

        $r1[$i0] = $b2;

        $i0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int outputIndex>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label1;

        virtualinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void flushOutput()>();

     label1:
        return;
    }

    private void writePending()
    {
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingSpace>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void plain(byte)>(32);

        goto label3;

     label1:
        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingTab>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void plain(byte)>(9);

        goto label3;

     label2:
        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingCR>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void plain(byte)>(13);

     label3:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void clearPending()>();

        return;
    }

    public void completeEncoding()
    {
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void writePending()>();

        virtualinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void flushOutput()>();

        return;
    }

    public void encode(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r2;
        byte[] $r3;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        virtualinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void initEncoding(java.io.OutputStream)>($r2);

     label1:
        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] inBuffer>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r3);

        $i1 = -1;

        if $i0 <= $i1 goto label2;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] inBuffer>;

        virtualinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void encodeChunk(byte[],int,int)>($r3, 0, $i0);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void completeEncoding()>();

        return;
    }

    public void encodeChunk(byte[], int, int)
    {
        byte[] $r1;
        byte $b4;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $i0;

     label1:
        $i3 = $i1 + $i0;

        if $i2 >= $i3 goto label2;

        $b4 = $r1[$i2];

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: void encode(byte)>($b4);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void flushOutput()
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $i0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int outputIndex>;

        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: byte[] outBuffer>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

     label2:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int outputIndex> = 0;

        return;
    }

    public void initEncoding(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        org.apache.james.mime4j.codec.QuotedPrintableEncoder r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableEncoder;

        $r1 := @parameter0: java.io.OutputStream;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: java.io.OutputStream out> = $r1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingSpace> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingTab> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: boolean pendingCR> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableEncoder: int nextSoftBreak> = 77;

        return;
    }
}
