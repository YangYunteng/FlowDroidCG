public abstract class com.google.common.collect.AbstractNavigableMap extends com.google.common.collect.Maps$IteratorBasedAbstractMap implements java.util.NavigableMap
{

    public void <init>()
    {
        com.google.common.collect.AbstractNavigableMap r0;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        specialinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: void <init>()>();

        return;
    }

    public java.util.Map$Entry ceilingEntry(java.lang.Object)
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.NavigableMap $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>($r1, 1);

        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry firstEntry()>();

        return $r3;
    }

    public java.lang.Object ceilingKey(java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Map$Entry ceilingEntry(java.lang.Object)>($r1);

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object keyOrNull(java.util.Map$Entry)>($r2);

        return $r1;
    }

    public abstract java.util.Iterator descendingEntryIterator();

    public java.util.NavigableSet descendingKeySet()
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.util.NavigableSet $r2;
        java.util.NavigableMap $r1;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.NavigableMap descendingMap()>();

        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.util.NavigableSet navigableKeySet()>();

        return $r2;
    }

    public java.util.NavigableMap descendingMap()
    {
        com.google.common.collect.AbstractNavigableMap r0;
        com.google.common.collect.AbstractNavigableMap$DescendingMap $r1;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = new com.google.common.collect.AbstractNavigableMap$DescendingMap;

        specialinvoke $r1.<com.google.common.collect.AbstractNavigableMap$DescendingMap: void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Map$Entry firstEntry()
    {
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: java.util.Iterator entryIterator()>();

        $r2 = staticinvoke <com.google.common.collect.Iterators: java.lang.Object getNext(java.util.Iterator,java.lang.Object)>($r1, null);

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;
    }

    public java.lang.Object firstKey()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Map$Entry firstEntry()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public java.util.Map$Entry floorEntry(java.lang.Object)
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.NavigableMap $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>($r1, 1);

        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry lastEntry()>();

        return $r3;
    }

    public java.lang.Object floorKey(java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>($r1);

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object keyOrNull(java.util.Map$Entry)>($r2);

        return $r1;
    }

    public abstract java.lang.Object get(java.lang.Object);

    public java.util.SortedMap headMap(java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>($r2, 0);

        return $r1;
    }

    public java.util.Map$Entry higherEntry(java.lang.Object)
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.NavigableMap $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>($r1, 0);

        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry firstEntry()>();

        return $r3;
    }

    public java.lang.Object higherKey(java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Map$Entry higherEntry(java.lang.Object)>($r1);

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object keyOrNull(java.util.Map$Entry)>($r2);

        return $r1;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.util.NavigableSet $r1;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.NavigableSet navigableKeySet()>();

        return $r1;
    }

    public java.util.Map$Entry lastEntry()
    {
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Iterator descendingEntryIterator()>();

        $r2 = staticinvoke <com.google.common.collect.Iterators: java.lang.Object getNext(java.util.Iterator,java.lang.Object)>($r1, null);

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;
    }

    public java.lang.Object lastKey()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Map$Entry lastEntry()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public java.util.Map$Entry lowerEntry(java.lang.Object)
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.NavigableMap $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>($r1, 0);

        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry lastEntry()>();

        return $r3;
    }

    public java.lang.Object lowerKey(java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>($r1);

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object keyOrNull(java.util.Map$Entry)>($r2);

        return $r1;
    }

    public java.util.NavigableSet navigableKeySet()
    {
        com.google.common.collect.AbstractNavigableMap r0;
        com.google.common.collect.Maps$NavigableKeySet $r1;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = new com.google.common.collect.Maps$NavigableKeySet;

        specialinvoke $r1.<com.google.common.collect.Maps$NavigableKeySet: void <init>(java.util.NavigableMap)>(r0);

        return $r1;
    }

    public java.util.Map$Entry pollFirstEntry()
    {
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: java.util.Iterator entryIterator()>();

        $r2 = staticinvoke <com.google.common.collect.Iterators: java.lang.Object pollNext(java.util.Iterator)>($r1);

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;
    }

    public java.util.Map$Entry pollLastEntry()
    {
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractNavigableMap: java.util.Iterator descendingEntryIterator()>();

        $r2 = staticinvoke <com.google.common.collect.Iterators: java.lang.Object pollNext(java.util.Iterator)>($r1);

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r1, $r3;
        java.util.NavigableMap $r2;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>($r3, 1, $r1, 0);

        return $r2;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        com.google.common.collect.AbstractNavigableMap r0;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;

        r0 := @this: com.google.common.collect.AbstractNavigableMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = interfaceinvoke r0.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>($r2, 1);

        return $r1;
    }
}
