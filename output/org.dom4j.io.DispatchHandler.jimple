public class org.dom4j.io.DispatchHandler extends java.lang.Object implements org.dom4j.ElementHandler
{
    public boolean atRoot;
    public org.dom4j.ElementHandler defaultHandler;
    public java.util.ArrayList handlerStack;
    public java.util.HashMap handlers;
    public java.lang.String path;
    public java.util.ArrayList pathStack;

    public void <init>()
    {
        java.util.HashMap $r2;
        org.dom4j.io.DispatchHandler r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.io.DispatchHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.io.DispatchHandler: boolean atRoot> = 1;

        r0.<org.dom4j.io.DispatchHandler: java.lang.String path> = "/";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList pathStack> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers> = $r2;

        return;
    }

    public void addHandler(java.lang.String, org.dom4j.ElementHandler)
    {
        org.dom4j.ElementHandler $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;
        org.dom4j.io.DispatchHandler r0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.ElementHandler;

        $r3 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public boolean containsHandler(java.lang.String)
    {
        java.util.HashMap $r1;
        java.lang.String $r2;
        org.dom4j.io.DispatchHandler r0;
        boolean $z0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public int getActiveHandlerCount()
    {
        int $i0;
        org.dom4j.io.DispatchHandler r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r1 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public org.dom4j.ElementHandler getHandler(java.lang.String)
    {
        org.dom4j.ElementHandler $r4;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.dom4j.io.DispatchHandler r0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (org.dom4j.ElementHandler) $r2;

        return $r4;
    }

    public java.lang.String getPath()
    {
        java.lang.String r1;
        org.dom4j.io.DispatchHandler r0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        r1 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        return r1;
    }

    public void onEnd(org.dom4j.ElementPath)
    {
        org.dom4j.ElementHandler $r5;
        java.util.HashMap $r2;
        org.dom4j.io.DispatchHandler r0;
        java.util.ArrayList $r6;
        int $i0;
        java.lang.Object $r4;
        org.dom4j.ElementPath $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r1 := @parameter0: org.dom4j.ElementPath;

        $r2 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        if $r2 == null goto label1;

        $r3 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        $r3 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (org.dom4j.ElementHandler) $r4;

        $r6 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        interfaceinvoke $r5.<org.dom4j.ElementHandler: void onEnd(org.dom4j.ElementPath)>($r1);

        goto label2;

     label1:
        $r6 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack>;

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<org.dom4j.io.DispatchHandler: org.dom4j.ElementHandler defaultHandler>;

        if $r5 == null goto label2;

        interfaceinvoke $r5.<org.dom4j.ElementHandler: void onEnd(org.dom4j.ElementPath)>($r1);

     label2:
        $r6 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList pathStack>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        $r4 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r3 = (java.lang.String) $r4;

        r0.<org.dom4j.io.DispatchHandler: java.lang.String path> = $r3;

        $r6 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList pathStack>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label3;

        r0.<org.dom4j.io.DispatchHandler: boolean atRoot> = 1;

     label3:
        return;
    }

    public void onStart(org.dom4j.ElementPath)
    {
        org.dom4j.ElementHandler $r8;
        java.util.HashMap $r6;
        org.dom4j.io.DispatchHandler r0;
        java.util.ArrayList $r3;
        org.dom4j.Element $r2;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        org.dom4j.ElementPath $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r1 := @parameter0: org.dom4j.ElementPath;

        $r2 = interfaceinvoke $r1.<org.dom4j.ElementPath: org.dom4j.Element getCurrent()>();

        $r3 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList pathStack>;

        $r4 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $z0 = r0.<org.dom4j.io.DispatchHandler: boolean atRoot>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        $r5 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = interfaceinvoke $r2.<org.dom4j.Node: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.dom4j.io.DispatchHandler: java.lang.String path> = $r4;

        r0.<org.dom4j.io.DispatchHandler: boolean atRoot> = 0;

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        $r4 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = interfaceinvoke $r2.<org.dom4j.Node: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.dom4j.io.DispatchHandler: java.lang.String path> = $r4;

     label2:
        $r6 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        if $r6 == null goto label3;

        $r4 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        $z0 = virtualinvoke $r6.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r6 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        $r4 = r0.<org.dom4j.io.DispatchHandler: java.lang.String path>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r8 = (org.dom4j.ElementHandler) $r7;

        $r3 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        interfaceinvoke $r8.<org.dom4j.ElementHandler: void onStart(org.dom4j.ElementPath)>($r1);

        return;

     label3:
        $r3 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r8 = r0.<org.dom4j.io.DispatchHandler: org.dom4j.ElementHandler defaultHandler>;

        if $r8 == null goto label4;

        interfaceinvoke $r8.<org.dom4j.ElementHandler: void onStart(org.dom4j.ElementPath)>($r1);

     label4:
        return;
    }

    public org.dom4j.ElementHandler removeHandler(java.lang.String)
    {
        org.dom4j.ElementHandler $r4;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.dom4j.io.DispatchHandler r0;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        $r4 = (org.dom4j.ElementHandler) $r2;

        return $r4;
    }

    public void resetHandlers()
    {
        java.util.HashMap $r2;
        org.dom4j.io.DispatchHandler r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.io.DispatchHandler;

        r0.<org.dom4j.io.DispatchHandler: boolean atRoot> = 1;

        r0.<org.dom4j.io.DispatchHandler: java.lang.String path> = "/";

        $r1 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList pathStack>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r1 = r0.<org.dom4j.io.DispatchHandler: java.util.ArrayList handlerStack>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<org.dom4j.io.DispatchHandler: java.util.HashMap handlers>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        r0.<org.dom4j.io.DispatchHandler: org.dom4j.ElementHandler defaultHandler> = null;

        return;
    }

    public void setDefaultHandler(org.dom4j.ElementHandler)
    {
        org.dom4j.io.DispatchHandler r0;
        org.dom4j.ElementHandler $r1;

        r0 := @this: org.dom4j.io.DispatchHandler;

        $r1 := @parameter0: org.dom4j.ElementHandler;

        r0.<org.dom4j.io.DispatchHandler: org.dom4j.ElementHandler defaultHandler> = $r1;

        return;
    }
}
