public class com.google.common.util.concurrent.Monitor$1 extends com.google.common.util.concurrent.Monitor$Guard
{
    public final com.google.common.util.concurrent.Monitor this$0;
    public final java.util.function.BooleanSupplier val$isSatisfied;

    public void <init>(com.google.common.util.concurrent.Monitor, com.google.common.util.concurrent.Monitor, java.util.function.BooleanSupplier)
    {
        com.google.common.util.concurrent.Monitor$1 r0;
        com.google.common.util.concurrent.Monitor $r1, $r2;
        java.util.function.BooleanSupplier $r3;

        r0 := @this: com.google.common.util.concurrent.Monitor$1;

        $r1 := @parameter0: com.google.common.util.concurrent.Monitor;

        $r2 := @parameter1: com.google.common.util.concurrent.Monitor;

        $r3 := @parameter2: java.util.function.BooleanSupplier;

        r0.<com.google.common.util.concurrent.Monitor$1: com.google.common.util.concurrent.Monitor this$0> = $r1;

        r0.<com.google.common.util.concurrent.Monitor$1: java.util.function.BooleanSupplier val$isSatisfied> = $r3;

        specialinvoke r0.<com.google.common.util.concurrent.Monitor$Guard: void <init>(com.google.common.util.concurrent.Monitor)>($r2);

        return;
    }

    public boolean isSatisfied()
    {
        com.google.common.util.concurrent.Monitor$1 r0;
        boolean $z0;
        java.util.function.BooleanSupplier $r1;

        r0 := @this: com.google.common.util.concurrent.Monitor$1;

        $r1 = r0.<com.google.common.util.concurrent.Monitor$1: java.util.function.BooleanSupplier val$isSatisfied>;

        $z0 = interfaceinvoke $r1.<java.util.function.BooleanSupplier: boolean getAsBoolean()>();

        return $z0;
    }
}
