public class c.d.a.b.c extends java.lang.Object implements c.b.a.a.f
{
    public c.d.a.b.c$a a;
    public final javax.net.ssl.SSLSocketFactory b;
    public java.lang.String c;

    public void <init>()
    {
        c.d.a.b.c r0;

        r0 := @this: c.d.a.b.c;

        specialinvoke r0.<c.d.a.b.c: void <init>(c.d.a.b.c$a)>(null);

        return;
    }

    public void <init>(c.d.a.b.c$a)
    {
        c.d.a.b.c$a $r1;
        c.d.a.b.c r0;

        r0 := @this: c.d.a.b.c;

        $r1 := @parameter0: c.d.a.b.c$a;

        specialinvoke r0.<c.d.a.b.c: void <init>(c.d.a.b.c$a,javax.net.ssl.SSLSocketFactory)>($r1, null);

        return;
    }

    public void <init>(c.d.a.b.c$a, javax.net.ssl.SSLSocketFactory)
    {
        c.d.a.b.c$a $r1;
        c.d.a.b.c r0;
        javax.net.ssl.SSLSocketFactory $r2;

        r0 := @this: c.d.a.b.c;

        $r1 := @parameter0: c.d.a.b.c$a;

        $r2 := @parameter1: javax.net.ssl.SSLSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.d.a.b.c: c.d.a.b.c$a a> = $r1;

        r0.<c.d.a.b.c: javax.net.ssl.SSLSocketFactory b> = $r2;

        return;
    }

    public static org.apache.http.HttpEntity a(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r2;
        org.apache.http.HttpEntity $r6;
        java.io.IOException $r1;
        long $l1;
        org.apache.http.entity.BasicHttpEntity $r0, $r5;
        int $i0;
        java.lang.String $r4;
        java.io.InputStream $r3;

        $r2 := @parameter0: java.net.HttpURLConnection;

        $r5 = new org.apache.http.entity.BasicHttpEntity;

        $r0 = $r5;

        specialinvoke $r5.<org.apache.http.entity.BasicHttpEntity: void <init>()>();

     label1:
        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        goto label4;

     label3:
        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label4:
        virtualinvoke $r0.<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>($r3);

        $i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getContentLength()>();

        $l1 = (long) $i0;

        virtualinvoke $r0.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>($l1);

        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

        virtualinvoke $r0.<org.apache.http.entity.BasicHttpEntity: void setContentEncoding(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        virtualinvoke $r0.<org.apache.http.entity.BasicHttpEntity: void setContentType(java.lang.String)>($r4);

        $r6 = (org.apache.http.HttpEntity) $r0;

        return $r6;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch java.io.IOException from label1 to label2 with label5;
    }

    public static void a(java.net.HttpURLConnection, c.b.a.j)
    {
        java.net.HttpURLConnection $r0;
        java.io.OutputStream $r6;
        byte[] $r2;
        c.b.a.j $r1;
        long $l1, $l2;
        java.io.DataOutputStream $r5;
        int $i0, $i3, $i4, $i5, $i6;
        java.lang.String $r4;
        c.d.a.c.b $r3;
        boolean $z0;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 := @parameter1: c.b.a.j;

        $r2 = virtualinvoke $r1.<c.b.a.j: byte[] getBody()>();

        if $r2 == null goto label5;

        $r3 = null;

        $z0 = $r1 instanceof c.d.a.c.b;

        if $z0 == 0 goto label1;

        $r3 = (c.d.a.c.b) $r1;

     label1:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r4 = virtualinvoke $r1.<c.b.a.j: java.lang.String getBodyContentType()>();

        virtualinvoke $r0.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r4);

        $r5 = new java.io.DataOutputStream;

        $r6 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        if $r3 == null goto label3;

        $i3 = lengthof $r2;

        $i0 = $i3;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(2048, $i0);

        $i5 = 0;

        $i6 = 0;

     label2:
        if $i4 <= 0 goto label4;

        $i0 = $i5 + $i4;

        if $i0 > $i3 goto label4;

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[],int,int)>($r2, $i5, $i4);

        $i6 = $i6 + $i4;

        $l1 = (long) $i6;

        $l2 = (long) $i3;

        interfaceinvoke $r3.<c.d.a.c.b: void a(long,long)>($l1, $l2);

        $i5 = $i3 - $i0;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 0);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $i5 = $i0;

        goto label2;

     label3:
        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[])>($r2);

     label4:
        virtualinvoke $r5.<java.io.DataOutputStream: void close()>();

     label5:
        return;
    }

    public static void b(java.net.HttpURLConnection, c.b.a.j)
    {
        java.net.HttpURLConnection $r1;
        byte[] $r23;
        java.io.BufferedInputStream $r22;
        java.lang.Integer $r7;
        java.util.Map $r9, $r10;
        boolean $z0;
        java.io.PrintWriter $r13, $r19;
        java.util.Set $r15;
        java.lang.Exception $r29;
        java.lang.StringBuilder $r4;
        c.d.a.c.b $r11;
        c.d.a.a.e $r2;
        java.lang.Throwable $r25, $r26, $r28;
        java.lang.Object[] $r6;
        c.b.a.j $r0;
        long $l0, $l4;
        c.d.a.a.e$a $r18;
        int $i1, $i2, $i3;
        java.io.OutputStreamWriter $r14;
        java.lang.String $r3, $r5, $r8;
        java.io.OutputStream $r12;
        java.util.Iterator $r16;
        java.io.IOException $r24, $r27;
        java.io.FileInputStream $r21;
        java.io.File $r20;
        java.lang.Object $r17;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r0 := @parameter1: c.b.a.j;

        $r2 = (c.d.a.a.e) $r0;

        $r3 = virtualinvoke $r2.<c.d.a.a.e: java.lang.String c()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $i1 = (int) $l0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r3;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[1] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("multipart/form-data; charset=%s; boundary=%s", $r6);

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r8);

        $r9 = virtualinvoke $r2.<c.d.a.a.e: java.util.Map b()>();

        $r10 = virtualinvoke $r2.<c.d.a.a.e: java.util.Map a()>();

        $z0 = virtualinvoke $r2.<c.d.a.a.e: boolean d()>();

        if $z0 == 0 goto label01;

        $i1 = staticinvoke <c.d.a.a.h: int a(java.lang.String,java.util.Map,java.util.Map)>($r5, $r9, $r10);

        virtualinvoke $r1.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1);

        goto label02;

     label01:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

     label02:
        $r11 = (c.d.a.c.b) $r0;

     label03:
        $r12 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

     label04:
        $r13 = new java.io.PrintWriter;

        $r14 = new java.io.OutputStreamWriter;

     label05:
        specialinvoke $r14.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r12, $r3);

        specialinvoke $r13.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r14, 1);

     label06:
        $r15 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label08:
        if $z0 == 0 goto label16;

     label09:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r17;

        $r17 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r18 = (c.d.a.a.e$a) $r17;

        $r19 = virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r5);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

     label10:
        $r6 = newarray (java.lang.Object)[1];

     label11:
        $r6[0] = $r3;

     label12:
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"", $r6);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r3);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

     label13:
        $r4 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");

        $r3 = $r18.<c.d.a.a.e$a: java.lang.String a>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r3);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        $r3 = $r18.<c.d.a.a.e$a: java.lang.String b>;

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r3);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

     label15:
        goto label07;

     label16:
        $r15 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label18:
        if $z0 == 0 goto label64;

     label19:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r17;

     label20:
        $r20 = new java.io.File;

     label21:
        $r17 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r8 = (java.lang.String) $r17;

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke $r20.<java.io.File: boolean exists()>();

     label22:
        if $z0 == 0 goto label60;

     label23:
        $z0 = virtualinvoke $r20.<java.io.File: boolean isDirectory()>();

     label24:
        if $z0 != 0 goto label56;

     label25:
        $r19 = virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r5);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

     label26:
        $r6 = newarray (java.lang.Object)[2];

     label27:
        $r6[0] = $r3;

     label28:
        $r3 = virtualinvoke $r20.<java.io.File: java.lang.String getName()>();

     label29:
        $r6[1] = $r3;

     label30:
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"; filename=\"%s\"", $r6);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r3);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Content-Type: application/octet-stream");

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Content-Transfer-Encoding: binary");

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

     label31:
        $r21 = new java.io.FileInputStream;

        specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>($r20);

        $l0 = virtualinvoke $r20.<java.io.File: long length()>();

     label32:
        $i1 = (int) $l0;

     label33:
        $r22 = new java.io.BufferedInputStream;

        specialinvoke $r22.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r21);

     label34:
        $r23 = newarray (byte)[1024];

        $i2 = 0;

     label35:
        $i3 = virtualinvoke $r22.<java.io.BufferedInputStream: int read(byte[])>($r23);

     label36:
        if $i3 <= 0 goto label41;

     label37:
        virtualinvoke $r12.<java.io.OutputStream: void write(byte[],int,int)>($r23, 0, $i3);

     label38:
        $i2 = $i2 + $i3;

        $l0 = (long) $i2;

        $l4 = (long) $i1;

     label39:
        interfaceinvoke $r11.<c.d.a.c.b: void a(long,long)>($l0, $l4);

     label40:
        goto label35;

     label41:
        virtualinvoke $r12.<java.io.OutputStream: void flush()>();

     label42:
        virtualinvoke $r22.<java.io.BufferedInputStream: void close()>();

     label43:
        goto label46;

     label44:
        $r24 := @caughtexception;

     label45:
        virtualinvoke $r24.<java.io.IOException: void printStackTrace()>();

     label46:
        $r19 = virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

     label47:
        goto label17;

     label48:
        $r25 := @caughtexception;

        goto label50;

     label49:
        $r26 := @caughtexception;

        $r25 = $r26;

        $r22 = null;

     label50:
        if $r22 == null goto label55;

     label51:
        virtualinvoke $r22.<java.io.BufferedInputStream: void close()>();

     label52:
        goto label55;

     label53:
        $r27 := @caughtexception;

     label54:
        virtualinvoke $r27.<java.io.IOException: void printStackTrace()>();

     label55:
        throw $r25;

     label56:
        $r24 = new java.io.IOException;

        $r6 = newarray (java.lang.Object)[1];

     label57:
        $r5 = virtualinvoke $r20.<java.io.File: java.lang.String getAbsolutePath()>();

     label58:
        $r6[0] = $r5;

     label59:
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("File is a directory: %s", $r6);

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r24;

     label60:
        $r24 = new java.io.IOException;

        $r6 = newarray (java.lang.Object)[1];

     label61:
        $r5 = virtualinvoke $r20.<java.io.File: java.lang.String getAbsolutePath()>();

     label62:
        $r6[0] = $r5;

     label63:
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("File not found: %s", $r6);

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r24;

     label64:
        $r4 = new java.lang.StringBuilder;

     label65:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r5);

        $r19 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\r\n");

        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

     label66:
        virtualinvoke $r13.<java.io.PrintWriter: void close()>();

        return;

     label67:
        $r28 := @caughtexception;

        goto label74;

     label68:
        $r29 := @caughtexception;

        goto label71;

     label69:
        $r28 := @caughtexception;

        $r13 = null;

        goto label74;

     label70:
        $r29 := @caughtexception;

        $r13 = null;

     label71:
        virtualinvoke $r29.<java.lang.Exception: void printStackTrace()>();

     label72:
        if $r13 == null goto label77;

        virtualinvoke $r13.<java.io.PrintWriter: void close()>();

        return;

     label73:
        $r28 := @caughtexception;

     label74:
        if $r13 == null goto label75;

        virtualinvoke $r13.<java.io.PrintWriter: void close()>();

     label75:
        goto label76;

     label76:
        throw $r28;

     label77:
        return;

        catch java.lang.Exception from label03 to label04 with label70;
        catch java.lang.Exception from label05 to label06 with label70;
        catch java.lang.Throwable from label03 to label06 with label69;
        catch java.lang.Exception from label06 to label08 with label68;
        catch java.lang.Throwable from label06 to label08 with label67;
        catch java.lang.Exception from label09 to label10 with label68;
        catch java.lang.Exception from label11 to label13 with label68;
        catch java.lang.Exception from label14 to label15 with label68;
        catch java.lang.Exception from label16 to label18 with label68;
        catch java.lang.Exception from label19 to label20 with label68;
        catch java.lang.Exception from label21 to label22 with label68;
        catch java.lang.Exception from label23 to label24 with label68;
        catch java.lang.Exception from label25 to label26 with label68;
        catch java.lang.Exception from label27 to label31 with label68;
        catch java.lang.Throwable from label09 to label11 with label67;
        catch java.lang.Throwable from label12 to label15 with label67;
        catch java.lang.Throwable from label16 to label18 with label67;
        catch java.lang.Throwable from label19 to label22 with label67;
        catch java.lang.Throwable from label23 to label24 with label67;
        catch java.lang.Throwable from label25 to label27 with label67;
        catch java.lang.Throwable from label28 to label29 with label67;
        catch java.lang.Throwable from label30 to label31 with label67;
        catch java.lang.Throwable from label31 to label32 with label49;
        catch java.lang.Throwable from label33 to label34 with label49;
        catch java.lang.Throwable from label35 to label36 with label48;
        catch java.lang.Throwable from label37 to label38 with label48;
        catch java.lang.Throwable from label39 to label40 with label48;
        catch java.lang.Throwable from label41 to label42 with label48;
        catch java.io.IOException from label42 to label43 with label44;
        catch java.lang.Exception from label42 to label43 with label68;
        catch java.lang.Throwable from label42 to label43 with label67;
        catch java.lang.Exception from label45 to label47 with label68;
        catch java.lang.Throwable from label45 to label47 with label67;
        catch java.io.IOException from label51 to label52 with label53;
        catch java.lang.Exception from label51 to label52 with label68;
        catch java.lang.Throwable from label51 to label52 with label67;
        catch java.lang.Exception from label54 to label56 with label68;
        catch java.lang.Exception from label57 to label60 with label68;
        catch java.lang.Exception from label61 to label64 with label68;
        catch java.lang.Exception from label65 to label66 with label68;
        catch java.lang.Throwable from label54 to label58 with label67;
        catch java.lang.Throwable from label59 to label62 with label67;
        catch java.lang.Throwable from label63 to label66 with label67;
        catch java.lang.Throwable from label71 to label72 with label73;
    }

    public static void c(java.net.HttpURLConnection, c.b.a.j)
    {
        java.net.HttpURLConnection $r0;
        java.io.OutputStream $r6;
        java.lang.IllegalStateException $r2;
        byte[] $r3;
        c.b.a.j $r1;
        java.io.DataOutputStream $r5;
        int $i0;
        java.lang.String $r4;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 := @parameter1: c.b.a.j;

        $i0 = virtualinvoke $r1.<c.b.a.j: int getMethod()>();

        lookupswitch($i0)
        {
            case -1: goto label10;
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown method type.");

        throw $r2;

     label02:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-HTTP-Method-Override", "PATCH");

        staticinvoke <c.d.a.b.c: void a(java.net.HttpURLConnection,c.b.a.j)>($r0, $r1);

        return;

     label03:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("TRACE");

        return;

     label04:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("OPTIONS");

        return;

     label05:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD");

        return;

     label06:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("DELETE");

        return;

     label07:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PUT");

        staticinvoke <c.d.a.b.c: void a(java.net.HttpURLConnection,c.b.a.j)>($r0, $r1);

        return;

     label08:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        staticinvoke <c.d.a.b.c: void a(java.net.HttpURLConnection,c.b.a.j)>($r0, $r1);

        return;

     label09:
        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        return;

     label10:
        $r3 = virtualinvoke $r1.<c.b.a.j: byte[] getPostBody()>();

        if $r3 == null goto label11;

        virtualinvoke $r0.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r4 = virtualinvoke $r1.<c.b.a.j: java.lang.String getPostBodyContentType()>();

        virtualinvoke $r0.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r4);

        $r5 = new java.io.DataOutputStream;

        $r6 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[])>($r3);

        virtualinvoke $r5.<java.io.DataOutputStream: void close()>();

     label11:
        return;
    }

    public java.net.HttpURLConnection a(java.net.URL)
    {
        java.net.HttpURLConnection $r4;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.lang.Object $r3;
        c.d.a.b.c r0;

        r0 := @this: c.d.a.b.c;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = staticinvoke <com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object instrument(java.lang.Object)>($r2);

        $r4 = (java.net.HttpURLConnection) $r3;

        return $r4;
    }

    public final java.net.HttpURLConnection a(java.net.URL, c.b.a.j)
    {
        java.net.HttpURLConnection $r3;
        javax.net.ssl.HttpsURLConnection $r7;
        c.b.a.j $r2;
        java.net.URL $r1;
        javax.net.ssl.SSLSocketFactory $r6;
        int $i0;
        java.lang.String $r4, $r5;
        c.d.a.b.c r0;
        boolean $z0;

        r0 := @this: c.d.a.b.c;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: c.b.a.j;

        $r3 = virtualinvoke r0.<c.d.a.b.c: java.net.HttpURLConnection a(java.net.URL)>($r1);

        $i0 = virtualinvoke $r2.<c.b.a.j: int getTimeoutMs()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        $r4 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $r5 = "https";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r6 = r0.<c.d.a.b.c: javax.net.ssl.SSLSocketFactory b>;

        if $r6 == null goto label1;

        $r7 = (javax.net.ssl.HttpsURLConnection) $r3;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r6);

     label1:
        return $r3;
    }

    public org.apache.http.HttpResponse a(c.b.a.j, java.util.Map)
    {
        java.net.HttpURLConnection $r10;
        java.net.URL $r22;
        org.apache.http.StatusLine $r27;
        org.apache.http.Header $r28;
        java.util.Map $r2, $r5;
        boolean $z0;
        org.apache.http.HttpEntity $r15;
        java.util.Set $r11;
        java.util.List $r17;
        c.d.a.b.c$a $r6;
        java.lang.StringBuilder $r9, $r20;
        c.b.a.j $r1;
        org.apache.http.message.BasicStatusLine $r24;
        java.util.HashMap $r4, $r19;
        org.apache.http.message.BasicHttpResponse $r14, $r25;
        int $i0, $i1;
        java.lang.String $r3, $r7, $r8;
        java.util.Map$Entry $r16;
        java.util.Iterator $r12, $r18;
        java.io.IOException $r21;
        org.apache.http.ProtocolVersion $r23;
        org.apache.http.message.BasicHeader $r26;
        org.apache.http.HttpResponse $r29;
        java.lang.Object $r13;
        c.d.a.b.c r0;

        r0 := @this: c.d.a.b.c;

        $r1 := @parameter0: c.b.a.j;

        $r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke $r1.<c.b.a.j: java.lang.String getUrl()>();

        $r19 = new java.util.HashMap;

        $r4 = $r19;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke $r1.<c.b.a.j: java.util.Map getHeaders()>();

        virtualinvoke $r4.<java.util.HashMap: void putAll(java.util.Map)>($r5);

        virtualinvoke $r4.<java.util.HashMap: void putAll(java.util.Map)>($r2);

        $r6 = r0.<c.d.a.b.c: c.d.a.b.c$a a>;

        if $r6 == null goto label02;

        $r7 = interfaceinvoke $r6.<c.d.a.b.c$a: java.lang.String a(java.lang.String)>($r3);

        $r8 = $r7;

        if $r7 == null goto label01;

        goto label03;

     label01:
        $r21 = new java.io.IOException;

        $r20 = new java.lang.StringBuilder;

        $r9 = $r20;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL blocked by rewriter: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r21;

     label02:
        $r8 = $r3;

     label03:
        $r22 = new java.net.URL;

        specialinvoke $r22.<java.net.URL: void <init>(java.lang.String)>($r8);

        $r10 = virtualinvoke r0.<c.d.a.b.c: java.net.HttpURLConnection a(java.net.URL,c.b.a.j)>($r22, $r1);

        $r3 = r0.<c.d.a.b.c: java.lang.String c>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label04;

        $r3 = r0.<c.d.a.b.c: java.lang.String c>;

        virtualinvoke $r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3);

     label04:
        $r11 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r13;

        $r13 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (java.lang.String) $r13;

        virtualinvoke $r10.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r3, $r7);

        goto label05;

     label06:
        $z0 = $r1 instanceof c.d.a.a.e;

        if $z0 == 0 goto label07;

        staticinvoke <c.d.a.b.c: void b(java.net.HttpURLConnection,c.b.a.j)>($r10, $r1);

        goto label08;

     label07:
        staticinvoke <c.d.a.b.c: void c(java.net.HttpURLConnection,c.b.a.j)>($r10, $r1);

     label08:
        $r23 = new org.apache.http.ProtocolVersion;

        specialinvoke $r23.<org.apache.http.ProtocolVersion: void <init>(java.lang.String,int,int)>("HTTP", 1, 1);

        $i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>();

        $i1 = -1;

        if $i0 == $i1 goto label12;

        $r24 = new org.apache.http.message.BasicStatusLine;

        $i0 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>();

        $r3 = virtualinvoke $r10.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        specialinvoke $r24.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>($r23, $i0, $r3);

        $r25 = new org.apache.http.message.BasicHttpResponse;

        $r14 = $r25;

        $r27 = (org.apache.http.StatusLine) $r24;

        specialinvoke $r25.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine)>($r27);

        $r15 = staticinvoke <c.d.a.b.c: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>($r10);

        virtualinvoke $r14.<org.apache.http.message.BasicHttpResponse: void setEntity(org.apache.http.HttpEntity)>($r15);

        $r2 = virtualinvoke $r10.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r11 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r13;

        $r13 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r13 == null goto label09;

        $r13 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.util.List) $r13;

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r13 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r13;

        $r26 = new org.apache.http.message.BasicHeader;

        $r13 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r13;

        specialinvoke $r26.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>($r7, $r3);

        $r28 = (org.apache.http.Header) $r26;

        virtualinvoke $r14.<org.apache.http.message.BasicHttpResponse: void addHeader(org.apache.http.Header)>($r28);

        goto label10;

     label11:
        $r29 = (org.apache.http.HttpResponse) $r14;

        return $r29;

     label12:
        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("Could not retrieve response code from HttpUrlConnection.");

        goto label13;

     label13:
        throw $r21;
    }
}
