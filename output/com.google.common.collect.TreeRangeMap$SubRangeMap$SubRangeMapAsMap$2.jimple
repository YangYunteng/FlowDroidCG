public class com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 extends com.google.common.collect.Maps$EntrySet
{
    public final com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2;

    public void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 r0;
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2;

        $r1 := @parameter0: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap;

        r0.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2> = $r1;

        specialinvoke r0.<com.google.common.collect.Maps$EntrySet: void <init>()>();

        return;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 r0;
        java.util.Iterator $r1;
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap $r2;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2;

        $r2 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap: java.util.Iterator entryIterator()>();

        return $r1;
    }

    public java.util.Map map()
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 r0;
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2;

        r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2>;

        return r1;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 r0;
        com.google.common.base.Predicate $r3;
        java.util.Collection $r2;
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2;

        $r2 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate in(java.util.Collection)>($r2);

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate not(com.google.common.base.Predicate)>($r3);

        $z0 = staticinvoke <com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap: boolean access$400(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,com.google.common.base.Predicate)>($r1, $r3);

        return $z0;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2: java.util.Iterator iterator()>();

        $i0 = staticinvoke <com.google.common.collect.Iterators: int size(java.util.Iterator)>($r1);

        return $i0;
    }
}
