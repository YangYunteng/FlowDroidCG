public final class com.google.auto.common.MoreTypes extends java.lang.Object
{
    public static final java.lang.reflect.Method GET_BOUNDS;
    public static final int HASH_MULTIPLIER;
    public static final int HASH_SEED;
    public static final java.lang.Class INTERSECTION_TYPE;

    static void <clinit>()
    {
        java.lang.Class[] $r4;
        java.lang.Class $r2, $r3;
        java.lang.reflect.Method $r1, $r5;
        java.lang.Exception $r0;

        <com.google.auto.common.MoreTypes: int HASH_SEED> = 17;

        <com.google.auto.common.MoreTypes: int HASH_MULTIPLIER> = 31;

        $r1 = null;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.lang.model.type.IntersectionType");

     label2:
        $r3 = $r2;

        $r4 = newarray (java.lang.Class)[0];

     label3:
        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBounds", $r4);

     label4:
        $r1 = $r5;

        goto label6;

     label5:
        $r3 = null;

     label6:
        <com.google.auto.common.MoreTypes: java.lang.Class INTERSECTION_TYPE> = $r3;

        <com.google.auto.common.MoreTypes: java.lang.reflect.Method GET_BOUNDS> = $r1;

        return;

     label7:
        $r0 := @caughtexception;

        goto label5;

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    public void <init>()
    {
        com.google.auto.common.MoreTypes r0;

        r0 := @this: com.google.auto.common.MoreTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean access$000(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror, java.util.Set)
    {
        javax.lang.model.type.TypeMirror $r0, $r2;
        java.util.Set $r1;
        boolean $z0;

        $r2 := @parameter0: javax.lang.model.type.TypeMirror;

        $r0 := @parameter1: javax.lang.model.type.TypeMirror;

        $r1 := @parameter2: java.util.Set;

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean equal(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,java.util.Set)>($r2, $r0, $r1);

        return $z0;
    }

    public static int access$100(javax.lang.model.type.TypeMirror, java.util.Set)
    {
        int $i0;
        java.util.Set $r0;
        javax.lang.model.type.TypeMirror $r1;

        $r1 := @parameter0: javax.lang.model.type.TypeMirror;

        $r0 := @parameter1: java.util.Set;

        $i0 = staticinvoke <com.google.auto.common.MoreTypes: int hash(javax.lang.model.type.TypeMirror,java.util.Set)>($r1, $r0);

        return $i0;
    }

    public static javax.lang.model.type.TypeMirror access$300(javax.lang.model.type.DeclaredType)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.DeclaredType $r1;

        $r1 := @parameter0: javax.lang.model.type.DeclaredType;

        $r0 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.TypeMirror enclosingType(javax.lang.model.type.DeclaredType)>($r1);

        return $r0;
    }

    public static boolean access$400(java.util.List, java.util.List, java.util.Set)
    {
        java.util.List $r0, $r2;
        java.util.Set $r1;
        boolean $z0;

        $r2 := @parameter0: java.util.List;

        $r0 := @parameter1: java.util.List;

        $r1 := @parameter2: java.util.Set;

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean equalLists(java.util.List,java.util.List,java.util.Set)>($r2, $r0, $r1);

        return $z0;
    }

    public static int access$700(java.util.List, java.util.Set)
    {
        int $i0;
        java.util.Set $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.util.Set;

        $i0 = staticinvoke <com.google.auto.common.MoreTypes: int hashList(java.util.List,java.util.Set)>($r1, $r0);

        return $i0;
    }

    public static javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.ArrayType $r3;
        javax.lang.model.type.TypeMirror $r0;
        com.google.auto.common.MoreTypes$ArrayTypeVisitor $r1;
        javax.lang.model.type.TypeVisitor $r4;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$ArrayTypeVisitor: com.google.auto.common.MoreTypes$ArrayTypeVisitor access$1100()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.ArrayType) $r2;

        return $r3;
    }

    public static javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.auto.common.MoreTypes$DeclaredTypeVisitor $r1;
        javax.lang.model.type.DeclaredType $r3;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$DeclaredTypeVisitor: com.google.auto.common.MoreTypes$DeclaredTypeVisitor access$1200()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.DeclaredType) $r2;

        return $r3;
    }

    public static javax.lang.model.element.Element asElement(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        com.google.auto.common.MoreTypes$AsElementVisitor $r1;
        javax.lang.model.type.TypeVisitor $r4;
        java.lang.Object $r2;
        javax.lang.model.element.Element $r3;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$AsElementVisitor: com.google.auto.common.MoreTypes$AsElementVisitor access$1000()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.element.Element) $r2;

        return $r3;
    }

    public static javax.lang.model.type.ErrorType asError(javax.lang.model.type.TypeMirror)
    {
        com.google.auto.common.MoreTypes$ErrorTypeVisitor $r1;
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.ErrorType $r3;
        javax.lang.model.type.TypeVisitor $r4;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$ErrorTypeVisitor: com.google.auto.common.MoreTypes$ErrorTypeVisitor access$1300()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.ErrorType) $r2;

        return $r3;
    }

    public static javax.lang.model.type.ExecutableType asExecutable(javax.lang.model.type.TypeMirror)
    {
        com.google.auto.common.MoreTypes$ExecutableTypeVisitor $r1;
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.ExecutableType $r3;
        javax.lang.model.type.TypeVisitor $r4;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$ExecutableTypeVisitor: com.google.auto.common.MoreTypes$ExecutableTypeVisitor access$1400()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.ExecutableType) $r2;

        return $r3;
    }

    public static javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.util.Types, javax.lang.model.type.DeclaredType, javax.lang.model.element.VariableElement)
    {
        java.lang.IllegalStateException $r16;
        javax.lang.model.element.VariableElement $r0, $r12;
        javax.lang.model.type.DeclaredType $r2;
        int $i0, $i1, $i2;
        java.lang.String $r14;
        boolean $z0;
        javax.lang.model.element.ElementKind $r3, $r4;
        javax.lang.model.type.ExecutableType $r8;
        javax.lang.model.element.ExecutableElement $r6;
        javax.lang.model.element.Element $r5;
        javax.lang.model.util.Types $r1;
        javax.lang.model.type.TypeMirror $r7;
        java.util.List $r9, $r10;
        java.lang.Object $r11;
        java.lang.StringBuilder $r13, $r15;

        $r1 := @parameter0: javax.lang.model.util.Types;

        $r2 := @parameter1: javax.lang.model.type.DeclaredType;

        $r0 := @parameter2: javax.lang.model.element.VariableElement;

        $r3 = interfaceinvoke $r0.<javax.lang.model.element.VariableElement: javax.lang.model.element.ElementKind getKind()>();

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind PARAMETER>;

        $z0 = virtualinvoke $r3.<javax.lang.model.element.ElementKind: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r0.<javax.lang.model.element.VariableElement: javax.lang.model.element.Element getEnclosingElement()>();

        $r6 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.ExecutableElement asExecutable(javax.lang.model.element.Element)>($r5);

        $r5 = (javax.lang.model.element.Element) $r6;

        $r7 = interfaceinvoke $r1.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>($r2, $r5);

        $r8 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ExecutableType asExecutable(javax.lang.model.type.TypeMirror)>($r7);

        $r9 = interfaceinvoke $r6.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        $r10 = interfaceinvoke $r8.<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>();

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i2 = 0;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

     label3:
        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 >= $i0 goto label5;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2);

        $r12 = (javax.lang.model.element.VariableElement) $r11;

        $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (javax.lang.model.type.TypeMirror) $r11;

        return $r7;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        $r13 = $r15;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find variable: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r16;

     label6:
        $r5 = (javax.lang.model.element.Element) $r0;

        $r7 = interfaceinvoke $r1.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>($r2, $r5);

        return $r7;
    }

    public static javax.lang.model.type.NoType asNoType(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r4;
        javax.lang.model.type.NoType $r3;
        java.lang.Object $r2;
        com.google.auto.common.MoreTypes$NoTypeVisitor $r1;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$NoTypeVisitor: com.google.auto.common.MoreTypes$NoTypeVisitor access$1500()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.NoType) $r2;

        return $r3;
    }

    public static javax.lang.model.type.NullType asNullType(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        com.google.auto.common.MoreTypes$NullTypeVisitor $r1;
        javax.lang.model.type.TypeVisitor $r4;
        javax.lang.model.type.NullType $r3;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$NullTypeVisitor: com.google.auto.common.MoreTypes$NullTypeVisitor access$1600()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.NullType) $r2;

        return $r3;
    }

    public static javax.lang.model.type.PrimitiveType asPrimitiveType(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r4;
        javax.lang.model.type.PrimitiveType $r3;
        com.google.auto.common.MoreTypes$PrimitiveTypeVisitor $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$PrimitiveTypeVisitor: com.google.auto.common.MoreTypes$PrimitiveTypeVisitor access$1700()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.PrimitiveType) $r2;

        return $r3;
    }

    public static javax.lang.model.element.TypeElement asTypeElement(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.element.Element $r1;
        javax.lang.model.element.TypeElement $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.element.Element asElement(javax.lang.model.type.TypeMirror)>($r0);

        $r2 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r1);

        return $r2;
    }

    public static com.google.common.collect.ImmutableSet asTypeElements(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r6;
        java.util.Iterator $r2;
        com.google.common.collect.ImmutableSet$Builder $r1;
        javax.lang.model.element.TypeElement $r5;
        java.lang.Iterable $r0;
        javax.lang.model.type.TypeMirror $r4;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (javax.lang.model.type.TypeMirror) $r3;

        $r5 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.element.TypeElement asTypeElement(javax.lang.model.type.TypeMirror)>($r4);

        virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r6 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r6;
    }

    public static javax.lang.model.type.TypeVariable asTypeVariable(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.auto.common.MoreTypes$TypeVariableVisitor $r1;
        javax.lang.model.type.TypeVariable $r3;
        java.lang.Object $r2;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$TypeVariableVisitor: com.google.auto.common.MoreTypes$TypeVariableVisitor access$1800()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.TypeVariable) $r2;

        return $r3;
    }

    public static javax.lang.model.type.WildcardType asWildcard(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.auto.common.MoreTypes$WildcardTypeVisitor $r1;
        java.lang.Object $r2;
        javax.lang.model.type.WildcardType $r3;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$WildcardTypeVisitor: com.google.auto.common.MoreTypes$WildcardTypeVisitor access$1900()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (javax.lang.model.type.WildcardType) $r2;

        return $r3;
    }

    public static javax.lang.model.type.TypeMirror enclosingType(javax.lang.model.type.DeclaredType)
    {
        javax.lang.model.element.Modifier $r6;
        java.util.Set $r5;
        javax.lang.model.element.Element $r4;
        javax.lang.model.type.TypeKind $r0, $r3;
        javax.lang.model.type.TypeMirror $r2;
        javax.lang.model.type.DeclaredType $r1;
        boolean $z0;

        $r1 := @parameter0: javax.lang.model.type.DeclaredType;

        $r2 = interfaceinvoke $r1.<javax.lang.model.type.DeclaredType: javax.lang.model.type.TypeMirror getEnclosingType()>();

        $r3 = interfaceinvoke $r2.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r0 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind NONE>;

        $z0 = virtualinvoke $r3.<javax.lang.model.type.TypeKind: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke $r1.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r5 = interfaceinvoke $r4.<javax.lang.model.element.Element: java.util.Set getModifiers()>();

        $r6 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier STATIC>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return $r2;

     label2:
        return null;
    }

    public static boolean equal(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror, java.util.Set)
    {
        java.util.Set $r2;
        javax.lang.model.type.TypeMirror $r0, $r1;
        javax.lang.model.type.TypeVisitor $r9;
        com.google.auto.common.MoreTypes$EqualVisitorParam $r3, $r8;
        java.lang.Boolean $r7;
        java.lang.Class $r4;
        java.lang.Object $r6;
        com.google.auto.common.MoreTypes$EqualVisitor $r5;
        boolean $z0;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 := @parameter1: javax.lang.model.type.TypeMirror;

        $r2 := @parameter2: java.util.Set;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r0, $r1);

        if $z0 == 0 goto label1;

        $z0 = $r0 instanceof javax.lang.model.type.ExecutableType;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $r8 = new com.google.auto.common.MoreTypes$EqualVisitorParam;

        $r3 = $r8;

        specialinvoke $r8.<com.google.auto.common.MoreTypes$EqualVisitorParam: void <init>(com.google.auto.common.MoreTypes$1)>(null);

        $r3.<com.google.auto.common.MoreTypes$EqualVisitorParam: javax.lang.model.type.TypeMirror type> = $r1;

        $r3.<com.google.auto.common.MoreTypes$EqualVisitorParam: java.util.Set visiting> = $r2;

        $r4 = <com.google.auto.common.MoreTypes: java.lang.Class INTERSECTION_TYPE>;

        if $r4 == null goto label3;

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean isIntersectionType(javax.lang.model.type.TypeMirror)>($r0);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean equalIntersectionTypes(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,java.util.Set)>($r0, $r1, $r2);

        return $z0;

     label2:
        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean isIntersectionType(javax.lang.model.type.TypeMirror)>($r1);

        if $z0 == 0 goto label3;

        return 0;

     label3:
        if $r0 == $r1 goto label5;

        if $r0 == null goto label4;

        if $r1 == null goto label4;

        $r5 = staticinvoke <com.google.auto.common.MoreTypes$EqualVisitor: com.google.auto.common.MoreTypes$EqualVisitor access$600()>();

        $r9 = (javax.lang.model.type.TypeVisitor) $r5;

        $r6 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r9, $r3);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        return 1;
    }

    public static boolean equalIntersectionTypes(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror, java.util.Set)
    {
        java.lang.Object[] $r1;
        java.util.Set $r0;
        java.lang.Exception $r8;
        java.lang.NullPointerException r9;
        javax.lang.model.type.TypeMirror $r2, $r3;
        java.util.List $r6, $r7;
        java.lang.Object $r5;
        java.lang.reflect.Method $r4;
        boolean $z0;

        $r2 := @parameter0: javax.lang.model.type.TypeMirror;

        $r3 := @parameter1: javax.lang.model.type.TypeMirror;

        $r0 := @parameter2: java.util.Set;

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean isIntersectionType(javax.lang.model.type.TypeMirror)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = <com.google.auto.common.MoreTypes: java.lang.reflect.Method GET_BOUNDS>;

        $r1 = newarray (java.lang.Object)[0];

     label2:
        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r1);

        $r6 = (java.util.List) $r5;

     label3:
        $r4 = <com.google.auto.common.MoreTypes: java.lang.reflect.Method GET_BOUNDS>;

        $r1 = newarray (java.lang.Object)[0];

     label4:
        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r1);

        $r7 = (java.util.List) $r5;

     label5:
        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean equalLists(java.util.List,java.util.List,java.util.Set)>($r6, $r7, $r0);

        return $z0;

     label6:
        $r8 := @caughtexception;

        staticinvoke <com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>($r8);

        r9 = new java.lang.NullPointerException;

        specialinvoke r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r9;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static boolean equalLists(java.util.List, java.util.List, java.util.Set)
    {
        java.util.Iterator $r3, $r4;
        java.util.Set $r0;
        java.util.List $r1, $r2;
        javax.lang.model.type.TypeMirror $r6, $r7;
        int $i0, $i1;
        java.lang.Object $r5;
        boolean $z0;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r0 := @parameter2: java.util.Set;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (javax.lang.model.type.TypeMirror) $r5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (javax.lang.model.type.TypeMirror) $r5;

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean equal(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,java.util.Set)>($r6, $r7, $r0);

        if $z0 != 0 goto label2;

        return 0;

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static com.google.common.base.Equivalence equivalence()
    {
        com.google.auto.common.MoreTypes$TypeEquivalence $r0;

        $r0 = staticinvoke <com.google.auto.common.MoreTypes$TypeEquivalence: com.google.auto.common.MoreTypes$TypeEquivalence access$200()>();

        return $r0;
    }

    public static int hash(javax.lang.model.type.TypeMirror, java.util.Set)
    {
        javax.lang.model.type.TypeMirror $r1;
        javax.lang.model.type.TypeVisitor $r5;
        com.google.auto.common.MoreTypes$HashVisitor $r2;
        int $i0;
        java.util.Set $r0;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        $r1 := @parameter0: javax.lang.model.type.TypeMirror;

        $r0 := @parameter1: java.util.Set;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <com.google.auto.common.MoreTypes$HashVisitor: com.google.auto.common.MoreTypes$HashVisitor access$800()>();

        $r5 = (javax.lang.model.type.TypeVisitor) $r2;

        $r3 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r5, $r0);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int hashList(java.util.List, java.util.Set)
    {
        java.util.Iterator $r2;
        java.util.Set $r0;
        java.util.List $r1;
        javax.lang.model.type.TypeMirror $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.util.Set;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $i0 = 17;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (javax.lang.model.type.TypeMirror) $r3;

        $i0 = $i0 * 31;

        $i1 = staticinvoke <com.google.auto.common.MoreTypes: int hash(javax.lang.model.type.TypeMirror,java.util.Set)>($r4, $r0);

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return $i0;
    }

    public static boolean isIntersectionType(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        java.lang.String $r2;
        javax.lang.model.type.TypeKind $r1;
        boolean $z0;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        if $r0 == null goto label1;

        $r1 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r2 = virtualinvoke $r1.<javax.lang.model.type.TypeKind: java.lang.String name()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("INTERSECTION");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isType(javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r4;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        com.google.auto.common.MoreTypes$IsTypeVisitor $r1;
        boolean $z0;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        $r1 = staticinvoke <com.google.auto.common.MoreTypes$IsTypeVisitor: com.google.auto.common.MoreTypes$IsTypeVisitor access$2000()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, null);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static boolean isTypeOf(java.lang.Class, javax.lang.model.type.TypeMirror)
    {
        javax.lang.model.type.TypeMirror $r0;
        javax.lang.model.type.TypeVisitor $r5;
        java.lang.Boolean $r3;
        java.lang.Class $r1;
        java.lang.Object $r2;
        boolean $z0;
        com.google.auto.common.MoreTypes$IsTypeOf $r4;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: javax.lang.model.type.TypeMirror;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r4 = new com.google.auto.common.MoreTypes$IsTypeOf;

        specialinvoke $r4.<com.google.auto.common.MoreTypes$IsTypeOf: void <init>(java.lang.Class)>($r1);

        $r5 = (javax.lang.model.type.TypeVisitor) $r4;

        $r2 = interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r5, null);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static com.google.common.base.Optional nonObjectSuperclass(javax.lang.model.util.Types, javax.lang.model.util.Elements, javax.lang.model.type.DeclaredType)
    {
        com.google.auto.common.MoreTypes$1 $r11;
        javax.lang.model.element.TypeElement $r5;
        javax.lang.model.util.Types $r0;
        javax.lang.model.util.Elements $r1;
        javax.lang.model.type.TypeMirror $r6, $r12;
        java.util.List $r7;
        com.google.common.collect.FluentIterable $r8;
        com.google.common.base.Optional $r10;
        javax.lang.model.type.DeclaredType $r2;
        java.lang.Class $r3;
        java.lang.Object $r9;
        java.lang.String $r4;

        $r0 := @parameter0: javax.lang.model.util.Types;

        $r1 := @parameter1: javax.lang.model.util.Elements;

        $r2 := @parameter2: javax.lang.model.type.DeclaredType;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r3 = class "Ljava/lang/Object;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r5 = interfaceinvoke $r1.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r4);

        $r6 = interfaceinvoke $r5.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $r12 = (javax.lang.model.type.TypeMirror) $r2;

        $r7 = interfaceinvoke $r0.<javax.lang.model.util.Types: java.util.List directSupertypes(javax.lang.model.type.TypeMirror)>($r12);

        $r8 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>($r7);

        $r11 = new com.google.auto.common.MoreTypes$1;

        specialinvoke $r11.<com.google.auto.common.MoreTypes$1: void <init>(javax.lang.model.util.Types,javax.lang.model.type.TypeMirror)>($r0, $r6);

        $r8 = virtualinvoke $r8.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r11);

        $r9 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object)>($r8, null);

        $r6 = (javax.lang.model.type.TypeMirror) $r9;

        if $r6 == null goto label1;

        $r2 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>($r6);

        $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r2);

        return $r10;

     label1:
        $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r10;
    }

    public static com.google.common.collect.ImmutableSet referencedTypes(javax.lang.model.type.TypeMirror)
    {
        com.google.auto.common.MoreTypes$ReferencedTypes $r2;
        javax.lang.model.type.TypeMirror $r0;
        com.google.common.collect.ImmutableSet $r3;
        javax.lang.model.type.TypeVisitor $r4;
        com.google.common.collect.ImmutableSet$Builder $r1;

        $r0 := @parameter0: javax.lang.model.type.TypeMirror;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r2 = staticinvoke <com.google.auto.common.MoreTypes$ReferencedTypes: com.google.auto.common.MoreTypes$ReferencedTypes access$900()>();

        $r4 = (javax.lang.model.type.TypeVisitor) $r2;

        interfaceinvoke $r0.<javax.lang.model.type.TypeMirror: java.lang.Object accept(javax.lang.model.type.TypeVisitor,java.lang.Object)>($r4, $r1);

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r3;
    }
}
