public class com.foresee.sdk.cxMeasure.tracker.services.a extends java.lang.Object implements com.foresee.sdk.cxMeasure.tracker.b.b
{

    public void <init>()
    {
        com.foresee.sdk.cxMeasure.tracker.services.a r0;

        r0 := @this: com.foresee.sdk.cxMeasure.tracker.services.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.String ac()
    {
        java.lang.Object[] $r2;
        java.util.Date $r1;
        long $l0, $l1, $l2, $l3;
        java.lang.Long $r3;
        java.lang.String $r4;
        com.foresee.sdk.cxMeasure.tracker.services.a r0;

        r0 := @this: com.foresee.sdk.cxMeasure.tracker.services.a;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l1 = $l0 * 3L;

        $l1 = $l1 + 1357L;

        $l2 = specialinvoke r0.<com.foresee.sdk.cxMeasure.tracker.services.a: long ad()>();

        $l3 = 3L * $l2;

        $l3 = $l3 + 58L;

        $r2 = newarray (java.lang.Object)[5];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r2[1] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2[2] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r2[3] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(86400000L);

        $r2[4] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("&a=%d_%d&b=%d%d&c=%d", $r2);

        return $r4;
    }

    private long ad()
    {
        java.security.SecureRandom $r1;
        byte $b2;
        int $i3;
        long $l0, $l1;
        com.foresee.sdk.cxMeasure.tracker.services.a r0;

        r0 := @this: com.foresee.sdk.cxMeasure.tracker.services.a;

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        $l0 = virtualinvoke $r1.<java.security.SecureRandom: long nextLong()>();

        $l0 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l1 = $l0;

        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $l1 = neg $l0;

     label1:
        $b2 = $l1 cmp 10000000000000L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label2;

        $l1 = $l1 / 10L;

        goto label1;

     label2:
        return $l1;
    }

    public java.lang.Void a(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.foresee.sdk.cxMeasure.tracker.b.a)
    {
        java.lang.Object[] $r17;
        com.foresee.sdk.cxMeasure.tracker.services.a$1 $r24;
        com.foresee.sdk.cxMeasure.tracker.services.a$2 $r25;
        java.lang.String[] $r26;
        java.util.Map $r16;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r12, $r13;
        boolean $z0;
        java.util.Map$Entry $r21;
        java.util.Iterator $r19;
        java.util.Set $r18;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r14;
        java.lang.Exception $r4;
        com.foresee.sdk.cxMeasure.tracker.c.b $r11;
        com.foresee.sdk.cxMeasure.tracker.b.a $r3;
        com.foresee.sdk.common.b$a $r23;
        java.lang.StringBuilder $r10, $r22;
        java.lang.Object $r20;
        com.foresee.sdk.cxMeasure.tracker.b.b$a $r9;
        com.foresee.sdk.cxMeasure.tracker.services.a r0;
        com.foresee.sdk.common.configuration.IConfiguration $r15;

        r0 := @this: com.foresee.sdk.cxMeasure.tracker.services.a;

        $r5 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.String;

        $r7 := @parameter2: java.lang.String;

        $r8 := @parameter3: java.lang.String;

        $r1 := @parameter4: java.lang.String;

        $r2 := @parameter5: java.lang.String;

        $r3 := @parameter6: com.foresee.sdk.cxMeasure.tracker.b.a;

        if $r5 != null goto label01;

        $r9 = <com.foresee.sdk.cxMeasure.tracker.b.b$a: com.foresee.sdk.cxMeasure.tracker.b.b$a REQUIRED_FIELD>;

        interfaceinvoke $r3.<com.foresee.sdk.cxMeasure.tracker.b.a: void onComplete(java.lang.Object)>($r9);

        return null;

     label01:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = new com.foresee.sdk.cxMeasure.tracker.c.b;

        specialinvoke $r11.<com.foresee.sdk.cxMeasure.tracker.c.b: void <init>()>();

        $r12 = virtualinvoke $r11.<com.foresee.sdk.cxMeasure.tracker.c.b: java.lang.String ai()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/initialize?rid=%s&cid=%s&sid=%s&notify=%s");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = "";

        $r14 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        $r15 = virtualinvoke $r14.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r16 = interfaceinvoke $r15.<com.foresee.sdk.common.configuration.IConfiguration: java.util.Map getCpps()>();

        $r17 = newarray (java.lang.Object)[4];

     label02:
        $r17[0] = $r6;

        $r17[1] = $r7;

        $r17[2] = $r8;

        $r5 = staticinvoke <com.foresee.sdk.common.utils.Util: java.lang.String encode(java.lang.String)>($r5);

        $r17[3] = $r5;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r13, $r17);

     label03:
        $r12 = $r5;

     label04:
        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean isBlank(java.lang.CharSequence)>($r1);

     label05:
        if $z0 != 0 goto label08;

        $r10 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&fs_renderer=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r12 = $r5;

     label08:
        $r10 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r18 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

     label11:
        if $z0 == 0 goto label14;

     label12:
        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.util.Map$Entry) $r20;

        $r20 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r20;

        $r20 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r20;

        staticinvoke <com.foresee.sdk.common.d.j: void a(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r10, $r5, $r6);

     label13:
        goto label10;

     label14:
        $r22 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cpps=");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "utf-8");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r12 = $r5;

        $r10 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = specialinvoke r0.<com.foresee.sdk.cxMeasure.tracker.services.a: java.lang.String ac()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $r12 = $r6;

        $r23 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a INFO>;

        $r5 = <com.foresee.sdk.cxMeasure.tracker.logging.LogTags: java.lang.String TRIGGER_CODE>;

        $r17 = newarray (java.lang.Object)[1];

     label19:
        $r17[0] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Initializing notification with survey URL:%s", $r17);

        staticinvoke <com.foresee.sdk.common.b: void c(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String)>($r23, $r5, $r6);

     label20:
        goto label22;

     label21:
        $r23 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a ERROR>;

        $r5 = <com.foresee.sdk.cxMeasure.tracker.logging.LogTags: java.lang.String TRIGGER_CODE>;

        staticinvoke <com.foresee.sdk.common.b: void a(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String)>($r23, $r5, "The CPPs you have provided cannot be encoded. Please check to make sure the key/value pairs you provide meet the requirements.");

     label22:
        $r24 = new com.foresee.sdk.cxMeasure.tracker.services.a$1;

        specialinvoke $r24.<com.foresee.sdk.cxMeasure.tracker.services.a$1: void <init>(com.foresee.sdk.cxMeasure.tracker.services.a,java.lang.String)>(r0, $r2);

        $r25 = new com.foresee.sdk.cxMeasure.tracker.services.a$2;

        specialinvoke $r25.<com.foresee.sdk.cxMeasure.tracker.services.a$2: void <init>(com.foresee.sdk.cxMeasure.tracker.services.a,com.foresee.sdk.cxMeasure.tracker.b.a)>(r0, $r3);

        virtualinvoke $r24.<com.foresee.sdk.cxMeasure.tracker.tasks.HttpGetAsyncTask: void setCallback(com.foresee.sdk.cxMeasure.tracker.tasks.HttpGetAsyncTask$AsyncCallback)>($r25);

        $r26 = newarray (java.lang.String)[1];

        $r26[0] = $r12;

        virtualinvoke $r24.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r26);

        return null;

     label23:
        $r4 := @caughtexception;

        goto label21;

        catch java.lang.Exception from label02 to label03 with label23;
        catch java.lang.Exception from label04 to label05 with label23;
        catch java.lang.Exception from label06 to label07 with label23;
        catch java.lang.Exception from label09 to label11 with label23;
        catch java.lang.Exception from label12 to label13 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Exception from label17 to label18 with label23;
        catch java.lang.Exception from label19 to label20 with label23;
    }
}
