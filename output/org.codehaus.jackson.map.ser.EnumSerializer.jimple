public class org.codehaus.jackson.map.ser.EnumSerializer extends org.codehaus.jackson.map.ser.ScalarSerializerBase
{
    public final org.codehaus.jackson.map.util.EnumValues _values;

    public void <init>(org.codehaus.jackson.map.util.EnumValues)
    {
        org.codehaus.jackson.map.util.EnumValues $r1;
        org.codehaus.jackson.map.ser.EnumSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.EnumSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.util.EnumValues;

        specialinvoke r0.<org.codehaus.jackson.map.ser.ScalarSerializerBase: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Enum;", 0);

        r0.<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.map.util.EnumValues _values> = $r1;

        return;
    }

    public static org.codehaus.jackson.map.ser.EnumSerializer construct(java.lang.Class, org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;
        org.codehaus.jackson.map.util.EnumValues $r5;
        org.codehaus.jackson.map.ser.EnumSerializer $r6;
        java.lang.Class $r1;
        org.codehaus.jackson.map.SerializationConfig$Feature $r0;
        boolean $z0;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r0);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.map.util.EnumValues constructFromToString(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>($r1, $r4);

        goto label2;

     label1:
        $r5 = staticinvoke <org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.map.util.EnumValues constructFromName(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>($r1, $r4);

     label2:
        $r6 = new org.codehaus.jackson.map.ser.EnumSerializer;

        specialinvoke $r6.<org.codehaus.jackson.map.ser.EnumSerializer: void <init>(org.codehaus.jackson.map.util.EnumValues)>($r5);

        return $r6;
    }

    public org.codehaus.jackson.map.util.EnumValues getEnumValues()
    {
        org.codehaus.jackson.map.util.EnumValues r1;
        org.codehaus.jackson.map.ser.EnumSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.EnumSerializer;

        r1 = r0.<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.map.util.EnumValues _values>;

        return r1;
    }

    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type)
    {
        java.util.Iterator $r8;
        java.util.Collection $r7;
        org.codehaus.jackson.map.SerializerProvider $r1;
        org.codehaus.jackson.io.SerializedString $r10;
        org.codehaus.jackson.node.ArrayNode $r5;
        org.codehaus.jackson.map.util.EnumValues $r6;
        org.codehaus.jackson.map.ser.EnumSerializer r0;
        java.lang.reflect.Type $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r9;
        java.lang.String $r11;
        org.codehaus.jackson.node.ObjectNode $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.EnumSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ser.SerializerBase: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);

        if $r2 == null goto label2;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isEnumType()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ArrayNode putArray(java.lang.String)>("enum");

        $r6 = r0.<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.map.util.EnumValues _values>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.util.EnumValues: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.codehaus.jackson.io.SerializedString) $r9;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>();

        virtualinvoke $r5.<org.codehaus.jackson.node.ArrayNode: void add(java.lang.String)>($r11);

        goto label1;

     label2:
        return $r3;
    }

    public final void serialize(java.lang.Enum, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.util.EnumValues $r5;
        org.codehaus.jackson.map.ser.EnumSerializer r0;
        java.lang.Enum $r3;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.io.SerializedString $r2;
        org.codehaus.jackson.map.SerializerProvider $r4;

        r0 := @this: org.codehaus.jackson.map.ser.EnumSerializer;

        $r3 := @parameter0: java.lang.Enum;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r5 = r0.<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.map.util.EnumValues _values>;

        $r2 = virtualinvoke $r5.<org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.io.SerializedString serializedValueFor(java.lang.Enum)>($r3);

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeString(org.codehaus.jackson.SerializableString)>($r2);

        return;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.ser.EnumSerializer r0;
        java.lang.Enum $r4;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Object $r3;

        r0 := @this: org.codehaus.jackson.map.ser.EnumSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.lang.Enum) $r3;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.EnumSerializer: void serialize(java.lang.Enum,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, $r1, $r2);

        return;
    }
}
