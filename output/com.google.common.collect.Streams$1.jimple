public final class com.google.common.collect.Streams$1 extends java.util.Spliterators$AbstractSpliterator
{
    public final java.util.function.BiFunction val$function;
    public final java.util.Iterator val$itrA;
    public final java.util.Iterator val$itrB;

    public void <init>(long, int, java.util.Iterator, java.util.Iterator, java.util.function.BiFunction)
    {
        com.google.common.collect.Streams$1 r0;
        java.util.Iterator $r1, $r2;
        java.util.function.BiFunction $r3;
        int $i1;
        long $l0;

        r0 := @this: com.google.common.collect.Streams$1;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.util.Iterator;

        $r2 := @parameter3: java.util.Iterator;

        $r3 := @parameter4: java.util.function.BiFunction;

        r0.<com.google.common.collect.Streams$1: java.util.Iterator val$itrA> = $r1;

        r0.<com.google.common.collect.Streams$1: java.util.Iterator val$itrB> = $r2;

        r0.<com.google.common.collect.Streams$1: java.util.function.BiFunction val$function> = $r3;

        specialinvoke r0.<java.util.Spliterators$AbstractSpliterator: void <init>(long,int)>($l0, $i1);

        return;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.Streams$1 r0;
        java.util.Iterator $r2;
        java.util.function.BiFunction $r3;
        java.lang.Object $r4, $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.Streams$1;

        $r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.google.common.collect.Streams$1: java.util.Iterator val$itrA>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.Streams$1: java.util.Iterator val$itrB>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.Streams$1: java.util.function.BiFunction val$function>;

        $r2 = r0.<com.google.common.collect.Streams$1: java.util.Iterator val$itrA>;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r2 = r0.<com.google.common.collect.Streams$1: java.util.Iterator val$itrB>;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke $r3.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r4, $r5);

        interfaceinvoke $r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

        return 1;

     label1:
        return 0;
    }
}
