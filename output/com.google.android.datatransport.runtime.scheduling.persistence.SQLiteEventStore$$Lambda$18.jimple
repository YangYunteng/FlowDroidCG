public final class com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18 extends java.lang.Object implements com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer
{
    public final android.database.sqlite.SQLiteDatabase arg$1;

    public void <init>(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18 r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18: android.database.sqlite.SQLiteDatabase arg$1> = $r1;

        return;
    }

    public static com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer lambdaFactory$(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18 $r1;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 = new com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18;

        specialinvoke $r1.<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18: void <init>(android.database.sqlite.SQLiteDatabase)>($r0);

        return $r1;
    }

    public java.lang.Object produce()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.Object $r1;
        com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18 r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18;

        $r2 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18: android.database.sqlite.SQLiteDatabase arg$1>;

        $r1 = staticinvoke <com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$ensureBeginTransaction$15(android.database.sqlite.SQLiteDatabase)>($r2);

        return $r1;
    }
}
