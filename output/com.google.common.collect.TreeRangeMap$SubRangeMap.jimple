public class com.google.common.collect.TreeRangeMap$SubRangeMap extends java.lang.Object implements com.google.common.collect.RangeMap
{
    public final com.google.common.collect.Range subRange;
    public final com.google.common.collect.TreeRangeMap this$0;

    public void <init>(com.google.common.collect.TreeRangeMap, com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 := @parameter0: com.google.common.collect.TreeRangeMap;

        $r2 := @parameter1: com.google.common.collect.Range;

        r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange> = $r2;

        return;
    }

    public static com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeMap$SubRangeMap)
    {
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeMap$SubRangeMap $r0;

        $r0 := @parameter0: com.google.common.collect.TreeRangeMap$SubRangeMap;

        r1 = $r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        return r1;
    }

    public java.util.Map asDescendingMapOfRanges()
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap$SubRangeMap$1 $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 = new com.google.common.collect.TreeRangeMap$SubRangeMap$1;

        specialinvoke $r1.<com.google.common.collect.TreeRangeMap$SubRangeMap$1: void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap)>(r0);

        return $r1;
    }

    public java.util.Map asMapOfRanges()
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 = new com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap;

        specialinvoke $r1.<com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap: void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap)>(r0);

        return $r1;
    }

    public void clear()
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r2 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        virtualinvoke $r1.<com.google.common.collect.TreeRangeMap: void remove(com.google.common.collect.Range)>($r2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        java.util.Map $r3, $r4;
        com.google.common.collect.RangeMap $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.RangeMap;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.collect.RangeMap) $r1;

        $r3 = virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: java.util.Map asMapOfRanges()>();

        $r4 = interfaceinvoke $r2.<com.google.common.collect.RangeMap: java.util.Map asMapOfRanges()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r4);

        return $z0;

     label1:
        return 0;
    }

    public java.lang.Object get(java.lang.Comparable)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r3;
        com.google.common.collect.Range $r2;
        java.lang.Comparable $r1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.TreeRangeMap: java.lang.Object get(java.lang.Comparable)>($r1);

        return $r4;

     label1:
        return null;
    }

    public java.util.Map$Entry getEntry(java.lang.Comparable)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        java.util.Map$Entry $r4;
        com.google.common.collect.Range $r1, $r6;
        com.google.common.collect.TreeRangeMap $r3;
        java.lang.Comparable $r2;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r2 := @parameter0: java.lang.Comparable;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.TreeRangeMap: java.util.Map$Entry getEntry(java.lang.Comparable)>($r2);

        if $r4 == null goto label1;

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (com.google.common.collect.Range) $r5;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r1 = virtualinvoke $r6.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r1);

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r1, $r5);

        return $r4;

     label1:
        return null;
    }

    public int hashCode()
    {
        int $i0;
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: java.util.Map asMapOfRanges()>();

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public void put(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r4;
        com.google.common.collect.Range $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r3.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r1);

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)>($z0, "Cannot put range %s into a subRangeMap(%s)", $r1, $r3);

        $r4 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        virtualinvoke $r4.<com.google.common.collect.TreeRangeMap: void put(com.google.common.collect.Range,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putAll(com.google.common.collect.RangeMap)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r5;
        java.util.Map $r3;
        com.google.common.collect.Range $r2, $r4;
        com.google.common.collect.RangeMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 := @parameter0: com.google.common.collect.RangeMap;

        $r3 = interfaceinvoke $r1.<com.google.common.collect.RangeMap: java.util.Map asMapOfRanges()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = interfaceinvoke $r1.<com.google.common.collect.RangeMap: com.google.common.collect.Range span()>();

        $r2 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r4);

        $r2 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)>($z0, "Cannot putAll rangeMap with span %s into a subRangeMap(%s)", $r4, $r2);

        $r5 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        virtualinvoke $r5.<com.google.common.collect.TreeRangeMap: void putAll(com.google.common.collect.RangeMap)>($r1);

        return;
    }

    public void putCoalescing(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r3;
        com.google.common.collect.Range $r2, $r5;
        java.lang.Object $r1;
        java.util.NavigableMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r4 = staticinvoke <com.google.common.collect.TreeRangeMap: java.util.NavigableMap access$000(com.google.common.collect.TreeRangeMap)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.NavigableMap: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r5.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r2);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <com.google.common.collect.TreeRangeMap: com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeMap,com.google.common.collect.Range,java.lang.Object)>($r3, $r2, $r1);

        $r5 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r5);

        virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: void put(com.google.common.collect.Range,java.lang.Object)>($r2, $r1);

        return;

     label2:
        virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: void put(com.google.common.collect.Range,java.lang.Object)>($r2, $r1);

        return;
    }

    public void remove(com.google.common.collect.Range)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r3;
        com.google.common.collect.Range $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r1);

        virtualinvoke $r3.<com.google.common.collect.TreeRangeMap: void remove(com.google.common.collect.Range)>($r2);

     label1:
        return;
    }

    public com.google.common.collect.Range span()
    {
        com.google.common.collect.Cut $r4, $r8, $r9;
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        java.util.Map$Entry $r5;
        com.google.common.collect.TreeRangeMap$RangeMapEntry $r7;
        com.google.common.collect.Range $r3;
        java.util.NavigableMap $r2;
        com.google.common.collect.TreeRangeMap $r1;
        int $i0;
        java.lang.Object $r6;
        java.util.NoSuchElementException $r10;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r2 = staticinvoke <com.google.common.collect.TreeRangeMap: java.util.NavigableMap access$000(com.google.common.collect.TreeRangeMap)>($r1);

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r5 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>($r4);

        if $r5 == null goto label1;

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.google.common.collect.TreeRangeMap$RangeMapEntry) $r6;

        $r4 = virtualinvoke $r7.<com.google.common.collect.TreeRangeMap$RangeMapEntry: com.google.common.collect.Cut getUpperBound()>();

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r8 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $i0 = virtualinvoke $r4.<com.google.common.collect.Cut: int compareTo(com.google.common.collect.Cut)>($r8);

        if $i0 <= 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        goto label2;

     label1:
        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r2 = staticinvoke <com.google.common.collect.TreeRangeMap: java.util.NavigableMap access$000(com.google.common.collect.TreeRangeMap)>($r1);

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r6 = interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object ceilingKey(java.lang.Object)>($r4);

        $r4 = (com.google.common.collect.Cut) $r6;

        if $r4 == null goto label6;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r8 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $i0 = virtualinvoke $r4.<com.google.common.collect.Cut: int compareTo(com.google.common.collect.Cut)>($r8);

        if $i0 >= 0 goto label6;

     label2:
        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r2 = staticinvoke <com.google.common.collect.TreeRangeMap: java.util.NavigableMap access$000(com.google.common.collect.TreeRangeMap)>($r1);

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r8 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r5 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>($r8);

        if $r5 == null goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.google.common.collect.TreeRangeMap$RangeMapEntry) $r6;

        $r8 = virtualinvoke $r7.<com.google.common.collect.TreeRangeMap$RangeMapEntry: com.google.common.collect.Cut getUpperBound()>();

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r9 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $i0 = virtualinvoke $r8.<com.google.common.collect.Cut: int compareTo(com.google.common.collect.Cut)>($r9);

        if $i0 < 0 goto label3;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r8 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.google.common.collect.TreeRangeMap$RangeMapEntry) $r6;

        $r8 = virtualinvoke $r7.<com.google.common.collect.TreeRangeMap$RangeMapEntry: com.google.common.collect.Cut getUpperBound()>();

     label4:
        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut)>($r4, $r8);

        return $r3;

     label5:
        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>()>();

        throw $r10;

     label6:
        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>()>();

        throw $r10;
    }

    public com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range)
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        com.google.common.collect.TreeRangeMap $r3;
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.RangeMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r4 = staticinvoke <com.google.common.collect.TreeRangeMap: com.google.common.collect.RangeMap access$200(com.google.common.collect.TreeRangeMap)>($r3);

        return $r4;

     label1:
        $r3 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.TreeRangeMap this$0>;

        $r1 = r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: com.google.common.collect.Range subRange>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r1);

        $r4 = virtualinvoke $r3.<com.google.common.collect.TreeRangeMap: com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range)>($r2);

        return $r4;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.TreeRangeMap$SubRangeMap r0;
        java.lang.String $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$SubRangeMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeMap$SubRangeMap: java.util.Map asMapOfRanges()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
