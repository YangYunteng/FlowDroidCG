public class b.s.a.t extends androidx.recyclerview.widget.RecyclerView$r
{
    public static final boolean DEBUG;
    public static final float MILLISECONDS_PER_INCH;
    public static final int SNAP_TO_ANY;
    public static final int SNAP_TO_END;
    public static final int SNAP_TO_START;
    public static final float TARGET_SEEK_EXTRA_SCROLL_RATIO;
    public static final int TARGET_SEEK_SCROLL_DISTANCE_PX;
    public final android.view.animation.DecelerateInterpolator mDecelerateInterpolator;
    public final android.util.DisplayMetrics mDisplayMetrics;
    public boolean mHasCalculatedMillisPerPixel;
    public int mInterimTargetDx;
    public int mInterimTargetDy;
    public final android.view.animation.LinearInterpolator mLinearInterpolator;
    public float mMillisPerPixel;
    public android.graphics.PointF mTargetVector;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.view.animation.LinearInterpolator $r2;
        b.s.a.t r0;
        android.view.animation.DecelerateInterpolator $r3;
        android.util.DisplayMetrics $r5;
        android.content.res.Resources $r4;

        r0 := @this: b.s.a.t;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: void <init>()>();

        $r2 = new android.view.animation.LinearInterpolator;

        specialinvoke $r2.<android.view.animation.LinearInterpolator: void <init>()>();

        r0.<b.s.a.t: android.view.animation.LinearInterpolator mLinearInterpolator> = $r2;

        $r3 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r3.<android.view.animation.DecelerateInterpolator: void <init>()>();

        r0.<b.s.a.t: android.view.animation.DecelerateInterpolator mDecelerateInterpolator> = $r3;

        r0.<b.s.a.t: boolean mHasCalculatedMillisPerPixel> = 0;

        r0.<b.s.a.t: int mInterimTargetDx> = 0;

        r0.<b.s.a.t: int mInterimTargetDy> = 0;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<b.s.a.t: android.util.DisplayMetrics mDisplayMetrics> = $r5;

        return;
    }

    private int clampApplyScroll(int, int)
    {
        int $i0, $i1;
        b.s.a.t r0;

        r0 := @this: b.s.a.t;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = $i0 - $i1;

        $i0 = $i0 * $i1;

        if $i0 > 0 goto label1;

        return 0;

     label1:
        return $i1;
    }

    private float getSpeedPerPixel()
    {
        float $f0;
        b.s.a.t r0;
        android.util.DisplayMetrics $r1;
        boolean $z0;

        r0 := @this: b.s.a.t;

        $z0 = r0.<b.s.a.t: boolean mHasCalculatedMillisPerPixel>;

        if $z0 != 0 goto label1;

        $r1 = r0.<b.s.a.t: android.util.DisplayMetrics mDisplayMetrics>;

        $f0 = virtualinvoke r0.<b.s.a.t: float calculateSpeedPerPixel(android.util.DisplayMetrics)>($r1);

        r0.<b.s.a.t: float mMillisPerPixel> = $f0;

        r0.<b.s.a.t: boolean mHasCalculatedMillisPerPixel> = 1;

     label1:
        $f0 = r0.<b.s.a.t: float mMillisPerPixel>;

        return $f0;
    }

    public int calculateDtToFit(int, int, int, int, int)
    {
        b.s.a.t r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: b.s.a.t;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i4 := @parameter3: int;

        $i0 := @parameter4: int;

        $i5 = -1;

        if $i0 == $i5 goto label5;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        $i1 = $i4 - $i2;

        return $i1;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("snap preference should be one of the constants defined in SmoothScroller, starting with SNAP_");

        throw $r1;

     label2:
        $i1 = $i3 - $i1;

        if $i1 <= 0 goto label3;

        return $i1;

     label3:
        $i1 = $i4 - $i2;

        if $i1 >= 0 goto label4;

        return $i1;

     label4:
        return 0;

     label5:
        $i1 = $i3 - $i1;

        return $i1;
    }

    public int calculateDxToMakeVisible(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        b.s.a.t r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: b.s.a.t;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: androidx.recyclerview.widget.RecyclerView$i getLayoutManager()>();

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getDecoratedLeft(android.view.View)>($r1);

        $i1 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i1 = $i2 - $i1;

        $i2 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getDecoratedRight(android.view.View)>($r1);

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i2 = $i2 + $i4;

        $i4 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i5 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i3 = $i3 - $i5;

        $i0 = virtualinvoke r0.<b.s.a.t: int calculateDtToFit(int,int,int,int,int)>($i1, $i2, $i4, $i3, $i0);

        return $i0;

     label2:
        return 0;
    }

    public int calculateDyToMakeVisible(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        b.s.a.t r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: b.s.a.t;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: androidx.recyclerview.widget.RecyclerView$i getLayoutManager()>();

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getDecoratedTop(android.view.View)>($r1);

        $i1 = $r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i2 - $i1;

        $i2 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getDecoratedBottom(android.view.View)>($r1);

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i2 + $i4;

        $i4 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i5 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i3 = $i3 - $i5;

        $i0 = virtualinvoke r0.<b.s.a.t: int calculateDtToFit(int,int,int,int,int)>($i1, $i2, $i4, $i3, $i0);

        return $i0;

     label2:
        return 0;
    }

    public float calculateSpeedPerPixel(android.util.DisplayMetrics)
    {
        int $i0;
        float $f0;
        b.s.a.t r0;
        android.util.DisplayMetrics $r1;

        r0 := @this: b.s.a.t;

        $r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = $r1.<android.util.DisplayMetrics: int densityDpi>;

        $f0 = (float) $i0;

        $f0 = 25.0F / $f0;

        return $f0;
    }

    public int calculateTimeForDeceleration(int)
    {
        int $i0;
        b.s.a.t r0;
        double $d0;

        r0 := @this: b.s.a.t;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<b.s.a.t: int calculateTimeForScrolling(int)>($i0);

        $d0 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 / 0.3356;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        return $i0;
    }

    public int calculateTimeForScrolling(int)
    {
        int $i0;
        float $f0, $f1;
        b.s.a.t r0;
        double $d0;

        r0 := @this: b.s.a.t;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $f0 = (float) $i0;

        $f1 = specialinvoke r0.<b.s.a.t: float getSpeedPerPixel()>();

        $f0 = $f0 * $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        return $i0;
    }

    public int getHorizontalSnapPreference()
    {
        android.graphics.PointF $r1;
        byte $b0;
        int $i1;
        float $f0;
        b.s.a.t r0;

        r0 := @this: b.s.a.t;

        $r1 = r0.<b.s.a.t: android.graphics.PointF mTargetVector>;

        if $r1 == null goto label3;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        goto label3;

     label1:
        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        $i1 = -1;

        return $i1;

     label3:
        return 0;
    }

    public int getVerticalSnapPreference()
    {
        android.graphics.PointF $r1;
        byte $b0;
        int $i1;
        float $f0;
        b.s.a.t r0;

        r0 := @this: b.s.a.t;

        $r1 = r0.<b.s.a.t: android.graphics.PointF mTargetVector>;

        if $r1 == null goto label3;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        goto label3;

     label1:
        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        $i1 = -1;

        return $i1;

     label3:
        return 0;
    }

    public void onSeekTargetStep(int, int, androidx.recyclerview.widget.RecyclerView$s, androidx.recyclerview.widget.RecyclerView$r$a)
    {
        androidx.recyclerview.widget.RecyclerView$r$a $r1;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        b.s.a.t r0;

        r0 := @this: b.s.a.t;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$s;

        $r1 := @parameter3: androidx.recyclerview.widget.RecyclerView$r$a;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: int getChildCount()>();

        if $i2 != 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: void stop()>();

        return;

     label1:
        $i2 = r0.<b.s.a.t: int mInterimTargetDx>;

        $i1 = specialinvoke r0.<b.s.a.t: int clampApplyScroll(int,int)>($i2, $i1);

        r0.<b.s.a.t: int mInterimTargetDx> = $i1;

        $i1 = r0.<b.s.a.t: int mInterimTargetDy>;

        $i1 = specialinvoke r0.<b.s.a.t: int clampApplyScroll(int,int)>($i1, $i0);

        r0.<b.s.a.t: int mInterimTargetDy> = $i1;

        $i1 = r0.<b.s.a.t: int mInterimTargetDx>;

        if $i1 != 0 goto label2;

        $i1 = r0.<b.s.a.t: int mInterimTargetDy>;

        if $i1 != 0 goto label2;

        virtualinvoke r0.<b.s.a.t: void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$r$a)>($r1);

     label2:
        return;
    }

    public void onStart()
    {
        b.s.a.t r0;

        r0 := @this: b.s.a.t;

        return;
    }

    public void onStop()
    {
        b.s.a.t r0;

        r0 := @this: b.s.a.t;

        r0.<b.s.a.t: int mInterimTargetDy> = 0;

        r0.<b.s.a.t: int mInterimTargetDx> = 0;

        r0.<b.s.a.t: android.graphics.PointF mTargetVector> = null;

        return;
    }

    public void onTargetFound(android.view.View, androidx.recyclerview.widget.RecyclerView$s, androidx.recyclerview.widget.RecyclerView$r$a)
    {
        androidx.recyclerview.widget.RecyclerView$r$a $r1;
        androidx.recyclerview.widget.RecyclerView$s $r3;
        b.s.a.t r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.view.animation.DecelerateInterpolator $r4;
        double $d0;

        r0 := @this: b.s.a.t;

        $r2 := @parameter0: android.view.View;

        $r3 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r1 := @parameter2: androidx.recyclerview.widget.RecyclerView$r$a;

        $i0 = virtualinvoke r0.<b.s.a.t: int getHorizontalSnapPreference()>();

        $i0 = virtualinvoke r0.<b.s.a.t: int calculateDxToMakeVisible(android.view.View,int)>($r2, $i0);

        $i1 = virtualinvoke r0.<b.s.a.t: int getVerticalSnapPreference()>();

        $i1 = virtualinvoke r0.<b.s.a.t: int calculateDyToMakeVisible(android.view.View,int)>($r2, $i1);

        $i2 = $i0 * $i0;

        $i3 = $i1 * $i1;

        $i2 = $i2 + $i3;

        $d0 = (double) $i2;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i2 = (int) $d0;

        $i2 = virtualinvoke r0.<b.s.a.t: int calculateTimeForDeceleration(int)>($i2);

        if $i2 <= 0 goto label1;

        $i0 = neg $i0;

        $i1 = neg $i1;

        $r4 = r0.<b.s.a.t: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$r$a: void a(int,int,int,android.view.animation.Interpolator)>($i0, $i1, $i2, $r4);

     label1:
        return;
    }

    public void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$r$a)
    {
        android.graphics.PointF $r2;
        androidx.recyclerview.widget.RecyclerView$r$a $r1;
        b.s.a.t r0;
        byte $b1;
        android.view.animation.LinearInterpolator $r3;
        int $i0, $i2, $i3;
        float $f0;

        r0 := @this: b.s.a.t;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$r$a;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: int getTargetPosition()>();

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: android.graphics.PointF computeScrollVectorForPosition(int)>($i0);

        if $r2 == null goto label2;

        $f0 = $r2.<android.graphics.PointF: float x>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label1;

        $f0 = $r2.<android.graphics.PointF: float y>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: void normalize(android.graphics.PointF)>($r2);

        r0.<b.s.a.t: android.graphics.PointF mTargetVector> = $r2;

        $f0 = $r2.<android.graphics.PointF: float x>;

        $f0 = $f0 * 10000.0F;

        $i0 = (int) $f0;

        r0.<b.s.a.t: int mInterimTargetDx> = $i0;

        $f0 = $r2.<android.graphics.PointF: float y>;

        $f0 = $f0 * 10000.0F;

        $i0 = (int) $f0;

        r0.<b.s.a.t: int mInterimTargetDy> = $i0;

        $i0 = virtualinvoke r0.<b.s.a.t: int calculateTimeForScrolling(int)>(10000);

        $i2 = r0.<b.s.a.t: int mInterimTargetDx>;

        $f0 = (float) $i2;

        $f0 = $f0 * 1.2F;

        $i2 = (int) $f0;

        $i3 = r0.<b.s.a.t: int mInterimTargetDy>;

        $f0 = (float) $i3;

        $f0 = $f0 * 1.2F;

        $i3 = (int) $f0;

        $f0 = (float) $i0;

        $f0 = $f0 * 1.2F;

        $i0 = (int) $f0;

        $r3 = r0.<b.s.a.t: android.view.animation.LinearInterpolator mLinearInterpolator>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$r$a: void a(int,int,int,android.view.animation.Interpolator)>($i2, $i3, $i0, $r3);

        return;

     label2:
        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: int getTargetPosition()>();

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$r$a: void a(int)>($i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$r: void stop()>();

        return;
    }

    public static void <clinit>()
    {
        <b.s.a.t: int TARGET_SEEK_SCROLL_DISTANCE_PX> = 10000;

        <b.s.a.t: float TARGET_SEEK_EXTRA_SCROLL_RATIO> = 1.2F;

        <b.s.a.t: int SNAP_TO_START> = -1;

        <b.s.a.t: int SNAP_TO_END> = 1;

        <b.s.a.t: int SNAP_TO_ANY> = 0;

        <b.s.a.t: float MILLISECONDS_PER_INCH> = 25.0F;

        <b.s.a.t: boolean DEBUG> = 0;

        return;
    }
}
