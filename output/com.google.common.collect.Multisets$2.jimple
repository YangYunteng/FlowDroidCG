public final class com.google.common.collect.Multisets$2 extends com.google.common.collect.AbstractMultiset
{
    public final com.google.common.collect.Multiset val$multiset1;
    public final com.google.common.collect.Multiset val$multiset2;

    public void <init>(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
    {
        com.google.common.collect.Multiset $r1, $r2;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r1 := @parameter0: com.google.common.collect.Multiset;

        $r2 := @parameter1: com.google.common.collect.Multiset;

        r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1> = $r1;

        r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2> = $r2;

        specialinvoke r0.<com.google.common.collect.AbstractMultiset: void <init>()>();

        return;
    }

    public int count(java.lang.Object)
    {
        com.google.common.collect.Multiset $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1>;

        $i0 = interfaceinvoke $r1.<com.google.common.collect.Multiset: int count(java.lang.Object)>($r2);

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2>;

        $i1 = interfaceinvoke $r1.<com.google.common.collect.Multiset: int count(java.lang.Object)>($r2);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;
    }

    public java.util.Set createElementSet()
    {
        com.google.common.collect.Multiset $r1;
        com.google.common.collect.Sets$SetView $r4;
        java.util.Set $r2, $r3;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r1 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();

        $r1 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2>;

        $r3 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();

        $r4 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r2, $r3);

        return $r4;
    }

    public int distinctElements()
    {
        int $i0;
        java.util.Set $r1;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMultiset: java.util.Set elementSet()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public java.util.Iterator entryIterator()
    {
        java.util.Iterator $r4;
        com.google.common.collect.Multisets$2$1 $r1;
        com.google.common.collect.Multiset $r2;
        java.util.Set $r3;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r2 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r1 = new com.google.common.collect.Multisets$2$1;

        specialinvoke $r1.<com.google.common.collect.Multisets$2$1: void <init>(com.google.common.collect.Multisets$2,java.util.Iterator)>(r0, $r4);

        return $r1;
    }
}
