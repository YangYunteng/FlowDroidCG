public abstract class com.google.common.util.concurrent.AbstractScheduledService extends java.lang.Object implements com.google.common.util.concurrent.Service
{
    public static final java.util.logging.Logger logger;
    public final com.google.common.util.concurrent.AbstractService delegate;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/common/util/concurrent/AbstractScheduledService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.util.concurrent.AbstractScheduledService: java.util.logging.Logger logger> = $r2;

        return;
    }

    public void <init>()
    {
        com.google.common.util.concurrent.AbstractScheduledService r0;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: void <init>(com.google.common.util.concurrent.AbstractScheduledService,com.google.common.util.concurrent.AbstractScheduledService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate> = $r1;

        return;
    }

    public static java.util.logging.Logger access$400()
    {
        java.util.logging.Logger r0;

        r0 = <com.google.common.util.concurrent.AbstractScheduledService: java.util.logging.Logger logger>;

        return r0;
    }

    public static com.google.common.util.concurrent.AbstractService access$500(com.google.common.util.concurrent.AbstractScheduledService)
    {
        com.google.common.util.concurrent.AbstractService r1;
        com.google.common.util.concurrent.AbstractScheduledService $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService;

        r1 = $r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        return r1;
    }

    public final void addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.AbstractScheduledService r0;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AbstractService $r3;
        com.google.common.util.concurrent.Service$Listener $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 := @parameter0: com.google.common.util.concurrent.Service$Listener;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r3.<com.google.common.util.concurrent.AbstractService: void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    public final void awaitRunning()
    {
        com.google.common.util.concurrent.AbstractService $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: void awaitRunning()>();

        return;
    }

    public final void awaitRunning(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;
        com.google.common.util.concurrent.AbstractService $r2;
        long $l0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r2.<com.google.common.util.concurrent.AbstractService: void awaitRunning(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    public final void awaitTerminated()
    {
        com.google.common.util.concurrent.AbstractService $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: void awaitTerminated()>();

        return;
    }

    public final void awaitTerminated(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;
        com.google.common.util.concurrent.AbstractService $r2;
        long $l0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r2.<com.google.common.util.concurrent.AbstractService: void awaitTerminated(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    public java.util.concurrent.ScheduledExecutorService executor()
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;
        java.util.concurrent.Executor $r4;
        java.util.concurrent.ScheduledExecutorService $r3;
        com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r2 = new com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl;

        specialinvoke $r2.<com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl: void <init>(com.google.common.util.concurrent.AbstractScheduledService)>(r0);

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)>($r2);

        $r1 = new com.google.common.util.concurrent.AbstractScheduledService$1;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractScheduledService$1: void <init>(com.google.common.util.concurrent.AbstractScheduledService,java.util.concurrent.ScheduledExecutorService)>(r0, $r3);

        $r4 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractScheduledService: void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)>($r1, $r4);

        return $r3;
    }

    public final java.lang.Throwable failureCause()
    {
        java.lang.Throwable $r1;
        com.google.common.util.concurrent.AbstractService $r2;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        $r1 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractService: java.lang.Throwable failureCause()>();

        return $r1;
    }

    public final boolean isRunning()
    {
        com.google.common.util.concurrent.AbstractService $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        $z0 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: boolean isRunning()>();

        return $z0;
    }

    public abstract void runOneIteration();

    public abstract com.google.common.util.concurrent.AbstractScheduledService$Scheduler scheduler();

    public java.lang.String serviceName()
    {
        java.lang.Class $r2;
        java.lang.String $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r2 = class "Lcom/google/common/util/concurrent/AbstractScheduledService;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r1;
    }

    public void shutDown()
    {
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        return;
    }

    public final com.google.common.util.concurrent.Service startAsync()
    {
        com.google.common.util.concurrent.AbstractService $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service startAsync()>();

        return r0;
    }

    public void startUp()
    {
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        return;
    }

    public final com.google.common.util.concurrent.Service$State state()
    {
        com.google.common.util.concurrent.AbstractService $r2;
        com.google.common.util.concurrent.Service$State $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        $r1 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>();

        return $r1;
    }

    public final com.google.common.util.concurrent.Service stopAsync()
    {
        com.google.common.util.concurrent.AbstractService $r1;
        com.google.common.util.concurrent.AbstractScheduledService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService delegate>;

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service stopAsync()>();

        return r0;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.Service$State $r3;
        com.google.common.util.concurrent.AbstractScheduledService r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractScheduledService: java.lang.String serviceName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.Service$State state()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
