public final class com.google.android.material.datepicker.CalendarConstraints extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public final com.google.android.material.datepicker.Month end;
    public final int monthSpan;
    public final com.google.android.material.datepicker.Month openAt;
    public final com.google.android.material.datepicker.Month start;
    public final com.google.android.material.datepicker.CalendarConstraints$DateValidator validator;
    public final int yearSpan;

    static void <clinit>()
    {
        com.google.android.material.datepicker.CalendarConstraints$1 $r0;

        $r0 = new com.google.android.material.datepicker.CalendarConstraints$1;

        specialinvoke $r0.<com.google.android.material.datepicker.CalendarConstraints$1: void <init>()>();

        <com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(com.google.android.material.datepicker.Month, com.google.android.material.datepicker.Month, com.google.android.material.datepicker.Month, com.google.android.material.datepicker.CalendarConstraints$DateValidator)
    {
        com.google.android.material.datepicker.Month $r1, $r2, $r3;
        com.google.android.material.datepicker.CalendarConstraints r0;
        java.lang.IllegalArgumentException $r5;
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r4;
        int $i0, $i1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $r1 := @parameter0: com.google.android.material.datepicker.Month;

        $r2 := @parameter1: com.google.android.material.datepicker.Month;

        $r3 := @parameter2: com.google.android.material.datepicker.Month;

        $r4 := @parameter3: com.google.android.material.datepicker.CalendarConstraints$DateValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start> = $r1;

        r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end> = $r2;

        r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt> = $r3;

        r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator> = $r4;

        $i0 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r3);

        if $i0 > 0 goto label2;

        $i0 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r2);

        if $i0 > 0 goto label1;

        $i0 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: int monthsUntil(com.google.android.material.datepicker.Month)>($r2);

        $i0 = $i0 + 1;

        r0.<com.google.android.material.datepicker.CalendarConstraints: int monthSpan> = $i0;

        $i0 = $r2.<com.google.android.material.datepicker.Month: int year>;

        $i1 = $r1.<com.google.android.material.datepicker.Month: int year>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 1;

        r0.<com.google.android.material.datepicker.CalendarConstraints: int yearSpan> = $i0;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("current Month cannot be after end Month");

        throw $r5;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("start Month cannot be after current Month");

        throw $r5;
    }

    public void <init>(com.google.android.material.datepicker.Month, com.google.android.material.datepicker.Month, com.google.android.material.datepicker.Month, com.google.android.material.datepicker.CalendarConstraints$DateValidator, com.google.android.material.datepicker.CalendarConstraints$1)
    {
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r4;
        com.google.android.material.datepicker.Month $r1, $r2, $r3;
        com.google.android.material.datepicker.CalendarConstraints$1 $r5;
        com.google.android.material.datepicker.CalendarConstraints r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $r1 := @parameter0: com.google.android.material.datepicker.Month;

        $r2 := @parameter1: com.google.android.material.datepicker.Month;

        $r3 := @parameter2: com.google.android.material.datepicker.Month;

        $r4 := @parameter3: com.google.android.material.datepicker.CalendarConstraints$DateValidator;

        $r5 := @parameter4: com.google.android.material.datepicker.CalendarConstraints$1;

        specialinvoke r0.<com.google.android.material.datepicker.CalendarConstraints: void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator)>($r1, $r2, $r3, $r4);

        return;
    }

    public static com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.CalendarConstraints $r0;
        com.google.android.material.datepicker.Month r1;

        $r0 := @parameter0: com.google.android.material.datepicker.CalendarConstraints;

        r1 = $r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        return r1;
    }

    public static com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.CalendarConstraints $r0;
        com.google.android.material.datepicker.Month r1;

        $r0 := @parameter0: com.google.android.material.datepicker.CalendarConstraints;

        r1 = $r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        return r1;
    }

    public static com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.CalendarConstraints $r0;
        com.google.android.material.datepicker.Month r1;

        $r0 := @parameter0: com.google.android.material.datepicker.CalendarConstraints;

        r1 = $r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt>;

        return r1;
    }

    public static com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.CalendarConstraints $r0;
        com.google.android.material.datepicker.CalendarConstraints$DateValidator r1;

        $r0 := @parameter0: com.google.android.material.datepicker.CalendarConstraints;

        r1 = $r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        return r1;
    }

    public com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month)
    {
        com.google.android.material.datepicker.Month $r1, $r2;
        com.google.android.material.datepicker.CalendarConstraints r0;
        int $i0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $r1 := @parameter0: com.google.android.material.datepicker.Month;

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        $i0 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r2);

        if $i0 >= 0 goto label1;

        $r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        return $r1;

     label1:
        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        $i0 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r2);

        if $i0 <= 0 goto label2;

        $r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

     label2:
        return $r1;
    }

    public int describeContents()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.android.material.datepicker.Month $r3, $r4;
        com.google.android.material.datepicker.CalendarConstraints r0, $r2;
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r5, $r6;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.android.material.datepicker.CalendarConstraints;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.android.material.datepicker.CalendarConstraints) $r1;

        $r3 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        $r4 = $r2.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        $z0 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        $r4 = $r2.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        $z0 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt>;

        $r4 = $r2.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt>;

        $z0 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        $r6 = $r2.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;
        com.google.android.material.datepicker.CalendarConstraints$DateValidator r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        return r1;
    }

    public com.google.android.material.datepicker.Month getEnd()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;
        com.google.android.material.datepicker.Month r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        return r1;
    }

    public int getMonthSpan()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;
        int i0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        i0 = r0.<com.google.android.material.datepicker.CalendarConstraints: int monthSpan>;

        return i0;
    }

    public com.google.android.material.datepicker.Month getOpenAt()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;
        com.google.android.material.datepicker.Month r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt>;

        return r1;
    }

    public com.google.android.material.datepicker.Month getStart()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;
        com.google.android.material.datepicker.Month r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        return r1;
    }

    public int getYearSpan()
    {
        com.google.android.material.datepicker.CalendarConstraints r0;
        int i0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        i0 = r0.<com.google.android.material.datepicker.CalendarConstraints: int yearSpan>;

        return i0;
    }

    public int hashCode()
    {
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r3;
        java.lang.Object[] $r1;
        com.google.android.material.datepicker.Month $r2;
        com.google.android.material.datepicker.CalendarConstraints r0;
        int $i0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        $r1[0] = $r2;

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        $r1[1] = $r2;

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt>;

        $r1[2] = $r2;

        $r3 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        $r1[3] = $r3;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean isWithinBounds(long)
    {
        byte $b2;
        com.google.android.material.datepicker.Month $r1;
        com.google.android.material.datepicker.CalendarConstraints r0;
        int $i3;
        long $l0, $l1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $l0 := @parameter0: long;

        $r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        $l1 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: long getDay(int)>(1);

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 > 0 goto label1;

        $r1 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        $i3 = $r1.<com.google.android.material.datepicker.Month: int daysInMonth>;

        $l1 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: long getDay(int)>($i3);

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r3;
        com.google.android.material.datepicker.Month $r2;
        com.google.android.material.datepicker.CalendarConstraints r0;
        int $i0;
        android.os.Parcel $r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month start>;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, 0);

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month end>;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, 0);

        $r2 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month openAt>;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, 0);

        $r3 = r0.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, 0);

        return;
    }
}
