public class org.codehaus.jackson.map.ObjectMapper extends org.codehaus.jackson.ObjectCodec implements org.codehaus.jackson.Versioned
{
    public static final org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR;
    public static final org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR;
    public static final org.codehaus.jackson.type.JavaType JSON_NODE_TYPE;
    public static final org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER;
    public org.codehaus.jackson.map.DeserializationConfig _deserializationConfig;
    public org.codehaus.jackson.map.DeserializerProvider _deserializerProvider;
    public final org.codehaus.jackson.JsonFactory _jsonFactory;
    public final java.util.concurrent.ConcurrentHashMap _rootDeserializers;
    public org.codehaus.jackson.map.SerializationConfig _serializationConfig;
    public org.codehaus.jackson.map.SerializerFactory _serializerFactory;
    public org.codehaus.jackson.map.SerializerProvider _serializerProvider;
    public org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver;
    public org.codehaus.jackson.map.type.TypeFactory _typeFactory;

    static void <clinit>()
    {
        org.codehaus.jackson.map.type.SimpleType $r0;
        org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker$Std $r3;
        org.codehaus.jackson.map.introspect.BasicClassIntrospector $r1;

        $r0 = staticinvoke <org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class)>(class "Lorg/codehaus/jackson/JsonNode;");

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE> = $r0;

        $r1 = <org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicClassIntrospector instance>;

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR> = $r1;

        $r2 = new org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector;

        specialinvoke $r2.<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: void <init>()>();

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR> = $r2;

        $r3 = staticinvoke <org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance()>();

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER> = $r3;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>(null, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.JsonFactory)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>($r1, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.JsonFactory, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.DeserializerProvider)
    {
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.SerializerProvider $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonFactory;

        $r2 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.DeserializationConfig)>($r1, $r2, $r3, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.JsonFactory, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.deser.StdDeserializerProvider $r16;
        org.codehaus.jackson.map.SerializerProvider $r5;
        org.codehaus.jackson.map.SerializationConfig $r1, $r13;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r14;
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.map.DeserializerProvider $r6;
        java.util.concurrent.ConcurrentHashMap $r11;
        org.codehaus.jackson.map.ser.BeanSerializerFactory $r10;
        org.codehaus.jackson.map.AnnotationIntrospector $r8;
        org.codehaus.jackson.map.MappingJsonFactory $r12;
        org.codehaus.jackson.JsonFactory $r4;
        org.codehaus.jackson.map.ser.StdSerializerProvider $r15;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r9;
        org.codehaus.jackson.map.ClassIntrospector $r7;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r4 := @parameter0: org.codehaus.jackson.JsonFactory;

        $r5 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        $r6 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r1 := @parameter3: org.codehaus.jackson.map.SerializationConfig;

        $r2 := @parameter4: org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke r0.<org.codehaus.jackson.ObjectCodec: void <init>()>();

        $r11 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r11.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.6F, 2);

        r0.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = $r11;

        if $r4 != null goto label1;

        $r12 = new org.codehaus.jackson.map.MappingJsonFactory;

        $r4 = $r12;

        specialinvoke $r12.<org.codehaus.jackson.map.MappingJsonFactory: void <init>(org.codehaus.jackson.map.ObjectMapper)>(r0);

     label1:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory> = $r4;

        $r3 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory> = $r3;

        if $r1 == null goto label2;

        goto label3;

     label2:
        $r13 = new org.codehaus.jackson.map.SerializationConfig;

        $r1 = $r13;

        $r7 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR>;

        $r8 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR>;

        $r9 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        specialinvoke $r13.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator)>($r7, $r8, $r9, null, null, $r3, null);

     label3:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r1;

        if $r2 == null goto label4;

        goto label5;

     label4:
        $r14 = new org.codehaus.jackson.map.DeserializationConfig;

        $r2 = $r14;

        $r7 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR>;

        $r8 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR>;

        $r9 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        specialinvoke $r14.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator)>($r7, $r8, $r9, null, null, $r3, null);

     label5:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r2;

        if $r5 != null goto label6;

        $r15 = new org.codehaus.jackson.map.ser.StdSerializerProvider;

        $r5 = $r15;

        specialinvoke $r15.<org.codehaus.jackson.map.ser.StdSerializerProvider: void <init>()>();

     label6:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider> = $r5;

        if $r6 != null goto label7;

        $r16 = new org.codehaus.jackson.map.deser.StdDeserializerProvider;

        $r6 = $r16;

        specialinvoke $r16.<org.codehaus.jackson.map.deser.StdDeserializerProvider: void <init>()>();

     label7:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider> = $r6;

        $r10 = <org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.ser.BeanSerializerFactory instance>;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r10;

        return;
    }

    public void <init>(org.codehaus.jackson.map.SerializerFactory)
    {
        org.codehaus.jackson.map.SerializerFactory $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>(null, null, null);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory)>($r1);

        return;
    }

    private final void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig)
    {
        java.lang.Throwable $r9, $r10, $r11;
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.io.IOException $r4, $r5;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.JsonGenerator $r6;
        java.io.Closeable $r8;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r6 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r7 := @parameter1: java.lang.Object;

        $r1 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r8 = (java.io.Closeable) $r7;

     label01:
        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r1, $r6, $r7, $r3);

     label02:
        virtualinvoke $r6.<org.codehaus.jackson.JsonGenerator: void close()>();

     label03:
        interfaceinvoke $r8.<java.io.Closeable: void close()>();

     label04:
        return;

     label05:
        $r9 := @caughtexception;

        $r10 = $r9;

        $r6 = null;

        $r8 = null;

        goto label08;

     label06:
        $r11 := @caughtexception;

        $r10 = $r11;

        $r6 = null;

        goto label08;

     label07:
        $r10 := @caughtexception;

     label08:
        if $r6 == null goto label11;

     label09:
        virtualinvoke $r6.<org.codehaus.jackson.JsonGenerator: void close()>();

     label10:
        goto label11;

     label11:
        if $r8 == null goto label13;

     label12:
        interfaceinvoke $r8.<java.io.Closeable: void close()>();

     label13:
        throw $r10;

     label14:
        $r4 := @caughtexception;

        goto label11;

     label15:
        $r5 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label12 to label13 with label15;
    }

    private final void _writeCloseableValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig)
    {
        java.lang.Throwable $r9, $r10;
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.io.IOException $r4;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.JsonGenerator $r5;
        java.io.Closeable $r7;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean $z0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r8;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r5 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r6 := @parameter1: java.lang.Object;

        $r1 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r7 = (java.io.Closeable) $r6;

     label01:
        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r1, $r5, $r6, $r3);

        $r8 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r8);

     label02:
        if $z0 == 0 goto label04;

     label03:
        virtualinvoke $r5.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label04:
        interfaceinvoke $r7.<java.io.Closeable: void close()>();

     label05:
        return;

     label06:
        $r9 := @caughtexception;

        $r7 = null;

        $r10 = $r9;

        goto label08;

     label07:
        $r10 := @caughtexception;

     label08:
        if $r7 == null goto label10;

     label09:
        interfaceinvoke $r7.<java.io.Closeable: void close()>();

     label10:
        throw $r10;

     label11:
        $r4 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator, java.lang.Object)
    {
        java.lang.Throwable $r8;
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.io.IOException $r4;
        org.codehaus.jackson.map.SerializationConfig $r6;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r7;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r5 := @parameter1: java.lang.Object;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>;

        $z0 = virtualinvoke $r6.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r7);

        if $z0 == 0 goto label01;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>();

     label01:
        $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r6.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r7);

        if $z0 == 0 goto label02;

        $z0 = $r5 instanceof java.io.Closeable;

        if $z0 == 0 goto label02;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>($r1, $r5, $r6);

        return;

     label02:
        $z0 = 0;

     label03:
        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r6, $r1, $r5, $r3);

     label04:
        $z0 = 1;

     label05:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void close()>();

     label06:
        return;

     label07:
        $r8 := @caughtexception;

        if $z0 != 0 goto label09;

     label08:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void close()>();

     label09:
        throw $r8;

     label10:
        $r4 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, java.lang.Class)
    {
        java.lang.Throwable $r9;
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.io.IOException $r4;
        org.codehaus.jackson.map.SerializationConfig $r7;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r5;
        java.lang.Class $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r8;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r5 := @parameter1: java.lang.Object;

        $r6 := @parameter2: java.lang.Class;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r7 = virtualinvoke $r7.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class)>($r6);

        $r8 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r8);

        if $z0 == 0 goto label01;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>();

     label01:
        $r8 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r8);

        if $z0 == 0 goto label02;

        $z0 = $r5 instanceof java.io.Closeable;

        if $z0 == 0 goto label02;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>($r1, $r5, $r7);

        return;

     label02:
        $z0 = 0;

     label03:
        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r7, $r1, $r5, $r3);

     label04:
        $z0 = 1;

     label05:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void close()>();

     label06:
        return;

     label07:
        $r9 := @caughtexception;

        if $z0 != 0 goto label09;

     label08:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void close()>();

     label09:
        throw $r9;

     label10:
        $r4 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public java.lang.Object _convert(java.lang.Object, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.util.TokenBuffer $r3;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        org.codehaus.jackson.type.JavaType $r2;
        java.lang.Object $r1;
        java.lang.String $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.codehaus.jackson.util.TokenBuffer;

        specialinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>(r0);

     label2:
        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r3, $r1);

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>();

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r2);

        virtualinvoke $r4.<org.codehaus.jackson.JsonParser: void close()>();

     label3:
        return $r1;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.deser.StdDeserializationContext $r3;
        org.codehaus.jackson.map.DeserializerProvider $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 = new org.codehaus.jackson.map.deser.StdDeserializationContext;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.StdDeserializationContext: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializerProvider)>($r2, $r1, $r4);

        return $r3;
    }

    public org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter()
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = new org.codehaus.jackson.util.DefaultPrettyPrinter;

        specialinvoke $r1.<org.codehaus.jackson.util.DefaultPrettyPrinter: void <init>()>();

        return $r1;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.DeserializerProvider $r6;
        java.util.concurrent.ConcurrentHashMap $r3;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.JsonMappingException $r7;
        org.codehaus.jackson.type.JavaType $r2;
        java.lang.Object $r4;
        org.codehaus.jackson.map.JsonDeserializer $r5;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (org.codehaus.jackson.map.JsonDeserializer) $r4;

        if $r5 == null goto label1;

        return $r5;

     label1:
        $r6 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        $r5 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, null);

        if $r5 == null goto label2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        return $r5;

     label2:
        $r7 = new org.codehaus.jackson.map.JsonMappingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not find a deserializer for type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }

    public org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)
    {
        org.codehaus.jackson.JsonToken $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        java.io.EOFException $r3;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        if $r2 != null goto label2;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>("No content to map to Object due to end of input");

        throw $r3;

     label2:
        return $r2;
    }

    public java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType)
    {
        java.lang.Throwable $r11;
        org.codehaus.jackson.JsonToken $r5, $r6;
        java.io.IOException $r2, $r3;
        org.codehaus.jackson.map.DeserializationConfig $r7;
        org.codehaus.jackson.map.DeserializationContext $r8;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.JsonDeserializer $r9;
        java.lang.Object $r10;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r4 := @parameter1: org.codehaus.jackson.type.JavaType;

     label01:
        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>($r1);

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

     label02:
        if $r5 == $r6 goto label09;

     label03:
        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

     label04:
        if $r5 == $r6 goto label09;

     label05:
        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

     label06:
        if $r5 != $r6 goto label07;

        goto label09;

     label07:
        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r1, $r7);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r7, $r4);

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r8);

     label08:
        goto label10;

     label09:
        $r10 = null;

     label10:
        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

     label11:
        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void close()>();

     label12:
        return $r10;

     label13:
        $r11 := @caughtexception;

     label14:
        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void close()>();

     label15:
        throw $r11;

     label16:
        $r2 := @caughtexception;

        return $r10;

     label17:
        $r3 := @caughtexception;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.io.IOException from label14 to label15 with label17;
    }

    public java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.JsonToken $r4, $r5;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.DeserializationContext $r6;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.JsonDeserializer $r7;
        java.lang.Object $r8;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter1: org.codehaus.jackson.JsonParser;

        $r2 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>($r1);

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r4 == $r5 goto label2;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r4 == $r5 goto label2;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r4 != $r5 goto label1;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r1, $r3);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r3, $r2);

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r6);

        goto label3;

     label2:
        $r8 = null;

     label3:
        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return $r8;
    }

    public boolean canDeserialize(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.DeserializerProvider $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerProvider: boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r3, $r2);

        return $z0;
    }

    public boolean canSerialize(java.lang.Class)
    {
        org.codehaus.jackson.map.SerializerFactory $r2;
        org.codehaus.jackson.map.SerializerProvider $r1;
        java.lang.Class $r3;
        org.codehaus.jackson.map.SerializationConfig $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializerProvider: boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory)>($r4, $r3, $r2);

        return $z0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature, boolean)
    {
        org.codehaus.jackson.JsonGenerator$Feature $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean $z0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator$Feature;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>($r1, $z0);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature, boolean)
    {
        org.codehaus.jackson.JsonParser$Feature $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean $z0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser$Feature;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean)>($r1, $z0);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>($r1, $z0);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r1, $z0);

        return r0;
    }

    public org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        java.lang.reflect.Type $r3;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.lang.reflect.Type;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        return $r2;
    }

    public java.lang.Object convertValue(java.lang.Object, java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>($r2, $r4);

        return $r2;
    }

    public java.lang.Object convertValue(java.lang.Object, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>($r2, $r1);

        return $r2;
    }

    public java.lang.Object convertValue(java.lang.Object, org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.TypeReference $r3;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r3);

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>($r2, $r4);

        return $r2;
    }

    public org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r1);

        return $r2;
    }

    public org.codehaus.jackson.map.SerializationConfig copySerializationConfig()
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.JsonNode createArrayNode()
    {
        org.codehaus.jackson.node.ArrayNode $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.ArrayNode createArrayNode()>();

        return $r1;
    }

    public org.codehaus.jackson.node.ArrayNode createArrayNode()
    {
        org.codehaus.jackson.node.ArrayNode $r3;
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ArrayNode arrayNode()>();

        return $r3;
    }

    public volatile org.codehaus.jackson.JsonNode createObjectNode()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.node.ObjectNode $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.ObjectNode createObjectNode()>();

        return $r1;
    }

    public org.codehaus.jackson.node.ObjectNode createObjectNode()
    {
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.node.ObjectNode $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ObjectNode objectNode()>();

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter()
    {
        org.codehaus.jackson.map.ObjectWriter $r1;
        org.codehaus.jackson.PrettyPrinter $r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter()>();

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r2, null, $r3);

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectMapper disableDefaultTyping()
    {
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(null);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping()
    {
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = <org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE>;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)
    {
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping $r2;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.map.ObjectMapper$DefaultTyping;

        $r1 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY>;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As)>($r2, $r1);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping, org.codehaus.jackson.annotate.JsonTypeInfo$As)
    {
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping $r3;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r5;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r4;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: org.codehaus.jackson.map.ObjectMapper$DefaultTyping;

        $r1 := @parameter1: org.codehaus.jackson.annotate.JsonTypeInfo$As;

        $r2 = new org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder;

        specialinvoke $r2.<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>($r3);

        $r4 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $r5 = interfaceinvoke $r2.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver)>($r4, null);

        $r5 = interfaceinvoke $r5.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As)>($r1);

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r5);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping, java.lang.String)
    {
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r5;
        java.lang.String $r1;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r4;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.map.ObjectMapper$DefaultTyping;

        $r1 := @parameter1: java.lang.String;

        $r3 = new org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>($r2);

        $r4 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $r5 = interfaceinvoke $r3.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver)>($r4, null);

        $r6 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY>;

        $r5 = interfaceinvoke $r5.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As)>($r6);

        $r5 = interfaceinvoke $r5.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String)>($r1);

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r5);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ObjectWriter $r1;
        org.codehaus.jackson.map.ser.FilterProvider $r2;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r1 = new org.codehaus.jackson.map.ObjectWriter;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)>($r2);

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r0, $r3);

        return $r1;
    }

    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class)
    {
        org.codehaus.jackson.schema.JsonSchema $r3;
        java.lang.Class $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)>($r1, $r2);

        return $r3;
    }

    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class, org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.schema.JsonSchema $r4;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Class $r5;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r5 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)>($r5, $r1, $r3);

        return $r4;
    }

    public org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        return r1;
    }

    public org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializerProvider r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        return r1;
    }

    public org.codehaus.jackson.JsonFactory getJsonFactory()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        return r1;
    }

    public org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.node.JsonNodeFactory $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        return $r1;
    }

    public org.codehaus.jackson.map.SerializationConfig getSerializationConfig()
    {
        org.codehaus.jackson.map.SerializationConfig r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        return r1;
    }

    public org.codehaus.jackson.map.SerializerProvider getSerializerProvider()
    {
        org.codehaus.jackson.map.SerializerProvider r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        return r1;
    }

    public org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        if $r1 != null goto label1;

        $r2 = new org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver;

        specialinvoke $r2.<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void <init>()>();

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r2;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        return $r1;
    }

    public org.codehaus.jackson.map.type.TypeFactory getTypeFactory()
    {
        org.codehaus.jackson.map.type.TypeFactory r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        return r1;
    }

    public org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker()
    {
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter)
    {
        org.codehaus.jackson.map.ObjectWriter $r1;
        org.codehaus.jackson.PrettyPrinter $r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: org.codehaus.jackson.PrettyPrinter;

        if $r3 != null goto label1;

        $r3 = <org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER>;

     label1:
        $r1 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r2, null, $r3);

        return $r1;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.InputStream)
    {
        org.codehaus.jackson.node.NullNode r5;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode $r4;
        java.io.InputStream $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.io.InputStream;

        $r1 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType)>($r3, $r1);

        $r4 = (org.codehaus.jackson.JsonNode) $r2;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.Reader)
    {
        org.codehaus.jackson.node.NullNode r5;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r2;
        java.io.Reader $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.io.Reader;

        $r1 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType)>($r3, $r1);

        $r4 = (org.codehaus.jackson.JsonNode) $r2;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.lang.String)
    {
        org.codehaus.jackson.node.NullNode r5;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.lang.String;

        $r1 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType)>($r3, $r1);

        $r4 = (org.codehaus.jackson.JsonNode) $r2;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.JsonNode $r3;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r1, $r2);

        return $r3;
    }

    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.node.NullNode r6;
        org.codehaus.jackson.type.JavaType $r2;
        java.lang.Object $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonNode $r5;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r2 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, $r4, $r2);

        $r5 = (org.codehaus.jackson.JsonNode) $r3;

        if $r5 != null goto label1;

        r6 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r6;

     label1:
        return $r5;
    }

    public java.lang.Object readValue(java.io.File, java.lang.Class)
    {
        java.io.File $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.File, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        java.io.File $r3;
        org.codehaus.jackson.JsonParser $r4;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.io.File;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(java.io.File, org.codehaus.jackson.type.TypeReference)
    {
        java.io.File $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.InputStream, java.lang.Class)
    {
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        java.io.InputStream $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.InputStream, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        org.codehaus.jackson.JsonFactory $r2;
        java.io.InputStream $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(java.io.InputStream, org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        java.io.InputStream $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.Reader, java.lang.Class)
    {
        java.io.Reader $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.Reader, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        java.io.Reader $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.io.Reader;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(java.io.Reader, org.codehaus.jackson.type.TypeReference)
    {
        java.io.Reader $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.lang.String, java.lang.Class)
    {
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        java.lang.String $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.lang.String, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        java.lang.String $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(java.lang.String, org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        java.lang.String $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.net.URL, java.lang.Class)
    {
        java.net.URL $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.net.URL, org.codehaus.jackson.type.JavaType)
    {
        java.net.URL $r3;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.net.URL;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(java.net.URL, org.codehaus.jackson.type.TypeReference)
    {
        java.net.URL $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode, java.lang.Class)
    {
        org.codehaus.jackson.JsonNode $r2;
        org.codehaus.jackson.map.DeserializationConfig $r4;
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r3;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonNode;

        $r3 := @parameter1: java.lang.Class;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>($r2);

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r5, $r6);

        return $r7;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode $r2;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonNode;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>($r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode, org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.JsonNode $r2;
        org.codehaus.jackson.map.DeserializationConfig $r4;
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.TypeReference $r3;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonNode;

        $r3 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>($r2);

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r3);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r5, $r6);

        return $r7;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class $r3;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r4;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r3 := @parameter1: java.lang.Class;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r2, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, java.lang.Class, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class $r4;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r4 := @parameter1: java.lang.Class;

        $r1 := @parameter2: org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r4);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, $r3, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r2, $r1);

        return $r4;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter2: org.codehaus.jackson.map.DeserializationConfig;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r2, $r4, $r1);

        return $r3;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.TypeReference $r3;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r4;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r3 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r3);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r2, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.type.TypeReference $r4;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r1 := @parameter2: org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r4);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, $r3, $r5);

        return $r6;
    }

    public java.lang.Object readValue(byte[], int, int, java.lang.Class)
    {
        byte[] $r3;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        int $i0, $i1;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r1;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>($r3, $i1, $i0);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r1);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], int, int, org.codehaus.jackson.type.JavaType)
    {
        byte[] $r3;
        org.codehaus.jackson.JsonFactory $r2;
        int $i0, $i1;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>($r3, $i0, $i1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(byte[], int, int, org.codehaus.jackson.type.TypeReference)
    {
        byte[] $r3;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r1;
        int $i0, $i1;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>($r3, $i1, $i0);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r1);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], java.lang.Class)
    {
        byte[] $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], org.codehaus.jackson.type.JavaType)
    {
        byte[] $r3;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: byte[];

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readValue(byte[], org.codehaus.jackson.type.TypeReference)
    {
        byte[] $r1;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>($r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r4, $r6);

        return $r7;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser, java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Class $r3;
        org.codehaus.jackson.map.MappingIterator $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r3 := @parameter1: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r2, $r4);

        return $r5;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.MappingIterator $r3;
        org.codehaus.jackson.map.JsonDeserializer $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r4;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r1, $r4);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r4, $r2);

        $r3 = new org.codehaus.jackson.map.MappingIterator;

        specialinvoke $r3.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r1, $r5, $r6);

        return $r3;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.type.TypeReference $r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.MappingIterator $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r3 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r2, $r4);

        return $r5;
    }

    public org.codehaus.jackson.map.ObjectReader reader()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.ObjectReader $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = new org.codehaus.jackson.map.ObjectReader;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig)>(r0, $r2);

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectReader reader(java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.map.ObjectReader $r4;
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.Class $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r2);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.ObjectReader $r1;
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r1 = new org.codehaus.jackson.map.ObjectReader;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig)>(r0, $r3);

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>($r2);

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ObjectReader $r2;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = new org.codehaus.jackson.map.ObjectReader;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r2.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema)>(r0, $r3, $r1, null, null);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.map.ObjectReader $r4;
        org.codehaus.jackson.type.TypeReference $r2;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.type.TypeReference;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r2);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)>($r3);

        return $r4;
    }

    public void registerModule(org.codehaus.jackson.map.Module)
    {
        org.codehaus.jackson.map.Module $r1;
        org.codehaus.jackson.Version $r3;
        java.lang.String $r2;
        org.codehaus.jackson.map.ObjectMapper$1 $r4;
        java.lang.IllegalArgumentException $r5;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.Module;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.Module: java.lang.String getModuleName()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.Module: org.codehaus.jackson.Version version()>();

        if $r3 == null goto label1;

        $r4 = new org.codehaus.jackson.map.ObjectMapper$1;

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectMapper$1: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.ObjectMapper)>(r0, r0);

        virtualinvoke $r1.<org.codehaus.jackson.map.Module: void setupModule(org.codehaus.jackson.map.Module$SetupContext)>($r4);

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined version");

        throw $r5;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined name");

        throw $r5;
    }

    public transient void registerSubtypes(java.lang.Class[])
    {
        java.lang.Class[] $r1;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.Class[];

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r2.<org.codehaus.jackson.map.jsontype.SubtypeResolver: void registerSubtypes(java.lang.Class[])>($r1);

        return;
    }

    public transient void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])
    {
        org.codehaus.jackson.map.jsontype.NamedType[] $r1;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.NamedType[];

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r2.<org.codehaus.jackson.map.jsontype.SubtypeResolver: void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])>($r1);

        return;
    }

    public org.codehaus.jackson.map.ObjectReader schemaBasedReader(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema $r1;
        org.codehaus.jackson.map.ObjectReader $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r2 = new org.codehaus.jackson.map.ObjectReader;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r2.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema)>(r0, $r3, null, null, $r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter schemaBasedWriter(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema $r1;
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r2 = new org.codehaus.jackson.map.ObjectWriter;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r2.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.FormatSchema)>(r0, $r3, $r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public void setDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        java.text.DateFormat $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.text.DateFormat;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r1;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializerProvider $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializerProvider;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider> = $r1;

        return r0;
    }

    public void setFilters(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ser.FilterProvider $r2;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)>($r2);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r1;

        return;
    }

    public void setHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.HandlerInstantiator $r1;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.node.JsonNodeFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>($r2);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory)
    {
        org.codehaus.jackson.map.SerializerFactory $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.SerializerProvider $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider> = $r1;

        return r0;
    }

    public void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r1;

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper setTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory> = $r1;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return;
    }

    public org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)
    {
        org.codehaus.jackson.node.TreeTraversingParser $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r2 = new org.codehaus.jackson.node.TreeTraversingParser;

        specialinvoke $r2.<org.codehaus.jackson.node.TreeTraversingParser: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.ObjectCodec)>($r1, r0);

        return $r2;
    }

    public java.lang.Object treeToValue(org.codehaus.jackson.JsonNode, java.lang.Class)
    {
        java.lang.Class $r1;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode $r2;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: org.codehaus.jackson.JsonNode;

        $r1 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>($r2);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class)>($r3, $r1);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.map.ObjectWriter $r4;
        org.codehaus.jackson.type.JavaType $r2;
        java.lang.Class $r1;
        org.codehaus.jackson.map.SerializationConfig $r5;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.Class;

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r1);

     label2:
        $r4 = new org.codehaus.jackson.map.ObjectWriter;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r5, $r2, null);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = new org.codehaus.jackson.map.ObjectWriter;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r2.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r3, $r1, null);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.map.ObjectWriter $r4;
        org.codehaus.jackson.type.TypeReference $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.SerializationConfig $r5;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.type.TypeReference;

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>($r1);

     label2:
        $r4 = new org.codehaus.jackson.map.ObjectWriter;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r5, $r2, null);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectReader $r5;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r1;
        java.lang.Class $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r6;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        $r5 = new org.codehaus.jackson.map.ObjectReader;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r5.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema)>(r0, $r6, $r4, $r1, null);

        return $r5;
    }

    public org.codehaus.jackson.JsonNode valueToTree(java.lang.Object)
    {
        org.codehaus.jackson.util.TokenBuffer $r2;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        org.codehaus.jackson.JsonNode $r4;
        java.lang.Object $r1;
        java.lang.String $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new org.codehaus.jackson.util.TokenBuffer;

        specialinvoke $r2.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>(r0);

     label2:
        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r2, $r1);

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)>($r3);

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void close()>();

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public org.codehaus.jackson.Version version()
    {
        org.codehaus.jackson.Version $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = staticinvoke <org.codehaus.jackson.util.VersionUtil: org.codehaus.jackson.Version versionFor(java.lang.Class)>(class "Lorg/codehaus/jackson/map/ObjectMapper;");

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class)
    {
        org.codehaus.jackson.map.ObjectWriter $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: java.lang.Class;

        $r1 = new org.codehaus.jackson.map.ObjectWriter;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class)>($r2);

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r0, $r3);

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectMapper withModule(org.codehaus.jackson.map.Module)
    {
        org.codehaus.jackson.map.Module $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.Module;

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void registerModule(org.codehaus.jackson.map.Module)>($r1);

        return r0;
    }

    public void writeTree(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonNode)
    {
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r2;
        org.codehaus.jackson.map.SerializationConfig $r5;
        org.codehaus.jackson.JsonNode $r4;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r4 := @parameter1: org.codehaus.jackson.JsonNode;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r5, $r1, $r4, $r3);

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label1:
        return;
    }

    public void writeTree(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonNode, org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.JsonNode $r5;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean $z0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r5 := @parameter1: org.codehaus.jackson.JsonNode;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r2, $r1, $r5, $r4);

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label1:
        return;
    }

    public void writeValue(java.io.File, java.lang.Object)
    {
        org.codehaus.jackson.JsonEncoding $r3;
        org.codehaus.jackson.JsonGenerator $r4;
        java.lang.Object $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        java.io.File $r5;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r5 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding)>($r5, $r3);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r4, $r1);

        return;
    }

    public void writeValue(java.io.OutputStream, java.lang.Object)
    {
        java.io.OutputStream $r5;
        org.codehaus.jackson.JsonEncoding $r3;
        org.codehaus.jackson.JsonGenerator $r4;
        java.lang.Object $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r5 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>($r5, $r3);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r4, $r1);

        return;
    }

    public void writeValue(java.io.Writer, java.lang.Object)
    {
        org.codehaus.jackson.JsonGenerator $r3;
        java.io.Writer $r4;
        java.lang.Object $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r4 := @parameter0: java.io.Writer;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>($r4);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r3, $r1);

        return;
    }

    public void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object)
    {
        org.codehaus.jackson.map.SerializerFactory $r2;
        org.codehaus.jackson.map.SerializerProvider $r6;
        org.codehaus.jackson.map.SerializationConfig $r4;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter1: java.lang.Object;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r5);

        if $z0 == 0 goto label1;

        $z0 = $r3 instanceof java.io.Closeable;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>($r1, $r3, $r4);

        return;

     label1:
        $r6 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r6.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r4, $r1, $r3, $r2);

        $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label2:
        return;
    }

    public void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r6;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r4 := @parameter1: java.lang.Object;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r5);

        if $z0 == 0 goto label1;

        $z0 = $r4 instanceof java.io.Closeable;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>($r1, $r4, $r2);

        return;

     label1:
        $r6 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r6.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r2, $r1, $r4, $r3);

        $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label2:
        return;
    }

    public byte[] writeValueAsBytes(java.lang.Object)
    {
        byte[] $r7;
        org.codehaus.jackson.JsonFactory $r4;
        org.codehaus.jackson.util.BufferRecycler $r5;
        org.codehaus.jackson.JsonEncoding $r2;
        org.codehaus.jackson.JsonGenerator $r6;
        java.lang.Object $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.util.ByteArrayBuilder $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r3 := @parameter0: java.lang.Object;

        $r1 = new org.codehaus.jackson.util.ByteArrayBuilder;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r1.<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler)>($r5);

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r6 = virtualinvoke $r4.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>($r1, $r2);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r6, $r3);

        $r7 = virtualinvoke $r1.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] toByteArray()>();

        virtualinvoke $r1.<org.codehaus.jackson.util.ByteArrayBuilder: void release()>();

        return $r7;
    }

    public java.lang.String writeValueAsString(java.lang.Object)
    {
        org.codehaus.jackson.util.BufferRecycler $r4;
        org.codehaus.jackson.io.SegmentedStringWriter $r1;
        org.codehaus.jackson.JsonGenerator $r5;
        java.lang.Object $r2;
        java.lang.String $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter0: java.lang.Object;

        $r1 = new org.codehaus.jackson.io.SegmentedStringWriter;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r1.<org.codehaus.jackson.io.SegmentedStringWriter: void <init>(org.codehaus.jackson.util.BufferRecycler)>($r4);

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>($r1);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r5, $r2);

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.String getAndClear()>();

        return $r6;
    }

    public void writeValueUsingView(java.io.OutputStream, java.lang.Object, java.lang.Class)
    {
        java.io.OutputStream $r6;
        org.codehaus.jackson.JsonEncoding $r4;
        org.codehaus.jackson.JsonGenerator $r5;
        java.lang.Object $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r6 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>($r6, $r4);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class)>($r5, $r1, $r2);

        return;
    }

    public void writeValueUsingView(java.io.Writer, java.lang.Object, java.lang.Class)
    {
        org.codehaus.jackson.JsonGenerator $r4;
        java.io.Writer $r5;
        java.lang.Object $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r5 := @parameter0: java.io.Writer;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>($r5);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class)>($r4, $r1, $r2);

        return;
    }

    public void writeValueUsingView(org.codehaus.jackson.JsonGenerator, java.lang.Object, java.lang.Class)
    {
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class)>($r1, $r2, $r3);

        return;
    }

    public org.codehaus.jackson.map.ObjectWriter writer()
    {
        org.codehaus.jackson.map.ObjectWriter $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r0, $r2);

        return $r1;
    }
}
