public class c.f.a.a.a.g extends java.lang.Object
{

    public static c.f.a.a.a.e a(android.content.Context, org.xmlpull.v1.XmlPullParser)
    {
        android.content.Context $r0;
        java.util.ArrayList $r2;
        java.util.HashSet $r7;
        c.f.a.a.a.a$a $r10;
        int $i0;
        java.lang.String $r4, $r5;
        org.xmlpull.v1.XmlPullParser $r1;
        c.f.a.a.a.g$a $r3;
        boolean $z0;
        c.f.a.a.a.a $r11;
        java.util.Iterator $r8;
        java.util.Set $r13;
        c.f.a.a.a.e $r12;
        java.util.List $r6;
        java.lang.Object $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $r3 = null;

     label1:
        if $i0 == 1 goto label4;

        if $i0 != 2 goto label3;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "domain-config";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <c.f.a.a.a.g: java.util.List a(org.xmlpull.v1.XmlPullParser,c.f.a.a.a.a$a)>($r1, null);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label3;

     label2:
        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "debug-overrides";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <c.f.a.a.a.g: c.f.a.a.a.g$a b(android.content.Context,org.xmlpull.v1.XmlPullParser)>($r0, $r1);

     label3:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label4:
        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (c.f.a.a.a.a$a) $r9;

        $r11 = virtualinvoke $r10.<c.f.a.a.a.a$a: c.f.a.a.a.a a()>();

        if $r11 == null goto label5;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

        goto label5;

     label6:
        if $r3 == null goto label7;

        $r12 = new c.f.a.a.a.e;

        $z0 = $r3.<c.f.a.a.a.g$a: boolean a>;

        $r13 = $r3.<c.f.a.a.a.g$a: java.util.Set b>;

        specialinvoke $r12.<c.f.a.a.a.e: void <init>(java.util.Set,boolean,java.util.Set)>($r7, $z0, $r13);

        return $r12;

     label7:
        $r12 = new c.f.a.a.a.e;

        specialinvoke $r12.<c.f.a.a.a.e: void <init>(java.util.Set)>($r7);

        return $r12;
    }

    public static c.f.a.a.a.g$b a(org.xmlpull.v1.XmlPullParser)
    {
        java.lang.Boolean $r3;
        java.lang.String $r2;
        c.f.a.a.a.g$b $r1;
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "domain");

        $r1 = new c.f.a.a.a.g$b;

        specialinvoke $r1.<c.f.a.a.a.g$b: void <init>(c.f.a.a.a.f)>(null);

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "includeSubdomains");

        if $r2 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1.<c.f.a.a.a.g$b: java.lang.Boolean a> = $r3;

     label1:
        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r1.<c.f.a.a.a.g$b: java.lang.String b> = $r2;

        return $r1;
    }

    public static java.util.List a(org.xmlpull.v1.XmlPullParser, c.f.a.a.a.a$a)
    {
        java.util.Date $r12;
        java.util.ArrayList $r4;
        c.f.a.a.a.a$a $r2, $r3;
        int $i0;
        c.f.a.a.a.g$d $r13;
        java.lang.Boolean $r9;
        c.f.a.a.a.g$c $r10;
        java.lang.String $r1, $r5, $r7;
        c.f.a.a.a.g$b $r8;
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0;
        java.util.Set $r11;
        java.util.List $r6;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: c.f.a.a.a.a$a;

        $r1 = "domain-config";

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "domain-config");

        $r3 = new c.f.a.a.a.a$a;

        specialinvoke $r3.<c.f.a.a.a.a$a: void <init>()>();

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a a(c.f.a.a.a.a$a)>($r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label3;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        return $r4;

     label3:
        if $i0 != 2 goto label7;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r6 = staticinvoke <c.f.a.a.a.g: java.util.List a(org.xmlpull.v1.XmlPullParser,c.f.a.a.a.a$a)>($r0, $r3);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label7;

     label4:
        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "domain";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $r8 = staticinvoke <c.f.a.a.a.g: c.f.a.a.a.g$b a(org.xmlpull.v1.XmlPullParser)>($r0);

        $r5 = $r8.<c.f.a.a.a.g$b: java.lang.String b>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a a(java.lang.String)>($r5);

        $r9 = $r8.<c.f.a.a.a.g$b: java.lang.Boolean a>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a c(java.lang.Boolean)>($r9);

        goto label7;

     label5:
        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "pin-set";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $r10 = staticinvoke <c.f.a.a.a.g: c.f.a.a.a.g$c b(org.xmlpull.v1.XmlPullParser)>($r0);

        $r11 = $r10.<c.f.a.a.a.g$c: java.util.Set b>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a a(java.util.Set)>($r11);

        $r12 = $r10.<c.f.a.a.a.g$c: java.util.Date a>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a a(java.util.Date)>($r12);

        goto label7;

     label6:
        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "trustkit-config";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label7;

        $r13 = staticinvoke <c.f.a.a.a.g: c.f.a.a.a.g$d c(org.xmlpull.v1.XmlPullParser)>($r0);

        $r11 = $r13.<c.f.a.a.a.g$d: java.util.Set c>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a b(java.util.Set)>($r11);

        $r9 = $r13.<c.f.a.a.a.g$d: java.lang.Boolean a>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a b(java.lang.Boolean)>($r9);

        $r9 = $r13.<c.f.a.a.a.g$d: java.lang.Boolean b>;

        virtualinvoke $r3.<c.f.a.a.a.a$a: c.f.a.a.a.a$a a(java.lang.Boolean)>($r9);

     label7:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;
    }

    public static c.f.a.a.a.g$a b(android.content.Context, org.xmlpull.v1.XmlPullParser)
    {
        android.content.Context $r2;
        java.security.cert.CertificateFactory $r11;
        java.lang.String[] $r9;
        java.util.HashSet $r1;
        int $i0;
        java.lang.Boolean $r4;
        java.lang.String $r5, $r6;
        org.xmlpull.v1.XmlPullParser $r0;
        c.f.a.a.a.g$a $r3;
        boolean $z0, $z1;
        java.security.cert.Certificate $r12;
        android.content.res.Resources $r7, $r8;
        java.io.InputStream $r10;

        $r2 := @parameter0: android.content.Context;

        $r0 := @parameter1: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "debug-overrides");

        $r3 = new c.f.a.a.a.g$a;

        specialinvoke $r3.<c.f.a.a.a.g$a: void <init>(c.f.a.a.a.f)>(null);

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r4 = null;

     label1:
        if $i0 != 3 goto label4;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "trust-anchors";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r3.<c.f.a.a.a.g$a: boolean a> = $z0;

     label3:
        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 <= 0 goto label9;

        $r3.<c.f.a.a.a.g$a: java.util.Set b> = $r1;

        return $r3;

     label4:
        if $i0 != 2 goto label8;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "certificates";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "overridePins");

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);

        if $r4 == null goto label5;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == $z0 goto label5;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        staticinvoke <c.f.a.a.d.a: void b(java.lang.String)>("Warning: different values for overridePins are set in the policy but TrustKit only supports one value; using overridePins=false for all connections");

        goto label6;

     label5:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label6:
        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "src");

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("@raw");

        if $z0 == 0 goto label7;

        $r7 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r5 = $r9[1];

        $r6 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r8.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r5, "raw", $r6);

        $r10 = virtualinvoke $r7.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        $r11 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r12 = virtualinvoke $r11.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r12);

        goto label8;

     label7:
        staticinvoke <c.f.a.a.d.a: void a(java.lang.String)>("No <debug-overrides> certificates found by TrustKit. Please check your @raw folder (TrustKit doesn\'t support system and user installed certificates).");

     label8:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label9:
        return $r3;
    }

    public static c.f.a.a.a.g$c b(org.xmlpull.v1.XmlPullParser)
    {
        java.util.Date $r8;
        java.text.SimpleDateFormat $r1;
        java.util.HashSet $r6;
        java.util.Locale $r2;
        com.datatheorem.android.trustkit.config.ConfigurationException $r9;
        int $i0;
        c.f.a.a.a.g$c $r0;
        java.lang.String $r5, $r7, $r10;
        java.text.ParseException $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        boolean $z0;
        java.util.Set $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13;

        $r4 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r5 = "pin-set";

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "pin-set");

        $r0 = new c.f.a.a.a.g$c;

        specialinvoke $r0.<c.f.a.a.a.g$c: void <init>(c.f.a.a.a.f)>(null);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r0.<c.f.a.a.a.g$c: java.util.Set b> = $r6;

        $r7 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "expiration");

        if $r7 == null goto label07;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale US>;

     label01:
        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd", $r2);

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setLenient(boolean)>(0);

        $r8 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r7);

     label02:
        if $r8 == null goto label03;

        $r0.<c.f.a.a.a.g$c: java.util.Date a> = $r8;

        goto label07;

     label03:
        $r9 = new com.datatheorem.android.trustkit.config.ConfigurationException;

     label04:
        specialinvoke $r9.<com.datatheorem.android.trustkit.config.ConfigurationException: void <init>(java.lang.String)>("Invalid expiration date in pin-set");

     label05:
        throw $r9;

     label06:
        $r9 = new com.datatheorem.android.trustkit.config.ConfigurationException;

        specialinvoke $r9.<com.datatheorem.android.trustkit.config.ConfigurationException: void <init>(java.lang.String)>("Invalid expiration date in pin-set");

        throw $r9;

     label07:
        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label08:
        if $i0 != 3 goto label10;

        $r7 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label09;

        goto label10;

     label09:
        return $r0;

     label10:
        if $i0 != 2 goto label12;

        $r7 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10 = "pin";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label12;

        $r7 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "digest");

        if $r7 == null goto label11;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("SHA-256");

        if $z0 == 0 goto label11;

        $r11 = $r0.<c.f.a.a.a.g$c: java.util.Set b>;

        $r7 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label12;

     label11:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected digest value: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r12;

     label12:
        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label08;

     label13:
        $r3 := @caughtexception;

        goto label06;

        catch java.text.ParseException from label01 to label02 with label13;
        catch java.text.ParseException from label04 to label05 with label13;
    }

    public static c.f.a.a.a.g$d c(org.xmlpull.v1.XmlPullParser)
    {
        java.util.HashSet $r3;
        c.f.a.a.a.g$d $r2;
        int $i0;
        java.lang.Boolean $r5;
        java.lang.String $r1, $r4, $r6;
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = "trustkit-config";

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "trustkit-config");

        $r2 = new c.f.a.a.a.g$d;

        specialinvoke $r2.<c.f.a.a.a.g$d: void <init>(c.f.a.a.a.f)>(null);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enforcePinning");

        if $r4 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2.<c.f.a.a.a.g$d: java.lang.Boolean a> = $r5;

     label1:
        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "disableDefaultReportUri");

        if $r4 == null goto label2;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2.<c.f.a.a.a.g$d: java.lang.Boolean b> = $r5;

     label2:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label3:
        if $i0 != 3 goto label5;

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

        goto label5;

     label4:
        $r2.<c.f.a.a.a.g$d: java.util.Set c> = $r3;

        return $r2;

     label5:
        if $i0 != 2 goto label6;

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "report-uri";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label6:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label3;
    }
}
