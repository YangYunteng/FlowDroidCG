public final class com.google.common.util.concurrent.ListenerCallQueue extends java.lang.Object
{
    public static final java.util.logging.Logger logger;
    public final java.util.List listeners;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/common/util/concurrent/ListenerCallQueue;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.util.concurrent.ListenerCallQueue: java.util.logging.Logger logger> = $r2;

        return;
    }

    public void <init>()
    {
        java.util.List $r1;
        com.google.common.util.concurrent.ListenerCallQueue r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.common.util.concurrent.ListenerCallQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r2);

        r0.<com.google.common.util.concurrent.ListenerCallQueue: java.util.List listeners> = $r1;

        return;
    }

    public static java.util.logging.Logger access$000()
    {
        java.util.logging.Logger r0;

        r0 = <com.google.common.util.concurrent.ListenerCallQueue: java.util.logging.Logger logger>;

        return r0;
    }

    private void enqueueHelper(com.google.common.util.concurrent.ListenerCallQueue$Event, java.lang.Object)
    {
        java.lang.Throwable $r8;
        com.google.common.util.concurrent.ListenerCallQueue$Event $r2;
        java.util.Iterator $r5;
        com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue $r7;
        java.util.List $r3, $r4;
        com.google.common.util.concurrent.ListenerCallQueue r0;
        java.lang.Object $r1, $r6;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ListenerCallQueue;

        $r2 := @parameter0: com.google.common.util.concurrent.ListenerCallQueue$Event;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "event");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "label");

        $r3 = r0.<com.google.common.util.concurrent.ListenerCallQueue: java.util.List listeners>;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.google.common.util.concurrent.ListenerCallQueue: java.util.List listeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue) $r6;

        virtualinvoke $r7.<com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue: void add(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object)>($r2, $r1);

        goto label2;

     label3:
        exitmonitor $r3;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label6:
        goto label7;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void addListener(java.lang.Object, java.util.concurrent.Executor)
    {
        java.util.List $r4;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ListenerCallQueue r0;
        com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue $r3;
        java.lang.Object $r1;

        r0 := @this: com.google.common.util.concurrent.ListenerCallQueue;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "listener");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "executor");

        $r4 = r0.<com.google.common.util.concurrent.ListenerCallQueue: java.util.List listeners>;

        $r3 = new com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue;

        specialinvoke $r3.<com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue: void <init>(java.lang.Object,java.util.concurrent.Executor)>($r1, $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void dispatch()
    {
        java.util.List $r1;
        com.google.common.util.concurrent.ListenerCallQueue r0;
        int $i0, $i1;
        com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.ListenerCallQueue;

        $i0 = 0;

     label1:
        $r1 = r0.<com.google.common.util.concurrent.ListenerCallQueue: java.util.List listeners>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = r0.<com.google.common.util.concurrent.ListenerCallQueue: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue) $r2;

        virtualinvoke $r3.<com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue: void dispatch()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event)
    {
        com.google.common.util.concurrent.ListenerCallQueue$Event $r1;
        com.google.common.util.concurrent.ListenerCallQueue r0;

        r0 := @this: com.google.common.util.concurrent.ListenerCallQueue;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenerCallQueue$Event;

        specialinvoke r0.<com.google.common.util.concurrent.ListenerCallQueue: void enqueueHelper(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object)>($r1, $r1);

        return;
    }

    public void enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event, java.lang.String)
    {
        com.google.common.util.concurrent.ListenerCallQueue$Event $r1;
        java.lang.String $r2;
        com.google.common.util.concurrent.ListenerCallQueue r0;

        r0 := @this: com.google.common.util.concurrent.ListenerCallQueue;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenerCallQueue$Event;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.common.util.concurrent.ListenerCallQueue: void enqueueHelper(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object)>($r1, $r2);

        return;
    }
}
