public final class i.c.b.a.f extends java.lang.Object
{

    public static final i.c.b.a.e a(i.c.b.a.a)
    {
        i.c.b.a.a $r0;
        i.c.b.a.e $r3;
        java.lang.'annotation'.Annotation $r2;
        java.lang.Class $r1;

        $r0 := @parameter0: i.c.b.a.a;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Li/c/b/a/e;");

        $r3 = (i.c.b.a.e) $r2;

        return $r3;
    }

    public static final void a(int, int)
    {
        java.lang.IllegalStateException $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 > $i0 goto label1;

        return;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Debug metadata version mismatch. Expected: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please update the Kotlin standard library.");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.IllegalStateException;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static final int b(i.c.b.a.a)
    {
        java.lang.reflect.Field $r3;
        java.lang.Integer $r6;
        java.lang.Exception $r0;
        i.c.b.a.a $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.Object $r4, $r5;
        boolean $z0;

        $r1 := @parameter0: i.c.b.a.a;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("label");

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r3, "field");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label02:
        $r5 = $r4;

        $z0 = $r4 instanceof java.lang.Integer;

        if $z0 != 0 goto label03;

        $r5 = null;

     label03:
        $r6 = (java.lang.Integer) $r5;

     label04:
        if $r6 == null goto label07;

     label05:
        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label06:
        goto label08;

     label07:
        $i0 = 0;

     label08:
        $i0 = $i0 - 1;

        return $i0;

     label09:
        $i0 = -1;

        return $i0;

     label10:
        $r0 := @caughtexception;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
    }

    public static final java.lang.StackTraceElement c(i.c.b.a.a)
    {
        i.c.b.a.a $r0;
        int[] $r2;
        i.c.b.a.h $r3;
        i.c.b.a.e $r1;
        int $i0;
        java.lang.StringBuilder $r5, $r8;
        java.lang.StackTraceElement $r9;
        java.lang.String $r4, $r6, $r7;

        $r0 := @parameter0: i.c.b.a.a;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$getStackTraceElementImpl");

        $r1 = staticinvoke <i.c.b.a.f: i.c.b.a.e a(i.c.b.a.a)>($r0);

        if $r1 == null goto label5;

        $i0 = interfaceinvoke $r1.<i.c.b.a.e: int v()>();

        staticinvoke <i.c.b.a.f: void a(int,int)>(1, $i0);

        $i0 = staticinvoke <i.c.b.a.f: int b(i.c.b.a.a)>($r0);

        if $i0 >= 0 goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<i.c.b.a.e: int[] l()>();

        $i0 = $r2[$i0];

     label2:
        $r3 = <i.c.b.a.h: i.c.b.a.h c>;

        $r4 = virtualinvoke $r3.<i.c.b.a.h: java.lang.String b(i.c.b.a.a)>($r0);

        if $r4 != null goto label3;

        $r4 = interfaceinvoke $r1.<i.c.b.a.e: java.lang.String c()>();

        goto label4;

     label3:
        $r8 = new java.lang.StringBuilder;

        $r5 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r4 = interfaceinvoke $r1.<i.c.b.a.e: java.lang.String c()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r9 = new java.lang.StackTraceElement;

        $r6 = interfaceinvoke $r1.<i.c.b.a.e: java.lang.String m()>();

        $r7 = interfaceinvoke $r1.<i.c.b.a.e: java.lang.String f()>();

        specialinvoke $r9.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r6, $r7, $i0);

        return $r9;

     label5:
        return null;
    }
}
