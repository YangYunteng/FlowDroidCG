public class c.a.a.cb extends c.a.a.a
{
    public static final java.lang.String[] o;
    public static c.a.a.cb p;
    public static final java.lang.Object q;
    public android.database.sqlite.SQLiteStatement r;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.Object $r1;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "ID";

        $r0[1] = "URL";

        $r0[2] = "POSTBODY";

        $r0[3] = "POSTTYPE";

        $r0[4] = "TIMESTAMP";

        $r0[5] = "TIMEOUT";

        <c.a.a.cb: java.lang.String[] o> = $r0;

        <c.a.a.cb: c.a.a.cb p> = null;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <c.a.a.cb: java.lang.Object q> = $r1;

        return;
    }

    public void <init>()
    {
        c.a.a.cb r0;
        long $l0;
        java.lang.String $r1;
        java.io.File $r2, $r3;

        r0 := @this: c.a.a.cb;

        specialinvoke r0.<c.a.a.a: void <init>()>();

        r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r> = null;

        $r1 = virtualinvoke r0.<c.a.a.cb: java.lang.String m()>();

        r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String e> = $r1;

        $r1 = virtualinvoke r0.<c.a.a.cb: java.lang.String o()>();

        r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f> = $r1;

        r0.<c.a.a.a: java.lang.String i> = "CREATE TABLE IF NOT EXISTS HITS (ID INTEGER PRIMARY KEY AUTOINCREMENT, URL TEXT, POSTBODY TEXT, POSTTYPE TEXT, TIMESTAMP INTEGER, TIMEOUT INTEGER)";

        r0.<c.a.a.a: long h> = 0L;

        $r2 = new java.io.File;

        $r3 = staticinvoke <com.adobe.mobile.StaticMethods: java.io.File k()>();

        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String e>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void a(java.io.File)>($r2);

        $l0 = virtualinvoke r0.<c.a.a.a: long k()>();

        r0.<c.a.a.a: long g> = $l0;

        return;
    }

    public static c.a.a.cb q()
    {
        java.lang.Throwable $r2;
        java.lang.Object $r0;
        c.a.a.cb $r1;

        $r0 = <c.a.a.cb: java.lang.Object q>;

        entermonitor $r0;

     label1:
        $r1 = <c.a.a.cb: c.a.a.cb p>;

        if $r1 != null goto label2;

        $r1 = new c.a.a.cb;

        specialinvoke $r1.<c.a.a.cb: void <init>()>();

        <c.a.a.cb: c.a.a.cb p> = $r1;

     label2:
        $r1 = <c.a.a.cb: c.a.a.cb p>;

        exitmonitor $r0;

     label3:
        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void a(java.lang.String, java.lang.String, java.lang.String, long, long)
    {
        java.lang.Throwable $r10;
        java.lang.Object[] $r5;
        c.a.a.cb r0;
        long $l0, $l1;
        c.a.a.Da $r4;
        c.a.a.Ia $r6, $r7;
        int $i2;
        java.lang.String $r1, $r2, $r3;
        android.database.sqlite.SQLiteStatement $r9;
        android.database.SQLException $r12;
        java.lang.Exception $r11;
        java.lang.Object $r8;

        r0 := @this: c.a.a.cb;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $l1 := @parameter3: long;

        $l0 := @parameter4: long;

        $r4 = staticinvoke <c.a.a.Da: c.a.a.Da q()>();

        if $r4 != null goto label01;

        $r5 = newarray (java.lang.Object)[1];

        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r5[0] = $r1;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Cannot send hit, MobileConfig is null (this really shouldn\'t happen)", $r5);

        return;

     label01:
        $r6 = virtualinvoke $r4.<c.a.a.Da: c.a.a.Ia v()>();

        $r7 = <c.a.a.Ia: c.a.a.Ia b>;

        if $r6 != $r7 goto label02;

        $r5 = newarray (java.lang.Object)[1];

        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r5[0] = $r1;

        staticinvoke <com.adobe.mobile.StaticMethods: void a(java.lang.String,java.lang.Object[])>("%s - Ignoring hit due to privacy status being opted out", $r5);

        return;

     label02:
        $r8 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.Object d>;

        entermonitor $r8;

     label03:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label04:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r1);

     label05:
        if $r2 == null goto label11;

     label06:
        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

     label07:
        if $i2 <= 0 goto label11;

     label08:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label09:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(2, $r2);

     label10:
        goto label13;

     label11:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label12:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(2);

     label13:
        if $r3 == null goto label19;

     label14:
        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

     label15:
        if $i2 <= 0 goto label19;

     label16:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label17:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(3, $r3);

     label18:
        goto label21;

     label19:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label20:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(3);

     label21:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label22:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(4, $l1);

     label23:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label24:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(5, $l0);

     label25:
        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label26:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void execute()>();

     label27:
        $l1 = r0.<c.a.a.a: long g>;

     label28:
        $l1 = $l1 + 1L;

     label29:
        r0.<c.a.a.a: long g> = $l1;

        $r9 = r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r>;

     label30:
        virtualinvoke $r9.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

     label31:
        goto label36;

     label32:
        $r10 := @caughtexception;

        goto label38;

     label33:
        $r11 := @caughtexception;

     label34:
        $r5 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r5[0] = $r2;

        $r5[1] = $r1;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unknown error while inserting url (%s)", $r5);

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void a(java.lang.Exception)>($r11);

        goto label36;

     label35:
        $r12 := @caughtexception;

        $r5 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r5[0] = $r2;

        $r5[1] = $r1;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unable to insert url (%s)", $r5);

        virtualinvoke r0.<com.adobe.mobile.AbstractDatabaseBacking: void a(java.lang.Exception)>($r12);

     label36:
        exitmonitor $r8;

     label37:
        virtualinvoke r0.<c.a.a.a: void a(boolean)>(0);

        return;

     label38:
        exitmonitor $r8;

     label39:
        throw $r10;

        catch android.database.SQLException from label04 to label05 with label35;
        catch android.database.SQLException from label06 to label07 with label35;
        catch android.database.SQLException from label09 to label10 with label35;
        catch android.database.SQLException from label12 to label13 with label35;
        catch android.database.SQLException from label14 to label15 with label35;
        catch android.database.SQLException from label17 to label18 with label35;
        catch android.database.SQLException from label20 to label21 with label35;
        catch android.database.SQLException from label22 to label23 with label35;
        catch android.database.SQLException from label24 to label25 with label35;
        catch android.database.SQLException from label26 to label27 with label35;
        catch android.database.SQLException from label30 to label31 with label35;
        catch java.lang.Exception from label03 to label05 with label33;
        catch java.lang.Exception from label06 to label07 with label33;
        catch java.lang.Exception from label08 to label10 with label33;
        catch java.lang.Exception from label11 to label13 with label33;
        catch java.lang.Exception from label14 to label15 with label33;
        catch java.lang.Exception from label16 to label18 with label33;
        catch java.lang.Exception from label19 to label28 with label33;
        catch java.lang.Exception from label29 to label31 with label33;
        catch java.lang.Throwable from label03 to label31 with label32;
        catch java.lang.Throwable from label34 to label37 with label32;
        catch java.lang.Throwable from label38 to label39 with label32;
    }

    public void g()
    {
        java.lang.Object[] $r4;
        c.a.a.cb r0;
        android.database.SQLException $r6;
        java.lang.Exception $r3;
        java.lang.NullPointerException $r7;
        android.database.sqlite.SQLiteDatabase $r1;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.String $r5;

        r0 := @this: c.a.a.cb;

     label1:
        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: android.database.sqlite.SQLiteDatabase a>;

     label2:
        $r2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>("INSERT INTO HITS (URL, POSTBODY, POSTTYPE, TIMESTAMP, TIMEOUT) VALUES (?, ?, ?, ?, ?)");

     label3:
        r0.<c.a.a.cb: android.database.sqlite.SQLiteStatement r> = $r2;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r4[0] = $r5;

        $r5 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r4[1] = $r5;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unable to create database due to an unexpected error (%s)", $r4);

        return;

     label6:
        $r6 := @caughtexception;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r4[0] = $r5;

        $r5 = virtualinvoke $r6.<android.database.SQLException: java.lang.String getLocalizedMessage()>();

        $r4[1] = $r5;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unable to create database due to a sql error (%s)", $r4);

        return;

     label7:
        $r7 := @caughtexception;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r4[0] = $r5;

        $r5 = virtualinvoke $r7.<java.lang.NullPointerException: java.lang.String getLocalizedMessage()>();

        $r4[1] = $r5;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unable to create database due to an invalid path (%s)", $r4);

        return;

        catch java.lang.NullPointerException from label1 to label4 with label7;
        catch android.database.SQLException from label2 to label3 with label6;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public java.lang.Runnable l()
    {
        c.a.a.cb r0, $r2;
        c.a.a.bb $r1;

        r0 := @this: c.a.a.cb;

        $r2 = virtualinvoke r0.<c.a.a.cb: c.a.a.cb n()>();

        $r1 = new c.a.a.bb;

        specialinvoke $r1.<c.a.a.bb: void <init>(c.a.a.cb,c.a.a.cb)>(r0, $r2);

        return $r1;
    }

    public java.lang.String m()
    {
        c.a.a.cb r0;

        r0 := @this: c.a.a.cb;

        return "ADBMobile3rdPartyDataCache.sqlite";
    }

    public c.a.a.cb n()
    {
        c.a.a.cb r0;

        r0 := @this: c.a.a.cb;

        r0 = staticinvoke <c.a.a.cb: c.a.a.cb q()>();

        return r0;
    }

    public java.lang.String o()
    {
        c.a.a.cb r0;

        r0 := @this: c.a.a.cb;

        return "External Callback";
    }

    public c.a.a.a$a p()
    {
        java.lang.Throwable $r12, $r13, $r17;
        java.lang.Object[] $r15;
        c.a.a.cb r0;
        java.lang.String[] $r4;
        long $l0;
        android.database.sqlite.SQLiteDatabase $r3;
        int $i1;
        java.lang.String $r7;
        android.database.Cursor $r5, $r6;
        boolean $z0;
        android.database.SQLException $r9, $r11, $r16;
        c.a.a.a$a $r2;
        java.lang.Exception $r8, $r10, $r14;
        java.lang.Object $r1;

        r0 := @this: c.a.a.cb;

        $r1 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.Object d>;

        entermonitor $r1;

        $r2 = null;

     label01:
        $r3 = r0.<com.adobe.mobile.AbstractDatabaseBacking: android.database.sqlite.SQLiteDatabase a>;

     label02:
        $r4 = <c.a.a.cb: java.lang.String[] o>;

     label03:
        $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("HITS", $r4, null, null, null, null, "ID ASC", "1");

     label04:
        $r6 = $r5;

     label05:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 == 0 goto label23;

        $r2 = new c.a.a.a$a;

     label07:
        specialinvoke $r2.<c.a.a.a$a: void <init>()>();

     label08:
        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(0);

     label09:
        $r2.<c.a.a.a$a: java.lang.String b> = $r7;

     label10:
        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(1);

     label11:
        $r2.<c.a.a.a$a: java.lang.String a> = $r7;

     label12:
        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(2);

     label13:
        $r2.<c.a.a.a$a: java.lang.String d> = $r7;

     label14:
        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(3);

     label15:
        $r2.<c.a.a.a$a: java.lang.String e> = $r7;

     label16:
        $l0 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>(4);

     label17:
        $r2.<c.a.a.a$a: long c> = $l0;

     label18:
        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(5);

     label19:
        $r2.<c.a.a.a$a: int f> = $i1;

     label20:
        goto label23;

     label21:
        $r8 := @caughtexception;

        goto label30;

     label22:
        $r9 := @caughtexception;

        goto label35;

     label23:
        if $r5 == null goto label25;

     label24:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label25:
        goto label37;

     label26:
        $r10 := @caughtexception;

        $r2 = null;

        $r8 = $r10;

        goto label30;

     label27:
        $r11 := @caughtexception;

        $r2 = null;

        $r9 = $r11;

        goto label35;

     label28:
        $r12 := @caughtexception;

        $r6 = null;

        $r13 = $r12;

        goto label40;

     label29:
        $r14 := @caughtexception;

        $r2 = null;

        $r8 = $r14;

        $r6 = null;

     label30:
        $r15 = newarray (java.lang.Object)[2];

        $r7 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r15[0] = $r7;

        $r7 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        $r15[1] = $r7;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unknown error reading from database (%s)", $r15);

     label31:
        if $r6 == null goto label37;

     label32:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label33:
        goto label37;

     label34:
        $r16 := @caughtexception;

        $r2 = null;

        $r9 = $r16;

        $r6 = null;

     label35:
        $r15 = newarray (java.lang.Object)[2];

        $r7 = r0.<com.adobe.mobile.AbstractDatabaseBacking: java.lang.String f>;

        $r15[0] = $r7;

        $r7 = virtualinvoke $r9.<android.database.SQLException: java.lang.String getMessage()>();

        $r15[1] = $r7;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("%s - Unable to read from database (%s)", $r15);

     label36:
        if $r6 == null goto label37;

        goto label32;

     label37:
        exitmonitor $r1;

     label38:
        return $r2;

     label39:
        $r13 := @caughtexception;

     label40:
        if $r6 == null goto label41;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label41:
        throw $r13;

     label42:
        $r17 := @caughtexception;

        exitmonitor $r1;

     label43:
        goto label44;

     label44:
        throw $r17;

        catch android.database.SQLException from label03 to label04 with label34;
        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label03 to label04 with label29;
        catch java.lang.Throwable from label01 to label05 with label28;
        catch android.database.SQLException from label05 to label06 with label27;
        catch android.database.SQLException from label07 to label08 with label27;
        catch java.lang.Exception from label05 to label06 with label26;
        catch java.lang.Exception from label07 to label08 with label26;
        catch java.lang.Throwable from label05 to label08 with label39;
        catch android.database.SQLException from label08 to label09 with label22;
        catch android.database.SQLException from label10 to label11 with label22;
        catch android.database.SQLException from label12 to label13 with label22;
        catch android.database.SQLException from label14 to label15 with label22;
        catch android.database.SQLException from label16 to label17 with label22;
        catch android.database.SQLException from label18 to label19 with label22;
        catch java.lang.Exception from label08 to label20 with label21;
        catch java.lang.Throwable from label08 to label20 with label39;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.lang.Throwable from label30 to label31 with label39;
        catch java.lang.Throwable from label32 to label33 with label42;
        catch java.lang.Throwable from label35 to label36 with label39;
        catch java.lang.Throwable from label37 to label38 with label42;
        catch java.lang.Throwable from label39 to label43 with label42;
    }
}
