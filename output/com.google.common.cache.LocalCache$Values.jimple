public final class com.google.common.cache.LocalCache$Values extends java.util.AbstractCollection
{
    public final java.util.concurrent.ConcurrentMap map;
    public final com.google.common.cache.LocalCache this$0;

    public void <init>(com.google.common.cache.LocalCache, java.util.concurrent.ConcurrentMap)
    {
        com.google.common.cache.LocalCache $r1;
        com.google.common.cache.LocalCache$Values r0;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 := @parameter0: com.google.common.cache.LocalCache;

        $r2 := @parameter1: java.util.concurrent.ConcurrentMap;

        r0.<com.google.common.cache.LocalCache$Values: com.google.common.cache.LocalCache this$0> = $r1;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        r0.<com.google.common.cache.LocalCache$Values: java.util.concurrent.ConcurrentMap map> = $r2;

        return;
    }

    public static boolean a(java.util.function.Predicate, java.lang.Object, java.lang.Object)
    {
        java.util.function.Predicate $r2;
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r2 := @parameter0: java.util.function.Predicate;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $z0 = interfaceinvoke $r2.<java.util.function.Predicate: boolean test(java.lang.Object)>($r1);

        return $z0;
    }

    public void clear()
    {
        com.google.common.cache.LocalCache$Values r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 = r0.<com.google.common.cache.LocalCache$Values: java.util.concurrent.ConcurrentMap map>;

        interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.cache.LocalCache$Values r0;
        java.util.concurrent.ConcurrentMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.cache.LocalCache$Values: java.util.concurrent.ConcurrentMap map>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: boolean containsValue(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean isEmpty()
    {
        com.google.common.cache.LocalCache$Values r0;
        boolean $z0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 = r0.<com.google.common.cache.LocalCache$Values: java.util.concurrent.ConcurrentMap map>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.cache.LocalCache$ValueIterator $r1;
        com.google.common.cache.LocalCache $r2;
        com.google.common.cache.LocalCache$Values r0;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 = new com.google.common.cache.LocalCache$ValueIterator;

        $r2 = r0.<com.google.common.cache.LocalCache$Values: com.google.common.cache.LocalCache this$0>;

        specialinvoke $r1.<com.google.common.cache.LocalCache$ValueIterator: void <init>(com.google.common.cache.LocalCache)>($r2);

        return $r1;
    }

    public boolean removeIf(java.util.function.Predicate)
    {
        com.google.common.cache.LocalCache $r1;
        java.util.function.Predicate $r3;
        c.i.b.b.e $r2;
        com.google.common.cache.LocalCache$Values r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r3 := @parameter0: java.util.function.Predicate;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r1 = r0.<com.google.common.cache.LocalCache$Values: com.google.common.cache.LocalCache this$0>;

        $r2 = new c.i.b.b.e;

        specialinvoke $r2.<c.i.b.b.e: void <init>(java.util.function.Predicate)>($r3);

        $z0 = virtualinvoke $r1.<com.google.common.cache.LocalCache: boolean removeIf(java.util.function.BiPredicate)>($r2);

        return $z0;
    }

    public int size()
    {
        int $i0;
        com.google.common.cache.LocalCache$Values r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 = r0.<com.google.common.cache.LocalCache$Values: java.util.concurrent.ConcurrentMap map>;

        $i0 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: int size()>();

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r2;
        com.google.common.cache.LocalCache$Values r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 = staticinvoke <com.google.common.cache.LocalCache: java.util.ArrayList access$200(java.util.Collection)>(r0);

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        com.google.common.cache.LocalCache$Values r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.common.cache.LocalCache$Values;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <com.google.common.cache.LocalCache: java.util.ArrayList access$200(java.util.Collection)>(r0);

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;
    }
}
