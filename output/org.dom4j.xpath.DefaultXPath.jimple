public class org.dom4j.xpath.DefaultXPath extends java.lang.Object implements org.dom4j.XPath, org.dom4j.NodeFilter, java.io.Serializable
{
    public org.jaxen.NamespaceContext namespaceContext;
    public java.lang.String text;
    public org.jaxen.XPath xpath;

    public void <init>(java.lang.String)
    {
        org.jaxen.XPath $r1;
        java.lang.String $r2;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.xpath.DefaultXPath: java.lang.String text> = $r2;

        $r1 = staticinvoke <org.dom4j.xpath.DefaultXPath: org.jaxen.XPath parse(java.lang.String)>($r2);

        r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath> = $r1;

        return;
    }

    public static org.jaxen.XPath parse(java.lang.String)
    {
        java.lang.Throwable $r2, $r3;
        org.jaxen.dom4j.Dom4jXPath $r4;
        org.jaxen.JaxenException $r7;
        org.jaxen.XPath $r6;
        org.dom4j.InvalidXPathException $r5;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r4 = new org.jaxen.dom4j.Dom4jXPath;

     label2:
        specialinvoke $r4.<org.jaxen.dom4j.Dom4jXPath: void <init>(java.lang.String)>($r0);

     label3:
        $r6 = (org.jaxen.XPath) $r4;

        return $r6;

     label4:
        $r2 := @caughtexception;

        $r5 = new org.dom4j.InvalidXPathException;

        specialinvoke $r5.<org.dom4j.InvalidXPathException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r2);

        throw $r5;

     label5:
        $r3 := @caughtexception;

        $r5 = new org.dom4j.InvalidXPathException;

        $r7 = (org.jaxen.JaxenException) $r3;

        $r1 = virtualinvoke $r7.<org.jaxen.JaxenException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.dom4j.InvalidXPathException: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        throw $r5;

        catch org.jaxen.JaxenException from label2 to label3 with label5;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean booleanValueOf(java.lang.Object)
    {
        java.lang.Throwable $r3;
        org.jaxen.JaxenException $r4;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.XPath $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r2);

     label2:
        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label3:
        $z0 = interfaceinvoke $r1.<org.jaxen.XPath: boolean booleanValueOf(java.lang.Object)>($r2);

     label4:
        return $z0;

     label5:
        $r3 := @caughtexception;

        $r4 = (org.jaxen.JaxenException) $r3;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r4);

        return 0;

        catch org.jaxen.JaxenException from label1 to label2 with label5;
        catch org.jaxen.JaxenException from label3 to label4 with label5;
    }

    public java.lang.Object evaluate(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r5;
        java.util.List $r3;
        org.dom4j.xpath.DefaultXPath r0;
        int $i0;
        java.lang.Object $r1;
        org.jaxen.XPath $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: java.lang.Object;

     label01:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r1);

     label02:
        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label03:
        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>($r1);

     label04:
        if $r3 == null goto label10;

     label05:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label06:
        if $i0 != 1 goto label10;

     label07:
        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

     label08:
        return $r1;

     label09:
        $r4 := @caughtexception;

        $r5 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r5);

        return null;

     label10:
        return $r3;

        catch org.jaxen.JaxenException from label01 to label02 with label09;
        catch org.jaxen.JaxenException from label03 to label04 with label09;
        catch org.jaxen.JaxenException from label05 to label06 with label09;
        catch org.jaxen.JaxenException from label07 to label08 with label09;
    }

    public java.lang.Object getCompareValue(org.dom4j.Node)
    {
        java.lang.String $r1;
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.Node $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 := @parameter0: org.dom4j.Node;

        $r1 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.lang.String valueOf(java.lang.Object)>($r2);

        return $r1;
    }

    public org.jaxen.FunctionContext getFunctionContext()
    {
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.FunctionContext $r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r1 = interfaceinvoke $r2.<org.jaxen.XPath: org.jaxen.FunctionContext getFunctionContext()>();

        return $r1;
    }

    public org.jaxen.NamespaceContext getNamespaceContext()
    {
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.NamespaceContext r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.NamespaceContext namespaceContext>;

        return r1;
    }

    public java.lang.String getText()
    {
        java.lang.String r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 = r0.<org.dom4j.xpath.DefaultXPath: java.lang.String text>;

        return r1;
    }

    public org.jaxen.VariableContext getVariableContext()
    {
        org.jaxen.VariableContext $r1;
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r1 = interfaceinvoke $r2.<org.jaxen.XPath: org.jaxen.VariableContext getVariableContext()>();

        return $r1;
    }

    public void handleJaxenException(org.jaxen.JaxenException)
    {
        org.jaxen.JaxenException $r1;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.String $r2;
        org.dom4j.XPathException $r3;
        java.lang.Exception $r4;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: org.jaxen.JaxenException;

        $r3 = new org.dom4j.XPathException;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: java.lang.String text>;

        $r4 = (java.lang.Exception) $r1;

        specialinvoke $r3.<org.dom4j.XPathException: void <init>(java.lang.String,java.lang.Exception)>($r2, $r4);

        throw $r3;
    }

    public boolean matches(org.dom4j.Node)
    {
        java.lang.Throwable $r6;
        org.jaxen.JaxenException $r7;
        org.dom4j.Node $r1;
        org.jaxen.XPath $r2;
        java.util.List $r3;
        org.dom4j.xpath.DefaultXPath r0;
        int $i0;
        java.lang.Boolean $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: org.dom4j.Node;

     label01:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r1);

     label02:
        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label03:
        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>($r1);

     label04:
        if $r3 == null goto label13;

     label05:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label06:
        if $i0 <= 0 goto label15;

     label07:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

     label08:
        $z0 = $r4 instanceof java.lang.Boolean;

        if $z0 == 0 goto label11;

        $r5 = (java.lang.Boolean) $r4;

     label09:
        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        return $z0;

     label11:
        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r1);

     label12:
        return $z0;

     label13:
        return 0;

     label14:
        $r6 := @caughtexception;

        $r7 = (org.jaxen.JaxenException) $r6;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r7);

     label15:
        return 0;

        catch org.jaxen.JaxenException from label01 to label02 with label14;
        catch org.jaxen.JaxenException from label03 to label04 with label14;
        catch org.jaxen.JaxenException from label05 to label06 with label14;
        catch org.jaxen.JaxenException from label07 to label08 with label14;
        catch org.jaxen.JaxenException from label09 to label10 with label14;
        catch org.jaxen.JaxenException from label11 to label12 with label14;
    }

    public java.lang.Number numberValueOf(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r5;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.XPath $r1;
        java.lang.Object $r3;
        java.lang.Number $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r3 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r3);

     label2:
        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label3:
        $r2 = interfaceinvoke $r1.<org.jaxen.XPath: java.lang.Number numberValueOf(java.lang.Object)>($r3);

     label4:
        return $r2;

     label5:
        $r4 := @caughtexception;

        $r5 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r5);

        return null;

        catch org.jaxen.JaxenException from label1 to label2 with label5;
        catch org.jaxen.JaxenException from label3 to label4 with label5;
    }

    public void removeDuplicates(java.util.List, java.util.Map)
    {
        java.util.HashSet $r2;
        java.util.List $r3;
        org.dom4j.xpath.DefaultXPath r0;
        java.util.Iterator $r4;
        java.util.Map $r1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r3 := @parameter0: java.util.List;

        $r1 := @parameter1: java.util.Map;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label1;

     label3:
        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        goto label1;
    }

    public java.util.List selectNodes(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r5;
        java.util.List $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.XPath $r1;
        java.lang.Object $r3;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r3 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r3);

     label2:
        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label3:
        $r2 = interfaceinvoke $r1.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>($r3);

     label4:
        return $r2;

     label5:
        $r4 := @caughtexception;

        $r5 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r5);

        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;

        catch org.jaxen.JaxenException from label1 to label2 with label5;
        catch org.jaxen.JaxenException from label3 to label4 with label5;
    }

    public java.util.List selectNodes(java.lang.Object, org.dom4j.XPath)
    {
        java.util.List $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.XPath $r1;
        java.lang.Object $r3;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.dom4j.XPath;

        $r2 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.util.List selectNodes(java.lang.Object)>($r3);

        interfaceinvoke $r1.<org.dom4j.XPath: void sort(java.util.List)>($r2);

        return $r2;
    }

    public java.util.List selectNodes(java.lang.Object, org.dom4j.XPath, boolean)
    {
        java.util.List $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.XPath $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.dom4j.XPath;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.util.List selectNodes(java.lang.Object)>($r3);

        interfaceinvoke $r1.<org.dom4j.XPath: void sort(java.util.List,boolean)>($r2, $z0);

        return $r2;
    }

    public java.lang.Object selectObject(java.lang.Object)
    {
        java.lang.Object $r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.lang.Object evaluate(java.lang.Object)>($r1);

        return $r1;
    }

    public org.dom4j.Node selectSingleNode(java.lang.Object)
    {
        java.lang.Throwable $r7;
        org.jaxen.JaxenException $r10;
        org.dom4j.Node $r4;
        org.jaxen.XPath $r3;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.StringBuilder $r1, $r8;
        java.lang.Object $r2;
        java.lang.Class $r5;
        java.lang.String $r6;
        org.dom4j.XPathException $r9;
        boolean $z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r2);

     label2:
        $r3 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label3:
        $r2 = interfaceinvoke $r3.<org.jaxen.XPath: java.lang.Object selectSingleNode(java.lang.Object)>($r2);

     label4:
        $z0 = $r2 instanceof org.dom4j.Node;

        if $z0 == 0 goto label5;

        $r4 = (org.dom4j.Node) $r2;

        return $r4;

     label5:
        if $r2 != null goto label6;

        return null;

     label6:
        $r9 = new org.dom4j.XPathException;

        $r8 = new java.lang.StringBuilder;

        $r1 = $r8;

     label7:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("The result of the XPath expression is not a Node. It was: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type: ");

        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.dom4j.XPathException: void <init>(java.lang.String)>($r6);

     label8:
        throw $r9;

     label9:
        $r7 := @caughtexception;

        $r10 = (org.jaxen.JaxenException) $r7;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r10);

        return null;

        catch org.jaxen.JaxenException from label1 to label2 with label9;
        catch org.jaxen.JaxenException from label3 to label4 with label9;
        catch org.jaxen.JaxenException from label7 to label8 with label9;
    }

    public void setFunctionContext(org.jaxen.FunctionContext)
    {
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.FunctionContext $r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: org.jaxen.FunctionContext;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        interfaceinvoke $r2.<org.jaxen.XPath: void setFunctionContext(org.jaxen.FunctionContext)>($r1);

        return;
    }

    public void setNSContext(java.lang.Object)
    {
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.xpath.DefaultNamespaceContext $r1;
        org.jaxen.NamespaceContext $r3;
        java.lang.Object $r2;
        org.jaxen.XPath $r4;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 := @parameter0: java.lang.Object;

        $r3 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.NamespaceContext namespaceContext>;

        if $r3 != null goto label1;

        $r4 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r1 = staticinvoke <org.dom4j.xpath.DefaultNamespaceContext: org.dom4j.xpath.DefaultNamespaceContext create(java.lang.Object)>($r2);

        interfaceinvoke $r4.<org.jaxen.XPath: void setNamespaceContext(org.jaxen.NamespaceContext)>($r1);

     label1:
        return;
    }

    public void setNamespaceContext(org.jaxen.NamespaceContext)
    {
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.NamespaceContext $r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: org.jaxen.NamespaceContext;

        r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.NamespaceContext namespaceContext> = $r1;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        interfaceinvoke $r2.<org.jaxen.XPath: void setNamespaceContext(org.jaxen.NamespaceContext)>($r1);

        return;
    }

    public void setNamespaceURIs(java.util.Map)
    {
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.NamespaceContext $r3;
        java.util.Map $r1;
        org.jaxen.SimpleNamespaceContext $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: java.util.Map;

        $r2 = new org.jaxen.SimpleNamespaceContext;

        specialinvoke $r2.<org.jaxen.SimpleNamespaceContext: void <init>(java.util.Map)>($r1);

        $r3 = (org.jaxen.NamespaceContext) $r2;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNamespaceContext(org.jaxen.NamespaceContext)>($r3);

        return;
    }

    public void setVariableContext(org.jaxen.VariableContext)
    {
        org.jaxen.VariableContext $r1;
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: org.jaxen.VariableContext;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        interfaceinvoke $r2.<org.jaxen.XPath: void setVariableContext(org.jaxen.VariableContext)>($r1);

        return;
    }

    public void sort(java.util.List)
    {
        java.util.List $r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: java.util.List;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void sort(java.util.List,boolean)>($r1, 0);

        return;
    }

    public void sort(java.util.List, java.util.Map)
    {
        java.util.List $r1;
        org.dom4j.xpath.DefaultXPath$1 $r3;
        org.dom4j.xpath.DefaultXPath r0;
        java.util.Map $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.Map;

        $r3 = new org.dom4j.xpath.DefaultXPath$1;

        specialinvoke $r3.<org.dom4j.xpath.DefaultXPath$1: void <init>(org.dom4j.xpath.DefaultXPath,java.util.Map)>(r0, $r2);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r3);

        return;
    }

    public void sort(java.util.List, boolean)
    {
        org.dom4j.Node $r4;
        java.util.HashMap $r2;
        java.util.List $r1;
        org.dom4j.xpath.DefaultXPath r0;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        if $r1 == null goto label4;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void sort(java.util.List,java.util.Map)>($r1, $r2);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void removeDuplicates(java.util.List,java.util.Map)>($r1, $r2);

        return;

     label2:
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $z1 = $r3 instanceof org.dom4j.Node;

        if $z1 == 0 goto label3;

        $r4 = (org.dom4j.Node) $r3;

        $r3 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.lang.Object getCompareValue(org.dom4j.Node)>($r4);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.StringBuilder $r2;
        org.jaxen.XPath $r3;
        java.lang.String $r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("[XPath: ");

        $r3 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String valueOf(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r5;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.XPath $r1;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r3 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>($r3);

     label2:
        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

     label3:
        $r2 = interfaceinvoke $r1.<org.jaxen.XPath: java.lang.String stringValueOf(java.lang.Object)>($r3);

     label4:
        return $r2;

     label5:
        $r4 := @caughtexception;

        $r5 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r5);

        return "";

        catch org.jaxen.JaxenException from label1 to label2 with label5;
        catch org.jaxen.JaxenException from label3 to label4 with label5;
    }
}
