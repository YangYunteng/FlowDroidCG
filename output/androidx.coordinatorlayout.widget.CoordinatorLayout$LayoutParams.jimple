public class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams extends android.view.ViewGroup$MarginLayoutParams
{
    public int anchorGravity;
    public int dodgeInsetEdges;
    public int gravity;
    public int insetEdge;
    public int keyline;
    public android.view.View mAnchorDirectChild;
    public int mAnchorId;
    public android.view.View mAnchorView;
    public androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior;
    public boolean mBehaviorResolved;
    public java.lang.Object mBehaviorTag;
    public boolean mDidAcceptNestedScrollNonTouch;
    public boolean mDidAcceptNestedScrollTouch;
    public boolean mDidBlockInteraction;
    public boolean mDidChangeAfterNestedScroll;
    public int mInsetOffsetX;
    public int mInsetOffsetY;
    public final android.graphics.Rect mLastChildRect;

    public void <init>(int, int)
    {
        android.graphics.Rect $r1;
        int $i0, $i1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>($i0, $i1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity> = 0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline> = $i0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges> = 0;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        android.graphics.Rect $r7;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r6;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r1;
        int[] $r3;
        int $i0, $i1;
        java.lang.String $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r2, $r1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity> = 0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline> = $i0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges> = 0;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect> = $r7;

        $r3 = <b.h.c: int[] CoordinatorLayout_Layout>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r1, $r3);

        $i0 = <b.h.c: int CoordinatorLayout_Layout_android_layout_gravity>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>($i0, 0);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity> = $i0;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_anchor>;

        $i1 = -1;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, $i1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_anchorGravity>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>($i0, 0);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity> = $i0;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_keyline>;

        $i1 = -1;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>($i0, $i1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline> = $i0;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_insetEdge>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge> = $i0;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_dodgeInsetEdges>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges> = $i0;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_behavior>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = $z0;

        $z0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved>;

        if $z0 == 0 goto label1;

        $i0 = <b.h.c: int CoordinatorLayout_Layout_layout_behavior>;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $r6 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$b parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)>($r2, $r1, $r5);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior> = $r6;

     label1:
        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r6 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior>;

        if $r6 == null goto label2;

        virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)>(r0);

     label2:
        return;
    }

    public void <init>(android.view.ViewGroup$LayoutParams)
    {
        android.graphics.Rect $r2;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity> = 0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline> = $i0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect> = $r2;

        return;
    }

    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    {
        android.graphics.Rect $r2;
        android.view.ViewGroup$MarginLayoutParams $r1;
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity> = 0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline> = $i0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect> = $r2;

        return;
    }

    public void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
    {
        android.graphics.Rect $r2;
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0, $r1;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r1);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity> = 0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline> = $i0;

        $i0 = -1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge> = 0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect> = $r2;

        return;
    }

    private void resolveAnchorView(android.view.View, androidx.coordinatorlayout.widget.CoordinatorLayout)
    {
        java.lang.IllegalStateException $r4;
        android.view.ViewParent $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        int $i0;
        android.view.View $r1, $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r8;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;
        android.content.res.Resources $r7;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View findViewById(int)>($i0);

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = $r3;

        $r3 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r3 == null goto label08;

        if $r3 != $r2 goto label02;

        $z0 = virtualinvoke $r2.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 == 0 goto label01;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = null;

        return;

     label01:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("View can not be anchored to the the parent CoordinatorLayout");

        throw $r4;

     label02:
        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

     label03:
        if $r5 == $r2 goto label07;

        if $r5 == null goto label07;

        if $r5 != $r1 goto label05;

        $z0 = virtualinvoke $r2.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 == 0 goto label04;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = null;

        return;

     label04:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Anchor must not be a descendant of the anchored view");

        throw $r4;

     label05:
        $z0 = $r5 instanceof android.view.View;

        if $z0 == 0 goto label06;

        $r3 = (android.view.View) $r5;

     label06:
        $r5 = interfaceinvoke $r5.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label03;

     label07:
        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = $r3;

        return;

     label08:
        $z0 = virtualinvoke $r2.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 == 0 goto label09;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = null;

        return;

     label09:
        $r4 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find CoordinatorLayout descendant view with id ");

        $r7 = virtualinvoke $r2.<android.view.ViewGroup: android.content.res.Resources getResources()>();

        $i0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId>;

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to anchor view ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        goto label10;

     label10:
        throw $r4;
    }

    private boolean shouldDodge(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0, $r3;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $i2 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge>;

        $i2 = staticinvoke <b.i.i.c: int a(int,int)>($i2, $i1);

        if $i2 == 0 goto label1;

        $i0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges>;

        $i1 = staticinvoke <b.i.i.c: int a(int,int)>($i0, $i1);

        $i1 = $i1 & $i2;

        if $i1 != $i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean verifyAnchorView(android.view.View, androidx.coordinatorlayout.widget.CoordinatorLayout)
    {
        android.view.ViewParent $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int $i0, $i1;
        android.view.View $r2, $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        $i0 = virtualinvoke $r3.<android.view.View: int getId()>();

        $i1 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId>;

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r3 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

     label2:
        if $r4 == $r1 goto label6;

        if $r4 == null goto label5;

        if $r4 != $r2 goto label3;

        goto label5;

     label3:
        $z0 = $r4 instanceof android.view.View;

        if $z0 == 0 goto label4;

        $r3 = (android.view.View) $r4;

     label4:
        $r4 = interfaceinvoke $r4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label5:
        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = null;

        return 0;

     label6:
        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = $r3;

        return 1;
    }

    public boolean checkAnchorChanged()
    {
        int $i0, $i1;
        android.view.View $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r1 != null goto label1;

        $i0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId>;

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r5;
        int $i0;
        android.view.View $r1, $r2, $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $r4 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild>;

        if $r2 == $r4 goto label2;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>($r3);

        $z0 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean shouldDodge(android.view.View,int)>($r2, $i0);

        if $z0 != 0 goto label2;

        $r5 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior>;

        if $r5 == null goto label1;

        $z0 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r3, $r1, $r2);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean didBlockInteraction()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior>;

        if $r1 != null goto label1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidBlockInteraction> = 0;

     label1:
        z0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidBlockInteraction>;

        return z0;
    }

    public android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        int $i0, $i1;
        android.view.View $r1, $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $i0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId>;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = null;

        return null;

     label1:
        $r3 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r3 == null goto label2;

        $z0 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)>($r1, $r2);

        if $z0 != 0 goto label3;

     label2:
        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)>($r1, $r2);

     label3:
        $r1 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        return $r1;
    }

    public int getAnchorId()
    {
        int i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        i0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId>;

        return i0;
    }

    public androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$b r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        r1 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior>;

        return r1;
    }

    public boolean getChangedAfterNestedScroll()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        z0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidChangeAfterNestedScroll>;

        return z0;
    }

    public android.graphics.Rect getLastChildRect()
    {
        android.graphics.Rect r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        r1 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect>;

        return r1;
    }

    public void invalidateAnchor()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView> = null;

        return;
    }

    public boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r2;
        android.view.View $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0, $z1;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $z0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidBlockInteraction>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior>;

        if $r2 == null goto label2;

        $z1 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r3, $r1);

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $z0 = $z1 | $z0;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidBlockInteraction> = $z0;

        return $z0;
    }

    public boolean isNestedScrollAccepted(int)
    {
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        return 0;

     label1:
        z0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidAcceptNestedScrollNonTouch>;

        return z0;

     label2:
        z0 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidAcceptNestedScrollTouch>;

        return z0;
    }

    public void resetChangedAfterNestedScroll()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidChangeAfterNestedScroll> = 0;

        return;
    }

    public void resetNestedScroll(int)
    {
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $i0 := @parameter0: int;

        virtualinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setNestedScrollAccepted(int,boolean)>($i0, 0);

        return;
    }

    public void resetTouchBehaviorTracking()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidBlockInteraction> = 0;

        return;
    }

    public void setAnchorId(int)
    {
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $i0 := @parameter0: int;

        virtualinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void invalidateAnchor()>();

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mAnchorId> = $i0;

        return;
    }

    public void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$b)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r1, $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout$b;

        $r2 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior>;

        if $r2 == $r1 goto label2;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onDetachedFromLayoutParams()>();

     label1:
        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b mBehavior> = $r1;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: java.lang.Object mBehaviorTag> = null;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 1;

        if $r1 == null goto label2;

        virtualinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)>(r0);

     label2:
        return;
    }

    public void setChangedAfterNestedScroll(boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $z0 := @parameter0: boolean;

        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidChangeAfterNestedScroll> = $z0;

        return;
    }

    public void setLastChildRect(android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect mLastChildRect>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        return;
    }

    public void setNestedScrollAccepted(int, boolean)
    {
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0;
        boolean $z0;

        r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        return;

     label1:
        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidAcceptNestedScrollNonTouch> = $z0;

        return;

     label2:
        r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mDidAcceptNestedScrollTouch> = $z0;

        return;
    }
}
