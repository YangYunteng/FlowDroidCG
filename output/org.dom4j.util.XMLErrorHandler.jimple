public class org.dom4j.util.XMLErrorHandler extends java.lang.Object implements org.xml.sax.ErrorHandler
{
    public static final org.dom4j.QName ERROR_QNAME;
    public static final org.dom4j.QName FATALERROR_QNAME;
    public static final org.dom4j.QName WARNING_QNAME;
    public org.dom4j.QName errorQName;
    public org.dom4j.Element errors;
    public org.dom4j.QName fatalErrorQName;
    public org.dom4j.QName warningQName;

    static void <clinit>()
    {
        org.dom4j.QName $r0;

        $r0 = staticinvoke <org.dom4j.QName: org.dom4j.QName get(java.lang.String)>("error");

        <org.dom4j.util.XMLErrorHandler: org.dom4j.QName ERROR_QNAME> = $r0;

        $r0 = staticinvoke <org.dom4j.QName: org.dom4j.QName get(java.lang.String)>("fatalError");

        <org.dom4j.util.XMLErrorHandler: org.dom4j.QName FATALERROR_QNAME> = $r0;

        $r0 = staticinvoke <org.dom4j.QName: org.dom4j.QName get(java.lang.String)>("warning");

        <org.dom4j.util.XMLErrorHandler: org.dom4j.QName WARNING_QNAME> = $r0;

        return;
    }

    public void <init>()
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.Element $r1;
        org.dom4j.QName $r2;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <org.dom4j.util.XMLErrorHandler: org.dom4j.QName ERROR_QNAME>;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName errorQName> = $r2;

        $r2 = <org.dom4j.util.XMLErrorHandler: org.dom4j.QName FATALERROR_QNAME>;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName fatalErrorQName> = $r2;

        $r2 = <org.dom4j.util.XMLErrorHandler: org.dom4j.QName WARNING_QNAME>;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName warningQName> = $r2;

        $r1 = staticinvoke <org.dom4j.DocumentHelper: org.dom4j.Element createElement(java.lang.String)>("errors");

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors> = $r1;

        return;
    }

    public void <init>(org.dom4j.Element)
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.Element $r1;
        org.dom4j.QName $r2;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.dom4j.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <org.dom4j.util.XMLErrorHandler: org.dom4j.QName ERROR_QNAME>;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName errorQName> = $r2;

        $r2 = <org.dom4j.util.XMLErrorHandler: org.dom4j.QName FATALERROR_QNAME>;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName fatalErrorQName> = $r2;

        $r2 = <org.dom4j.util.XMLErrorHandler: org.dom4j.QName WARNING_QNAME>;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName warningQName> = $r2;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors> = $r1;

        return;
    }

    public void addException(org.dom4j.Element, org.xml.sax.SAXParseException)
    {
        org.xml.sax.SAXParseException $r2;
        int $i0;
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.Element $r1;
        java.lang.String $r3;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 := @parameter1: org.xml.sax.SAXParseException;

        $i0 = virtualinvoke $r2.<org.xml.sax.SAXParseException: int getColumnNumber()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("column", $r3);

        $i0 = virtualinvoke $r2.<org.xml.sax.SAXParseException: int getLineNumber()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("line", $r3);

        $r3 = virtualinvoke $r2.<org.xml.sax.SAXParseException: java.lang.String getPublicId()>();

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("publicID", $r3);

     label1:
        $r3 = virtualinvoke $r2.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("systemID", $r3);

     label2:
        $r3 = virtualinvoke $r2.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element addText(java.lang.String)>($r3);

        return;
    }

    public void error(org.xml.sax.SAXParseException)
    {
        org.xml.sax.SAXParseException $r1;
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName $r2;
        org.dom4j.Element $r3;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.xml.sax.SAXParseException;

        $r3 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors>;

        $r2 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName errorQName>;

        $r3 = interfaceinvoke $r3.<org.dom4j.Branch: org.dom4j.Element addElement(org.dom4j.QName)>($r2);

        virtualinvoke r0.<org.dom4j.util.XMLErrorHandler: void addException(org.dom4j.Element,org.xml.sax.SAXParseException)>($r3, $r1);

        return;
    }

    public void fatalError(org.xml.sax.SAXParseException)
    {
        org.xml.sax.SAXParseException $r1;
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName $r2;
        org.dom4j.Element $r3;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.xml.sax.SAXParseException;

        $r3 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors>;

        $r2 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName fatalErrorQName>;

        $r3 = interfaceinvoke $r3.<org.dom4j.Branch: org.dom4j.Element addElement(org.dom4j.QName)>($r2);

        virtualinvoke r0.<org.dom4j.util.XMLErrorHandler: void addException(org.dom4j.Element,org.xml.sax.SAXParseException)>($r3, $r1);

        return;
    }

    public org.dom4j.QName getErrorQName()
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        r1 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName errorQName>;

        return r1;
    }

    public org.dom4j.Element getErrors()
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.Element r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        r1 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors>;

        return r1;
    }

    public org.dom4j.QName getFatalErrorQName()
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        r1 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName fatalErrorQName>;

        return r1;
    }

    public org.dom4j.QName getWarningQName()
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        r1 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName warningQName>;

        return r1;
    }

    public void setErrorQName(org.dom4j.QName)
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.dom4j.QName;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName errorQName> = $r1;

        return;
    }

    public void setErrors(org.dom4j.Element)
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.Element $r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.dom4j.Element;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors> = $r1;

        return;
    }

    public void setFatalErrorQName(org.dom4j.QName)
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.dom4j.QName;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName fatalErrorQName> = $r1;

        return;
    }

    public void setWarningQName(org.dom4j.QName)
    {
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.dom4j.QName;

        r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName warningQName> = $r1;

        return;
    }

    public void warning(org.xml.sax.SAXParseException)
    {
        org.xml.sax.SAXParseException $r1;
        org.dom4j.util.XMLErrorHandler r0;
        org.dom4j.QName $r2;
        org.dom4j.Element $r3;

        r0 := @this: org.dom4j.util.XMLErrorHandler;

        $r1 := @parameter0: org.xml.sax.SAXParseException;

        $r3 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.Element errors>;

        $r2 = r0.<org.dom4j.util.XMLErrorHandler: org.dom4j.QName warningQName>;

        $r3 = interfaceinvoke $r3.<org.dom4j.Branch: org.dom4j.Element addElement(org.dom4j.QName)>($r2);

        virtualinvoke r0.<org.dom4j.util.XMLErrorHandler: void addException(org.dom4j.Element,org.xml.sax.SAXParseException)>($r3, $r1);

        return;
    }
}
