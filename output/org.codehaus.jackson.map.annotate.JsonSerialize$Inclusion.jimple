public final enum class org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion extends java.lang.Enum
{
    public static final org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES;
    public static final enum org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS;
    public static final enum org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT;
    public static final enum org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL;

    static void <clinit>()
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $r1;

        $r0 = new org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        specialinvoke $r0.<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: void <init>(java.lang.String,int)>("ALWAYS", 0);

        <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS> = $r0;

        $r0 = new org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        specialinvoke $r0.<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: void <init>(java.lang.String,int)>("NON_NULL", 1);

        <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL> = $r0;

        $r0 = new org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        specialinvoke $r0.<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: void <init>(java.lang.String,int)>("NON_DEFAULT", 2);

        <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)[3];

        $r0 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL>;

        $r1[1] = $r0;

        $r0 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT>;

        $r1[2] = $r0;

        <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion valueOf(java.lang.String)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r2;
        java.lang.String $r1;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;", $r1);

        $r2 = (org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] values()
    {
        java.lang.Object $r0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $r1;

        $r1 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[]) $r0;

        return $r1;
    }
}
