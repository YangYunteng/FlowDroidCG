public class com.google.common.collect.LinkedHashMultimap$ValueSet$1 extends java.lang.Object implements java.util.Iterator
{
    public int expectedModCount;
    public com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry;
    public final com.google.common.collect.LinkedHashMultimap$ValueSet this$1;
    public com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove;

    public void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r2;
        int $i0;
        com.google.common.collect.LinkedHashMultimap$ValueSet$1 r0;
        com.google.common.collect.LinkedHashMultimap$ValueSet $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet$1;

        $r1 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSet;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1>;

        $r2 = staticinvoke <com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet)>($r1);

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry> = $r2;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1>;

        $i0 = staticinvoke <com.google.common.collect.LinkedHashMultimap$ValueSet: int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet)>($r1);

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: int expectedModCount> = $i0;

        return;
    }

    private void checkForComodification()
    {
        int $i0, $i1;
        com.google.common.collect.LinkedHashMultimap$ValueSet$1 r0;
        com.google.common.collect.LinkedHashMultimap$ValueSet $r1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet$1;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1>;

        $i1 = staticinvoke <com.google.common.collect.LinkedHashMultimap$ValueSet: int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet)>($r1);

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: int expectedModCount>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;
    }

    public boolean hasNext()
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet$1 r0;
        com.google.common.collect.LinkedHashMultimap$ValueSet $r1;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r2;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet$1;

        specialinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: void checkForComodification()>();

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry>;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r2;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r1;
        com.google.common.collect.LinkedHashMultimap$ValueSet$1 r0;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet$1;

        $z0 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry>;

        $r2 = (com.google.common.collect.LinkedHashMultimap$ValueEntry) $r1;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>();

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove> = $r2;

        $r1 = virtualinvoke $r2.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet()>();

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry> = $r1;

        return $r3;

     label1:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;
    }

    public void remove()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1;
        int $i0;
        com.google.common.collect.LinkedHashMultimap$ValueSet$1 r0;
        java.lang.Object $r3;
        com.google.common.collect.LinkedHashMultimap$ValueSet $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet$1;

        specialinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: void checkForComodification()>();

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>($z0);

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1>;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove>;

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>();

        virtualinvoke $r2.<com.google.common.collect.LinkedHashMultimap$ValueSet: boolean remove(java.lang.Object)>($r3);

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueSet this$1>;

        $i0 = staticinvoke <com.google.common.collect.LinkedHashMultimap$ValueSet: int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet)>($r2);

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: int expectedModCount> = $i0;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove> = null;

        return;
    }
}
