public final class com.google.common.base.Converter$FunctionBasedConverter extends com.google.common.base.Converter implements java.io.Serializable
{
    public final com.google.common.base.Function backwardFunction;
    public final com.google.common.base.Function forwardFunction;

    public void <init>(com.google.common.base.Function, com.google.common.base.Function)
    {
        com.google.common.base.Function $r1, $r2;
        com.google.common.base.Converter$FunctionBasedConverter r0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r1 := @parameter0: com.google.common.base.Function;

        $r2 := @parameter1: com.google.common.base.Function;

        specialinvoke r0.<com.google.common.base.Converter: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function forwardFunction> = $r1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r1 = $r2;

        r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function backwardFunction> = $r1;

        return;
    }

    public void <init>(com.google.common.base.Function, com.google.common.base.Function, com.google.common.base.Converter$1)
    {
        com.google.common.base.Converter$1 $r3;
        com.google.common.base.Function $r1, $r2;
        com.google.common.base.Converter$FunctionBasedConverter r0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r1 := @parameter0: com.google.common.base.Function;

        $r2 := @parameter1: com.google.common.base.Function;

        $r3 := @parameter2: com.google.common.base.Converter$1;

        specialinvoke r0.<com.google.common.base.Converter$FunctionBasedConverter: void <init>(com.google.common.base.Function,com.google.common.base.Function)>($r1, $r2);

        return;
    }

    public java.lang.Object doBackward(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.base.Function $r1;
        com.google.common.base.Converter$FunctionBasedConverter r0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function backwardFunction>;

        $r2 = interfaceinvoke $r1.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r2);

        return $r2;
    }

    public java.lang.Object doForward(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.base.Function $r1;
        com.google.common.base.Converter$FunctionBasedConverter r0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function forwardFunction>;

        $r2 = interfaceinvoke $r1.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r2);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.base.Function $r1, $r4;
        java.lang.Object $r2;
        com.google.common.base.Converter$FunctionBasedConverter r0, $r3;
        boolean $z0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof com.google.common.base.Converter$FunctionBasedConverter;

        if $z0 == 0 goto label1;

        $r3 = (com.google.common.base.Converter$FunctionBasedConverter) $r2;

        $r4 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function forwardFunction>;

        $r1 = $r3.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function forwardFunction>;

        $z0 = interfaceinvoke $r4.<com.google.common.base.Function: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function backwardFunction>;

        $r4 = $r3.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function backwardFunction>;

        $z0 = interfaceinvoke $r1.<com.google.common.base.Function: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.base.Function $r1;
        int $i0, $i1;
        com.google.common.base.Converter$FunctionBasedConverter r0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r1 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function forwardFunction>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 * 31;

        $r1 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function backwardFunction>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.Function $r3;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        com.google.common.base.Converter$FunctionBasedConverter r0;

        r0 := @this: com.google.common.base.Converter$FunctionBasedConverter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converter.from(");

        $r3 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function forwardFunction>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = r0.<com.google.common.base.Converter$FunctionBasedConverter: com.google.common.base.Function backwardFunction>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
