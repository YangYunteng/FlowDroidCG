public class org.dom4j.util.SimpleSingleton extends java.lang.Object implements org.dom4j.util.SingletonStrategy
{
    public java.lang.String singletonClassName;
    public java.lang.Object singletonInstance;

    public void <init>()
    {
        org.dom4j.util.SimpleSingleton r0;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName> = null;

        r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance> = null;

        return;
    }

    public java.lang.Object instance()
    {
        java.lang.Object r1;
        org.dom4j.util.SimpleSingleton r0;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        r1 = r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance>;

        return r1;
    }

    public void reset()
    {
        java.lang.Exception $r2, $r3;
        org.dom4j.util.SimpleSingleton r0;
        java.lang.Thread $r4;
        java.lang.Class $r6;
        java.lang.Object $r7;
        java.lang.String $r1;
        java.lang.ClassLoader $r5;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        $r1 = r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName>;

        if $r1 == null goto label7;

     label1:
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r1 = r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName>;

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

        r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance> = $r7;

     label2:
        return;

     label3:
        $r1 = r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName>;

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

        r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance> = $r7;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

     label6:
        $r3 := @caughtexception;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public void setSingletonClassName(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.util.SimpleSingleton r0;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        $r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName> = $r1;

        virtualinvoke r0.<org.dom4j.util.SimpleSingleton: void reset()>();

        return;
    }
}
