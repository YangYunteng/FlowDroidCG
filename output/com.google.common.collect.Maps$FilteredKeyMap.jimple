public class com.google.common.collect.Maps$FilteredKeyMap extends com.google.common.collect.Maps$AbstractFilteredMap
{
    public final com.google.common.base.Predicate keyPredicate;

    public void <init>(java.util.Map, com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        com.google.common.collect.Maps$FilteredKeyMap r0;
        com.google.common.base.Predicate $r2, $r3;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$FilteredKeyMap;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.google.common.base.Predicate;

        $r3 := @parameter2: com.google.common.base.Predicate;

        specialinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: void <init>(java.util.Map,com.google.common.base.Predicate)>($r1, $r3);

        r0.<com.google.common.collect.Maps$FilteredKeyMap: com.google.common.base.Predicate keyPredicate> = $r2;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.Maps$FilteredKeyMap r0;
        com.google.common.base.Predicate $r3;
        java.util.Map $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$FilteredKeyMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.Maps$FilteredKeyMap: com.google.common.base.Predicate keyPredicate>;

        $z0 = interfaceinvoke $r3.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Set createEntrySet()
    {
        com.google.common.collect.Maps$FilteredKeyMap r0;
        com.google.common.base.Predicate $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.Maps$FilteredKeyMap;

        $r2 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r1 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: com.google.common.base.Predicate predicate>;

        $r3 = staticinvoke <com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>($r3, $r1);

        return $r3;
    }

    public java.util.Set createKeySet()
    {
        com.google.common.collect.Maps$FilteredKeyMap r0;
        com.google.common.base.Predicate $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.Maps$FilteredKeyMap;

        $r2 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r1 = r0.<com.google.common.collect.Maps$FilteredKeyMap: com.google.common.base.Predicate keyPredicate>;

        $r3 = staticinvoke <com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>($r3, $r1);

        return $r3;
    }
}
