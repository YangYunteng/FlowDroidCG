public final class com.google.common.collect.Maps$FilteredMapValues extends com.google.common.collect.Maps$Values
{
    public final com.google.common.base.Predicate predicate;
    public final java.util.Map unfiltered;

    public void <init>(java.util.Map, java.util.Map, com.google.common.base.Predicate)
    {
        com.google.common.base.Predicate $r3;
        com.google.common.collect.Maps$FilteredMapValues r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.google.common.collect.Maps$FilteredMapValues;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: com.google.common.base.Predicate;

        specialinvoke r0.<com.google.common.collect.Maps$Values: void <init>(java.util.Map)>($r1);

        r0.<com.google.common.collect.Maps$FilteredMapValues: java.util.Map unfiltered> = $r2;

        r0.<com.google.common.collect.Maps$FilteredMapValues: com.google.common.base.Predicate predicate> = $r3;

        return;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.google.common.collect.Maps$FilteredMapValues r0;
        java.util.Set $r3;
        com.google.common.base.Predicate $r7;
        java.util.Map $r2;
        java.lang.Object $r1, $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$FilteredMapValues;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Maps$FilteredMapValues: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<com.google.common.collect.Maps$FilteredMapValues: com.google.common.base.Predicate predicate>;

        $z0 = interfaceinvoke $r7.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r1);

        if $z0 == 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        return 1;

     label2:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.google.common.collect.Maps$FilteredMapValues r0;
        java.util.Collection $r1;
        java.util.Set $r3;
        com.google.common.base.Predicate $r7;
        java.util.Map $r2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.Maps$FilteredMapValues;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.google.common.collect.Maps$FilteredMapValues: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<com.google.common.collect.Maps$FilteredMapValues: com.google.common.base.Predicate predicate>;

        $z1 = interfaceinvoke $r7.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.google.common.collect.Maps$FilteredMapValues r0;
        java.util.Collection $r1;
        java.util.Set $r3;
        com.google.common.base.Predicate $r7;
        java.util.Map $r2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.Maps$FilteredMapValues;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.google.common.collect.Maps$FilteredMapValues: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<com.google.common.collect.Maps$FilteredMapValues: com.google.common.base.Predicate predicate>;

        $z1 = interfaceinvoke $r7.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r5);

        if $z1 != 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r3;
        java.util.Iterator $r1;
        com.google.common.collect.Maps$FilteredMapValues r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.common.collect.Maps$FilteredMapValues;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>();

        $r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r1);

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray()>();

        return $r3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        java.util.Iterator $r2;
        com.google.common.collect.Maps$FilteredMapValues r0;
        java.util.ArrayList $r3;

        r0 := @this: com.google.common.collect.Maps$FilteredMapValues;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r2);

        $r1 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;
    }
}
