public final class com.google.common.base.Present extends com.google.common.base.Optional
{
    public static final long serialVersionUID;
    public final java.lang.Object reference;

    public void <init>(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.google.common.base.Optional: void <init>()>();

        r0.<com.google.common.base.Present: java.lang.Object reference> = $r1;

        return;
    }

    public java.util.Set asSet()
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        $r2 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1, $r3;
        com.google.common.base.Present r0, $r2;
        boolean $z0;

        r0 := @this: com.google.common.base.Present;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.base.Present;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.base.Present) $r1;

        $r1 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        $r3 = $r2.<com.google.common.base.Present: java.lang.Object reference>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z0;

     label1:
        return 0;
    }

    public java.lang.Object get()
    {
        java.lang.Object r1;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        r1 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        return r1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        $r1 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + 1502476572;

        return $i0;
    }

    public boolean isPresent()
    {
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        return 1;
    }

    public com.google.common.base.Optional or(com.google.common.base.Optional)
    {
        com.google.common.base.Present r0;
        com.google.common.base.Optional $r1;

        r0 := @this: com.google.common.base.Present;

        $r1 := @parameter0: com.google.common.base.Optional;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return r0;
    }

    public java.lang.Object or(com.google.common.base.Supplier)
    {
        com.google.common.base.Supplier $r1;
        java.lang.Object r2;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        $r1 := @parameter0: com.google.common.base.Supplier;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r2 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        return r2;
    }

    public java.lang.Object or(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "use Optional.orNull() instead of Optional.or(null)");

        $r1 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        return $r1;
    }

    public java.lang.Object orNull()
    {
        java.lang.Object r1;
        com.google.common.base.Present r0;

        r0 := @this: com.google.common.base.Present;

        r1 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        return r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        com.google.common.base.Present r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.Present;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Optional.of(");

        $r3 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public com.google.common.base.Optional transform(com.google.common.base.Function)
    {
        com.google.common.base.Function $r3;
        java.lang.Object $r2;
        com.google.common.base.Present r0, $r1;

        r0 := @this: com.google.common.base.Present;

        $r3 := @parameter0: com.google.common.base.Function;

        $r1 = new com.google.common.base.Present;

        $r2 = r0.<com.google.common.base.Present: java.lang.Object reference>;

        $r2 = interfaceinvoke $r3.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "the Function passed to Optional.transform() must not return null.");

        specialinvoke $r1.<com.google.common.base.Present: void <init>(java.lang.Object)>($r2);

        return $r1;
    }
}
