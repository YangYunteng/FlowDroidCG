public final class com.google.common.io.Closer$LoggingSuppressor extends java.lang.Object implements com.google.common.io.Closer$Suppressor
{
    public static final com.google.common.io.Closer$LoggingSuppressor INSTANCE;

    static void <clinit>()
    {
        com.google.common.io.Closer$LoggingSuppressor $r0;

        $r0 = new com.google.common.io.Closer$LoggingSuppressor;

        specialinvoke $r0.<com.google.common.io.Closer$LoggingSuppressor: void <init>()>();

        <com.google.common.io.Closer$LoggingSuppressor: com.google.common.io.Closer$LoggingSuppressor INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.common.io.Closer$LoggingSuppressor r0;

        r0 := @this: com.google.common.io.Closer$LoggingSuppressor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void suppress(java.io.Closeable, java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable $r1, $r6;
        com.google.common.io.Closer$LoggingSuppressor r0;
        java.util.logging.Logger $r7;
        java.util.logging.Level $r2;
        java.io.Closeable $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.google.common.io.Closer$LoggingSuppressor;

        $r5 := @parameter0: java.io.Closeable;

        $r6 := @parameter1: java.lang.Throwable;

        $r1 := @parameter2: java.lang.Throwable;

        $r7 = <com.google.common.io.Closeables: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suppressing exception thrown when closing ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, $r1);

        return;
    }
}
