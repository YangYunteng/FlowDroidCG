public final class com.google.common.hash.SipHashFunction$SipHasher extends com.google.common.hash.AbstractStreamingHasher
{
    public static final int CHUNK_SIZE;
    public long b;
    public final int c;
    public final int d;
    public long finalM;
    public long v0;
    public long v1;
    public long v2;
    public long v3;

    public void <init>(int, int, long, long)
    {
        int $i0, $i3;
        com.google.common.hash.SipHashFunction$SipHasher r0;
        long $l1, $l2, $l4;

        r0 := @this: com.google.common.hash.SipHashFunction$SipHasher;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $l2 := @parameter3: long;

        specialinvoke r0.<com.google.common.hash.AbstractStreamingHasher: void <init>(int)>(8);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0> = 8317987319222330741L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1> = 7237128888997146477L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2> = 7816392313619706465L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = 8387220255154660723L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long b> = 0L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long finalM> = 0L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: int c> = $i3;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: int d> = $i0;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l4 = $l4 ^ $l1;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0> = $l4;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1>;

        $l4 = $l4 ^ $l2;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1> = $l4;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l1 = $l4 ^ $l1;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2> = $l1;

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l1 = $l1 ^ $l2;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = $l1;

        return;
    }

    private void processM(long)
    {
        int $i2;
        com.google.common.hash.SipHashFunction$SipHasher r0;
        long $l0, $l1;

        r0 := @this: com.google.common.hash.SipHashFunction$SipHasher;

        $l0 := @parameter0: long;

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l1 = $l1 ^ $l0;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = $l1;

        $i2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: int c>;

        specialinvoke r0.<com.google.common.hash.SipHashFunction$SipHasher: void sipRound(int)>($i2);

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l0 = $l0 ^ $l1;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0> = $l0;

        return;
    }

    private void sipRound(int)
    {
        int $i0, $i1;
        com.google.common.hash.SipHashFunction$SipHasher r0;
        long $l2, $l3, $l4;

        r0 := @this: com.google.common.hash.SipHashFunction$SipHasher;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l3 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1>;

        $l2 = $l2 + $l3;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0> = $l2;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l2 = $l2 + $l4;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2> = $l2;

        $l3 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l3, 13);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1> = $l3;

        $l3 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l3 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l3, 16);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = $l3;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1>;

        $l3 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l2 = $l2 ^ $l3;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1> = $l2;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l2 = $l2 ^ $l4;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = $l2;

        $l3 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l3, 32);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0> = $l3;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l3 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1>;

        $l2 = $l2 + $l3;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2> = $l2;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l2 = $l2 + $l4;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0> = $l2;

        $l3 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l3, 17);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1> = $l3;

        $l3 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l3 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l3, 21);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = $l3;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1>;

        $l3 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l2 = $l2 ^ $l3;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1> = $l2;

        $l2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l4 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l2 = $l2 ^ $l4;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3> = $l2;

        $l3 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l3, 32);

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2> = $l3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public com.google.common.hash.HashCode makeHash()
    {
        com.google.common.hash.HashCode $r1;
        int $i2;
        com.google.common.hash.SipHashFunction$SipHasher r0;
        long $l0, $l1;

        r0 := @this: com.google.common.hash.SipHashFunction$SipHasher;

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long finalM>;

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long b>;

        $l1 = $l1 << 56;

        $l0 = $l0 ^ $l1;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long finalM> = $l0;

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long finalM>;

        specialinvoke r0.<com.google.common.hash.SipHashFunction$SipHasher: void processM(long)>($l0);

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l0 = $l0 ^ 255L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2> = $l0;

        $i2 = r0.<com.google.common.hash.SipHashFunction$SipHasher: int d>;

        specialinvoke r0.<com.google.common.hash.SipHashFunction$SipHasher: void sipRound(int)>($i2);

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v0>;

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v1>;

        $l0 = $l0 ^ $l1;

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v2>;

        $l0 = $l0 ^ $l1;

        $l1 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long v3>;

        $l0 = $l0 ^ $l1;

        $r1 = staticinvoke <com.google.common.hash.HashCode: com.google.common.hash.HashCode fromLong(long)>($l0);

        return $r1;
    }

    public void process(java.nio.ByteBuffer)
    {
        com.google.common.hash.SipHashFunction$SipHasher r0;
        long $l0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.common.hash.SipHashFunction$SipHasher;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long b>;

        $l0 = $l0 + 8L;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long b> = $l0;

        $l0 = virtualinvoke $r1.<java.nio.ByteBuffer: long getLong()>();

        specialinvoke r0.<com.google.common.hash.SipHashFunction$SipHasher: void processM(long)>($l0);

        return;
    }

    public void processRemaining(java.nio.ByteBuffer)
    {
        byte $b3;
        int $i1;
        com.google.common.hash.SipHashFunction$SipHasher r0;
        long $l0, $l2;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: com.google.common.hash.SipHashFunction$SipHasher;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long b>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long b> = $l0;

        $i1 = 0;

     label1:
        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label2;

        $l0 = r0.<com.google.common.hash.SipHashFunction$SipHasher: long finalM>;

        $b3 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        $l2 = (long) $b3;

        $l2 = $l2 & 255L;

        $l2 = $l2 << $i1;

        $l0 = $l0 ^ $l2;

        r0.<com.google.common.hash.SipHashFunction$SipHasher: long finalM> = $l0;

        $i1 = $i1 + 8;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.google.common.hash.SipHashFunction$SipHasher: int CHUNK_SIZE> = 8;

        return;
    }
}
