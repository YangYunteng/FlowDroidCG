public final class j.a.U extends j.a.X
{
    public static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater e;
    public volatile int _invoked;
    public final i.f.a.l f;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lj/a/U;", "_invoked");

        <j.a.U: java.util.concurrent.atomic.AtomicIntegerFieldUpdater e> = $r0;

        return;
    }

    public void <init>(j.a.W, i.f.a.l)
    {
        j.a.U r0;
        i.f.a.l $r1;
        j.a.W $r2;

        r0 := @this: j.a.U;

        $r2 := @parameter0: j.a.W;

        $r1 := @parameter1: i.f.a.l;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "job");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "handler");

        specialinvoke r0.<j.a.X: void <init>(j.a.W)>($r2);

        r0.<j.a.U: i.f.a.l f> = $r1;

        r0.<j.a.U: int _invoked> = 0;

        return;
    }

    public void b(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r2;
        i.f.a.l $r3;
        j.a.U r0;
        boolean $z0;

        r0 := @this: j.a.U;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = <j.a.U: java.util.concurrent.atomic.AtomicIntegerFieldUpdater e>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(r0, 0, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<j.a.U: i.f.a.l f>;

        interfaceinvoke $r3.<i.f.a.l: java.lang.Object invoke(java.lang.Object)>($r1);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        java.lang.Throwable $r2;
        i.l r3;
        j.a.U r0;
        java.lang.Object $r1;

        r0 := @this: j.a.U;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<j.a.U: void b(java.lang.Throwable)>($r2);

        r3 = <i.l: i.l a>;

        return r3;
    }

    public java.lang.String toString()
    {
        j.a.U r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: j.a.U;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvokeOnCancelling[");

        $r2 = staticinvoke <j.a.A: java.lang.String a(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r2 = staticinvoke <j.a.A: java.lang.String b(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
