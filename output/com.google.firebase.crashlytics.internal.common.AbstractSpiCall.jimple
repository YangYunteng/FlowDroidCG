public abstract class com.google.firebase.crashlytics.internal.common.AbstractSpiCall extends java.lang.Object
{
    public static final java.lang.String ACCEPT_JSON_VALUE;
    public static final java.lang.String ANDROID_CLIENT_TYPE;
    public static final java.lang.String CRASHLYTICS_USER_AGENT;
    public static final java.lang.String HEADER_ACCEPT;
    public static final java.lang.String HEADER_CLIENT_TYPE;
    public static final java.lang.String HEADER_CLIENT_VERSION;
    public static final java.lang.String HEADER_DEVELOPER_TOKEN;
    public static final java.lang.String HEADER_GOOGLE_APP_ID;
    public static final java.lang.String HEADER_ORG_ID;
    public static final java.lang.String HEADER_REQUEST_ID;
    public static final java.lang.String HEADER_USER_AGENT;
    public static final java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN;
    public final com.google.firebase.crashlytics.internal.network.HttpMethod method;
    public final java.lang.String protocolAndHostOverride;
    public final com.google.firebase.crashlytics.internal.network.HttpRequestFactory requestFactory;
    public final java.lang.String url;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_USER_AGENT> = "User-Agent";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_REQUEST_ID> = "X-REQUEST-ID";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_ORG_ID> = "X-CRASHLYTICS-ORG-ID";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_GOOGLE_APP_ID> = "X-CRASHLYTICS-GOOGLE-APP-ID";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_DEVELOPER_TOKEN> = "X-CRASHLYTICS-DEVELOPER-TOKEN";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_CLIENT_VERSION> = "X-CRASHLYTICS-API-CLIENT-VERSION";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_CLIENT_TYPE> = "X-CRASHLYTICS-API-CLIENT-TYPE";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String HEADER_ACCEPT> = "Accept";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String CRASHLYTICS_USER_AGENT> = "Crashlytics Android SDK/";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String ANDROID_CLIENT_TYPE> = "android";

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String ACCEPT_JSON_VALUE> = "application/json";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("http(s?)://[^\\/]+", 2);

        <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, com.google.firebase.crashlytics.internal.network.HttpRequestFactory, com.google.firebase.crashlytics.internal.network.HttpMethod)
    {
        com.google.firebase.crashlytics.internal.common.AbstractSpiCall r0;
        com.google.firebase.crashlytics.internal.network.HttpRequestFactory $r1;
        com.google.firebase.crashlytics.internal.network.HttpMethod $r2;
        java.lang.String $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.google.firebase.crashlytics.internal.common.AbstractSpiCall;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        $r1 := @parameter2: com.google.firebase.crashlytics.internal.network.HttpRequestFactory;

        $r2 := @parameter3: com.google.firebase.crashlytics.internal.network.HttpMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r4 == null goto label2;

        if $r1 == null goto label1;

        r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String protocolAndHostOverride> = $r3;

        $r3 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String overrideProtocolAndHost(java.lang.String)>($r4);

        r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String url> = $r3;

        r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: com.google.firebase.crashlytics.internal.network.HttpRequestFactory requestFactory> = $r1;

        r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: com.google.firebase.crashlytics.internal.network.HttpMethod method> = $r2;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requestFactory must not be null.");

        throw $r5;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url must not be null.");

        throw $r5;
    }

    private java.lang.String overrideProtocolAndHost(java.lang.String)
    {
        java.util.regex.Matcher $r4;
        com.google.firebase.crashlytics.internal.common.AbstractSpiCall r0;
        java.lang.String $r1, $r2;
        java.util.regex.Pattern $r3;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.AbstractSpiCall;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String protocolAndHostOverride>;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean isNullOrEmpty(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r3 = <com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String protocolAndHostOverride>;

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>($r1);

     label1:
        return $r1;
    }

    public com.google.firebase.crashlytics.internal.network.HttpRequest getHttpRequest()
    {
        com.google.firebase.crashlytics.internal.common.AbstractSpiCall r0;
        com.google.firebase.crashlytics.internal.network.HttpRequest $r2;
        java.util.Map $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.AbstractSpiCall;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: com.google.firebase.crashlytics.internal.network.HttpRequest getHttpRequest(java.util.Map)>($r1);

        return $r2;
    }

    public com.google.firebase.crashlytics.internal.network.HttpRequest getHttpRequest(java.util.Map)
    {
        com.google.firebase.crashlytics.internal.common.AbstractSpiCall r0;
        java.util.Map $r1;
        com.google.firebase.crashlytics.internal.network.HttpRequestFactory $r2;
        com.google.firebase.crashlytics.internal.network.HttpMethod $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r4;
        com.google.firebase.crashlytics.internal.network.HttpRequest $r5;

        r0 := @this: com.google.firebase.crashlytics.internal.common.AbstractSpiCall;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: com.google.firebase.crashlytics.internal.network.HttpRequestFactory requestFactory>;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: com.google.firebase.crashlytics.internal.network.HttpMethod method>;

        $r4 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String getUrl()>();

        $r5 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.network.HttpRequestFactory: com.google.firebase.crashlytics.internal.network.HttpRequest buildHttpRequest(com.google.firebase.crashlytics.internal.network.HttpMethod,java.lang.String,java.util.Map)>($r3, $r4, $r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics Android SDK/");

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String getVersion()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<com.google.firebase.crashlytics.internal.network.HttpRequest: com.google.firebase.crashlytics.internal.network.HttpRequest header(java.lang.String,java.lang.String)>("User-Agent", $r4);

        $r5 = virtualinvoke $r5.<com.google.firebase.crashlytics.internal.network.HttpRequest: com.google.firebase.crashlytics.internal.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-DEVELOPER-TOKEN", "470fa2b4ae81cd56ecbcda9735803434cec591fa");

        return $r5;
    }

    public java.lang.String getUrl()
    {
        java.lang.String r1;
        com.google.firebase.crashlytics.internal.common.AbstractSpiCall r0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.AbstractSpiCall;

        r1 = r0.<com.google.firebase.crashlytics.internal.common.AbstractSpiCall: java.lang.String url>;

        return r1;
    }
}
