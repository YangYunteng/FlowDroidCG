public abstract class com.google.common.collect.ForwardingListIterator extends com.google.common.collect.ForwardingIterator implements java.util.ListIterator
{

    public void <init>()
    {
        com.google.common.collect.ForwardingListIterator r0;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        specialinvoke r0.<com.google.common.collect.ForwardingIterator: void <init>()>();

        return;
    }

    public void add(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r2;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        interfaceinvoke $r2.<java.util.ListIterator: void add(java.lang.Object)>($r1);

        return;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r1;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        return $r1;
    }

    public volatile java.util.Iterator delegate()
    {
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r1;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        return $r1;
    }

    public abstract java.util.ListIterator delegate();

    public boolean hasPrevious()
    {
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasPrevious()>();

        return $z0;
    }

    public int nextIndex()
    {
        int $i0;
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r1;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int nextIndex()>();

        return $i0;
    }

    public java.lang.Object previous()
    {
        java.lang.Object $r2;
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r1;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object previous()>();

        return $r2;
    }

    public int previousIndex()
    {
        int $i0;
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r1;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int previousIndex()>();

        return $i0;
    }

    public void set(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ForwardingListIterator r0;
        java.util.ListIterator $r2;

        r0 := @this: com.google.common.collect.ForwardingListIterator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingListIterator: java.util.ListIterator delegate()>();

        interfaceinvoke $r2.<java.util.ListIterator: void set(java.lang.Object)>($r1);

        return;
    }
}
