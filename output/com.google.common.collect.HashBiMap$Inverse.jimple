public final class com.google.common.collect.HashBiMap$Inverse extends com.google.common.collect.Maps$IteratorBasedAbstractMap implements com.google.common.collect.BiMap, java.io.Serializable
{
    public final com.google.common.collect.HashBiMap this$0;

    public void <init>(com.google.common.collect.HashBiMap)
    {
        com.google.common.collect.HashBiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: com.google.common.collect.HashBiMap;

        r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: void <init>()>();

        return;
    }

    public void <init>(com.google.common.collect.HashBiMap, com.google.common.collect.HashBiMap$1)
    {
        com.google.common.collect.HashBiMap$1 $r2;
        com.google.common.collect.HashBiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: com.google.common.collect.HashBiMap;

        $r2 := @parameter1: com.google.common.collect.HashBiMap$1;

        specialinvoke r0.<com.google.common.collect.HashBiMap$Inverse: void <init>(com.google.common.collect.HashBiMap)>($r1);

        return;
    }

    public static void a(java.util.function.BiConsumer, java.lang.Object, java.lang.Object)
    {
        java.util.function.BiConsumer $r0;
        java.lang.Object $r1, $r2;

        $r0 := @parameter0: java.util.function.BiConsumer;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        interfaceinvoke $r0.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>($r2, $r1);

        return;
    }

    public void clear()
    {
        com.google.common.collect.BiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.BiMap forward()>();

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.BiMap $r2;
        java.lang.Object $r1;
        com.google.common.collect.HashBiMap$Inverse r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.BiMap forward()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public java.util.Iterator entryIterator()
    {
        com.google.common.collect.HashBiMap$Inverse r0;
        com.google.common.collect.HashBiMap$Inverse$1 $r1;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = new com.google.common.collect.HashBiMap$Inverse$1;

        specialinvoke $r1.<com.google.common.collect.HashBiMap$Inverse$1: void <init>(com.google.common.collect.HashBiMap$Inverse)>(r0);

        return $r1;
    }

    public void forEach(java.util.function.BiConsumer)
    {
        com.google.common.collect.HashBiMap $r2;
        java.util.function.BiConsumer $r1;
        c.i.b.c.ba $r3;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.util.function.BiConsumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $r3 = new c.i.b.c.ba;

        specialinvoke $r3.<c.i.b.c.ba: void <init>(java.util.function.BiConsumer)>($r1);

        virtualinvoke $r2.<com.google.common.collect.HashBiMap: void forEach(java.util.function.BiConsumer)>($r3);

        return;
    }

    public java.lang.Object forcePut(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $r3 = staticinvoke <com.google.common.collect.HashBiMap: java.lang.Object access$800(com.google.common.collect.HashBiMap,java.lang.Object,java.lang.Object,boolean)>($r2, $r3, $r1, 1);

        return $r3;
    }

    public com.google.common.collect.BiMap forward()
    {
        com.google.common.collect.HashBiMap r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        r1 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        return r1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r1;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r3;
        java.lang.Object $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r2);

        $r3 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry access$400(com.google.common.collect.HashBiMap,java.lang.Object,int)>($r1, $r2, $i0);

        $r2 = staticinvoke <com.google.common.collect.Maps: java.lang.Object keyOrNull(java.util.Map$Entry)>($r3);

        return $r2;
    }

    public com.google.common.collect.BiMap inverse()
    {
        com.google.common.collect.BiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.BiMap forward()>();

        return $r1;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.HashBiMap$Inverse$InverseKeySet $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = new com.google.common.collect.HashBiMap$Inverse$InverseKeySet;

        specialinvoke $r1.<com.google.common.collect.HashBiMap$Inverse$InverseKeySet: void <init>(com.google.common.collect.HashBiMap$Inverse)>(r0);

        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $r3 = staticinvoke <com.google.common.collect.HashBiMap: java.lang.Object access$800(com.google.common.collect.HashBiMap,java.lang.Object,java.lang.Object,boolean)>($r2, $r3, $r1, 0);

        return $r3;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r2;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r3;
        java.lang.Object $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $r3 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry access$400(com.google.common.collect.HashBiMap,java.lang.Object,int)>($r2, $r1, $i0);

        if $r3 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        staticinvoke <com.google.common.collect.HashBiMap: void access$200(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry)>($r2, $r3);

        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = null;

        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = null;

        $r1 = $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object key>;

        return $r1;
    }

    public void replaceAll(java.util.function.BiFunction)
    {
        com.google.common.collect.HashBiMap $r3;
        java.util.function.BiFunction $r1;
        com.google.common.collect.HashBiMap$BiEntry $r4;
        java.lang.Object $r2, $r5;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.util.function.BiFunction;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $r4 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry access$000(com.google.common.collect.HashBiMap)>($r3);

        virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: void clear()>();

     label1:
        if $r4 == null goto label2;

        $r2 = $r4.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        $r5 = $r4.<com.google.common.collect.ImmutableEntry: java.lang.Object key>;

        $r5 = interfaceinvoke $r1.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r2, $r5);

        virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r4 = $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        goto label1;

     label2:
        return;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.HashBiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        $i0 = staticinvoke <com.google.common.collect.HashBiMap: int access$700(com.google.common.collect.HashBiMap)>($r1);

        return $i0;
    }

    public volatile java.util.Collection values()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: java.util.Set values()>();

        return $r1;
    }

    public java.util.Set values()
    {
        com.google.common.collect.BiMap $r1;
        java.util.Set $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.BiMap forward()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$Inverse r0;
        com.google.common.collect.HashBiMap$InverseSerializedForm $r1;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = new com.google.common.collect.HashBiMap$InverseSerializedForm;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap this$0>;

        specialinvoke $r1.<com.google.common.collect.HashBiMap$InverseSerializedForm: void <init>(com.google.common.collect.HashBiMap)>($r2);

        return $r1;
    }
}
