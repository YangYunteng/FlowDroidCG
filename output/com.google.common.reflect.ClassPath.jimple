public final class com.google.common.reflect.ClassPath extends java.lang.Object
{
    public static final java.lang.String CLASS_FILE_NAME_EXTENSION;
    public static final com.google.common.base.Splitter CLASS_PATH_ATTRIBUTE_SEPARATOR;
    public static final com.google.common.base.Predicate IS_TOP_LEVEL;
    public static final java.util.logging.Logger logger;
    public final com.google.common.collect.ImmutableSet resources;

    static void <clinit>()
    {
        com.google.common.reflect.ClassPath$1 $r3;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        com.google.common.base.Splitter $r4;

        <com.google.common.reflect.ClassPath: java.lang.String CLASS_FILE_NAME_EXTENSION> = ".class";

        $r0 = class "Lcom/google/common/reflect/ClassPath;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.reflect.ClassPath: java.util.logging.Logger logger> = $r2;

        $r3 = new com.google.common.reflect.ClassPath$1;

        specialinvoke $r3.<com.google.common.reflect.ClassPath$1: void <init>()>();

        <com.google.common.reflect.ClassPath: com.google.common.base.Predicate IS_TOP_LEVEL> = $r3;

        $r4 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(" ");

        $r4 = virtualinvoke $r4.<com.google.common.base.Splitter: com.google.common.base.Splitter omitEmptyStrings()>();

        <com.google.common.reflect.ClassPath: com.google.common.base.Splitter CLASS_PATH_ATTRIBUTE_SEPARATOR> = $r4;

        return;
    }

    public void <init>(com.google.common.collect.ImmutableSet)
    {
        com.google.common.reflect.ClassPath r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.reflect.ClassPath;

        $r1 := @parameter0: com.google.common.collect.ImmutableSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet resources> = $r1;

        return;
    }

    public static java.util.logging.Logger access$100()
    {
        java.util.logging.Logger r0;

        r0 = <com.google.common.reflect.ClassPath: java.util.logging.Logger logger>;

        return r0;
    }

    public static com.google.common.base.Splitter access$200()
    {
        com.google.common.base.Splitter r0;

        r0 = <com.google.common.reflect.ClassPath: com.google.common.base.Splitter CLASS_PATH_ATTRIBUTE_SEPARATOR>;

        return r0;
    }

    public static com.google.common.reflect.ClassPath 'from'(java.lang.ClassLoader)
    {
        com.google.common.reflect.ClassPath$DefaultScanner $r2;
        com.google.common.collect.ImmutableSet $r0;
        java.lang.ClassLoader $r1;
        com.google.common.reflect.ClassPath $r3;

        $r1 := @parameter0: java.lang.ClassLoader;

        $r2 = new com.google.common.reflect.ClassPath$DefaultScanner;

        specialinvoke $r2.<com.google.common.reflect.ClassPath$DefaultScanner: void <init>()>();

        virtualinvoke $r2.<com.google.common.reflect.ClassPath$Scanner: void scan(java.lang.ClassLoader)>($r1);

        $r3 = new com.google.common.reflect.ClassPath;

        $r0 = virtualinvoke $r2.<com.google.common.reflect.ClassPath$DefaultScanner: com.google.common.collect.ImmutableSet getResources()>();

        specialinvoke $r3.<com.google.common.reflect.ClassPath: void <init>(com.google.common.collect.ImmutableSet)>($r0);

        return $r3;
    }

    public static java.lang.String getClassName(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = -6;

        $i0 = $i0 + $i1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        return $r0;
    }

    public static java.io.File toFile(java.net.URL)
    {
        java.net.URL $r1;
        java.net.URISyntaxException $r0;
        java.lang.String $r2;
        java.net.URI $r4;
        java.io.File $r3;
        boolean $z0;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("file");

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r3 = new java.io.File;

     label1:
        $r4 = virtualinvoke $r1.<java.net.URL: java.net.URI toURI()>();

        specialinvoke $r3.<java.io.File: void <init>(java.net.URI)>($r4);

     label2:
        return $r3;

     label3:
        $r3 = new java.io.File;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String getPath()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

        return $r3;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch java.net.URISyntaxException from label1 to label2 with label4;
    }

    public com.google.common.collect.ImmutableSet getAllClasses()
    {
        com.google.common.reflect.ClassPath r0;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.FluentIterable $r2;

        r0 := @this: com.google.common.reflect.ClassPath;

        $r1 = r0.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet resources>;

        $r2 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>($r1);

        $r2 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(java.lang.Class)>(class "Lcom/google/common/reflect/ClassPath$ClassInfo;");

        $r1 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableSet toSet()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet getResources()
    {
        com.google.common.reflect.ClassPath r0;
        com.google.common.collect.ImmutableSet r1;

        r0 := @this: com.google.common.reflect.ClassPath;

        r1 = r0.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet resources>;

        return r1;
    }

    public com.google.common.collect.ImmutableSet getTopLevelClasses()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.FluentIterable $r2;
        com.google.common.base.Predicate $r3;
        com.google.common.reflect.ClassPath r0;

        r0 := @this: com.google.common.reflect.ClassPath;

        $r1 = r0.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet resources>;

        $r2 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>($r1);

        $r2 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(java.lang.Class)>(class "Lcom/google/common/reflect/ClassPath$ClassInfo;");

        $r3 = <com.google.common.reflect.ClassPath: com.google.common.base.Predicate IS_TOP_LEVEL>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r3);

        $r1 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableSet toSet()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet getTopLevelClasses(java.lang.String)
    {
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.collect.ImmutableSet$Builder $r2;
        com.google.common.reflect.ClassPath$ClassInfo $r6;
        java.lang.Object $r5;
        com.google.common.reflect.ClassPath r0;
        java.lang.String $r1, $r7;
        com.google.common.collect.UnmodifiableIterator $r4;
        boolean $z0;

        r0 := @this: com.google.common.reflect.ClassPath;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r3 = virtualinvoke r0.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClasses()>();

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.google.common.reflect.ClassPath$ClassInfo) $r5;

        $r7 = virtualinvoke $r6.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r3;
    }

    public com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String)
    {
        com.google.common.collect.ImmutableSet $r4;
        com.google.common.collect.ImmutableSet$Builder $r3;
        com.google.common.reflect.ClassPath$ClassInfo $r7;
        java.lang.StringBuilder $r2;
        java.lang.Object $r6;
        com.google.common.reflect.ClassPath r0;
        java.lang.String $r1, $r8;
        com.google.common.collect.UnmodifiableIterator $r5;
        boolean $z0;

        r0 := @this: com.google.common.reflect.ClassPath;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r4 = virtualinvoke r0.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClasses()>();

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.google.common.reflect.ClassPath$ClassInfo) $r6;

        $r8 = virtualinvoke $r7.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r4;
    }
}
