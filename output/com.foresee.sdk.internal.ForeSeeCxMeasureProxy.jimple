public class com.foresee.sdk.internal.ForeSeeCxMeasureProxy extends com.foresee.sdk.ForeSeeCxMeasure
{

    public void <init>()
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureProxy r0;

        r0 := @this: com.foresee.sdk.internal.ForeSeeCxMeasureProxy;

        specialinvoke r0.<com.foresee.sdk.ForeSeeCxMeasure: void <init>()>();

        return;
    }

    public static void applicationLaunched()
    {
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r0;

        $r0 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        virtualinvoke $r0.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: void applicationLaunched()>();

        return;
    }

    public static void createInstanceForTests(com.foresee.sdk.internal.ForeSeeCxMeasureFacade, com.foresee.sdk.common.configuration.Configuration)
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r0;
        com.foresee.sdk.common.configuration.Configuration $r1;

        $r0 := @parameter0: com.foresee.sdk.internal.ForeSeeCxMeasureFacade;

        $r1 := @parameter1: com.foresee.sdk.common.configuration.Configuration;

        <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance> = $r0;

        <com.foresee.sdk.ForeSeeBase: com.foresee.sdk.common.configuration.IConfiguration config> = $r1;

        return;
    }

    public static com.foresee.sdk.common.configuration.Configuration getConfiguration()
    {
        com.foresee.sdk.common.configuration.Configuration $r0;

        $r0 = staticinvoke <com.foresee.sdk.ForeSeeBase: com.foresee.sdk.common.configuration.Configuration getSDKConfiguration()>();

        return $r0;
    }

    public static com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()
    {
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r0;
        com.foresee.sdk.common.configuration.IConfiguration $r1;

        $r0 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        $r1 = virtualinvoke $r0.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        return $r1;
    }

    public static com.foresee.sdk.cxMeasure.tracker.PersistedState getState()
    {
        com.foresee.sdk.cxMeasure.tracker.PersistedState $r1;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r0;

        $r0 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        $r1 = virtualinvoke $r0.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.PersistedState getState()>();

        return $r1;
    }

    public static void incrementSignificantEventsCountWithKey(java.lang.String)
    {
        java.lang.String $r0;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: void incrementSignificantEventsCountWithKey(java.lang.String)>($r0);

        return;
    }

    public static void persistState(com.foresee.sdk.cxMeasure.tracker.PersistedState)
    {
        com.foresee.sdk.cxMeasure.tracker.PersistedState $r0;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;

        $r0 := @parameter0: com.foresee.sdk.cxMeasure.tracker.PersistedState;

        $r1 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: void persistState(com.foresee.sdk.cxMeasure.tracker.PersistedState)>($r0);

        return;
    }
}
