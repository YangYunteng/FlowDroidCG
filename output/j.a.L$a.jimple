public abstract class j.a.L$a extends java.lang.Object implements java.lang.Runnable, java.lang.Comparable, j.a.I, j.a.b.K
{
    public java.lang.Object a;
    public int b;
    public long c;

    public final int a(long, j.a.L$b, j.a.L)
    {
        java.lang.Throwable $r7, $r8;
        j.a.b.A $r4;
        long $l0, $l1, $l2;
        j.a.b.K $r5;
        byte $b3;
        j.a.L $r2;
        j.a.L$a r0, $r6;
        int $i4;
        j.a.L$b $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: j.a.L$a;

        $l1 := @parameter0: long;

        $r1 := @parameter1: j.a.L$b;

        $r2 := @parameter2: j.a.L;

        entermonitor r0;

     label01:
        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "delayed");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "eventLoop");

        $r3 = r0.<j.a.L$a: java.lang.Object a>;

        $r4 = staticinvoke <j.a.O: j.a.b.A b()>();

     label02:
        if $r3 != $r4 goto label03;

        exitmonitor r0;

        return 2;

     label03:
        entermonitor $r1;

     label04:
        $r5 = virtualinvoke $r1.<j.a.b.J: j.a.b.K a()>();

        $r6 = (j.a.L$a) $r5;

        $z0 = staticinvoke <j.a.L: boolean a(j.a.L)>($r2);

     label05:
        if $z0 == 0 goto label08;

     label06:
        exitmonitor $r1;

     label07:
        exitmonitor r0;

        return 1;

     label08:
        if $r6 != null goto label10;

     label09:
        $r1.<j.a.L$b: long c> = $l1;

        goto label13;

     label10:
        $l2 = $r6.<j.a.L$a: long c>;

        $l0 = $l2 - $l1;

        $b3 = $l0 cmp 0L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label11;

        goto label12;

     label11:
        $l1 = $l2;

     label12:
        $l0 = $r1.<j.a.L$b: long c>;

        $l0 = $l1 - $l0;

        $b3 = $l0 cmp 0L;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label13;

        $r1.<j.a.L$b: long c> = $l1;

     label13:
        $l1 = r0.<j.a.L$a: long c>;

        $l0 = $r1.<j.a.L$b: long c>;

        $l1 = $l1 - $l0;

        $b3 = $l1 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label14;

        $l1 = $r1.<j.a.L$b: long c>;

        r0.<j.a.L$a: long c> = $l1;

     label14:
        virtualinvoke $r1.<j.a.b.J: void a(j.a.b.K)>(r0);

     label15:
        exitmonitor $r1;

     label16:
        exitmonitor r0;

        return 0;

     label17:
        $r7 := @caughtexception;

     label18:
        exitmonitor $r1;

        throw $r7;

     label19:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label09 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    public int a(j.a.L$a)
    {
        byte $b2;
        j.a.L$a r0, $r1;
        int $i3;
        long $l0, $l1;

        r0 := @this: j.a.L$a;

        $r1 := @parameter0: j.a.L$a;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "other");

        $l0 = r0.<j.a.L$a: long c>;

        $l1 = $r1.<j.a.L$a: long c>;

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        return 1;

     label1:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        $i3 = -1;

        return $i3;

     label2:
        return 0;
    }

    public j.a.b.J a()
    {
        j.a.L$a r0;
        java.lang.Object $r1;
        j.a.b.J $r2;
        boolean $z0;

        r0 := @this: j.a.L$a;

        $r1 = r0.<j.a.L$a: java.lang.Object a>;

        $z0 = $r1 instanceof j.a.b.J;

        if $z0 != 0 goto label1;

        $r1 = null;

     label1:
        $r2 = (j.a.b.J) $r1;

        return $r2;
    }

    public void a(j.a.b.J)
    {
        j.a.b.A $r1;
        j.a.L$a r0;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        j.a.b.J $r2;
        boolean $z0;

        r0 := @this: j.a.L$a;

        $r2 := @parameter0: j.a.b.J;

        $r3 = r0.<j.a.L$a: java.lang.Object a>;

        $r1 = staticinvoke <j.a.O: j.a.b.A b()>();

        if $r3 == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        r0.<j.a.L$a: java.lang.Object a> = $r2;

        return;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Failed requirement.");

        throw $r4;
    }

    public final boolean a(long)
    {
        byte $b0;
        j.a.L$a r0;
        int $i3;
        long $l1, $l2;

        r0 := @this: j.a.L$a;

        $l1 := @parameter0: long;

        $l2 = r0.<j.a.L$a: long c>;

        $l1 = $l1 - $l2;

        $b0 = $l1 cmp 0L;

        $i3 = (int) $b0;

        if $i3 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        j.a.L$a r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: j.a.L$a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (j.a.L$a) $r1;

        $i0 = virtualinvoke r0.<j.a.L$a: int a(j.a.L$a)>($r2);

        return $i0;
    }

    public void setIndex(int)
    {
        j.a.L$a r0;
        int $i0;

        r0 := @this: j.a.L$a;

        $i0 := @parameter0: int;

        r0.<j.a.L$a: int b> = $i0;

        return;
    }

    public java.lang.String toString()
    {
        j.a.L$a r0;
        java.lang.StringBuilder $r2;
        long $l0;
        java.lang.String $r1;

        r0 := @this: j.a.L$a;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delayed[nanos=");

        $l0 = r0.<j.a.L$a: long c>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
