public class org.dom4j.jaxb.JAXBModifier extends org.dom4j.jaxb.JAXBSupport
{
    public org.dom4j.io.SAXModifier modifier;
    public java.util.HashMap modifiers;
    public org.dom4j.io.OutputFormat outputFormat;
    public boolean pruneElements;
    public org.dom4j.io.XMLWriter xmlWriter;

    public void <init>(java.lang.String)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.OutputFormat $r3;
        java.util.HashMap $r2;
        java.lang.String $r1;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.dom4j.jaxb.JAXBSupport: void <init>(java.lang.String)>($r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers> = $r2;

        $r3 = new org.dom4j.io.OutputFormat;

        specialinvoke $r3.<org.dom4j.io.OutputFormat: void <init>()>();

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.OutputFormat outputFormat> = $r3;

        return;
    }

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.OutputFormat $r4;
        java.util.HashMap $r3;
        java.lang.ClassLoader $r1;
        java.lang.String $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<org.dom4j.jaxb.JAXBSupport: void <init>(java.lang.String,java.lang.ClassLoader)>($r2, $r1);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers> = $r3;

        $r4 = new org.dom4j.io.OutputFormat;

        specialinvoke $r4.<org.dom4j.io.OutputFormat: void <init>()>();

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.OutputFormat outputFormat> = $r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.ClassLoader, org.dom4j.io.OutputFormat)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.OutputFormat $r2;
        java.util.HashMap $r4;
        java.lang.ClassLoader $r1;
        java.lang.String $r3;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.ClassLoader;

        $r2 := @parameter2: org.dom4j.io.OutputFormat;

        specialinvoke r0.<org.dom4j.jaxb.JAXBSupport: void <init>(java.lang.String,java.lang.ClassLoader)>($r3, $r1);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers> = $r4;

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.OutputFormat outputFormat> = $r2;

        return;
    }

    public void <init>(java.lang.String, org.dom4j.io.OutputFormat)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.OutputFormat $r1;
        java.util.HashMap $r3;
        java.lang.String $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.dom4j.io.OutputFormat;

        specialinvoke r0.<org.dom4j.jaxb.JAXBSupport: void <init>(java.lang.String)>($r2);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers> = $r3;

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.OutputFormat outputFormat> = $r1;

        return;
    }

    private org.dom4j.io.XMLWriter createXMLWriter()
    {
        org.dom4j.io.OutputFormat $r1;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.XMLWriter $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r2 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter xmlWriter>;

        if $r2 != null goto label1;

        $r2 = new org.dom4j.io.XMLWriter;

        $r1 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.OutputFormat outputFormat>;

        specialinvoke $r2.<org.dom4j.io.XMLWriter: void <init>(org.dom4j.io.OutputFormat)>($r1);

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter xmlWriter> = $r2;

     label1:
        $r2 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter xmlWriter>;

        return $r2;
    }

    private org.dom4j.io.SAXModifier getModifier()
    {
        org.dom4j.jaxb.JAXBModifier r0;
        boolean $z0;
        org.dom4j.io.SAXModifier $r1;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier>;

        if $r1 != null goto label1;

        $r1 = new org.dom4j.io.SAXModifier;

        $z0 = virtualinvoke r0.<org.dom4j.jaxb.JAXBModifier: boolean isPruneElements()>();

        specialinvoke $r1.<org.dom4j.io.SAXModifier: void <init>(boolean)>($z0);

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier> = $r1;

     label1:
        $r1 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier>;

        return $r1;
    }

    private org.dom4j.io.XMLWriter getXMLWriter()
    {
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.XMLWriter r1;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        r1 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter xmlWriter>;

        return r1;
    }

    private org.dom4j.io.SAXModifier installModifier()
    {
        java.util.Map$Entry $r8;
        java.util.Iterator $r5;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.XMLWriter $r6;
        java.util.Set $r4;
        java.util.HashMap $r3;
        org.dom4j.jaxb.JAXBObjectModifier $r9;
        org.dom4j.jaxb.JAXBModifier$JAXBElementModifier $r1;
        java.lang.Object $r7;
        java.lang.String $r10;
        org.dom4j.io.SAXModifier $r2;
        boolean $z0;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r2 = new org.dom4j.io.SAXModifier;

        $z0 = virtualinvoke r0.<org.dom4j.jaxb.JAXBModifier: boolean isPruneElements()>();

        specialinvoke $r2.<org.dom4j.io.SAXModifier: void <init>(boolean)>($z0);

        r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier> = $r2;

        $r2 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier>;

        virtualinvoke $r2.<org.dom4j.io.SAXModifier: void resetModifiers()>();

        $r3 = r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier>;

        $r6 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter getXMLWriter()>();

        virtualinvoke $r2.<org.dom4j.io.SAXModifier: void setXMLWriter(org.dom4j.io.XMLWriter)>($r6);

        $r2 = r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier modifier>;

        return $r2;

     label2:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r1 = new org.dom4j.jaxb.JAXBModifier$JAXBElementModifier;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.dom4j.jaxb.JAXBObjectModifier) $r7;

        specialinvoke $r1.<org.dom4j.jaxb.JAXBModifier$JAXBElementModifier: void <init>(org.dom4j.jaxb.JAXBModifier,org.dom4j.jaxb.JAXBModifier,org.dom4j.jaxb.JAXBObjectModifier)>(r0, r0, $r9);

        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier getModifier()>();

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r7;

        virtualinvoke $r2.<org.dom4j.io.SAXModifier: void addModifier(java.lang.String,org.dom4j.io.ElementModifier)>($r10, $r1);

        goto label1;
    }

    public void addObjectModifier(java.lang.String, org.dom4j.jaxb.JAXBObjectModifier)
    {
        org.dom4j.jaxb.JAXBObjectModifier $r2;
        org.dom4j.jaxb.JAXBModifier r0;
        java.util.HashMap $r3;
        java.lang.String $r1;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.jaxb.JAXBObjectModifier;

        $r3 = r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public boolean isPruneElements()
    {
        org.dom4j.jaxb.JAXBModifier r0;
        boolean z0;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        z0 = r0.<org.dom4j.jaxb.JAXBModifier: boolean pruneElements>;

        return z0;
    }

    public org.dom4j.Document modify(java.io.File)
    {
        org.dom4j.Document $r3;
        org.dom4j.jaxb.JAXBModifier r0;
        java.io.File $r1;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.File;

        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r3 = virtualinvoke $r2.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.io.File)>($r1);

        return $r3;
    }

    public org.dom4j.Document modify(java.io.File, java.nio.charset.Charset)
    {
        java.lang.Throwable $r11;
        org.dom4j.Document $r6;
        org.dom4j.jaxb.JAXBRuntimeException $r10;
        org.dom4j.jaxb.JAXBModifier r0;
        java.io.FileInputStream $r1;
        java.io.InputStreamReader $r4;
        java.io.File $r2;
        java.io.FileNotFoundException $r7;
        org.dom4j.DocumentException $r8;
        java.nio.charset.Charset $r3;
        java.lang.String $r9;
        org.dom4j.io.SAXModifier $r5;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r2 := @parameter0: java.io.File;

        $r3 := @parameter1: java.nio.charset.Charset;

        $r4 = new java.io.InputStreamReader;

        $r1 = new java.io.FileInputStream;

     label1:
        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r1, $r3);

        $r5 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r6 = virtualinvoke $r5.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.io.Reader)>($r4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.dom4j.DocumentException;

        $r9 = virtualinvoke $r7.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r7);

        throw $r8;

     label4:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r8 = new org.dom4j.DocumentException;

        $r9 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r8.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r11);

        throw $r8;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label4;
        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.InputStream)
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.jaxb.JAXBRuntimeException $r4;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.DocumentException $r6;
        java.lang.String $r7;
        java.io.InputStream $r1;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r3 = virtualinvoke $r2.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.io.InputStream)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.InputStream, java.lang.String)
    {
        java.lang.Throwable $r6;
        org.dom4j.Document $r4;
        org.dom4j.jaxb.JAXBRuntimeException $r5;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.DocumentException $r7;
        java.lang.String $r2;
        java.io.InputStream $r1;
        org.dom4j.io.SAXModifier $r3;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r4 = virtualinvoke $r3.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.io.InputStream)>($r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r7 = new org.dom4j.DocumentException;

        $r2 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r7.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r6);

        throw $r7;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.Reader)
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.jaxb.JAXBRuntimeException $r4;
        org.dom4j.jaxb.JAXBModifier r0;
        java.io.Reader $r1;
        org.dom4j.DocumentException $r6;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.Reader;

     label1:
        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r3 = virtualinvoke $r2.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.io.Reader)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.Reader, java.lang.String)
    {
        java.lang.Throwable $r6;
        org.dom4j.Document $r4;
        org.dom4j.jaxb.JAXBRuntimeException $r5;
        org.dom4j.jaxb.JAXBModifier r0;
        java.io.Reader $r1;
        org.dom4j.DocumentException $r7;
        java.lang.String $r2;
        org.dom4j.io.SAXModifier $r3;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r4 = virtualinvoke $r3.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.io.Reader)>($r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r7 = new org.dom4j.DocumentException;

        $r2 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r7.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r6);

        throw $r7;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.lang.String)
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.DocumentException $r6;
        org.dom4j.jaxb.JAXBRuntimeException $r4;
        org.dom4j.jaxb.JAXBModifier r0;
        java.lang.String $r1;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r3 = virtualinvoke $r2.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r1 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r5);

        throw $r6;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.net.URL)
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.jaxb.JAXBRuntimeException $r4;
        org.dom4j.jaxb.JAXBModifier r0;
        java.net.URL $r1;
        org.dom4j.DocumentException $r6;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.net.URL;

     label1:
        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r3 = virtualinvoke $r2.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(java.net.URL)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(org.xml.sax.InputSource)
    {
        java.lang.Throwable $r5;
        org.xml.sax.InputSource $r1;
        org.dom4j.Document $r3;
        org.dom4j.jaxb.JAXBRuntimeException $r4;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.DocumentException $r6;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: org.xml.sax.InputSource;

     label1:
        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier installModifier()>();

        $r3 = virtualinvoke $r2.<org.dom4j.io.SAXModifier: org.dom4j.Document modify(org.xml.sax.InputSource)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.jaxb.JAXBRuntimeException from label1 to label2 with label3;
    }

    public void removeObjectModifier(java.lang.String)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        java.util.HashMap $r3;
        java.lang.String $r1;
        org.dom4j.io.SAXModifier $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier getModifier()>();

        virtualinvoke $r2.<org.dom4j.io.SAXModifier: void removeModifier(java.lang.String)>($r1);

        return;
    }

    public void resetObjectModifiers()
    {
        java.util.HashMap $r2;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.SAXModifier $r1;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r2 = r0.<org.dom4j.jaxb.JAXBModifier: java.util.HashMap modifiers>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        $r1 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.SAXModifier getModifier()>();

        virtualinvoke $r1.<org.dom4j.io.SAXModifier: void resetModifiers()>();

        return;
    }

    public void setOutput(java.io.File)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.XMLWriter $r3;
        java.io.FileOutputStream $r2;
        java.io.File $r1;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.File;

        $r3 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter createXMLWriter()>();

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        virtualinvoke $r3.<org.dom4j.io.XMLWriter: void setOutputStream(java.io.OutputStream)>($r2);

        return;
    }

    public void setOutput(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.XMLWriter $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter createXMLWriter()>();

        virtualinvoke $r2.<org.dom4j.io.XMLWriter: void setOutputStream(java.io.OutputStream)>($r1);

        return;
    }

    public void setOutput(java.io.Writer)
    {
        java.io.Writer $r1;
        org.dom4j.jaxb.JAXBModifier r0;
        org.dom4j.io.XMLWriter $r2;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $r1 := @parameter0: java.io.Writer;

        $r2 = specialinvoke r0.<org.dom4j.jaxb.JAXBModifier: org.dom4j.io.XMLWriter createXMLWriter()>();

        virtualinvoke $r2.<org.dom4j.io.XMLWriter: void setWriter(java.io.Writer)>($r1);

        return;
    }

    public void setPruneElements(boolean)
    {
        org.dom4j.jaxb.JAXBModifier r0;
        boolean $z0;

        r0 := @this: org.dom4j.jaxb.JAXBModifier;

        $z0 := @parameter0: boolean;

        r0.<org.dom4j.jaxb.JAXBModifier: boolean pruneElements> = $z0;

        return;
    }
}
