public class org.codehaus.jackson.map.AnnotationIntrospector$Pair extends org.codehaus.jackson.map.AnnotationIntrospector
{
    public final org.codehaus.jackson.map.AnnotationIntrospector _primary;
    public final org.codehaus.jackson.map.AnnotationIntrospector _secondary;

    public void <init>(org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        specialinvoke r0.<org.codehaus.jackson.map.AnnotationIntrospector: void <init>()>();

        r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary> = $r1;

        r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary> = $r2;

        return;
    }

    public static org.codehaus.jackson.map.AnnotationIntrospector create(org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r0, $r1;

        $r0 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        if $r0 != null goto label1;

        return $r1;

     label1:
        if $r1 != null goto label2;

        return $r0;

     label2:
        $r2 = new org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        specialinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: void <init>(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector)>($r0, $r1);

        return $r2;
    }

    public java.util.Collection allIntrospectors()
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.util.Collection $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.util.Collection allIntrospectors(java.util.Collection)>($r2);

        return $r1;
    }

    public java.util.Collection allIntrospectors(java.util.Collection)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        java.util.Collection $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.util.Collection allIntrospectors(java.util.Collection)>($r1);

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.util.Collection allIntrospectors(java.util.Collection)>($r1);

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r2;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r1, $r2);

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r1, $r2);

        return $r2;
    }

    public java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        java.lang.Boolean $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 == null goto label1;

        if $r3 != class "Lorg/codehaus/jackson/map/JsonDeserializer$None;" goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label2:
        return $r3;
    }

    public java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 == null goto label1;

        if $r3 != class "Lorg/codehaus/jackson/map/JsonSerializer$None;" goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label2:
        return $r3;
    }

    public java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)
    {
        int $i0;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.introspect.AnnotatedField $r1;
        java.lang.String $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        return $r3;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        return $r3;
    }

    public java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r5;
        java.lang.String $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r2, $r3);

     label1:
        return $r5;
    }

    public java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r5;
        java.lang.String $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r2, $r3);

     label1:
        return $r5;
    }

    public java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r5;
        java.lang.String $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r2, $r3);

     label1:
        return $r5;
    }

    public java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Object $r4;
        org.codehaus.jackson.map.BeanProperty $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r2);

        if $r4 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r2);

     label1:
        return $r4;
    }

    public java.lang.String findEnumValue(java.lang.Enum)
    {
        java.lang.Enum $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: java.lang.Enum;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }

    public java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        int $i0;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        return $r3;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        return $r3;
    }

    public java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        java.lang.Boolean $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 == null goto label1;

        if $r3 != class "Lorg/codehaus/jackson/map/KeyDeserializer$None;" goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label2:
        return $r3;
    }

    public java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 == null goto label1;

        if $r3 != class "Lorg/codehaus/jackson/map/JsonSerializer$None;" goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label2:
        return $r3;
    }

    public java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String[] $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }

    public org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r5;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.MapperConfig $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>($r1, $r2, $r3);

     label1:
        return $r5;
    }

    public java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String $r3;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedParameter;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1);

     label1:
        return $r3;
    }

    public org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r5;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.MapperConfig $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>($r1, $r2, $r3);

     label1:
        return $r5;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r1);

     label1:
        return $r3;
    }

    public java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        int $i0;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        return $r3;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        return $r3;

     label2:
        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r4 != null goto label3;

        return $r3;

     label3:
        return $r4;
    }

    public java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)
    {
        int $i0;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.introspect.AnnotatedField $r1;
        java.lang.String $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        return $r3;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        return $r3;
    }

    public java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)>($r1, $r2);

        if $r4 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)>($r1, $r2);

     label1:
        return $r4;
    }

    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>($r1, $r2);

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>($r1, $r2);

        return $r2;
    }

    public java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)>($r1, $r2);

        if $r4 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)>($r1, $r2);

     label1:
        return $r4;
    }

    public java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String[] $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        java.lang.Boolean $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Class $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label1:
        return $r3;
    }

    public org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        java.lang.Class[] $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)>($r1);

     label1:
        return $r3;
    }

    public java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.Object $r4;
        org.codehaus.jackson.map.BeanProperty $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r2);

        if $r4 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r2);

     label1:
        return $r4;
    }

    public java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        int $i0;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        return $r3;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        return $r3;
    }

    public java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        java.util.ArrayList $r5;
        org.codehaus.jackson.map.introspect.Annotated $r1;
        java.util.List $r3, $r4;
        int $i0, $i1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $r3 == null goto label4;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r4;

     label1:
        if $r4 == null goto label3;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + $i1;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

        return $r5;

     label3:
        return $r3;

     label4:
        return $r4;
    }

    public java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        int $i0;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        java.lang.String $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label2:
        return $r3;
    }

    public org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r5;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.MapperConfig $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>($r1, $r2, $r3);

     label1:
        return $r5;
    }

    public boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isHandled(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isHandled(java.lang.'annotation'.Annotation)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isHandled(java.lang.'annotation'.Annotation)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.introspect.AnnotatedField $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        java.lang.Boolean $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$Pair r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _primary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector _secondary>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

     label1:
        return $r3;
    }
}
