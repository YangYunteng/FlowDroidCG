public final class com.google.common.util.concurrent.ExecutionList extends java.lang.Object
{
    public static final java.util.logging.Logger log;
    public boolean executed;
    public com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/common/util/concurrent/ExecutionList;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.util.concurrent.ExecutionList: java.util.logging.Logger log> = $r2;

        return;
    }

    public void <init>()
    {
        com.google.common.util.concurrent.ExecutionList r0;

        r0 := @this: com.google.common.util.concurrent.ExecutionList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void executeListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r0;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r1;
        java.lang.String $r5;
        java.util.logging.Logger $r2;
        java.lang.Runnable $r6;
        java.util.logging.Level $r3;

        $r6 := @parameter0: java.lang.Runnable;

        $r0 := @parameter1: java.util.concurrent.Executor;

     label1:
        interfaceinvoke $r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <com.google.common.util.concurrent.ExecutionList: java.util.logging.Logger log>;

        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RuntimeException while executing runnable ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with executor ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r5, $r1);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void add(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.lang.Throwable $r5;
        com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair $r2, $r4;
        java.util.concurrent.Executor $r1;
        com.google.common.util.concurrent.ExecutionList r0;
        java.lang.Runnable $r3;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ExecutionList;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "Runnable was null.");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Executor was null.");

        entermonitor r0;

     label1:
        $z0 = r0.<com.google.common.util.concurrent.ExecutionList: boolean executed>;

        if $z0 != 0 goto label3;

        $r4 = new com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair;

        $r2 = r0.<com.google.common.util.concurrent.ExecutionList: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables>;

        specialinvoke $r4.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: void <init>(java.lang.Runnable,java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair)>($r3, $r1, $r2);

        r0.<com.google.common.util.concurrent.ExecutionList: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables> = $r4;

        exitmonitor r0;

     label2:
        return;

     label3:
        exitmonitor r0;

     label4:
        staticinvoke <com.google.common.util.concurrent.ExecutionList: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>($r3, $r1);

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void execute()
    {
        java.lang.Throwable $r6;
        java.util.concurrent.Executor $r5;
        java.lang.Runnable $r4;
        com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair $r1, $r2, $r3;
        com.google.common.util.concurrent.ExecutionList r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ExecutionList;

        entermonitor r0;

     label01:
        $z0 = r0.<com.google.common.util.concurrent.ExecutionList: boolean executed>;

        if $z0 == 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r0.<com.google.common.util.concurrent.ExecutionList: boolean executed> = 1;

        $r1 = r0.<com.google.common.util.concurrent.ExecutionList: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables>;

        r0.<com.google.common.util.concurrent.ExecutionList: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables> = null;

        exitmonitor r0;

     label04:
        $r2 = null;

     label05:
        if $r1 == null goto label06;

        $r3 = $r1.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair next>;

        $r1.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair next> = $r2;

        $r2 = $r1;

        $r1 = $r3;

        goto label05;

     label06:
        if $r2 == null goto label07;

        $r4 = $r2.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.lang.Runnable runnable>;

        $r5 = $r2.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.util.concurrent.Executor executor>;

        staticinvoke <com.google.common.util.concurrent.ExecutionList: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>($r4, $r5);

        $r2 = $r2.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair next>;

        goto label06;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        goto label11;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
