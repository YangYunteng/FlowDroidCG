public class com.google.common.collect.Synchronized$SynchronizedSortedSet extends com.google.common.collect.Synchronized$SynchronizedSet implements java.util.SortedSet
{
    public static final long serialVersionUID;

    public void <init>(java.util.SortedSet, java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 := @parameter0: java.util.SortedSet;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSet: void <init>(java.util.Set,java.lang.Object)>($r1, $r2);

        return;
    }

    public java.util.Comparator comparator()
    {
        java.lang.Throwable $r4;
        java.util.SortedSet $r2;
        java.lang.Object $r1;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;
        java.util.Comparator $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.SortedSet: java.util.Comparator comparator()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        return $r1;
    }

    public volatile java.util.Collection delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        return $r1;
    }

    public volatile java.util.Set delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        return $r1;
    }

    public java.util.SortedSet delegate()
    {
        java.util.Set $r1;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;
        java.util.SortedSet $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSet: java.util.Set delegate()>();

        $r2 = (java.util.SortedSet) $r1;

        return $r2;
    }

    public java.lang.Object first()
    {
        java.lang.Throwable $r4;
        java.util.SortedSet $r2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.SortedSet: java.lang.Object first()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.SortedSet headSet(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.util.SortedSet $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        $r3 = interfaceinvoke $r3.<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>($r2);

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object)>($r3, $r2);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object last()
    {
        java.lang.Throwable $r4;
        java.util.SortedSet $r2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.SortedSet: java.lang.Object last()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.SortedSet $r4;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        $r4 = interfaceinvoke $r4.<java.util.SortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.SortedSet tailSet(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.util.SortedSet $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Synchronized$SynchronizedSortedSet r0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedSortedSet;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedSortedSet: java.util.SortedSet delegate()>();

        $r3 = interfaceinvoke $r3.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>($r2);

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object)>($r3, $r2);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
