public final class com.google.firebase.crashlytics.internal.common.ExecutorUtils extends java.lang.Object
{
    public static final long DEFAULT_TERMINATION_TIMEOUT;

    public void <init>()
    {
        com.google.firebase.crashlytics.internal.common.ExecutorUtils r0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.ExecutorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void addDelayedShutdownHook(java.lang.String, java.util.concurrent.ExecutorService)
    {
        java.util.concurrent.TimeUnit $r2;
        java.lang.String $r0;
        java.util.concurrent.ExecutorService $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.concurrent.ExecutorService;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        staticinvoke <com.google.firebase.crashlytics.internal.common.ExecutorUtils: void addDelayedShutdownHook(java.lang.String,java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)>($r0, $r1, 2L, $r2);

        return;
    }

    public static final void addDelayedShutdownHook(java.lang.String, java.util.concurrent.ExecutorService, long, java.util.concurrent.TimeUnit)
    {
        java.lang.Runtime $r5;
        long $l0;
        java.util.concurrent.TimeUnit $r0;
        com.google.firebase.crashlytics.internal.common.ExecutorUtils$2 $r2;
        java.lang.Thread $r1;
        java.lang.StringBuilder $r6;
        java.lang.String $r3;
        java.util.concurrent.ExecutorService $r4;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.util.concurrent.ExecutorService;

        $l0 := @parameter2: long;

        $r0 := @parameter3: java.util.concurrent.TimeUnit;

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r1 = new java.lang.Thread;

        $r2 = new com.google.firebase.crashlytics.internal.common.ExecutorUtils$2;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.ExecutorUtils$2: void <init>(java.lang.String,java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)>($r3, $r4, $l0, $r0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics Shutdown Hook for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r2, $r3);

        virtualinvoke $r5.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r1);

        return;
    }

    public static java.util.concurrent.ExecutorService buildSingleThreadExecutorService(java.lang.String)
    {
        java.lang.String $r0;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ExecutorService $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.common.ExecutorUtils: java.util.concurrent.ThreadFactory getNamedThreadFactory(java.lang.String)>($r0);

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r1);

        staticinvoke <com.google.firebase.crashlytics.internal.common.ExecutorUtils: void addDelayedShutdownHook(java.lang.String,java.util.concurrent.ExecutorService)>($r0, $r2);

        return $r2;
    }

    public static java.util.concurrent.ScheduledExecutorService buildSingleThreadScheduledExecutorService(java.lang.String)
    {
        java.util.concurrent.ScheduledExecutorService $r2;
        java.lang.String $r0;
        java.util.concurrent.ThreadFactory $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.common.ExecutorUtils: java.util.concurrent.ThreadFactory getNamedThreadFactory(java.lang.String)>($r0);

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)>($r1);

        staticinvoke <com.google.firebase.crashlytics.internal.common.ExecutorUtils: void addDelayedShutdownHook(java.lang.String,java.util.concurrent.ExecutorService)>($r0, $r2);

        return $r2;
    }

    public static final java.util.concurrent.ThreadFactory getNamedThreadFactory(java.lang.String)
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        java.lang.String $r0;
        com.google.firebase.crashlytics.internal.common.ExecutorUtils$1 $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(1L);

        $r2 = new com.google.firebase.crashlytics.internal.common.ExecutorUtils$1;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.ExecutorUtils$1: void <init>(java.lang.String,java.util.concurrent.atomic.AtomicLong)>($r0, $r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.google.firebase.crashlytics.internal.common.ExecutorUtils: long DEFAULT_TERMINATION_TIMEOUT> = 2L;

        return;
    }
}
