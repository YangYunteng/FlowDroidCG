public class com.caremark.caremark.core.SessionExpireService extends android.app.Service
{
    public static final java.lang.String HANDLER_THREAD_NAME;
    public static final long INACTIVITY_CHECK_INTERVAL;
    public android.os.HandlerThread handlerThread;

    public void <init>()
    {
        com.caremark.caremark.core.SessionExpireService r0;

        r0 := @this: com.caremark.caremark.core.SessionExpireService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.caremark.caremark.core.SessionExpireService r0;
        android.content.Intent $r1;

        r0 := @this: com.caremark.caremark.core.SessionExpireService;

        $r1 := @parameter0: android.content.Intent;

        return null;
    }

    public void onCreate()
    {
        com.caremark.caremark.core.SessionExpireService r0;
        android.app.Application $r1;
        android.os.HandlerThread $r4;
        android.os.Looper $r6;
        c.c.a.d.k $r5;
        c.c.a.d.l $r3;
        com.caremark.caremark.core.CaremarkApp $r2;

        r0 := @this: com.caremark.caremark.core.SessionExpireService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = virtualinvoke r0.<android.app.Service: android.app.Application getApplication()>();

        $r2 = (com.caremark.caremark.core.CaremarkApp) $r1;

        $r3 = virtualinvoke $r2.<com.caremark.caremark.core.CaremarkApp: c.c.a.d.l getSessionManager()>();

        $r4 = new android.os.HandlerThread;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>("SessionExpirationMonitor");

        r0.<com.caremark.caremark.core.SessionExpireService: android.os.HandlerThread handlerThread> = $r4;

        $r4 = r0.<com.caremark.caremark.core.SessionExpireService: android.os.HandlerThread handlerThread>;

        virtualinvoke $r4.<android.os.HandlerThread: void start()>();

        $r5 = new c.c.a.d.k;

        $r4 = r0.<com.caremark.caremark.core.SessionExpireService: android.os.HandlerThread handlerThread>;

        $r6 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<c.c.a.d.k: void <init>(com.caremark.caremark.core.SessionExpireService,android.os.Looper,c.c.a.d.l)>(r0, $r6, $r3);

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(0, 60000L);

        return;
    }

    public void onDestroy()
    {
        com.caremark.caremark.core.SessionExpireService r0;
        android.os.HandlerThread $r1;

        r0 := @this: com.caremark.caremark.core.SessionExpireService;

        $r1 = r0.<com.caremark.caremark.core.SessionExpireService: android.os.HandlerThread handlerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: boolean quit()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        com.caremark.caremark.core.SessionExpireService r0;
        int $i0, $i1;
        android.content.Intent $r1;

        r0 := @this: com.caremark.caremark.core.SessionExpireService;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return 1;
    }

    public static void <clinit>()
    {
        <com.caremark.caremark.core.SessionExpireService: long INACTIVITY_CHECK_INTERVAL> = 60000L;

        <com.caremark.caremark.core.SessionExpireService: java.lang.String HANDLER_THREAD_NAME> = "SessionExpirationMonitor";

        return;
    }
}
