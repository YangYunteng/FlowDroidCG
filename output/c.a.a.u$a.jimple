public class c.a.a.u$a extends java.lang.Object implements java.lang.Runnable
{
    public final java.util.Map a;
    public final c.a.a.p$a b;

    public void <init>(java.util.Map, c.a.a.p$a)
    {
        c.a.a.u$a r0;
        c.a.a.p$a $r2;
        java.util.Map $r1;

        r0 := @this: c.a.a.u$a;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: c.a.a.p$a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.a.a.u$a: java.util.Map a> = $r1;

        r0.<c.a.a.u$a: c.a.a.p$a b> = $r2;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r14;
        byte[] $r11;
        java.lang.Object[] $r8;
        java.util.HashMap $r1, $r13;
        c.a.a.Da $r2;
        org.json.JSONException $r16;
        c.a.a.Ia $r6, $r7;
        org.json.JSONObject $r12;
        java.lang.Thread $r4;
        java.util.Map $r9;
        c.a.a.u$a r0;
        int $i0;
        java.lang.String $r10;
        c.a.a.p$a $r3;
        boolean $z0;
        java.lang.Exception $r15;
        c.a.a.t $r5;
        java.io.UnsupportedEncodingException $r17;

        r0 := @this: c.a.a.u$a;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

     label01:
        $r2 = staticinvoke <c.a.a.Da: c.a.a.Da q()>();

        $z0 = virtualinvoke $r2.<c.a.a.Da: boolean G()>();

     label02:
        if $z0 != 0 goto label03;

        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;

     label03:
        $r2 = staticinvoke <c.a.a.Da: c.a.a.Da q()>();

        $r6 = virtualinvoke $r2.<c.a.a.Da: c.a.a.Ia v()>();

     label04:
        $r7 = <c.a.a.Ia: c.a.a.Ia b>;

     label05:
        if $r6 != $r7 goto label09;

     label06:
        $r8 = newarray (java.lang.Object)[0];

     label07:
        staticinvoke <com.adobe.mobile.StaticMethods: void a(java.lang.String,java.lang.Object[])>("Audience Manager - Privacy status is set to opt out, no signals will be submitted.", $r8);

     label08:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;

     label09:
        $r9 = r0.<c.a.a.u$a: java.util.Map a>;

     label10:
        $r10 = staticinvoke <c.a.a.u: java.lang.String d(java.util.Map)>($r9);

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

     label11:
        if $i0 > 1 goto label15;

     label12:
        $r8 = newarray (java.lang.Object)[0];

     label13:
        staticinvoke <com.adobe.mobile.StaticMethods: void c(java.lang.String,java.lang.Object[])>("Audience Manager - Unable to create URL object", $r8);

     label14:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;

     label15:
        $r8 = newarray (java.lang.Object)[1];

     label16:
        $r8[0] = $r10;

     label17:
        staticinvoke <com.adobe.mobile.StaticMethods: void a(java.lang.String,java.lang.Object[])>("Audience Manager - request (%s)", $r8);

        $r2 = staticinvoke <c.a.a.Da: c.a.a.Da q()>();

        $i0 = virtualinvoke $r2.<c.a.a.Da: int f()>();

     label18:
        $i0 = $i0 * 1000;

     label19:
        $r11 = staticinvoke <c.a.a.Ta: byte[] a(java.lang.String,java.util.Map,int,java.lang.String)>($r10, null, $i0, "Audience Manager");

     label20:
        $r10 = "";

        if $r11 == null goto label25;

     label21:
        $i0 = lengthof $r11;

     label22:
        if $i0 <= 0 goto label25;

     label23:
        $r10 = new java.lang.String;

     label24:
        specialinvoke $r10.<java.lang.String: void <init>(byte[],java.lang.String)>($r11, "UTF-8");

     label25:
        $r12 = new org.json.JSONObject;

     label26:
        specialinvoke $r12.<org.json.JSONObject: void <init>(java.lang.String)>($r10);

        $r13 = staticinvoke <c.a.a.u: java.util.HashMap c(org.json.JSONObject)>($r12);

        virtualinvoke $r1.<java.util.HashMap: void putAll(java.util.Map)>($r13);

     label27:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        goto label38;

     label28:
        $r14 := @caughtexception;

        goto label39;

     label29:
        $r15 := @caughtexception;

     label30:
        $r8 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r8[0] = $r10;

        staticinvoke <com.adobe.mobile.StaticMethods: void c(java.lang.String,java.lang.Object[])>("Audience Manager - Unexpected error parsing result (%s)", $r8);

     label31:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        goto label38;

     label32:
        $r16 := @caughtexception;

     label33:
        $r8 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke $r16.<org.json.JSONException: java.lang.String getLocalizedMessage()>();

        $r8[0] = $r10;

        staticinvoke <com.adobe.mobile.StaticMethods: void c(java.lang.String,java.lang.Object[])>("Audience Manager - Unable to parse JSON data (%s)", $r8);

     label34:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        goto label38;

     label35:
        $r17 := @caughtexception;

     label36:
        $r8 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke $r17.<java.io.UnsupportedEncodingException: java.lang.String getLocalizedMessage()>();

        $r8[0] = $r10;

        staticinvoke <com.adobe.mobile.StaticMethods: void c(java.lang.String,java.lang.Object[])>("Audience Manager - Unable to decode server response (%s)", $r8);

     label37:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label41;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

     label38:
        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;

     label39:
        $r3 = r0.<c.a.a.u$a: c.a.a.p$a b>;

        if $r3 == null goto label40;

        $r4 = new java.lang.Thread;

        $r5 = new c.a.a.t;

        specialinvoke $r5.<c.a.a.t: void <init>(c.a.a.u$a,java.util.HashMap)>(r0, $r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

     label40:
        throw $r14;

     label41:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label35;
        catch org.json.JSONException from label01 to label02 with label32;
        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label35;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label35;
        catch org.json.JSONException from label03 to label04 with label32;
        catch org.json.JSONException from label07 to label08 with label32;
        catch java.lang.Exception from label03 to label04 with label29;
        catch java.lang.Exception from label07 to label08 with label29;
        catch java.lang.Throwable from label03 to label05 with label28;
        catch java.lang.Throwable from label06 to label08 with label28;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label35;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label35;
        catch org.json.JSONException from label10 to label11 with label32;
        catch org.json.JSONException from label13 to label14 with label32;
        catch java.lang.Exception from label09 to label11 with label29;
        catch java.lang.Exception from label13 to label14 with label29;
        catch java.lang.Throwable from label09 to label11 with label28;
        catch java.lang.Throwable from label12 to label14 with label28;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label35;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label35;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label35;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label35;
        catch org.json.JSONException from label17 to label18 with label32;
        catch org.json.JSONException from label19 to label20 with label32;
        catch org.json.JSONException from label24 to label25 with label32;
        catch org.json.JSONException from label26 to label27 with label32;
        catch java.lang.Exception from label16 to label18 with label29;
        catch java.lang.Exception from label19 to label20 with label29;
        catch java.lang.Exception from label21 to label22 with label29;
        catch java.lang.Exception from label24 to label25 with label29;
        catch java.lang.Exception from label26 to label27 with label29;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label23 to label27 with label28;
        catch java.lang.Throwable from label30 to label31 with label28;
        catch java.lang.Throwable from label33 to label34 with label28;
        catch java.lang.Throwable from label36 to label37 with label28;
    }
}
