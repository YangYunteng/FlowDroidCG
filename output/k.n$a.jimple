public final class k.n$a extends java.lang.Object
{
    public boolean a;
    public java.lang.String[] b;
    public java.lang.String[] c;
    public boolean d;

    public void <init>(k.n)
    {
        k.n$a r0;
        k.n $r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: k.n$a;

        $r1 := @parameter0: k.n;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = $r1.<k.n: boolean g>;

        r0.<k.n$a: boolean a> = $z0;

        $r2 = $r1.<k.n: java.lang.String[] i>;

        r0.<k.n$a: java.lang.String[] b> = $r2;

        $r2 = $r1.<k.n: java.lang.String[] j>;

        r0.<k.n$a: java.lang.String[] c> = $r2;

        $z0 = $r1.<k.n: boolean h>;

        r0.<k.n$a: boolean d> = $z0;

        return;
    }

    public void <init>(boolean)
    {
        k.n$a r0;
        boolean $z0;

        r0 := @this: k.n$a;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<k.n$a: boolean a> = $z0;

        return;
    }

    public k.n$a a(boolean)
    {
        java.lang.IllegalStateException $r1;
        k.n$a r0;
        boolean $z0, $z1;

        r0 := @this: k.n$a;

        $z0 := @parameter0: boolean;

        $z1 = r0.<k.n$a: boolean a>;

        if $z1 == 0 goto label1;

        r0.<k.n$a: boolean d> = $z0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS extensions for cleartext connections");

        throw $r1;
    }

    public transient k.n$a a(java.lang.String[])
    {
        java.lang.IllegalStateException $r4;
        k.n$a r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: k.n$a;

        $r2 := @parameter0: java.lang.String[];

        $z0 = r0.<k.n$a: boolean a>;

        if $z0 == 0 goto label2;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.String[]) $r1;

        r0.<k.n$a: java.lang.String[] b> = $r2;

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one cipher suite is required");

        throw $r3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no cipher suites for cleartext connections");

        throw $r4;
    }

    public transient k.n$a a(k.Q[])
    {
        k.Q[] $r1;
        java.lang.IllegalStateException $r5;
        java.lang.String[] $r2;
        k.Q $r3;
        k.n$a r0;
        int $i0, $i1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: k.n$a;

        $r1 := @parameter0: k.Q[];

        $z0 = r0.<k.n$a: boolean a>;

        if $z0 == 0 goto label3;

        $i0 = lengthof $r1;

        $r2 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $r3 = $r1[$i0];

        $r4 = $r3.<k.Q: java.lang.String g>;

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<k.n$a: k.n$a b(java.lang.String[])>($r2);

        return r0;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS versions for cleartext connections");

        goto label4;

     label4:
        throw $r5;
    }

    public transient k.n$a a(k.j[])
    {
        java.lang.IllegalStateException $r5;
        k.j $r3;
        k.j[] $r1;
        java.lang.String[] $r2;
        k.n$a r0;
        int $i0, $i1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: k.n$a;

        $r1 := @parameter0: k.j[];

        $z0 = r0.<k.n$a: boolean a>;

        if $z0 == 0 goto label3;

        $i0 = lengthof $r1;

        $r2 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $r3 = $r1[$i0];

        $r4 = $r3.<k.j: java.lang.String qb>;

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<k.n$a: k.n$a a(java.lang.String[])>($r2);

        return r0;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no cipher suites for cleartext connections");

        goto label4;

     label4:
        throw $r5;
    }

    public k.n a()
    {
        k.n$a r0;
        k.n $r1;

        r0 := @this: k.n$a;

        $r1 = new k.n;

        specialinvoke $r1.<k.n: void <init>(k.n$a)>(r0);

        return $r1;
    }

    public transient k.n$a b(java.lang.String[])
    {
        java.lang.IllegalStateException $r4;
        k.n$a r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: k.n$a;

        $r2 := @parameter0: java.lang.String[];

        $z0 = r0.<k.n$a: boolean a>;

        if $z0 == 0 goto label2;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.String[]) $r1;

        r0.<k.n$a: java.lang.String[] c> = $r2;

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one TLS version is required");

        throw $r3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS versions for cleartext connections");

        throw $r4;
    }
}
