public abstract class com.foresee.sdk.common.h.b extends java.lang.Object
{
    public static final int cm;
    public static final java.util.concurrent.BlockingQueue cn;
    public static final java.util.concurrent.ThreadFactory co;
    public java.util.concurrent.FutureTask cp;
    public com.foresee.sdk.common.h.b$b cq;
    public volatile com.foresee.sdk.common.h.b$a cr;

    static void <clinit>()
    {
        com.foresee.sdk.common.h.b$1 $r1;
        java.util.concurrent.LinkedBlockingQueue $r0;

        <com.foresee.sdk.common.h.b: int cm> = 10;

        $r0 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r0.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        <com.foresee.sdk.common.h.b: java.util.concurrent.BlockingQueue cn> = $r0;

        $r1 = new com.foresee.sdk.common.h.b$1;

        specialinvoke $r1.<com.foresee.sdk.common.h.b$1: void <init>()>();

        <com.foresee.sdk.common.h.b: java.util.concurrent.ThreadFactory co> = $r1;

        return;
    }

    public void <init>()
    {
        com.foresee.sdk.common.h.b$a $r2;
        com.foresee.sdk.common.h.b$b $r1;
        com.foresee.sdk.common.h.b$2 $r3;
        java.util.concurrent.FutureTask $r4;
        com.foresee.sdk.common.h.b r0;

        r0 := @this: com.foresee.sdk.common.h.b;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.foresee.sdk.common.h.b$a: com.foresee.sdk.common.h.b$a PENDING>;

        r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$a cr> = $r2;

        $r3 = new com.foresee.sdk.common.h.b$2;

        specialinvoke $r3.<com.foresee.sdk.common.h.b$2: void <init>(com.foresee.sdk.common.h.b)>(r0);

        r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$b cq> = $r3;

        $r4 = new java.util.concurrent.FutureTask;

        $r1 = r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$b cq>;

        specialinvoke $r4.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r1);

        r0.<com.foresee.sdk.common.h.b: java.util.concurrent.FutureTask cp> = $r4;

        return;
    }

    public final com.foresee.sdk.common.h.b$a N()
    {
        com.foresee.sdk.common.h.b$a r1;
        com.foresee.sdk.common.h.b r0;

        r0 := @this: com.foresee.sdk.common.h.b;

        r1 = r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$a cr>;

        return r1;
    }

    public abstract transient void a(java.lang.Object[]);

    public final transient void b(java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.util.concurrent.FutureTask $r6;
        java.util.concurrent.ScheduledThreadPoolExecutor $r5;
        java.lang.IllegalArgumentException $r10;
        int[] $r7;
        com.foresee.sdk.common.h.b$a $r1, $r3;
        int $i0;
        com.foresee.sdk.common.h.b$b $r4;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        com.foresee.sdk.common.h.b r0;

        r0 := @this: com.foresee.sdk.common.h.b;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$a cr>;

        $r1 = <com.foresee.sdk.common.h.b$a: com.foresee.sdk.common.h.b$a PENDING>;

        if $r3 != $r1 goto label1;

        $r1 = <com.foresee.sdk.common.h.b$a: com.foresee.sdk.common.h.b$a RUNNING>;

        r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$a cr> = $r1;

        $r4 = r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$b cq>;

        $r4.<com.foresee.sdk.common.h.b$b: java.lang.Object[] cx> = $r2;

        $r5 = staticinvoke <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor P()>();

        $r6 = r0.<com.foresee.sdk.common.h.b: java.util.concurrent.FutureTask cp>;

        virtualinvoke $r5.<java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)>($r6);

        return;

     label1:
        $r7 = <com.foresee.sdk.common.h.b$3: int[] cw>;

        $r1 = r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$a cr>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r7[$i0];

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot execute task: ");

        $r1 = r0.<com.foresee.sdk.common.h.b: com.foresee.sdk.common.h.b$a cr>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label2:
        $r9 = "Cannot execute task: the task is has already been executed";

        goto label4;

     label3:
        $r9 = "Cannot execute task: the task is already running";

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r10;
    }

    public final boolean cancel(boolean)
    {
        java.util.concurrent.FutureTask $r1;
        com.foresee.sdk.common.h.b r0;
        boolean $z0;

        r0 := @this: com.foresee.sdk.common.h.b;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.foresee.sdk.common.h.b: java.util.concurrent.FutureTask cp>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.FutureTask: boolean cancel(boolean)>($z0);

        return $z0;
    }
}
