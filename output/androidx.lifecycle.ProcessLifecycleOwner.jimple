public class androidx.lifecycle.ProcessLifecycleOwner extends java.lang.Object implements androidx.lifecycle.LifecycleOwner
{
    public static final long TIMEOUT_MS;
    public static final androidx.lifecycle.ProcessLifecycleOwner sInstance;
    public java.lang.Runnable mDelayedPauseRunnable;
    public android.os.Handler mHandler;
    public androidx.lifecycle.ReportFragment$ActivityInitializationListener mInitializationListener;
    public boolean mPauseSent;
    public final androidx.lifecycle.LifecycleRegistry mRegistry;
    public int mResumedCounter;
    public int mStartedCounter;
    public boolean mStopSent;

    static void <clinit>()
    {
        androidx.lifecycle.ProcessLifecycleOwner $r0;

        <androidx.lifecycle.ProcessLifecycleOwner: long TIMEOUT_MS> = 700L;

        $r0 = new androidx.lifecycle.ProcessLifecycleOwner;

        specialinvoke $r0.<androidx.lifecycle.ProcessLifecycleOwner: void <init>()>();

        <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner sInstance> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        androidx.lifecycle.ProcessLifecycleOwner$1 $r2;
        androidx.lifecycle.ProcessLifecycleOwner$2 $r3;
        androidx.lifecycle.LifecycleRegistry $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter> = 0;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter> = 0;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mPauseSent> = 1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mStopSent> = 1;

        $r1 = new androidx.lifecycle.LifecycleRegistry;

        specialinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>(r0);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry> = $r1;

        $r2 = new androidx.lifecycle.ProcessLifecycleOwner$1;

        specialinvoke $r2.<androidx.lifecycle.ProcessLifecycleOwner$1: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>(r0);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable mDelayedPauseRunnable> = $r2;

        $r3 = new androidx.lifecycle.ProcessLifecycleOwner$2;

        specialinvoke $r3.<androidx.lifecycle.ProcessLifecycleOwner$2: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>(r0);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener mInitializationListener> = $r3;

        return;
    }

    public static androidx.lifecycle.LifecycleOwner get()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;

        r0 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner sInstance>;

        return r0;
    }

    public static void init(android.content.Context)
    {
        android.content.Context $r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner sInstance>;

        virtualinvoke $r1.<androidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)>($r0);

        return;
    }

    public void activityPaused()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        android.os.Handler $r2;
        int $i0, $i1;
        java.lang.Runnable $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter> = $i0;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter>;

        if $i0 != 0 goto label1;

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler mHandler>;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable mDelayedPauseRunnable>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 700L);

     label1:
        return;
    }

    public void activityResumed()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        android.os.Handler $r3;
        int $i0;
        androidx.lifecycle.LifecycleRegistry $r1;
        java.lang.Runnable $r4;
        boolean $z0;
        androidx.lifecycle.Lifecycle$Event $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter>;

        $i0 = $i0 + 1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter> = $i0;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter>;

        if $i0 != 1 goto label2;

        $z0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mPauseSent>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        virtualinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mPauseSent> = 0;

        return;

     label1:
        $r3 = r0.<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler mHandler>;

        $r4 = r0.<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable mDelayedPauseRunnable>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

     label2:
        return;
    }

    public void activityStarted()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int $i0;
        androidx.lifecycle.LifecycleRegistry $r1;
        boolean $z0;
        androidx.lifecycle.Lifecycle$Event $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter>;

        $i0 = $i0 + 1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter> = $i0;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter>;

        if $i0 != 1 goto label1;

        $z0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mStopSent>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        virtualinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mStopSent> = 0;

     label1:
        return;
    }

    public void activityStopped()
    {
        int $i0, $i1;
        androidx.lifecycle.ProcessLifecycleOwner r0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter> = $i0;

        virtualinvoke r0.<androidx.lifecycle.ProcessLifecycleOwner: void dispatchStopIfNeeded()>();

        return;
    }

    public void attach(android.content.Context)
    {
        android.content.Context $r2;
        android.app.Application $r5;
        androidx.lifecycle.ProcessLifecycleOwner r0;
        android.os.Handler $r3;
        androidx.lifecycle.ProcessLifecycleOwner$3 $r6;
        androidx.lifecycle.LifecycleRegistry $r4;
        androidx.lifecycle.Lifecycle$Event $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $r2 := @parameter0: android.content.Context;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler mHandler> = $r3;

        $r4 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        $r2 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = (android.app.Application) $r2;

        $r6 = new androidx.lifecycle.ProcessLifecycleOwner$3;

        specialinvoke $r6.<androidx.lifecycle.ProcessLifecycleOwner$3: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>(r0);

        virtualinvoke $r5.<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>($r6);

        return;
    }

    public void dispatchPauseIfNeeded()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int $i0;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.lifecycle.Lifecycle$Event $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mResumedCounter>;

        if $i0 != 0 goto label1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mPauseSent> = 1;

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

     label1:
        return;
    }

    public void dispatchStopIfNeeded()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int $i0;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.lifecycle.Lifecycle$Event $r1;
        boolean $z0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int mStartedCounter>;

        if $i0 != 0 goto label1;

        $z0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mPauseSent>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean mStopSent> = 1;

     label1:
        return;
    }

    public androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.lifecycle.LifecycleRegistry r1;
        androidx.lifecycle.ProcessLifecycleOwner r0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        return r1;
    }
}
