public abstract class j.a.L extends j.a.M implements j.a.C
{
    public static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater d;
    public static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater e;
    public volatile java.lang.Object _delayed;
    public volatile java.lang.Object _queue;
    public volatile boolean isCompleted;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lj/a/L;", class "Ljava/lang/Object;", "_queue");

        <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d> = $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lj/a/L;", class "Ljava/lang/Object;", "_delayed");

        <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater e> = $r0;

        return;
    }

    public void <init>()
    {
        j.a.L r0;

        r0 := @this: j.a.L;

        specialinvoke r0.<j.a.M: void <init>()>();

        r0.<j.a.L: java.lang.Object _queue> = null;

        r0.<j.a.L: java.lang.Object _delayed> = null;

        return;
    }

    public static final boolean a(j.a.L)
    {
        j.a.L $r0;
        boolean z0;

        $r0 := @parameter0: j.a.L;

        z0 = $r0.<j.a.L: boolean isCompleted>;

        return z0;
    }

    public final void a(java.lang.Runnable)
    {
        j.a.L r0;
        java.lang.Runnable $r1;
        j.a.B $r2;
        boolean $z0;

        r0 := @this: j.a.L;

        $r1 := @parameter0: java.lang.Runnable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "task");

        $z0 = virtualinvoke r0.<j.a.L: boolean b(java.lang.Runnable)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<j.a.M: void r()>();

        return;

     label1:
        $r2 = <j.a.B: j.a.B g>;

        virtualinvoke $r2.<j.a.L: void a(java.lang.Runnable)>($r1);

        return;
    }

    public final boolean a(j.a.L$a)
    {
        j.a.L r0;
        j.a.L$a $r2, $r5;
        j.a.L$b $r4;
        java.lang.Object $r3;
        j.a.b.K $r1;

        r0 := @this: j.a.L;

        $r2 := @parameter0: j.a.L$a;

        $r3 = r0.<j.a.L: java.lang.Object _delayed>;

        $r4 = (j.a.L$b) $r3;

        if $r4 == null goto label1;

        $r1 = virtualinvoke $r4.<j.a.b.J: j.a.b.K d()>();

        $r5 = (j.a.L$a) $r1;

        goto label2;

     label1:
        $r5 = null;

     label2:
        if $r5 != $r2 goto label3;

        return 1;

     label3:
        return 0;
    }

    public final void b(long, j.a.L$a)
    {
        java.lang.IllegalStateException $r2;
        j.a.L r0;
        j.a.L$a $r1;
        int $i1;
        long $l0;
        boolean $z0;

        r0 := @this: j.a.L;

        $l0 := @parameter0: long;

        $r1 := @parameter1: j.a.L$a;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "delayedTask");

        $i1 = virtualinvoke r0.<j.a.L: int c(long,j.a.L$a)>($l0, $r1);

        if $i1 == 0 goto label3;

        if $i1 == 1 goto label2;

        if $i1 != 2 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected result");

        throw $r2;

     label2:
        virtualinvoke r0.<j.a.M: void a(long,j.a.L$a)>($l0, $r1);

        return;

     label3:
        $z0 = virtualinvoke r0.<j.a.L: boolean a(j.a.L$a)>($r1);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<j.a.M: void r()>();

     label4:
        return;
    }

    public final boolean b(java.lang.Runnable)
    {
        j.a.b.A $r6;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        kotlin.TypeCastException $r5;
        java.lang.Runnable $r1, $r7;
        j.a.b.r $r4;
        j.a.L r0;
        int $i0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: j.a.L;

        $r1 := @parameter0: java.lang.Runnable;

     label01:
        $r2 = r0.<j.a.L: java.lang.Object _queue>;

        $z0 = r0.<j.a.L: boolean isCompleted>;

        if $z0 == 0 goto label02;

        return 0;

     label02:
        if $r2 != null goto label03;

        $r3 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, null, $r1);

        if $z0 == 0 goto label01;

        return 1;

     label03:
        $z0 = $r2 instanceof j.a.b.r;

        if $z0 == 0 goto label08;

        if $r2 == null goto label07;

        $r4 = (j.a.b.r) $r2;

        $i0 = virtualinvoke $r4.<j.a.b.r: int a(java.lang.Object)>($r1);

        if $i0 == 0 goto label06;

        if $i0 == 1 goto label05;

        if $i0 == 2 goto label04;

        goto label01;

     label04:
        return 0;

     label05:
        $r3 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $r4 = virtualinvoke $r4.<j.a.b.r: j.a.b.r e()>();

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, $r4);

        goto label01;

     label06:
        return 1;

     label07:
        $r5 = new kotlin.TypeCastException;

        specialinvoke $r5.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.Queue<kotlinx.coroutines.Runnable /* = java.lang.Runnable */> /* = kotlinx.coroutines.internal.LockFreeTaskQueueCore<kotlinx.coroutines.Runnable /* = java.lang.Runnable */> */");

        throw $r5;

     label08:
        $r6 = staticinvoke <j.a.O: j.a.b.A a()>();

        if $r2 != $r6 goto label09;

        return 0;

     label09:
        $r4 = new j.a.b.r;

        specialinvoke $r4.<j.a.b.r: void <init>(int,boolean)>(8, 1);

        if $r2 == null goto label10;

        $r7 = (java.lang.Runnable) $r2;

        virtualinvoke $r4.<j.a.b.r: int a(java.lang.Object)>($r7);

        virtualinvoke $r4.<j.a.b.r: int a(java.lang.Object)>($r1);

        $r3 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, $r4);

        if $z0 == 0 goto label01;

        return 1;

     label10:
        $r5 = new kotlin.TypeCastException;

        specialinvoke $r5.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.Runnable /* = java.lang.Runnable */");

        goto label11;

     label11:
        throw $r5;
    }

    public final int c(long, j.a.L$a)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        long $l1;
        java.lang.NullPointerException r5;
        j.a.L r0;
        j.a.L$a $r1;
        int $i0;
        j.a.L$b $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: j.a.L;

        $l1 := @parameter0: long;

        $r1 := @parameter1: j.a.L$a;

        $z0 = r0.<j.a.L: boolean isCompleted>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<j.a.L: java.lang.Object _delayed>;

        $r2 = (j.a.L$b) $r3;

        if $r2 == null goto label2;

        goto label3;

     label2:
        $r4 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater e>;

        $r2 = new j.a.L$b;

        specialinvoke $r2.<j.a.L$b: void <init>(long)>($l1);

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, null, $r2);

        $r3 = r0.<j.a.L: java.lang.Object _delayed>;

        if $r3 == null goto label4;

        $r2 = (j.a.L$b) $r3;

     label3:
        $i0 = virtualinvoke $r1.<j.a.L$a: int a(long,j.a.L$b,j.a.L)>($l1, $r2, r0);

        return $i0;

     label4:
        staticinvoke <i.f.b.i: void a()>();

        r5 = new java.lang.NullPointerException;

        specialinvoke r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r5;
    }

    public final void dispatch(i.c.h, java.lang.Runnable)
    {
        java.lang.Runnable $r1;
        i.c.h $r2;
        j.a.L r0;

        r0 := @this: j.a.L;

        $r2 := @parameter0: i.c.h;

        $r1 := @parameter1: java.lang.Runnable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "context");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "block");

        virtualinvoke r0.<j.a.L: void a(java.lang.Runnable)>($r1);

        return;
    }

    public long m()
    {
        j.a.b.A $r7;
        long $l0, $l2;
        j.a.b.K $r4;
        byte $b1;
        j.a.b.r $r2;
        j.a.L r0;
        j.a.qa $r6;
        j.a.L$a $r5;
        j.a.L$b $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: j.a.L;

        $l0 = specialinvoke r0.<j.a.K: long m()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 0L;

     label1:
        $r1 = r0.<j.a.L: java.lang.Object _queue>;

        if $r1 != null goto label2;

        goto label3;

     label2:
        $z0 = $r1 instanceof j.a.b.r;

        if $z0 == 0 goto label7;

        $r2 = (j.a.b.r) $r1;

        $z0 = virtualinvoke $r2.<j.a.b.r: boolean c()>();

        if $z0 != 0 goto label3;

        return 0L;

     label3:
        $r1 = r0.<j.a.L: java.lang.Object _delayed>;

        $r3 = (j.a.L$b) $r1;

        if $r3 == null goto label6;

        $r4 = virtualinvoke $r3.<j.a.b.J: j.a.b.K d()>();

        $r5 = (j.a.L$a) $r4;

        if $r5 == null goto label9;

        $l0 = $r5.<j.a.L$a: long c>;

        $r6 = staticinvoke <j.a.ra: j.a.qa a()>();

        if $r6 == null goto label4;

        $l2 = interfaceinvoke $r6.<j.a.qa: long nanoTime()>();

        goto label5;

     label4:
        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

     label5:
        $l0 = $l0 - $l2;

        $l0 = staticinvoke <i.g.f: long a(long,long)>($l0, 0L);

        return $l0;

     label6:
        return 9223372036854775807L;

     label7:
        $r7 = staticinvoke <j.a.O: j.a.b.A a()>();

        if $r1 != $r7 goto label8;

        return 9223372036854775807L;

     label8:
        return 0L;

     label9:
        return 9223372036854775807L;
    }

    public final void s()
    {
        j.a.b.A $r4;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        kotlin.TypeCastException $r7;
        java.lang.AssertionError $r1;
        java.lang.Runnable $r6;
        j.a.b.r $r5;
        j.a.L r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: j.a.L;

        $z0 = staticinvoke <j.a.z: boolean a()>();

        if $z0 == 0 goto label2;

        $z0 = r0.<j.a.L: boolean isCompleted>;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<j.a.L: java.lang.Object _queue>;

        if $r2 != null goto label3;

        $r3 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $r4 = staticinvoke <j.a.O: j.a.b.A a()>();

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, null, $r4);

        if $z0 == 0 goto label2;

        return;

     label3:
        $z0 = $r2 instanceof j.a.b.r;

        if $z0 == 0 goto label4;

        $r5 = (j.a.b.r) $r2;

        virtualinvoke $r5.<j.a.b.r: boolean a()>();

        return;

     label4:
        $r4 = staticinvoke <j.a.O: j.a.b.A a()>();

        if $r2 != $r4 goto label5;

        return;

     label5:
        $r5 = new j.a.b.r;

        specialinvoke $r5.<j.a.b.r: void <init>(int,boolean)>(8, 1);

        if $r2 == null goto label6;

        $r6 = (java.lang.Runnable) $r2;

        virtualinvoke $r5.<j.a.b.r: int a(java.lang.Object)>($r6);

        $r3 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, $r5);

        if $z0 == 0 goto label2;

        return;

     label6:
        $r7 = new kotlin.TypeCastException;

        specialinvoke $r7.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.Runnable /* = java.lang.Runnable */");

        goto label7;

     label7:
        throw $r7;
    }

    public void shutdown()
    {
        byte $b0;
        j.a.pa $r1;
        j.a.L r0;
        int $i2;
        long $l1;

        r0 := @this: j.a.L;

        $r1 = <j.a.pa: j.a.pa b>;

        virtualinvoke $r1.<j.a.pa: void b()>();

        r0.<j.a.L: boolean isCompleted> = 1;

        virtualinvoke r0.<j.a.L: void s()>();

     label1:
        $l1 = virtualinvoke r0.<j.a.L: long v()>();

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 > 0 goto label2;

        goto label1;

     label2:
        virtualinvoke r0.<j.a.L: void w()>();

        return;
    }

    public final java.lang.Runnable t()
    {
        j.a.b.A $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r6;
        kotlin.TypeCastException $r7;
        java.lang.Runnable $r5;
        j.a.b.r $r3;
        j.a.L r0;
        java.lang.Object $r2, $r4;
        boolean $z0;

        r0 := @this: j.a.L;

     label1:
        $r2 = r0.<j.a.L: java.lang.Object _queue>;

        if $r2 != null goto label2;

        return null;

     label2:
        $z0 = $r2 instanceof j.a.b.r;

        if $z0 == 0 goto label5;

        if $r2 == null goto label4;

        $r3 = (j.a.b.r) $r2;

        $r4 = virtualinvoke $r3.<j.a.b.r: java.lang.Object f()>();

        $r1 = <j.a.b.r: j.a.b.A c>;

        if $r4 == $r1 goto label3;

        $r5 = (java.lang.Runnable) $r4;

        return $r5;

     label3:
        $r6 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $r3 = virtualinvoke $r3.<j.a.b.r: j.a.b.r e()>();

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, $r3);

        goto label1;

     label4:
        $r7 = new kotlin.TypeCastException;

        specialinvoke $r7.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.Queue<kotlinx.coroutines.Runnable /* = java.lang.Runnable */> /* = kotlinx.coroutines.internal.LockFreeTaskQueueCore<kotlinx.coroutines.Runnable /* = java.lang.Runnable */> */");

        throw $r7;

     label5:
        $r1 = staticinvoke <j.a.O: j.a.b.A a()>();

        if $r2 != $r1 goto label6;

        return null;

     label6:
        $r6 = <j.a.L: java.util.concurrent.atomic.AtomicReferenceFieldUpdater d>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r2, null);

        if $z0 == 0 goto label1;

        if $r2 == null goto label7;

        $r5 = (java.lang.Runnable) $r2;

        return $r5;

     label7:
        $r7 = new kotlin.TypeCastException;

        specialinvoke $r7.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.Runnable /* = java.lang.Runnable */");

        goto label8;

     label8:
        throw $r7;
    }

    public boolean u()
    {
        j.a.b.A $r4;
        j.a.b.r $r3;
        j.a.L r0;
        j.a.L$b $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: j.a.L;

        $z0 = virtualinvoke r0.<j.a.K: boolean o()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<j.a.L: java.lang.Object _delayed>;

        $r2 = (j.a.L$b) $r1;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<j.a.b.J: boolean c()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r1 = r0.<j.a.L: java.lang.Object _queue>;

        if $r1 != null goto label4;

     label3:
        return 1;

     label4:
        $z0 = $r1 instanceof j.a.b.r;

        if $z0 == 0 goto label5;

        $r3 = (j.a.b.r) $r1;

        $z0 = virtualinvoke $r3.<j.a.b.r: boolean c()>();

        return $z0;

     label5:
        $r4 = staticinvoke <j.a.O: j.a.b.A a()>();

        if $r1 != $r4 goto label6;

        goto label3;

     label6:
        return 0;
    }

    public long v()
    {
        java.lang.Throwable $r7;
        long $l0;
        java.lang.Runnable $r8;
        j.a.b.K $r4, $r5;
        j.a.L r0;
        j.a.qa $r3;
        j.a.L$a $r6;
        j.a.L$b $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: j.a.L;

        $z0 = virtualinvoke r0.<j.a.K: boolean p()>();

        if $z0 == 0 goto label01;

        $l0 = virtualinvoke r0.<j.a.L: long m()>();

        return $l0;

     label01:
        $r1 = r0.<j.a.L: java.lang.Object _delayed>;

        $r2 = (j.a.L$b) $r1;

        if $r2 == null goto label12;

        $z0 = virtualinvoke $r2.<j.a.b.J: boolean c()>();

        if $z0 != 0 goto label12;

        $r3 = staticinvoke <j.a.ra: j.a.qa a()>();

        if $r3 == null goto label02;

        $l0 = interfaceinvoke $r3.<j.a.qa: long nanoTime()>();

        goto label03;

     label02:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

     label03:
        entermonitor $r2;

     label04:
        $r4 = virtualinvoke $r2.<j.a.b.J: j.a.b.K a()>();

        $r5 = null;

        if $r4 == null goto label09;

        $r6 = (j.a.L$a) $r4;

        $z0 = virtualinvoke $r6.<j.a.L$a: boolean a(long)>($l0);

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke r0.<j.a.L: boolean b(java.lang.Runnable)>($r6);

        goto label06;

     label05:
        $z0 = 0;

     label06:
        if $z0 == 0 goto label08;

        $r4 = virtualinvoke $r2.<j.a.b.J: j.a.b.K a(int)>(0);

     label07:
        $r5 = $r4;

     label08:
        exitmonitor $r2;

        goto label10;

     label09:
        exitmonitor $r2;

     label10:
        $r6 = (j.a.L$a) $r5;

        if $r6 == null goto label12;

        goto label03;

     label11:
        $r7 := @caughtexception;

        exitmonitor $r2;

        throw $r7;

     label12:
        $r8 = virtualinvoke r0.<j.a.L: java.lang.Runnable t()>();

        if $r8 == null goto label13;

        interfaceinvoke $r8.<java.lang.Runnable: void run()>();

     label13:
        $l0 = virtualinvoke r0.<j.a.L: long m()>();

        return $l0;

        catch java.lang.Throwable from label04 to label07 with label11;
    }

    public final void w()
    {
        j.a.L r0;
        j.a.qa $r1;
        j.a.L$a $r5;
        j.a.L$b $r3;
        long $l0;
        java.lang.Object $r2;
        j.a.b.K $r4;

        r0 := @this: j.a.L;

        $r1 = staticinvoke <j.a.ra: j.a.qa a()>();

        if $r1 == null goto label1;

        $l0 = interfaceinvoke $r1.<j.a.qa: long nanoTime()>();

        goto label2;

     label1:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

     label2:
        $r2 = r0.<j.a.L: java.lang.Object _delayed>;

        $r3 = (j.a.L$b) $r2;

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r3.<j.a.b.J: j.a.b.K f()>();

        $r5 = (j.a.L$a) $r4;

        if $r5 == null goto label3;

        virtualinvoke r0.<j.a.M: void a(long,j.a.L$a)>($l0, $r5);

        goto label2;

     label3:
        return;
    }

    public final void x()
    {
        j.a.L r0;

        r0 := @this: j.a.L;

        r0.<j.a.L: java.lang.Object _queue> = null;

        r0.<j.a.L: java.lang.Object _delayed> = null;

        return;
    }
}
