public final class com.google.common.io.CharStreams extends java.lang.Object
{
    public static final int DEFAULT_BUF_SIZE;

    public void <init>()
    {
        com.google.common.io.CharStreams r0;

        r0 := @this: com.google.common.io.CharStreams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.Writer asWriter(java.lang.Appendable)
    {
        java.lang.Appendable $r0;
        java.io.Writer $r1;
        com.google.common.io.AppendableWriter $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Appendable;

        $z0 = $r0 instanceof java.io.Writer;

        if $z0 == 0 goto label1;

        $r1 = (java.io.Writer) $r0;

        return $r1;

     label1:
        $r2 = new com.google.common.io.AppendableWriter;

        specialinvoke $r2.<com.google.common.io.AppendableWriter: void <init>(java.lang.Appendable)>($r0);

        return $r2;
    }

    public static long copy(java.lang.Readable, java.lang.Appendable)
    {
        java.nio.CharBuffer $r5;
        java.lang.Appendable $r1;
        long $l0, $l2;
        java.io.Reader $r2;
        java.lang.Readable $r0;
        java.io.Writer $r4;
        int $i1, $i3;
        java.lang.StringBuilder $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Readable;

        $r1 := @parameter1: java.lang.Appendable;

        $z0 = $r0 instanceof java.io.Reader;

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof java.lang.StringBuilder;

        if $z0 == 0 goto label1;

        $r2 = (java.io.Reader) $r0;

        $r3 = (java.lang.StringBuilder) $r1;

        $l0 = staticinvoke <com.google.common.io.CharStreams: long copyReaderToBuilder(java.io.Reader,java.lang.StringBuilder)>($r2, $r3);

        return $l0;

     label1:
        $r2 = (java.io.Reader) $r0;

        $r4 = staticinvoke <com.google.common.io.CharStreams: java.io.Writer asWriter(java.lang.Appendable)>($r1);

        $l0 = staticinvoke <com.google.common.io.CharStreams: long copyReaderToWriter(java.io.Reader,java.io.Writer)>($r2, $r4);

        return $l0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $l0 = 0L;

        $r5 = staticinvoke <com.google.common.io.CharStreams: java.nio.CharBuffer createBuffer()>();

     label3:
        $i1 = interfaceinvoke $r0.<java.lang.Readable: int read(java.nio.CharBuffer)>($r5);

        $i3 = -1;

        if $i1 == $i3 goto label4;

        virtualinvoke $r5.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        $i1 = virtualinvoke $r5.<java.nio.CharBuffer: int remaining()>();

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        virtualinvoke $r5.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        goto label3;

     label4:
        return $l0;
    }

    public static long copyReaderToBuilder(java.io.Reader, java.lang.StringBuilder)
    {
        int $i0, $i3;
        char[] $r2;
        java.lang.StringBuilder $r1;
        long $l1, $l2;
        java.io.Reader $r0;

        $r0 := @parameter0: java.io.Reader;

        $r1 := @parameter1: java.lang.StringBuilder;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = newarray (char)[2048];

        $l1 = 0L;

     label1:
        $i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>($r2);

        $i3 = -1;

        if $i0 == $i3 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r2, 0, $i0);

        $l2 = (long) $i0;

        $l1 = $l1 + $l2;

        goto label1;

     label2:
        return $l1;
    }

    public static long copyReaderToWriter(java.io.Reader, java.io.Writer)
    {
        java.io.Writer $r1;
        int $i0, $i3;
        char[] $r2;
        long $l1, $l2;
        java.io.Reader $r0;

        $r0 := @parameter0: java.io.Reader;

        $r1 := @parameter1: java.io.Writer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = newarray (char)[2048];

        $l1 = 0L;

     label1:
        $i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>($r2);

        $i3 = -1;

        if $i0 == $i3 goto label2;

        virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>($r2, 0, $i0);

        $l2 = (long) $i0;

        $l1 = $l1 + $l2;

        goto label1;

     label2:
        return $l1;
    }

    public static java.nio.CharBuffer createBuffer()
    {
        java.nio.CharBuffer $r0;

        $r0 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(2048);

        return $r0;
    }

    public static long exhaust(java.lang.Readable)
    {
        byte $b0;
        java.nio.CharBuffer $r1;
        java.lang.Readable $r0;
        int $i2;
        long $l1, $l3;

        $r0 := @parameter0: java.lang.Readable;

        $r1 = staticinvoke <com.google.common.io.CharStreams: java.nio.CharBuffer createBuffer()>();

        $l1 = 0L;

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.Readable: int read(java.nio.CharBuffer)>($r1);

        $l3 = (long) $i2;

        $b0 = $l3 cmp -1L;

        if $b0 == 0 goto label2;

        $l1 = $l1 + $l3;

        virtualinvoke $r1.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        goto label1;

     label2:
        return $l1;
    }

    public static java.io.Writer nullWriter()
    {
        com.google.common.io.CharStreams$NullWriter $r0;

        $r0 = staticinvoke <com.google.common.io.CharStreams$NullWriter: com.google.common.io.CharStreams$NullWriter access$000()>();

        return $r0;
    }

    public static java.lang.Object readLines(java.lang.Readable, com.google.common.io.LineProcessor)
    {
        com.google.common.io.LineProcessor $r0;
        com.google.common.io.LineReader $r1;
        java.lang.Readable $r2;
        java.lang.Object $r4;
        java.lang.String $r3;
        boolean $z0;

        $r2 := @parameter0: java.lang.Readable;

        $r0 := @parameter1: com.google.common.io.LineProcessor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $r1 = new com.google.common.io.LineReader;

        specialinvoke $r1.<com.google.common.io.LineReader: void <init>(java.lang.Readable)>($r2);

     label1:
        $r3 = virtualinvoke $r1.<com.google.common.io.LineReader: java.lang.String readLine()>();

        if $r3 == null goto label2;

        $z0 = interfaceinvoke $r0.<com.google.common.io.LineProcessor: boolean processLine(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

     label2:
        $r4 = interfaceinvoke $r0.<com.google.common.io.LineProcessor: java.lang.Object getResult()>();

        return $r4;
    }

    public static java.util.List readLines(java.lang.Readable)
    {
        com.google.common.io.LineReader $r1;
        java.lang.Readable $r3;
        java.lang.String $r2;
        java.util.ArrayList $r0;

        $r3 := @parameter0: java.lang.Readable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new com.google.common.io.LineReader;

        specialinvoke $r1.<com.google.common.io.LineReader: void <init>(java.lang.Readable)>($r3);

     label1:
        $r2 = virtualinvoke $r1.<com.google.common.io.LineReader: java.lang.String readLine()>();

        if $r2 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return $r0;
    }

    public static void skipFully(java.io.Reader, long)
    {
        byte $b0;
        int $i3;
        long $l1, $l2;
        java.io.Reader $r0;
        java.io.EOFException $r1;

        $r0 := @parameter0: java.io.Reader;

        $l2 := @parameter1: long;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

     label1:
        $b0 = $l2 cmp 0L;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label3;

        $l1 = virtualinvoke $r0.<java.io.Reader: long skip(long)>($l2);

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label2;

        $l2 = $l2 - $l1;

        goto label1;

     label2:
        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label3:
        return;
    }

    public static java.lang.String toString(java.lang.Readable)
    {
        java.lang.Readable $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Readable;

        $r1 = staticinvoke <com.google.common.io.CharStreams: java.lang.StringBuilder toStringBuilder(java.lang.Readable)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.StringBuilder toStringBuilder(java.lang.Readable)
    {
        java.lang.Readable $r1;
        java.lang.StringBuilder $r0;
        java.io.Reader $r2;
        boolean $z0;

        $r1 := @parameter0: java.lang.Readable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = $r1 instanceof java.io.Reader;

        if $z0 == 0 goto label1;

        $r2 = (java.io.Reader) $r1;

        staticinvoke <com.google.common.io.CharStreams: long copyReaderToBuilder(java.io.Reader,java.lang.StringBuilder)>($r2, $r0);

        return $r0;

     label1:
        staticinvoke <com.google.common.io.CharStreams: long copy(java.lang.Readable,java.lang.Appendable)>($r1, $r0);

        return $r0;
    }

    public static void <clinit>()
    {
        <com.google.common.io.CharStreams: int DEFAULT_BUF_SIZE> = 2048;

        return;
    }
}
