public final class com.google.protobuf.ByteString$Output extends java.io.OutputStream
{
    public static final byte[] EMPTY_BYTE_ARRAY;
    public byte[] buffer;
    public int bufferPos;
    public final java.util.ArrayList flushedBuffers;
    public int flushedBuffersTotalBytes;
    public final int initialCapacity;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <com.google.protobuf.ByteString$Output: byte[] EMPTY_BYTE_ARRAY> = $r0;

        return;
    }

    public void <init>(int)
    {
        byte[] $r2;
        com.google.protobuf.ByteString$Output r0;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.util.ArrayList $r1;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        if $i0 < 0 goto label1;

        r0.<com.google.protobuf.ByteString$Output: int initialCapacity> = $i0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers> = $r1;

        $r2 = newarray (byte)[$i0];

        r0.<com.google.protobuf.ByteString$Output: byte[] buffer> = $r2;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size < 0");

        throw $r3;
    }

    private byte[] copyArray(byte[], int)
    {
        byte[] $r1, $r2;
        com.google.protobuf.ByteString$Output r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = newarray (byte)[$i0];

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return $r2;
    }

    private void flushFullBuffer(int)
    {
        byte[] $r1;
        com.google.protobuf.ByteString$LiteralByteString $r3;
        com.google.protobuf.ByteString$Output r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $i0 := @parameter0: int;

        $r2 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r3 = new com.google.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        specialinvoke $r3.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $r1 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i2 = lengthof $r1;

        $i1 = $i1 + $i2;

        r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes> = $i1;

        $i1 = r0.<com.google.protobuf.ByteString$Output: int initialCapacity>;

        $i2 = r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $i2 = $i2 >>> 1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        $r1 = newarray (byte)[$i0];

        r0.<com.google.protobuf.ByteString$Output: byte[] buffer> = $r1;

        r0.<com.google.protobuf.ByteString$Output: int bufferPos> = 0;

        return;
    }

    private void flushLastBuffer()
    {
        byte[] $r1;
        com.google.protobuf.ByteString$LiteralByteString $r3;
        com.google.protobuf.ByteString$Output r0;
        int $i0, $i1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $r1 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        if $i0 <= 0 goto label2;

        $r1 = specialinvoke r0.<com.google.protobuf.ByteString$Output: byte[] copyArray(byte[],int)>($r1, $i0);

        $r2 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r3 = new com.google.protobuf.ByteString$LiteralByteString;

        specialinvoke $r3.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label2;

     label1:
        $r2 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r3 = new com.google.protobuf.ByteString$LiteralByteString;

        specialinvoke $r3.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r1 = <com.google.protobuf.ByteString$Output: byte[] EMPTY_BYTE_ARRAY>;

        r0.<com.google.protobuf.ByteString$Output: byte[] buffer> = $r1;

     label2:
        $i0 = r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $i1 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $i0 = $i0 + $i1;

        r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes> = $i0;

        r0.<com.google.protobuf.ByteString$Output: int bufferPos> = 0;

        return;
    }

    public void reset()
    {
        java.lang.Throwable $r2;
        com.google.protobuf.ByteString$Output r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.protobuf.ByteString$Output;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes> = 0;

        r0.<com.google.protobuf.ByteString$Output: int bufferPos> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int size()
    {
        java.lang.Throwable $r1;
        com.google.protobuf.ByteString$Output r0;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.ByteString$Output;

        entermonitor r0;

     label1:
        $i1 = r0.<com.google.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

     label2:
        $i0 = $i1 + $i0;

        exitmonitor r0;

        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.google.protobuf.ByteString toByteString()
    {
        com.google.protobuf.ByteString $r1;
        java.lang.Throwable $r3;
        com.google.protobuf.ByteString$Output r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.protobuf.ByteString$Output;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.google.protobuf.ByteString$Output: void flushLastBuffer()>();

        $r2 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r1 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(java.lang.Iterable)>($r2);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1;
        com.google.protobuf.ByteString$Output r0;
        int $i0;
        java.lang.String $r2;
        java.lang.Integer $r3;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1[0] = $r2;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$Output: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<ByteString.Output@%s size=%d>", $r1);

        return $r2;
    }

    public void write(int)
    {
        java.lang.Throwable $r2;
        byte[] $r1;
        byte $b3;
        com.google.protobuf.ByteString$Output r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $i1 := @parameter0: int;

        entermonitor r0;

     label1:
        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $r1 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i2 = lengthof $r1;

        if $i0 != $i2 goto label2;

        specialinvoke r0.<com.google.protobuf.ByteString$Output: void flushFullBuffer(int)>(1);

     label2:
        $r1 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i2 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $i0 = $i2 + 1;

        r0.<com.google.protobuf.ByteString$Output: int bufferPos> = $i0;

        $b3 = (byte) $i1;

        $r1[$i2] = $b3;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void write(byte[], int, int)
    {
        java.lang.Throwable $r3;
        byte[] $r1, $r2;
        com.google.protobuf.ByteString$Output r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i3 = lengthof $r2;

        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $i3 = $i3 - $i0;

        if $i2 > $i3 goto label2;

        $r2 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i3 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i3, $i2);

        $i1 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $i1 = $i1 + $i2;

        r0.<com.google.protobuf.ByteString$Output: int bufferPos> = $i1;

        goto label3;

     label2:
        $r2 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i3 = lengthof $r2;

        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        $i3 = $i3 - $i0;

        $r2 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i0, $i3);

        $i1 = $i1 + $i3;

        $i2 = $i2 - $i3;

        specialinvoke r0.<com.google.protobuf.ByteString$Output: void flushFullBuffer(int)>($i2);

        $r2 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, 0, $i2);

        r0.<com.google.protobuf.ByteString$Output: int bufferPos> = $i2;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void writeTo(java.io.OutputStream)
    {
        java.io.OutputStream $r2;
        java.lang.Throwable $r8;
        byte[] $r7;
        java.lang.Object[] $r6;
        com.google.protobuf.ByteString$Output r0;
        com.google.protobuf.ByteString[] $r5;
        java.util.ArrayList $r3, $r4;
        com.google.protobuf.ByteString $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.ByteString$Output;

        $r2 := @parameter0: java.io.OutputStream;

        entermonitor r0;

     label1:
        $r3 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r4 = r0.<com.google.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = newarray (com.google.protobuf.ByteString)[$i0];

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (com.google.protobuf.ByteString[]) $r6;

        $r7 = r0.<com.google.protobuf.ByteString$Output: byte[] buffer>;

        $i0 = r0.<com.google.protobuf.ByteString$Output: int bufferPos>;

        exitmonitor r0;

     label2:
        $i1 = lengthof $r5;

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $r1 = $r5[$i2];

        virtualinvoke $r1.<com.google.protobuf.ByteString: void writeTo(java.io.OutputStream)>($r2);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r7 = specialinvoke r0.<com.google.protobuf.ByteString$Output: byte[] copyArray(byte[],int)>($r7, $i0);

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r7);

        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        goto label8;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
