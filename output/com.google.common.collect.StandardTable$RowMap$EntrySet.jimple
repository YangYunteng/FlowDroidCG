public class com.google.common.collect.StandardTable$RowMap$EntrySet extends com.google.common.collect.StandardTable$TableSet
{
    public final com.google.common.collect.StandardTable$RowMap this$1;

    public void <init>(com.google.common.collect.StandardTable$RowMap)
    {
        com.google.common.collect.StandardTable$RowMap $r1;
        com.google.common.collect.StandardTable$RowMap$EntrySet r0;
        com.google.common.collect.StandardTable $r2;

        r0 := @this: com.google.common.collect.StandardTable$RowMap$EntrySet;

        $r1 := @parameter0: com.google.common.collect.StandardTable$RowMap;

        r0.<com.google.common.collect.StandardTable$RowMap$EntrySet: com.google.common.collect.StandardTable$RowMap this$1> = $r1;

        $r2 = $r1.<com.google.common.collect.StandardTable$RowMap: com.google.common.collect.StandardTable this$0>;

        specialinvoke r0.<com.google.common.collect.StandardTable$TableSet: void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1)>($r2, null);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        java.util.Set $r6;
        com.google.common.collect.StandardTable$RowMap $r3;
        com.google.common.collect.StandardTable$RowMap$EntrySet r0;
        com.google.common.collect.StandardTable $r4;
        java.util.Map $r5;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$RowMap$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r1 == null goto label1;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.StandardTable$RowMap$EntrySet: com.google.common.collect.StandardTable$RowMap this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$RowMap: com.google.common.collect.StandardTable this$0>;

        $r5 = $r4.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $z0 = staticinvoke <com.google.common.collect.Collections2: boolean safeContains(java.util.Collection,java.lang.Object)>($r6, $r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.StandardTable$RowMap$EntrySet r0;
        java.util.Iterator $r6;
        com.google.common.collect.StandardTable $r3;
        java.util.Map $r4;
        com.google.common.collect.StandardTable$RowMap$EntrySet$1 $r1;
        java.util.Set $r5;
        com.google.common.collect.StandardTable$RowMap $r2;

        r0 := @this: com.google.common.collect.StandardTable$RowMap$EntrySet;

        $r2 = r0.<com.google.common.collect.StandardTable$RowMap$EntrySet: com.google.common.collect.StandardTable$RowMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$RowMap: com.google.common.collect.StandardTable this$0>;

        $r4 = $r3.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r1 = new com.google.common.collect.StandardTable$RowMap$EntrySet$1;

        specialinvoke $r1.<com.google.common.collect.StandardTable$RowMap$EntrySet$1: void <init>(com.google.common.collect.StandardTable$RowMap$EntrySet)>(r0);

        $r6 = staticinvoke <com.google.common.collect.Maps: java.util.Iterator asMapEntryIterator(java.util.Set,com.google.common.base.Function)>($r5, $r1);

        return $r6;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        java.util.Set $r6;
        com.google.common.collect.StandardTable$RowMap $r3;
        com.google.common.collect.StandardTable$RowMap$EntrySet r0;
        com.google.common.collect.StandardTable $r4;
        java.util.Map $r5;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$RowMap$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r1 == null goto label1;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.StandardTable$RowMap$EntrySet: com.google.common.collect.StandardTable$RowMap this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$RowMap: com.google.common.collect.StandardTable this$0>;

        $r5 = $r4.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        com.google.common.collect.StandardTable$RowMap$EntrySet r0;
        com.google.common.collect.StandardTable $r2;
        java.util.Map $r3;
        int $i0;
        com.google.common.collect.StandardTable$RowMap $r1;

        r0 := @this: com.google.common.collect.StandardTable$RowMap$EntrySet;

        $r1 = r0.<com.google.common.collect.StandardTable$RowMap$EntrySet: com.google.common.collect.StandardTable$RowMap this$1>;

        $r2 = $r1.<com.google.common.collect.StandardTable$RowMap: com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        return $i0;
    }
}
