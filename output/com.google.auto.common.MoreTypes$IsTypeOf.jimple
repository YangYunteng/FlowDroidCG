public final class com.google.auto.common.MoreTypes$IsTypeOf extends javax.lang.model.util.SimpleTypeVisitor6
{
    public final java.lang.Class clazz;

    public void <init>(java.lang.Class)
    {
        java.lang.Class $r1;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<javax.lang.model.util.SimpleTypeVisitor6: void <init>()>();

        r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz> = $r1;

        return;
    }

    public java.lang.Boolean defaultAction(javax.lang.model.type.TypeMirror, java.lang.Void)
    {
        java.lang.Void $r4;
        javax.lang.model.type.TypeMirror $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r5;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r3 := @parameter0: javax.lang.model.type.TypeMirror;

        $r4 := @parameter1: java.lang.Void;

        $r5 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be represented as a Class<?>.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;
    }

    public volatile java.lang.Object defaultAction(javax.lang.model.type.TypeMirror, java.lang.Object)
    {
        java.lang.Void $r4;
        javax.lang.model.type.TypeMirror $r2;
        java.lang.Boolean $r1;
        java.lang.Object $r3;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r2 := @parameter0: javax.lang.model.type.TypeMirror;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Void) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Boolean defaultAction(javax.lang.model.type.TypeMirror,java.lang.Void)>($r2, $r4);

        return $r1;
    }

    public java.lang.Boolean visitArray(javax.lang.model.type.ArrayType, java.lang.Void)
    {
        javax.lang.model.type.ArrayType $r1;
        java.lang.Void $r2;
        javax.lang.model.type.TypeMirror $r4;
        java.lang.Boolean $r5;
        java.lang.Class $r3;
        com.google.auto.common.MoreTypes$IsTypeOf r0;
        boolean $z0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r1 := @parameter0: javax.lang.model.type.ArrayType;

        $r2 := @parameter1: java.lang.Void;

        $r3 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $r4 = interfaceinvoke $r1.<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>();

        $z0 = staticinvoke <com.google.auto.common.MoreTypes: boolean isTypeOf(java.lang.Class,javax.lang.model.type.TypeMirror)>($r3, $r4);

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r5;
    }

    public volatile java.lang.Object visitArray(javax.lang.model.type.ArrayType, java.lang.Object)
    {
        javax.lang.model.type.ArrayType $r2;
        java.lang.Void $r4;
        java.lang.Boolean $r1;
        java.lang.Object $r3;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r2 := @parameter0: javax.lang.model.type.ArrayType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Void) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Boolean visitArray(javax.lang.model.type.ArrayType,java.lang.Void)>($r2, $r4);

        return $r1;
    }

    public java.lang.Boolean visitDeclared(javax.lang.model.type.DeclaredType, java.lang.Void)
    {
        java.lang.Void $r4;
        javax.lang.model.element.Element $r5;
        javax.lang.model.element.TypeElement $r6;
        java.lang.IllegalArgumentException $r2;
        com.google.auto.common.MoreTypes$IsTypeOf r0;
        javax.lang.model.type.DeclaredType $r3;
        java.lang.Boolean $r10;
        java.lang.StringBuilder $r1;
        java.lang.Class $r8;
        java.lang.String $r9;
        javax.lang.model.element.Name $r7;
        boolean $z0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r3 := @parameter0: javax.lang.model.type.DeclaredType;

        $r4 := @parameter1: java.lang.Void;

     label1:
        $r5 = interfaceinvoke $r3.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r6 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r5);

     label2:
        $r7 = interfaceinvoke $r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getCanonicalName()>();

        $z0 = interfaceinvoke $r7.<javax.lang.model.element.Name: boolean contentEquals(java.lang.CharSequence)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not represent a class or interface.");

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }

    public volatile java.lang.Object visitDeclared(javax.lang.model.type.DeclaredType, java.lang.Object)
    {
        java.lang.Void $r4;
        javax.lang.model.type.DeclaredType $r2;
        java.lang.Boolean $r1;
        java.lang.Object $r3;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r2 := @parameter0: javax.lang.model.type.DeclaredType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Void) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Boolean visitDeclared(javax.lang.model.type.DeclaredType,java.lang.Void)>($r2, $r4);

        return $r1;
    }

    public java.lang.Boolean visitNoType(javax.lang.model.type.NoType, java.lang.Void)
    {
        java.lang.Void $r2;
        javax.lang.model.type.NoType $r1;
        java.lang.IllegalArgumentException $r8;
        com.google.auto.common.MoreTypes$IsTypeOf r0;
        javax.lang.model.type.TypeKind $r3, $r4;
        java.lang.Boolean $r7;
        java.lang.Class $r5, $r6;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r1 := @parameter0: javax.lang.model.type.NoType;

        $r2 := @parameter1: java.lang.Void;

        $r3 = interfaceinvoke $r1.<javax.lang.model.type.NoType: javax.lang.model.type.TypeKind getKind()>();

        $r4 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        $z0 = virtualinvoke $r3.<javax.lang.model.type.TypeKind: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r6 = <java.lang.Void: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r7;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be represented as a Class<?>.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r8;
    }

    public volatile java.lang.Object visitNoType(javax.lang.model.type.NoType, java.lang.Object)
    {
        java.lang.Void $r4;
        javax.lang.model.type.NoType $r2;
        java.lang.Boolean $r1;
        java.lang.Object $r3;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r2 := @parameter0: javax.lang.model.type.NoType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Void) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Boolean visitNoType(javax.lang.model.type.NoType,java.lang.Void)>($r2, $r4);

        return $r1;
    }

    public java.lang.Boolean visitPrimitive(javax.lang.model.type.PrimitiveType, java.lang.Void)
    {
        java.lang.Void $r2;
        java.lang.IllegalArgumentException $r5;
        com.google.auto.common.MoreTypes$IsTypeOf r0;
        javax.lang.model.type.TypeKind $r4;
        int[] $r3;
        int $i0;
        javax.lang.model.type.PrimitiveType $r1;
        java.lang.Boolean $r10;
        java.lang.StringBuilder $r6;
        java.lang.Class $r8, $r9;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r1 := @parameter0: javax.lang.model.type.PrimitiveType;

        $r2 := @parameter1: java.lang.Void;

        $r3 = <com.google.auto.common.MoreTypes$2: int[] $SwitchMap$javax$lang$model$type$TypeKind>;

        $r4 = interfaceinvoke $r1.<javax.lang.model.type.PrimitiveType: javax.lang.model.type.TypeKind getKind()>();

        $i0 = virtualinvoke $r4.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label9;
            case 2: goto label8;
            case 3: goto label7;
            case 4: goto label6;
            case 5: goto label5;
            case 6: goto label4;
            case 7: goto label3;
            case 8: goto label2;
            default: goto label1;
        };

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be represented as a Class<?>.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label2:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Short: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label3:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label4:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label5:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label6:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label7:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Character: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label8:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Byte: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;

     label9:
        $r8 = r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Class clazz>;

        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r10;
    }

    public volatile java.lang.Object visitPrimitive(javax.lang.model.type.PrimitiveType, java.lang.Object)
    {
        java.lang.Void $r4;
        java.lang.Boolean $r1;
        javax.lang.model.type.PrimitiveType $r2;
        java.lang.Object $r3;
        com.google.auto.common.MoreTypes$IsTypeOf r0;

        r0 := @this: com.google.auto.common.MoreTypes$IsTypeOf;

        $r2 := @parameter0: javax.lang.model.type.PrimitiveType;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Void) $r3;

        $r1 = virtualinvoke r0.<com.google.auto.common.MoreTypes$IsTypeOf: java.lang.Boolean visitPrimitive(javax.lang.model.type.PrimitiveType,java.lang.Void)>($r2, $r4);

        return $r1;
    }
}
