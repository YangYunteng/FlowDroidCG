public abstract class androidx.lifecycle.ViewModel extends java.lang.Object
{
    public final java.util.Map mBagOfTags;
    public volatile boolean mCleared;

    public void <init>()
    {
        androidx.lifecycle.ViewModel r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.lifecycle.ViewModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags> = $r1;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 0;

        return;
    }

    public static void closeWithRuntimeException(java.lang.Object)
    {
        java.io.Closeable $r1;
        java.lang.Object $r0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof java.io.Closeable;

        if $z0 == 0 goto label4;

        $r1 = (java.io.Closeable) $r0;

     label1:
        interfaceinvoke $r1.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final void clear()
    {
        java.lang.Throwable $r6;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        androidx.lifecycle.ViewModel r0;
        java.util.Map $r1, $r2;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: androidx.lifecycle.ViewModel;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 1;

        $r1 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        if $r1 == null goto label7;

        entermonitor $r1;

     label1:
        $r2 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>($r5);

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

     label7:
        virtualinvoke r0.<androidx.lifecycle.ViewModel: void onCleared()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.Object getTag(java.lang.String)
    {
        java.lang.Throwable $r5;
        java.util.Map $r1, $r2;
        androidx.lifecycle.ViewModel r0;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: androidx.lifecycle.ViewModel;

        $r4 := @parameter0: java.lang.String;

        $r1 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        if $r1 != null goto label1;

        return null;

     label1:
        entermonitor $r1;

     label2:
        $r2 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onCleared()
    {
        androidx.lifecycle.ViewModel r0;

        r0 := @this: androidx.lifecycle.ViewModel;

        return;
    }

    public java.lang.Object setTagIfAbsent(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r6;
        androidx.lifecycle.ViewModel r0;
        java.util.Map $r1, $r2;
        java.lang.Object $r3, $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: androidx.lifecycle.ViewModel;

        $r4 := @parameter0: java.lang.String;

        $r5 := @parameter1: java.lang.Object;

        $r1 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        entermonitor $r1;

     label1:
        $r2 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        if $r3 != null goto label2;

        $r2 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label2:
        exitmonitor $r1;

     label3:
        if $r3 != null goto label4;

        goto label5;

     label4:
        $r5 = $r3;

     label5:
        $z0 = r0.<androidx.lifecycle.ViewModel: boolean mCleared>;

        if $z0 == 0 goto label9;

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>($r5);

        return $r5;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor $r1;

     label8:
        throw $r6;

     label9:
        return $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
