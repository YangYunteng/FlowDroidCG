public class c.c.a.n.c extends java.lang.Object
{

    public static java.lang.String a(boolean)
    {
        java.util.Iterator $r2, $r5;
        java.util.Enumeration $r0;
        java.net.NetworkInterface $r4;
        java.lang.Exception $r8;
        java.util.ArrayList $r1;
        java.net.InetAddress $r6;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r9;
        java.lang.String $r7;
        boolean $z0, $z1;

        $z0 := @parameter0: boolean;

     label01:
        $r0 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

        $r1 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r0);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z1 == 0 goto label21;

     label04:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.net.NetworkInterface) $r3;

        $r0 = virtualinvoke $r4.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

        $r1 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r0);

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z1 == 0 goto label02;

     label07:
        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.net.InetAddress) $r3;

        $z1 = virtualinvoke $r6.<java.net.InetAddress: boolean isLoopbackAddress()>();

     label08:
        if $z1 != 0 goto label05;

     label09:
        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(58);

     label10:
        if $i0 >= 0 goto label11;

        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        if $z0 == 0 goto label13;

        if $z1 == 0 goto label05;

        return $r7;

     label13:
        if $z1 != 0 goto label05;

     label14:
        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(37);

     label15:
        if $i0 >= 0 goto label18;

     label16:
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase()>();

     label17:
        return $r7;

     label18:
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase()>();

     label19:
        return $r7;

     label20:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception :- ");

        $r7 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnalyticsTypes", $r7);

     label21:
        return " ";

        catch java.lang.Exception from label01 to label03 with label20;
        catch java.lang.Exception from label04 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label09 to label10 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
    }

    public static void a(android.content.Context)
    {
        android.content.Context $r0;
        c.c.a.n.a $r1;
        com.caremark.caremark.synclib.helper.AnalyticsListener $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.caremark.caremark.synclib.helper.AnalyticsListener: com.caremark.caremark.synclib.helper.AnalyticsListener getInstance()>();

        $r1 = new c.c.a.n.a;

        specialinvoke $r1.<c.c.a.n.a: void <init>(android.content.Context)>($r0);

        virtualinvoke $r2.<com.caremark.caremark.synclib.helper.AnalyticsListener: void setAnalyticsCaller(com.caremark.caremark.synclib.helper.AnalyticsCaller)>($r1);

        return;
    }

    public static void a(java.lang.String, c.c.a.n.c$a)
    {
        int[] $r2;
        int $i0;
        java.lang.String $r0;
        c.c.a.n.c$a $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: c.c.a.n.c$a;

        $r2 = <c.c.a.n.b: int[] a>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        if $i0 == 1 goto label1;

        if $i0 == 2 goto label1;

        if $i0 == 3 goto label1;

        if $i0 == 4 goto label1;

     label1:
        return;
    }

    public static void a(java.lang.String, java.util.HashMap, c.c.a.n.c$a)
    {
        int[] $r3;
        int $i0;
        java.util.HashMap $r0;
        java.lang.String $r1;
        c.c.a.n.c$a $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.HashMap;

        $r2 := @parameter2: c.c.a.n.c$a;

        $r3 = <c.c.a.n.b: int[] a>;

        $i0 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $r3[$i0];

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label1;

        return;

     label1:
        staticinvoke <c.c.a.n.a.h: void a(java.lang.String,java.util.HashMap)>($r1, $r0);

     label2:
        return;
    }

    public static void a(java.util.HashMap, java.util.HashMap, c.c.a.n.c$a)
    {
        int[] $r3;
        int $i0;
        java.util.HashMap $r0, $r1;
        c.c.a.n.c$a $r2;

        $r0 := @parameter0: java.util.HashMap;

        $r1 := @parameter1: java.util.HashMap;

        $r2 := @parameter2: c.c.a.n.c$a;

        $r3 = <c.c.a.n.b: int[] a>;

        $i0 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $r3[$i0];

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label2;

        if $i0 == 5 goto label1;

        return;

     label1:
        staticinvoke <c.c.a.n.b.c: void c(java.util.HashMap,java.util.HashMap)>($r0, $r1);

     label2:
        return;
    }

    public static java.lang.String b(android.content.Context)
    {
        android.location.Address $r13;
        android.content.Context $r0;
        android.location.Criteria $r6;
        int $i0;
        java.lang.SecurityException $r10;
        java.lang.String $r7, $r14, $r15, $r16, $r19;
        c.c.a.d.i $r1;
        boolean $z0;
        double $d0, $d1;
        java.io.IOException $r18;
        android.location.Geocoder $r11;
        java.lang.Exception $r8, $r17, $r20;
        java.util.List $r12;
        java.lang.Object $r4;
        java.lang.StringBuilder $r9;
        android.location.Location $r2, $r3;
        android.location.LocationManager $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <c.c.a.d.i: c.c.a.d.i s()>();

        $r2 = virtualinvoke $r1.<c.c.a.d.i: android.location.Location a(android.content.Context)>($r0);

        $r3 = $r2;

        if $r2 != null goto label10;

     label01:
        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

     label02:
        $r5 = (android.location.LocationManager) $r4;

     label03:
        $r6 = new android.location.Criteria;

     label04:
        specialinvoke $r6.<android.location.Criteria: void <init>()>();

        virtualinvoke $r6.<android.location.Criteria: void setAccuracy(int)>(2);

        $r7 = virtualinvoke $r5.<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>($r6, 1);

        $z0 = staticinvoke <com.caremark.caremark.util.PermissionUtils: boolean hasPermission(android.content.Context,java.lang.String)>($r0, "android.permission.ACCESS_FINE_LOCATION");

     label05:
        if $z0 == 0 goto label10;

     label06:
        $r2 = virtualinvoke $r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r7);

     label07:
        $r3 = $r2;

        goto label10;

     label08:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception :- ");

        $r7 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnalyticsTypes", $r7);

        goto label10;

     label09:
        $r10 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception :- ");

        $r7 = virtualinvoke $r10.<java.lang.SecurityException: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnalyticsTypes", $r7);

        virtualinvoke $r10.<java.lang.SecurityException: void printStackTrace()>();

     label10:
        $r7 = "";

        if $r3 == null goto label35;

        $r11 = new android.location.Geocoder;

     label11:
        specialinvoke $r11.<android.location.Geocoder: void <init>(android.content.Context)>($r0);

        $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>();

        $r12 = virtualinvoke $r11.<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>($d0, $d1, 1);

     label12:
        if $r12 == null goto label35;

     label13:
        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

     label14:
        if $i0 <= 0 goto label35;

     label15:
        $r4 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

     label16:
        $r13 = (android.location.Address) $r4;

     label17:
        $r14 = virtualinvoke $r13.<android.location.Address: java.lang.String getPostalCode()>();

     label18:
        if $r14 == null goto label23;

     label19:
        $r14 = virtualinvoke $r13.<android.location.Address: java.lang.String getAdminArea()>();

     label20:
        $r15 = $r14;

     label21:
        $r14 = staticinvoke <c.c.a.n.a.i: java.lang.String a(java.lang.String)>($r14);

     label22:
        $r15 = $r14;

        goto label24;

     label23:
        $r15 = "";

     label24:
        $r14 = virtualinvoke $r13.<android.location.Address: java.lang.String getAdminArea()>();

     label25:
        if $r14 == null goto label34;

     label26:
        $r14 = virtualinvoke $r13.<android.location.Address: java.lang.String getLocality()>();

     label27:
        $r16 = $r14;

        goto label36;

     label28:
        $r17 := @caughtexception;

        goto label31;

     label29:
        $r18 := @caughtexception;

        goto label33;

     label30:
        $r17 := @caughtexception;

        $r15 = "";

     label31:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception :- ");

        $r14 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnalyticsTypes", $r14);

        goto label34;

     label32:
        $r18 := @caughtexception;

        $r15 = "";

     label33:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException :- ");

        $r14 = virtualinvoke $r18.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnalyticsTypes", $r14);

     label34:
        $r16 = "";

        goto label36;

     label35:
        $r16 = "";

        $r15 = "";

     label36:
        $r14 = staticinvoke <c.c.a.n.c: java.lang.String a(boolean)>(1);

        if $r15 != null goto label38;

     label37:
        $r15 = "";

        goto label42;

     label38:
        $r19 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("");

     label39:
        if $z0 == 0 goto label40;

        goto label37;

     label40:
        $r9 = new java.lang.StringBuilder;

     label41:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label42:
        if $r16 != null goto label43;

        goto label47;

     label43:
        $r19 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("");

     label44:
        if $z0 == 0 goto label45;

        goto label47;

     label45:
        $r9 = new java.lang.StringBuilder;

     label46:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label47:
        $r9 = new java.lang.StringBuilder;

     label48:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r14);

     label49:
        if $z0 != 0 goto label50;

        $r15 = $r14;

        goto label51;

     label50:
        $r15 = " ";

     label51:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label52:
        return $r15;

     label53:
        $r20 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception :- ");

        $r15 = virtualinvoke $r20.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnalyticsTypes", $r15);

        return $r14;

        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.SecurityException from label04 to label05 with label09;
        catch java.lang.SecurityException from label06 to label07 with label09;
        catch java.lang.Exception from label01 to label03 with label08;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label32;
        catch java.io.IOException from label13 to label14 with label32;
        catch java.io.IOException from label15 to label16 with label32;
        catch java.io.IOException from label17 to label18 with label32;
        catch java.io.IOException from label19 to label20 with label32;
        catch java.lang.Exception from label11 to label12 with label30;
        catch java.lang.Exception from label13 to label14 with label30;
        catch java.lang.Exception from label15 to label18 with label30;
        catch java.lang.Exception from label19 to label20 with label30;
        catch java.io.IOException from label21 to label22 with label29;
        catch java.io.IOException from label24 to label25 with label29;
        catch java.io.IOException from label26 to label27 with label29;
        catch java.lang.Exception from label21 to label22 with label28;
        catch java.lang.Exception from label24 to label25 with label28;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Exception from label38 to label39 with label53;
        catch java.lang.Exception from label41 to label42 with label53;
        catch java.lang.Exception from label43 to label44 with label53;
        catch java.lang.Exception from label46 to label47 with label53;
        catch java.lang.Exception from label48 to label49 with label53;
        catch java.lang.Exception from label51 to label52 with label53;
    }

    public static void b(java.lang.String, c.c.a.n.c$a)
    {
        int[] $r2;
        int $i0;
        java.lang.String $r0;
        c.c.a.n.c$a $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: c.c.a.n.c$a;

        $r2 = <c.c.a.n.b: int[] a>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        if $i0 == 1 goto label1;

        if $i0 == 2 goto label1;

        if $i0 == 3 goto label1;

        if $i0 == 4 goto label1;

     label1:
        return;
    }

    public static void b(java.lang.String, java.util.HashMap, c.c.a.n.c$a)
    {
        int[] $r3;
        int $i0;
        java.util.HashMap $r2;
        java.lang.String $r1;
        c.c.a.n.c$a $r0;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.HashMap;

        $r0 := @parameter2: c.c.a.n.c$a;

        $r3 = <c.c.a.n.b: int[] a>;

        $i0 = virtualinvoke $r0.<java.lang.Enum: int ordinal()>();

        $i0 = $r3[$i0];

        if $i0 == 1 goto label1;

        if $i0 == 2 goto label1;

        if $i0 == 3 goto label1;

        if $i0 == 4 goto label1;

     label1:
        return;
    }

    public static void c(java.lang.String, java.util.HashMap, c.c.a.n.c$a)
    {
        int[] $r3;
        int $i0;
        java.util.HashMap $r0;
        java.lang.String $r1;
        c.c.a.n.c$a $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.HashMap;

        $r2 := @parameter2: c.c.a.n.c$a;

        $r3 = <c.c.a.n.b: int[] a>;

        $i0 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $r3[$i0];

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label1;

        return;

     label1:
        staticinvoke <c.c.a.n.a.h: void b(java.lang.String,java.util.HashMap)>($r1, $r0);

     label2:
        return;
    }
}
