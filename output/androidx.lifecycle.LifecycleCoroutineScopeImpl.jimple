public final class androidx.lifecycle.LifecycleCoroutineScopeImpl extends androidx.lifecycle.LifecycleCoroutineScope implements androidx.lifecycle.LifecycleEventObserver
{
    public final i.c.h coroutineContext;
    public final androidx.lifecycle.Lifecycle lifecycle;

    public void <init>(androidx.lifecycle.Lifecycle, i.c.h)
    {
        androidx.lifecycle.Lifecycle $r1;
        androidx.lifecycle.Lifecycle$State $r3, $r4;
        i.c.h $r2;
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle;

        $r2 := @parameter1: i.c.h;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "lifecycle");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "coroutineContext");

        specialinvoke r0.<androidx.lifecycle.LifecycleCoroutineScope: void <init>()>();

        r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle lifecycle> = $r1;

        r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: i.c.h coroutineContext> = $r2;

        $r1 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release()>();

        $r3 = virtualinvoke $r1.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r3 != $r4 goto label1;

        $r2 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: i.c.h getCoroutineContext()>();

        staticinvoke <j.a.Z: void a(i.c.h,java.util.concurrent.CancellationException,int,java.lang.Object)>($r2, null, 1, null);

     label1:
        return;
    }

    public i.c.h getCoroutineContext()
    {
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        i.c.h r1;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        r1 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: i.c.h coroutineContext>;

        return r1;
    }

    public androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release()
    {
        androidx.lifecycle.Lifecycle r1;
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        r1 = r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle lifecycle>;

        return r1;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        i.c.h $r6;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State $r4, $r5;
        androidx.lifecycle.LifecycleOwner $r1;
        int $i0;
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "source");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "event");

        $r3 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release()>();

        $r4 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        $i0 = virtualinvoke $r4.<java.lang.Enum: int compareTo(java.lang.Enum)>($r5);

        if $i0 > 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release()>();

        virtualinvoke $r3.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r0);

        $r6 = virtualinvoke r0.<androidx.lifecycle.LifecycleCoroutineScopeImpl: i.c.h getCoroutineContext()>();

        staticinvoke <j.a.Z: void a(i.c.h,java.util.concurrent.CancellationException,int,java.lang.Object)>($r6, null, 1, null);

     label1:
        return;
    }

    public final void register()
    {
        j.a.ga $r2;
        androidx.lifecycle.LifecycleCoroutineScopeImpl r0;
        androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 $r1;

        r0 := @this: androidx.lifecycle.LifecycleCoroutineScopeImpl;

        $r2 = staticinvoke <j.a.H: j.a.ga b()>();

        $r2 = virtualinvoke $r2.<j.a.ga: j.a.ga m()>();

        $r1 = new androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1;

        specialinvoke $r1.<androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: void <init>(androidx.lifecycle.LifecycleCoroutineScopeImpl,i.c.e)>(r0, null);

        staticinvoke <j.a.c: j.a.W a(j.a.v,i.c.h,j.a.x,i.f.a.p,int,java.lang.Object)>(r0, $r2, null, $r1, 2, null);

        return;
    }
}
