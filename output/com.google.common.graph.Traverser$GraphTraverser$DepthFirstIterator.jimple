public final class com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator extends com.google.common.collect.AbstractIterator
{
    public final com.google.common.graph.Traverser$Order order;
    public final java.util.Deque stack;
    public final com.google.common.graph.Traverser$GraphTraverser this$0;
    public final java.util.Set visited;

    public void <init>(com.google.common.graph.Traverser$GraphTraverser, java.lang.Object, com.google.common.graph.Traverser$Order)
    {
        com.google.common.graph.Traverser$GraphTraverser $r3;
        java.util.Deque $r7;
        com.google.common.graph.Traverser$Order $r1;
        com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors $r2;
        java.util.HashSet $r6;
        java.lang.Object $r4;
        com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator r0;
        java.util.ArrayDeque $r5;

        r0 := @this: com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator;

        $r3 := @parameter0: com.google.common.graph.Traverser$GraphTraverser;

        $r4 := @parameter1: java.lang.Object;

        $r1 := @parameter2: com.google.common.graph.Traverser$Order;

        r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$GraphTraverser this$0> = $r3;

        specialinvoke r0.<com.google.common.collect.AbstractIterator: void <init>()>();

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Deque stack> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Set visited> = $r6;

        $r7 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Deque stack>;

        $r2 = virtualinvoke r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors withSuccessors(java.lang.Object)>($r4);

        interfaceinvoke $r7.<java.util.Deque: void push(java.lang.Object)>($r2);

        r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$Order order> = $r1;

        return;
    }

    public java.lang.Object computeNext()
    {
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.Deque $r1;
        com.google.common.graph.Traverser$Order $r6, $r7;
        com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors $r3, $r8;
        java.lang.Object $r2;
        com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator;

     label1:
        $r1 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Deque stack>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()>();

        return $r2;

     label2:
        $r1 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Deque stack>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object getFirst()>();

        $r3 = (com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors) $r2;

        $r4 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Set visited>;

        $r2 = $r3.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors: java.lang.Object node>;

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r5 = $r3.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors: java.util.Iterator successorIterator>;

        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        $z0 = 1;

        $z2 = $z2 ^ 1;

        if $z1 == 0 goto label3;

        $r6 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$Order order>;

        $r7 = <com.google.common.graph.Traverser$Order: com.google.common.graph.Traverser$Order PREORDER>;

        if $r6 == $r7 goto label5;

     label3:
        if $z2 == 0 goto label4;

        $r6 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$Order order>;

        $r7 = <com.google.common.graph.Traverser$Order: com.google.common.graph.Traverser$Order POSTORDER>;

        if $r6 != $r7 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        if $z2 == 0 goto label6;

        $r1 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Deque stack>;

        interfaceinvoke $r1.<java.util.Deque: java.lang.Object pop()>();

        goto label7;

     label6:
        $r5 = $r3.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors: java.util.Iterator successorIterator>;

        $r2 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r4 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Set visited>;

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z1 != 0 goto label7;

        $r1 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: java.util.Deque stack>;

        $r8 = virtualinvoke r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors withSuccessors(java.lang.Object)>($r2);

        interfaceinvoke $r1.<java.util.Deque: void push(java.lang.Object)>($r8);

     label7:
        if $z0 == 0 goto label1;

        $r2 = $r3.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors: java.lang.Object node>;

        return $r2;
    }

    public com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors withSuccessors(java.lang.Object)
    {
        com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors $r2;
        com.google.common.graph.Traverser$GraphTraverser $r3;
        java.lang.Object $r1;
        com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator r0;
        com.google.common.graph.SuccessorsFunction $r4;
        java.lang.Iterable $r5;

        r0 := @this: com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors;

        $r3 = r0.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator: com.google.common.graph.Traverser$GraphTraverser this$0>;

        $r4 = staticinvoke <com.google.common.graph.Traverser$GraphTraverser: com.google.common.graph.SuccessorsFunction access$100(com.google.common.graph.Traverser$GraphTraverser)>($r3);

        $r5 = interfaceinvoke $r4.<com.google.common.graph.SuccessorsFunction: java.lang.Iterable successors(java.lang.Object)>($r1);

        specialinvoke $r2.<com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors: void <init>(com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator,java.lang.Object,java.lang.Iterable)>(r0, $r1, $r5);

        return $r2;
    }
}
