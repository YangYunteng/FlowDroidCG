public class com.google.android.material.transformation.FabTransformationScrimBehavior extends com.google.android.material.transformation.ExpandableTransformationBehavior
{
    public static final long COLLAPSE_DELAY;
    public static final long COLLAPSE_DURATION;
    public static final long EXPAND_DELAY;
    public static final long EXPAND_DURATION;
    public final com.google.android.material.animation.MotionTiming collapseTiming;
    public final com.google.android.material.animation.MotionTiming expandTiming;

    public void <init>()
    {
        com.google.android.material.transformation.FabTransformationScrimBehavior r0;
        com.google.android.material.animation.MotionTiming $r1;

        r0 := @this: com.google.android.material.transformation.FabTransformationScrimBehavior;

        specialinvoke r0.<com.google.android.material.transformation.ExpandableTransformationBehavior: void <init>()>();

        $r1 = new com.google.android.material.animation.MotionTiming;

        specialinvoke $r1.<com.google.android.material.animation.MotionTiming: void <init>(long,long)>(75L, 150L);

        r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming expandTiming> = $r1;

        $r1 = new com.google.android.material.animation.MotionTiming;

        specialinvoke $r1.<com.google.android.material.animation.MotionTiming: void <init>(long,long)>(0L, 150L);

        r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming collapseTiming> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        com.google.android.material.transformation.FabTransformationScrimBehavior r0;
        android.util.AttributeSet $r1;
        com.google.android.material.animation.MotionTiming $r3;

        r0 := @this: com.google.android.material.transformation.FabTransformationScrimBehavior;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.google.android.material.transformation.ExpandableTransformationBehavior: void <init>(android.content.Context,android.util.AttributeSet)>($r2, $r1);

        $r3 = new com.google.android.material.animation.MotionTiming;

        specialinvoke $r3.<com.google.android.material.animation.MotionTiming: void <init>(long,long)>(75L, 150L);

        r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming expandTiming> = $r3;

        $r3 = new com.google.android.material.animation.MotionTiming;

        specialinvoke $r3.<com.google.android.material.animation.MotionTiming: void <init>(long,long)>(0L, 150L);

        r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming collapseTiming> = $r3;

        return;
    }

    private void createScrimAnimation(android.view.View, boolean, boolean, java.util.List, java.util.List)
    {
        android.animation.ObjectAnimator $r7;
        float[] $r6;
        android.util.Property $r5;
        com.google.android.material.transformation.FabTransformationScrimBehavior r0;
        java.util.List $r1, $r3;
        android.view.View $r2;
        com.google.android.material.animation.MotionTiming $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.transformation.FabTransformationScrimBehavior;

        $r2 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 := @parameter3: java.util.List;

        $r3 := @parameter4: java.util.List;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming expandTiming>;

        goto label2;

     label1:
        $r4 = r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: com.google.android.material.animation.MotionTiming collapseTiming>;

     label2:
        if $z0 == 0 goto label4;

        if $z1 != 0 goto label3;

        virtualinvoke $r2.<android.view.View: void setAlpha(float)>(0.0F);

     label3:
        $r5 = <android.view.View: android.util.Property ALPHA>;

        $r6 = newarray (float)[1];

        $r6[0] = 1.0F;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r2, $r5, $r6);

        goto label5;

     label4:
        $r5 = <android.view.View: android.util.Property ALPHA>;

        $r6 = newarray (float)[1];

        $r6[0] = 0.0F;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r2, $r5, $r6);

     label5:
        virtualinvoke $r4.<com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)>($r7);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    public boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        com.google.android.material.transformation.FabTransformationScrimBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        android.view.View $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.transformation.FabTransformationScrimBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $z0 = $r2 instanceof com.google.android.material.floatingactionbutton.FloatingActionButton;

        return $z0;
    }

    public android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View, android.view.View, boolean, boolean)
    {
        java.util.ArrayList $r2, $r4;
        com.google.android.material.transformation.FabTransformationScrimBehavior$1 $r6;
        com.google.android.material.transformation.FabTransformationScrimBehavior r0;
        android.view.View $r1, $r3;
        android.animation.AnimatorSet $r5;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.transformation.FabTransformationScrimBehavior;

        $r3 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.google.android.material.transformation.FabTransformationScrimBehavior: void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List)>($r1, $z0, $z1, $r4, $r2);

        $r5 = new android.animation.AnimatorSet;

        specialinvoke $r5.<android.animation.AnimatorSet: void <init>()>();

        staticinvoke <com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>($r5, $r4);

        $r6 = new com.google.android.material.transformation.FabTransformationScrimBehavior$1;

        specialinvoke $r6.<com.google.android.material.transformation.FabTransformationScrimBehavior$1: void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View)>(r0, $z0, $r1);

        virtualinvoke $r5.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        return $r5;
    }

    public boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        com.google.android.material.transformation.FabTransformationScrimBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        android.view.MotionEvent $r2;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.transformation.FabTransformationScrimBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.MotionEvent;

        $z0 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r3, $r1, $r2);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.google.android.material.transformation.FabTransformationScrimBehavior: long EXPAND_DURATION> = 150L;

        <com.google.android.material.transformation.FabTransformationScrimBehavior: long EXPAND_DELAY> = 75L;

        <com.google.android.material.transformation.FabTransformationScrimBehavior: long COLLAPSE_DURATION> = 150L;

        <com.google.android.material.transformation.FabTransformationScrimBehavior: long COLLAPSE_DELAY> = 0L;

        return;
    }
}
