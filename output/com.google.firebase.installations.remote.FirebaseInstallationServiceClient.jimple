public class com.google.firebase.installations.remote.FirebaseInstallationServiceClient extends java.lang.Object
{
    public static final java.lang.String ACCEPT_HEADER_KEY;
    public static final java.lang.String API_KEY_HEADER;
    public static final java.lang.String CACHE_CONTROL_DIRECTIVE;
    public static final java.lang.String CACHE_CONTROL_HEADER_KEY;
    public static final java.lang.String CONTENT_ENCODING_HEADER_KEY;
    public static final java.lang.String CONTENT_TYPE_HEADER_KEY;
    public static final java.lang.String CREATE_REQUEST_RESOURCE_NAME_FORMAT;
    public static final java.lang.String DELETE_REQUEST_RESOURCE_NAME_FORMAT;
    public static final java.util.regex.Pattern EXPIRATION_TIMESTAMP_PATTERN;
    public static final java.lang.String FIREBASE_INSTALLATIONS_API_DOMAIN;
    public static final java.lang.String FIREBASE_INSTALLATIONS_API_VERSION;
    public static final java.lang.String FIREBASE_INSTALLATIONS_ID_HEARTBEAT_TAG;
    public static final java.lang.String FIREBASE_INSTALLATION_AUTH_VERSION;
    public static final java.lang.String FIS_TAG;
    public static final java.lang.String GENERATE_AUTH_TOKEN_REQUEST_RESOURCE_NAME_FORMAT;
    public static final java.lang.String GZIP_CONTENT_ENCODING;
    public static final java.lang.String HEART_BEAT_HEADER;
    public static final java.lang.String JSON_CONTENT_TYPE;
    public static final int MAX_RETRIES;
    public static final int NETWORK_TIMEOUT_MILLIS;
    public static final java.lang.String PARSING_EXPIRATION_TIME_ERROR_MESSAGE;
    public static final java.lang.String SDK_VERSION_PREFIX;
    public static final java.lang.String USER_AGENT_HEADER;
    public static final java.nio.charset.Charset UTF_8;
    public static final java.lang.String X_ANDROID_CERT_HEADER_KEY;
    public static final java.lang.String X_ANDROID_IID_MIGRATION_KEY;
    public static final java.lang.String X_ANDROID_PACKAGE_HEADER_KEY;
    public final android.content.Context context;
    public final com.google.firebase.heartbeatinfo.HeartBeatInfo heartbeatInfo;
    public final com.google.firebase.platforminfo.UserAgentPublisher userAgentPublisher;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.nio.charset.Charset $r1;

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String X_ANDROID_PACKAGE_HEADER_KEY> = "X-Android-Package";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String X_ANDROID_IID_MIGRATION_KEY> = "x-goog-fis-android-iid-migration-auth";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String X_ANDROID_CERT_HEADER_KEY> = "X-Android-Cert";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String USER_AGENT_HEADER> = "x-firebase-client";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String SDK_VERSION_PREFIX> = "a:";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String PARSING_EXPIRATION_TIME_ERROR_MESSAGE> = "Invalid Expiration Timestamp.";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: int NETWORK_TIMEOUT_MILLIS> = 10000;

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: int MAX_RETRIES> = 1;

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String JSON_CONTENT_TYPE> = "application/json";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String HEART_BEAT_HEADER> = "x-firebase-client-log-type";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String GZIP_CONTENT_ENCODING> = "gzip";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String GENERATE_AUTH_TOKEN_REQUEST_RESOURCE_NAME_FORMAT> = "projects/%s/installations/%s/authTokens:generate";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIS_TAG> = "Firebase-Installations";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATION_AUTH_VERSION> = "FIS_v2";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATIONS_ID_HEARTBEAT_TAG> = "fire-installations-id";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATIONS_API_VERSION> = "v1";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATIONS_API_DOMAIN> = "firebaseinstallations.googleapis.com";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String DELETE_REQUEST_RESOURCE_NAME_FORMAT> = "projects/%s/installations/%s";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CREATE_REQUEST_RESOURCE_NAME_FORMAT> = "projects/%s/installations";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CONTENT_TYPE_HEADER_KEY> = "Content-Type";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CONTENT_ENCODING_HEADER_KEY> = "Content-Encoding";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CACHE_CONTROL_HEADER_KEY> = "Cache-Control";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CACHE_CONTROL_DIRECTIVE> = "no-cache";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String API_KEY_HEADER> = "x-goog-api-key";

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String ACCEPT_HEADER_KEY> = "Accept";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9]+s");

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.util.regex.Pattern EXPIRATION_TIMESTAMP_PATTERN> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.nio.charset.Charset UTF_8> = $r1;

        return;
    }

    public void <init>(android.content.Context, com.google.firebase.platforminfo.UserAgentPublisher, com.google.firebase.heartbeatinfo.HeartBeatInfo)
    {
        android.content.Context $r1;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        com.google.firebase.platforminfo.UserAgentPublisher $r2;
        com.google.firebase.heartbeatinfo.HeartBeatInfo $r3;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.firebase.platforminfo.UserAgentPublisher;

        $r3 := @parameter2: com.google.firebase.heartbeatinfo.HeartBeatInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context> = $r1;

        r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.platforminfo.UserAgentPublisher userAgentPublisher> = $r2;

        r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.heartbeatinfo.HeartBeatInfo heartbeatInfo> = $r3;

        return;
    }

    public static java.lang.String availableFirebaseOptions(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        $r0 = "";

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r3[2] = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Firebase options used while communicating with Firebase server APIs: %s, %s%s", $r3);

        return $r0;
    }

    public static org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        org.json.JSONException $r3;
        org.json.JSONObject $r0;
        java.lang.String $r1, $r2;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = new org.json.JSONObject;

     label1:
        specialinvoke $r0.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("fid", $r1);

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appId", $r2);

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("authVersion", "FIS_v2");

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sdkVersion", "a:16.3.3");

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static org.json.JSONObject buildGenerateAuthTokenRequestBody()
    {
        java.lang.IllegalStateException $r3;
        org.json.JSONException $r2;
        org.json.JSONObject $r0, $r1;

        $r0 = new org.json.JSONObject;

     label1:
        specialinvoke $r0.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sdkVersion", "a:16.3.3");

     label2:
        $r1 = new org.json.JSONObject;

     label3:
        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("installation", $r0);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    private java.lang.String getFingerprintHashForPackage()
    {
        android.content.Context $r1, $r2;
        byte[] $r4;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r1 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context>;

        $r2 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context>;

     label1:
        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = staticinvoke <com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)>($r1, $r3);

     label2:
        if $r4 != null goto label7;

        $r5 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get fingerprint hash for package: ");

     label4:
        $r1 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context>;

     label5:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r3);

     label6:
        return null;

     label7:
        $r3 = staticinvoke <com.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[],boolean)>($r4, 0);

     label8:
        return $r3;

     label9:
        $r6 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such package: ");

        $r1 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r3, $r6);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label7 to label8 with label9;
    }

    private java.net.URL getFullyQualifiedRequestUri(java.lang.String)
    {
        java.lang.Object[] $r3;
        com.google.firebase.installations.FirebaseInstallationsException$Status $r6;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        java.net.MalformedURLException $r4;
        java.net.URL $r2;
        java.lang.String $r1;
        com.google.firebase.installations.FirebaseInstallationsException $r5;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.net.URL;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "firebaseinstallations.googleapis.com";

        $r3[1] = "v1";

        $r3[2] = $r1;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("https://%s/%s/%s", $r3);

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.google.firebase.installations.FirebaseInstallationsException;

        $r1 = virtualinvoke $r4.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r6 = <com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE>;

        specialinvoke $r5.<com.google.firebase.installations.FirebaseInstallationsException: void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)>($r1, $r6);

        throw $r5;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public static byte[] getJsonBytes(org.json.JSONObject)
    {
        byte[] $r2;
        org.json.JSONObject $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        return $r2;
    }

    public static void logBadConfigError()
    {
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Firebase-Installations", "Firebase Installations can not communicate with Firebase server APIs due to invalid configuration. Please update your Firebase initialization process and set valid Firebase options (API key, Project ID, Application ID) when initializing Firebase.");

        return;
    }

    public static void logFisCommunicationError(java.net.HttpURLConnection, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r3;
        java.lang.String $r0, $r1, $r2, $r4;
        boolean $z0;

        $r3 := @parameter0: java.net.HttpURLConnection;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r4 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String readErrorResponse(java.net.HttpURLConnection)>($r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Firebase-Installations", $r4);

        $r0 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String availableFirebaseOptions(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Firebase-Installations", $r0);

     label1:
        return;
    }

    private java.net.HttpURLConnection openHttpURLConnection(java.net.URL, java.lang.String)
    {
        java.net.HttpURLConnection $r5;
        android.content.Context $r6;
        java.net.URL $r2;
        java.io.IOException $r1;
        com.google.firebase.platforminfo.UserAgentPublisher $r9;
        com.google.firebase.heartbeatinfo.HeartBeatInfo $r8;
        com.google.firebase.installations.FirebaseInstallationsException $r12;
        com.google.firebase.installations.FirebaseInstallationsException$Status $r13;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        java.net.URLConnection $r4;
        int $i0;
        java.lang.String $r3, $r7;
        com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat $r10, $r11;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r2 := @parameter0: java.net.URL;

        $r3 := @parameter1: java.lang.String;

     label1:
        $r4 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label2:
        $r5 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r5.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke $r5.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke $r5.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json");

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Accept", "application/json");

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip");

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Cache-Control", "no-cache");

        $r6 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("X-Android-Package", $r7);

        $r8 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.heartbeatinfo.HeartBeatInfo heartbeatInfo>;

        if $r8 == null goto label3;

        $r9 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.platforminfo.UserAgentPublisher userAgentPublisher>;

        if $r9 == null goto label3;

        $r10 = interfaceinvoke $r8.<com.google.firebase.heartbeatinfo.HeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)>("fire-installations-id");

        $r11 = <com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat NONE>;

        if $r10 == $r11 goto label3;

        $r9 = r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.platforminfo.UserAgentPublisher userAgentPublisher>;

        $r7 = interfaceinvoke $r9.<com.google.firebase.platforminfo.UserAgentPublisher: java.lang.String getUserAgent()>();

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("x-firebase-client", $r7);

        $i0 = virtualinvoke $r10.<com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("x-firebase-client-log-type", $r7);

     label3:
        $r7 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()>();

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("X-Android-Cert", $r7);

        virtualinvoke $r5.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("x-goog-api-key", $r3);

        return $r5;

     label4:
        $r12 = new com.google.firebase.installations.FirebaseInstallationsException;

        $r13 = <com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE>;

        specialinvoke $r12.<com.google.firebase.installations.FirebaseInstallationsException: void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)>("Firebase Installations Service is unavailable. Please try again later.", $r13);

        throw $r12;

     label5:
        $r1 := @caughtexception;

        goto label4;

        catch java.io.IOException from label1 to label2 with label5;
    }

    public static long parseTokenExpirationTimestamp(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        int $i0, $i2;
        long $l1;
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.util.regex.Pattern EXPIRATION_TIMESTAMP_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Invalid Expiration Timestamp.");

        if $r0 == null goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = -1;

        $i0 = $i0 + $i2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        return $l1;

     label2:
        return 0L;
    }

    private com.google.firebase.installations.remote.InstallationResponse readCreateResponse(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r2;
        com.google.firebase.installations.remote.InstallationResponse $r11;
        android.util.JsonReader $r1;
        long $l0;
        java.io.InputStreamReader $r4;
        com.google.firebase.installations.remote.InstallationResponse$Builder $r7;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        java.nio.charset.Charset $r5;
        com.google.firebase.installations.remote.TokenResult $r9;
        com.google.firebase.installations.remote.TokenResult$Builder $r6;
        java.lang.String $r8;
        com.google.firebase.installations.remote.InstallationResponse$ResponseCode $r10;
        java.io.InputStream $r3;
        boolean $z0;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r2 := @parameter0: java.net.HttpURLConnection;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r1 = new android.util.JsonReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.nio.charset.Charset UTF_8>;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r3, $r5);

        specialinvoke $r1.<android.util.JsonReader: void <init>(java.io.Reader)>($r4);

        $r6 = staticinvoke <com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder builder()>();

        $r7 = staticinvoke <com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$Builder builder()>();

        virtualinvoke $r1.<android.util.JsonReader: void beginObject()>();

     label01:
        $z0 = virtualinvoke $r1.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z0 == 0 goto label02;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        virtualinvoke $r7.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setUri(java.lang.String)>($r8);

        goto label01;

     label02:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("fid");

        if $z0 == 0 goto label03;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        virtualinvoke $r7.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setFid(java.lang.String)>($r8);

        goto label01;

     label03:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("refreshToken");

        if $z0 == 0 goto label04;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        virtualinvoke $r7.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setRefreshToken(java.lang.String)>($r8);

        goto label01;

     label04:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("authToken");

        if $z0 == 0 goto label09;

        virtualinvoke $r1.<android.util.JsonReader: void beginObject()>();

     label05:
        $z0 = virtualinvoke $r1.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("token");

        if $z0 == 0 goto label06;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setToken(java.lang.String)>($r8);

        goto label05;

     label06:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("expiresIn");

        if $z0 == 0 goto label07;

        $r8 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        $l0 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: long parseTokenExpirationTimestamp(java.lang.String)>($r8);

        virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setTokenExpirationTimestamp(long)>($l0);

        goto label05;

     label07:
        virtualinvoke $r1.<android.util.JsonReader: void skipValue()>();

        goto label05;

     label08:
        $r9 = virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()>();

        virtualinvoke $r7.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setAuthToken(com.google.firebase.installations.remote.TokenResult)>($r9);

        virtualinvoke $r1.<android.util.JsonReader: void endObject()>();

        goto label01;

     label09:
        virtualinvoke $r1.<android.util.JsonReader: void skipValue()>();

        goto label01;

     label10:
        virtualinvoke $r1.<android.util.JsonReader: void endObject()>();

        virtualinvoke $r1.<android.util.JsonReader: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        $r10 = <com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode OK>;

        $r7 = virtualinvoke $r7.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setResponseCode(com.google.firebase.installations.remote.InstallationResponse$ResponseCode)>($r10);

        $r11 = virtualinvoke $r7.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse build()>();

        return $r11;
    }

    public static java.lang.String readErrorResponse(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r5;
        java.lang.Throwable $r13;
        java.lang.Object[] $r11;
        java.io.IOException $r1, $r2, $r3, $r4;
        java.io.InputStreamReader $r7;
        java.lang.Integer $r12;
        java.nio.charset.Charset $r8;
        int $i0;
        java.lang.StringBuilder $r9;
        java.io.BufferedReader $r0;
        java.lang.String $r10;
        java.io.InputStream $r6;

        $r5 := @parameter0: java.net.HttpURLConnection;

        $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        if $r6 != null goto label01;

        return null;

     label01:
        $r0 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        $r8 = <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.nio.charset.Charset UTF_8>;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r6, $r8);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label02:
        $r9 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

     label04:
        $r10 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r10 == null goto label08;

     label06:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label07:
        goto label04;

     label08:
        $r11 = newarray (java.lang.Object)[3];

     label09:
        $i0 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label10:
        $r11[0] = $r12;

     label11:
        $r10 = virtualinvoke $r5.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

     label12:
        $r11[1] = $r10;

        $r11[2] = $r9;

     label13:
        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Error when communicating with the Firebase Installations server API. HTTP response: [%d %s: %s]", $r11);

     label14:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

     label15:
        return $r10;

     label16:
        $r13 := @caughtexception;

     label17:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

     label18:
        throw $r13;

     label19:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

     label20:
        return null;

     label21:
        $r1 := @caughtexception;

        goto label19;

     label22:
        $r2 := @caughtexception;

        return $r10;

     label23:
        $r3 := @caughtexception;

        goto label18;

     label24:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label03 to label05 with label21;
        catch java.io.IOException from label06 to label07 with label21;
        catch java.io.IOException from label09 to label10 with label21;
        catch java.io.IOException from label11 to label12 with label21;
        catch java.io.IOException from label13 to label14 with label21;
        catch java.lang.Throwable from label02 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label14 with label16;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.io.IOException from label17 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label24;
    }

    private com.google.firebase.installations.remote.TokenResult readGenerateAuthTokenResponse(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r2;
        android.util.JsonReader $r1;
        com.google.firebase.installations.remote.TokenResult$ResponseCode $r8;
        long $l0;
        java.io.InputStreamReader $r4;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        java.nio.charset.Charset $r5;
        com.google.firebase.installations.remote.TokenResult $r9;
        com.google.firebase.installations.remote.TokenResult$Builder $r6;
        java.lang.String $r7;
        java.io.InputStream $r3;
        boolean $z0;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r2 := @parameter0: java.net.HttpURLConnection;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r1 = new android.util.JsonReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.nio.charset.Charset UTF_8>;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r3, $r5);

        specialinvoke $r1.<android.util.JsonReader: void <init>(java.io.Reader)>($r4);

        $r6 = staticinvoke <com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder builder()>();

        virtualinvoke $r1.<android.util.JsonReader: void beginObject()>();

     label1:
        $z0 = virtualinvoke $r1.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("token");

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setToken(java.lang.String)>($r7);

        goto label1;

     label2:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("expiresIn");

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        $l0 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: long parseTokenExpirationTimestamp(java.lang.String)>($r7);

        virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setTokenExpirationTimestamp(long)>($l0);

        goto label1;

     label3:
        virtualinvoke $r1.<android.util.JsonReader: void skipValue()>();

        goto label1;

     label4:
        virtualinvoke $r1.<android.util.JsonReader: void endObject()>();

        virtualinvoke $r1.<android.util.JsonReader: void close()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        $r8 = <com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode OK>;

        $r6 = virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode)>($r8);

        $r9 = virtualinvoke $r6.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()>();

        return $r9;
    }

    private void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r1;
        byte[] $r5;
        org.json.JSONObject $r4;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        java.lang.String $r2, $r3;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r3 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r4 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String,java.lang.String)>($r3, $r2);

        $r5 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: byte[] getJsonBytes(org.json.JSONObject)>($r4);

        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeRequestBodyToOutputStream(java.net.URLConnection,byte[])>($r1, $r5);

        return;
    }

    private void writeGenerateAuthTokenRequestBodyToOutputStream(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r1;
        byte[] $r3;
        org.json.JSONObject $r2;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r2 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildGenerateAuthTokenRequestBody()>();

        $r3 = staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: byte[] getJsonBytes(org.json.JSONObject)>($r2);

        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeRequestBodyToOutputStream(java.net.URLConnection,byte[])>($r1, $r3);

        return;
    }

    public static void writeRequestBodyToOutputStream(java.net.URLConnection, byte[])
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r6;
        byte[] $r5;
        java.net.URLConnection $r4;
        java.util.zip.GZIPOutputStream $r0;
        java.io.IOException $r2, $r3;

        $r4 := @parameter0: java.net.URLConnection;

        $r5 := @parameter1: byte[];

        $r1 = virtualinvoke $r4.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();

        if $r1 == null goto label7;

        $r0 = new java.util.zip.GZIPOutputStream;

        specialinvoke $r0.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r1);

     label1:
        virtualinvoke $r0.<java.util.zip.GZIPOutputStream: void write(byte[])>($r5);

     label2:
        virtualinvoke $r0.<java.util.zip.GZIPOutputStream: void close()>();

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke $r0.<java.util.zip.GZIPOutputStream: void close()>();

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label6:
        throw $r6;

     label7:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Cannot send request to FIS servers. No OutputStream available.");

        throw $r2;

     label8:
        $r2 := @caughtexception;

        return;

     label9:
        $r3 := @caughtexception;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label5 to label6 with label9;
    }

    public com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r11;
        java.lang.Throwable $r15;
        java.lang.Object[] $r8;
        java.net.URL $r10;
        com.google.firebase.installations.FirebaseInstallationsException $r16;
        com.google.firebase.installations.FirebaseInstallationsException$Status $r17;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r9;
        com.google.firebase.installations.remote.InstallationResponse $r12;
        java.io.IOException $r3, $r4;
        com.google.firebase.installations.remote.InstallationResponse$Builder $r13;
        com.google.firebase.installations.remote.InstallationResponse$ResponseCode $r14;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r5 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.String;

        $r7 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $r2 := @parameter4: java.lang.String;

        $r8 = newarray (java.lang.Object)[1];

        $i0 = 0;

        $r8[0] = $r7;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("projects/%s/installations", $r8);

        $r10 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)>($r9);

     label01:
        if $i0 > 1 goto label17;

        $r11 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)>($r10, $r5);

     label02:
        virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r11.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label03:
        if $r2 == null goto label05;

     label04:
        virtualinvoke $r11.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("x-goog-fis-android-iid-migration-auth", $r2);

     label05:
        specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)>($r11, $r6, $r1);

        $i1 = virtualinvoke $r11.<java.net.HttpURLConnection: int getResponseCode()>();

     label06:
        if $i1 != 200 goto label09;

     label07:
        $r12 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse readCreateResponse(java.net.HttpURLConnection)>($r11);

     label08:
        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        return $r12;

     label09:
        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logFisCommunicationError(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.lang.String)>($r11, $r1, $r5, $r7);

     label10:
        if $i1 == 429 goto label15;

        if $i1 < 500 goto label11;

        if $i1 >= 600 goto label11;

        goto label15;

     label11:
        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logBadConfigError()>();

        $r13 = staticinvoke <com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$Builder builder()>();

     label12:
        $r14 = <com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode BAD_CONFIG>;

     label13:
        $r13 = virtualinvoke $r13.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setResponseCode(com.google.firebase.installations.remote.InstallationResponse$ResponseCode)>($r14);

        $r12 = virtualinvoke $r13.<com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse build()>();

     label14:
        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        return $r12;

     label15:
        $i0 = $i0 + 1;

        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        goto label01;

     label16:
        $r15 := @caughtexception;

        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        throw $r15;

     label17:
        $r16 = new com.google.firebase.installations.FirebaseInstallationsException;

        $r17 = <com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE>;

        specialinvoke $r16.<com.google.firebase.installations.FirebaseInstallationsException: void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)>("Firebase Installations Service is unavailable. Please try again later.", $r17);

        goto label18;

     label18:
        throw $r16;

     label19:
        $r3 := @caughtexception;

        goto label15;

     label20:
        $r4 := @caughtexception;

        goto label15;

        catch java.io.IOException from label02 to label03 with label19;
        catch java.io.IOException from label04 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.io.IOException from label11 to label12 with label20;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label14 with label16;
    }

    public void deleteFirebaseInstallation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r8;
        java.lang.Throwable $r12;
        java.lang.Object[] $r6;
        java.net.URL $r7;
        java.io.IOException $r2;
        com.google.firebase.installations.FirebaseInstallationsException $r10;
        com.google.firebase.installations.FirebaseInstallationsException$Status $r11;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        int $i0, $i1;
        java.lang.StringBuilder $r9;
        java.lang.String $r1, $r3, $r4, $r5;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        $r5 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $r6 = newarray (java.lang.Object)[2];

        $i0 = 0;

        $r6[0] = $r5;

        $r6[1] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("projects/%s/installations/%s", $r6);

        $r7 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)>($r4);

     label01:
        if $i0 > 1 goto label15;

        $r8 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)>($r7, $r3);

     label02:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("DELETE");

     label03:
        $r9 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FIS_v2 ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Authorization", $r4);

        $i1 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

     label05:
        if $i1 == 200 goto label13;

        if $i1 == 401 goto label13;

        if $i1 != 404 goto label06;

        goto label13;

     label06:
        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logFisCommunicationError(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.lang.String)>($r8, null, $r3, $r5);

     label07:
        if $i1 == 429 goto label12;

        if $i1 < 500 goto label08;

        if $i1 >= 600 goto label08;

        goto label12;

     label08:
        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logBadConfigError()>();

     label09:
        $r10 = new com.google.firebase.installations.FirebaseInstallationsException;

        $r11 = <com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status BAD_CONFIG>;

     label10:
        specialinvoke $r10.<com.google.firebase.installations.FirebaseInstallationsException: void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)>("Bad config while trying to delete FID", $r11);

     label11:
        throw $r10;

     label12:
        $i0 = $i0 + 1;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        goto label01;

     label13:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label14:
        $r12 := @caughtexception;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        throw $r12;

     label15:
        $r10 = new com.google.firebase.installations.FirebaseInstallationsException;

        $r11 = <com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE>;

        specialinvoke $r10.<com.google.firebase.installations.FirebaseInstallationsException: void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)>("Firebase Installations Service is unavailable. Please try again later.", $r11);

        goto label16;

     label16:
        throw $r10;

     label17:
        $r2 := @caughtexception;

        goto label12;

        catch java.io.IOException from label02 to label03 with label17;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.lang.Throwable from label02 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label12 with label14;
    }

    public com.google.firebase.installations.remote.TokenResult generateAuthToken(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r10;
        java.lang.Throwable $r15;
        java.lang.Object[] $r8;
        java.net.URL $r9;
        com.google.firebase.installations.FirebaseInstallationsException $r16;
        com.google.firebase.installations.FirebaseInstallationsException$Status $r17;
        com.google.firebase.installations.remote.FirebaseInstallationServiceClient r0;
        int $i0, $i1;
        java.lang.String $r1, $r5, $r6, $r7;
        com.google.firebase.installations.remote.TokenResult$Builder $r13;
        com.google.firebase.installations.remote.TokenResult$ResponseCode $r14;
        java.io.IOException $r2, $r3, $r4;
        com.google.firebase.installations.remote.TokenResult $r12;
        java.lang.StringBuilder $r11;

        r0 := @this: com.google.firebase.installations.remote.FirebaseInstallationServiceClient;

        $r5 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.String;

        $r7 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $r8 = newarray (java.lang.Object)[2];

        $i0 = 0;

        $r8[0] = $r7;

        $r8[1] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("projects/%s/installations/%s/authTokens:generate", $r8);

        $r9 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)>($r6);

     label01:
        if $i0 > 1 goto label21;

        $r10 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)>($r9, $r5);

     label02:
        virtualinvoke $r10.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

     label03:
        $r11 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FIS_v2 ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Authorization", $r6);

        specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeGenerateAuthTokenRequestBodyToOutputStream(java.net.HttpURLConnection)>($r10);

        $i1 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>();

     label05:
        if $i1 != 200 goto label08;

     label06:
        $r12 = specialinvoke r0.<com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.TokenResult readGenerateAuthTokenResponse(java.net.HttpURLConnection)>($r10);

     label07:
        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        return $r12;

     label08:
        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logFisCommunicationError(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.lang.String)>($r10, null, $r5, $r7);

     label09:
        if $i1 == 401 goto label16;

        if $i1 != 404 goto label10;

        goto label16;

     label10:
        if $i1 == 429 goto label15;

        if $i1 < 500 goto label11;

        if $i1 >= 600 goto label11;

        goto label15;

     label11:
        staticinvoke <com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logBadConfigError()>();

        $r13 = staticinvoke <com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder builder()>();

     label12:
        $r14 = <com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode BAD_CONFIG>;

     label13:
        $r13 = virtualinvoke $r13.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode)>($r14);

        $r12 = virtualinvoke $r13.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()>();

     label14:
        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        return $r12;

     label15:
        $i0 = $i0 + 1;

        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        goto label01;

     label16:
        $r13 = staticinvoke <com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder builder()>();

     label17:
        $r14 = <com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode AUTH_ERROR>;

     label18:
        $r13 = virtualinvoke $r13.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode)>($r14);

        $r12 = virtualinvoke $r13.<com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()>();

     label19:
        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        return $r12;

     label20:
        $r15 := @caughtexception;

        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        throw $r15;

     label21:
        $r16 = new com.google.firebase.installations.FirebaseInstallationsException;

        $r17 = <com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE>;

        specialinvoke $r16.<com.google.firebase.installations.FirebaseInstallationsException: void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)>("Firebase Installations Service is unavailable. Please try again later.", $r17);

        goto label22;

     label22:
        throw $r16;

     label23:
        $r2 := @caughtexception;

        goto label15;

     label24:
        $r3 := @caughtexception;

        goto label15;

     label25:
        $r4 := @caughtexception;

        goto label15;

        catch java.io.IOException from label02 to label03 with label23;
        catch java.io.IOException from label04 to label05 with label23;
        catch java.io.IOException from label06 to label07 with label23;
        catch java.lang.Throwable from label02 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label11 to label14 with label20;
        catch java.io.IOException from label16 to label17 with label25;
        catch java.io.IOException from label18 to label19 with label25;
        catch java.lang.Throwable from label16 to label19 with label20;
    }
}
