public class b.c.a.a.e extends b.c.a.a.f
{
    public final java.lang.Object a;
    public final java.util.concurrent.ExecutorService b;
    public volatile android.os.Handler c;

    public void <init>()
    {
        b.c.a.a.e r0;
        java.lang.Object $r2;
        java.util.concurrent.ExecutorService $r1;
        b.c.a.a.d $r3;

        r0 := @this: b.c.a.a.e;

        specialinvoke r0.<b.c.a.a.f: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<b.c.a.a.e: java.lang.Object a> = $r2;

        $r3 = new b.c.a.a.d;

        specialinvoke $r3.<b.c.a.a.d: void <init>(b.c.a.a.e)>(r0);

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(4, $r3);

        r0.<b.c.a.a.e: java.util.concurrent.ExecutorService b> = $r1;

        return;
    }

    public static android.os.Handler a(android.os.Looper)
    {
        java.lang.IllegalAccessException $r0;
        java.lang.Object[] $r10;
        java.lang.NoSuchMethodException $r2;
        java.lang.Class[] $r7;
        java.lang.reflect.Constructor $r9;
        java.lang.reflect.InvocationTargetException $r3;
        android.os.Looper $r4;
        android.os.Handler $r5;
        java.lang.InstantiationException $r1;
        int $i0;
        java.lang.Boolean $r11;
        java.lang.Class $r6, $r8;
        java.lang.Object $r12;

        $r4 := @parameter0: android.os.Looper;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label01;

        $r5 = staticinvoke <android.os.Handler: android.os.Handler createAsync(android.os.Looper)>($r4);

        return $r5;

     label01:
        if $i0 < 16 goto label09;

        $r6 = class "Landroid/os/Handler;";

        $r7 = newarray (java.lang.Class)[3];

        $r7[0] = class "Landroid/os/Looper;";

        $r7[1] = class "Landroid/os/Handler$Callback;";

        $r8 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r7[2] = $r8;

     label02:
        $r9 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r7);

     label03:
        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = $r4;

        $r10[1] = null;

     label04:
        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label05:
        $r10[2] = $r11;

     label06:
        $r12 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

     label07:
        $r5 = (android.os.Handler) $r12;

        return $r5;

     label08:
        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        return $r5;

     label09:
        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        return $r5;

     label10:
        $r0 := @caughtexception;

        goto label09;

     label11:
        $r1 := @caughtexception;

        goto label09;

     label12:
        $r2 := @caughtexception;

        goto label09;

     label13:
        $r3 := @caughtexception;

        goto label08;

        catch java.lang.IllegalAccessException from label02 to label03 with label10;
        catch java.lang.IllegalAccessException from label04 to label05 with label10;
        catch java.lang.IllegalAccessException from label06 to label07 with label10;
        catch java.lang.InstantiationException from label02 to label03 with label11;
        catch java.lang.InstantiationException from label04 to label05 with label11;
        catch java.lang.InstantiationException from label06 to label07 with label11;
        catch java.lang.NoSuchMethodException from label02 to label03 with label12;
        catch java.lang.NoSuchMethodException from label04 to label05 with label12;
        catch java.lang.NoSuchMethodException from label06 to label07 with label12;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label13;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label13;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label13;
    }

    public void a(java.lang.Runnable)
    {
        b.c.a.a.e r0;
        java.lang.Runnable $r1;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: b.c.a.a.e;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<b.c.a.a.e: java.util.concurrent.ExecutorService b>;

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public boolean a()
    {
        android.os.Looper $r1;
        java.lang.Thread $r2, $r3;
        b.c.a.a.e r0;

        r0 := @this: b.c.a.a.e;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: java.lang.Thread getThread()>();

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r2 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void c(java.lang.Runnable)
    {
        java.lang.Throwable $r5;
        android.os.Handler $r2;
        android.os.Looper $r4;
        b.c.a.a.e r0;
        java.lang.Object $r3;
        java.lang.Runnable $r1;

        r0 := @this: b.c.a.a.e;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<b.c.a.a.e: android.os.Handler c>;

        if $r2 != null goto label6;

        $r3 = r0.<b.c.a.a.e: java.lang.Object a>;

        entermonitor $r3;

     label1:
        $r2 = r0.<b.c.a.a.e: android.os.Handler c>;

        if $r2 != null goto label2;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = staticinvoke <b.c.a.a.e: android.os.Handler a(android.os.Looper)>($r4);

        r0.<b.c.a.a.e: android.os.Handler c> = $r2;

     label2:
        exitmonitor $r3;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r5;

     label6:
        $r2 = r0.<b.c.a.a.e: android.os.Handler c>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
