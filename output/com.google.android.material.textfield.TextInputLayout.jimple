public class com.google.android.material.textfield.TextInputLayout extends android.widget.LinearLayout
{
    public static final int BOX_BACKGROUND_FILLED;
    public static final int BOX_BACKGROUND_NONE;
    public static final int BOX_BACKGROUND_OUTLINE;
    public static final int DEF_STYLE_RES;
    public static final int END_ICON_CLEAR_TEXT;
    public static final int END_ICON_CUSTOM;
    public static final int END_ICON_DROPDOWN_MENU;
    public static final int END_ICON_NONE;
    public static final int END_ICON_PASSWORD_TOGGLE;
    public static final int INVALID_MAX_LENGTH;
    public static final int LABEL_SCALE_ANIMATION_DURATION;
    public static final java.lang.String LOG_TAG;
    public android.animation.ValueAnimator animator;
    public com.google.android.material.shape.MaterialShapeDrawable boxBackground;
    public int boxBackgroundColor;
    public int boxBackgroundMode;
    public final int boxCollapsedPaddingTopPx;
    public final int boxLabelCutoutPaddingPx;
    public int boxStrokeColor;
    public int boxStrokeWidthDefaultPx;
    public int boxStrokeWidthFocusedPx;
    public int boxStrokeWidthPx;
    public com.google.android.material.shape.MaterialShapeDrawable boxUnderline;
    public final com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper;
    public boolean counterEnabled;
    public int counterMaxLength;
    public int counterOverflowTextAppearance;
    public android.content.res.ColorStateList counterOverflowTextColor;
    public boolean counterOverflowed;
    public int counterTextAppearance;
    public android.content.res.ColorStateList counterTextColor;
    public android.widget.TextView counterView;
    public int defaultFilledBackgroundColor;
    public android.content.res.ColorStateList defaultHintTextColor;
    public int defaultStrokeColor;
    public int disabledColor;
    public int disabledFilledBackgroundColor;
    public android.widget.EditText editText;
    public final java.util.LinkedHashSet editTextAttachedListeners;
    public android.graphics.drawable.Drawable endDummyDrawable;
    public int endDummyDrawableWidth;
    public final java.util.LinkedHashSet endIconChangedListeners;
    public final android.util.SparseArray endIconDelegates;
    public final android.widget.FrameLayout endIconFrame;
    public int endIconMode;
    public android.view.View$OnLongClickListener endIconOnLongClickListener;
    public android.content.res.ColorStateList endIconTintList;
    public android.graphics.PorterDuff$Mode endIconTintMode;
    public final com.google.android.material.internal.CheckableImageButton endIconView;
    public final android.widget.LinearLayout endLayout;
    public android.view.View$OnLongClickListener errorIconOnLongClickListener;
    public android.content.res.ColorStateList errorIconTintList;
    public final com.google.android.material.internal.CheckableImageButton errorIconView;
    public int focusedFilledBackgroundColor;
    public int focusedStrokeColor;
    public android.content.res.ColorStateList focusedTextColor;
    public boolean hasEndIconTintList;
    public boolean hasEndIconTintMode;
    public boolean hasStartIconTintList;
    public boolean hasStartIconTintMode;
    public java.lang.CharSequence hint;
    public boolean hintAnimationEnabled;
    public boolean hintEnabled;
    public boolean hintExpanded;
    public int hoveredFilledBackgroundColor;
    public int hoveredStrokeColor;
    public boolean inDrawableStateChanged;
    public final com.google.android.material.textfield.IndicatorViewController indicatorViewController;
    public final android.widget.FrameLayout inputFrame;
    public boolean isProvidingHint;
    public android.graphics.drawable.Drawable originalEditTextEndDrawable;
    public java.lang.CharSequence originalHint;
    public boolean placeholderEnabled;
    public java.lang.CharSequence placeholderText;
    public int placeholderTextAppearance;
    public android.content.res.ColorStateList placeholderTextColor;
    public android.widget.TextView placeholderTextView;
    public java.lang.CharSequence prefixText;
    public final android.widget.TextView prefixTextView;
    public boolean restoringSavedState;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel;
    public android.graphics.drawable.Drawable startDummyDrawable;
    public int startDummyDrawableWidth;
    public android.view.View$OnLongClickListener startIconOnLongClickListener;
    public android.content.res.ColorStateList startIconTintList;
    public android.graphics.PorterDuff$Mode startIconTintMode;
    public final com.google.android.material.internal.CheckableImageButton startIconView;
    public final android.widget.LinearLayout startLayout;
    public android.content.res.ColorStateList strokeErrorColor;
    public java.lang.CharSequence suffixText;
    public final android.widget.TextView suffixTextView;
    public final android.graphics.Rect tmpBoundsRect;
    public final android.graphics.Rect tmpRect;
    public final android.graphics.RectF tmpRectF;
    public android.graphics.Typeface typeface;

    static void <clinit>()
    {
        int $i0;

        <com.google.android.material.textfield.TextInputLayout: java.lang.String LOG_TAG> = "TextInputLayout";

        <com.google.android.material.textfield.TextInputLayout: int LABEL_SCALE_ANIMATION_DURATION> = 167;

        <com.google.android.material.textfield.TextInputLayout: int INVALID_MAX_LENGTH> = -1;

        <com.google.android.material.textfield.TextInputLayout: int END_ICON_PASSWORD_TOGGLE> = 1;

        <com.google.android.material.textfield.TextInputLayout: int END_ICON_NONE> = 0;

        <com.google.android.material.textfield.TextInputLayout: int END_ICON_DROPDOWN_MENU> = 3;

        <com.google.android.material.textfield.TextInputLayout: int END_ICON_CUSTOM> = -1;

        <com.google.android.material.textfield.TextInputLayout: int END_ICON_CLEAR_TEXT> = 2;

        <com.google.android.material.textfield.TextInputLayout: int BOX_BACKGROUND_OUTLINE> = 2;

        <com.google.android.material.textfield.TextInputLayout: int BOX_BACKGROUND_NONE> = 0;

        <com.google.android.material.textfield.TextInputLayout: int BOX_BACKGROUND_FILLED> = 1;

        $i0 = <com.google.android.material.R$style: int Widget_Design_TextInputLayout>;

        <com.google.android.material.textfield.TextInputLayout: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int textInputStyle>;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.graphics.Rect $r29;
        android.widget.LinearLayout $r6, $r35;
        com.google.android.material.textfield.DropdownMenuEndIconDelegate $r41;
        android.widget.FrameLayout $r5, $r34;
        com.google.android.material.internal.CheckableImageButton $r19;
        android.graphics.drawable.Drawable $r20;
        android.content.res.ColorStateList $r15;
        android.util.AttributeSet $r2;
        byte $b3;
        int[] $r8, $r9;
        android.view.View $r18;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.RectF $r30;
        java.lang.CharSequence $r11, $r22, $r23, $r24, $r25, $r26;
        com.google.android.material.textfield.ClearTextEndIconDelegate $r40;
        com.google.android.material.shape.ShapeAppearanceModel $r13;
        b.b.f.ma $r10;
        android.util.SparseArray $r3, $r32;
        android.widget.TextView $r27;
        float $f0, $f1, $f2, $f3;
        com.google.android.material.internal.CollapsingTextHelper $r4, $r33;
        androidx.appcompat.widget.AppCompatTextView $r42;
        android.content.Context $r1, $r16;
        android.animation.TimeInterpolator $r7;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.CustomEndIconDelegate $r37;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7;
        com.google.android.material.textfield.IndicatorViewController $r28;
        android.widget.FrameLayout$LayoutParams $r36;
        java.util.LinkedHashSet $r31;
        android.view.LayoutInflater $r17;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r12;
        android.graphics.PorterDuff$Mode $r21;
        com.google.android.material.textfield.PasswordToggleEndIconDelegate $r39;
        com.google.android.material.textfield.NoEndIconDelegate $r38;
        android.content.res.Resources $r14;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 = <com.google.android.material.textfield.TextInputLayout: int DEF_STYLE_RES>;

        $r1 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r28 = new com.google.android.material.textfield.IndicatorViewController;

        specialinvoke $r28.<com.google.android.material.textfield.IndicatorViewController: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController> = $r28;

        $r29 = new android.graphics.Rect;

        specialinvoke $r29.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpRect> = $r29;

        $r29 = new android.graphics.Rect;

        specialinvoke $r29.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpBoundsRect> = $r29;

        $r30 = new android.graphics.RectF;

        specialinvoke $r30.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.RectF tmpRectF> = $r30;

        $r31 = new java.util.LinkedHashSet;

        specialinvoke $r31.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet editTextAttachedListeners> = $r31;

        r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode> = 0;

        $r32 = new android.util.SparseArray;

        specialinvoke $r32.<android.util.SparseArray: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates> = $r32;

        $r31 = new java.util.LinkedHashSet;

        specialinvoke $r31.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet endIconChangedListeners> = $r31;

        $r33 = new com.google.android.material.internal.CollapsingTextHelper;

        specialinvoke $r33.<com.google.android.material.internal.CollapsingTextHelper: void <init>(android.view.View)>(r0);

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper> = $r33;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        virtualinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>(1);

        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.widget.LinearLayout: void setAddStatesFromChildren(boolean)>(1);

        $r34 = new android.widget.FrameLayout;

        specialinvoke $r34.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame> = $r34;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r5.<android.widget.FrameLayout: void setAddStatesFromChildren(boolean)>(1);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke r0.<android.widget.LinearLayout: void addView(android.view.View)>($r5);

        $r35 = new android.widget.LinearLayout;

        specialinvoke $r35.<android.widget.LinearLayout: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout> = $r35;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $r36 = new android.widget.FrameLayout$LayoutParams;

        $i1 = -2;

        $i2 = -1;

        specialinvoke $r36.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>($i1, $i2, 8388611);

        virtualinvoke $r6.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r36);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        virtualinvoke $r5.<android.widget.FrameLayout: void addView(android.view.View)>($r6);

        $r35 = new android.widget.LinearLayout;

        specialinvoke $r35.<android.widget.LinearLayout: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout> = $r35;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $r36 = new android.widget.FrameLayout$LayoutParams;

        $i1 = -2;

        $i2 = -1;

        specialinvoke $r36.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>($i1, $i2, 8388613);

        virtualinvoke $r6.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r36);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        virtualinvoke $r5.<android.widget.FrameLayout: void addView(android.view.View)>($r6);

        $r34 = new android.widget.FrameLayout;

        specialinvoke $r34.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame> = $r34;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        $r36 = new android.widget.FrameLayout$LayoutParams;

        $i1 = -2;

        $i2 = -1;

        specialinvoke $r36.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i1, $i2);

        virtualinvoke $r5.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r36);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r7 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r4.<com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>($r7);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r7 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r4.<com.google.android.material.internal.CollapsingTextHelper: void setPositionInterpolator(android.animation.TimeInterpolator)>($r7);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r4.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>(8388659);

        $r8 = <com.google.android.material.R$styleable: int[] TextInputLayout>;

        $i1 = <com.google.android.material.textfield.TextInputLayout: int DEF_STYLE_RES>;

        $r9 = newarray (int)[5];

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_counterTextAppearance>;

        $r9[0] = $i2;

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_counterOverflowTextAppearance>;

        $r9[1] = $i2;

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_errorTextAppearance>;

        $r9[2] = $i2;

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_helperTextTextAppearance>;

        $r9[3] = $i2;

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_hintTextAppearance>;

        $r9[4] = $i2;

        $r10 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: b.b.f.ma obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r1, $r2, $r8, $i0, $i1, $r9);

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_hintEnabled>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i1, 1);

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled> = $z0;

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_android_hint>;

        $r11 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>($r11);

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_hintAnimationEnabled>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i1, 1);

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hintAnimationEnabled> = $z0;

        $i1 = <com.google.android.material.textfield.TextInputLayout: int DEF_STYLE_RES>;

        $r12 = staticinvoke <com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        $r13 = virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r13;

        $r14 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int mtrl_textinput_box_label_cutout_padding>;

        $i0 = virtualinvoke $r14.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int boxLabelCutoutPaddingPx> = $i0;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxCollapsedPaddingTop>;

        $i0 = virtualinvoke $r10.<b.b.f.ma: int b(int,int)>($i0, 0);

        r0.<com.google.android.material.textfield.TextInputLayout: int boxCollapsedPaddingTopPx> = $i0;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxStrokeWidth>;

        $r14 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int mtrl_textinput_box_stroke_width_default>;

        $i1 = virtualinvoke $r14.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i0 = virtualinvoke $r10.<b.b.f.ma: int c(int,int)>($i0, $i1);

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthDefaultPx> = $i0;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxStrokeWidthFocused>;

        $r14 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int mtrl_textinput_box_stroke_width_focused>;

        $i1 = virtualinvoke $r14.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i0 = virtualinvoke $r10.<b.b.f.ma: int c(int,int)>($i0, $i1);

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthFocusedPx> = $i0;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthDefaultPx>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx> = $i0;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusTopStart>;

        $f0 = virtualinvoke $r10.<b.b.f.ma: float a(int,float)>($i0, -1.0F);

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusTopEnd>;

        $f1 = virtualinvoke $r10.<b.b.f.ma: float a(int,float)>($i0, -1.0F);

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusBottomEnd>;

        $f2 = virtualinvoke $r10.<b.b.f.ma: float a(int,float)>($i0, -1.0F);

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxCornerRadiusBottomStart>;

        $f3 = virtualinvoke $r10.<b.b.f.ma: float a(int,float)>($i0, -1.0F);

        $r13 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r12 = virtualinvoke $r13.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()>();

        $b3 = $f0 cmpl 0.0F;

        $i0 = (int) $b3;

        if $i0 < 0 goto label01;

        virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float)>($f0);

     label01:
        $b3 = $f1 cmpl 0.0F;

        $i0 = (int) $b3;

        if $i0 < 0 goto label02;

        virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float)>($f1);

     label02:
        $b3 = $f2 cmpl 0.0F;

        $i0 = (int) $b3;

        if $i0 < 0 goto label03;

        virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float)>($f2);

     label03:
        $b3 = $f3 cmpl 0.0F;

        $i0 = (int) $b3;

        if $i0 < 0 goto label04;

        virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float)>($f3);

     label04:
        $r13 = virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r13;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxBackgroundColor>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i0);

        if $r15 == null goto label06;

        $i0 = virtualinvoke $r15.<android.content.res.ColorStateList: int getDefaultColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor> = $i0;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        $z0 = virtualinvoke $r15.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label05;

        $r8 = newarray (int)[1];

        $r8[0] = -16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r15.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int disabledFilledBackgroundColor> = $i0;

        $r8 = newarray (int)[2];

        $r8[0] = 16842908;

        $r8[1] = 16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r15.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedFilledBackgroundColor> = $i0;

        $r8 = newarray (int)[2];

        $r8[0] = 16843623;

        $r8[1] = 16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r15.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor> = $i0;

        goto label07;

     label05:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedFilledBackgroundColor> = $i0;

        $i0 = <com.google.android.material.R$color: int mtrl_filled_background_color>;

        $r15 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        $r8 = newarray (int)[1];

        $r8[0] = -16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r15.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int disabledFilledBackgroundColor> = $i0;

        $r8 = newarray (int)[1];

        $r8[0] = 16843623;

        $i0 = -1;

        $i0 = virtualinvoke $r15.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor> = $i0;

        goto label07;

     label06:
        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = 0;

        r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor> = 0;

        r0.<com.google.android.material.textfield.TextInputLayout: int disabledFilledBackgroundColor> = 0;

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedFilledBackgroundColor> = 0;

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor> = 0;

     label07:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_android_textColorHint>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z0 == 0 goto label08;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_android_textColorHint>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor> = $r15;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor> = $r15;

     label08:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxStrokeColor>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i0);

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxStrokeColor>;

        $i0 = virtualinvoke $r10.<b.b.f.ma: int a(int,int)>($i0, 0);

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor> = $i0;

        $i0 = <com.google.android.material.R$color: int mtrl_textinput_default_box_stroke_color>;

        $i0 = staticinvoke <b.i.b.a: int a(android.content.Context,int)>($r1, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int defaultStrokeColor> = $i0;

        $i0 = <com.google.android.material.R$color: int mtrl_textinput_disabled_color>;

        $i0 = staticinvoke <b.i.b.a: int a(android.content.Context,int)>($r1, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int disabledColor> = $i0;

        $i0 = <com.google.android.material.R$color: int mtrl_textinput_hovered_box_stroke_color>;

        $i0 = staticinvoke <b.i.b.a: int a(android.content.Context,int)>($r1, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredStrokeColor> = $i0;

        if $r15 == null goto label09;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)>($r15);

     label09:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxStrokeErrorColor>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z0 == 0 goto label10;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_boxStrokeErrorColor>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)>($r15);

     label10:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i1 = -1;

        $i0 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i0, $i1);

        $i1 = -1;

        if $i0 == $i1 goto label11;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i0 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>($i0);

     label11:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_errorTextAppearance>;

        $i0 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i0, 0);

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorContentDescription>;

        $r11 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i1);

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorEnabled>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i1, 0);

        $r16 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r17 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r16);

        $i1 = <com.google.android.material.R$layout: int design_text_input_end_icon>;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $r18 = virtualinvoke $r17.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, $r6, 0);

        $r19 = (com.google.android.material.internal.CheckableImageButton) $r18;

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView> = $r19;

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r19.<android.widget.ImageButton: void setVisibility(int)>(8);

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorIconDrawable>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i1);

        if $z0 == 0 goto label12;

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorIconDrawable>;

        $r20 = virtualinvoke $r10.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)>($r20);

     label12:
        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorIconTint>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i1);

        if $z0 == 0 goto label13;

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorIconTint>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)>($r15);

     label13:
        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorIconTintMode>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i1);

        if $z0 == 0 goto label14;

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_errorIconTintMode>;

        $i2 = -1;

        $i1 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i1, $i2);

        $r21 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i1, null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)>($r21);

     label14:
        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r14 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$string: int error_icon_content_description>;

        $r22 = virtualinvoke $r14.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i1);

        virtualinvoke $r19.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r22);

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r19, 2);

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r19.<android.widget.ImageButton: void setClickable(boolean)>(0);

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r19.<com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)>(0);

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r19.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $i1 = <com.google.android.material.R$styleable: int TextInputLayout_helperTextTextAppearance>;

        $i1 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i1, 0);

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_helperTextEnabled>;

        $z2 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i2, 0);

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_helperText>;

        $r22 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i2);

        $i2 = <com.google.android.material.R$styleable: int TextInputLayout_placeholderTextAppearance>;

        $i2 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i2, 0);

        $i4 = <com.google.android.material.R$styleable: int TextInputLayout_placeholderText>;

        $r23 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i4);

        $i4 = <com.google.android.material.R$styleable: int TextInputLayout_prefixTextAppearance>;

        $i4 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i4, 0);

        $i5 = <com.google.android.material.R$styleable: int TextInputLayout_prefixText>;

        $r24 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i5);

        $i5 = <com.google.android.material.R$styleable: int TextInputLayout_suffixTextAppearance>;

        $i5 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i5, 0);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_suffixText>;

        $r25 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i6);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_counterEnabled>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i6, 0);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_counterMaxLength>;

        $i7 = -1;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i6, $i7);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>($i6);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_counterTextAppearance>;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i6, 0);

        r0.<com.google.android.material.textfield.TextInputLayout: int counterTextAppearance> = $i6;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_counterOverflowTextAppearance>;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int g(int,int)>($i6, 0);

        r0.<com.google.android.material.textfield.TextInputLayout: int counterOverflowTextAppearance> = $i6;

        $r16 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r17 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r16);

        $i6 = <com.google.android.material.R$layout: int design_text_input_start_icon>;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $r18 = virtualinvoke $r17.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i6, $r6, 0);

        $r19 = (com.google.android.material.internal.CheckableImageButton) $r18;

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView> = $r19;

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        virtualinvoke $r19.<android.widget.ImageButton: void setVisibility(int)>(8);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)>(null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)>(null);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconDrawable>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label16;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconDrawable>;

        $r20 = virtualinvoke $r10.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)>($r20);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconContentDescription>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label15;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconContentDescription>;

        $r26 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)>($r26);

     label15:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconCheckable>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i6, 1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)>($z3);

     label16:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconTint>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label17;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconTint>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)>($r15);

     label17:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconTintMode>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label18;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_startIconTintMode>;

        $i7 = -1;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i6, $i7);

        $r21 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i6, null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)>($r21);

     label18:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_boxBackgroundMode>;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i6, 0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)>($i6);

        $r16 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r17 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r16);

        $i6 = <com.google.android.material.R$layout: int design_text_input_end_icon>;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        $r18 = virtualinvoke $r17.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i6, $r5, 0);

        $r19 = (com.google.android.material.internal.CheckableImageButton) $r18;

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView> = $r19;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r5.<android.widget.FrameLayout: void addView(android.view.View)>($r19);

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r19.<android.widget.ImageButton: void setVisibility(int)>(8);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $r37 = new com.google.android.material.textfield.CustomEndIconDelegate;

        specialinvoke $r37.<com.google.android.material.textfield.CustomEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        $i6 = -1;

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>($i6, $r37);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $r38 = new com.google.android.material.textfield.NoEndIconDelegate;

        specialinvoke $r38.<com.google.android.material.textfield.NoEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>(0, $r38);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $r39 = new com.google.android.material.textfield.PasswordToggleEndIconDelegate;

        specialinvoke $r39.<com.google.android.material.textfield.PasswordToggleEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>(1, $r39);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $r40 = new com.google.android.material.textfield.ClearTextEndIconDelegate;

        specialinvoke $r40.<com.google.android.material.textfield.ClearTextEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>(2, $r40);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $r41 = new com.google.android.material.textfield.DropdownMenuEndIconDelegate;

        specialinvoke $r41.<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>(3, $r41);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconMode>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label21;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconMode>;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i6, 0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>($i6);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconDrawable>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label19;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconDrawable>;

        $r20 = virtualinvoke $r10.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)>($r20);

     label19:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconContentDescription>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label20;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconContentDescription>;

        $r26 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)>($r26);

     label20:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconCheckable>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i6, 1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)>($z3);

        goto label23;

     label21:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleEnabled>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label23;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleEnabled>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i6, 0);

        $i6 = (int) $z3;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>($i6);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleDrawable>;

        $r20 = virtualinvoke $r10.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)>($r20);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleContentDescription>;

        $r26 = virtualinvoke $r10.<b.b.f.ma: java.lang.CharSequence e(int)>($i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)>($r26);

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleTint>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label22;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleTint>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)>($r15);

     label22:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleTintMode>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label23;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleTintMode>;

        $i7 = -1;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i6, $i7);

        $r21 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i6, null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)>($r21);

     label23:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_passwordToggleEnabled>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 != 0 goto label25;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconTint>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label24;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconTint>;

        $r15 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,b.b.f.ma,int)>($r1, $r10, $i6);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)>($r15);

     label24:
        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconTintMode>;

        $z3 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i6);

        if $z3 == 0 goto label25;

        $i6 = <com.google.android.material.R$styleable: int TextInputLayout_endIconTintMode>;

        $i7 = -1;

        $i6 = virtualinvoke $r10.<b.b.f.ma: int d(int,int)>($i6, $i7);

        $r21 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i6, null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)>($r21);

     label25:
        $r42 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r42.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView> = $r42;

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $i6 = <com.google.android.material.R$id: int textinput_prefix_text>;

        virtualinvoke $r27.<android.widget.TextView: void setId(int)>($i6);

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $r36 = new android.widget.FrameLayout$LayoutParams;

        $i6 = -2;

        $i7 = -2;

        specialinvoke $r36.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i6, $i7);

        virtualinvoke $r27.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r36);

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        staticinvoke <b.i.i.y: void g(android.view.View,int)>($r27, 1);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        virtualinvoke $r6.<android.widget.LinearLayout: void addView(android.view.View)>($r19);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        virtualinvoke $r6.<android.widget.LinearLayout: void addView(android.view.View)>($r27);

        $r42 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r42.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView> = $r42;

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $i6 = <com.google.android.material.R$id: int textinput_suffix_text>;

        virtualinvoke $r27.<android.widget.TextView: void setId(int)>($i6);

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $r36 = new android.widget.FrameLayout$LayoutParams;

        $i6 = -2;

        $i7 = -2;

        specialinvoke $r36.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>($i6, $i7, 80);

        virtualinvoke $r27.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r36);

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        staticinvoke <b.i.i.y: void g(android.view.View,int)>($r27, 1);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $r27 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        virtualinvoke $r6.<android.widget.LinearLayout: void addView(android.view.View)>($r27);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $r19 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r6.<android.widget.LinearLayout: void addView(android.view.View)>($r19);

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        virtualinvoke $r6.<android.widget.LinearLayout: void addView(android.view.View)>($r5);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>($z2);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>($r22);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)>($i1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>($z1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)>($r11);

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterTextAppearance>;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)>($i0);

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterOverflowTextAppearance>;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)>($r23);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)>($i2);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)>($r24);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)>($i4);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)>($r25);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)>($i5);

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_errorTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label26;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_errorTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)>($r15);

     label26:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_helperTextTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label27;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_helperTextTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)>($r15);

     label27:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_hintTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label28;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_hintTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)>($r15);

     label28:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_counterTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label29;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_counterTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)>($r15);

     label29:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_counterOverflowTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label30;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_counterOverflowTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)>($r15);

     label30:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_placeholderTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label31;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_placeholderTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)>($r15);

     label31:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_prefixTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label32;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_prefixTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)>($r15);

     label32:
        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_suffixTextColor>;

        $z1 = virtualinvoke $r10.<b.b.f.ma: boolean g(int)>($i0);

        if $z1 == 0 goto label33;

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_suffixTextColor>;

        $r15 = virtualinvoke $r10.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)>($r15);

     label33:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>($z0);

        $i0 = <com.google.android.material.R$styleable: int TextInputLayout_android_enabled>;

        $z0 = virtualinvoke $r10.<b.b.f.ma: boolean a(int,boolean)>($i0, 1);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)>($z0);

        virtualinvoke $r10.<b.b.f.ma: void a()>();

        staticinvoke <b.i.i.y: void h(android.view.View,int)>(r0, 2);

        return;
    }

    public static boolean access$000(com.google.android.material.textfield.TextInputLayout)
    {
        com.google.android.material.textfield.TextInputLayout $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        z0 = $r0.<com.google.android.material.textfield.TextInputLayout: boolean restoringSavedState>;

        return z0;
    }

    public static boolean access$100(com.google.android.material.textfield.TextInputLayout)
    {
        com.google.android.material.textfield.TextInputLayout $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        z0 = $r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        return z0;
    }

    public static void access$200(com.google.android.material.textfield.TextInputLayout, int)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout $r0;

        $r0 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderText(int)>($i0);

        return;
    }

    public static com.google.android.material.internal.CheckableImageButton access$300(com.google.android.material.textfield.TextInputLayout)
    {
        com.google.android.material.internal.CheckableImageButton r1;
        com.google.android.material.textfield.TextInputLayout $r0;

        $r0 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        r1 = $r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        return r1;
    }

    private void addPlaceholderTextView()
    {
        android.widget.FrameLayout $r2;
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void addView(android.view.View)>($r1);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(0);

     label1:
        return;
    }

    private void applyBoxAttributes()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        android.graphics.drawable.Drawable $r5;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        android.content.res.ColorStateList $r3;
        int $i0;
        float $f0;
        android.widget.EditText $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r2);

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean canDrawOutlineStroke()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx>;

        $f0 = (float) $i0;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor>;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,int)>($f0, $i0);

     label2:
        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int calculateBoxBackgroundColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor>;

        $r3 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r3);

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        if $i0 != 3 goto label3;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r5 = virtualinvoke $r4.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label3:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyBoxUnderlineAttributes()>();

        virtualinvoke r0.<android.widget.LinearLayout: void invalidate()>();

        return;
    }

    private void applyBoxUnderlineAttributes()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean canDrawStroke()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r2);

     label2:
        virtualinvoke r0.<android.widget.LinearLayout: void invalidate()>();

        return;
    }

    private void applyCutoutPadding(android.graphics.RectF)
    {
        android.graphics.RectF $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        float $f0, $f1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 = $r1.<android.graphics.RectF: float left>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxLabelCutoutPaddingPx>;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r1.<android.graphics.RectF: float left> = $f0;

        $f0 = $r1.<android.graphics.RectF: float top>;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r1.<android.graphics.RectF: float top> = $f0;

        $f0 = $r1.<android.graphics.RectF: float right>;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        $r1.<android.graphics.RectF: float right> = $f0;

        $f0 = $r1.<android.graphics.RectF: float bottom>;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        $r1.<android.graphics.RectF: float bottom> = $f0;

        return;
    }

    private void applyEndIconTint()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        android.graphics.PorterDuff$Mode $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintList>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList endIconTintList>;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintMode>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode endIconTintMode>;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode)>($r1, $z0, $r2, $z1, $r3);

        return;
    }

    private void applyIconTint(com.google.android.material.internal.CheckableImageButton, boolean, android.content.res.ColorStateList, boolean, android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        android.graphics.drawable.Drawable $r4, $r5;
        android.graphics.PorterDuff$Mode $r3;
        android.content.res.ColorStateList $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.internal.CheckableImageButton;

        $z1 := @parameter1: boolean;

        $r2 := @parameter2: android.content.res.ColorStateList;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: android.graphics.PorterDuff$Mode;

        $r4 = virtualinvoke $r1.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        $r5 = $r4;

        if $r4 == null goto label3;

        if $z1 != 0 goto label1;

        if $z0 == 0 goto label3;

     label1:
        $r5 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r4);

        $r4 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r5 = $r4;

        if $z1 == 0 goto label2;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r2);

     label2:
        if $z0 == 0 goto label3;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r3);

     label3:
        $r4 = virtualinvoke $r1.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r4 == $r5 goto label4;

        virtualinvoke $r1.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r5);

     label4:
        return;
    }

    private void applyStartIconTint()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        android.graphics.PorterDuff$Mode $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hasStartIconTintList>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList startIconTintList>;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hasStartIconTintMode>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode startIconTintMode>;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode)>($r1, $z0, $r2, $z1, $r3);

        return;
    }

    private void assignBoxBackgroundByMode()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.ShapeAppearanceModel $r4;
        java.lang.IllegalArgumentException $r5;
        com.google.android.material.shape.MaterialShapeDrawable $r2;
        com.google.android.material.textfield.CutoutDrawable $r3;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label5;

        if $i0 == 1 goto label4;

        if $i0 != 2 goto label3;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $z0 = $r2 instanceof com.google.android.material.textfield.CutoutDrawable;

        if $z0 != 0 goto label1;

        $r3 = new com.google.android.material.textfield.CutoutDrawable;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r3.<com.google.android.material.textfield.CutoutDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r4);

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground> = $r3;

        goto label2;

     label1:
        $r2 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r4);

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground> = $r2;

     label2:
        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline> = null;

        return;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is illegal; only @BoxBackgroundMode constants are supported.");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label4:
        $r2 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r4);

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground> = $r2;

        $r2 = new com.google.android.material.shape.MaterialShapeDrawable;

        specialinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline> = $r2;

        return;

     label5:
        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground> = null;

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline> = null;

        return;
    }

    private int calculateBoxBackgroundColor()
    {
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 1 goto label1;

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int,int)>(r0, $i0, 0);

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int)>($i0, $i1);

        return $i0;

     label1:
        return $i1;
    }

    private android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r3;
        java.lang.IllegalStateException $r4;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label5;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpBoundsRect>;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $r3.<android.graphics.Rect: int bottom> = $i0;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label3;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int getLabelLeftBoundAlightWithPrefix(int,boolean)>($i0, $z0);

        $r3.<android.graphics.Rect: int left> = $i0;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingTop()>();

        $r3.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int getLabelRightBoundAlignedWithSuffix(int,boolean)>($i0, $z0);

        $r3.<android.graphics.Rect: int right> = $i0;

        return $r3;

     label3:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getPaddingLeft()>();

        $i0 = $i0 + $i1;

        $r3.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int calculateLabelMarginTop()>();

        $i0 = $i0 - $i1;

        $r3.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $r3.<android.graphics.Rect: int right> = $i0;

        return $r3;

     label4:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int getLabelLeftBoundAlightWithPrefix(int,boolean)>($i0, $z0);

        $r3.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxCollapsedPaddingTopPx>;

        $i0 = $i0 + $i1;

        $r3.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int getLabelRightBoundAlignedWithSuffix(int,boolean)>($i0, $z0);

        $r3.<android.graphics.Rect: int right> = $i0;

        return $r3;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;
    }

    private int calculateExpandedLabelBottom(android.graphics.Rect, android.graphics.Rect, float)
    {
        android.graphics.Rect $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        float $f0, $f1;
        android.widget.EditText $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 := @parameter1: android.graphics.Rect;

        $f0 := @parameter2: float;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isSingleLineFilledTextField()>();

        if $z0 == 0 goto label1;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i0;

        $f0 = $f1 + $f0;

        $i0 = (int) $f0;

        return $i0;

     label1:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r3.<android.widget.EditText: int getCompoundPaddingBottom()>();

        $i0 = $i0 - $i1;

        return $i0;
    }

    private int calculateExpandedLabelTop(android.graphics.Rect, float)
    {
        android.graphics.Rect $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        float $f0, $f1;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Rect;

        $f0 := @parameter1: float;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isSingleLineFilledTextField()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int centerY()>();

        $f1 = (float) $i0;

        $f0 = $f0 / 2.0F;

        $f0 = $f1 - $f0;

        $i0 = (int) $f0;

        return $i0;

     label1:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingTop()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    private android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r3;
        java.lang.IllegalStateException $r5;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        float $f0;
        android.widget.EditText $r2;
        com.google.android.material.internal.CollapsingTextHelper $r4;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpBoundsRect>;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $f0 = virtualinvoke $r4.<com.google.android.material.internal.CollapsingTextHelper: float getExpandedTextHeight()>();

        $i0 = $r1.<android.graphics.Rect: int left>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingLeft()>();

        $i0 = $i0 + $i1;

        $r3.<android.graphics.Rect: int left> = $i0;

        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int calculateExpandedLabelTop(android.graphics.Rect,float)>($r1, $f0);

        $r3.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i1;

        $r3.<android.graphics.Rect: int right> = $i0;

        $i0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)>($r1, $r3, $f0);

        $r3.<android.graphics.Rect: int bottom> = $i0;

        return $r3;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    private int calculateLabelMarginTop()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        float $f0;
        com.google.android.material.internal.CollapsingTextHelper $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label2;

        return 0;

     label2:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $f0 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextHeight()>();

        $f0 = $f0 / 2.0F;

     label3:
        $i0 = (int) $f0;

        return $i0;

     label4:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $f0 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextHeight()>();

        goto label3;
    }

    private boolean canDrawOutlineStroke()
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 2 goto label1;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean canDrawStroke()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean canDrawStroke()
    {
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx>;

        $i1 = -1;

        if $i0 <= $i1 goto label1;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void closeCutout()
    {
        com.google.android.material.textfield.CutoutDrawable $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $r2 = (com.google.android.material.textfield.CutoutDrawable) $r1;

        virtualinvoke $r2.<com.google.android.material.textfield.CutoutDrawable: void removeCutout()>();

     label1:
        return;
    }

    private void collapseHint(boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CollapsingTextHelper $r2;
        boolean $z0, $z1;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        if $r1 == null goto label1;

        $z1 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void cancel()>();

     label1:
        if $z0 == 0 goto label2;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintAnimationEnabled>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void animateToExpansionFraction(float)>(1.0F);

        goto label3;

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r2.<com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>(1.0F);

     label3:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded> = 0;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void openCutout()>();

     label4:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderText()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextVisibility()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextVisibility()>();

        return;
    }

    private boolean cutoutEnabled()
    {
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $z0 = $r2 instanceof com.google.android.material.textfield.CutoutDrawable;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void dispatchOnEditTextAttached()
    {
        java.util.Iterator $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        java.lang.Object $r3;
        java.util.LinkedHashSet $r1;
        com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet editTextAttachedListeners>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) $r3;

        interfaceinvoke $r4.<com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener: void onEditTextAttached(com.google.android.material.textfield.TextInputLayout)>(r0);

        goto label1;

     label2:
        return;
    }

    private void dispatchOnEndIconChanged(int)
    {
        java.util.Iterator $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener $r4;
        java.lang.Object $r3;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet endIconChangedListeners>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) $r3;

        interfaceinvoke $r4.<com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener: void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int)>(r0, $i0);

        goto label1;

     label2:
        return;
    }

    private void drawBoxUnderline(android.graphics.Canvas)
    {
        android.graphics.Rect $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.graphics.Canvas $r1;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline>;

        if $r3 == null goto label1;

        $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx>;

        $i0 = $i1 - $i0;

        $r2.<android.graphics.Rect: int top> = $i0;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline>;

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>($r1);

     label1:
        return;
    }

    private void drawHint(android.graphics.Canvas)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        android.graphics.Canvas $r1;
        com.google.android.material.internal.CollapsingTextHelper $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r2.<com.google.android.material.internal.CollapsingTextHelper: void draw(android.graphics.Canvas)>($r1);

     label1:
        return;
    }

    private void expandHint(boolean)
    {
        com.google.android.material.textfield.CutoutDrawable $r4;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CollapsingTextHelper $r2;
        boolean $z0, $z1;
        android.animation.ValueAnimator $r1;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        if $r1 == null goto label1;

        $z1 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void cancel()>();

     label1:
        if $z0 == 0 goto label2;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintAnimationEnabled>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void animateToExpansionFraction(float)>(0.0F);

        goto label3;

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r2.<com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>(0.0F);

     label3:
        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $r4 = (com.google.android.material.textfield.CutoutDrawable) $r3;

        $z0 = virtualinvoke $r4.<com.google.android.material.textfield.CutoutDrawable: boolean hasCutout()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void closeCutout()>();

     label4:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void hidePlaceholderText()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextVisibility()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextVisibility()>();

        return;
    }

    private com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
    {
        android.util.SparseArray $r1;
        com.google.android.material.textfield.EndIconDelegate $r3;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.google.android.material.textfield.EndIconDelegate) $r2;

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.util.SparseArray endIconDelegates>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(0);

        $r3 = (com.google.android.material.textfield.EndIconDelegate) $r2;

        return $r3;
    }

    private com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        return $r1;

     label1:
        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIcon()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isEndIconVisible()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        return $r1;

     label2:
        return null;
    }

    private int getLabelLeftBoundAlightWithPrefix(int, boolean)
    {
        android.widget.TextView $r3;
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.widget.EditText $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r1.<android.widget.EditText: int getCompoundPaddingLeft()>();

        $i0 = $i0 + $i1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence prefixText>;

        if $r2 == null goto label1;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $i1 = virtualinvoke $r3.<android.widget.TextView: int getMeasuredWidth()>();

        $i0 = $i0 - $i1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $i1 = virtualinvoke $r3.<android.widget.TextView: int getPaddingLeft()>();

        $i0 = $i0 + $i1;

     label1:
        return $i0;
    }

    private int getLabelRightBoundAlignedWithSuffix(int, boolean)
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.TextView $r3;
        int $i0, $i1, $i2;
        android.widget.EditText $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r1.<android.widget.EditText: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence prefixText>;

        if $r2 == null goto label1;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $i1 = virtualinvoke $r3.<android.widget.TextView: int getMeasuredWidth()>();

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $i2 = virtualinvoke $r3.<android.widget.TextView: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i1;

     label1:
        return $i0;
    }

    private boolean hasEndIcon()
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void hidePlaceholderText()
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r1 == null goto label1;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>(null);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(4);

     label1:
        return;
    }

    private boolean isErrorIconVisible()
    {
        int $i0;
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isSingleLineFilledTextField()
    {
        int $i0;
        android.widget.EditText $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label2;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getMinLines()>();

        if $i0 > 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    private void onApplyBoxBackgroundMode()
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void assignBoxBackgroundByMode()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEditTextBoxBackground()>();

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateInputLayoutMargins()>();

     label1:
        return;
    }

    private void openCutout()
    {
        android.graphics.RectF $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.MaterialShapeDrawable $r4;
        com.google.android.material.textfield.CutoutDrawable $r5;
        int $i0, $i1;
        float $f0, $f1;
        com.google.android.material.internal.CollapsingTextHelper $r2;
        android.widget.EditText $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.RectF tmpRectF>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i0 = virtualinvoke $r3.<android.widget.EditText: int getWidth()>();

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r3.<android.widget.EditText: int getGravity()>();

        virtualinvoke $r2.<com.google.android.material.internal.CollapsingTextHelper: void getCollapsedTextActualBounds(android.graphics.RectF,int,int)>($r1, $i0, $i1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyCutoutPadding(android.graphics.RectF)>($r1);

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingTop()>();

        $i0 = neg $i0;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.RectF: void offset(float,float)>($f0, $f1);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $r5 = (com.google.android.material.textfield.CutoutDrawable) $r4;

        virtualinvoke $r5.<com.google.android.material.textfield.CutoutDrawable: void setCutout(android.graphics.RectF)>($r1);

        return;
    }

    public static void recursiveSetEnabled(android.view.ViewGroup, boolean)
    {
        int $i0, $i1;
        android.view.View $r1;
        android.view.ViewGroup $r0, $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        virtualinvoke $r1.<android.view.View: void setEnabled(boolean)>($z0);

        $z1 = $r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label2;

        $r2 = (android.view.ViewGroup) $r1;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>($r2, $z0);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void removePlaceholderTextView()
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(8);

     label1:
        return;
    }

    private void setEditText(android.widget.EditText)
    {
        android.graphics.Typeface $r4;
        android.widget.LinearLayout $r10;
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.FrameLayout $r11;
        com.google.android.material.internal.CheckableImageButton $r12;
        android.text.Editable $r8;
        android.content.res.ColorStateList $r5;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController $r9;
        boolean $z0;
        com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate $r13;
        java.lang.CharSequence $r6;
        java.lang.IllegalArgumentException $r15;
        com.google.android.material.textfield.TextInputLayout$1 $r14;
        android.widget.TextView $r7;
        float $f0;
        android.widget.EditText $r1, $r2;
        com.google.android.material.internal.CollapsingTextHelper $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.widget.EditText;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 != null goto label7;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        if $i0 == 3 goto label1;

        $z0 = $r1 instanceof com.google.android.material.textfield.TextInputEditText;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextInputLayout", "EditText added is not a TextInputEditText. Please switch to using that class instead.");

     label1:
        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText> = $r1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void onApplyBoxBackgroundMode()>();

        $r13 = new com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate;

        specialinvoke $r13.<com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)>($r13);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r4 = virtualinvoke $r2.<android.widget.EditText: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r4);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $f0 = virtualinvoke $r2.<android.widget.EditText: float getTextSize()>();

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>($f0);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i0 = virtualinvoke $r2.<android.widget.EditText: int getGravity()>();

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $i1 = -113;

        $i1 = $i0 & $i1;

        $i1 = $i1 | 48;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>($i1);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>($i0);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r14 = new com.google.android.material.textfield.TextInputLayout$1;

        specialinvoke $r14.<com.google.android.material.textfield.TextInputLayout$1: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r2.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r14);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor>;

        if $r5 != null goto label2;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r5 = virtualinvoke $r2.<android.widget.EditText: android.content.res.ColorStateList getHintTextColors()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor> = $r5;

     label2:
        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label4;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label3;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r6 = virtualinvoke $r2.<android.widget.EditText: java.lang.CharSequence getHint()>();

        r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence originalHint> = $r6;

        $r6 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence originalHint>;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>($r6);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

     label3:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint> = 1;

     label4:
        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r7 == null goto label5;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r8 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r8.<android.text.Editable: int length()>();

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>($i0);

     label5:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>();

        $r9 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r9.<com.google.android.material.textfield.IndicatorViewController: void adjustIndicatorPadding()>();

        $r10 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        virtualinvoke $r10.<android.widget.LinearLayout: void bringToFront()>();

        $r10 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        virtualinvoke $r10.<android.widget.LinearLayout: void bringToFront()>();

        $r11 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        virtualinvoke $r11.<android.widget.FrameLayout: void bringToFront()>();

        $r12 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r12.<android.widget.ImageButton: void bringToFront()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void dispatchOnEditTextAttached()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextViewPadding()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextViewPadding()>();

        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z0 != 0 goto label6;

        virtualinvoke $r1.<android.widget.EditText: void setEnabled(boolean)>(0);

     label6:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>(0, 1);

        return;

     label7:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("We already have an EditText, can only have one");

        throw $r15;
    }

    private void setEditTextBoxBackground()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.EditText $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean shouldUseEditTextBackgroundForBoxBackground()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>($r2, $r1);

     label1:
        return;
    }

    private void setErrorIconVisible(boolean)
    {
        byte $b0, $b1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        android.widget.FrameLayout $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $b0 = 0;

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 8;

     label2:
        virtualinvoke $r1.<android.widget.ImageButton: void setVisibility(int)>($b1);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        if $z0 == 0 goto label3;

        $b0 = 8;

     label3:
        virtualinvoke $r2.<android.widget.FrameLayout: void setVisibility(int)>($b0);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextViewPadding()>();

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIcon()>();

        if $z0 != 0 goto label4;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>();

     label4:
        return;
    }

    private void setHintInternal(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CollapsingTextHelper $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r1, $r2);

        if $z0 != 0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint> = $r1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>($r1);

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void openCutout()>();

     label1:
        return;
    }

    public static void setIconClickable(com.google.android.material.internal.CheckableImageButton, android.view.View$OnLongClickListener)
    {
        android.view.View$OnLongClickListener $r1;
        byte $b0;
        com.google.android.material.internal.CheckableImageButton $r0;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: com.google.android.material.internal.CheckableImageButton;

        $r1 := @parameter1: android.view.View$OnLongClickListener;

        $z0 = staticinvoke <b.i.i.y: boolean z(android.view.View)>($r0);

        $z1 = 0;

        $b0 = 1;

        if $r1 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z0 != 0 goto label3;

        if $z2 == 0 goto label4;

     label3:
        $z1 = 1;

     label4:
        virtualinvoke $r0.<android.widget.ImageButton: void setFocusable(boolean)>($z1);

        virtualinvoke $r0.<android.widget.ImageButton: void setClickable(boolean)>($z0);

        virtualinvoke $r0.<com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)>($z0);

        virtualinvoke $r0.<android.widget.ImageButton: void setLongClickable(boolean)>($z2);

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        $b0 = 2;

     label6:
        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r0, $b0);

        return;
    }

    public static void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton, android.view.View$OnClickListener, android.view.View$OnLongClickListener)
    {
        com.google.android.material.internal.CheckableImageButton $r0;
        android.view.View$OnLongClickListener $r2;
        android.view.View$OnClickListener $r1;

        $r0 := @parameter0: com.google.android.material.internal.CheckableImageButton;

        $r1 := @parameter1: android.view.View$OnClickListener;

        $r2 := @parameter2: android.view.View$OnLongClickListener;

        virtualinvoke $r0.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r1);

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>($r0, $r2);

        return;
    }

    public static void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton, android.view.View$OnLongClickListener)
    {
        com.google.android.material.internal.CheckableImageButton $r0;
        android.view.View$OnLongClickListener $r1;

        $r0 := @parameter0: com.google.android.material.internal.CheckableImageButton;

        $r1 := @parameter1: android.view.View$OnLongClickListener;

        virtualinvoke $r0.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r1);

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>($r0, $r1);

        return;
    }

    private void setPlaceholderTextEnabled(boolean)
    {
        androidx.appcompat.widget.AppCompatTextView $r2;
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        android.content.res.ColorStateList $r4;
        android.widget.TextView $r3;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        if $z0 == 0 goto label2;

        $r2 = new androidx.appcompat.widget.AppCompatTextView;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView> = $r2;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        $i0 = <com.google.android.material.R$id: int textinput_placeholder>;

        virtualinvoke $r3.<android.widget.TextView: void setId(int)>($i0);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        staticinvoke <b.i.i.y: void g(android.view.View,int)>($r3, 1);

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int placeholderTextAppearance>;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)>($i0);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList placeholderTextColor>;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)>($r4);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void addPlaceholderTextView()>();

        goto label3;

     label2:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void removePlaceholderTextView()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView> = null;

     label3:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled> = $z0;

        return;
    }

    private boolean shouldUpdateEndDummyDrawable()
    {
        android.widget.LinearLayout $r3;
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getVisibility()>();

        if $i0 == 0 goto label2;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIcon()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isEndIconVisible()>();

        if $z0 != 0 goto label2;

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence suffixText>;

        if $r2 == null goto label3;

     label2:
        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $i0 = virtualinvoke $r3.<android.widget.LinearLayout: int getMeasuredWidth()>();

        if $i0 <= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private boolean shouldUpdateStartDummyDrawable()
    {
        android.widget.LinearLayout $r3;
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()>();

        if $r1 != null goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence prefixText>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $i0 = virtualinvoke $r3.<android.widget.LinearLayout: int getMeasuredWidth()>();

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean shouldUseEditTextBackgroundForBoxBackground()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        android.widget.EditText $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r3.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label1;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void showPlaceholderText()
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r1 == null goto label1;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence placeholderText>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(0);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        virtualinvoke $r1.<android.widget.TextView: void bringToFront()>();

     label1:
        return;
    }

    private void tintEndIconOnError(boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        com.google.android.material.internal.CheckableImageButton $r3;
        com.google.android.material.textfield.IndicatorViewController $r2;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()>();

        $r1 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r1);

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        staticinvoke <b.i.c.a.a: void b(android.graphics.drawable.Drawable,int)>($r1, $i0);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r3.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>();

        return;
    }

    private void updateBoxUnderlineBounds(android.graphics.Rect)
    {
        android.graphics.Rect $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1, $i2, $i3;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.graphics.Rect;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxUnderline>;

        if $r1 == null goto label1;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthFocusedPx>;

        $i2 = $i0 - $i1;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i3 = $r2.<android.graphics.Rect: int right>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i2, $i3, $i0);

     label1:
        return;
    }

    private void updateCounter()
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.widget.EditText $r2;
        android.text.Editable $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r1 == null goto label3;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r3.<android.text.Editable: int length()>();

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>($i0);

     label3:
        return;
    }

    public static void updateCounterContentDescription(android.content.Context, android.widget.TextView, int, int, boolean)
    {
        android.content.Context $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        android.widget.TextView $r0;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $r0 := @parameter1: android.widget.TextView;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        if $z0 == 0 goto label1;

        $i2 = <com.google.android.material.R$string: int character_counter_overflowed_content_description>;

        goto label2;

     label1:
        $i2 = <com.google.android.material.R$string: int character_counter_content_description>;

     label2:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[1] = $r3;

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i2, $r2);

        virtualinvoke $r0.<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>($r4);

        return;
    }

    private void updateCounterTextAppearanceAndColor()
    {
        android.content.res.ColorStateList $r2;
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r1 == null goto label4;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterOverflowTextAppearance>;

        goto label2;

     label1:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterTextAppearance>;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>($r1, $i0);

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 != 0 goto label3;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterTextColor>;

        if $r2 == null goto label3;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r2);

     label3:
        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterOverflowTextColor>;

        if $r2 == null goto label4;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r2);

     label4:
        return;
    }

    private boolean updateDummyDrawables()
    {
        android.widget.LinearLayout $r3;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r10;
        android.graphics.drawable.ColorDrawable $r5;
        android.graphics.drawable.Drawable $r1, $r4, $r7, $r8;
        int $i0, $i1;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r11;
        android.widget.TextView $r9;
        android.view.ViewGroup$MarginLayoutParams $r12;
        android.widget.EditText $r2;
        android.graphics.drawable.Drawable[] $r6;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 != null goto label01;

        return 0;

     label01:
        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean shouldUpdateStartDummyDrawable()>();

        if $z0 == 0 goto label04;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $i0 = virtualinvoke $r3.<android.widget.LinearLayout: int getMeasuredWidth()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startDummyDrawable>;

        if $r4 == null goto label02;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int startDummyDrawableWidth>;

        if $i1 == $i0 goto label03;

     label02:
        $r5 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r5.<android.graphics.drawable.ColorDrawable: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startDummyDrawable> = $r5;

        r0.<com.google.android.material.textfield.TextInputLayout: int startDummyDrawableWidth> = $i0;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startDummyDrawable>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int startDummyDrawableWidth>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, 1);

     label03:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r6 = staticinvoke <b.i.j.j: android.graphics.drawable.Drawable[] a(android.widget.TextView)>($r2);

        $r1 = $r6[0];

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startDummyDrawable>;

        if $r1 == $r4 goto label06;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r7 = $r6[1];

        $r1 = $r6[2];

        $r8 = $r6[3];

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, $r4, $r7, $r1, $r8);

        goto label05;

     label04:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startDummyDrawable>;

        if $r4 == null goto label06;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r6 = staticinvoke <b.i.j.j: android.graphics.drawable.Drawable[] a(android.widget.TextView)>($r2);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r4 = $r6[1];

        $r1 = $r6[2];

        $r7 = $r6[3];

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, null, $r4, $r1, $r7);

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable startDummyDrawable> = null;

     label05:
        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        $z1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean shouldUpdateEndDummyDrawable()>();

        if $z1 == 0 goto label12;

        $r9 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $i0 = virtualinvoke $r9.<android.widget.TextView: int getMeasuredWidth()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $r10 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()>();

        if $r10 == null goto label08;

        $i1 = virtualinvoke $r10.<android.view.View: int getMeasuredWidth()>();

        $i0 = $i0 + $i1;

        $r11 = virtualinvoke $r10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r12 = (android.view.ViewGroup$MarginLayoutParams) $r11;

        $i1 = staticinvoke <b.i.i.f: int b(android.view.ViewGroup$MarginLayoutParams)>($r12);

        $i0 = $i0 + $i1;

     label08:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r6 = staticinvoke <b.i.j.j: android.graphics.drawable.Drawable[] a(android.widget.TextView)>($r2);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        if $r4 == null goto label10;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int endDummyDrawableWidth>;

        if $i1 == $i0 goto label10;

        r0.<com.google.android.material.textfield.TextInputLayout: int endDummyDrawableWidth> = $i0;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endDummyDrawableWidth>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, 1);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r4 = $r6[0];

        $r1 = $r6[1];

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        $r8 = $r6[3];

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, $r4, $r1, $r7, $r8);

     label09:
        return 1;

     label10:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        if $r4 != null goto label11;

        $r5 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r5.<android.graphics.drawable.ColorDrawable: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable> = $r5;

        r0.<com.google.android.material.textfield.TextInputLayout: int endDummyDrawableWidth> = $i0;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endDummyDrawableWidth>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, 1);

     label11:
        $r1 = $r6[2];

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        if $r1 == $r4 goto label14;

        $r1 = $r6[2];

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable originalEditTextEndDrawable> = $r1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r1 = $r6[0];

        $r7 = $r6[1];

        $r8 = $r6[3];

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, $r1, $r7, $r4, $r8);

        goto label09;

     label12:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        if $r4 == null goto label14;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r6 = staticinvoke <b.i.j.j: android.graphics.drawable.Drawable[] a(android.widget.TextView)>($r2);

        $r4 = $r6[2];

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable>;

        if $r4 != $r1 goto label13;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r4 = $r6[0];

        $r1 = $r6[1];

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable originalEditTextEndDrawable>;

        $r8 = $r6[3];

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, $r4, $r1, $r7, $r8);

        $z0 = 1;

     label13:
        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable endDummyDrawable> = null;

     label14:
        return $z0;
    }

    private boolean updateEditTextHeightBasedOnIcon()
    {
        android.widget.LinearLayout $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.widget.EditText $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout endLayout>;

        $i0 = virtualinvoke $r2.<android.widget.LinearLayout: int getMeasuredHeight()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.LinearLayout startLayout>;

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getMeasuredHeight()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r1.<android.widget.EditText: int getMeasuredHeight()>();

        if $i1 >= $i0 goto label2;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r1.<android.widget.EditText: void setMinimumHeight(int)>($i0);

        return 1;

     label2:
        return 0;
    }

    private void updateIconColorOnState(com.google.android.material.internal.CheckableImageButton, android.content.res.ColorStateList)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        android.graphics.drawable.Drawable $r3, $r4;
        android.content.res.ColorStateList $r2;
        int[] $r5;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.internal.CheckableImageButton;

        $r2 := @parameter1: android.content.res.ColorStateList;

        $r3 = virtualinvoke $r1.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        $r4 = virtualinvoke $r1.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r4 == null goto label2;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<android.widget.LinearLayout: int[] getDrawableState()>();

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, $i0);

        $r3 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r3);

        $r3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r3, $r2);

        virtualinvoke $r1.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r3);

     label2:
        return;
    }

    private void updateInputLayoutMargins()
    {
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.widget.FrameLayout $r1;
        android.widget.LinearLayout$LayoutParams $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 1 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        $r2 = virtualinvoke $r1.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int calculateLabelMarginTop()>();

        $i0 = $r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        if $i1 == $i0 goto label1;

        $r3.<android.widget.LinearLayout$LayoutParams: int topMargin> = $i1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void requestLayout()>();

     label1:
        return;
    }

    private void updateLabelState(boolean, boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        android.text.Editable $r2;
        android.content.res.ColorStateList $r4;
        android.widget.TextView $r7;
        int[] $r6;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r3;
        android.widget.EditText $r1;
        com.google.android.material.internal.CollapsingTextHelper $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label01;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z3 != 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label03;

        $z4 = virtualinvoke $r1.<android.widget.EditText: boolean hasFocus()>();

        if $z4 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z5 = virtualinvoke $r3.<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>();

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor>;

        if $r4 == null goto label05;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r4);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor>;

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>($r4);

     label05:
        if $z2 != 0 goto label08;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor>;

        if $r4 == null goto label06;

        $r6 = newarray (int)[1];

        $r6[0] = -16842910;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int disabledColor>;

        $i0 = virtualinvoke $r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r6, $i0);

        goto label07;

     label06:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int disabledColor>;

     label07:
        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r4 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r4);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r4 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>($r4);

        goto label11;

     label08:
        if $z5 == 0 goto label09;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $r4 = virtualinvoke $r3.<com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList getErrorViewTextColors()>();

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r4);

        goto label11;

     label09:
        $z2 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z2 == 0 goto label10;

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r7 == null goto label10;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r4 = virtualinvoke $r7.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r4);

        goto label11;

     label10:
        if $z4 == 0 goto label11;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        if $r4 == null goto label11;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r5.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r4);

     label11:
        if $z3 != 0 goto label14;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z2 == 0 goto label12;

        if $z4 != 0 goto label14;

        if $z5 == 0 goto label12;

        goto label14;

     label12:
        if $z1 != 0 goto label13;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded>;

        if $z1 != 0 goto label16;

     label13:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void expandHint(boolean)>($z0);

        return;

     label14:
        if $z1 != 0 goto label15;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded>;

        if $z1 == 0 goto label16;

     label15:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>($z0);

     label16:
        return;
    }

    private void updatePlaceholderMeasurementsBasedOnEditText()
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1, $i2, $i3;
        android.widget.EditText $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<android.widget.EditText: int getGravity()>();

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        virtualinvoke $r1.<android.widget.TextView: void setGravity(int)>($i0);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i0 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingLeft()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingTop()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i2 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingRight()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i3 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingBottom()>();

        virtualinvoke $r1.<android.widget.TextView: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

     label1:
        return;
    }

    private void updatePlaceholderText()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.widget.EditText $r1;
        android.text.Editable $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

     label2:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderText(int)>($i0);

        return;
    }

    private void updatePlaceholderText(int)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void showPlaceholderText()>();

        return;

     label1:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void hidePlaceholderText()>();

        return;
    }

    private void updatePrefixTextViewPadding()
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1, $i2;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isStartIconVisible()>();

        if $z0 == 0 goto label2;

        $i0 = 0;

        goto label3;

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i0 = staticinvoke <b.i.i.y: int u(android.view.View)>($r2);

     label3:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingTop()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i2 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingBottom()>();

        staticinvoke <b.i.i.y: void b(android.view.View,int,int,int,int)>($r1, $i0, $i1, 0, $i2);

        return;
    }

    private void updatePrefixTextVisibility()
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        byte $b0;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence prefixText>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isHintExpanded()>();

        if $z0 != 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 8;

     label2:
        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>($b0);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>();

        return;
    }

    private void updateStrokeErrorColor(boolean, boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        android.content.res.ColorStateList $r1;
        int[] $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        $r2 = newarray (int)[2];

        $r2[0] = 16843623;

        $r2[1] = 16842910;

        $i1 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        $r2 = newarray (int)[2];

        $r2[0] = 16843518;

        $r2[1] = 16842910;

        $i2 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        if $z0 == 0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i2;

        return;

     label1:
        if $z1 == 0 goto label2;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i1;

        return;

     label2:
        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

        return;
    }

    private void updateSuffixTextViewPadding()
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1, $i2;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isEndIconVisible()>();

        if $z0 != 0 goto label3;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isErrorIconVisible()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i0 = staticinvoke <b.i.i.y: int t(android.view.View)>($r2);

        goto label4;

     label3:
        $i0 = 0;

     label4:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r2.<android.widget.EditText: int getPaddingTop()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i2 = virtualinvoke $r2.<android.widget.EditText: int getPaddingBottom()>();

        staticinvoke <b.i.i.y: void b(android.view.View,int,int,int,int)>($r1, 0, $i1, $i0, $i2);

        return;
    }

    private void updateSuffixTextVisibility()
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.TextView $r1;
        byte $b1;
        com.google.android.material.textfield.EndIconDelegate $r3;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getVisibility()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence suffixText>;

        $b1 = 0;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isHintExpanded()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $b1 = 8;

     label4:
        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>($b1);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $i2 = virtualinvoke $r1.<android.widget.TextView: int getVisibility()>();

        if $i0 == $i2 goto label5;

        $r3 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()>();

        virtualinvoke $r3.<com.google.android.material.textfield.EndIconDelegate: void onSuffixVisibilityChanged(boolean)>($z0);

     label5:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>();

        return;
    }

    public void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener $r1;
        java.util.LinkedHashSet $r2;
        android.widget.EditText $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet editTextAttachedListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label1;

        interfaceinvoke $r1.<com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener: void onEditTextAttached(com.google.android.material.textfield.TextInputLayout)>(r0);

     label1:
        return;
    }

    public void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    {
        com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener $r1;
        java.util.LinkedHashSet $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet endIconChangedListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.FrameLayout $r4;
        int $i0, $i1;
        android.view.View $r2;
        android.widget.FrameLayout$LayoutParams $r3, $r6;
        android.widget.EditText $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = $r2 instanceof android.widget.EditText;

        if $z0 == 0 goto label1;

        $r6 = new android.widget.FrameLayout$LayoutParams;

        $r3 = $r6;

        specialinvoke $r6.<android.widget.FrameLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        $i0 = $r3.<android.widget.FrameLayout$LayoutParams: int gravity>;

        $i1 = -113;

        $i0 = $i0 & $i1;

        $i0 = $i0 | 16;

        $r3.<android.widget.FrameLayout$LayoutParams: int gravity> = $i0;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r2, $r3);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout inputFrame>;

        virtualinvoke $r4.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateInputLayoutMargins()>();

        $r5 = (android.widget.EditText) $r2;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>($r5);

        return;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r2, $i0, $r1);

        return;
    }

    public void animateToExpansionFraction(float)
    {
        android.animation.TimeInterpolator $r3;
        com.google.android.material.textfield.TextInputLayout r0;
        float[] $r5;
        com.google.android.material.textfield.TextInputLayout$4 $r4;
        byte $b0;
        float $f0, $f1;
        com.google.android.material.internal.CollapsingTextHelper $r1;
        android.animation.ValueAnimator $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $f0 := @parameter0: float;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $f1 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: float getExpansionFraction()>();

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        if $r2 != null goto label2;

        $r2 = new android.animation.ValueAnimator;

        specialinvoke $r2.<android.animation.ValueAnimator: void <init>()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator> = $r2;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        $r3 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r3);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(167L);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        $r4 = new com.google.android.material.textfield.TextInputLayout$4;

        specialinvoke $r4.<com.google.android.material.textfield.TextInputLayout$4: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r2.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        $r5 = newarray (float)[2];

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $f1 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: float getExpansionFraction()>();

        $r5[0] = $f1;

        $r5[1] = $f0;

        virtualinvoke $r2.<android.animation.ValueAnimator: void setFloatValues(float[])>($r5);

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.animation.ValueAnimator animator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void start()>();

        return;
    }

    public void clearOnEditTextAttachedListeners()
    {
        java.util.LinkedHashSet $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet editTextAttachedListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public void clearOnEndIconChangedListeners()
    {
        java.util.LinkedHashSet $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet endIconChangedListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public boolean cutoutIsOpen()
    {
        com.google.android.material.textfield.CutoutDrawable $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $r2 = (com.google.android.material.textfield.CutoutDrawable) $r1;

        $z0 = virtualinvoke $r2.<com.google.android.material.textfield.CutoutDrawable: boolean hasCutout()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dispatchProvideAutofillStructure(android.view.ViewStructure, int)
    {
        java.lang.Throwable $r5;
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        android.view.ViewStructure $r3;
        int $i0;
        android.widget.EditText $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r3 := @parameter0: android.view.ViewStructure;

        $i0 := @parameter1: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence originalHint>;

        if $r1 == null goto label5;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r4 != null goto label1;

        goto label5;

     label1:
        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint>;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint> = 0;

        $r2 = virtualinvoke $r4.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence originalHint>;

        virtualinvoke $r4.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r1);

     label2:
        specialinvoke r0.<android.widget.LinearLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>($r3, $i0);

     label3:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r4.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r2);

        r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint> = $z0;

        return;

     label4:
        $r5 := @caughtexception;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r4.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r2);

        r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint> = $z0;

        throw $r5;

     label5:
        specialinvoke r0.<android.widget.LinearLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>($r3, $i0);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.util.SparseArray $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.util.SparseArray;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean restoringSavedState> = 1;

        specialinvoke r0.<android.widget.LinearLayout: void dispatchRestoreInstanceState(android.util.SparseArray)>($r1);

        r0.<com.google.android.material.textfield.TextInputLayout: boolean restoringSavedState> = 0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.Canvas $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>($r1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void drawHint(android.graphics.Canvas)>($r1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void drawBoxUnderline(android.graphics.Canvas)>($r1);

        return;
    }

    public void drawableStateChanged()
    {
        int[] $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CollapsingTextHelper $r2;
        android.widget.EditText $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean inDrawableStateChanged>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = 1;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean inDrawableStateChanged> = 1;

        specialinvoke r0.<android.widget.LinearLayout: void drawableStateChanged()>();

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: int[] getDrawableState()>();

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        if $r2 == null goto label2;

        $z1 = virtualinvoke $r2.<com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>($r1);

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label6;

        $z2 = staticinvoke <b.i.i.y: boolean E(android.view.View)>(r0);

        if $z2 == 0 goto label4;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>($z0);

     label6:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>();

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        if $z1 == 0 goto label7;

        virtualinvoke r0.<android.widget.LinearLayout: void invalidate()>();

     label7:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean inDrawableStateChanged> = 0;

        return;
    }

    public int getBaseline()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.widget.EditText $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getBaseline()>();

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingTop()>();

        $i0 = $i0 + $i1;

        $i1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: int calculateLabelMarginTop()>();

        $i0 = $i0 + $i1;

        return $i0;

     label1:
        $i0 = specialinvoke r0.<android.widget.LinearLayout: int getBaseline()>();

        return $i0;
    }

    public com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
    {
        java.lang.IllegalStateException $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        com.google.android.material.shape.MaterialShapeDrawable r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 1 goto label2;

        if $i0 != 2 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label2:
        r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        return r2;
    }

    public int getBoxBackgroundColor()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor>;

        return i0;
    }

    public int getBoxBackgroundMode()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        return i0;
    }

    public float getBoxCornerRadiusBottomEnd()
    {
        float $f0;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getBottomLeftCornerResolvedSize()>();

        return $f0;
    }

    public float getBoxCornerRadiusBottomStart()
    {
        float $f0;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getBottomRightCornerResolvedSize()>();

        return $f0;
    }

    public float getBoxCornerRadiusTopEnd()
    {
        float $f0;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getTopRightCornerResolvedSize()>();

        return $f0;
    }

    public float getBoxCornerRadiusTopStart()
    {
        float $f0;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getTopLeftCornerResolvedSize()>();

        return $f0;
    }

    public int getBoxStrokeColor()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor>;

        return i0;
    }

    public android.content.res.ColorStateList getBoxStrokeErrorColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        return r1;
    }

    public int getBoxStrokeWidth()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthDefaultPx>;

        return i0;
    }

    public int getBoxStrokeWidthFocused()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthFocusedPx>;

        return i0;
    }

    public int getCounterMaxLength()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength>;

        return i0;
    }

    public java.lang.CharSequence getCounterOverflowDescription()
    {
        android.widget.TextView $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterEnabled>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getContentDescription()>();

        return $r1;

     label1:
        return null;
    }

    public android.content.res.ColorStateList getCounterOverflowTextColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterTextColor>;

        return r1;
    }

    public android.content.res.ColorStateList getCounterTextColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterTextColor>;

        return r1;
    }

    public android.content.res.ColorStateList getDefaultHintTextColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor>;

        return r1;
    }

    public android.widget.EditText getEditText()
    {
        android.widget.EditText r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        return r1;
    }

    public java.lang.CharSequence getEndIconContentDescription()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $r1;
    }

    public android.graphics.drawable.Drawable getEndIconDrawable()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;
    }

    public int getEndIconMode()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        return i0;
    }

    public com.google.android.material.internal.CheckableImageButton getEndIconView()
    {
        com.google.android.material.internal.CheckableImageButton r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        return r1;
    }

    public java.lang.CharSequence getError()
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $r2 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getErrorText()>();

        return $r2;

     label1:
        return null;
    }

    public java.lang.CharSequence getErrorContentDescription()
    {
        com.google.android.material.textfield.IndicatorViewController $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $r1 = virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getErrorContentDescription()>();

        return $r1;
    }

    public int getErrorCurrentTextColors()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable getErrorIconDrawable()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;
    }

    public final int getErrorTextCurrentColor()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        return $i0;
    }

    public java.lang.CharSequence getHelperText()
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: boolean isHelperTextEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $r2 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getHelperText()>();

        return $r2;

     label1:
        return null;
    }

    public int getHelperTextCurrentTextColor()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: int getHelperTextViewCurrentTextColor()>();

        return $i0;
    }

    public java.lang.CharSequence getHint()
    {
        java.lang.CharSequence r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        return r1;

     label1:
        return null;
    }

    public final float getHintCollapsedTextHeight()
    {
        float $f0;
        com.google.android.material.internal.CollapsingTextHelper $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $f0 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextHeight()>();

        return $f0;
    }

    public final int getHintCurrentCollapsedTextColor()
    {
        int $i0;
        com.google.android.material.internal.CollapsingTextHelper $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $i0 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: int getCurrentCollapsedTextColor()>();

        return $i0;
    }

    public android.content.res.ColorStateList getHintTextColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        return r1;
    }

    public java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $r1;
    }

    public android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;
    }

    public java.lang.CharSequence getPlaceholderText()
    {
        java.lang.CharSequence r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence placeholderText>;

        return r1;

     label1:
        return null;
    }

    public int getPlaceholderTextAppearance()
    {
        int i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        i0 = r0.<com.google.android.material.textfield.TextInputLayout: int placeholderTextAppearance>;

        return i0;
    }

    public android.content.res.ColorStateList getPlaceholderTextColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList placeholderTextColor>;

        return r1;
    }

    public java.lang.CharSequence getPrefixText()
    {
        java.lang.CharSequence r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence prefixText>;

        return r1;
    }

    public android.content.res.ColorStateList getPrefixTextColor()
    {
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        $r1 = virtualinvoke $r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        return $r1;
    }

    public android.widget.TextView getPrefixTextView()
    {
        android.widget.TextView r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        return r1;
    }

    public java.lang.CharSequence getStartIconContentDescription()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $r1;
    }

    public android.graphics.drawable.Drawable getStartIconDrawable()
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;
    }

    public java.lang.CharSequence getSuffixText()
    {
        java.lang.CharSequence r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence suffixText>;

        return r1;
    }

    public android.content.res.ColorStateList getSuffixTextColor()
    {
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        $r1 = virtualinvoke $r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        return $r1;
    }

    public android.widget.TextView getSuffixTextView()
    {
        android.widget.TextView r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        return r1;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.graphics.Typeface r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface typeface>;

        return r1;
    }

    public boolean isCounterEnabled()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterEnabled>;

        return z0;
    }

    public boolean isEndIconCheckable()
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $z0 = virtualinvoke $r1.<com.google.android.material.internal.CheckableImageButton: boolean isCheckable()>();

        return $z0;
    }

    public boolean isEndIconVisible()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.FrameLayout $r1;
        int $i0;
        com.google.android.material.internal.CheckableImageButton $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.FrameLayout endIconFrame>;

        $i0 = virtualinvoke $r1.<android.widget.FrameLayout: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $i0 = virtualinvoke $r2.<android.widget.ImageButton: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isErrorEnabled()
    {
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()>();

        return $z0;
    }

    public final boolean isHelperTextDisplayed()
    {
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: boolean helperTextIsDisplayed()>();

        return $z0;
    }

    public boolean isHelperTextEnabled()
    {
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: boolean isHelperTextEnabled()>();

        return $z0;
    }

    public boolean isHintAnimationEnabled()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintAnimationEnabled>;

        return z0;
    }

    public boolean isHintEnabled()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        return z0;
    }

    public final boolean isHintExpanded()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded>;

        return z0;
    }

    public boolean isPasswordVisibilityToggleEnabled()
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isProvidingHint()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint>;

        return z0;
    }

    public boolean isStartIconCheckable()
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $z0 = virtualinvoke $r1.<com.google.android.material.internal.CheckableImageButton: boolean isCheckable()>();

        return $z0;
    }

    public boolean isStartIconVisible()
    {
        int $i0;
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        android.graphics.Rect $r2, $r4;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1, $i2, $i3;
        float $f0;
        android.widget.EditText $r1;
        com.google.android.material.internal.CollapsingTextHelper $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i0 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i1, $i2, $i3, $i0);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect tmpRect>;

        staticinvoke <com.google.android.material.internal.DescendantOffsetUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>(r0, $r1, $r2);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateBoxUnderlineBounds(android.graphics.Rect)>($r2);

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $f0 = virtualinvoke $r1.<android.widget.EditText: float getTextSize()>();

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>($f0);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $i1 = virtualinvoke $r1.<android.widget.EditText: int getGravity()>();

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $i2 = -113;

        $i2 = $i1 & $i2;

        $i2 = $i2 | 48;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>($i2);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>($i1);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r4 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)>($r2);

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedBounds(android.graphics.Rect)>($r4);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r2 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)>($r2);

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setExpandedBounds(android.graphics.Rect)>($r2);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void recalculate()>();

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>();

        if $z0 == 0 goto label1;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintExpanded>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void openCutout()>();

     label1:
        return;
    }

    public void onMeasure(int, int)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout$3 $r2;
        android.widget.EditText $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateEditTextHeightBasedOnIcon()>();

        $z1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>();

        if $z0 != 0 goto label1;

        if $z1 == 0 goto label2;

     label1:
        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r2 = new com.google.android.material.textfield.TextInputLayout$3;

        specialinvoke $r2.<com.google.android.material.textfield.TextInputLayout$3: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r1.<android.widget.EditText: boolean post(java.lang.Runnable)>($r2);

     label2:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderMeasurementsBasedOnEditText()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextViewPadding()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextViewPadding()>();

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.google.android.material.textfield.TextInputLayout$SavedState $r2;
        android.os.Parcelable $r1;
        java.lang.CharSequence $r3;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r4;
        com.google.android.material.textfield.TextInputLayout$2 $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof com.google.android.material.textfield.TextInputLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (com.google.android.material.textfield.TextInputLayout$SavedState) $r1;

        $r1 = virtualinvoke $r2.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = $r2.<com.google.android.material.textfield.TextInputLayout$SavedState: java.lang.CharSequence error>;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>($r3);

        $z0 = $r2.<com.google.android.material.textfield.TextInputLayout$SavedState: boolean isEndIconChecked>;

        if $z0 == 0 goto label2;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r5 = new com.google.android.material.textfield.TextInputLayout$2;

        specialinvoke $r5.<com.google.android.material.textfield.TextInputLayout$2: void <init>(com.google.android.material.textfield.TextInputLayout)>(r0);

        virtualinvoke $r4.<android.widget.ImageButton: boolean post(java.lang.Runnable)>($r5);

     label2:
        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.google.android.material.textfield.TextInputLayout$SavedState $r1;
        android.os.Parcelable $r2;
        java.lang.CharSequence $r4;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r5;
        com.google.android.material.textfield.IndicatorViewController $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = specialinvoke r0.<android.widget.LinearLayout: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new com.google.android.material.textfield.TextInputLayout$SavedState;

        specialinvoke $r1.<com.google.android.material.textfield.TextInputLayout$SavedState: void <init>(android.os.Parcelable)>($r2);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r3.<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>();

        $r1.<com.google.android.material.textfield.TextInputLayout$SavedState: java.lang.CharSequence error> = $r4;

     label1:
        $z0 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIcon()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $z0 = virtualinvoke $r5.<com.google.android.material.internal.CheckableImageButton: boolean isChecked()>();

        if $z0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r1.<com.google.android.material.textfield.TextInputLayout$SavedState: boolean isEndIconChecked> = $z0;

        return $r1;
    }

    public void passwordVisibilityToggleRequested(boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        com.google.android.material.internal.CheckableImageButton $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        if $i0 != 1 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r1.<android.widget.ImageButton: boolean performClick()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r1.<android.widget.ImageButton: void jumpDrawablesToCurrentState()>();

     label1:
        return;
    }

    public void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
    {
        com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener $r1;
        java.util.LinkedHashSet $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet editTextAttachedListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    {
        com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener $r1;
        java.util.LinkedHashSet $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: java.util.LinkedHashSet endIconChangedListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void setBoxBackgroundColor(int)
    {
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor> = $i0;

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedFilledBackgroundColor> = $i0;

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor> = $i0;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyBoxAttributes()>();

     label1:
        return;
    }

    public void setBoxBackgroundColorResource(int)
    {
        int $i0;
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i0 = staticinvoke <b.i.b.a: int a(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)>($i0);

        return;
    }

    public void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        int[] $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor> = $i0;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        $r2 = newarray (int)[1];

        $r2[0] = -16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int disabledFilledBackgroundColor> = $i0;

        $r2 = newarray (int)[2];

        $r2[0] = 16842908;

        $r2[1] = 16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedFilledBackgroundColor> = $i0;

        $r2 = newarray (int)[2];

        $r2[0] = 16843623;

        $r2[1] = 16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor> = $i0;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyBoxAttributes()>();

        return;
    }

    public void setBoxBackgroundMode(int)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        android.widget.EditText $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i1 := @parameter0: int;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode> = $i1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label2;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void onApplyBoxBackgroundMode()>();

     label2:
        return;
    }

    public void setBoxCornerRadii(float, float, float, float)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        byte $b0;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $f3 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        if $r1 == null goto label1;

        $f4 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getTopLeftCornerResolvedSize()>();

        $b0 = $f4 cmpl $f3;

        if $b0 != 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f4 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getTopRightCornerResolvedSize()>();

        $b0 = $f4 cmpl $f0;

        if $b0 != 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f4 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getBottomRightCornerResolvedSize()>();

        $b0 = $f4 cmpl $f2;

        if $b0 != 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        $f4 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getBottomLeftCornerResolvedSize()>();

        $b0 = $f4 cmpl $f1;

        if $b0 == 0 goto label2;

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r3 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()>();

        $r3 = virtualinvoke $r3.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float)>($f3);

        $r3 = virtualinvoke $r3.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float)>($f0);

        $r3 = virtualinvoke $r3.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float)>($f2);

        $r3 = virtualinvoke $r3.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float)>($f1);

        $r2 = virtualinvoke $r3.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r2;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyBoxAttributes()>();

     label2:
        return;
    }

    public void setBoxCornerRadiiResources(int, int, int, int)
    {
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        android.content.res.Resources $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i0);

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $f1 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i1);

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $f2 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i3);

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $f3 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i2);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxCornerRadii(float,float,float,float)>($f0, $f1, $f2, $f3);

        return;
    }

    public void setBoxStrokeColor(int)
    {
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor> = $i0;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

     label1:
        return;
    }

    public void setBoxStrokeColorStateList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        int[] $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $z0 = virtualinvoke $r1.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int defaultStrokeColor> = $i0;

        $r2 = newarray (int)[1];

        $r2[0] = -16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int disabledColor> = $i0;

        $r2 = newarray (int)[2];

        $r2[0] = 16843623;

        $r2[1] = 16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int hoveredStrokeColor> = $i0;

        $r2 = newarray (int)[2];

        $r2[0] = 16842908;

        $r2[1] = 16842910;

        $i0 = -1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i0);

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor> = $i0;

        goto label2;

     label1:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor>;

        $i1 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        if $i0 == $i1 goto label2;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor> = $i0;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        return;
    }

    public void setBoxStrokeErrorColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor> = $r1;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

     label1:
        return;
    }

    public void setBoxStrokeWidth(int)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthDefaultPx> = $i0;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        return;
    }

    public void setBoxStrokeWidthFocused(int)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthFocusedPx> = $i0;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        return;
    }

    public void setBoxStrokeWidthFocusedResource(int)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)>($i0);

        return;
    }

    public void setBoxStrokeWidthResource(int)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)>($i0);

        return;
    }

    public void setCounterEnabled(boolean)
    {
        androidx.appcompat.widget.AppCompatTextView $r1;
        android.graphics.Typeface $r4;
        android.content.Context $r2;
        android.view.ViewGroup$LayoutParams $r6;
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.TextView $r3;
        android.view.ViewGroup$MarginLayoutParams $r7;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r5;
        boolean $z0, $z1;
        android.content.res.Resources $r8;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterEnabled>;

        if $z1 == $z0 goto label4;

        if $z0 == 0 goto label2;

        $r1 = new androidx.appcompat.widget.AppCompatTextView;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r1.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r2);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView> = $r1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        $i0 = <com.google.android.material.R$id: int textinput_counter>;

        virtualinvoke $r3.<android.widget.TextView: void setId(int)>($i0);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface typeface>;

        if $r4 == null goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r3.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r4);

     label1:
        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r3.<android.widget.TextView: void setMaxLines(int)>(1);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r5.<com.google.android.material.textfield.IndicatorViewController: void addIndicator(android.widget.TextView,int)>($r3, 2);

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        $r6 = virtualinvoke $r3.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (android.view.ViewGroup$MarginLayoutParams) $r6;

        $r8 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int mtrl_textinput_counter_margin_start>;

        $i0 = virtualinvoke $r8.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i0);

        staticinvoke <b.i.i.f: void b(android.view.ViewGroup$MarginLayoutParams,int)>($r7, $i0);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounter()>();

        goto label3;

     label2:
        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r5.<com.google.android.material.textfield.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>($r3, 2);

        r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView> = null;

     label3:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean counterEnabled> = $z0;

     label4:
        return;
    }

    public void setCounterMaxLength(int)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i1 := @parameter0: int;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength>;

        if $i0 == $i1 goto label3;

        if $i1 <= 0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength> = $i1;

        goto label2;

     label1:
        $i1 = -1;

        r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength> = $i1;

     label2:
        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterEnabled>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounter()>();

     label3:
        return;
    }

    public void setCounterOverflowTextAppearance(int)
    {
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int counterOverflowTextAppearance>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: int counterOverflowTextAppearance> = $i0;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>();

     label1:
        return;
    }

    public void setCounterOverflowTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterOverflowTextColor>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterOverflowTextColor> = $r1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>();

     label1:
        return;
    }

    public void setCounterTextAppearance(int)
    {
        int $i0, $i1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int counterTextAppearance>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: int counterTextAppearance> = $i0;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>();

     label1:
        return;
    }

    public void setCounterTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterTextColor>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList counterTextColor> = $r1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>();

     label1:
        return;
    }

    public void setDefaultHintTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        android.widget.EditText $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor> = $r1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor> = $r1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>(0);

     label1:
        return;
    }

    public void setEnabled(boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>(r0, $z0);

        specialinvoke r0.<android.widget.LinearLayout: void setEnabled(boolean)>($z0);

        return;
    }

    public void setEndIconActivated(boolean)
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r1.<android.widget.ImageButton: void setActivated(boolean)>($z0);

        return;
    }

    public void setEndIconCheckable(boolean)
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r1.<com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)>($z0);

        return;
    }

    public void setEndIconContentDescription(int)
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setEndIconContentDescription(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()>();

        if $r2 == $r1 goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r3.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

     label1:
        return;
    }

    public void setEndIconDrawable(int)
    {
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setEndIconDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setEndIconMode(int)
    {
        java.lang.IllegalStateException $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.EndIconDelegate $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode> = $i0;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void dispatchOnEndIconChanged(int)>($i1);

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)>($z0);

        $r1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()>();

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        $z0 = virtualinvoke $r1.<com.google.android.material.textfield.EndIconDelegate: boolean isBoxBackgroundModeSupported(int)>($i1);

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()>();

        virtualinvoke $r1.<com.google.android.material.textfield.EndIconDelegate: void initialize()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>();

        return;

     label3:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current box background mode ");

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported by the end icon mode ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public void setEndIconOnClickListener(android.view.View$OnClickListener)
    {
        android.view.View$OnLongClickListener $r3;
        android.view.View$OnClickListener $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.view.View$OnClickListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener endIconOnLongClickListener>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)>($r2, $r1, $r3);

        return;
    }

    public void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
    {
        android.view.View$OnLongClickListener $r1;
        com.google.android.material.internal.CheckableImageButton $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.view.View$OnLongClickListener;

        r0.<com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener endIconOnLongClickListener> = $r1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>($r2, $r1);

        return;
    }

    public void setEndIconTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.content.res.ColorStateList;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList endIconTintList>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList endIconTintList> = $r2;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintList> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>();

     label1:
        return;
    }

    public void setEndIconTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.graphics.PorterDuff$Mode;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode endIconTintMode>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode endIconTintMode> = $r2;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintMode> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>();

     label1:
        return;
    }

    public void setEndIconVisible(boolean)
    {
        byte $b0;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isEndIconVisible()>();

        if $z0 == $z1 goto label3;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        if $z1 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 8;

     label2:
        virtualinvoke $r1.<android.widget.ImageButton: void setVisibility(int)>($b0);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextViewPadding()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>();

     label3:
        return;
    }

    public void setError(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.IndicatorViewController $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()>();

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>(1);

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: void showError(java.lang.CharSequence)>($r1);

        return;

     label3:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: void hideError()>();

        return;
    }

    public void setErrorContentDescription(java.lang.CharSequence)
    {
        com.google.android.material.textfield.IndicatorViewController $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: void setErrorContentDescription(java.lang.CharSequence)>($r1);

        return;
    }

    public void setErrorEnabled(boolean)
    {
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>($z0);

        return;
    }

    public void setErrorIconDrawable(int)
    {
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setErrorIconDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.IndicatorViewController $r3;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r1.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r2);

        if $r2 == null goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r3.<com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()>();

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)>($z0);

        return;
    }

    public void setErrorIconOnClickListener(android.view.View$OnClickListener)
    {
        android.view.View$OnLongClickListener $r3;
        android.view.View$OnClickListener $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.view.View$OnClickListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener errorIconOnLongClickListener>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)>($r2, $r1, $r3);

        return;
    }

    public void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
    {
        android.view.View$OnLongClickListener $r1;
        com.google.android.material.internal.CheckableImageButton $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.view.View$OnLongClickListener;

        r0.<com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener errorIconOnLongClickListener> = $r1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>($r2, $r1);

        return;
    }

    public void setErrorIconTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r3, $r4;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList errorIconTintList> = $r1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        $r4 = $r3;

        if $r3 == null goto label1;

        $r4 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r3);

        $r3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r4 = $r3;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r3, $r1);

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r3 == $r4 goto label2;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

     label2:
        return;
    }

    public void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r3, $r4;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        $r4 = $r3;

        if $r3 == null goto label1;

        $r4 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r3);

        $r3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r4 = $r3;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r3, $r1);

     label1:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r3 == $r4 goto label2;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        virtualinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

     label2:
        return;
    }

    public void setErrorTextAppearance(int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>($i0);

        return;
    }

    public void setErrorTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.IndicatorViewController $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: void setErrorViewTextColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setHelperText(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.IndicatorViewController $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isHelperTextEnabled()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>(0);

        return;

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isHelperTextEnabled()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>(1);

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: void showHelper(java.lang.CharSequence)>($r1);

     label3:
        return;
    }

    public void setHelperTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.IndicatorViewController $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r2.<com.google.android.material.textfield.IndicatorViewController: void setHelperTextViewTextColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setHelperTextEnabled(boolean)
    {
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>($z0);

        return;
    }

    public void setHelperTextTextAppearance(int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r1.<com.google.android.material.textfield.IndicatorViewController: void setHelperTextAppearance(int)>($i0);

        return;
    }

    public void setHint(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>($r1);

        virtualinvoke r0.<android.widget.LinearLayout: void sendAccessibilityEvent(int)>(2048);

     label1:
        return;
    }

    public void setHintAnimationEnabled(boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hintAnimationEnabled> = $z0;

        return;
    }

    public void setHintEnabled(boolean)
    {
        java.lang.CharSequence $r1, $r3;
        com.google.android.material.textfield.TextInputLayout r0;
        android.widget.EditText $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 == $z1 goto label6;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled> = $z0;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean hintEnabled>;

        if $z0 != 0 goto label2;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint> = 0;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r1 = virtualinvoke $r2.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r1);

     label1:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>(null);

        goto label5;

     label2:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        $r1 = virtualinvoke $r2.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence hint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>($r1);

     label3:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

     label4:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint> = 1;

     label5:
        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label6;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateInputLayoutMargins()>();

     label6:
        return;
    }

    public void setHintTextAppearance(int)
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        com.google.android.material.internal.CollapsingTextHelper $r1;
        android.widget.EditText $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>($i0);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList getCollapsedTextColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor> = $r2;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label1;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>(0);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateInputLayoutMargins()>();

     label1:
        return;
    }

    public void setHintTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CollapsingTextHelper $r3;
        android.widget.EditText $r4;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor>;

        if $r2 == $r1 goto label2;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList defaultHintTextColor>;

        if $r2 != null goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList focusedTextColor> = $r1;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r4 == null goto label2;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>(0);

     label2:
        return;
    }

    public void setPasswordVisibilityToggleContentDescription(int)
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

        return;
    }

    public void setPasswordVisibilityToggleDrawable(int)
    {
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.internal.CheckableImageButton $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        virtualinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setPasswordVisibilityToggleEnabled(boolean)
    {
        int $i0;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int endIconMode>;

        if $i0 == 1 goto label1;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>(1);

        return;

     label1:
        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>(0);

     label2:
        return;
    }

    public void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList endIconTintList> = $r1;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintList> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>();

        return;
    }

    public void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode endIconTintMode> = $r1;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hasEndIconTintMode> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>();

        return;
    }

    public void setPlaceholderText(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)>(0);

        goto label3;

     label1:
        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean placeholderEnabled>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)>(1);

     label2:
        r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence placeholderText> = $r1;

     label3:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderText()>();

        return;
    }

    public void setPlaceholderTextAppearance(int)
    {
        int $i0;
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.textfield.TextInputLayout: int placeholderTextAppearance> = $i0;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r1 == null goto label1;

        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r1, $i0);

     label1:
        return;
    }

    public void setPlaceholderTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        android.widget.TextView $r3;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList placeholderTextColor>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList placeholderTextColor> = $r1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView placeholderTextView>;

        if $r3 == null goto label1;

        if $r1 == null goto label1;

        virtualinvoke $r3.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setPrefixText(java.lang.CharSequence)
    {
        android.widget.TextView $r3;
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = $r1;

     label2:
        r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence prefixText> = $r2;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextVisibility()>();

        return;
    }

    public void setPrefixTextAppearance(int)
    {
        int $i0;
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r1, $i0);

        return;
    }

    public void setPrefixTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView prefixTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setStartIconCheckable(boolean)
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        virtualinvoke $r1.<com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)>($z0);

        return;
    }

    public void setStartIconContentDescription(int)
    {
        java.lang.CharSequence $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setStartIconContentDescription(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()>();

        if $r2 == $r1 goto label1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        virtualinvoke $r3.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

     label1:
        return;
    }

    public void setStartIconDrawable(int)
    {
        android.content.Context $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setStartIconDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        virtualinvoke $r1.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r2);

        if $r2 == null goto label1;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)>(1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyStartIconTint()>();

        return;

     label1:
        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)>(0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)>(null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)>(null);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)>(null);

        return;
    }

    public void setStartIconOnClickListener(android.view.View$OnClickListener)
    {
        android.view.View$OnLongClickListener $r3;
        android.view.View$OnClickListener $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r2;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.view.View$OnClickListener;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener startIconOnLongClickListener>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)>($r2, $r1, $r3);

        return;
    }

    public void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
    {
        android.view.View$OnLongClickListener $r1;
        com.google.android.material.internal.CheckableImageButton $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.view.View$OnLongClickListener;

        r0.<com.google.android.material.textfield.TextInputLayout: android.view.View$OnLongClickListener startIconOnLongClickListener> = $r1;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>($r2, $r1);

        return;
    }

    public void setStartIconTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.content.res.ColorStateList;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList startIconTintList>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList startIconTintList> = $r2;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hasStartIconTintList> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyStartIconTint()>();

     label1:
        return;
    }

    public void setStartIconTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter0: android.graphics.PorterDuff$Mode;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode startIconTintMode>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.PorterDuff$Mode startIconTintMode> = $r2;

        r0.<com.google.android.material.textfield.TextInputLayout: boolean hasStartIconTintMode> = 1;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyStartIconTint()>();

     label1:
        return;
    }

    public void setStartIconVisible(boolean)
    {
        byte $b0;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean isStartIconVisible()>();

        if $z0 == $z1 goto label3;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        if $z1 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 8;

     label2:
        virtualinvoke $r1.<android.widget.ImageButton: void setVisibility(int)>($b0);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextViewPadding()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>();

     label3:
        return;
    }

    public void setSuffixText(java.lang.CharSequence)
    {
        android.widget.TextView $r3;
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = $r1;

     label2:
        r0.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence suffixText> = $r2;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextVisibility()>();

        return;
    }

    public void setSuffixTextAppearance(int)
    {
        int $i0;
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r1, $i0);

        return;
    }

    public void setSuffixTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView suffixTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setTextAppearanceCompatWithErrorFallback(android.widget.TextView, int)
    {
        android.content.res.ColorStateList $r3;
        android.content.Context $r4;
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout r0;
        int $i0;
        java.lang.Exception $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        $z0 = 1;

     label1:
        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r1, $i0);

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label5;

     label3:
        $r3 = virtualinvoke $r1.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getDefaultColor()>();

     label4:
        if $i0 != -65281 goto label5;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        if $z0 == 0 goto label8;

        $i0 = <com.google.android.material.R$style: int TextAppearance_AppCompat_Caption>;

        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r1, $i0);

        $r4 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$color: int design_error>;

        $i0 = staticinvoke <b.i.b.a: int a(android.content.Context,int)>($r4, $i0);

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>($i0);

        return;

     label7:
        $r2 := @caughtexception;

        goto label6;

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    public void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
    {
        com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate $r1;
        android.widget.EditText $r2;
        com.google.android.material.textfield.TextInputLayout r0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r2 == null goto label1;

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a)>($r2, $r1);

     label1:
        return;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.graphics.Typeface $r1, $r2;
        android.widget.TextView $r5;
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.textfield.IndicatorViewController $r4;
        com.google.android.material.internal.CollapsingTextHelper $r3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface typeface>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface typeface> = $r1;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper>;

        virtualinvoke $r3.<com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r1);

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: void setTypefaces(android.graphics.Typeface)>($r1);

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r5 == null goto label1;

        virtualinvoke $r5.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

     label1:
        return;
    }

    public void updateCounter(int)
    {
        android.content.Context $r3;
        java.lang.Object[] $r5;
        com.google.android.material.textfield.TextInputLayout r0;
        java.lang.Integer $r6;
        android.widget.TextView $r1;
        b.i.g.a $r4;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        android.widget.EditText $r7;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $i0 := @parameter0: int;

        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength>;

        $i2 = -1;

        if $i1 != $i2 goto label1;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        virtualinvoke $r1.<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>(null);

        r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed> = 0;

        goto label5;

     label1:
        if $i0 <= $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed> = $z1;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        $i1 = r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength>;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        staticinvoke <com.google.android.material.textfield.TextInputLayout: void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)>($r3, $r1, $i0, $i1, $z1);

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 == $z1 goto label4;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>();

     label4:
        $r4 = staticinvoke <b.i.g.a: b.i.g.a a()>();

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i1 = <com.google.android.material.R$string: int character_counter_pattern>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int counterMaxLength>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r2 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i1, $r5);

        $r2 = virtualinvoke $r4.<b.i.g.a: java.lang.String a(java.lang.String)>($r2);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

     label5:
        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r7 == null goto label6;

        $z1 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 == $z1 goto label6;

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>(0);

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>();

     label6:
        return;
    }

    public void updateEditTextBackground()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        android.graphics.drawable.Drawable $r2, $r3;
        android.graphics.PorterDuff$Mode $r5;
        android.widget.TextView $r7;
        int $i0;
        android.graphics.PorterDuffColorFilter $r6;
        com.google.android.material.textfield.IndicatorViewController $r4;
        android.widget.EditText $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r1 == null goto label6;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        $r3 = $r2;

        if $r2 != null goto label2;

        return;

     label2:
        $z0 = staticinvoke <b.b.f.J: boolean a(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label3:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z0 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <b.b.f.s: android.graphics.PorterDuffColorFilter a(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

        return;

     label4:
        $z0 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z0 == 0 goto label5;

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r7 == null goto label5;

        $i0 = virtualinvoke $r7.<android.widget.TextView: int getCurrentTextColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <b.b.f.s: android.graphics.PorterDuffColorFilter a(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

        return;

     label5:
        staticinvoke <b.i.c.a.a: void b(android.graphics.drawable.Drawable)>($r3);

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        virtualinvoke $r1.<android.widget.EditText: void refreshDrawableState()>();

     label6:
        return;
    }

    public void updateLabelState(boolean)
    {
        com.google.android.material.textfield.TextInputLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>($z0, 0);

        return;
    }

    public void updateTextInputBoxState()
    {
        com.google.android.material.textfield.TextInputLayout r0;
        com.google.android.material.internal.CheckableImageButton $r7;
        android.graphics.drawable.Drawable $r6;
        com.google.android.material.shape.MaterialShapeDrawable $r2;
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r5;
        com.google.android.material.textfield.EndIconDelegate $r8;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r4;
        android.widget.EditText $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable boxBackground>;

        if $r2 == null goto label24;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 0 goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isFocused()>();

        $z1 = 0;

        if $z0 != 0 goto label03;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label02;

        $z0 = virtualinvoke $r3.<android.widget.EditText: boolean hasFocus()>();

        if $z0 == 0 goto label02;

        goto label03;

     label02:
        $z0 = 0;

        goto label04;

     label03:
        $z0 = 1;

     label04:
        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean isHovered()>();

        if $z2 != 0 goto label06;

        $r3 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText editText>;

        if $r3 == null goto label05;

        $z2 = virtualinvoke $r3.<android.widget.EditText: boolean isHovered()>();

        if $z2 == 0 goto label05;

        goto label06;

     label05:
        $z2 = 0;

        goto label07;

     label06:
        $z2 = 1;

     label07:
        $z3 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z3 != 0 goto label08;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int disabledColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

        goto label15;

     label08:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z3 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z3 == 0 goto label10;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        if $r1 == null goto label09;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateStrokeErrorColor(boolean,boolean)>($z0, $z2);

        goto label15;

     label09:
        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $i0 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

        goto label15;

     label10:
        $z3 = r0.<com.google.android.material.textfield.TextInputLayout: boolean counterOverflowed>;

        if $z3 == 0 goto label12;

        $r5 = r0.<com.google.android.material.textfield.TextInputLayout: android.widget.TextView counterView>;

        if $r5 == null goto label12;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList strokeErrorColor>;

        if $r1 == null goto label11;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateStrokeErrorColor(boolean,boolean)>($z0, $z2);

        goto label15;

     label11:
        $i0 = virtualinvoke $r5.<android.widget.TextView: int getCurrentTextColor()>();

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

        goto label15;

     label12:
        if $z0 == 0 goto label13;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int focusedStrokeColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

        goto label15;

     label13:
        if $z2 == 0 goto label14;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int hoveredStrokeColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

        goto label15;

     label14:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int defaultStrokeColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeColor> = $i0;

     label15:
        $r6 = virtualinvoke r0.<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()>();

        if $r6 == null goto label16;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z3 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()>();

        if $z3 == 0 goto label16;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z3 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>();

        if $z3 == 0 goto label16;

        $z1 = 1;

     label16:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)>($z1);

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton errorIconView>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList errorIconTintList>;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateIconColorOnState(com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList)>($r7, $r1);

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton startIconView>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList startIconTintList>;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateIconColorOnState(com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList)>($r7, $r1);

        $r7 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton endIconView>;

        $r1 = r0.<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList endIconTintList>;

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void updateIconColorOnState(com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList)>($r7, $r1);

        $r8 = specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()>();

        $z1 = virtualinvoke $r8.<com.google.android.material.textfield.EndIconDelegate: boolean shouldTintIconOnError()>();

        if $z1 == 0 goto label17;

        $r4 = r0.<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.IndicatorViewController indicatorViewController>;

        $z1 = virtualinvoke $r4.<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>();

        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>($z1);

     label17:
        if $z0 == 0 goto label18;

        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z1 == 0 goto label18;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthFocusedPx>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx> = $i0;

        goto label19;

     label18:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthDefaultPx>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxStrokeWidthPx> = $i0;

     label19:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundMode>;

        if $i0 != 1 goto label23;

        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z1 != 0 goto label20;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int disabledFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        goto label23;

     label20:
        if $z2 == 0 goto label21;

        if $z0 != 0 goto label21;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int hoveredFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        goto label23;

     label21:
        if $z0 == 0 goto label22;

        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int focusedFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

        goto label23;

     label22:
        $i0 = r0.<com.google.android.material.textfield.TextInputLayout: int defaultFilledBackgroundColor>;

        r0.<com.google.android.material.textfield.TextInputLayout: int boxBackgroundColor> = $i0;

     label23:
        specialinvoke r0.<com.google.android.material.textfield.TextInputLayout: void applyBoxAttributes()>();

     label24:
        return;
    }
}
