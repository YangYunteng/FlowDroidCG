public class com.google.common.util.concurrent.Striped$CompactStriped extends com.google.common.util.concurrent.Striped$PowerOfTwoStriped
{
    public final java.lang.Object[] array;

    public void <init>(int, com.google.common.base.Supplier)
    {
        java.lang.Object[] $r3;
        com.google.common.util.concurrent.Striped$CompactStriped r0;
        com.google.common.base.Supplier $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Striped$CompactStriped;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.common.base.Supplier;

        specialinvoke r0.<com.google.common.util.concurrent.Striped$PowerOfTwoStriped: void <init>(int)>($i0);

        $i1 = 0;

        if $i0 > 1073741824 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Stripes must be <= 2^30)");

        $i0 = r0.<com.google.common.util.concurrent.Striped$PowerOfTwoStriped: int mask>;

        $i0 = $i0 + 1;

        $r3 = newarray (java.lang.Object)[$i0];

        r0.<com.google.common.util.concurrent.Striped$CompactStriped: java.lang.Object[] array> = $r3;

     label3:
        $r3 = r0.<com.google.common.util.concurrent.Striped$CompactStriped: java.lang.Object[] array>;

        $i0 = lengthof $r3;

        if $i1 >= $i0 goto label4;

        $r2 = interfaceinvoke $r1.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r3[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(int, com.google.common.base.Supplier, com.google.common.util.concurrent.Striped$1)
    {
        com.google.common.util.concurrent.Striped$1 $r2;
        com.google.common.util.concurrent.Striped$CompactStriped r0;
        int $i0;
        com.google.common.base.Supplier $r1;

        r0 := @this: com.google.common.util.concurrent.Striped$CompactStriped;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.common.base.Supplier;

        $r2 := @parameter2: com.google.common.util.concurrent.Striped$1;

        specialinvoke r0.<com.google.common.util.concurrent.Striped$CompactStriped: void <init>(int,com.google.common.base.Supplier)>($i0, $r1);

        return;
    }

    public java.lang.Object getAt(int)
    {
        java.lang.Object[] $r1;
        com.google.common.util.concurrent.Striped$CompactStriped r0;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.Striped$CompactStriped;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.util.concurrent.Striped$CompactStriped: java.lang.Object[] array>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public int size()
    {
        com.google.common.util.concurrent.Striped$CompactStriped r0;
        int $i0;
        java.lang.Object[] $r1;

        r0 := @this: com.google.common.util.concurrent.Striped$CompactStriped;

        $r1 = r0.<com.google.common.util.concurrent.Striped$CompactStriped: java.lang.Object[] array>;

        $i0 = lengthof $r1;

        return $i0;
    }
}
