public final class com.google.gson.internal.$Gson$Types extends java.lang.Object
{
    public static final java.lang.reflect.Type[] EMPTY_TYPE_ARRAY;

    static void <clinit>()
    {
        java.lang.reflect.Type[] $r0;

        $r0 = newarray (java.lang.reflect.Type)[0];

        <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY> = $r0;

        return;
    }

    public void <init>()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.gson.internal.$Gson$Types r0;

        r0 := @this: com.google.gson.internal.$Gson$Types;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl $r1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 = new com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl;

        specialinvoke $r1.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>($r0);

        return $r1;
    }

    public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r7;
        com.google.gson.internal.$Gson$Types$WildcardTypeImpl $r9;
        java.lang.reflect.WildcardType $r8;
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type $r0, $r5;
        com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl $r4;
        java.lang.reflect.Type[] $r6, $r10;
        java.lang.Class $r1;
        com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Class) $r0;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label5;

        $r2 = new com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl;

        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r0 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r1);

        specialinvoke $r2.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>($r0);

        return $r2;

     label1:
        $z0 = $r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.ParameterizedType) $r0;

        $r4 = new com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl;

        $r0 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r5 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r6 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        specialinvoke $r4.<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>($r0, $r5, $r6);

        return $r4;

     label2:
        $z0 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label3;

        $r7 = (java.lang.reflect.GenericArrayType) $r0;

        $r2 = new com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl;

        $r0 = interfaceinvoke $r7.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        specialinvoke $r2.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>($r0);

        return $r2;

     label3:
        $z0 = $r0 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label4;

        $r8 = (java.lang.reflect.WildcardType) $r0;

        $r9 = new com.google.gson.internal.$Gson$Types$WildcardTypeImpl;

        $r6 = interfaceinvoke $r8.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r10 = interfaceinvoke $r8.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        specialinvoke $r9.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r6, $r10);

        return $r9;

     label4:
        return $r0;

     label5:
        return $r1;
    }

    public static void checkNotPrimitive(java.lang.reflect.Type)
    {
        java.lang.Class $r1;
        java.lang.reflect.Type $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        $r1 = (java.lang.Class) $r0;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0);

        return;
    }

    public static java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.GenericDeclaration $r0;
        java.lang.reflect.TypeVariable $r1;
        java.lang.Class $r2;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.TypeVariable;

        $r0 = interfaceinvoke $r1.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Class) $r0;

        return $r2;

     label1:
        return null;
    }

    public static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        if $r1 == $r0 goto label2;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean equals(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r6, $r7;
        java.lang.reflect.WildcardType $r8, $r9;
        java.lang.String $r14, $r15;
        boolean $z0;
        java.lang.reflect.GenericDeclaration $r12, $r13;
        java.lang.reflect.TypeVariable $r10, $r11;
        java.lang.reflect.ParameterizedType $r2, $r3;
        java.lang.reflect.Type $r0, $r1;
        java.lang.reflect.Type[] $r4, $r5;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.reflect.Type;

        if $r0 != $r1 goto label01;

        return 1;

     label01:
        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label02:
        $z0 = $r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label05;

        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 != 0 goto label03;

        return 0;

     label03:
        $r2 = (java.lang.reflect.ParameterizedType) $r0;

        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r0 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $z0 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean equal(java.lang.Object,java.lang.Object)>($r0, $r1);

        if $z0 == 0 goto label04;

        $r0 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label04;

        $r4 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r5 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r5);

        if $z0 == 0 goto label04;

        return 1;

     label04:
        return 0;

     label05:
        $z0 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label07;

        $z0 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0 != 0 goto label06;

        return 0;

     label06:
        $r6 = (java.lang.reflect.GenericArrayType) $r0;

        $r7 = (java.lang.reflect.GenericArrayType) $r1;

        $r0 = interfaceinvoke $r6.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r1 = interfaceinvoke $r7.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $z0 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>($r0, $r1);

        return $z0;

     label07:
        $z0 = $r0 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label10;

        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 != 0 goto label08;

        return 0;

     label08:
        $r8 = (java.lang.reflect.WildcardType) $r0;

        $r9 = (java.lang.reflect.WildcardType) $r1;

        $r4 = interfaceinvoke $r8.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r5 = interfaceinvoke $r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r5);

        if $z0 == 0 goto label09;

        $r4 = interfaceinvoke $r8.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r5 = interfaceinvoke $r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r5);

        if $z0 == 0 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        $z0 = $r0 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label13;

        $z0 = $r1 instanceof java.lang.reflect.TypeVariable;

        if $z0 != 0 goto label11;

        return 0;

     label11:
        $r10 = (java.lang.reflect.TypeVariable) $r0;

        $r11 = (java.lang.reflect.TypeVariable) $r1;

        $r12 = interfaceinvoke $r10.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        $r13 = interfaceinvoke $r11.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        if $r12 != $r13 goto label12;

        $r14 = interfaceinvoke $r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r15 = interfaceinvoke $r11.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label12;

        return 1;

     label12:
        return 0;

     label13:
        return 0;
    }

    public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r1;
        java.lang.reflect.Type $r0;
        java.lang.Class $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.reflect.GenericArrayType) $r0;

        $r0 = interfaceinvoke $r1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        return $r0;

     label1:
        $r2 = (java.lang.Class) $r0;

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        return $r2;
    }

    public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.reflect.ParameterizedType $r5;
        java.lang.reflect.Type $r0, $r2;
        java.lang.reflect.WildcardType $r3;
        java.lang.reflect.Type[] $r4;
        java.lang.Class $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.Class;

        $r0 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r0, $r1, class "Ljava/util/Collection;");

        $r2 = $r0;

        $z0 = $r0 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.reflect.WildcardType) $r0;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r2 = $r4[0];

     label1:
        $z0 = $r2 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r5 = (java.lang.reflect.ParameterizedType) $r2;

        $r4 = interfaceinvoke $r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r0 = $r4[0];

        return $r0;

     label2:
        return class "Ljava/lang/Object;";
    }

    public static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type, java.lang.Class, java.lang.Class)
    {
        java.lang.Class[] $r3;
        java.lang.reflect.Type $r1;
        int $i0, $i1;
        java.lang.reflect.Type[] $r5;
        java.lang.Class $r0, $r2, $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.Class;

        $r0 := @parameter2: java.lang.Class;

        if $r0 != $r2 goto label1;

        return $r1;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i1 = 0;

        $i0 = lengthof $r3;

     label2:
        if $i1 >= $i0 goto label5;

        $r4 = $r3[$i1];

        if $r4 != $r0 goto label3;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $r1 = $r5[$i1];

        return $r1;

     label3:
        $r4 = $r3[$i1];

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $r1 = $r5[$i1];

        $r2 = $r3[$i1];

        $r1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1, $r2, $r0);

        return $r1;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label9;

     label6:
        if $r2 == class "Ljava/lang/Object;" goto label9;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r4 != $r0 goto label7;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        return $r1;

     label7:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label8;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $r1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1, $r4, $r0);

        return $r1;

     label8:
        $r2 = $r4;

        goto label6;

     label9:
        return $r0;
    }

    public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type $r0;
        java.lang.reflect.Type[] $r2;
        java.lang.Class $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.Class;

        if $r0 != class "Ljava/util/Properties;" goto label1;

        $r2 = newarray (java.lang.reflect.Type)[2];

        $r2[0] = class "Ljava/lang/String;";

        $r2[1] = class "Ljava/lang/String;";

        return $r2;

     label1:
        $r0 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r0, $r1, class "Ljava/util/Map;");

        $z0 = $r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.ParameterizedType) $r0;

        $r2 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        return $r2;

     label2:
        $r2 = newarray (java.lang.reflect.Type)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r2[1] = class "Ljava/lang/Object;";

        return $r2;
    }

    public static java.lang.Class getRawType(java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r4;
        java.lang.reflect.WildcardType $r6;
        java.lang.IllegalArgumentException $r9;
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type $r1;
        java.lang.reflect.Type[] $r7;
        java.lang.StringBuilder $r0;
        java.lang.Class $r2;
        java.lang.Object $r5;
        java.lang.String $r8;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.Type;

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Class) $r1;

        return $r2;

     label1:
        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z0 = $r1 instanceof java.lang.Class;

        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0);

        $r2 = (java.lang.Class) $r1;

        return $r2;

     label2:
        $z0 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label3;

        $r4 = (java.lang.reflect.GenericArrayType) $r1;

        $r1 = interfaceinvoke $r4.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, 0);

        $r2 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        return $r2;

     label3:
        $z0 = $r1 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label4;

        return class "Ljava/lang/Object;";

     label4:
        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label5;

        $r6 = (java.lang.reflect.WildcardType) $r1;

        $r7 = interfaceinvoke $r6.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r1 = $r7[0];

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        return $r2;

     label5:
        if $r1 != null goto label6;

        $r8 = "null";

        goto label7;

     label6:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

     label7:
        $r9 = new java.lang.IllegalArgumentException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a Class, ParameterizedType, or GenericArrayType, but <");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> is of type ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r9;
    }

    public static java.lang.reflect.Type getSupertype(java.lang.reflect.Type, java.lang.Class, java.lang.Class)
    {
        java.lang.reflect.Type $r1, $r5;
        java.lang.reflect.WildcardType $r3;
        java.lang.reflect.Type[] $r4;
        java.lang.Class $r0, $r2;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        $r2 := @parameter2: java.lang.Class;

        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.reflect.WildcardType) $r1;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r1 = $r4[0];

     label1:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r0);

        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0);

        $r5 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1, $r0, $r2);

        $r1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r1, $r0, $r5);

        return $r1;
    }

    public static int hashCodeOrZero(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        return $i0;

     label1:
        return 0;
    }

    public static int indexOf(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r0, $r2;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.lang.Object;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label4;

     label4:
        throw $r3;
    }

    public static transient java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])
    {
        java.lang.reflect.Type $r0, $r1;
        com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl $r3;
        java.lang.reflect.Type[] $r2;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.reflect.Type;

        $r2 := @parameter2: java.lang.reflect.Type[];

        $r3 = new com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl;

        specialinvoke $r3.<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>($r0, $r1, $r2);

        return $r3;
    }

    public static java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type)
    {
        java.util.HashSet $r2;
        java.lang.reflect.Type $r1, $r3;
        java.lang.Class $r0;

        $r3 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        $r1 := @parameter2: java.lang.reflect.Type;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r3, $r0, $r1, $r2);

        return $r3;
    }

    public static java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type, java.util.Collection)
    {
        java.lang.reflect.GenericArrayType $r8;
        java.lang.Throwable $r15;
        java.lang.reflect.WildcardType $r14;
        int $i0, $i1;
        boolean $z0;
        java.util.Collection $r0;
        java.lang.reflect.TypeVariable $r5;
        java.lang.reflect.ParameterizedType $r9;
        java.lang.reflect.Type $r1, $r2, $r4, $r12;
        java.lang.reflect.Type[] $r10, $r11;
        java.lang.Class $r3, $r6, $r7;
        java.lang.Object $r13;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r3 := @parameter1: java.lang.Class;

        $r4 := @parameter2: java.lang.reflect.Type;

        $r0 := @parameter3: java.util.Collection;

     label01:
        $z0 = $r4 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label03;

        $r5 = (java.lang.reflect.TypeVariable) $r4;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean contains(java.lang.Object)>($r5);

        if $z0 == 0 goto label02;

        return $r4;

     label02:
        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $r1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)>($r2, $r3, $r5);

        $r4 = $r1;

        if $r1 != $r5 goto label01;

        return $r1;

     label03:
        $z0 = $r4 instanceof java.lang.Class;

        if $z0 == 0 goto label05;

        $r6 = (java.lang.Class) $r4;

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label05;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r2, $r3, $r7, $r0);

        if $r7 != $r2 goto label04;

        return $r6;

     label04:
        $r8 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)>($r2);

        return $r8;

     label05:
        $z0 = $r4 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label07;

        $r8 = (java.lang.reflect.GenericArrayType) $r4;

        $r4 = interfaceinvoke $r8.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r2, $r3, $r4, $r0);

        if $r4 != $r2 goto label06;

        return $r8;

     label06:
        $r8 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)>($r2);

        return $r8;

     label07:
        $z0 = $r4 instanceof java.lang.reflect.ParameterizedType;

        $i1 = 0;

        if $z0 == 0 goto label14;

        $r9 = (java.lang.reflect.ParameterizedType) $r4;

        $r1 = interfaceinvoke $r9.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r4 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r2, $r3, $r1, $r0);

        if $r4 == $r1 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        $r10 = interfaceinvoke $r9.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r11 = $r10;

        $i0 = lengthof $r10;

     label10:
        if $i1 >= $i0 goto label13;

        $r1 = $r11[$i1];

        $r12 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r2, $r3, $r1, $r0);

        $r1 = $r11[$i1];

        if $r12 == $r1 goto label12;

        if $z0 != 0 goto label11;

        $r13 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();

        $r11 = (java.lang.reflect.Type[]) $r13;

        $z0 = 1;

     label11:
        $r11[$i1] = $r12;

     label12:
        $i1 = $i1 + 1;

        goto label10;

     label13:
        if $z0 == 0 goto label21;

        $r2 = interfaceinvoke $r9.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r9 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>($r4, $r2, $r11);

        return $r9;

     label14:
        $z0 = $r4 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label18;

        $r14 = (java.lang.reflect.WildcardType) $r4;

        $r10 = interfaceinvoke $r14.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r11 = interfaceinvoke $r14.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $i0 = lengthof $r10;

        if $i0 != 1 goto label15;

        $r4 = $r10[0];

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r2, $r3, $r4, $r0);

        $r4 = $r10[0];

        if $r2 == $r4 goto label22;

        $r14 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)>($r2);

        return $r14;

     label15:
        $i0 = lengthof $r11;

        if $i0 != 1 goto label22;

        $r4 = $r11[0];

     label16:
        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)>($r2, $r3, $r4, $r0);

     label17:
        $r4 = $r11[0];

        if $r2 == $r4 goto label22;

        $r14 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)>($r2);

        return $r14;

     label18:
        return $r4;

     label19:
        $r15 := @caughtexception;

        goto label20;

     label20:
        throw $r15;

     label21:
        return $r9;

     label22:
        return $r14;

        catch java.lang.Throwable from label16 to label17 with label19;
    }

    public static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.TypeVariable $r0;
        java.lang.reflect.ParameterizedType $r5;
        java.lang.reflect.Type $r1;
        java.lang.reflect.TypeVariable[] $r4;
        int $i0;
        java.lang.reflect.Type[] $r6;
        java.lang.Class $r2, $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.Class;

        $r0 := @parameter2: java.lang.reflect.TypeVariable;

        $r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)>($r0);

        if $r3 != null goto label1;

        return $r0;

     label1:
        $r1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1, $r2, $r3);

        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i0 = staticinvoke <com.google.gson.internal.$Gson$Types: int indexOf(java.lang.Object[],java.lang.Object)>($r4, $r0);

        $r5 = (java.lang.reflect.ParameterizedType) $r1;

        $r6 = interfaceinvoke $r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r1 = $r6[$i0];

        return $r1;

     label2:
        return $r0;
    }

    public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r1;
        com.google.gson.internal.$Gson$Types$WildcardTypeImpl $r3;
        java.lang.reflect.WildcardType $r2;
        java.lang.reflect.Type[] $r0, $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.Type;

        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.reflect.WildcardType) $r1;

        $r0 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        goto label2;

     label1:
        $r0 = newarray (java.lang.reflect.Type)[1];

        $r0[0] = $r1;

     label2:
        $r3 = new com.google.gson.internal.$Gson$Types$WildcardTypeImpl;

        $r4 = <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY>;

        specialinvoke $r3.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r0, $r4);

        return $r3;
    }

    public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r1;
        com.google.gson.internal.$Gson$Types$WildcardTypeImpl $r3;
        java.lang.reflect.WildcardType $r2;
        java.lang.reflect.Type[] $r0, $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.reflect.Type;

        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.reflect.WildcardType) $r1;

        $r0 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        goto label2;

     label1:
        $r0 = newarray (java.lang.reflect.Type)[1];

        $r0[0] = $r1;

     label2:
        $r3 = new com.google.gson.internal.$Gson$Types$WildcardTypeImpl;

        $r4 = newarray (java.lang.reflect.Type)[1];

        $r4[0] = class "Ljava/lang/Object;";

        specialinvoke $r3.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r4, $r0);

        return $r3;
    }

    public static java.lang.String typeToString(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Class) $r0;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
