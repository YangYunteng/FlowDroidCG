public class org.codehaus.jackson.map.deser.ArrayDeserializers extends java.lang.Object
{
    public static final org.codehaus.jackson.map.deser.ArrayDeserializers instance;
    public java.util.HashMap _allDeserializers;

    static void <clinit>()
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers $r0;

        $r0 = new org.codehaus.jackson.map.deser.ArrayDeserializers;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void <init>()>();

        <org.codehaus.jackson.map.deser.ArrayDeserializers: org.codehaus.jackson.map.deser.ArrayDeserializers instance> = $r0;

        return;
    }

    public void <init>()
    {
        java.util.HashMap $r1;
        org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser $r3;
        org.codehaus.jackson.map.deser.ArrayDeserializers r0;
        org.codehaus.jackson.map.deser.ArrayDeserializers$IntDeser $r6;
        org.codehaus.jackson.map.deser.ArrayDeserializers$FloatDeser $r8;
        org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser $r7;
        org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser $r10;
        org.codehaus.jackson.map.deser.ArrayDeserializers$ShortDeser $r5;
        java.lang.Class $r2;
        org.codehaus.jackson.map.deser.ArrayDeserializers$DoubleDeser $r9;
        org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser $r4;
        org.codehaus.jackson.map.deser.ArrayDeserializers$CharDeser $r11;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: java.util.HashMap _allDeserializers> = $r1;

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3 = new org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r3);

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = new org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r4);

        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        $r5 = new org.codehaus.jackson.map.deser.ArrayDeserializers$ShortDeser;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.ArrayDeserializers$ShortDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r5);

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r6 = new org.codehaus.jackson.map.deser.ArrayDeserializers$IntDeser;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.ArrayDeserializers$IntDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r6);

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $r7 = new org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r7);

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        $r8 = new org.codehaus.jackson.map.deser.ArrayDeserializers$FloatDeser;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.ArrayDeserializers$FloatDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r8);

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = new org.codehaus.jackson.map.deser.ArrayDeserializers$DoubleDeser;

        specialinvoke $r9.<org.codehaus.jackson.map.deser.ArrayDeserializers$DoubleDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r9);

        $r10 = new org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser;

        specialinvoke $r10.<org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>(class "Ljava/lang/String;", $r10);

        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        $r11 = new org.codehaus.jackson.map.deser.ArrayDeserializers$CharDeser;

        specialinvoke $r11.<org.codehaus.jackson.map.deser.ArrayDeserializers$CharDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r2, $r11);

        return;
    }

    private void add(java.lang.Class, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.type.JavaType $r5;
        org.codehaus.jackson.map.JsonDeserializer $r1;
        java.util.HashMap $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.deser.ArrayDeserializers r0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers;

        $r3 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: java.util.HashMap _allDeserializers>;

        $r4 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);

        return;
    }

    public static java.util.HashMap getAll()
    {
        java.util.HashMap r1;
        org.codehaus.jackson.map.deser.ArrayDeserializers $r0;

        $r0 = <org.codehaus.jackson.map.deser.ArrayDeserializers: org.codehaus.jackson.map.deser.ArrayDeserializers instance>;

        r1 = $r0.<org.codehaus.jackson.map.deser.ArrayDeserializers: java.util.HashMap _allDeserializers>;

        return r1;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r2;
        java.lang.Object $r3;
        org.codehaus.jackson.map.deser.ArrayDeserializers r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r4, $r1);

        return $r3;
    }
}
