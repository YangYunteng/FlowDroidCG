public final class com.google.zxing.qrcode.encoder.MaskUtil extends java.lang.Object
{
    public static final int N1;
    public static final int N2;
    public static final int N3;
    public static final int N4;

    public void <init>()
    {
        com.google.zxing.qrcode.encoder.MaskUtil r0;

        r0 := @this: com.google.zxing.qrcode.encoder.MaskUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        int $i0, $i1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean)>($r0, 1);

        $i1 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean)>($r0, 0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix, boolean)
    {
        byte[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[][] $r1;
        byte $b6, $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label01;

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        goto label02;

     label01:
        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

     label02:
        if $z0 == 0 goto label03;

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        goto label04;

     label03:
        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

     label04:
        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i2 = 0;

        $i3 = 0;

     label05:
        if $i2 >= $i0 goto label14;

        $i4 = 0;

        $i5 = 0;

        $b6 = -1;

     label06:
        if $i4 >= $i1 goto label12;

        if $z0 == 0 goto label07;

        $r2 = $r1[$i2];

        $b7 = $r2[$i4];

        goto label08;

     label07:
        $r2 = $r1[$i4];

        $b7 = $r2[$i2];

     label08:
        $i8 = (int) $b7;

        $i9 = (int) $b6;

        if $i8 != $i9 goto label09;

        $i5 = $i5 + 1;

        goto label11;

     label09:
        if $i5 < 5 goto label10;

        $i8 = -5;

        $i5 = $i5 + $i8;

        $i5 = $i5 + 3;

        $i3 = $i3 + $i5;

     label10:
        $i5 = 1;

        $b6 = $b7;

     label11:
        $i4 = $i4 + 1;

        goto label06;

     label12:
        if $i5 < 5 goto label13;

        $i4 = -5;

        $i4 = $i5 + $i4;

        $i4 = $i4 + 3;

        $i3 = $i3 + $i4;

     label13:
        $i2 = $i2 + 1;

        goto label05;

     label14:
        return $i3;
    }

    public static int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte[] $r0;
        com.google.zxing.qrcode.encoder.ByteMatrix $r1;
        byte[][] $r2;
        byte $b6, $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9;

        $r1 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i1 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i3 = 0;

        $i4 = 0;

     label1:
        $i0 = -1;

        $i0 = $i2 + $i0;

        if $i3 >= $i0 goto label5;

        $i5 = 0;

     label2:
        $i0 = -1;

        $i0 = $i1 + $i0;

        if $i5 >= $i0 goto label4;

        $r0 = $r2[$i3];

        $b6 = $r0[$i5];

        $r0 = $r2[$i3];

        $i0 = $i5 + 1;

        $b7 = $r0[$i0];

        $i8 = (int) $b6;

        $i9 = (int) $b7;

        if $i8 != $i9 goto label3;

        $i8 = $i3 + 1;

        $r0 = $r2[$i8];

        $b7 = $r0[$i5];

        $i5 = (int) $b6;

        $i9 = (int) $b7;

        if $i5 != $i9 goto label3;

        $r0 = $r2[$i8];

        $b7 = $r0[$i0];

        $i5 = (int) $b6;

        $i8 = (int) $b7;

        if $i5 != $i8 goto label3;

        $i4 = $i4 + 1;

     label3:
        $i5 = $i0;

        goto label2;

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        $i1 = $i4 * 3;

        return $i1;
    }

    public static int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[][] $r1;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label8;

        $i4 = 0;

     label2:
        if $i4 >= $i0 goto label7;

        $r2 = $r1[$i2];

        $i5 = $i4 + 6;

        if $i5 >= $i0 goto label4;

        $b6 = $r2[$i4];

        if $b6 != 1 goto label4;

        $i7 = $i4 + 1;

        $b6 = $r2[$i7];

        if $b6 != 0 goto label4;

        $i7 = $i4 + 2;

        $b6 = $r2[$i7];

        if $b6 != 1 goto label4;

        $i7 = $i4 + 3;

        $b6 = $r2[$i7];

        if $b6 != 1 goto label4;

        $i7 = $i4 + 4;

        $b6 = $r2[$i7];

        if $b6 != 1 goto label4;

        $i7 = $i4 + 5;

        $b6 = $r2[$i7];

        if $b6 != 0 goto label4;

        $b6 = $r2[$i5];

        if $b6 != 1 goto label4;

        $i5 = -4;

        $i5 = $i4 + $i5;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteHorizontal(byte[],int,int)>($r2, $i5, $i4);

        if $z0 != 0 goto label3;

        $i5 = $i4 + 7;

        $i7 = $i4 + 11;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteHorizontal(byte[],int,int)>($r2, $i5, $i7);

        if $z0 == 0 goto label4;

     label3:
        $i3 = $i3 + 1;

     label4:
        $i5 = $i2 + 6;

        if $i5 >= $i1 goto label6;

        $r2 = $r1[$i2];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label6;

        $i7 = $i2 + 1;

        $r2 = $r1[$i7];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label6;

        $i7 = $i2 + 2;

        $r2 = $r1[$i7];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label6;

        $i7 = $i2 + 3;

        $r2 = $r1[$i7];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label6;

        $i7 = $i2 + 4;

        $r2 = $r1[$i7];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label6;

        $i7 = $i2 + 5;

        $r2 = $r1[$i7];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label6;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label6;

        $i5 = -4;

        $i5 = $i2 + $i5;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteVertical(byte[][],int,int,int)>($r1, $i4, $i5, $i2);

        if $z0 != 0 goto label5;

        $i5 = $i2 + 7;

        $i7 = $i2 + 11;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteVertical(byte[][],int,int,int)>($r1, $i4, $i5, $i7);

        if $z0 == 0 goto label6;

     label5:
        $i3 = $i3 + 1;

     label6:
        $i4 = $i4 + 1;

        goto label2;

     label7:
        $i2 = $i2 + 1;

        goto label1;

     label8:
        $i0 = $i3 * 40;

        return $i0;
    }

    public static int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte[] $r0;
        com.google.zxing.qrcode.encoder.ByteMatrix $r1;
        byte[][] $r2;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;

        $r1 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i1 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i2 goto label5;

        $r0 = $r2[$i3];

        $i5 = 0;

     label2:
        if $i5 >= $i1 goto label4;

        $b0 = $r0[$i5];

        if $b0 != 1 goto label3;

        $i4 = $i4 + 1;

     label3:
        $i5 = $i5 + 1;

        goto label2;

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        $i1 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = $i1 * $i2;

        $i4 = $i4 * 2;

        $i4 = $i4 - $i1;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $i4 = $i4 * 10;

        $i4 = $i4 / $i1;

        $i4 = $i4 * 10;

        return $i4;
    }

    public static boolean getDataMaskBit(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        lookupswitch($i0)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mask pattern: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;

     label02:
        $i0 = $i2 * $i1;

        $i0 = $i0 % 3;

        $i1 = $i2 + $i1;

        $i1 = $i1 & 1;

        goto label06;

     label03:
        $i1 = $i2 * $i1;

        $i0 = $i1 & 1;

        $i1 = $i1 % 3;

        $i0 = $i0 + $i1;

        goto label07;

     label04:
        $i1 = $i2 * $i1;

        $i0 = $i1 & 1;

        $i1 = $i1 % 3;

        $i0 = $i0 + $i1;

        goto label12;

     label05:
        $i0 = $i2 >>> 1;

        $i1 = $i1 / 3;

     label06:
        $i0 = $i0 + $i1;

     label07:
        $i0 = $i0 & 1;

        goto label12;

     label08:
        $i0 = $i2 + $i1;

        $i0 = $i0 % 3;

        goto label12;

     label09:
        $i0 = $i1 % 3;

        goto label12;

     label10:
        $i2 = $i2 + $i1;

     label11:
        $i0 = $i2 & 1;

     label12:
        if $i0 != 0 goto label13;

        return 1;

     label13:
        return 0;
    }

    public static boolean isWhiteHorizontal(byte[], int, int)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, $i2;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 < 0 goto label2;

        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label2;

        $b3 = $r0[$i1];

        if $b3 != 1 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isWhiteVertical(byte[][], int, int, int)
    {
        byte[] $r1;
        byte[][] $r0;
        byte $b4;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: byte[][];

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 := @parameter3: int;

     label1:
        if $i2 >= $i1 goto label3;

        if $i2 < 0 goto label2;

        $i3 = lengthof $r0;

        if $i2 >= $i3 goto label2;

        $r1 = $r0[$i2];

        $b4 = $r1[$i0];

        if $b4 != 1 goto label2;

        return 0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static void <clinit>()
    {
        <com.google.zxing.qrcode.encoder.MaskUtil: int N4> = 10;

        <com.google.zxing.qrcode.encoder.MaskUtil: int N3> = 40;

        <com.google.zxing.qrcode.encoder.MaskUtil: int N2> = 3;

        <com.google.zxing.qrcode.encoder.MaskUtil: int N1> = 3;

        return;
    }
}
