public final class org.codehaus.jackson.map.ser.ContainerSerializers extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.jackson.map.ser.ContainerSerializers r0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.codehaus.jackson.map.ser.ContainerSerializerBase collectionSerializer(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer $r4;
        org.codehaus.jackson.map.TypeSerializer $r1;
        org.codehaus.jackson.type.JavaType $r0;
        org.codehaus.jackson.map.JsonSerializer $r3;
        org.codehaus.jackson.map.BeanProperty $r2;
        boolean $z0;

        $r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        $r2 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r3 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        $r4 = new org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer;

        specialinvoke $r4.<org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer)>($r0, $z0, $r1, $r2, $r3);

        return $r4;
    }

    public static org.codehaus.jackson.map.JsonSerializer enumSetSerializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.type.JavaType $r0;
        org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer $r2;
        org.codehaus.jackson.map.BeanProperty $r1;

        $r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        $r2 = new org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer;

        specialinvoke $r2.<org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r0, $r1);

        return $r2;
    }

    public static org.codehaus.jackson.map.ser.ContainerSerializerBase indexedListSerializer(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer $r4;
        org.codehaus.jackson.map.TypeSerializer $r1;
        org.codehaus.jackson.type.JavaType $r0;
        org.codehaus.jackson.map.JsonSerializer $r3;
        org.codehaus.jackson.map.BeanProperty $r2;
        boolean $z0;

        $r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        $r2 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r3 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        $r4 = new org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        specialinvoke $r4.<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer)>($r0, $z0, $r1, $r2, $r3);

        return $r4;
    }

    public static org.codehaus.jackson.map.ser.ContainerSerializerBase iterableSerializer(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.TypeSerializer $r1;
        org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer $r3;
        org.codehaus.jackson.type.JavaType $r0;
        org.codehaus.jackson.map.BeanProperty $r2;
        boolean $z0;

        $r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        $r2 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r3 = new org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer;

        specialinvoke $r3.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>($r0, $z0, $r1, $r2);

        return $r3;
    }

    public static org.codehaus.jackson.map.ser.ContainerSerializerBase iteratorSerializer(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.TypeSerializer $r1;
        org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer $r3;
        org.codehaus.jackson.type.JavaType $r0;
        org.codehaus.jackson.map.BeanProperty $r2;
        boolean $z0;

        $r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        $r2 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r3 = new org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer;

        specialinvoke $r3.<org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>($r0, $z0, $r1, $r2);

        return $r3;
    }
}
