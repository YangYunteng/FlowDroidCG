public class c.c.a.f.b.a extends java.lang.Object implements c.b.a.m$b
{
    public final c.l.b.a a;
    public final c.c.a.f.b.d b;

    public void <init>(c.c.a.f.b.d, c.l.b.a)
    {
        c.l.b.a $r2;
        c.c.a.f.b.d $r1;
        c.c.a.f.b.a r0;

        r0 := @this: c.c.a.f.b.a;

        $r1 := @parameter0: c.c.a.f.b.d;

        $r2 := @parameter1: c.l.b.a;

        r0.<c.c.a.f.b.a: c.c.a.f.b.d b> = $r1;

        r0.<c.c.a.f.b.a: c.l.b.a a> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void a(java.lang.String)
    {
        com.google.firebase.crashlytics.FirebaseCrashlytics $r13;
        com.caremark.caremark.core.exceptions.ServerResponseException $r7;
        org.json.JSONException $r12;
        org.json.JSONObject $r8, $r9;
        c.c.a.d.c $r11;
        c.c.a.f.b.a r0;
        c.l.b.a $r5;
        java.lang.Boolean $r6;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;
        c.c.a.d.i $r10;
        boolean $z0;

        r0 := @this: c.c.a.f.b.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <c.c.a.f.b.d: java.lang.String a()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callComposerService Response: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        if $r1 != null goto label08;

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label02:
        if $z0 != 0 goto label03;

        goto label08;

     label03:
        $r5 = r0.<c.c.a.f.b.a: c.l.b.a a>;

     label04:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r5.<c.l.b.a: void onResponse(java.lang.Object)>($r6);

     label05:
        $r7 = new com.caremark.caremark.core.exceptions.ServerResponseException;

     label06:
        specialinvoke $r7.<com.caremark.caremark.core.exceptions.ServerResponseException: void <init>(java.lang.String)>("Network problem");

     label07:
        throw $r7;

     label08:
        $r8 = new org.json.JSONObject;

     label09:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("getComposerContentResponse");

        $r9 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("header");

        $r1 = virtualinvoke $r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("statusCode");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("0000");

     label10:
        if $z0 == 0 goto label17;

     label11:
        $r8 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("detail");

        $r8 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("data");

        $r10 = staticinvoke <c.c.a.d.i: c.c.a.d.i s()>();

     label12:
        $r11 = <c.c.a.d.c: c.c.a.d.c sa>;

     label13:
        $r1 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r10.<c.c.a.d.i: void a(c.c.a.d.c,java.lang.String)>($r11, $r1);

     label14:
        $r5 = r0.<c.c.a.f.b.a: c.l.b.a a>;

     label15:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r5.<c.l.b.a: void onResponse(java.lang.Object)>($r6);

     label16:
        return;

     label17:
        $r5 = r0.<c.c.a.f.b.a: c.l.b.a a>;

     label18:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r5.<c.l.b.a: void onResponse(java.lang.Object)>($r6);

     label19:
        return;

     label20:
        $r12 := @caughtexception;

        virtualinvoke $r12.<org.json.JSONException: void printStackTrace()>();

        $r1 = staticinvoke <c.c.a.f.b.d: java.lang.String a()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "Error Occurred... parsing.. using previously stored json");

        return;

     label21:
        $r7 := @caughtexception;

        $r5 = r0.<c.c.a.f.b.a: c.l.b.a a>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r5.<c.l.b.a: void onResponse(java.lang.Object)>($r6);

        $r13 = staticinvoke <com.google.firebase.crashlytics.FirebaseCrashlytics: com.google.firebase.crashlytics.FirebaseCrashlytics getInstance()>();

        virtualinvoke $r13.<com.google.firebase.crashlytics.FirebaseCrashlytics: void recordException(java.lang.Throwable)>($r7);

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return;

        catch com.caremark.caremark.core.exceptions.ServerResponseException from label01 to label02 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label04 to label05 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label06 to label08 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label09 to label10 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label11 to label12 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label13 to label14 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label15 to label16 with label21;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label18 to label19 with label21;
        catch org.json.JSONException from label01 to label02 with label20;
        catch org.json.JSONException from label04 to label05 with label20;
        catch org.json.JSONException from label06 to label07 with label20;
        catch org.json.JSONException from label09 to label10 with label20;
        catch org.json.JSONException from label11 to label12 with label20;
        catch org.json.JSONException from label13 to label14 with label20;
        catch org.json.JSONException from label15 to label16 with label20;
        catch org.json.JSONException from label18 to label19 with label20;
    }

    public volatile void onResponse(java.lang.Object)
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        c.c.a.f.b.a r0;

        r0 := @this: c.c.a.f.b.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke r0.<c.c.a.f.b.a: void a(java.lang.String)>($r2);

        return;
    }
}
