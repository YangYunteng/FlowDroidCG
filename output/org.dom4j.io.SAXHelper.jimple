public class org.dom4j.io.SAXHelper extends java.lang.Object
{
    public static boolean loggedWarning;

    static void <clinit>()
    {
        <org.dom4j.io.SAXHelper: boolean loggedWarning> = 1;

        return;
    }

    public void <init>()
    {
        org.dom4j.io.SAXHelper r0;

        r0 := @this: org.dom4j.io.SAXHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.xml.sax.XMLReader createXMLReader(boolean)
    {
        java.io.PrintStream $r3;
        java.lang.Exception $r2;
        org.xml.sax.XMLReader $r0, $r1;
        org.xml.sax.SAXException $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <org.dom4j.io.SAXHelper: org.xml.sax.XMLReader createXMLReaderViaJAXP(boolean,boolean)>($z0, 1);

        $r1 = $r0;

        if $r0 != null goto label5;

     label1:
        $r0 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label2:
        $r1 = $r0;

        goto label5;

     label3:
        $r2 := @caughtexception;

        $z0 = staticinvoke <org.dom4j.io.SAXHelper: boolean isVerboseErrorReporting()>();

        if $z0 == 0 goto label4;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Warning: Caught exception attempting to use SAX to load a SAX XMLReader ");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Warning: Exception was: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Warning: I will print the stack trace then carry on using the default SAX parser");

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label4:
        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r6;

     label5:
        if $r1 == null goto label6;

        return $r1;

     label6:
        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Couldn\'t create SAX reader");

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.xml.sax.XMLReader createXMLReaderViaJAXP(boolean, boolean)
    {
        java.lang.Throwable $r1;
        java.io.PrintStream $r2;
        org.xml.sax.XMLReader $r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

     label1:
        $r0 = staticinvoke <org.dom4j.io.JAXPHelper: org.xml.sax.XMLReader createXMLReader(boolean,boolean)>($z0, $z1);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $z0 = <org.dom4j.io.SAXHelper: boolean loggedWarning>;

        if $z0 != 0 goto label4;

        <org.dom4j.io.SAXHelper: boolean loggedWarning> = 1;

        $z0 = staticinvoke <org.dom4j.io.SAXHelper: boolean isVerboseErrorReporting()>();

        if $z0 == 0 goto label4;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Warning: Caught exception attempting to use JAXP to load a SAX XMLReader");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Warning: Exception was: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean isVerboseErrorReporting()
    {
        java.lang.String $r1;
        java.lang.Exception $r0;
        boolean $z0;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.dom4j.verbose");

     label2:
        if $r1 == null goto label6;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

     label4:
        if $z0 == 0 goto label6;

        return 1;

     label5:
        $r0 := @caughtexception;

     label6:
        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static boolean setParserFeature(org.xml.sax.XMLReader, java.lang.String, boolean)
    {
        org.xml.sax.SAXNotRecognizedException $r2;
        org.xml.sax.XMLReader $r3;
        org.xml.sax.SAXNotSupportedException $r1;
        java.lang.String $r0;
        boolean $z0;

        $r3 := @parameter0: org.xml.sax.XMLReader;

        $r0 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

     label1:
        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>($r0, $z0);

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r1 := @caughtexception;

        goto label3;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label4;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label5;
    }

    public static boolean setParserProperty(org.xml.sax.XMLReader, java.lang.String, java.lang.Object)
    {
        org.xml.sax.SAXNotRecognizedException $r3;
        org.xml.sax.XMLReader $r4;
        org.xml.sax.SAXNotSupportedException $r2;
        java.lang.Object $r1;
        java.lang.String $r0;

        $r4 := @parameter0: org.xml.sax.XMLReader;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.Object;

     label1:
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>($r0, $r1);

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r2 := @caughtexception;

        goto label3;

     label5:
        $r3 := @caughtexception;

        goto label3;

        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label4;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label5;
    }
}
