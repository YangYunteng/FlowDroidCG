public final class f.a.a.a.a.c.s$a extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    public final int a;

    public void <init>(int)
    {
        int $i0;
        f.a.a.a.a.c.s$a r0;

        r0 := @this: f.a.a.a.a.c.s$a;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<f.a.a.a.a.c.s$a: int a> = $i0;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        f.a.a.a.a.c.s$a r0;
        java.lang.Thread $r1;
        int $i0;
        java.lang.Runnable $r2;

        r0 := @this: f.a.a.a.a.c.s$a;

        $r2 := @parameter0: java.lang.Runnable;

        $r1 = new java.lang.Thread;

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        $i0 = r0.<f.a.a.a.a.c.s$a: int a>;

        virtualinvoke $r1.<java.lang.Thread: void setPriority(int)>($i0);

        virtualinvoke $r1.<java.lang.Thread: void setName(java.lang.String)>("Queue");

        return $r1;
    }
}
