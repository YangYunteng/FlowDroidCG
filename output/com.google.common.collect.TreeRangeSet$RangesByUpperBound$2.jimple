public class com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 extends com.google.common.collect.AbstractIterator
{
    public final com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0;
    public final com.google.common.collect.PeekingIterator val$backingItr;

    public void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound, com.google.common.collect.PeekingIterator)
    {
        com.google.common.collect.TreeRangeSet$RangesByUpperBound $r1;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 r0;
        com.google.common.collect.PeekingIterator $r2;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound$2;

        $r1 := @parameter0: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r2 := @parameter1: com.google.common.collect.PeekingIterator;

        r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0> = $r1;

        r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: com.google.common.collect.PeekingIterator val$backingItr> = $r2;

        specialinvoke r0.<com.google.common.collect.AbstractIterator: void <init>()>();

        return;
    }

    public volatile java.lang.Object computeNext()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: java.util.Map$Entry computeNext()>();

        return $r1;
    }

    public java.util.Map$Entry computeNext()
    {
        com.google.common.collect.Cut $r1, $r8;
        java.util.Map$Entry $r4;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 r0;
        com.google.common.collect.Range $r5, $r7;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound $r6;
        com.google.common.collect.PeekingIterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound$2;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: com.google.common.collect.PeekingIterator val$backingItr>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()>();

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;

     label1:
        $r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: com.google.common.collect.PeekingIterator val$backingItr>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.PeekingIterator: java.lang.Object next()>();

        $r5 = (com.google.common.collect.Range) $r3;

        $r6 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0>;

        $r7 = staticinvoke <com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound)>($r6);

        $r8 = $r7.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r1 = $r5.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $z0 = virtualinvoke $r8.<com.google.common.collect.Cut: boolean isLessThan(java.lang.Comparable)>($r1);

        if $z0 == 0 goto label2;

        $r1 = $r5.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r4 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r1, $r5);

        return $r4;

     label2:
        $r3 = virtualinvoke r0.<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()>();

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;
    }
}
