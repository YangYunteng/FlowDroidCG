public class com.crashlytics.android.core.CrashlyticsBackgroundWorker extends java.lang.Object
{
    public final java.util.concurrent.ExecutorService executorService;

    public void <init>(java.util.concurrent.ExecutorService)
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        $r1 := @parameter0: java.util.concurrent.ExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.ExecutorService executorService> = $r1;

        return;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable)
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker r0;
        java.util.concurrent.RejectedExecutionException $r1;
        java.util.concurrent.Future $r5;
        f.a.a.a.o $r6;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker$1 $r4;
        java.lang.Runnable $r2;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        $r2 := @parameter0: java.lang.Runnable;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.ExecutorService executorService>;

        $r4 = new com.crashlytics.android.core.CrashlyticsBackgroundWorker$1;

     label1:
        specialinvoke $r4.<com.crashlytics.android.core.CrashlyticsBackgroundWorker$1: void <init>(com.crashlytics.android.core.CrashlyticsBackgroundWorker,java.lang.Runnable)>(r0, $r2);

        $r5 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4);

     label2:
        return $r5;

     label3:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label4;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker r0;
        java.util.concurrent.RejectedExecutionException $r1;
        java.util.concurrent.Future $r5;
        f.a.a.a.o $r6;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker$2 $r4;
        java.util.concurrent.Callable $r2;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        $r2 := @parameter0: java.util.concurrent.Callable;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.ExecutorService executorService>;

        $r4 = new com.crashlytics.android.core.CrashlyticsBackgroundWorker$2;

     label1:
        specialinvoke $r4.<com.crashlytics.android.core.CrashlyticsBackgroundWorker$2: void <init>(com.crashlytics.android.core.CrashlyticsBackgroundWorker,java.util.concurrent.Callable)>(r0, $r2);

        $r5 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r4);

     label2:
        return $r5;

     label3:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label4;
    }

    public java.lang.Object submitAndWait(java.util.concurrent.Callable)
    {
        f.a.a.a.o $r10;
        java.util.concurrent.Callable $r3;
        java.lang.Exception $r9;
        java.util.concurrent.TimeUnit $r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker r0;
        java.util.concurrent.RejectedExecutionException $r2;
        java.util.concurrent.Future $r7;
        android.os.Looper $r4, $r5;
        java.lang.Object $r8;
        java.util.concurrent.ExecutorService $r6;

        r0 := @this: com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        $r3 := @parameter0: java.util.concurrent.Callable;

     label01:
        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

     label02:
        if $r4 != $r5 goto label08;

     label03:
        $r6 = r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.ExecutorService executorService>;

     label04:
        $r7 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

     label05:
        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label06:
        $r8 = interfaceinvoke $r7.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r1);

     label07:
        return $r8;

     label08:
        $r6 = r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.ExecutorService executorService>;

     label09:
        $r7 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

        $r8 = interfaceinvoke $r7.<java.util.concurrent.Future: java.lang.Object get()>();

     label10:
        return $r8;

     label11:
        $r9 := @caughtexception;

        $r10 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r10.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Failed to execute task.", $r9);

        return null;

     label12:
        $r10 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r10.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

     label13:
        $r2 := @caughtexception;

        goto label12;

        catch java.util.concurrent.RejectedExecutionException from label01 to label02 with label13;
        catch java.util.concurrent.RejectedExecutionException from label04 to label05 with label13;
        catch java.util.concurrent.RejectedExecutionException from label06 to label07 with label13;
        catch java.util.concurrent.RejectedExecutionException from label09 to label10 with label13;
        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label10 with label11;
    }
}
