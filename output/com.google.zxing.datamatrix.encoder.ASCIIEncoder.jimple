public final class com.google.zxing.datamatrix.encoder.ASCIIEncoder extends java.lang.Object implements com.google.zxing.datamatrix.encoder.Encoder
{

    public void <init>()
    {
        com.google.zxing.datamatrix.encoder.ASCIIEncoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.ASCIIEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static char encodeASCIIDigits(char, char)
    {
        char $c0, $c1;
        java.lang.IllegalArgumentException $r3;
        int $i2, $i3, $i4;
        java.lang.StringBuilder $r0, $r2;
        java.lang.String $r1;
        boolean $z0;

        $c0 := @parameter0: char;

        $c1 := @parameter1: char;

        $z0 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: boolean isDigit(char)>($c0);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label1;

        $i2 = (int) $c0;

        $i3 = -48;

        $i2 = $i2 + $i3;

        $i2 = $i2 * 10;

        $i3 = (int) $c1;

        $i4 = -48;

        $i3 = $i3 + $i4;

        $i2 = $i2 + $i3;

        $i2 = $i2 + 130;

        $c0 = (char) $i2;

        return $c0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        $r0 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not digits: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public void encode(com.google.zxing.datamatrix.encoder.EncoderContext)
    {
        java.lang.IllegalStateException $r5;
        com.google.zxing.datamatrix.encoder.EncoderContext $r1;
        char $c1, $c2;
        com.google.zxing.datamatrix.encoder.ASCIIEncoder r0;
        int $i0, $i3;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.zxing.datamatrix.encoder.ASCIIEncoder;

        $r1 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        $r2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: int determineConsecutiveDigitCount(java.lang.CharSequence,int)>($r2, $i0);

        if $i0 < 2 goto label1;

        $r2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $r2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = $i0 + 1;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $c1 = staticinvoke <com.google.zxing.datamatrix.encoder.ASCIIEncoder: char encodeASCIIDigits(char,char)>($c1, $c2);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>($c1);

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = $i0 + 2;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = $i0;

        return;

     label1:
        $c1 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: char getCurrentChar()>();

        $r2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i3 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.ASCIIEncoder: int getEncodingMode()>();

        $i0 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: int lookAheadTest(java.lang.CharSequence,int,int)>($r2, $i0, $i3);

        $i3 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.ASCIIEncoder: int getEncodingMode()>();

        if $i0 == $i3 goto label7;

        if $i0 == 1 goto label6;

        if $i0 == 2 goto label5;

        if $i0 == 3 goto label4;

        if $i0 == 4 goto label3;

        if $i0 != 5 goto label2;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(231);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(5);

        return;

     label2:
        $r5 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        $r3 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal mode: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label3:
        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(240);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(4);

        return;

     label4:
        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(238);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(3);

        return;

     label5:
        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(239);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(2);

        return;

     label6:
        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(230);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(1);

        return;

     label7:
        $z0 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: boolean isExtendedASCII(char)>($c1);

        if $z0 == 0 goto label8;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(235);

        $i0 = (int) $c1;

        $i3 = -128;

        $i0 = $i0 + $i3;

        $i0 = $i0 + 1;

        $c1 = (char) $i0;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>($c1);

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = $i0 + 1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = $i0;

        return;

     label8:
        $i0 = (int) $c1;

        $i0 = $i0 + 1;

        $c1 = (char) $i0;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>($c1);

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = $i0 + 1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = $i0;

        return;
    }

    public int getEncodingMode()
    {
        com.google.zxing.datamatrix.encoder.ASCIIEncoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.ASCIIEncoder;

        return 0;
    }
}
