public abstract class com.google.common.cache.CacheLoader extends java.lang.Object
{

    public void <init>()
    {
        com.google.common.cache.CacheLoader r0;

        r0 := @this: com.google.common.cache.CacheLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.cache.CacheLoader asyncReloading(com.google.common.cache.CacheLoader, java.util.concurrent.Executor)
    {
        com.google.common.cache.CacheLoader $r0;
        com.google.common.cache.CacheLoader$1 $r2;
        java.util.concurrent.Executor $r1;

        $r0 := @parameter0: com.google.common.cache.CacheLoader;

        $r1 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = new com.google.common.cache.CacheLoader$1;

        specialinvoke $r2.<com.google.common.cache.CacheLoader$1: void <init>(com.google.common.cache.CacheLoader,java.util.concurrent.Executor)>($r0, $r1);

        return $r2;
    }

    public static com.google.common.cache.CacheLoader 'from'(com.google.common.base.Function)
    {
        com.google.common.base.Function $r0;
        com.google.common.cache.CacheLoader$FunctionToCacheLoader $r1;

        $r0 := @parameter0: com.google.common.base.Function;

        $r1 = new com.google.common.cache.CacheLoader$FunctionToCacheLoader;

        specialinvoke $r1.<com.google.common.cache.CacheLoader$FunctionToCacheLoader: void <init>(com.google.common.base.Function)>($r0);

        return $r1;
    }

    public static com.google.common.cache.CacheLoader 'from'(com.google.common.base.Supplier)
    {
        com.google.common.base.Supplier $r0;
        com.google.common.cache.CacheLoader$SupplierToCacheLoader $r1;

        $r0 := @parameter0: com.google.common.base.Supplier;

        $r1 = new com.google.common.cache.CacheLoader$SupplierToCacheLoader;

        specialinvoke $r1.<com.google.common.cache.CacheLoader$SupplierToCacheLoader: void <init>(com.google.common.base.Supplier)>($r0);

        return $r1;
    }

    public abstract java.lang.Object load(java.lang.Object);

    public java.util.Map loadAll(java.lang.Iterable)
    {
        com.google.common.cache.CacheLoader r0;
        com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException $r2;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.cache.CacheLoader;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = new com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException;

        specialinvoke $r2.<com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException: void <init>()>();

        throw $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.CacheLoader r0;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.cache.CacheLoader;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.CacheLoader: java.lang.Object load(java.lang.Object)>($r2);

        $r3 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r2);

        return $r3;
    }
}
