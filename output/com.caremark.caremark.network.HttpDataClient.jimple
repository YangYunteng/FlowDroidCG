public final class com.caremark.caremark.network.HttpDataClient extends java.lang.Object implements c.c.a.j.c
{
    public static final int CONNECTION_TIMEOUT;
    public static final java.lang.String COOKIE_HEADER;
    public static final java.lang.String COOKIE_PREFS;
    public static final java.lang.String HTTP;
    public static final java.lang.String LOGIN_ATTEMPT_KEY;
    public static final int MAX_LOGIN_ATTEMPS_COUNT_TO_REMOVE_COOKIE;
    public static final java.lang.String SET_COOKIE_HEADER;
    public static final int SOCKET_TIMEOUT;
    public static final java.lang.String TAG;
    public static com.caremark.caremark.network.HttpDataClient instance;
    public android.content.Context context;

    static void <clinit>()
    {
        com.caremark.caremark.network.HttpDataClient $r0;

        <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG> = "HttpDataClient";

        <com.caremark.caremark.network.HttpDataClient: int SOCKET_TIMEOUT> = 360000;

        <com.caremark.caremark.network.HttpDataClient: java.lang.String SET_COOKIE_HEADER> = "Set-Cookie";

        <com.caremark.caremark.network.HttpDataClient: int MAX_LOGIN_ATTEMPS_COUNT_TO_REMOVE_COOKIE> = 5;

        <com.caremark.caremark.network.HttpDataClient: java.lang.String LOGIN_ATTEMPT_KEY> = "login_attempt_key";

        <com.caremark.caremark.network.HttpDataClient: java.lang.String HTTP> = "http://";

        <com.caremark.caremark.network.HttpDataClient: java.lang.String COOKIE_PREFS> = "cookie_prefs";

        <com.caremark.caremark.network.HttpDataClient: java.lang.String COOKIE_HEADER> = "Cookie";

        <com.caremark.caremark.network.HttpDataClient: int CONNECTION_TIMEOUT> = 360000;

        $r0 = new com.caremark.caremark.network.HttpDataClient;

        specialinvoke $r0.<com.caremark.caremark.network.HttpDataClient: void <init>()>();

        <com.caremark.caremark.network.HttpDataClient: com.caremark.caremark.network.HttpDataClient instance> = $r0;

        return;
    }

    public void <init>()
    {
        com.caremark.caremark.network.HttpDataClient r0;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.caremark.caremark.network.HttpDataClient getInstance()
    {
        com.caremark.caremark.network.HttpDataClient r0;

        r0 = <com.caremark.caremark.network.HttpDataClient: com.caremark.caremark.network.HttpDataClient instance>;

        return r0;
    }

    public java.lang.String getData(java.lang.String)
    {
        org.apache.http.params.BasicHttpParams $r6, $r28;
        com.caremark.caremark.core.exceptions.HostException $r32;
        org.apache.http.Header $r12;
        com.caremark.caremark.core.exceptions.ServerResponseException $r31;
        c.c.a.d.c $r19;
        android.webkit.CookieManager $r11;
        android.webkit.CookieSyncManager $r20;
        c.c.a.d.i $r18;
        boolean $z0;
        org.apache.http.Header[] $r10;
        org.apache.http.conn.ClientConnectionManager $r21;
        org.apache.http.HttpEntity $r15;
        java.util.UUID $r5;
        java.lang.Exception $r24;
        org.apache.http.client.methods.HttpGet $r8, $r29;
        java.lang.StringBuilder $r13, $r30;
        java.lang.Throwable $r22, $r23, $r26;
        org.apache.http.client.ClientProtocolException $r35;
        android.content.Context $r4;
        com.caremark.caremark.network.HttpDataClient r0;
        org.apache.http.client.methods.HttpUriRequest $r34;
        org.apache.http.client.HttpClient $r7;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r9, $r17;
        java.io.IOException $r25;
        com.caremark.caremark.util.DeviceUuidFactory $r3, $r27;
        org.apache.http.params.HttpParams $r33;
        org.apache.http.HttpResponse $r14;
        java.io.InputStream $r16;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        staticinvoke <com.caremark.caremark.util.L: void i(java.lang.String,java.lang.String)>($r2, $r1);

        $r27 = new com.caremark.caremark.util.DeviceUuidFactory;

        $r3 = $r27;

     label01:
        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

     label02:
        specialinvoke $r27.<com.caremark.caremark.util.DeviceUuidFactory: void <init>(android.content.Context)>($r4);

        $r5 = virtualinvoke $r3.<com.caremark.caremark.util.DeviceUuidFactory: java.util.UUID getDeviceUuid()>();

        $r2 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", "");

     label03:
        $r28 = new org.apache.http.params.BasicHttpParams;

        $r6 = $r28;

     label04:
        specialinvoke $r28.<org.apache.http.params.BasicHttpParams: void <init>()>();

     label05:
        $r33 = (org.apache.http.params.HttpParams) $r6;

     label06:
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r33, 360000);

     label07:
        $r33 = (org.apache.http.params.HttpParams) $r6;

     label08:
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r33, 360000);

        $r7 = staticinvoke <com.caremark.caremark.network.NetworkService: org.apache.http.client.HttpClient createHttpClientWithTimeout(int)>(360000);

     label09:
        $r29 = new org.apache.http.client.methods.HttpGet;

        $r8 = $r29;

     label10:
        specialinvoke $r29.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label11:
        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

     label12:
        $r9 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131821525);

        $r10 = staticinvoke <com.caremark.caremark.util.NetworkUtil: org.apache.http.Header[] createHeaderArray(java.lang.String,java.lang.String)>($r2, $r9);

        virtualinvoke $r8.<org.apache.http.client.methods.HttpGet: void setHeaders(org.apache.http.Header[])>($r10);

     label13:
        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

     label14:
        $r2 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131822526);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r2);

     label15:
        if $z0 == 0 goto label20;

     label16:
        $r11 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

     label17:
        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

     label18:
        $r2 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131822526);

        $r2 = virtualinvoke $r11.<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>($r2);

     label19:
        goto label21;

     label20:
        $r11 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r2 = virtualinvoke $r11.<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>($r1);

     label21:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

     label22:
        if $z0 != 0 goto label24;

     label23:
        virtualinvoke $r8.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Cookie", $r2);

     label24:
        $r10 = virtualinvoke $r8.<org.apache.http.client.methods.HttpGet: org.apache.http.Header[] getAllHeaders()>();

     label25:
        $i0 = lengthof $r10;

     label26:
        $i1 = 0;

        if $i0 <= 0 goto label34;

     label27:
        $i0 = lengthof $r10;

     label28:
        $i2 = 0;

     label29:
        if $i2 >= $i0 goto label34;

     label30:
        $r12 = $r10[$i2];

     label31:
        $r2 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r30 = new java.lang.StringBuilder;

        $r13 = $r30;

     label32:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Header : ");

        $r9 = interfaceinvoke $r12.<org.apache.http.Header: java.lang.String getName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = interfaceinvoke $r12.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.caremark.caremark.util.L: void i(java.lang.String,java.lang.String)>($r2, $r9);

     label33:
        $i2 = $i2 + 1;

        goto label29;

     label34:
        $r34 = (org.apache.http.client.methods.HttpUriRequest) $r8;

        $r14 = staticinvoke <com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest)>($r7, $r34);

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r16 = interfaceinvoke $r15.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label35:
        $r2 = virtualinvoke r0.<com.caremark.caremark.network.HttpDataClient: java.lang.String readInput(java.io.InputStream)>($r16);

     label36:
        interfaceinvoke $r15.<org.apache.http.HttpEntity: void consumeContent()>();

        $r10 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Set-Cookie");

        $i0 = lengthof $r10;

     label37:
        if $i1 >= $i0 goto label59;

     label38:
        $r12 = $r10[$i1];

        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

        $r9 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131822552);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r9);

     label39:
        if $z0 == 0 goto label42;

     label40:
        $r9 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        staticinvoke <com.caremark.caremark.util.L: void i(java.lang.String,java.lang.String)>($r9, "URL --> THIRD PARTY");

        $r11 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

        $r9 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131822526);

        $r17 = interfaceinvoke $r12.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r11.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r9, $r17);

     label41:
        goto label58;

     label42:
        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

        $r9 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131822526);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r9);

     label43:
        if $z0 == 0 goto label46;

     label44:
        $r11 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r4 = r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context>;

        $r9 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131822526);

        $r17 = interfaceinvoke $r12.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r11.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r9, $r17);

     label45:
        goto label58;

     label46:
        $r9 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        staticinvoke <com.caremark.caremark.util.L: void i(java.lang.String,java.lang.String)>($r9, "URL --> UNET");

        $r9 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("LtpaToken2");

     label47:
        if $z0 == 0 goto label52;

     label48:
        $r18 = staticinvoke <c.c.a.d.i: c.c.a.d.i s()>();

        $r19 = <c.c.a.d.c: c.c.a.d.c g>;

        $r9 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r18.<c.c.a.d.i: void a(c.c.a.d.c,java.lang.String)>($r19, $r9);

        $r30 = new java.lang.StringBuilder;

     label49:
        $r13 = $r30;

     label50:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r18 = staticinvoke <c.c.a.d.i: c.c.a.d.i s()>();

        $r19 = <c.c.a.d.c: c.c.a.d.c g>;

        $r9 = virtualinvoke $r18.<c.c.a.d.i: java.lang.String a(c.c.a.d.c)>($r19);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.caremark.caremark.util.L: void d(java.lang.String,java.lang.String)>("cookie is :", $r9);

     label51:
        goto label57;

     label52:
        $r9 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("LtpaToken+");

     label53:
        if $z0 == 0 goto label57;

     label54:
        $r18 = staticinvoke <c.c.a.d.i: c.c.a.d.i s()>();

        $r19 = <c.c.a.d.c: c.c.a.d.c h>;

        $r9 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r18.<c.c.a.d.i: void a(c.c.a.d.c,java.lang.String)>($r19, $r9);

        $r30 = new java.lang.StringBuilder;

     label55:
        $r13 = $r30;

     label56:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r18 = staticinvoke <c.c.a.d.i: c.c.a.d.i s()>();

        $r19 = <c.c.a.d.c: c.c.a.d.c h>;

        $r9 = virtualinvoke $r18.<c.c.a.d.i: java.lang.String a(c.c.a.d.c)>($r19);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.caremark.caremark.util.L: void d(java.lang.String,java.lang.String)>("cookie is :", $r9);

     label57:
        $r11 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r9 = interfaceinvoke $r12.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r11.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, $r9);

     label58:
        $i1 = $i1 + 1;

        goto label37;

     label59:
        $r20 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r20.<android.webkit.CookieSyncManager: void sync()>();

     label60:
        $r21 = interfaceinvoke $r7.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r21.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

     label61:
        return $r2;

     label62:
        $r22 := @caughtexception;

     label63:
        interfaceinvoke $r15.<org.apache.http.HttpEntity: void consumeContent()>();

        throw $r22;

     label64:
        $r23 := @caughtexception;

     label65:
        $r21 = interfaceinvoke $r7.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r21.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        throw $r23;

     label66:
        $r24 := @caughtexception;

        $r1 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r2 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.caremark.caremark.util.L: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r24);

        $r31 = new com.caremark.caremark.core.exceptions.ServerResponseException;

        $r1 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r31.<com.caremark.caremark.core.exceptions.ServerResponseException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r24);

        throw $r31;

     label67:
        $r25 := @caughtexception;

        $r1 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r2 = virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.caremark.caremark.util.L: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r25);

        $r31 = new com.caremark.caremark.core.exceptions.ServerResponseException;

        $r1 = virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r31.<com.caremark.caremark.core.exceptions.ServerResponseException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r25);

        throw $r31;

     label68:
        $r26 := @caughtexception;

        $r1 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r35 = (org.apache.http.client.ClientProtocolException) $r26;

        $r2 = virtualinvoke $r35.<org.apache.http.client.ClientProtocolException: java.lang.String getMessage()>();

        staticinvoke <com.caremark.caremark.util.L: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r26);

        $r32 = new com.caremark.caremark.core.exceptions.HostException;

        $r35 = (org.apache.http.client.ClientProtocolException) $r26;

        $r1 = virtualinvoke $r35.<org.apache.http.client.ClientProtocolException: java.lang.String getMessage()>();

        specialinvoke $r32.<com.caremark.caremark.core.exceptions.HostException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r26);

        goto label69;

     label69:
        throw $r32;

        catch org.apache.http.client.ClientProtocolException from label02 to label03 with label68;
        catch org.apache.http.client.ClientProtocolException from label04 to label05 with label68;
        catch org.apache.http.client.ClientProtocolException from label06 to label07 with label68;
        catch org.apache.http.client.ClientProtocolException from label08 to label09 with label68;
        catch org.apache.http.client.ClientProtocolException from label10 to label11 with label68;
        catch org.apache.http.client.ClientProtocolException from label12 to label13 with label68;
        catch org.apache.http.client.ClientProtocolException from label14 to label15 with label68;
        catch org.apache.http.client.ClientProtocolException from label16 to label17 with label68;
        catch org.apache.http.client.ClientProtocolException from label18 to label19 with label68;
        catch org.apache.http.client.ClientProtocolException from label20 to label21 with label68;
        catch org.apache.http.client.ClientProtocolException from label21 to label22 with label68;
        catch org.apache.http.client.ClientProtocolException from label23 to label25 with label68;
        catch org.apache.http.client.ClientProtocolException from label32 to label33 with label68;
        catch java.io.IOException from label02 to label03 with label67;
        catch java.io.IOException from label04 to label05 with label67;
        catch java.io.IOException from label06 to label07 with label67;
        catch java.io.IOException from label08 to label09 with label67;
        catch java.io.IOException from label10 to label11 with label67;
        catch java.io.IOException from label12 to label13 with label67;
        catch java.io.IOException from label14 to label15 with label67;
        catch java.io.IOException from label16 to label17 with label67;
        catch java.io.IOException from label18 to label19 with label67;
        catch java.io.IOException from label20 to label21 with label67;
        catch java.io.IOException from label21 to label22 with label67;
        catch java.io.IOException from label23 to label25 with label67;
        catch java.io.IOException from label32 to label33 with label67;
        catch java.lang.Exception from label01 to label03 with label66;
        catch java.lang.Exception from label04 to label09 with label66;
        catch java.lang.Exception from label10 to label15 with label66;
        catch java.lang.Exception from label16 to label19 with label66;
        catch java.lang.Exception from label20 to label21 with label66;
        catch java.lang.Exception from label21 to label22 with label66;
        catch java.lang.Exception from label23 to label26 with label66;
        catch java.lang.Exception from label27 to label28 with label66;
        catch java.lang.Exception from label30 to label31 with label66;
        catch java.lang.Exception from label32 to label33 with label66;
        catch java.lang.Throwable from label34 to label35 with label64;
        catch java.lang.Throwable from label35 to label36 with label62;
        catch java.lang.Throwable from label36 to label37 with label64;
        catch java.lang.Throwable from label38 to label39 with label64;
        catch java.lang.Throwable from label40 to label41 with label64;
        catch java.lang.Throwable from label42 to label43 with label64;
        catch java.lang.Throwable from label44 to label45 with label64;
        catch java.lang.Throwable from label46 to label47 with label64;
        catch java.lang.Throwable from label48 to label49 with label64;
        catch java.lang.Throwable from label50 to label51 with label64;
        catch java.lang.Throwable from label52 to label53 with label64;
        catch java.lang.Throwable from label54 to label55 with label64;
        catch java.lang.Throwable from label56 to label58 with label64;
        catch java.lang.Throwable from label59 to label60 with label64;
        catch org.apache.http.client.ClientProtocolException from label60 to label61 with label68;
        catch java.io.IOException from label60 to label61 with label67;
        catch java.lang.Exception from label60 to label61 with label66;
        catch java.lang.Throwable from label63 to label64 with label64;
        catch org.apache.http.client.ClientProtocolException from label65 to label66 with label68;
        catch java.io.IOException from label65 to label66 with label67;
        catch java.lang.Exception from label65 to label66 with label66;
    }

    public void init(android.content.Context)
    {
        android.content.Context $r1;
        com.caremark.caremark.network.HttpDataClient r0;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: android.content.Context;

        r0.<com.caremark.caremark.network.HttpDataClient: android.content.Context context> = $r1;

        return;
    }

    public void postData(java.lang.String)
    {
        java.io.PrintStream $r3;
        c.c.a.n.e $r9;
        com.caremark.caremark.network.HttpDataClient r0;
        java.lang.String[] $r10;
        java.lang.ArrayIndexOutOfBoundsException $r12;
        java.lang.Exception $r11;
        c.c.a.d.d $r8;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6, $r7;
        c.c.a.b.k $r5;
        boolean $z0;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        staticinvoke <com.caremark.caremark.util.L: void d(java.lang.String,java.lang.String)>($r2, "postData");

        $r1 = virtualinvoke r0.<com.caremark.caremark.network.HttpDataClient: java.lang.String postTokenService(java.lang.String)>($r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESP :: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r5 = staticinvoke <c.c.a.b.l: c.c.a.b.k a(java.lang.String)>($r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action ::: login... LOGGED IN ---> ");

        $z0 = virtualinvoke $r5.<c.c.a.b.k: boolean e()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<c.c.a.b.k: java.lang.String c()>();

        $r2 = virtualinvoke $r5.<c.c.a.b.k: java.lang.String b()>();

        $r6 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token :: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.caremark.caremark.util.L: void d(java.lang.String,java.lang.String)>($r6, $r7);

        $r8 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        virtualinvoke $r8.<c.c.a.d.d: void e(java.lang.String)>($r1);

        $r8 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        virtualinvoke $r8.<c.c.a.d.d: void C(java.lang.String)>($r2);

        $r9 = staticinvoke <c.c.a.n.e: c.c.a.n.e b()>();

        $r2 = virtualinvoke $r9.<c.c.a.n.e: java.lang.String c()>();

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(";;");

     label1:
        $r2 = $r10[0];

        $r6 = $r10[1];

        virtualinvoke $r9.<c.c.a.n.e: void a(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r6);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        return;

     label4:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace()>();

        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String postMemberInfoToken(java.lang.String)
    {
        org.apache.http.client.methods.HttpPost $r8;
        com.caremark.caremark.network.HttpDataClient r0;
        java.net.URISyntaxException $r6;
        java.io.IOException $r5;
        org.apache.http.client.methods.HttpUriRequest $r10;
        org.apache.http.client.HttpClient $r2;
        org.apache.http.impl.client.BasicResponseHandler $r9;
        java.lang.Object $r4;
        java.lang.String $r1;
        java.net.URI $r3, $r7;
        org.apache.http.client.ResponseHandler $r11;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.caremark.caremark.network.NetworkService: org.apache.http.client.HttpClient createHttpClientWithTimeout(int)>(360000);

        $r7 = new java.net.URI;

        $r3 = $r7;

     label01:
        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>($r1);

     label02:
        $r8 = new org.apache.http.client.methods.HttpPost;

     label03:
        specialinvoke $r8.<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>($r3);

     label04:
        $r9 = new org.apache.http.impl.client.BasicResponseHandler;

     label05:
        specialinvoke $r9.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();

     label06:
        $r10 = (org.apache.http.client.methods.HttpUriRequest) $r8;

        $r11 = (org.apache.http.client.ResponseHandler) $r9;

     label07:
        $r4 = staticinvoke <com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>($r2, $r10, $r11);

     label08:
        $r1 = (java.lang.String) $r4;

        return $r1;

     label09:
        $r5 := @caughtexception;

     label10:
        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

     label11:
        return "";

     label12:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.net.URISyntaxException: void printStackTrace()>();

        return "";

        catch java.net.URISyntaxException from label01 to label02 with label12;
        catch java.net.URISyntaxException from label03 to label04 with label12;
        catch java.net.URISyntaxException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.net.URISyntaxException from label07 to label08 with label12;
        catch java.net.URISyntaxException from label10 to label11 with label12;
    }

    public java.lang.String postPrescAuthToken(java.lang.String, java.lang.String)
    {
        org.apache.http.client.methods.HttpPost $r7, $r14;
        com.caremark.caremark.network.HttpDataClient r0;
        org.apache.http.params.BasicHttpParams $r3, $r12;
        java.net.URISyntaxException $r11;
        org.apache.http.client.methods.HttpUriRequest $r19;
        org.apache.http.client.HttpClient $r5;
        org.apache.http.impl.client.BasicResponseHandler $r16;
        java.lang.String $r1, $r2, $r4;
        java.net.URI $r6, $r13;
        org.apache.http.HttpEntity $r18;
        org.apache.http.entity.StringEntity $r15;
        java.io.IOException $r9;
        org.apache.http.params.HttpParams $r17;
        java.lang.Object $r8;
        org.apache.http.client.ResponseHandler $r20;
        java.io.UnsupportedEncodingException $r10;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r12 = new org.apache.http.params.BasicHttpParams;

        $r3 = $r12;

        specialinvoke $r12.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r17 = (org.apache.http.params.HttpParams) $r3;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r17, 360000);

        $r17 = (org.apache.http.params.HttpParams) $r3;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r17, 360000);

        $r4 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        staticinvoke <com.caremark.caremark.util.L: void d(java.lang.String,java.lang.String)>($r4, "postPrescService");

        $r5 = staticinvoke <com.caremark.caremark.network.NetworkService: org.apache.http.client.HttpClient createHttpClientWithTimeout(int)>(360000);

        $r13 = new java.net.URI;

        $r6 = $r13;

     label01:
        specialinvoke $r13.<java.net.URI: void <init>(java.lang.String)>($r1);

     label02:
        $r14 = new org.apache.http.client.methods.HttpPost;

        $r7 = $r14;

     label03:
        specialinvoke $r14.<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>($r6);

     label04:
        if $r2 == null goto label08;

        $r15 = new org.apache.http.entity.StringEntity;

     label05:
        specialinvoke $r15.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r2, "UTF8");

     label06:
        $r18 = (org.apache.http.HttpEntity) $r15;

     label07:
        virtualinvoke $r7.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r18);

     label08:
        $r16 = new org.apache.http.impl.client.BasicResponseHandler;

     label09:
        specialinvoke $r16.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();

     label10:
        $r19 = (org.apache.http.client.methods.HttpUriRequest) $r7;

        $r20 = (org.apache.http.client.ResponseHandler) $r16;

     label11:
        $r8 = staticinvoke <com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>($r5, $r19, $r20);

     label12:
        $r1 = (java.lang.String) $r8;

        return $r1;

     label13:
        $r9 := @caughtexception;

     label14:
        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label15:
        return null;

     label16:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

     label17:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.net.URISyntaxException: void printStackTrace()>();

        return null;

        catch java.net.URISyntaxException from label01 to label02 with label17;
        catch java.net.URISyntaxException from label03 to label04 with label17;
        catch java.net.URISyntaxException from label05 to label06 with label17;
        catch java.net.URISyntaxException from label07 to label08 with label17;
        catch java.net.URISyntaxException from label09 to label10 with label17;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label16;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label16;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label16;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label16;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label16;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.net.URISyntaxException from label11 to label12 with label17;
        catch java.net.URISyntaxException from label14 to label15 with label17;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label16;
    }

    public java.lang.String postTokenService(java.lang.String)
    {
        org.apache.http.client.methods.HttpPost $r9;
        com.caremark.caremark.network.HttpDataClient r0;
        java.net.URISyntaxException $r7;
        java.io.IOException $r6;
        org.apache.http.client.methods.HttpUriRequest $r11;
        org.apache.http.client.HttpClient $r3;
        org.apache.http.impl.client.BasicResponseHandler $r10;
        java.lang.Object $r5;
        java.lang.String $r1, $r2;
        java.net.URI $r4, $r8;
        org.apache.http.client.ResponseHandler $r12;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        staticinvoke <com.caremark.caremark.util.L: void d(java.lang.String,java.lang.String)>($r2, "postTokenService");

        $r3 = staticinvoke <com.caremark.caremark.network.NetworkService: org.apache.http.client.HttpClient createHttpClientWithTimeout(int)>(360000);

        $r8 = new java.net.URI;

        $r4 = $r8;

     label01:
        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>($r1);

     label02:
        $r9 = new org.apache.http.client.methods.HttpPost;

     label03:
        specialinvoke $r9.<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>($r4);

     label04:
        $r10 = new org.apache.http.impl.client.BasicResponseHandler;

     label05:
        specialinvoke $r10.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();

     label06:
        $r11 = (org.apache.http.client.methods.HttpUriRequest) $r9;

        $r12 = (org.apache.http.client.ResponseHandler) $r10;

     label07:
        $r5 = staticinvoke <com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>($r3, $r11, $r12);

     label08:
        $r1 = (java.lang.String) $r5;

        return $r1;

     label09:
        $r6 := @caughtexception;

     label10:
        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label11:
        return "";

     label12:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.net.URISyntaxException: void printStackTrace()>();

        return "";

        catch java.net.URISyntaxException from label01 to label02 with label12;
        catch java.net.URISyntaxException from label03 to label04 with label12;
        catch java.net.URISyntaxException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.net.URISyntaxException from label07 to label08 with label12;
        catch java.net.URISyntaxException from label10 to label11 with label12;
    }

    public java.lang.String readInput(java.io.InputStream)
    {
        java.lang.Throwable $r8;
        com.caremark.caremark.network.HttpDataClient r0;
        java.io.IOException $r6, $r9, $r10;
        java.io.InputStreamReader $r2, $r11;
        int $i0, $i1;
        char[] $r4;
        java.lang.StringBuilder $r3, $r12;
        java.lang.String $r5, $r7;
        java.io.InputStream $r1;

        r0 := @this: com.caremark.caremark.network.HttpDataClient;

        $r1 := @parameter0: java.io.InputStream;

        $r11 = new java.io.InputStreamReader;

        $r2 = $r11;

        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        $r12 = new java.lang.StringBuilder;

        $r3 = $r12;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r4 = newarray (char)[1024];

     label01:
        $i0 = virtualinvoke $r2.<java.io.InputStreamReader: int read(char[])>($r4);

     label02:
        $i1 = -1;

        if $i0 <= $i1 goto label05;

     label03:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r4, 0, $i0);

     label04:
        goto label01;

     label05:
        virtualinvoke $r2.<java.io.InputStreamReader: void close()>();

     label06:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label07:
        $r6 := @caughtexception;

        $r5 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r7 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.caremark.caremark.util.L: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r7, $r6);

        throw $r6;

     label08:
        $r8 := @caughtexception;

        goto label11;

     label09:
        $r9 := @caughtexception;

     label10:
        $r5 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r7 = virtualinvoke $r9.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.caremark.caremark.util.L: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r7, $r9);

        throw $r9;

     label11:
        virtualinvoke $r2.<java.io.InputStreamReader: void close()>();

     label12:
        throw $r8;

     label13:
        $r10 := @caughtexception;

        $r5 = <com.caremark.caremark.network.HttpDataClient: java.lang.String TAG>;

        $r7 = virtualinvoke $r10.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.caremark.caremark.util.L: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r7, $r10);

        goto label14;

     label14:
        throw $r10;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.io.IOException from label11 to label12 with label13;
    }
}
