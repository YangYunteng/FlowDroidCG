public class org.dom4j.util.UserDataElement extends org.dom4j.tree.DefaultElement
{
    public java.lang.Object data;

    public void <init>(java.lang.String)
    {
        org.dom4j.util.UserDataElement r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(java.lang.String)>($r1);

        return;
    }

    public void <init>(org.dom4j.QName)
    {
        org.dom4j.QName $r1;
        org.dom4j.util.UserDataElement r0;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 := @parameter0: org.dom4j.QName;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>($r1);

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        org.dom4j.util.UserDataElement r0, $r2;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 = specialinvoke r0.<org.dom4j.tree.DefaultElement: java.lang.Object clone()>();

        $r2 = (org.dom4j.util.UserDataElement) $r1;

        if $r2 == r0 goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.util.UserDataElement: java.lang.Object getCopyOfUserData()>();

        $r2.<org.dom4j.util.UserDataElement: java.lang.Object data> = $r1;

     label1:
        return $r2;
    }

    public org.dom4j.Element createElement(java.lang.String)
    {
        org.dom4j.util.UserDataElement r0;
        org.dom4j.Element $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.tree.DefaultElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Element createElement(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.util.UserDataElement: java.lang.Object getCopyOfUserData()>();

        interfaceinvoke $r3.<org.dom4j.Element: void setData(java.lang.Object)>($r4);

        return $r3;
    }

    public org.dom4j.Element createElement(org.dom4j.QName)
    {
        org.dom4j.util.UserDataElement r0;
        org.dom4j.QName $r1;
        org.dom4j.Element $r3;
        java.lang.Object $r4;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.tree.DefaultElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Element createElement(org.dom4j.QName)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.util.UserDataElement: java.lang.Object getCopyOfUserData()>();

        interfaceinvoke $r3.<org.dom4j.Element: void setData(java.lang.Object)>($r4);

        return $r3;
    }

    public java.lang.Object getCopyOfUserData()
    {
        java.lang.Object r1;
        org.dom4j.util.UserDataElement r0;

        r0 := @this: org.dom4j.util.UserDataElement;

        r1 = r0.<org.dom4j.util.UserDataElement: java.lang.Object data>;

        return r1;
    }

    public java.lang.Object getData()
    {
        java.lang.Object r1;
        org.dom4j.util.UserDataElement r0;

        r0 := @this: org.dom4j.util.UserDataElement;

        r1 = r0.<org.dom4j.util.UserDataElement: java.lang.Object data>;

        return r1;
    }

    public void setData(java.lang.Object)
    {
        java.lang.Object $r1;
        org.dom4j.util.UserDataElement r0;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 := @parameter0: java.lang.Object;

        r0.<org.dom4j.util.UserDataElement: java.lang.Object data> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        org.dom4j.util.UserDataElement r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: org.dom4j.util.UserDataElement;

        $r1 = new java.lang.StringBuilder;

        $r2 = specialinvoke r0.<org.dom4j.tree.AbstractElement: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userData: ");

        $r3 = r0.<org.dom4j.util.UserDataElement: java.lang.Object data>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
