public class org.apache.james.mime4j.field.address.parser.JJTAddressListParserState extends java.lang.Object
{
    public java.util.Stack marks;
    public int mk;
    public boolean node_created;
    public java.util.Stack nodes;
    public int sp;

    public void <init>()
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack nodes> = $r1;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks> = $r1;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp> = 0;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = 0;

        return;
    }

    public void clearNodeScope(org.apache.james.mime4j.field.address.parser.Node)
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.Node $r1;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        java.util.Stack $r2;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

     label1:
        $i1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp>;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk>;

        if $i1 <= $i0 goto label2;

        virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: org.apache.james.mime4j.field.address.parser.Node popNode()>();

        goto label1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = $i0;

        return;
    }

    public void closeNodeScope(org.apache.james.mime4j.field.address.parser.Node, int)
    {
        org.apache.james.mime4j.field.address.parser.Node $r1, $r5;
        java.lang.Integer $r4;
        java.util.Stack $r2;
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        $i0 := @parameter1: int;

        $r2 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = $i1;

     label1:
        $i1 = -1;

        $i1 = $i0 + $i1;

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: org.apache.james.mime4j.field.address.parser.Node popNode()>();

        interfaceinvoke $r5.<org.apache.james.mime4j.field.address.parser.Node: void jjtSetParent(org.apache.james.mime4j.field.address.parser.Node)>($r1);

        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.parser.Node: void jjtAddChild(org.apache.james.mime4j.field.address.parser.Node,int)>($r5, $i1);

        $i0 = $i1;

        goto label1;

     label2:
        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.parser.Node: void jjtClose()>();

        virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: void pushNode(org.apache.james.mime4j.field.address.parser.Node)>($r1);

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: boolean node_created> = 1;

        return;
    }

    public void closeNodeScope(org.apache.james.mime4j.field.address.parser.Node, boolean)
    {
        org.apache.james.mime4j.field.address.parser.Node $r1, $r5;
        java.lang.Integer $r4;
        java.util.Stack $r2;
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int nodeArity()>();

        $r2 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = $i1;

     label1:
        $i1 = -1;

        $i1 = $i0 + $i1;

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: org.apache.james.mime4j.field.address.parser.Node popNode()>();

        interfaceinvoke $r5.<org.apache.james.mime4j.field.address.parser.Node: void jjtSetParent(org.apache.james.mime4j.field.address.parser.Node)>($r1);

        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.parser.Node: void jjtAddChild(org.apache.james.mime4j.field.address.parser.Node,int)>($r5, $i1);

        $i0 = $i1;

        goto label1;

     label2:
        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.parser.Node: void jjtClose()>();

        virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: void pushNode(org.apache.james.mime4j.field.address.parser.Node)>($r1);

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: boolean node_created> = 1;

        return;

     label3:
        $r2 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = $i0;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: boolean node_created> = 0;

        return;
    }

    public int nodeArity()
    {
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $i1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp>;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public boolean nodeCreated()
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        z0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: boolean node_created>;

        return z0;
    }

    public void openNodeScope(org.apache.james.mime4j.field.address.parser.Node)
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.parser.Node $r1;
        int $i0;
        java.lang.Integer $r2;
        java.util.Stack $r3;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        $r3 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        $r2 = new java.lang.Integer;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk>;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp>;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = $i0;

        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.parser.Node: void jjtOpen()>();

        return;
    }

    public org.apache.james.mime4j.field.address.parser.Node peekNode()
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.parser.Node $r3;
        java.lang.Object $r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r2 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack nodes>;

        $r1 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.james.mime4j.field.address.parser.Node) $r1;

        return $r3;
    }

    public org.apache.james.mime4j.field.address.parser.Node popNode()
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.Node $r4;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp>;

        $i1 = -1;

        $i1 = $i0 + $i1;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp> = $i1;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = $i0;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack nodes>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (org.apache.james.mime4j.field.address.parser.Node) $r2;

        return $r4;
    }

    public void pushNode(org.apache.james.mime4j.field.address.parser.Node)
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.parser.Node $r2;
        int $i0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r2 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack nodes>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp>;

        $i0 = $i0 + 1;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp> = $i0;

        return;
    }

    public void reset()
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack nodes>;

        virtualinvoke $r1.<java.util.Stack: void removeAllElements()>();

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack marks>;

        virtualinvoke $r1.<java.util.Stack: void removeAllElements()>();

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int sp> = 0;

        r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: int mk> = 0;

        return;
    }

    public org.apache.james.mime4j.field.address.parser.Node rootNode()
    {
        org.apache.james.mime4j.field.address.parser.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.parser.Node $r3;
        java.lang.Object $r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.james.mime4j.field.address.parser.JJTAddressListParserState;

        $r2 = r0.<org.apache.james.mime4j.field.address.parser.JJTAddressListParserState: java.util.Stack nodes>;

        $r1 = virtualinvoke $r2.<java.util.Stack: java.lang.Object elementAt(int)>(0);

        $r3 = (org.apache.james.mime4j.field.address.parser.Node) $r1;

        return $r3;
    }
}
