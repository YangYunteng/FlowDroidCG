public final class com.google.android.gms.measurement.internal.zzem extends android.database.sqlite.SQLiteOpenHelper
{
    public final com.google.android.gms.measurement.internal.zzen zza;

    public void <init>(com.google.android.gms.measurement.internal.zzen, android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        com.google.android.gms.measurement.internal.zzen $r3;
        com.google.android.gms.measurement.internal.zzem r0;
        java.lang.String $r2;

        r0 := @this: com.google.android.gms.measurement.internal.zzem;

        $r3 := @parameter0: com.google.android.gms.measurement.internal.zzen;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: java.lang.String;

        r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza> = $r3;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, $r2, null, 1);

        return;
    }

    public final android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        com.google.android.gms.measurement.internal.zzet $r5;
        android.content.Context $r6;
        com.google.android.gms.measurement.internal.zzer $r4;
        com.google.android.gms.measurement.internal.zzen $r3;
        java.io.File $r7;
        android.database.sqlite.SQLiteDatabase $r2;
        android.database.sqlite.SQLiteException $r1, $r8;
        com.google.android.gms.measurement.internal.zzem r0;
        android.database.sqlite.SQLiteDatabaseLockedException $r9;
        boolean $z0;

        r0 := @this: com.google.android.gms.measurement.internal.zzem;

     label1:
        $r2 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label2:
        return $r2;

     label3:
        $r3 = r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.zzen: com.google.android.gms.measurement.internal.zzer zzq()>();

        $r5 = virtualinvoke $r4.<com.google.android.gms.measurement.internal.zzer: com.google.android.gms.measurement.internal.zzet zze()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.zzet: void zza(java.lang.String)>("Opening the local database failed, dropping and recreating it");

        $r3 = r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza>;

        $r6 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.zzen: android.content.Context zzm()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("google_app_measurement_local.db");

        $z0 = virtualinvoke $r7.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.zzen: com.google.android.gms.measurement.internal.zzer zzq()>();

        $r5 = virtualinvoke $r4.<com.google.android.gms.measurement.internal.zzer: com.google.android.gms.measurement.internal.zzet zze()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.zzet: void zza(java.lang.String,java.lang.Object)>("Failed to delete corrupted local db file", "google_app_measurement_local.db");

     label4:
        $r2 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label5:
        return $r2;

     label6:
        $r8 := @caughtexception;

        $r3 = r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.zzen: com.google.android.gms.measurement.internal.zzer zzq()>();

        $r5 = virtualinvoke $r4.<com.google.android.gms.measurement.internal.zzer: com.google.android.gms.measurement.internal.zzet zze()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.zzet: void zza(java.lang.String,java.lang.Object)>("Failed to open local database. Events will bypass local storage", $r8);

        return null;

     label7:
        $r9 := @caughtexception;

        throw $r9;

     label8:
        $r1 := @caughtexception;

        goto label3;

        catch android.database.sqlite.SQLiteDatabaseLockedException from label1 to label2 with label7;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label8;
        catch android.database.sqlite.SQLiteException from label4 to label5 with label6;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.zzer $r2;
        com.google.android.gms.measurement.internal.zzen $r3;
        com.google.android.gms.measurement.internal.zzem r0;

        r0 := @this: com.google.android.gms.measurement.internal.zzem;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza>;

        $r2 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.zzen: com.google.android.gms.measurement.internal.zzer zzq()>();

        staticinvoke <com.google.android.gms.measurement.internal.zzag: void zza(com.google.android.gms.measurement.internal.zzer,android.database.sqlite.SQLiteDatabase)>($r2, $r1);

        return;
    }

    public final void onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.google.android.gms.measurement.internal.zzem r0;

        r0 := @this: com.google.android.gms.measurement.internal.zzem;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public final void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.zzer $r3;
        com.google.android.gms.measurement.internal.zzen $r2;
        com.google.android.gms.measurement.internal.zzem r0;

        r0 := @this: com.google.android.gms.measurement.internal.zzem;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = r0.<com.google.android.gms.measurement.internal.zzem: com.google.android.gms.measurement.internal.zzen zza>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.zzen: com.google.android.gms.measurement.internal.zzer zzq()>();

        staticinvoke <com.google.android.gms.measurement.internal.zzag: void zza(com.google.android.gms.measurement.internal.zzer,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "messages", "create table if not exists messages ( type INTEGER NOT NULL, entry BLOB NOT NULL)", "type,entry", null);

        return;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.google.android.gms.measurement.internal.zzem r0;

        r0 := @this: com.google.android.gms.measurement.internal.zzem;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
}
