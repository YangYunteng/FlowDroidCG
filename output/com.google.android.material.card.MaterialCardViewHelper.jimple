public class com.google.android.material.card.MaterialCardViewHelper extends java.lang.Object
{
    public static final float CARD_VIEW_SHADOW_MULTIPLIER;
    public static final int CHECKED_ICON_LAYER_INDEX;
    public static final int[] CHECKED_STATE_SET;
    public static final double COS_45;
    public static final int DEFAULT_STROKE_VALUE;
    public final com.google.android.material.shape.MaterialShapeDrawable bgDrawable;
    public boolean checkable;
    public android.graphics.drawable.Drawable checkedIcon;
    public final int checkedIconMargin;
    public final int checkedIconSize;
    public android.content.res.ColorStateList checkedIconTint;
    public android.graphics.drawable.LayerDrawable clickableForegroundDrawable;
    public com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable;
    public android.graphics.drawable.Drawable fgDrawable;
    public final com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable;
    public com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable;
    public boolean isBackgroundOverwritten;
    public final com.google.android.material.card.MaterialCardView materialCardView;
    public android.content.res.ColorStateList rippleColor;
    public android.graphics.drawable.Drawable rippleDrawable;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel;
    public android.content.res.ColorStateList strokeColor;
    public int strokeWidth;
    public final android.graphics.Rect userContentPadding;

    static void <clinit>()
    {
        int[] $r0;
        double $d0;

        <com.google.android.material.card.MaterialCardViewHelper: int DEFAULT_STROKE_VALUE> = -1;

        <com.google.android.material.card.MaterialCardViewHelper: int CHECKED_ICON_LAYER_INDEX> = 2;

        <com.google.android.material.card.MaterialCardViewHelper: float CARD_VIEW_SHADOW_MULTIPLIER> = 1.5F;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <com.google.android.material.card.MaterialCardViewHelper: int[] CHECKED_STATE_SET> = $r0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        <com.google.android.material.card.MaterialCardViewHelper: double COS_45> = $d0;

        return;
    }

    public void <init>(com.google.android.material.card.MaterialCardView, android.util.AttributeSet, int, int)
    {
        android.graphics.Rect $r3;
        android.content.Context $r5;
        com.google.android.material.card.MaterialCardView $r1;
        com.google.android.material.shape.ShapeAppearanceModel $r6;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r7;
        com.google.android.material.shape.MaterialShapeDrawable $r4;
        android.content.res.TypedArray $r9;
        com.google.android.material.card.MaterialCardViewHelper r0;
        android.util.AttributeSet $r2;
        int[] $r8;
        int $i0, $i1;
        float $f0;
        boolean $z0;
        android.content.res.Resources $r10;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: com.google.android.material.card.MaterialCardView;

        $r2 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect userContentPadding> = $r3;

        r0.<com.google.android.material.card.MaterialCardViewHelper: boolean isBackgroundOverwritten> = 0;

        r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView> = $r1;

        $r4 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r5 = virtualinvoke $r1.<android.widget.FrameLayout: android.content.Context getContext()>();

        specialinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r5, $r2, $i1, $i0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable> = $r4;

        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $r5 = virtualinvoke $r1.<android.widget.FrameLayout: android.content.Context getContext()>();

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r5);

        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowColor(int)>(-12303292);

        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $r6 = virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>();

        $r7 = virtualinvoke $r6.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()>();

        $r5 = virtualinvoke $r1.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r8 = <com.google.android.material.R$styleable: int[] CardView>;

        $i0 = <com.google.android.material.R$style: int CardView>;

        $r9 = virtualinvoke $r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r8, $i1, $i0);

        $i1 = <com.google.android.material.R$styleable: int CardView_cardCornerRadius>;

        $z0 = virtualinvoke $r9.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label1;

        $i1 = <com.google.android.material.R$styleable: int CardView_cardCornerRadius>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        virtualinvoke $r7.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)>($f0);

     label1:
        $r4 = new com.google.android.material.shape.MaterialShapeDrawable;

        specialinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>();

        r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable> = $r4;

        $r6 = virtualinvoke $r7.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r6);

        $r10 = virtualinvoke $r1.<android.widget.FrameLayout: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int mtrl_card_checked_icon_margin>;

        $i1 = virtualinvoke $r10.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        r0.<com.google.android.material.card.MaterialCardViewHelper: int checkedIconMargin> = $i1;

        $i1 = <com.google.android.material.R$dimen: int mtrl_card_checked_icon_size>;

        $i1 = virtualinvoke $r10.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        r0.<com.google.android.material.card.MaterialCardViewHelper: int checkedIconSize> = $i1;

        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private float calculateActualCornerPadding()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        float $f0, $f1, $f2;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        com.google.android.material.shape.CornerTreatment $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getTopLeftCorner()>();

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $f0 = virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: float getTopLeftCornerResolvedSize()>();

        $f0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)>($r2, $f0);

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getTopRightCorner()>();

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $f1 = virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: float getTopRightCornerResolvedSize()>();

        $f1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)>($r2, $f1);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getBottomRightCorner()>();

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $f1 = virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: float getBottomRightCornerResolvedSize()>();

        $f1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)>($r2, $f1);

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getBottomLeftCorner()>();

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $f2 = virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: float getBottomLeftCornerResolvedSize()>();

        $f2 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)>($r2, $f2);

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f2);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        return $f0;
    }

    private float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment, float)
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        float $f0;
        com.google.android.material.shape.CornerTreatment $r1;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: com.google.android.material.shape.CornerTreatment;

        $f0 := @parameter1: float;

        $z0 = $r1 instanceof com.google.android.material.shape.RoundedCornerTreatment;

        if $z0 == 0 goto label1;

        $d0 = <com.google.android.material.card.MaterialCardViewHelper: double COS_45>;

        $d0 = 1.0 - $d0;

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        return $f0;

     label1:
        $z0 = $r1 instanceof com.google.android.material.shape.CutCornerTreatment;

        if $z0 == 0 goto label2;

        $f0 = $f0 / 2.0F;

        return $f0;

     label2:
        return 0.0F;
    }

    private float calculateHorizontalBackgroundPadding()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $f0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: float getMaxCardElevation()>();

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingOutsideCardBackground()>();

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateActualCornerPadding()>();

        goto label2;

     label1:
        $f1 = 0.0F;

     label2:
        $f0 = $f0 + $f1;

        return $f0;
    }

    private float calculateVerticalBackgroundPadding()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $f0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: float getMaxCardElevation()>();

        $f0 = $f0 * 1.5F;

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingOutsideCardBackground()>();

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateActualCornerPadding()>();

        goto label2;

     label1:
        $f1 = 0.0F;

     label2:
        $f0 = $f0 + $f1;

        return $f0;
    }

    private boolean canClipToOutline()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $z0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: boolean isRoundRect()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.graphics.drawable.Drawable createCheckedIconLayer()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        int[] $r3;
        android.graphics.drawable.StateListDrawable $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r1.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable checkedIcon>;

        if $r2 == null goto label1;

        $r3 = <com.google.android.material.card.MaterialCardViewHelper: int[] CHECKED_STATE_SET>;

        virtualinvoke $r1.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, $r2);

     label1:
        return $r1;
    }

    private android.graphics.drawable.Drawable createCompatRippleDrawable()
    {
        android.content.res.ColorStateList $r3;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int[] $r4;
        android.graphics.drawable.StateListDrawable $r1;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r1.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r2 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()>();

        r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable> = $r2;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable>;

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor>;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r3);

        $r4 = newarray (int)[1];

        $r4[0] = 16842919;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r4, $r2);

        return $r1;
    }

    private android.graphics.drawable.Drawable createForegroundRippleDrawable()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        android.graphics.drawable.RippleDrawable $r3;
        android.graphics.drawable.Drawable $r4;
        com.google.android.material.shape.MaterialShapeDrawable $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $z0 = <com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()>();

        r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable> = $r2;

        $r3 = new android.graphics.drawable.RippleDrawable;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable>;

        specialinvoke $r3.<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r1, null, $r2);

        return $r3;

     label1:
        $r4 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createCompatRippleDrawable()>();

        return $r4;
    }

    private com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        specialinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r2);

        return $r1;
    }

    private android.graphics.drawable.Drawable getClickableForeground()
    {
        android.graphics.drawable.LayerDrawable $r2;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0;
        android.graphics.drawable.Drawable $r1, $r4;
        android.graphics.drawable.Drawable[] $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r5;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable>;

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createForegroundRippleDrawable()>();

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable> = $r1;

     label1:
        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        if $r2 != null goto label2;

        $r1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createCheckedIconLayer()>();

        $r2 = new android.graphics.drawable.LayerDrawable;

        $r3 = newarray (android.graphics.drawable.Drawable)[3];

        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable>;

        $r3[0] = $r4;

        $r5 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

        $r3[1] = $r5;

        $r3[2] = $r1;

        specialinvoke $r2.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r3);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable> = $r2;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        $i0 = <com.google.android.material.R$id: int mtrl_card_checked_layer_id>;

        virtualinvoke $r2.<android.graphics.drawable.LayerDrawable: void setId(int,int)>(2, $i0);

     label2:
        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        return $r2;
    }

    private float getParentCardViewCalculatedCornerPadding()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r1;
        int $i0;
        float $f0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()>();

        if $z0 == 0 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: boolean getUseCompatPadding()>();

        if $z0 == 0 goto label2;

     label1:
        $d0 = <com.google.android.material.card.MaterialCardViewHelper: double COS_45>;

        $d0 = 1.0 - $d0;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $f0 = virtualinvoke $r1.<com.google.android.material.card.MaterialCardView: float getCardViewRadius()>();

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        return $f0;

     label2:
        return 0.0F;
    }

    private android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.card.MaterialCardView $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0, $i1;
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper$1 $r3;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label4;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r2.<androidx.cardview.widget.CardView: boolean getUseCompatPadding()>();

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $i0 = 0;

        $i1 = 0;

        goto label5;

     label4:
        $f0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateVerticalBackgroundPadding()>();

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        $f0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateHorizontalBackgroundPadding()>();

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

     label5:
        $r3 = new com.google.android.material.card.MaterialCardViewHelper$1;

        specialinvoke $r3.<com.google.android.material.card.MaterialCardViewHelper$1: void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int)>(r0, $r1, $i0, $i1, $i0, $i1);

        return $r3;
    }

    private boolean shouldAddCornerPaddingInsideCardBackground()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean canClipToOutline()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean shouldAddCornerPaddingOutsideCardBackground()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean canClipToOutline()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r1.<androidx.cardview.widget.CardView: boolean getUseCompatPadding()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void updateInsetForeground(android.graphics.drawable.Drawable)
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r2;
        android.graphics.drawable.InsetDrawable $r4;
        int $i0;
        android.graphics.drawable.Drawable $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>();

        $z0 = $r3 instanceof android.graphics.drawable.InsetDrawable;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>();

        $r4 = (android.graphics.drawable.InsetDrawable) $r3;

        virtualinvoke $r4.<android.graphics.drawable.InsetDrawable: void setDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)>($r1);

        virtualinvoke $r2.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    private void updateRippleColor()
    {
        android.content.res.ColorStateList $r3;
        com.google.android.material.card.MaterialCardViewHelper r0;
        android.graphics.drawable.RippleDrawable $r2;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r4;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $z0 = <com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable>;

        if $r1 == null goto label1;

        $r2 = (android.graphics.drawable.RippleDrawable) $r1;

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor>;

        virtualinvoke $r2.<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>($r3);

        return;

     label1:
        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable>;

        if $r4 == null goto label2;

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor>;

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r3);

     label2:
        return;
    }

    public void forceRippleRedraw()
    {
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable>;

        $i3 = $r1.<android.graphics.Rect: int left>;

        $i4 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        $i2 = -1;

        $i2 = $i0 + $i2;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i4, $i1, $i2);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable rippleDrawable>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        $i4 = $r1.<android.graphics.Rect: int right>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i3, $i4, $i0);

     label1:
        return;
    }

    public com.google.android.material.shape.MaterialShapeDrawable getBackground()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        return r1;
    }

    public android.content.res.ColorStateList getCardBackgroundColor()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $r1 = virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getFillColor()>();

        return $r1;
    }

    public android.content.res.ColorStateList getCardForegroundColor()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

        $r1 = virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getFillColor()>();

        return $r1;
    }

    public android.graphics.drawable.Drawable getCheckedIcon()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable checkedIcon>;

        return r1;
    }

    public android.content.res.ColorStateList getCheckedIconTint()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList checkedIconTint>;

        return r1;
    }

    public float getCornerRadius()
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $f0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getTopLeftCornerResolvedSize()>();

        return $f0;
    }

    public float getProgress()
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $f0 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: float getInterpolation()>();

        return $f0;
    }

    public android.content.res.ColorStateList getRippleColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor>;

        return r1;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.ShapeAppearanceModel r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        return r1;
    }

    public int getStrokeColor()
    {
        int $i0;
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor>;

        if $r1 != null goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i0;
    }

    public android.content.res.ColorStateList getStrokeColorStateList()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor>;

        return r1;
    }

    public int getStrokeWidth()
    {
        int i0;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        i0 = r0.<com.google.android.material.card.MaterialCardViewHelper: int strokeWidth>;

        return i0;
    }

    public android.graphics.Rect getUserContentPadding()
    {
        android.graphics.Rect r1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect userContentPadding>;

        return r1;
    }

    public boolean isBackgroundOverwritten()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        boolean z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        z0 = r0.<com.google.android.material.card.MaterialCardViewHelper: boolean isBackgroundOverwritten>;

        return z0;
    }

    public boolean isCheckable()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        boolean z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        z0 = r0.<com.google.android.material.card.MaterialCardViewHelper: boolean checkable>;

        return z0;
    }

    public void loadFromAttributes(android.content.res.TypedArray)
    {
        android.content.Context $r3;
        com.google.android.material.card.MaterialCardView $r2;
        android.graphics.drawable.Drawable $r5;
        android.content.res.TypedArray $r1;
        com.google.android.material.shape.MaterialShapeDrawable $r6;
        android.content.res.ColorStateList $r4;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_strokeColor>;

        $r4 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r3, $r1, $i0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor> = $r4;

        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor>;

        if $r4 != null goto label1;

        $i0 = -1;

        $r4 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor> = $r4;

     label1:
        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_strokeWidth>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: int strokeWidth> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_android_checkable>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: boolean checkable> = $z0;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = r0.<com.google.android.material.card.MaterialCardViewHelper: boolean checkable>;

        virtualinvoke $r2.<android.widget.FrameLayout: void setLongClickable(boolean)>($z0);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_checkedIconTint>;

        $r4 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r3, $r1, $i0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList checkedIconTint> = $r4;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_checkedIcon>;

        $r5 = staticinvoke <com.google.android.material.resources.MaterialResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int)>($r3, $r1, $i0);

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIcon(android.graphics.drawable.Drawable)>($r5);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_rippleColor>;

        $r4 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r3, $r1, $i0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor> = $r4;

        $r4 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor>;

        if $r4 != null goto label2;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $i0 = <com.google.android.material.R$attr: int colorControlHighlight>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>($r2, $i0);

        $r4 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor> = $r4;

     label2:
        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = virtualinvoke $r2.<android.widget.FrameLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialCardView_cardForegroundColor>;

        $r4 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r3, $r1, $i0);

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void setCardForegroundColor(android.content.res.ColorStateList)>($r4);

        specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>();

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateElevation()>();

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateStroke()>();

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r6 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $r5 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)>($r6);

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)>($r5);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r2.<android.widget.FrameLayout: boolean isClickable()>();

        if $z0 == 0 goto label3;

        $r5 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getClickableForeground()>();

        goto label4;

     label3:
        $r5 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

     label4:
        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable> = $r5;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r5 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable>;

        $r5 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)>($r5);

        virtualinvoke $r2.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>($r5);

        return;
    }

    public void onMeasure(int, int)
    {
        android.graphics.drawable.LayerDrawable $r1;
        com.google.android.material.card.MaterialCardView $r2;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0, $i1, $i2, $i3;
        float $f0;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $i2 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        if $r1 == null goto label7;

        $i0 = r0.<com.google.android.material.card.MaterialCardViewHelper: int checkedIconMargin>;

        $i2 = $i2 - $i0;

        $i3 = r0.<com.google.android.material.card.MaterialCardViewHelper: int checkedIconSize>;

        $i2 = $i2 - $i3;

        $i1 = $i1 - $i0;

        $i1 = $i1 - $i3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r2.<androidx.cardview.widget.CardView: boolean getUseCompatPadding()>();

        if $z0 == 0 goto label4;

     label3:
        $f0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateVerticalBackgroundPadding()>();

        $f0 = $f0 * 2.0F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $i1 = $i1 - $i0;

        $f0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateHorizontalBackgroundPadding()>();

        $f0 = $f0 * 2.0F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $i2 = $i2 - $i0;

     label4:
        $i0 = r0.<com.google.android.material.card.MaterialCardViewHelper: int checkedIconMargin>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $i3 = staticinvoke <b.i.i.y: int p(android.view.View)>($r2);

        if $i3 != 1 goto label5;

        $i3 = $i0;

        goto label6;

     label5:
        $i3 = $i2;

        $i2 = $i0;

     label6:
        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        $i0 = r0.<com.google.android.material.card.MaterialCardViewHelper: int checkedIconMargin>;

        virtualinvoke $r1.<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>(2, $i3, $i0, $i2, $i1);

     label7:
        return;
    }

    public void setBackgroundOverwritten(boolean)
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.card.MaterialCardViewHelper: boolean isBackgroundOverwritten> = $z0;

        return;
    }

    public void setCardBackgroundColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setCardForegroundColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r2 := @parameter0: android.content.res.ColorStateList;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

        if $r2 != null goto label1;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(0);

     label1:
        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setCheckable(boolean)
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.card.MaterialCardViewHelper: boolean checkable> = $z0;

        return;
    }

    public void setCheckedIcon(android.graphics.drawable.Drawable)
    {
        android.content.res.ColorStateList $r2;
        android.graphics.drawable.LayerDrawable $r3;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable checkedIcon> = $r1;

        if $r1 == null goto label1;

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r1 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r1);

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable checkedIcon> = $r1;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable checkedIcon>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList checkedIconTint>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r2);

     label1:
        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        if $r3 == null goto label2;

        $r1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createCheckedIconLayer()>();

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.LayerDrawable clickableForegroundDrawable>;

        $i0 = <com.google.android.material.R$id: int mtrl_card_checked_layer_id>;

        virtualinvoke $r3.<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>($i0, $r1);

     label2:
        return;
    }

    public void setCheckedIconTint(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList checkedIconTint> = $r1;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable checkedIcon>;

        if $r2 == null goto label1;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r1);

     label1:
        return;
    }

    public void setCornerRadius(float)
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        float $f0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $f0 := @parameter0: float;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r1 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float)>($f0);

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingOutsideCardBackground()>();

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingInsideCardBackground()>();

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateContentPadding()>();

     label2:
        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingOutsideCardBackground()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>();

     label3:
        return;
    }

    public void setProgress(float)
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $f0 := @parameter0: float;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setInterpolation(float)>($f0);

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setInterpolation(float)>($f0);

     label1:
        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setInterpolation(float)>($f0);

     label2:
        return;
    }

    public void setRippleColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList rippleColor> = $r1;

        specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>();

        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r1;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $z0 = virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: boolean isRoundRect()>();

        $z0 = $z0 ^ 1;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowBitmapDrawingEnable(boolean)>($z0);

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label1:
        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label2:
        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable>;

        if $r2 == null goto label3;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label3:
        return;
    }

    public void setStrokeColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor> = $r1;

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateStroke()>();

        return;
    }

    public void setStrokeWidth(int)
    {
        int $i0, $i1;
        com.google.android.material.card.MaterialCardViewHelper r0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.card.MaterialCardViewHelper: int strokeWidth>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<com.google.android.material.card.MaterialCardViewHelper: int strokeWidth> = $i0;

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateStroke()>();

        return;
    }

    public void setUserContentPadding(int, int, int, int)
    {
        android.graphics.Rect $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect userContentPadding>;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateContentPadding()>();

        return;
    }

    public void updateClickable()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r2;
        android.graphics.drawable.Drawable $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $z0 = virtualinvoke $r2.<android.widget.FrameLayout: boolean isClickable()>();

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getClickableForeground()>();

        goto label2;

     label1:
        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

     label2:
        r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable> = $r3;

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable>;

        if $r1 == $r3 goto label3;

        specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>($r3);

     label3:
        return;
    }

    public void updateContentPadding()
    {
        android.graphics.Rect $r2;
        com.google.android.material.card.MaterialCardView $r1;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingInsideCardBackground()>();

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingOutsideCardBackground()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        if $z0 == 0 goto label4;

        $f0 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float calculateActualCornerPadding()>();

        goto label5;

     label4:
        $f0 = 0.0F;

     label5:
        $f1 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: float getParentCardViewCalculatedCornerPadding()>();

        $f0 = $f0 - $f1;

        $i0 = (int) $f0;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect userContentPadding>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i1 = $i1 + $i0;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i2 = $i2 + $i0;

        $i3 = $r2.<android.graphics.Rect: int right>;

        $i3 = $i3 + $i0;

        $i4 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i4 + $i0;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardView: void setAncestorContentPadding(int,int,int,int)>($i1, $i2, $i3, $i0);

        return;
    }

    public void updateElevation()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r2;
        float $f0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $f0 = virtualinvoke $r2.<androidx.cardview.widget.CardView: float getCardElevation()>();

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

        return;
    }

    public void updateInsets()
    {
        com.google.android.material.card.MaterialCardViewHelper r0;
        com.google.android.material.card.MaterialCardView $r1;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: boolean isBackgroundOverwritten()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable bgDrawable>;

        $r3 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)>($r2);

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)>($r3);

     label1:
        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.card.MaterialCardView materialCardView>;

        $r3 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable fgDrawable>;

        $r3 = specialinvoke r0.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)>($r3);

        virtualinvoke $r1.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void updateStroke()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.card.MaterialCardViewHelper r0;
        int $i0;
        float $f0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardViewHelper;

        $r1 = r0.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable>;

        $i0 = r0.<com.google.android.material.card.MaterialCardViewHelper: int strokeWidth>;

        $f0 = (float) $i0;

        $r2 = r0.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList strokeColor>;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,android.content.res.ColorStateList)>($f0, $r2);

        return;
    }
}
