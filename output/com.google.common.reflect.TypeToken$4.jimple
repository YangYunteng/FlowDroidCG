public class com.google.common.reflect.TypeToken$4 extends com.google.common.reflect.TypeVisitor
{
    public final com.google.common.reflect.TypeToken this$0;
    public final com.google.common.collect.ImmutableSet$Builder val$builder;

    public void <init>(com.google.common.reflect.TypeToken, com.google.common.collect.ImmutableSet$Builder)
    {
        com.google.common.reflect.TypeToken$4 r0;
        com.google.common.reflect.TypeToken $r1;
        com.google.common.collect.ImmutableSet$Builder $r2;

        r0 := @this: com.google.common.reflect.TypeToken$4;

        $r1 := @parameter0: com.google.common.reflect.TypeToken;

        $r2 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        r0.<com.google.common.reflect.TypeToken$4: com.google.common.reflect.TypeToken this$0> = $r1;

        r0.<com.google.common.reflect.TypeToken$4: com.google.common.collect.ImmutableSet$Builder val$builder> = $r2;

        specialinvoke r0.<com.google.common.reflect.TypeVisitor: void <init>()>();

        return;
    }

    public void visitClass(java.lang.Class)
    {
        com.google.common.reflect.TypeToken$4 r0;
        java.lang.Class $r1;
        com.google.common.collect.ImmutableSet$Builder $r2;

        r0 := @this: com.google.common.reflect.TypeToken$4;

        $r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.common.reflect.TypeToken$4: com.google.common.collect.ImmutableSet$Builder val$builder>;

        virtualinvoke $r2.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r1);

        return;
    }

    public void visitGenericArrayType(java.lang.reflect.GenericArrayType)
    {
        java.lang.reflect.GenericArrayType $r2;
        com.google.common.reflect.TypeToken$4 r0;
        java.lang.reflect.Type $r3;
        com.google.common.collect.ImmutableSet$Builder $r1;
        java.lang.Class $r5;
        com.google.common.reflect.TypeToken $r4;

        r0 := @this: com.google.common.reflect.TypeToken$4;

        $r2 := @parameter0: java.lang.reflect.GenericArrayType;

        $r1 = r0.<com.google.common.reflect.TypeToken$4: com.google.common.collect.ImmutableSet$Builder val$builder>;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r4 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r3);

        $r5 = virtualinvoke $r4.<com.google.common.reflect.TypeToken: java.lang.Class getRawType()>();

        $r5 = staticinvoke <com.google.common.reflect.Types: java.lang.Class getArrayClass(java.lang.Class)>($r5);

        virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r5);

        return;
    }

    public void visitParameterizedType(java.lang.reflect.ParameterizedType)
    {
        com.google.common.reflect.TypeToken$4 r0;
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type $r2;
        com.google.common.collect.ImmutableSet$Builder $r1;
        java.lang.Class $r4;

        r0 := @this: com.google.common.reflect.TypeToken$4;

        $r3 := @parameter0: java.lang.reflect.ParameterizedType;

        $r1 = r0.<com.google.common.reflect.TypeToken$4: com.google.common.collect.ImmutableSet$Builder val$builder>;

        $r2 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r4 = (java.lang.Class) $r2;

        virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r4);

        return;
    }

    public void visitTypeVariable(java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.Type[] $r1;
        com.google.common.reflect.TypeToken$4 r0;
        java.lang.reflect.TypeVariable $r2;

        r0 := @this: com.google.common.reflect.TypeToken$4;

        $r2 := @parameter0: java.lang.reflect.TypeVariable;

        $r1 = interfaceinvoke $r2.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();

        virtualinvoke r0.<com.google.common.reflect.TypeVisitor: void visit(java.lang.reflect.Type[])>($r1);

        return;
    }

    public void visitWildcardType(java.lang.reflect.WildcardType)
    {
        java.lang.reflect.Type[] $r1;
        com.google.common.reflect.TypeToken$4 r0;
        java.lang.reflect.WildcardType $r2;

        r0 := @this: com.google.common.reflect.TypeToken$4;

        $r2 := @parameter0: java.lang.reflect.WildcardType;

        $r1 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        virtualinvoke r0.<com.google.common.reflect.TypeVisitor: void visit(java.lang.reflect.Type[])>($r1);

        return;
    }
}
