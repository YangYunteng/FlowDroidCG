public final class com.google.common.primitives.UnsignedLongs extends java.lang.Object
{
    public static final long MAX_VALUE;

    public void <init>()
    {
        com.google.common.primitives.UnsignedLongs r0;

        r0 := @this: com.google.common.primitives.UnsignedLongs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int compare(long, long)
    {
        int $i2;
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l0 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l0);

        $l1 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l1);

        $i2 = staticinvoke <com.google.common.primitives.Longs: int compare(long,long)>($l0, $l1);

        return $i2;
    }

    public static long decode(java.lang.String)
    {
        long $l1;
        java.lang.NumberFormatException $r4, $r5;
        com.google.common.primitives.ParseRequest $r2;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r3;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.google.common.primitives.ParseRequest: com.google.common.primitives.ParseRequest fromString(java.lang.String)>($r1);

        $r3 = $r2.<com.google.common.primitives.ParseRequest: java.lang.String rawValue>;

        $i0 = $r2.<com.google.common.primitives.ParseRequest: int radix>;

     label1:
        $l1 = staticinvoke <com.google.common.primitives.UnsignedLongs: long parseUnsignedLong(java.lang.String,int)>($r3, $i0);

     label2:
        return $l1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NumberFormatException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing value: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.NumberFormatException: java.lang.Throwable initCause(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long divide(long, long)
    {
        byte $b3;
        int $i4;
        long $l0, $l1, $l2, $l5;
        boolean $z0;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $b3 = $l0 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label2;

        $i4 = staticinvoke <com.google.common.primitives.UnsignedLongs: int compare(long,long)>($l2, $l0);

        if $i4 >= 0 goto label1;

        return 0L;

     label1:
        return 1L;

     label2:
        $b3 = $l2 cmp 0L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label3;

        $l2 = $l2 / $l0;

        return $l2;

     label3:
        $z0 = 1;

        $l5 = $l2 >>> 1;

        $l5 = $l5 / $l0;

        $l5 = $l5 << 1;

        $l1 = $l5 * $l0;

        $l2 = $l2 - $l1;

        $i4 = staticinvoke <com.google.common.primitives.UnsignedLongs: int compare(long,long)>($l2, $l0);

        if $i4 < 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        $l2 = (long) $z0;

        $l2 = $l5 + $l2;

        return $l2;
    }

    public static long flip(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        $l0 = $l0 ^ -9223372036854775808L;

        return $l0;
    }

    public static transient java.lang.String join(java.lang.String, long[])
    {
        long[] $r0;
        int $i0, $i2;
        java.lang.StringBuilder $r2;
        long $l1;
        java.lang.String $r1, $r3;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: long[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        $i0 = $i0 * 5;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $l1 = $r0[0];

        $r3 = staticinvoke <com.google.common.primitives.UnsignedLongs: java.lang.String toString(long)>($l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = 1;

     label2:
        $i2 = lengthof $r0;

        if $i0 >= $i2 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $l1 = $r0[$i0];

        $r3 = staticinvoke <com.google.common.primitives.UnsignedLongs: java.lang.String toString(long)>($l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.util.Comparator lexicographicalComparator()
    {
        com.google.common.primitives.UnsignedLongs$LexicographicalComparator r0;

        r0 = <com.google.common.primitives.UnsignedLongs$LexicographicalComparator: com.google.common.primitives.UnsignedLongs$LexicographicalComparator INSTANCE>;

        return r0;
    }

    public static transient long max(long[])
    {
        long[] $r0;
        byte $b0;
        int $i1, $i2;
        long $l3, $l4;
        boolean $z0;

        $r0 := @parameter0: long[];

        $i1 = lengthof $r0;

        $i2 = 1;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $l3 = $r0[0];

        $l3 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l3);

     label3:
        $i1 = lengthof $r0;

        if $i2 >= $i1 goto label5;

        $l4 = $r0[$i2];

        $l4 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l4);

        $b0 = $l4 cmp $l3;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label4;

        $l3 = $l4;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        $l3 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l3);

        return $l3;
    }

    public static transient long min(long[])
    {
        long[] $r0;
        byte $b0;
        int $i1, $i2;
        long $l3, $l4;
        boolean $z0;

        $r0 := @parameter0: long[];

        $i1 = lengthof $r0;

        $i2 = 1;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $l3 = $r0[0];

        $l3 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l3);

     label3:
        $i1 = lengthof $r0;

        if $i2 >= $i1 goto label5;

        $l4 = $r0[$i2];

        $l4 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l4);

        $b0 = $l4 cmp $l3;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label4;

        $l3 = $l4;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        $l3 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l3);

        return $l3;
    }

    public static long parseUnsignedLong(java.lang.String)
    {
        long $l0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <com.google.common.primitives.UnsignedLongs: long parseUnsignedLong(java.lang.String,int)>($r0, 10);

        return $l0;
    }

    public static long parseUnsignedLong(java.lang.String, int)
    {
        long $l2, $l6;
        char $c5;
        java.lang.NumberFormatException $r4;
        int[] $r1;
        int $i0, $i1, $i3, $i4, $i7;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == 0 goto label6;

        if $i0 < 2 goto label5;

        if $i0 > 36 goto label5;

        $r1 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: int[] maxSafeDigits>;

        $i1 = $r1[$i0];

        $i3 = -1;

        $i1 = $i1 + $i3;

        $l2 = 0L;

        $i3 = 0;

     label1:
        $i4 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label8;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c5, $i0);

        $i7 = -1;

        if $i4 == $i7 goto label4;

        if $i3 <= $i1 goto label3;

        $z0 = staticinvoke <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: boolean overflowInParse(long,int,int)>($l2, $i4, $i0);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r4 = new java.lang.NumberFormatException;

        $r3 = new java.lang.StringBuilder;

        $r2 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too large for unsigned long: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label3:
        $l6 = (long) $i0;

        $l2 = $l2 * $l6;

        $l6 = (long) $i4;

        $l2 = $l2 + $l6;

        $i3 = $i3 + 1;

        goto label1;

     label4:
        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label5:
        $r4 = new java.lang.NumberFormatException;

        $r3 = new java.lang.StringBuilder;

        $r2 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal radix: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label6:
        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>("empty string");

        goto label7;

     label7:
        throw $r4;

     label8:
        return $l2;
    }

    public static long remainder(long, long)
    {
        byte $b2;
        int $i3;
        long $l0, $l1, $l4;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        $i3 = staticinvoke <com.google.common.primitives.UnsignedLongs: int compare(long,long)>($l0, $l1);

        if $i3 >= 0 goto label1;

        return $l0;

     label1:
        $l0 = $l0 - $l1;

        return $l0;

     label2:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label3;

        $l0 = $l0 % $l1;

        return $l0;

     label3:
        $l4 = $l0 >>> 1;

        $l4 = $l4 / $l1;

        $l4 = $l4 << 1;

        $l4 = $l4 * $l1;

        $l0 = $l0 - $l4;

        $i3 = staticinvoke <com.google.common.primitives.UnsignedLongs: int compare(long,long)>($l0, $l1);

        if $i3 < 0 goto label4;

        goto label5;

     label4:
        $l1 = 0L;

     label5:
        $l0 = $l0 - $l1;

        return $l0;
    }

    public static void sort(long[])
    {
        int $i0;
        long[] $r0;

        $r0 := @parameter0: long[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = lengthof $r0;

        staticinvoke <com.google.common.primitives.UnsignedLongs: void sort(long[],int,int)>($r0, 0, $i0);

        return;
    }

    public static void sort(long[], int, int)
    {
        long[] $r0;
        int $i0, $i1, $i2;
        long $l3;

        $r0 := @parameter0: long[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i2 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i1, $i0, $i2);

        $i2 = $i1;

     label1:
        if $i2 >= $i0 goto label2;

        $l3 = $r0[$i2];

        $l3 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l3);

        $r0[$i2] = $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(long[],int,int)>($r0, $i1, $i0);

     label3:
        if $i1 >= $i0 goto label4;

        $l3 = $r0[$i1];

        $l3 = staticinvoke <com.google.common.primitives.UnsignedLongs: long flip(long)>($l3);

        $r0[$i1] = $l3;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    public static void sortDescending(long[])
    {
        int $i0;
        long[] $r0;

        $r0 := @parameter0: long[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = lengthof $r0;

        staticinvoke <com.google.common.primitives.UnsignedLongs: void sortDescending(long[],int,int)>($r0, 0, $i0);

        return;
    }

    public static void sortDescending(long[], int, int)
    {
        long[] $r0;
        int $i0, $i1, $i2;
        long $l3;

        $r0 := @parameter0: long[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i2 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i1, $i0, $i2);

        $i2 = $i1;

     label1:
        if $i2 >= $i0 goto label2;

        $l3 = $r0[$i2];

        $l3 = 9223372036854775807L ^ $l3;

        $r0[$i2] = $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(long[],int,int)>($r0, $i1, $i0);

     label3:
        if $i1 >= $i0 goto label4;

        $l3 = $r0[$i1];

        $l3 = $l3 ^ 9223372036854775807L;

        $r0[$i1] = $l3;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    public static java.lang.String toString(long)
    {
        long $l0;
        java.lang.String $r0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedLongs: java.lang.String toString(long,int)>($l0, 10);

        return $r0;
    }

    public static java.lang.String toString(long, int)
    {
        long $l1, $l2, $l9, $l10;
        char $c8;
        byte $b3;
        int $i0, $i4, $i5, $i6, $i7;
        char[] $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $l2 := @parameter0: long;

        $i0 := @parameter1: int;

        if $i0 < 2 goto label01;

        if $i0 > 36 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "radix (%s) must be between Character.MIN_RADIX and Character.MAX_RADIX", $i0);

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label03;

        return "0";

     label03:
        $b3 = $l2 cmp 0L;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label04;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l2, $i0);

        return $r0;

     label04:
        $r1 = newarray (char)[64];

        $i4 = lengthof $r1;

        $i5 = -1;

        $i5 = $i0 + $i5;

        $i6 = $i0 & $i5;

        if $i6 != 0 goto label06;

        $i6 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>($i0);

     label05:
        $i7 = -1;

        $i4 = $i4 + $i7;

        $i7 = (int) $l2;

        $i7 = $i7 & $i5;

        $c8 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i7, $i0);

        $r1[$i4] = $c8;

        $l2 = $l2 >>> $i6;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label05;

        goto label10;

     label06:
        $i5 = $i0 & 1;

        if $i5 != 0 goto label07;

        $l9 = $l2 >>> 1;

        $i5 = $i0 >>> 1;

        $l10 = (long) $i5;

        $l9 = $l9 / $l10;

        goto label08;

     label07:
        $l9 = (long) $i0;

        $l9 = staticinvoke <com.google.common.primitives.UnsignedLongs: long divide(long,long)>($l2, $l9);

     label08:
        $l10 = (long) $i0;

        $l1 = $l9 * $l10;

        $l2 = $l2 - $l1;

        $i5 = -1;

        $i4 = $i4 + $i5;

        $i5 = (int) $l2;

        $c8 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i5, $i0);

        $r1[$i4] = $c8;

     label09:
        $b3 = $l9 cmp 0L;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label10;

        $i5 = -1;

        $i4 = $i4 + $i5;

        $l2 = $l9 % $l10;

        $i5 = (int) $l2;

        $c8 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i5, $i0);

        $r1[$i4] = $c8;

        $l9 = $l9 / $l10;

        goto label09;

     label10:
        $r2 = new java.lang.String;

        $i0 = lengthof $r1;

        $i0 = $i0 - $i4;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i4, $i0);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.google.common.primitives.UnsignedLongs: long MAX_VALUE> = -1L;

        return;
    }
}
