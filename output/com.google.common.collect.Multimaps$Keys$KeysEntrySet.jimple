public class com.google.common.collect.Multimaps$Keys$KeysEntrySet extends com.google.common.collect.Multisets$EntrySet
{
    public final com.google.common.collect.Multimaps$Keys this$0;

    public void <init>(com.google.common.collect.Multimaps$Keys)
    {
        com.google.common.collect.Multimaps$Keys $r1;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        $r1 := @parameter0: com.google.common.collect.Multimaps$Keys;

        r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.Multisets$EntrySet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collection $r6;
        com.google.common.collect.Multimaps$Keys $r3;
        com.google.common.collect.Multiset$Entry $r2;
        com.google.common.collect.Multimap $r4;
        java.util.Map $r5;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.collect.Multiset$Entry) $r1;

        $r3 = r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0>;

        $r4 = $r3.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap>;

        $r5 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $r1 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.Collection) $r1;

        if $r6 == null goto label1;

        $i0 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Multimaps$Keys $r1;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;
        com.google.common.collect.Multimap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        $r1 = r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0>;

        $r2 = $r1.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap>;

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multimap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Multimaps$Keys $r2;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        $r2 = r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>();

        return $r1;
    }

    public com.google.common.collect.Multiset multiset()
    {
        com.google.common.collect.Multimaps$Keys r1;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        r1 = r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0>;

        return r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Collection $r6;
        com.google.common.collect.Multimaps$Keys $r3;
        com.google.common.collect.Multiset$Entry $r2;
        com.google.common.collect.Multimap $r4;
        java.util.Map $r5;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.collect.Multiset$Entry) $r1;

        $r3 = r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0>;

        $r4 = $r3.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap>;

        $r5 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $r1 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.Collection) $r1;

        if $r6 == null goto label1;

        $i0 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 != $i1 goto label1;

        interfaceinvoke $r6.<java.util.Collection: void clear()>();

        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.Multimaps$Keys $r1;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet r0;

        r0 := @this: com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        $r1 = r0.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: com.google.common.collect.Multimaps$Keys this$0>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.Multimaps$Keys: int distinctElements()>();

        return $i0;
    }
}
