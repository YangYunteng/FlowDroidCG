public final class android.support.v4.media.session.MediaControllerCompat extends java.lang.Object
{
    public static final java.lang.String COMMAND_ADD_QUEUE_ITEM;
    public static final java.lang.String COMMAND_ADD_QUEUE_ITEM_AT;
    public static final java.lang.String COMMAND_ARGUMENT_INDEX;
    public static final java.lang.String COMMAND_ARGUMENT_MEDIA_DESCRIPTION;
    public static final java.lang.String COMMAND_GET_EXTRA_BINDER;
    public static final java.lang.String COMMAND_REMOVE_QUEUE_ITEM;
    public static final java.lang.String COMMAND_REMOVE_QUEUE_ITEM_AT;
    public static final java.lang.String TAG;
    public final android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl;
    public final java.util.HashSet mRegisteredCallbacks;
    public final android.support.v4.media.session.MediaSessionCompat$Token mToken;

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        android.content.Context $r1;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;
        java.lang.IllegalArgumentException $r8;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 $r6;
        java.util.HashSet $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 $r5;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 $r4;
        int $i0;
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase $r7;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks> = $r3;

        if $r2 == null goto label4;

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r4 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24;

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r4;

        return;

     label1:
        if $i0 < 23 goto label2;

        $r5 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23;

        specialinvoke $r5.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r5;

        return;

     label2:
        if $i0 < 21 goto label3;

        $r6 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        specialinvoke $r6.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r6;

        return;

     label3:
        $r7 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase;

        specialinvoke $r7.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase: void <init>(android.support.v4.media.session.MediaSessionCompat$Token)>($r2);

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r7;

        return;

     label4:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sessionToken must not be null");

        throw $r8;
    }

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat)
    {
        android.content.Context $r2;
        android.os.RemoteException $r6;
        android.support.v4.media.session.MediaSessionCompat $r3;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        java.lang.IllegalArgumentException $r12;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 $r5, $r10;
        java.util.HashSet $r7;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 $r9;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 $r8;
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r4;
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase $r11;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.support.v4.media.session.MediaSessionCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks> = $r7;

        if $r3 == null goto label14;

        $r1 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r1;

        $r4 = null;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label03;

        $r8 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24;

        $r5 = $r8;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

     label01:
        specialinvoke $r8.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r2, $r1);

     label02:
        $r4 = $r5;

        goto label13;

     label03:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label06;

        $r9 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23;

        $r5 = $r9;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

     label04:
        specialinvoke $r9.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r2, $r1);

     label05:
        goto label02;

     label06:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label09;

        $r10 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r5 = $r10;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

     label07:
        specialinvoke $r10.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r2, $r1);

     label08:
        goto label02;

     label09:
        $r11 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

     label10:
        specialinvoke $r11.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase: void <init>(android.support.v4.media.session.MediaSessionCompat$Token)>($r1);

     label11:
        $r4 = $r11;

        goto label13;

     label12:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Failed to create MediaControllerImpl.", $r6);

     label13:
        r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r4;

        return;

     label14:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("session must not be null");

        goto label15;

     label15:
        throw $r12;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    public static android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity)
    {
        androidx.core.app.ComponentActivity $r1;
        android.os.RemoteException $r7;
        android.support.v4.media.session.MediaSessionCompat$Token $r6;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData $r3;
        androidx.core.app.ComponentActivity$a $r2;
        int $i0;
        java.lang.Object $r5;
        android.support.v4.media.session.MediaControllerCompat $r4;
        android.app.Activity $r0;
        boolean $z0;

        $r0 := @parameter0: android.app.Activity;

        $z0 = $r0 instanceof androidx.core.app.ComponentActivity;

        if $z0 == 0 goto label1;

        $r1 = (androidx.core.app.ComponentActivity) $r0;

        $r2 = virtualinvoke $r1.<androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$a getExtraData(java.lang.Class)>(class "Landroid/support/v4/media/session/MediaControllerCompat$MediaControllerExtraData;");

        $r3 = (android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData) $r2;

        if $r3 == null goto label6;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData: android.support.v4.media.session.MediaControllerCompat getMediaController()>();

        return $r4;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label6;

        $r5 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getMediaController(android.app.Activity)>($r0);

        if $r5 != null goto label2;

        return null;

     label2:
        $r5 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getSessionToken(java.lang.Object)>($r5);

        $r4 = new android.support.v4.media.session.MediaControllerCompat;

     label3:
        $r6 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)>($r5);

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r0, $r6);

     label4:
        return $r4;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in getMediaController.", $r7);

     label6:
        return null;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static void setMediaController(android.app.Activity, android.support.v4.media.session.MediaControllerCompat)
    {
        androidx.core.app.ComponentActivity $r2;
        android.support.v4.media.session.MediaSessionCompat$Token $r5;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData $r3;
        int $i0;
        java.lang.Object $r4;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.app.Activity $r0;
        boolean $z0;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: android.support.v4.media.session.MediaControllerCompat;

        $z0 = $r0 instanceof androidx.core.app.ComponentActivity;

        if $z0 == 0 goto label1;

        $r2 = (androidx.core.app.ComponentActivity) $r0;

        $r3 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData;

        specialinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData: void <init>(android.support.v4.media.session.MediaControllerCompat)>($r1);

        virtualinvoke $r2.<androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$a)>($r3);

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r4 = null;

        if $r1 == null goto label2;

        $r5 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        $r4 = virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()>();

        $r4 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object fromToken(android.content.Context,java.lang.Object)>($r0, $r4);

     label2:
        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void setMediaController(android.app.Activity,java.lang.Object)>($r0, $r4);

     label3:
        return;
    }

    public static void validateCustomAction(java.lang.String, android.os.Bundle)
    {
        android.os.Bundle $r1;
        byte $b0;
        int $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.os.Bundle;

        if $r0 != null goto label1;

        return;

     label1:
        $b0 = -1;

        $i1 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        if $i1 == -1348483723 goto label3;

        if $i1 == 503011406 goto label2;

        goto label4;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("android.support.v4.media.session.action.UNFOLLOW");

        if $z0 == 0 goto label4;

        $b0 = 1;

        goto label4;

     label3:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("android.support.v4.media.session.action.FOLLOW");

        if $z0 == 0 goto label4;

        $b0 = 0;

     label4:
        if $b0 == 0 goto label5;

        if $b0 == 1 goto label5;

        return;

     label5:
        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE");

        if $z0 == 0 goto label6;

        return;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An extra field android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE is required for this action ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.MediaDescriptionCompat $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void addQueueItem(android.support.v4.media.MediaDescriptionCompat)>($r1);

        return;
    }

    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat, int)
    {
        android.support.v4.media.MediaDescriptionCompat $r1;
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)>($r1, $i0);

        return;
    }

    public void adjustVolume(int, int)
    {
        int $i0, $i1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void adjustVolume(int,int)>($i0, $i1);

        return;
    }

    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.view.KeyEvent;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("KeyEvent may not be null");

        throw $r3;
    }

    public android.os.Bundle getExtras()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.os.Bundle getExtras()>();

        return $r1;
    }

    public long getFlags()
    {
        long $l0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: long getFlags()>();

        return $l0;
    }

    public java.lang.Object getMediaController()
    {
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.Object getMediaController()>();

        return $r1;
    }

    public android.support.v4.media.MediaMetadataCompat getMetadata()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.MediaMetadataCompat getMetadata()>();

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        java.lang.String $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.String getPackageName()>();

        return $r1;
    }

    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    {
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()>();

        return $r1;
    }

    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()>();

        return $r1;
    }

    public java.util.List getQueue()
    {
        java.util.List $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.util.List getQueue()>();

        return $r1;
    }

    public java.lang.CharSequence getQueueTitle()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.CharSequence getQueueTitle()>();

        return $r1;
    }

    public int getRatingType()
    {
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getRatingType()>();

        return $i0;
    }

    public int getRepeatMode()
    {
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getRepeatMode()>();

        return $i0;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>();

        return $r1;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return r1;
    }

    public android.os.Bundle getSessionToken2Bundle()
    {
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        $r1 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle getSessionToken2Bundle()>();

        return $r1;
    }

    public int getShuffleMode()
    {
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getShuffleMode()>();

        return $i0;
    }

    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    {
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        return $r1;
    }

    public boolean isCaptioningEnabled()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean isCaptioningEnabled()>();

        return $z0;
    }

    public boolean isSessionReady()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean isSessionReady()>();

        return $z0;
    }

    public void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>($r1, null);

        return;
    }

    public void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback, android.os.Handler)
    {
        java.util.HashSet $r4;
        android.support.v4.media.session.MediaControllerCompat$Callback $r2;
        android.os.Handler $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r3 := @parameter1: android.os.Handler;

        if $r2 == null goto label2;

        if $r3 != null goto label1;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

     label1:
        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$Callback: void setHandler(android.os.Handler)>($r3);

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>($r2, $r3);

        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks>;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        return;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r5;
    }

    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r2;
        android.support.v4.media.session.MediaControllerCompat r0;
        android.support.v4.media.MediaDescriptionCompat $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)>($r1);

        return;
    }

    public void removeQueueItemAt(int)
    {
        java.util.List $r1;
        android.support.v4.media.MediaDescriptionCompat $r4;
        int $i0, $i1;
        java.lang.Object $r2;
        android.support.v4.media.session.MediaSessionCompat$QueueItem $r3;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat: java.util.List getQueue()>();

        if $r1 == null goto label1;

        if $i0 < 0 goto label1;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r2;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()>();

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)>($r4);

     label1:
        return;
    }

    public void sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        android.os.Bundle $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r4;
        android.os.ResultReceiver $r1;
        java.lang.String $r2;
        android.support.v4.media.session.MediaControllerCompat r0;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: android.os.Bundle;

        $r1 := @parameter2: android.os.ResultReceiver;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>($r2, $r3, $r1);

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command must neither be null nor empty");

        throw $r5;
    }

    public void setVolumeTo(int, int)
    {
        int $i0, $i1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void setVolumeTo(int,int)>($i0, $i1);

        return;
    }

    public void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        java.util.HashSet $r2;
        java.lang.Throwable $r4;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r3;
        android.support.v4.media.session.MediaControllerCompat r0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat: java.util.HashSet mRegisteredCallbacks>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r1);

     label2:
        virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: void setHandler(android.os.Handler)>(null);

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: void setHandler(android.os.Handler)>(null);

        throw $r4;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.support.v4.media.session.MediaControllerCompat: java.lang.String TAG> = "MediaControllerCompat";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM_AT> = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM_AT";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM> = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_GET_EXTRA_BINDER> = "android.support.v4.media.session.command.GET_EXTRA_BINDER";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_MEDIA_DESCRIPTION> = "android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_INDEX> = "android.support.v4.media.session.command.ARGUMENT_INDEX";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM_AT> = "android.support.v4.media.session.command.ADD_QUEUE_ITEM_AT";

        <android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM> = "android.support.v4.media.session.command.ADD_QUEUE_ITEM";

        return;
    }
}
