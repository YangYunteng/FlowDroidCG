public final class com.google.common.collect.LinkedHashMultimap$ValueSet extends com.google.common.collect.Sets$ImprovedAbstractSet implements com.google.common.collect.LinkedHashMultimap$ValueSetLink
{
    public com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry;
    public com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable;
    public final java.lang.Object key;
    public com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry;
    public int modCount;
    public int size;
    public final com.google.common.collect.LinkedHashMultimap this$0;

    public void <init>(com.google.common.collect.LinkedHashMultimap, java.lang.Object, int)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r3;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        com.google.common.collect.LinkedHashMultimap $r2;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r2 := @parameter0: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap this$0> = $r2;

        specialinvoke r0.<com.google.common.collect.Sets$ImprovedAbstractSet: void <init>()>();

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size> = 0;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount> = 0;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: java.lang.Object key> = $r1;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry> = r0;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry> = r0;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int closedTableSize(int,double)>($i0, 1.0);

        $r3 = newarray (com.google.common.collect.LinkedHashMultimap$ValueEntry)[$i0];

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable> = $r3;

        return;
    }

    public static com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet $r0;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSet;

        r1 = $r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry>;

        return r1;
    }

    public static int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet)
    {
        int i0;
        com.google.common.collect.LinkedHashMultimap$ValueSet $r0;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSet;

        i0 = $r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount>;

        return i0;
    }

    private int mask()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r1;
        int $i0, $i1;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $i0 = lengthof $r1;

        $i1 = -1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    private void rehashIfNecessary()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r2;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1, $r4;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r3;
        int $i0, $i1;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size>;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $i1 = lengthof $r2;

        $z0 = staticinvoke <com.google.common.collect.Hashing: boolean needsResizing(int,int,double)>($i0, $i1, 1.0);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $i0 = lengthof $r2;

        $i0 = $i0 * 2;

        $r2 = newarray (com.google.common.collect.LinkedHashMultimap$ValueEntry)[$i0];

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable> = $r2;

        $i0 = lengthof $r2;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r3 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry>;

     label1:
        if $r3 == r0 goto label2;

        $r4 = (com.google.common.collect.LinkedHashMultimap$ValueEntry) $r3;

        $i1 = $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: int smearedValueHash>;

        $i1 = $i1 & $i0;

        $r1 = $r2[$i1];

        $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket> = $r1;

        $r2[$i1] = $r4;

        $r3 = interfaceinvoke $r3.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet()>();

        goto label1;

     label2:
        return;
    }

    public boolean add(java.lang.Object)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r2;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r3, $r4;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r6;
        int $i0, $i1;
        java.lang.Object $r1, $r5;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        com.google.common.collect.LinkedHashMultimap $r7;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $i1 = specialinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int mask()>();

        $i1 = $i1 & $i0;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $r3 = $r2[$i1];

        $r4 = $r3;

     label1:
        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: boolean matchesValue(java.lang.Object,int)>($r1, $i0);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r4 = $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket>;

        goto label1;

     label3:
        $r4 = new com.google.common.collect.LinkedHashMultimap$ValueEntry;

        $r5 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: java.lang.Object key>;

        specialinvoke $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r5, $r1, $i0, $r3);

        $r6 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry>;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r6, $r4);

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r4, r0);

        $r7 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap this$0>;

        $r3 = staticinvoke <com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap)>($r7);

        $r3 = virtualinvoke $r3.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap()>();

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r3, $r4);

        $r7 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap this$0>;

        $r3 = staticinvoke <com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap)>($r7);

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r4, $r3);

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $r2[$i1] = $r4;

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size> = $i0;

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount> = $i0;

        specialinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: void rehashIfNecessary()>();

        return 1;
    }

    public void clear()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r2;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r3;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r1;
        int $i0;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, null);

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size> = 0;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry>;

     label1:
        if $r1 == r0 goto label2;

        $r3 = (com.google.common.collect.LinkedHashMultimap$ValueEntry) $r1;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r3);

        $r1 = interfaceinvoke $r1.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet()>();

        goto label1;

     label2:
        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink)>(r0, r0);

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount> = $i0;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r2;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r3;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $i1 = specialinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int mask()>();

        $i1 = $i1 & $i0;

        $r3 = $r2[$i1];

     label1:
        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<com.google.common.collect.LinkedHashMultimap$ValueEntry: boolean matchesValue(java.lang.Object,int)>($r1, $i0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r3 = $r3.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket>;

        goto label1;

     label3:
        return 0;
    }

    public void forEach(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r3;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r2;
        java.lang.Object $r4;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 := @parameter0: java.util.function.Consumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry>;

     label1:
        if $r2 == r0 goto label2;

        $r3 = (com.google.common.collect.LinkedHashMultimap$ValueEntry) $r2;

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>();

        interfaceinvoke $r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

        $r2 = interfaceinvoke $r2.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet()>();

        goto label1;

     label2:
        return;
    }

    public com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet()
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry>;

        return r1;
    }

    public com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet()
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        r1 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry>;

        return r1;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet$1 $r1;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 = new com.google.common.collect.LinkedHashMultimap$ValueSet$1;

        specialinvoke $r1.<com.google.common.collect.LinkedHashMultimap$ValueSet$1: void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet)>(r0);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry[] $r3;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1, $r4, $r5;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r2 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r2);

        $i1 = specialinvoke r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int mask()>();

        $i1 = $i1 & $i0;

        $r3 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $r4 = $r3[$i1];

        $r5 = null;

     label1:
        $r1 = $r5;

        $r5 = $r4;

        if $r4 == null goto label5;

        $z0 = virtualinvoke $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: boolean matchesValue(java.lang.Object,int)>($r2, $i0);

        if $z0 == 0 goto label4;

        if $r1 != null goto label2;

        $r3 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable>;

        $r1 = $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket>;

        $r3[$i1] = $r1;

        goto label3;

     label2:
        $r4 = $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket>;

        $r1.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket> = $r4;

     label3:
        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r5);

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r5);

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size>;

        $i0 = $i0 - 1;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size> = $i0;

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int modCount> = $i0;

        return 1;

     label4:
        $r4 = $r4.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket>;

        goto label1;

     label5:
        return 0;
    }

    public void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry> = $r1;

        return;
    }

    public void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        $r1 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry> = $r1;

        return;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.LinkedHashMultimap$ValueSet r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$ValueSet;

        i0 = r0.<com.google.common.collect.LinkedHashMultimap$ValueSet: int size>;

        return i0;
    }
}
