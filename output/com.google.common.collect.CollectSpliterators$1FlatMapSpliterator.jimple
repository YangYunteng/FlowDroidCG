public class com.google.common.collect.CollectSpliterators$1FlatMapSpliterator extends java.lang.Object implements java.util.Spliterator
{
    public int characteristics;
    public long estimatedSize;
    public final java.util.Spliterator 'from';
    public java.util.Spliterator prefix;
    public final java.util.function.Function val$function;

    public void <init>(java.util.Spliterator, java.util.Spliterator, int, long, java.util.function.Function)
    {
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0;
        int $i0;
        long $l1;
        java.util.Spliterator $r1, $r2;
        java.util.function.Function $r3;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r1 := @parameter0: java.util.Spliterator;

        $r2 := @parameter1: java.util.Spliterator;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $r3 := @parameter4: java.util.function.Function;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.function.Function val$function> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix> = $r1;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator 'from'> = $r2;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: int characteristics> = $i0;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize> = $l1;

        return;
    }

    public static void a(java.util.function.Function, java.util.function.Consumer, java.lang.Object)
    {
        java.util.function.Consumer $r0;
        java.lang.Object $r1;
        java.util.function.Function $r2;
        java.util.Spliterator $r3;

        $r2 := @parameter0: java.util.function.Function;

        $r0 := @parameter1: java.util.function.Consumer;

        $r1 := @parameter2: java.lang.Object;

        $r1 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        $r3 = (java.util.Spliterator) $r1;

        interfaceinvoke $r3.<java.util.Spliterator: void forEachRemaining(java.util.function.Consumer)>($r0);

        return;
    }

    public void a(java.util.function.Function, java.lang.Object)
    {
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0;
        java.lang.Object $r1;
        java.util.function.Function $r2;
        java.util.Spliterator $r3;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r2 := @parameter0: java.util.function.Function;

        $r1 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        $r3 = (java.util.Spliterator) $r1;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix> = $r3;

        return;
    }

    public int characteristics()
    {
        int i0;
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        i0 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: int characteristics>;

        return i0;
    }

    public long estimateSize()
    {
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0;
        long $l0, $l1;
        java.util.Spliterator $r1;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix>;

        if $r1 == null goto label1;

        $l0 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize>;

        $l1 = interfaceinvoke $r1.<java.util.Spliterator: long estimateSize()>();

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize> = $l0;

     label1:
        $l0 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize>;

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>($l0, 0L);

        return $l0;
    }

    public void forEachRemaining(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        c.i.b.c.H $r3;
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0;
        java.util.function.Function $r2;
        java.util.Spliterator $r4;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r1 := @parameter0: java.util.function.Consumer;

        $r4 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix>;

        if $r4 == null goto label1;

        interfaceinvoke $r4.<java.util.Spliterator: void forEachRemaining(java.util.function.Consumer)>($r1);

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix> = null;

     label1:
        $r4 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator 'from'>;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.function.Function val$function>;

        $r3 = new c.i.b.c.H;

        specialinvoke $r3.<c.i.b.c.H: void <init>(java.util.function.Function,java.util.function.Consumer)>($r2, $r1);

        interfaceinvoke $r4.<java.util.Spliterator: void forEachRemaining(java.util.function.Consumer)>($r3);

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize> = 0L;

        return;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        long $l0;
        java.util.function.Function $r1;
        java.util.function.Consumer $r2;
        byte $b1;
        c.i.b.c.G $r4;
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0;
        java.util.Spliterator $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r2 := @parameter0: java.util.function.Consumer;

     label1:
        $r3 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix>;

        if $r3 == null goto label3;

        $z0 = interfaceinvoke $r3.<java.util.Spliterator: boolean tryAdvance(java.util.function.Consumer)>($r2);

        if $z0 == 0 goto label3;

        $l0 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize>;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 == 0 goto label2;

        $l0 = $l0 - 1L;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize> = $l0;

     label2:
        return 1;

     label3:
        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix> = null;

        $r3 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator 'from'>;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.function.Function val$function>;

        $r4 = new c.i.b.c.G;

        specialinvoke $r4.<c.i.b.c.G: void <init>(com.google.common.collect.CollectSpliterators$1FlatMapSpliterator,java.util.function.Function)>(r0, $r1);

        $z0 = interfaceinvoke $r3.<java.util.Spliterator: boolean tryAdvance(java.util.function.Consumer)>($r4);

        if $z0 != 0 goto label1;

        return 0;
    }

    public java.util.Spliterator trySplit()
    {
        long $l1, $l2;
        java.util.function.Function $r3;
        byte $b3;
        com.google.common.collect.CollectSpliterators$1FlatMapSpliterator r0, $r4;
        int $i0, $i4;
        java.util.Spliterator $r1, $r2;

        r0 := @this: com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator 'from'>;

        $r2 = interfaceinvoke $r1.<java.util.Spliterator: java.util.Spliterator trySplit()>();

        if $r2 == null goto label2;

        $i0 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: int characteristics>;

        $i4 = -65;

        $i0 = $i0 & $i4;

        $l1 = virtualinvoke r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimateSize()>();

        $l2 = $l1;

        $b3 = $l1 cmp 9223372036854775807L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label1;

        $l2 = $l1 / 2L;

        $l1 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize>;

        $l1 = $l1 - $l2;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: long estimatedSize> = $l1;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: int characteristics> = $i0;

     label1:
        $r4 = new com.google.common.collect.CollectSpliterators$1FlatMapSpliterator;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix>;

        $r3 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.function.Function val$function>;

        specialinvoke $r4.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: void <init>(java.util.Spliterator,java.util.Spliterator,int,long,java.util.function.Function)>($r1, $r2, $i0, $l2, $r3);

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix> = null;

        return $r4;

     label2:
        $r1 = r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix>;

        if $r1 == null goto label3;

        r0.<com.google.common.collect.CollectSpliterators$1FlatMapSpliterator: java.util.Spliterator prefix> = null;

        return $r1;

     label3:
        return null;
    }
}
