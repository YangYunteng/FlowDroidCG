public class com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    public final com.google.common.util.concurrent.AbstractScheduledService this$0;

    public void <init>(com.google.common.util.concurrent.AbstractScheduledService)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl r0;
        com.google.common.util.concurrent.AbstractScheduledService $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService;

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl: com.google.common.util.concurrent.AbstractScheduledService this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        com.google.common.util.concurrent.AbstractScheduledService $r2;
        java.lang.Thread $r4;
        com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl r0;
        java.lang.String $r3;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        $r3 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractScheduledService: java.lang.String serviceName()>();

        $r4 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.lang.Thread newThread(java.lang.String,java.lang.Runnable)>($r3, $r1);

        return $r4;
    }
}
