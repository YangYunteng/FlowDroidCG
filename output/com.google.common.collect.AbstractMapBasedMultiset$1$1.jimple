public class com.google.common.collect.AbstractMapBasedMultiset$1$1 extends com.google.common.collect.Multisets$AbstractEntry
{
    public final com.google.common.collect.AbstractMapBasedMultiset$1 this$1;
    public final java.util.Map$Entry val$mapEntry;

    public void <init>(com.google.common.collect.AbstractMapBasedMultiset$1, java.util.Map$Entry)
    {
        com.google.common.collect.AbstractMapBasedMultiset$1 $r1;
        java.util.Map$Entry $r2;
        com.google.common.collect.AbstractMapBasedMultiset$1$1 r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$1$1;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultiset$1;

        $r2 := @parameter1: java.util.Map$Entry;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$1$1: com.google.common.collect.AbstractMapBasedMultiset$1 this$1> = $r1;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$1$1: java.util.Map$Entry val$mapEntry> = $r2;

        specialinvoke r0.<com.google.common.collect.Multisets$AbstractEntry: void <init>()>();

        return;
    }

    public int getCount()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.AbstractMapBasedMultiset $r5;
        com.google.common.collect.AbstractMapBasedMultiset$1$1 r0;
        java.util.Map $r6;
        int $i0;
        com.google.common.collect.Count $r3, $r7;
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultiset$1 $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$1$1;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$1$1: java.util.Map$Entry val$mapEntry>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (com.google.common.collect.Count) $r2;

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<com.google.common.collect.Count: int get()>();

        if $i0 != 0 goto label2;

     label1:
        $r4 = r0.<com.google.common.collect.AbstractMapBasedMultiset$1$1: com.google.common.collect.AbstractMapBasedMultiset$1 this$1>;

        $r5 = $r4.<com.google.common.collect.AbstractMapBasedMultiset$1: com.google.common.collect.AbstractMapBasedMultiset this$0>;

        $r6 = staticinvoke <com.google.common.collect.AbstractMapBasedMultiset: java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset)>($r5);

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset$1$1: java.lang.Object getElement()>();

        $r2 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (com.google.common.collect.Count) $r2;

        if $r7 == null goto label2;

        $i0 = virtualinvoke $r7.<com.google.common.collect.Count: int get()>();

        return $i0;

     label2:
        if $r3 != null goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke $r3.<com.google.common.collect.Count: int get()>();

        return $i0;
    }

    public java.lang.Object getElement()
    {
        java.lang.Object $r1;
        java.util.Map$Entry $r2;
        com.google.common.collect.AbstractMapBasedMultiset$1$1 r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$1$1;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultiset$1$1: java.util.Map$Entry val$mapEntry>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r1;
    }
}
