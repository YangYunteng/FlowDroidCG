public class androidx.recyclerview.widget.RecyclerView extends android.view.ViewGroup implements b.i.i.s, b.i.i.i, b.i.i.j
{
    public static final boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC;
    public static final boolean ALLOW_THREAD_GAP_WORK;
    public static final boolean DEBUG;
    public static final int DEFAULT_ORIENTATION;
    public static final boolean DISPATCH_TEMP_DETACH;
    public static final boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION;
    public static final boolean FORCE_INVALIDATE_DISPLAY_LIST;
    public static final long FOREVER_NS;
    public static final int HORIZONTAL;
    public static final boolean IGNORE_DETACHED_FOCUSED_CHILD;
    public static final int INVALID_POINTER;
    public static final int INVALID_TYPE;
    public static final java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE;
    public static final int MAX_SCROLL_DURATION;
    public static final int[] NESTED_SCROLLING_ATTRS;
    public static final long NO_ID;
    public static final int NO_POSITION;
    public static final boolean POST_UPDATES_ON_ANIMATION;
    public static final int SCROLL_STATE_DRAGGING;
    public static final int SCROLL_STATE_IDLE;
    public static final int SCROLL_STATE_SETTLING;
    public static final java.lang.String TAG;
    public static final int TOUCH_SLOP_DEFAULT;
    public static final int TOUCH_SLOP_PAGING;
    public static final java.lang.String TRACE_BIND_VIEW_TAG;
    public static final java.lang.String TRACE_CREATE_VIEW_TAG;
    public static final java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG;
    public static final java.lang.String TRACE_NESTED_PREFETCH_TAG;
    public static final java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG;
    public static final java.lang.String TRACE_ON_LAYOUT_TAG;
    public static final java.lang.String TRACE_PREFETCH_TAG;
    public static final java.lang.String TRACE_SCROLL_TAG;
    public static final int UNDEFINED_DURATION;
    public static final boolean VERBOSE_TRACING;
    public static final int VERTICAL;
    public static final android.view.animation.Interpolator sQuinticInterpolator;
    public b.s.a.K mAccessibilityDelegate;
    public final android.view.accessibility.AccessibilityManager mAccessibilityManager;
    public androidx.recyclerview.widget.RecyclerView$a mAdapter;
    public b.s.a.a mAdapterHelper;
    public boolean mAdapterUpdateDuringMeasure;
    public android.widget.EdgeEffect mBottomGlow;
    public androidx.recyclerview.widget.RecyclerView$d mChildDrawingOrderCallback;
    public b.s.a.b mChildHelper;
    public boolean mClipToPadding;
    public boolean mDataSetHasChangedAfterLayout;
    public boolean mDispatchItemsChangedEvent;
    public int mDispatchScrollCounter;
    public int mEatenAccessibilityChangeFlags;
    public androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory;
    public boolean mEnableFastScroller;
    public boolean mFirstLayoutComplete;
    public b.s.a.p mGapWorker;
    public boolean mHasFixedSize;
    public boolean mIgnoreMotionEventTillDown;
    public int mInitialTouchX;
    public int mInitialTouchY;
    public int mInterceptRequestLayoutDepth;
    public androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener;
    public boolean mIsAttached;
    public androidx.recyclerview.widget.RecyclerView$f mItemAnimator;
    public androidx.recyclerview.widget.RecyclerView$f$b mItemAnimatorListener;
    public java.lang.Runnable mItemAnimatorRunner;
    public final java.util.ArrayList mItemDecorations;
    public boolean mItemsAddedOrRemoved;
    public boolean mItemsChanged;
    public int mLastTouchX;
    public int mLastTouchY;
    public androidx.recyclerview.widget.RecyclerView$i mLayout;
    public int mLayoutOrScrollCounter;
    public boolean mLayoutSuppressed;
    public boolean mLayoutWasDefered;
    public android.widget.EdgeEffect mLeftGlow;
    public final int mMaxFlingVelocity;
    public final int mMinFlingVelocity;
    public final int[] mMinMaxLayoutPositions;
    public final int[] mNestedOffsets;
    public final androidx.recyclerview.widget.RecyclerView$q mObserver;
    public java.util.List mOnChildAttachStateListeners;
    public androidx.recyclerview.widget.RecyclerView$k mOnFlingListener;
    public final java.util.ArrayList mOnItemTouchListeners;
    public final java.util.List mPendingAccessibilityImportanceChange;
    public androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState;
    public boolean mPostedAnimatorRunner;
    public b.s.a.p$a mPrefetchRegistry;
    public boolean mPreserveFocusAfterLayout;
    public final androidx.recyclerview.widget.RecyclerView$o mRecycler;
    public androidx.recyclerview.widget.RecyclerView$p mRecyclerListener;
    public final int[] mReusableIntPair;
    public android.widget.EdgeEffect mRightGlow;
    public float mScaledHorizontalScrollFactor;
    public float mScaledVerticalScrollFactor;
    public androidx.recyclerview.widget.RecyclerView$m mScrollListener;
    public java.util.List mScrollListeners;
    public final int[] mScrollOffset;
    public int mScrollPointerId;
    public int mScrollState;
    public b.i.i.l mScrollingChildHelper;
    public final androidx.recyclerview.widget.RecyclerView$s mState;
    public final android.graphics.Rect mTempRect;
    public final android.graphics.Rect mTempRect2;
    public final android.graphics.RectF mTempRectF;
    public android.widget.EdgeEffect mTopGlow;
    public int mTouchSlop;
    public final java.lang.Runnable mUpdateChildViewsRunnable;
    public android.view.VelocityTracker mVelocityTracker;
    public final androidx.recyclerview.widget.RecyclerView$u mViewFlinger;
    public final b.s.a.V$b mViewInfoProcessCallback;
    public final b.s.a.V mViewInfoStore;

    static void <clinit>()
    {
        int[] $r0;
        int $i0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        b.s.a.D $r3;
        boolean $z0;

        <androidx.recyclerview.widget.RecyclerView: int VERTICAL> = 1;

        <androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING> = 0;

        <androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION> = -2147483648;

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG> = "RV Scroll";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG> = "RV Prefetch";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG> = "RV OnLayout";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG> = "RV FullInvalidate";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG> = "RV Nested Prefetch";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG> = "RV PartialInvalidate";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG> = "RV CreateView";

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG> = "RV OnBindView";

        <androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING> = 1;

        <androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT> = 0;

        <androidx.recyclerview.widget.RecyclerView: java.lang.String TAG> = "RecyclerView";

        <androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING> = 2;

        <androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE> = 0;

        <androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING> = 1;

        <androidx.recyclerview.widget.RecyclerView: int NO_POSITION> = -1;

        <androidx.recyclerview.widget.RecyclerView: long NO_ID> = -1L;

        <androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION> = 2000;

        <androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE> = -1;

        <androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER> = -1;

        <androidx.recyclerview.widget.RecyclerView: int HORIZONTAL> = 0;

        <androidx.recyclerview.widget.RecyclerView: long FOREVER_NS> = 9223372036854775807L;

        <androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH> = 0;

        <androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION> = 1;

        <androidx.recyclerview.widget.RecyclerView: boolean DEBUG> = 0;

        <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC> = 0;

        $r0 = newarray (int)[1];

        $r0[0] = 16843830;

        <androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS> = $r0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 18 goto label02;

        if $i0 == 19 goto label02;

        if $i0 != 20 goto label01;

        goto label02;

     label01:
        $z0 = 0;

        goto label03;

     label02:
        $z0 = 1;

     label03:
        <androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        <androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 15 goto label10;

        $z0 = 1;

        goto label11;

     label10:
        $z0 = 0;

     label11:
        <androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 15 goto label12;

        $z0 = 1;

        goto label13;

     label12:
        $z0 = 0;

     label13:
        <androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD> = $z0;

        $r1 = newarray (java.lang.Class)[4];

        $r1[0] = class "Landroid/content/Context;";

        $r1[1] = class "Landroid/util/AttributeSet;";

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[2] = $r2;

        $r1[3] = $r2;

        <androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE> = $r1;

        $r3 = new b.s.a.D;

        specialinvoke $r3.<b.s.a.D: void <init>()>();

        <androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator> = $r3;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <b.s.a: int recyclerViewStyle>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.graphics.Rect $r21;
        androidx.recyclerview.widget.RecyclerView$q $r17;
        androidx.recyclerview.widget.RecyclerView$o $r18;
        androidx.recyclerview.widget.RecyclerView$u $r26;
        androidx.recyclerview.widget.RecyclerView$s $r28;
        android.graphics.drawable.Drawable $r13, $r15;
        b.s.a.V $r19;
        android.view.ViewConfiguration $r5;
        android.util.AttributeSet $r2;
        int[] $r4;
        android.graphics.drawable.StateListDrawable $r14, $r16;
        androidx.recyclerview.widget.RecyclerView$f $r6;
        androidx.recyclerview.widget.RecyclerView$e $r24;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$f$b $r7;
        b.s.a.k $r25;
        boolean $z0, $z1;
        androidx.recyclerview.widget.RecyclerView$g $r29;
        android.graphics.RectF $r22;
        float $f0;
        android.content.Context $r1, $r8;
        android.content.res.TypedArray $r11;
        java.util.ArrayList $r23;
        android.view.accessibility.AccessibilityManager $r10;
        int $i0, $i1, $i2;
        b.s.a.p$a $r3, $r27;
        java.lang.String $r12;
        b.s.a.B $r20;
        b.s.a.C $r30;
        java.lang.Object $r9;
        b.s.a.K $r32;
        b.s.a.E $r31;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r17 = new androidx.recyclerview.widget.RecyclerView$q;

        specialinvoke $r17.<androidx.recyclerview.widget.RecyclerView$q: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$q mObserver> = $r17;

        $r18 = new androidx.recyclerview.widget.RecyclerView$o;

        specialinvoke $r18.<androidx.recyclerview.widget.RecyclerView$o: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler> = $r18;

        $r19 = new b.s.a.V;

        specialinvoke $r19.<b.s.a.V: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore> = $r19;

        $r20 = new b.s.a.B;

        specialinvoke $r20.<b.s.a.B: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable> = $r20;

        $r21 = new android.graphics.Rect;

        specialinvoke $r21.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect> = $r21;

        $r21 = new android.graphics.Rect;

        specialinvoke $r21.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2> = $r21;

        $r22 = new android.graphics.RectF;

        specialinvoke $r22.<android.graphics.RectF: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF> = $r22;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations> = $r23;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners> = $r23;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter> = 0;

        $r24 = new androidx.recyclerview.widget.RecyclerView$e;

        specialinvoke $r24.<androidx.recyclerview.widget.RecyclerView$e: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory> = $r24;

        $r25 = new b.s.a.k;

        specialinvoke $r25.<b.s.a.k: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator> = $r25;

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState> = 0;

        $i1 = -1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor> = 1.4E-45F;

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor> = 1.4E-45F;

        $z0 = 1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = 1;

        $r26 = new androidx.recyclerview.widget.RecyclerView$u;

        specialinvoke $r26.<androidx.recyclerview.widget.RecyclerView$u: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$u mViewFlinger> = $r26;

        $z1 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z1 == 0 goto label01;

        $r27 = new b.s.a.p$a;

        $r3 = $r27;

        specialinvoke $r27.<b.s.a.p$a: void <init>()>();

        goto label02;

     label01:
        $r3 = null;

     label02:
        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p$a mPrefetchRegistry> = $r3;

        $r28 = new androidx.recyclerview.widget.RecyclerView$s;

        specialinvoke $r28.<androidx.recyclerview.widget.RecyclerView$s: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState> = $r28;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged> = 0;

        $r29 = new androidx.recyclerview.widget.RecyclerView$g;

        specialinvoke $r29.<androidx.recyclerview.widget.RecyclerView$g: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f$b mItemAnimatorListener> = $r29;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $r4 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions> = $r4;

        $r4 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset> = $r4;

        $r4 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets> = $r4;

        $r4 = newarray (int)[2];

        r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair> = $r4;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange> = $r23;

        $r30 = new b.s.a.C;

        specialinvoke $r30.<b.s.a.C: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner> = $r30;

        $r31 = new b.s.a.E;

        specialinvoke $r31.<b.s.a.E: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V$b mViewInfoProcessCallback> = $r31;

        virtualinvoke r0.<android.view.ViewGroup: void setScrollContainer(boolean)>(1);

        virtualinvoke r0.<android.view.ViewGroup: void setFocusableInTouchMode(boolean)>(1);

        $r5 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i1 = virtualinvoke $r5.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop> = $i1;

        $f0 = staticinvoke <b.i.i.z: float b(android.view.ViewConfiguration,android.content.Context)>($r5, $r1);

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor> = $f0;

        $f0 = staticinvoke <b.i.i.z: float c(android.view.ViewConfiguration,android.content.Context)>($r5, $r1);

        r0.<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor> = $f0;

        $i1 = virtualinvoke $r5.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity> = $i1;

        $i1 = virtualinvoke $r5.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity> = $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getOverScrollMode()>();

        if $i1 != 2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        virtualinvoke r0.<android.view.ViewGroup: void setWillNotDraw(boolean)>($z1);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f$b mItemAnimatorListener>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$f: void a(androidx.recyclerview.widget.RecyclerView$f$b)>($r7);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initAdapterManager()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initAutofill()>();

        $i1 = staticinvoke <b.i.i.y: int n(android.view.View)>(r0);

        if $i1 != 0 goto label05;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>(r0, 1);

     label05:
        $r8 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r10 = (android.view.accessibility.AccessibilityManager) $r9;

        r0.<androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r10;

        $r32 = new b.s.a.K;

        specialinvoke $r32.<b.s.a.K: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(b.s.a.K)>($r32);

        $r4 = <b.s.c: int[] RecyclerView>;

        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, 0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label06;

        $r4 = <b.s.c: int[] RecyclerView>;

        virtualinvoke r0.<android.view.ViewGroup: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>($r1, $r4, $r2, $r11, $i0, 0);

     label06:
        $i1 = <b.s.c: int RecyclerView_layoutManager>;

        $r12 = virtualinvoke $r11.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        $i1 = <b.s.c: int RecyclerView_android_descendantFocusability>;

        $i2 = -1;

        $i1 = virtualinvoke $r11.<android.content.res.TypedArray: int getInt(int,int)>($i1, $i2);

        $i2 = -1;

        if $i1 != $i2 goto label07;

        virtualinvoke r0.<android.view.ViewGroup: void setDescendantFocusability(int)>(262144);

     label07:
        $i1 = <b.s.c: int RecyclerView_android_clipToPadding>;

        $z1 = virtualinvoke $r11.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 1);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding> = $z1;

        $i1 = <b.s.c: int RecyclerView_fastScrollEnabled>;

        $z1 = virtualinvoke $r11.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller> = $z1;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller>;

        if $z1 == 0 goto label08;

        $i1 = <b.s.c: int RecyclerView_fastScrollVerticalThumbDrawable>;

        $r13 = virtualinvoke $r11.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        $r14 = (android.graphics.drawable.StateListDrawable) $r13;

        $i1 = <b.s.c: int RecyclerView_fastScrollVerticalTrackDrawable>;

        $r13 = virtualinvoke $r11.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        $i1 = <b.s.c: int RecyclerView_fastScrollHorizontalThumbDrawable>;

        $r15 = virtualinvoke $r11.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        $r16 = (android.graphics.drawable.StateListDrawable) $r15;

        $i1 = <b.s.c: int RecyclerView_fastScrollHorizontalTrackDrawable>;

        $r15 = virtualinvoke $r11.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)>($r14, $r13, $r16, $r15);

     label08:
        virtualinvoke $r11.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)>($r1, $r12, $r2, $i0, 0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label10;

        $r4 = <androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>;

        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, 0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label09;

        $r4 = <androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>;

        virtualinvoke r0.<android.view.ViewGroup: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>($r1, $r4, $r2, $r11, $i0, 0);

     label09:
        $z0 = virtualinvoke $r11.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        virtualinvoke $r11.<android.content.res.TypedArray: void recycle()>();

     label10:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>($z0);

        return;
    }

    public static void access$000(androidx.recyclerview.widget.RecyclerView, android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r0;

        $r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.view.ViewGroup$LayoutParams;

        virtualinvoke $r0.<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }

    public static void access$100(androidx.recyclerview.widget.RecyclerView, int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r0;

        $r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.view.ViewGroup: void detachViewFromParent(int)>($i0);

        return;
    }

    public static boolean access$200(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean awakenScrollBars()>();

        return $z0;
    }

    public static void access$300(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r0;

        $r0 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    private void addAnimatingView(androidx.recyclerview.widget.RecyclerView$v)
    {
        android.view.ViewParent $r3;
        b.s.a.b $r6;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        androidx.recyclerview.widget.RecyclerView$v $r2, $r5;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r1 = $r2.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolder(android.view.View)>($r1);

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void e(androidx.recyclerview.widget.RecyclerView$v)>($r5);

        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean isTmpDetached()>();

        if $z1 == 0 goto label3;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r7 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = -1;

        virtualinvoke $r6.<b.s.a.b: void a(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r7, 1);

        return;

     label3:
        if $z0 != 0 goto label4;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        virtualinvoke $r6.<b.s.a.b: void a(android.view.View,boolean)>($r1, 1);

        return;

     label4:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        virtualinvoke $r6.<b.s.a.b: void a(android.view.View)>($r1);

        return;
    }

    private void animateChange(androidx.recyclerview.widget.RecyclerView$v, androidx.recyclerview.widget.RecyclerView$v, androidx.recyclerview.widget.RecyclerView$f$c, androidx.recyclerview.widget.RecyclerView$f$c, boolean, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$o $r5;
        androidx.recyclerview.widget.RecyclerView$v $r1, $r4;
        androidx.recyclerview.widget.RecyclerView$f$c $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$f $r6;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r4 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$v;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$f$c;

        $r3 := @parameter3: androidx.recyclerview.widget.RecyclerView$f$c;

        $z1 := @parameter4: boolean;

        $z0 := @parameter5: boolean;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: void setIsRecyclable(boolean)>(0);

        if $z1 == 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$v)>($r4);

     label1:
        if $r4 == $r1 goto label3;

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$v)>($r1);

     label2:
        $r4.<androidx.recyclerview.widget.RecyclerView$v: androidx.recyclerview.widget.RecyclerView$v mShadowedHolder> = $r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$o: void e(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: void setIsRecyclable(boolean)>(0);

        $r1.<androidx.recyclerview.widget.RecyclerView$v: androidx.recyclerview.widget.RecyclerView$v mShadowingHolder> = $r4;

     label3:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $z1 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$f: boolean a(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c,androidx.recyclerview.widget.RecyclerView$f$c)>($r4, $r1, $r2, $r3);

        if $z1 == 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label4:
        return;
    }

    private void cancelScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

        return;
    }

    public static void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$v)
    {
        android.view.ViewParent $r5;
        androidx.recyclerview.widget.RecyclerView$v $r0;
        android.view.View $r3, $r4;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;
        boolean $z0;

        $r0 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r1 = $r0.<androidx.recyclerview.widget.RecyclerView$v: java.lang.ref.WeakReference mNestedRecyclerView>;

        if $r1 == null goto label5;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r2;

     label1:
        if $r3 == null goto label4;

        $r4 = $r0.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        if $r3 != $r4 goto label2;

        return;

     label2:
        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r5 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $r3 = (android.view.View) $r5;

        goto label1;

     label3:
        $r3 = null;

        goto label1;

     label4:
        $r0.<androidx.recyclerview.widget.RecyclerView$v: java.lang.ref.WeakReference mNestedRecyclerView> = null;

     label5:
        return;
    }

    private void createLayoutManager(android.content.Context, java.lang.String, android.util.AttributeSet, int, int)
    {
        android.content.Context $r1;
        java.lang.IllegalStateException $r15;
        java.lang.Object[] $r6, $r9;
        java.lang.NoSuchMethodException $r11, $r14;
        java.lang.reflect.Constructor $r8;
        java.lang.Integer $r10;
        java.lang.ClassCastException $r18;
        android.util.AttributeSet $r3;
        int $i0, $i1;
        java.lang.InstantiationException $r20;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r2, $r17;
        androidx.recyclerview.widget.RecyclerView$i $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r19;
        java.lang.Class[] $r7;
        java.lang.reflect.InvocationTargetException $r21;
        java.lang.Class $r4;
        java.lang.Object $r12;
        java.lang.StringBuilder $r16;
        java.lang.ClassNotFoundException $r22;
        java.lang.ClassLoader $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.util.AttributeSet;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        if $r2 == null goto label30;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label30;

        $r2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)>($r1, $r2);

     label01:
        $z0 = virtualinvoke r0.<android.view.ViewGroup: boolean isInEditMode()>();

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        goto label06;

     label05:
        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label06:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r2, 0, $r5);

        $r4 = virtualinvoke $r4.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroidx/recyclerview/widget/RecyclerView$i;");

     label07:
        $r6 = null;

        $r7 = <androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE>;

     label08:
        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

     label09:
        $r9 = newarray (java.lang.Object)[4];

        $r9[0] = $r1;

        $r9[1] = $r3;

     label10:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label11:
        $r9[2] = $r10;

     label12:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label13:
        $r9[3] = $r10;

        $r6 = $r9;

        goto label16;

     label14:
        $r11 := @caughtexception;

        $r7 = newarray (java.lang.Class)[0];

     label15:
        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

     label16:
        virtualinvoke $r8.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r12 = virtualinvoke $r8.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label17:
        $r13 = (androidx.recyclerview.widget.RecyclerView$i) $r12;

     label18:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$i)>($r13);

     label19:
        return;

     label20:
        $r14 := @caughtexception;

     label21:
        virtualinvoke $r14.<java.lang.NoSuchMethodException: java.lang.Throwable initCause(java.lang.Throwable)>($r11);

     label22:
        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error creating LayoutManager ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r14);

     label24:
        throw $r15;

     label25:
        $r18 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a LayoutManager ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r18);

        throw $r15;

     label26:
        $r19 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Cannot access non-public constructor ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r19);

        throw $r15;

     label27:
        $r20 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r20);

        throw $r15;

     label28:
        $r21 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r21);

        throw $r15;

     label29:
        $r22 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unable to find LayoutManager ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r22);

        throw $r15;

     label30:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label29;
        catch java.lang.ClassNotFoundException from label03 to label04 with label29;
        catch java.lang.ClassNotFoundException from label05 to label06 with label29;
        catch java.lang.ClassNotFoundException from label06 to label07 with label29;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label28;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label28;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label28;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label28;
        catch java.lang.InstantiationException from label01 to label02 with label27;
        catch java.lang.InstantiationException from label03 to label04 with label27;
        catch java.lang.InstantiationException from label05 to label06 with label27;
        catch java.lang.InstantiationException from label06 to label07 with label27;
        catch java.lang.IllegalAccessException from label01 to label02 with label26;
        catch java.lang.IllegalAccessException from label03 to label04 with label26;
        catch java.lang.IllegalAccessException from label05 to label06 with label26;
        catch java.lang.IllegalAccessException from label06 to label07 with label26;
        catch java.lang.ClassCastException from label01 to label02 with label25;
        catch java.lang.ClassCastException from label03 to label04 with label25;
        catch java.lang.ClassCastException from label05 to label06 with label25;
        catch java.lang.ClassCastException from label06 to label07 with label25;
        catch java.lang.NoSuchMethodException from label08 to label09 with label14;
        catch java.lang.NoSuchMethodException from label10 to label11 with label14;
        catch java.lang.NoSuchMethodException from label12 to label13 with label14;
        catch java.lang.ClassNotFoundException from label08 to label09 with label29;
        catch java.lang.ClassNotFoundException from label10 to label11 with label29;
        catch java.lang.ClassNotFoundException from label12 to label13 with label29;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label28;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label28;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label28;
        catch java.lang.InstantiationException from label08 to label09 with label27;
        catch java.lang.InstantiationException from label10 to label11 with label27;
        catch java.lang.InstantiationException from label12 to label13 with label27;
        catch java.lang.IllegalAccessException from label08 to label09 with label26;
        catch java.lang.IllegalAccessException from label10 to label11 with label26;
        catch java.lang.IllegalAccessException from label12 to label13 with label26;
        catch java.lang.ClassCastException from label08 to label09 with label25;
        catch java.lang.ClassCastException from label10 to label11 with label25;
        catch java.lang.ClassCastException from label12 to label13 with label25;
        catch java.lang.NoSuchMethodException from label15 to label16 with label20;
        catch java.lang.ClassNotFoundException from label15 to label16 with label29;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label28;
        catch java.lang.InstantiationException from label15 to label16 with label27;
        catch java.lang.IllegalAccessException from label15 to label16 with label26;
        catch java.lang.ClassCastException from label15 to label16 with label25;
        catch java.lang.ClassNotFoundException from label16 to label17 with label29;
        catch java.lang.ClassNotFoundException from label18 to label19 with label29;
        catch java.lang.ClassNotFoundException from label21 to label22 with label29;
        catch java.lang.ClassNotFoundException from label23 to label24 with label29;
        catch java.lang.reflect.InvocationTargetException from label16 to label17 with label28;
        catch java.lang.reflect.InvocationTargetException from label18 to label19 with label28;
        catch java.lang.reflect.InvocationTargetException from label21 to label22 with label28;
        catch java.lang.reflect.InvocationTargetException from label23 to label24 with label28;
        catch java.lang.InstantiationException from label16 to label17 with label27;
        catch java.lang.InstantiationException from label18 to label19 with label27;
        catch java.lang.InstantiationException from label21 to label22 with label27;
        catch java.lang.InstantiationException from label23 to label24 with label27;
        catch java.lang.IllegalAccessException from label16 to label17 with label26;
        catch java.lang.IllegalAccessException from label18 to label19 with label26;
        catch java.lang.IllegalAccessException from label21 to label22 with label26;
        catch java.lang.IllegalAccessException from label23 to label24 with label26;
        catch java.lang.ClassCastException from label16 to label19 with label25;
        catch java.lang.ClassCastException from label21 to label22 with label25;
        catch java.lang.ClassCastException from label23 to label24 with label25;
    }

    private boolean didChildRangeChange(int, int)
    {
        int[] $r1;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r1);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i1 = $r1[0];

        if $i1 != $i2 goto label1;

        $i2 = $r1[1];

        if $i2 == $i0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void dispatchContentChangedIfNecessary()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = 0;

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(2048);

        staticinvoke <b.i.i.a.a: void a(android.view.accessibility.AccessibilityEvent,int)>($r1, $i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>($r1);

     label1:
        return;
    }

    private void dispatchLayoutStep1()
    {
        b.s.a.b $r5;
        androidx.recyclerview.widget.RecyclerView$o $r12;
        androidx.recyclerview.widget.RecyclerView$v $r7;
        long $l3;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        b.s.a.V $r2;
        androidx.recyclerview.widget.RecyclerView$a $r3;
        int[] $r4;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$f $r8;
        androidx.recyclerview.widget.RecyclerView$f$c $r10;
        android.view.View $r6;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r11;
        boolean $z0, $z1;
        java.util.List $r9;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = 1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$s: void a(int)>(1);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$s)>($r1);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean j> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r2.<b.s.a.V: void a()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z1 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean k>;

        if $z1 == 0 goto label01;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged>;

        if $z1 == 0 goto label01;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean i> = $z0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean l>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean h> = $z0;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int f> = $i0;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r4);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean k>;

        if $z0 == 0 goto label06;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r5.<b.s.a.b: int a()>();

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label06;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r6 = virtualinvoke $r5.<b.s.a.b: android.view.View c(int)>($i1);

        $r7 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r6);

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean isInvalid()>();

        if $z0 == 0 goto label04;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 != 0 goto label04;

        goto label05;

     label04:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i2 = staticinvoke <androidx.recyclerview.widget.RecyclerView$f: int a(androidx.recyclerview.widget.RecyclerView$v)>($r7);

        $r9 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: java.util.List getUnmodifiedPayloads()>();

        $r10 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$f: androidx.recyclerview.widget.RecyclerView$f$c a(androidx.recyclerview.widget.RecyclerView$s,androidx.recyclerview.widget.RecyclerView$v,int,java.util.List)>($r1, $r7, $i2, $r9);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r2.<b.s.a.V: void c(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r7, $r10);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean i>;

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean isUpdated()>();

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean isInvalid()>();

        if $z0 != 0 goto label05;

        $l3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$v)>($r7);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r2.<b.s.a.V: void a(long,androidx.recyclerview.widget.RecyclerView$v)>($l3, $r7);

     label05:
        $i1 = $i1 + 1;

        goto label03;

     label06:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean l>;

        if $z0 == 0 goto label13;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void saveOldPositions()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean g>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 0;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$i: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r12, $r1);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = $z0;

        $i0 = 0;

     label07:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i1 = virtualinvoke $r5.<b.s.a.b: int a()>();

        if $i0 >= $i1 goto label12;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r6 = virtualinvoke $r5.<b.s.a.b: android.view.View c(int)>($i0);

        $r7 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r6);

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label08;

        goto label11;

     label08:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $z0 = virtualinvoke $r2.<b.s.a.V: boolean c(androidx.recyclerview.widget.RecyclerView$v)>($r7);

        if $z0 != 0 goto label11;

        $i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$f: int a(androidx.recyclerview.widget.RecyclerView$v)>($r7);

        $i2 = $i1;

        $z0 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: boolean hasAnyOfTheFlags(int)>(8192);

        if $z0 != 0 goto label09;

        $i2 = $i1 | 4096;

     label09:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r9 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$v: java.util.List getUnmodifiedPayloads()>();

        $r10 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$f: androidx.recyclerview.widget.RecyclerView$f$c a(androidx.recyclerview.widget.RecyclerView$s,androidx.recyclerview.widget.RecyclerView$v,int,java.util.List)>($r1, $r7, $i2, $r9);

        if $z0 == 0 goto label10;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r7, $r10);

        goto label11;

     label10:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r2.<b.s.a.V: void a(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r7, $r10);

     label11:
        $i0 = $i0 + 1;

        goto label07;

     label12:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void clearOldPositions()>();

        goto label14;

     label13:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void clearOldPositions()>();

     label14:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int e> = 2;

        return;
    }

    private void dispatchLayoutStep2()
    {
        b.s.a.a $r3;
        androidx.recyclerview.widget.RecyclerView$o $r1;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$a $r4;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$f $r6;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$s: void a(int)>(6);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r3.<b.s.a.a: void b()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        $r2.<androidx.recyclerview.widget.RecyclerView$s: int f> = $i0;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: int d> = 0;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean h> = 0;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$i: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r1, $r2);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState> = null;

        $z0 = $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean k>;

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r6 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean k> = $z0;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: int e> = 4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        return;
    }

    private void dispatchLayoutStep3()
    {
        b.s.a.V$b $r10;
        b.s.a.b $r2;
        androidx.recyclerview.widget.RecyclerView$o $r12;
        androidx.recyclerview.widget.RecyclerView$v $r4, $r8;
        long $l1;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        b.s.a.V $r7;
        java.util.ArrayList $r13;
        int[] $r14;
        int $i0, $i2;
        androidx.recyclerview.widget.RecyclerView$f $r5;
        androidx.recyclerview.widget.RecyclerView$f$c $r6, $r9;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r11;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$s: void a(int)>(4);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int e> = 1;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean k>;

        if $z0 == 0 goto label08;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r2.<b.s.a.b: int a()>();

        $i0 = $i0 - 1;

     label01:
        if $i0 < 0 goto label07;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = virtualinvoke $r2.<b.s.a.b: android.view.View c(int)>($i0);

        $r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r3);

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label02;

        goto label06;

     label02:
        $l1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r6 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$f: androidx.recyclerview.widget.RecyclerView$f$c a(androidx.recyclerview.widget.RecyclerView$s,androidx.recyclerview.widget.RecyclerView$v)>($r1, $r4);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $r8 = virtualinvoke $r7.<b.s.a.V: androidx.recyclerview.widget.RecyclerView$v a(long)>($l1);

        if $r8 == null goto label05;

        $z0 = virtualinvoke $r8.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label05;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $z0 = virtualinvoke $r7.<b.s.a.V: boolean b(androidx.recyclerview.widget.RecyclerView$v)>($r8);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $z1 = virtualinvoke $r7.<b.s.a.V: boolean b(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        if $z0 == 0 goto label03;

        if $r8 != $r4 goto label03;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r7.<b.s.a.V: void b(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r4, $r6);

        goto label06;

     label03:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $r9 = virtualinvoke $r7.<b.s.a.V: androidx.recyclerview.widget.RecyclerView$f$c f(androidx.recyclerview.widget.RecyclerView$v)>($r8);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r7.<b.s.a.V: void b(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r4, $r6);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $r6 = virtualinvoke $r7.<b.s.a.V: androidx.recyclerview.widget.RecyclerView$f$c e(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        if $r9 != null goto label04;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$v)>($l1, $r4, $r8);

        goto label06;

     label04:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c,androidx.recyclerview.widget.RecyclerView$f$c,boolean,boolean)>($r8, $r4, $r9, $r6, $z0, $z1);

        goto label06;

     label05:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r7.<b.s.a.V: void b(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r4, $r6);

     label06:
        $i2 = -1;

        $i0 = $i0 + $i2;

        goto label01;

     label07:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V$b mViewInfoProcessCallback>;

        virtualinvoke $r7.<b.s.a.V: void a(b.s.a.V$b)>($r10);

     label08:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$i: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$o)>($r12);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: int f>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int c> = $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent> = 0;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean k> = 0;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: boolean l> = 0;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r11.<androidx.recyclerview.widget.RecyclerView$i: boolean mRequestedSimpleAnimations> = 0;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r13 = $r12.<androidx.recyclerview.widget.RecyclerView$o: java.util.ArrayList b>;

        if $r13 == null goto label09;

        virtualinvoke $r13.<java.util.ArrayList: void clear()>();

     label09:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = $r11.<androidx.recyclerview.widget.RecyclerView$i: boolean mPrefetchMaxObservedInInitialPrefetch>;

        if $z0 == 0 goto label10;

        $r11.<androidx.recyclerview.widget.RecyclerView$i: int mPrefetchMaxCountObserved> = 0;

        $r11.<androidx.recyclerview.widget.RecyclerView$i: boolean mPrefetchMaxObservedInInitialPrefetch> = 0;

        $r12 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r12.<androidx.recyclerview.widget.RecyclerView$o: void j()>();

     label10:
        $r11 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$i: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$s)>($r1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r7.<b.s.a.V: void a()>();

        $r14 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i0 = $r14[0];

        $i2 = $r14[1];

        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)>($i0, $i2);

        if $z0 == 0 goto label11;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)>(0, 0);

     label11:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()>();

        return;
    }

    private boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView$l $r2;
        android.view.MotionEvent $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener>;

        if $r2 != null goto label2;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)>($r1);

        return $z0;

     label2:
        interfaceinvoke $r2.<androidx.recyclerview.widget.RecyclerView$l: void a(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>(r0, $r1);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 == 3 goto label3;

        if $i0 != 1 goto label4;

     label3:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener> = null;

     label4:
        return 1;
    }

    private boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
    {
        androidx.recyclerview.widget.RecyclerView$l $r4;
        java.util.ArrayList $r2;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (androidx.recyclerview.widget.RecyclerView$l) $r3;

        $z0 = interfaceinvoke $r4.<androidx.recyclerview.widget.RecyclerView$l: boolean b(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>(r0, $r1);

        if $z0 == 0 goto label2;

        if $i0 == 3 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener> = $r4;

        return 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void findMinMaxChildLayoutPositions(int[])
    {
        b.s.a.b $r2;
        androidx.recyclerview.widget.RecyclerView$v $r4;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: int[];

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r2.<b.s.a.b: int a()>();

        if $i0 != 0 goto label1;

        $i0 = -1;

        $r1[0] = $i0;

        $i0 = -1;

        $r1[1] = $i0;

        return;

     label1:
        $i1 = 0;

        $i2 = 2147483647;

        $i3 = -2147483648;

     label2:
        if $i1 >= $i0 goto label6;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = virtualinvoke $r2.<b.s.a.b: android.view.View c(int)>($i1);

        $r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r3);

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

        goto label5;

     label3:
        $i4 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: int getLayoutPosition()>();

        if $i4 >= $i2 goto label4;

        $i2 = $i4;

     label4:
        if $i4 <= $i3 goto label5;

        $i3 = $i4;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        $r1[0] = $i2;

        $r1[1] = $i3;

        return;
    }

    public static androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
    {
        int $i0, $i1;
        android.view.View $r0;
        androidx.recyclerview.widget.RecyclerView $r1;
        android.view.ViewGroup $r2;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = $r0 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z0 = $r0 instanceof androidx.recyclerview.widget.RecyclerView;

        if $z0 == 0 goto label2;

        $r1 = (androidx.recyclerview.widget.RecyclerView) $r0;

        return $r1;

     label2:
        $r2 = (android.view.ViewGroup) $r0;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r0 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)>($r0);

        if $r1 == null goto label4;

        return $r1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return null;
    }

    private android.view.View findNextViewToFocus()
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        int $i0, $i1, $i2;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = $r1.<androidx.recyclerview.widget.RecyclerView$s: int m>;

        $i1 = -1;

        if $i0 == $i1 goto label01;

        goto label02;

     label01:
        $i0 = 0;

     label02:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i1 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$s: int a()>();

        $i2 = $i0;

     label03:
        if $i2 >= $i1 goto label06;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v findViewHolderForAdapterPosition(int)>($i2);

        if $r2 != null goto label04;

        goto label06;

     label04:
        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label05;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        return $r3;

     label05:
        $i2 = $i2 + 1;

        goto label03;

     label06:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $i1 = -1;

        $i0 = $i0 + $i1;

     label07:
        if $i0 < 0 goto label10;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v findViewHolderForAdapterPosition(int)>($i0);

        if $r2 != null goto label08;

        return null;

     label08:
        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label09;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        return $r3;

     label09:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label07;

     label10:
        return null;
    }

    public static androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$v r3;
        android.view.View $r1;

        $r1 := @parameter0: android.view.View;

        if $r1 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r0;

        r3 = $r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$v mViewHolder>;

        return r3;
    }

    public static void getDecoratedBoundsWithMarginsInt(android.view.View, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        $r1 := @parameter0: android.view.View;

        $r0 := @parameter1: android.graphics.Rect;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = $r4.<android.graphics.Rect: int top>;

        $i1 = $i1 - $i2;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i3 = $r4.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i4 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i3 = $i3 + $i4;

        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    private int getDeepestFocusedViewWithId(android.view.View)
    {
        android.view.ViewGroup $r2;
        int $i0, $i1, $i2;
        android.view.View $r1, $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

     label1:
        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label2;

        $r2 = (android.view.ViewGroup) $r1;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        $r1 = $r3;

        $i1 = virtualinvoke $r3.<android.view.View: int getId()>();

        $i2 = -1;

        if $i1 == $i2 goto label1;

        $i0 = virtualinvoke $r3.<android.view.View: int getId()>();

        goto label1;

     label2:
        return $i0;
    }

    private java.lang.String getFullClassName(android.content.Context, java.lang.String)
    {
        android.content.Context $r2;
        java.lang.Package $r6;
        char $c0;
        int $i1;
        java.lang.StringBuilder $r3, $r7;
        java.lang.Class $r5;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 46 goto label1;

        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Landroidx/recyclerview/widget/RecyclerView;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Package getPackage()>();

        $r4 = virtualinvoke $r6.<java.lang.Package: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private b.i.i.l getScrollingChildHelper()
    {
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l mScrollingChildHelper>;

        if $r1 != null goto label1;

        $r1 = new b.i.i.l;

        specialinvoke $r1.<b.i.i.l: void <init>(android.view.View)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l mScrollingChildHelper> = $r1;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l mScrollingChildHelper>;

        return $r1;
    }

    private void handleMissingPreInfoForChangeError(long, androidx.recyclerview.widget.RecyclerView$v, androidx.recyclerview.widget.RecyclerView$v)
    {
        java.lang.IllegalStateException $r7;
        b.s.a.b $r3;
        androidx.recyclerview.widget.RecyclerView$v $r1, $r2, $r5;
        long $l1, $l4;
        byte $b0;
        androidx.recyclerview.widget.RecyclerView$a $r6;
        int $i2, $i3;
        android.view.View $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r9;
        boolean $z0;
        java.lang.StringBuilder $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $l1 := @parameter0: long;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$v;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$v;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i2 = virtualinvoke $r3.<b.s.a.b: int a()>();

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label5;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r4 = virtualinvoke $r3.<b.s.a.b: android.view.View c(int)>($i3);

        $r5 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r4);

        if $r5 != $r1 goto label2;

        goto label4;

     label2:
        $l4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$v)>($r5);

        $b0 = $l4 cmp $l1;

        if $b0 != 0 goto label4;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r6 == null goto label3;

        $z0 = virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same stable ID. Stable IDs in your adapter MUST BE unique and SHOULD NOT change.\n ViewHolder 1:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label3:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same change ID. This might happen due to inconsistent Adapter update events or if the LayoutManager lays out the same View multiple times.\n ViewHolder 1:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem while matching changed view holders with the newones. The pre-layout information for the change holder ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found but it is necessary for ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r9);

        return;
    }

    private boolean hasUpdatedView()
    {
        b.s.a.b $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int a()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View c(int)>($i1);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isUpdated()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    private void initAutofill()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = staticinvoke <b.i.i.y: int o(android.view.View)>(r0);

        if $i0 != 0 goto label1;

        staticinvoke <b.i.i.y: void i(android.view.View,int)>(r0, 8);

     label1:
        return;
    }

    private void initChildrenHelper()
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        b.s.a.F $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new b.s.a.b;

        $r2 = new b.s.a.F;

        specialinvoke $r2.<b.s.a.F: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke $r1.<b.s.a.b: void <init>(b.s.a.b$b)>($r2);

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper> = $r1;

        return;
    }

    private boolean isPreferredNextFocus(android.view.View, android.view.View, int)
    {
        android.graphics.Rect $r4, $r6;
        byte $b3, $b4, $b5;
        int $i0, $i1, $i2;
        android.view.View $r1, $r2, $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r9;
        androidx.recyclerview.widget.RecyclerView$i $r5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        if $r2 == null goto label25;

        if $r2 != r0 goto label01;

        return 0;

     label01:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r2);

        if $r3 != null goto label02;

        return 0;

     label02:
        if $r1 != null goto label03;

        return 1;

     label03:
        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r3 != null goto label04;

        return 1;

     label04:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i2);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i2);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r4);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        virtualinvoke r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r4);

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $i1 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$i: int getLayoutDirection()>();

        $b3 = -1;

        if $i1 != 1 goto label05;

        $b4 = -1;

        goto label06;

     label05:
        $b4 = 1;

     label06:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int left>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r6.<android.graphics.Rect: int left>;

        if $i2 < $i1 goto label07;

        $i2 = $r4.<android.graphics.Rect: int right>;

        if $i2 > $i1 goto label08;

     label07:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i2 = $r4.<android.graphics.Rect: int right>;

        if $i1 >= $i2 goto label08;

        $b5 = 1;

        goto label11;

     label08:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int right>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r6.<android.graphics.Rect: int right>;

        if $i2 > $i1 goto label09;

        $i2 = $r4.<android.graphics.Rect: int left>;

        if $i2 < $i1 goto label10;

     label09:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i2 = $r4.<android.graphics.Rect: int left>;

        if $i1 <= $i2 goto label10;

        $b5 = -1;

        goto label11;

     label10:
        $b5 = 0;

     label11:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int top>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r6.<android.graphics.Rect: int top>;

        if $i2 < $i1 goto label12;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        if $i2 > $i1 goto label13;

     label12:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        if $i1 >= $i2 goto label13;

        $b3 = 1;

        goto label16;

     label13:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r6.<android.graphics.Rect: int bottom>;

        if $i2 > $i1 goto label14;

        $i2 = $r4.<android.graphics.Rect: int top>;

        if $i2 < $i1 goto label15;

     label14:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i2 = $r4.<android.graphics.Rect: int top>;

        if $i1 <= $i2 goto label15;

        goto label16;

     label15:
        $b3 = 0;

     label16:
        if $i0 == 1 goto label23;

        if $i0 == 2 goto label21;

        if $i0 == 17 goto label20;

        if $i0 == 33 goto label19;

        if $i0 == 66 goto label18;

        if $i0 != 130 goto label17;

        if $b3 <= 0 goto label25;

        return 1;

     label17:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid direction: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label18:
        if $b5 <= 0 goto label25;

        return 1;

     label19:
        if $b3 >= 0 goto label25;

        return 1;

     label20:
        if $b5 >= 0 goto label25;

        return 1;

     label21:
        if $b3 > 0 goto label22;

        if $b3 != 0 goto label25;

        $i0 = $b5 * $b4;

        if $i0 < 0 goto label25;

     label22:
        return 1;

     label23:
        if $b3 < 0 goto label24;

        if $b3 != 0 goto label25;

        $i0 = $b5 * $b4;

        if $i0 > 0 goto label25;

     label24:
        return 1;

     label25:
        return 0;
    }

    private void onPointerUp(android.view.MotionEvent)
    {
        byte $b3;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i0);

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        if $i1 != $i2 goto label3;

        if $i0 != 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($b3);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($b3);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($b3);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i0;

     label3:
        return;
    }

    private boolean predictiveItemAnimationsEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$f $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean supportsPredictiveItemAnimations()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void processAdapterUpdatesAndSetAnimationFlags()
    {
        b.s.a.a $r1;
        androidx.recyclerview.widget.RecyclerView$s $r3;
        androidx.recyclerview.widget.RecyclerView$a $r5;
        androidx.recyclerview.widget.RecyclerView$f $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label01;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r1.<b.s.a.a: void f()>();

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent>;

        if $z0 == 0 goto label01;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)>(r0);

     label01:
        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z0 == 0 goto label02;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r1.<b.s.a.a: void e()>();

        goto label03;

     label02:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r1.<b.s.a.a: void b()>();

     label03:
        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved>;

        $z0 = 0;

        if $z1 != 0 goto label05;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged>;

        if $z1 == 0 goto label04;

        goto label05;

     label04:
        $z1 = 0;

        goto label06;

     label05:
        $z1 = 1;

     label06:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z2 == 0 goto label09;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r4 == null goto label09;

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z2 != 0 goto label07;

        if $z1 != 0 goto label07;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z2 = $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean mRequestedSimpleAnimations>;

        if $z2 == 0 goto label09;

     label07:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z2 == 0 goto label08;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $z2 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z2 == 0 goto label09;

     label08:
        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        $r3.<androidx.recyclerview.widget.RecyclerView$s: boolean k> = $z2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z2 = $r3.<androidx.recyclerview.widget.RecyclerView$s: boolean k>;

        if $z2 == 0 goto label11;

        if $z1 == 0 goto label11;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 != 0 goto label11;

        $z1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z1 == 0 goto label11;

        $z0 = 1;

     label11:
        $r3.<androidx.recyclerview.widget.RecyclerView$s: boolean l> = $z0;

        return;
    }

    private void pullGlows(float, float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $f2 := @parameter0: float;

        $f0 := @parameter1: float;

        $f3 := @parameter2: float;

        $f1 := @parameter3: float;

        $z0 = 1;

        $b0 = $f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $f4 = neg $f0;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $f5 = (float) $i1;

        $f4 = $f4 / $f5;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $f5 = (float) $i1;

        $f3 = $f3 / $f5;

        $f3 = 1.0F - $f3;

        staticinvoke <b.i.j.e: void a(android.widget.EdgeEffect,float,float)>($r1, $f4, $f3);

     label1:
        $z1 = 1;

        goto label4;

     label2:
        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $f4 = (float) $i1;

        $f4 = $f0 / $f4;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $f5 = (float) $i1;

        $f3 = $f3 / $f5;

        staticinvoke <b.i.j.e: void a(android.widget.EdgeEffect,float,float)>($r1, $f4, $f3);

        goto label1;

     label3:
        $z1 = 0;

     label4:
        $b0 = $f1 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label5;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $f3 = neg $f1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $f4 = (float) $i1;

        $f3 = $f3 / $f4;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $f4 = (float) $i1;

        $f2 = $f2 / $f4;

        staticinvoke <b.i.j.e: void a(android.widget.EdgeEffect,float,float)>($r1, $f3, $f2);

        goto label7;

     label5:
        $b0 = $f1 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label6;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $f3 = (float) $i1;

        $f3 = $f1 / $f3;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $f4 = (float) $i1;

        $f2 = $f2 / $f4;

        $f2 = 1.0F - $f2;

        staticinvoke <b.i.j.e: void a(android.widget.EdgeEffect,float,float)>($r1, $f3, $f2);

        goto label7;

     label6:
        $z0 = $z1;

     label7:
        if $z0 != 0 goto label8;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label8;

        $b0 = $f1 cmpl 0.0F;

        if $b0 == 0 goto label9;

     label8:
        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label9:
        return;
    }

    private void recoverFocusFromState()
    {
        android.view.ViewParent $r3;
        b.s.a.b $r4;
        androidx.recyclerview.widget.RecyclerView$v $r6;
        long $l1;
        androidx.recyclerview.widget.RecyclerView$s $r5;
        byte $b2;
        androidx.recyclerview.widget.RecyclerView$a $r1;
        int $i0;
        android.view.View $r2, $r7, $r8;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label12;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r1 == null goto label12;

        $z0 = virtualinvoke r0.<android.view.ViewGroup: boolean hasFocus()>();

        if $z0 == 0 goto label12;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 == 393216 goto label12;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 131072 goto label01;

        $z0 = virtualinvoke r0.<android.view.ViewGroup: boolean isFocused()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<android.view.ViewGroup: boolean isFocused()>();

        if $z0 != 0 goto label04;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD>;

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 == null goto label02;

        $z0 = virtualinvoke $r2.<android.view.View: boolean hasFocus()>();

        if $z0 != 0 goto label03;

     label02:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r4.<b.s.a.b: int a()>();

        if $i0 != 0 goto label04;

        virtualinvoke r0.<android.view.ViewGroup: boolean requestFocus()>();

        return;

     label03:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $z0 = virtualinvoke $r4.<b.s.a.b: boolean d(android.view.View)>($r2);

        if $z0 != 0 goto label04;

        return;

     label04:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $l1 = $r5.<androidx.recyclerview.widget.RecyclerView$s: long n>;

        $r2 = null;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label05;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 == 0 goto label05;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $l1 = $r5.<androidx.recyclerview.widget.RecyclerView$s: long n>;

        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v findViewHolderForItemId(long)>($l1);

        goto label06;

     label05:
        $r6 = null;

     label06:
        if $r6 == null goto label08;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r4.<b.s.a.b: boolean d(android.view.View)>($r7);

        if $z0 != 0 goto label08;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r7.<android.view.View: boolean hasFocusable()>();

        if $z0 != 0 goto label07;

        goto label08;

     label07:
        $r2 = $r6.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        goto label09;

     label08:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r4.<b.s.a.b: int a()>();

        if $i0 <= 0 goto label09;

        $r2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()>();

     label09:
        if $r2 == null goto label12;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = $r5.<androidx.recyclerview.widget.RecyclerView$s: int o>;

        $l1 = (long) $i0;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label10;

        $r7 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r8 = $r7;

        if $r7 == null goto label10;

        $z0 = virtualinvoke $r7.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label10;

        goto label11;

     label10:
        $r8 = $r2;

     label11:
        virtualinvoke $r8.<android.view.View: boolean requestFocus()>();

     label12:
        return;
    }

    private void releaseGlows()
    {
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r1 == null goto label3;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        $z0 = $z0 | $z1;

     label3:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r1 == null goto label4;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        $z0 = $z0 | $z1;

     label4:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r1 == null goto label5;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        $z0 = $z0 | $z1;

     label5:
        if $z0 == 0 goto label6;

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label6:
        return;
    }

    private void requestChildOnScreen(android.view.View, android.view.View)
    {
        android.graphics.Rect $r4, $r8;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r7;
        int $i0, $i1;
        android.view.View $r1, $r2, $r5;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        if $r2 == null goto label1;

        $r5 = $r2;

        goto label2;

     label1:
        $r5 = $r1;

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke $r5.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke $r5.<android.view.View: int getHeight()>();

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r6 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label3;

        $r7 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r6;

        $z0 = $r7.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z0 != 0 goto label3;

        $r4 = $r7.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r8.<android.graphics.Rect: int left>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $r8.<android.graphics.Rect: int left> = $i0;

        $i0 = $r8.<android.graphics.Rect: int right>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $i0 = $i0 + $i1;

        $r8.<android.graphics.Rect: int right> = $i0;

        $i0 = $r8.<android.graphics.Rect: int top>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        $r8.<android.graphics.Rect: int top> = $i0;

        $i0 = $r8.<android.graphics.Rect: int bottom>;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i1;

        $r8.<android.graphics.Rect: int bottom> = $i0;

     label3:
        if $r2 == null goto label4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r4);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>($r1, $r4);

     label4:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        $z0 = $z0 ^ 1;

        if $r2 != null goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>(r0, $r1, $r4, $z0, $z1);

        return;
    }

    private void resetFocusInfo()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: long n> = -1L;

        $i0 = -1;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int m> = $i0;

        $i0 = -1;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int o> = $i0;

        return;
    }

    private void resetScroll()
    {
        android.view.VelocityTracker $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.VelocityTracker: void clear()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void releaseGlows()>();

        return;
    }

    private void saveFocusInfo()
    {
        androidx.recyclerview.widget.RecyclerView$v $r1;
        long $l0;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        androidx.recyclerview.widget.RecyclerView$a $r2;
        int $i1;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        $r1 = null;

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke r0.<android.view.ViewGroup: boolean hasFocus()>();

        if $z0 == 0 goto label01;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r2 == null goto label01;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        goto label02;

     label01:
        $r3 = null;

     label02:
        if $r3 != null goto label03;

        goto label04;

     label03:
        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v findContainingViewHolder(android.view.View)>($r3);

     label04:
        if $r1 != null goto label05;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()>();

        return;

     label05:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 == 0 goto label06;

        $l0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: long getItemId()>();

        goto label07;

     label06:
        $l0 = -1L;

     label07:
        $r4.<androidx.recyclerview.widget.RecyclerView$s: long n> = $l0;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label08;

        $i1 = -1;

        goto label10;

     label08:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 == 0 goto label09;

        $i1 = $r1.<androidx.recyclerview.widget.RecyclerView$v: int mOldPosition>;

        goto label10;

     label09:
        $i1 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: int getAdapterPosition()>();

     label10:
        $r4.<androidx.recyclerview.widget.RecyclerView$s: int m> = $i1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r3 = $r1.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)>($r3);

        $r4.<androidx.recyclerview.widget.RecyclerView$s: int o> = $i1;

        return;
    }

    private void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$a, boolean, boolean)
    {
        b.s.a.a $r4;
        androidx.recyclerview.widget.RecyclerView$q $r1;
        androidx.recyclerview.widget.RecyclerView$o $r6;
        androidx.recyclerview.widget.RecyclerView$s $r7;
        androidx.recyclerview.widget.RecyclerView$a $r2, $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$a;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r3 == null goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$q mObserver>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$a: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$c)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$a: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

     label1:
        if $z0 == 0 goto label2;

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()>();

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r4.<b.s.a.a: void f()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter> = $r2;

        if $r2 == null goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$q mObserver>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$a: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$c)>($r1);

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$a: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

     label4:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r5 == null goto label5;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$i: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$a,androidx.recyclerview.widget.RecyclerView$a)>($r3, $r2);

     label5:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        virtualinvoke $r6.<androidx.recyclerview.widget.RecyclerView$o: void a(androidx.recyclerview.widget.RecyclerView$a,androidx.recyclerview.widget.RecyclerView$a,boolean)>($r3, $r2, $z0);

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r7.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 1;

        return;
    }

    private void stopScrollersInternal()
    {
        androidx.recyclerview.widget.RecyclerView$u $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$u mViewFlinger>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$u: void c()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void stopSmoothScroller()>();

     label1:
        return;
    }

    public void absorbGlows(int, int)
    {
        int $i0, $i1, $i2;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i2 = neg $i0;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onAbsorb(int)>($i2);

        goto label2;

     label1:
        if $i0 <= 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onAbsorb(int)>($i0);

     label2:
        if $i1 >= 0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i2 = neg $i1;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onAbsorb(int)>($i2);

        goto label4;

     label3:
        if $i1 <= 0 goto label4;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onAbsorb(int)>($i1);

     label4:
        if $i0 != 0 goto label5;

        if $i1 == 0 goto label6;

     label5:
        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label6:
        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)>(r0, $r1, $i0, $i1);

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>($r1, $i0, $i1);

     label2:
        return;
    }

    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$h)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$h $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$h;

        $i0 = -1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$h,int)>($r1, $i0);

        return;
    }

    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$h, int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        androidx.recyclerview.widget.RecyclerView$h $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$h;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot add item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.view.ViewGroup: void setWillNotDraw(boolean)>(0);

     label2:
        if $i0 >= 0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label4;

     label3:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r1);

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$j)
    {
        java.util.List $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$j $r1;
        java.util.ArrayList $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$j;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners> = $r3;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$l)
    {
        androidx.recyclerview.widget.RecyclerView$l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$l;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$m)
    {
        androidx.recyclerview.widget.RecyclerView$m $r1;
        java.util.List $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$m;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners> = $r3;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void animateAppearance(androidx.recyclerview.widget.RecyclerView$v, androidx.recyclerview.widget.RecyclerView$f$c, androidx.recyclerview.widget.RecyclerView$f$c)
    {
        androidx.recyclerview.widget.RecyclerView$f$c $r1, $r2;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        androidx.recyclerview.widget.RecyclerView$f $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r3 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$f$c;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$f$c;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$f: boolean a(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c,androidx.recyclerview.widget.RecyclerView$f$c)>($r3, $r1, $r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }

    public void animateDisappearance(androidx.recyclerview.widget.RecyclerView$v, androidx.recyclerview.widget.RecyclerView$f$c, androidx.recyclerview.widget.RecyclerView$f$c)
    {
        androidx.recyclerview.widget.RecyclerView$f$c $r1, $r2;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        androidx.recyclerview.widget.RecyclerView$f $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r3 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$f$c;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$f$c;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$v)>($r3);

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$f: boolean b(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c,androidx.recyclerview.widget.RecyclerView$f$c)>($r3, $r1, $r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }

    public void assertInLayoutOrScroll(java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 != 0 goto label2;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot call this method unless RecyclerView is computing a layout or scrolling");

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        return;
    }

    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot call this method while RecyclerView is computing a layout or scrolling");

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>;

        if $i0 <= 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RecyclerView", "Cannot call this method in a scroll callback. Scroll callbacks mightbe run during a measure & layout pass where you cannot change theRecyclerView data. Any method call that might change the structureof the RecyclerView or the adapter contents should be postponed tothe next frame.", $r2);

     label3:
        return;
    }

    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$v)
    {
        java.util.List $r3;
        androidx.recyclerview.widget.RecyclerView$f $r1;
        androidx.recyclerview.widget.RecyclerView$v $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r1 == null goto label2;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: java.util.List getUnmodifiedPayloads()>();

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$f: boolean a(androidx.recyclerview.widget.RecyclerView$v,java.util.List)>($r2, $r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void clearOldPositions()
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        int $i0, $i1;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i1);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void clearOldPosition()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void b()>();

        return;
    }

    public void clearOnChildAttachStateChangeListeners()
    {
        java.util.List $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        return;
    }

    public void clearOnScrollListeners()
    {
        java.util.List $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        return;
    }

    public int computeHorizontalScrollExtent()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        return $i0;

     label2:
        return 0;
    }

    public int computeHorizontalScrollOffset()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        return $i0;

     label2:
        return 0;
    }

    public int computeHorizontalScrollRange()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        return $i0;

     label2:
        return 0;
    }

    public int computeVerticalScrollExtent()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        return $i0;

     label2:
        return 0;
    }

    public int computeVerticalScrollOffset()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        return $i0;

     label2:
        return 0;
    }

    public int computeVerticalScrollRange()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        return $i0;

     label2:
        return 0;
    }

    public void considerReleasingGlowsOnScroll(int, int)
    {
        int $i0, $i1;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label1;

        if $i1 <= 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $z0 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r1 == null goto label3;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label3;

        if $i1 >= 0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        $z0 = $z0 | $z1;

     label3:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r1 == null goto label4;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label4;

        if $i0 <= 0 goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        $z0 = $z0 | $z1;

     label4:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r1 == null goto label5;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label5;

        if $i0 >= 0 goto label5;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $z1 = virtualinvoke $r1.<android.widget.EdgeEffect: boolean isFinished()>();

        $z0 = $z0 | $z1;

     label5:
        if $z0 == 0 goto label6;

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label6:
        return;
    }

    public void consumePendingUpdateOperations()
    {
        b.s.a.a $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label6;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        goto label6;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $z0 = virtualinvoke $r1.<b.s.a.a: boolean c()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $z0 = virtualinvoke $r1.<b.s.a.a: boolean d(int)>(4);

        if $z0 == 0 goto label5;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $z0 = virtualinvoke $r1.<b.s.a.a: boolean d(int)>(11);

        if $z0 != 0 goto label5;

        staticinvoke <b.i.e.b: void a(java.lang.String)>("RV PartialInvalidate");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r1.<b.s.a.a: void e()>();

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>;

        if $z0 != 0 goto label4;

        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        goto label4;

     label3:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r1.<b.s.a.a: void a()>();

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        staticinvoke <b.i.e.b: void a()>();

        return;

     label5:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $z0 = virtualinvoke $r1.<b.s.a.a: boolean c()>();

        if $z0 == 0 goto label7;

        staticinvoke <b.i.e.b: void a(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <b.i.e.b: void a()>();

        return;

     label6:
        staticinvoke <b.i.e.b: void a(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <b.i.e.b: void a()>();

     label7:
        return;
    }

    public void defaultOnMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        $i3 = staticinvoke <b.i.i.y: int r(android.view.View)>(r0);

        $i0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int chooseSize(int,int,int)>($i0, $i2, $i3);

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i2 = $i2 + $i3;

        $i3 = staticinvoke <b.i.i.y: int q(android.view.View)>(r0);

        $i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int chooseSize(int,int,int)>($i1, $i2, $i3);

        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public void dispatchChildAttached(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        java.util.List $r4;
        androidx.recyclerview.widget.RecyclerView$a $r3;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.Object $r5;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$j $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r3 == null goto label1;

        if $r2 == null goto label1;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$a: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$v)>($r2);

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r4 == null goto label3;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label2:
        if $i0 < 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (androidx.recyclerview.widget.RecyclerView$j) $r5;

        interfaceinvoke $r6.<androidx.recyclerview.widget.RecyclerView$j: void b(android.view.View)>($r1);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label2;

     label3:
        return;
    }

    public void dispatchChildDetached(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        java.util.List $r4;
        androidx.recyclerview.widget.RecyclerView$a $r3;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.Object $r5;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$j $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r3 == null goto label1;

        if $r2 == null goto label1;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$a: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$v)>($r2);

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r4 == null goto label3;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label2:
        if $i0 < 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (androidx.recyclerview.widget.RecyclerView$j) $r5;

        interfaceinvoke $r6.<androidx.recyclerview.widget.RecyclerView$j: void a(android.view.View)>($r1);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label2;

     label3:
        return;
    }

    public void dispatchLayout()
    {
        b.s.a.a $r4;
        androidx.recyclerview.widget.RecyclerView$s $r3;
        androidx.recyclerview.widget.RecyclerView$a $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No adapter attached; skipping layout");

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No layout manager attached; skipping layout");

        return;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r3.<androidx.recyclerview.widget.RecyclerView$s: boolean j> = 0;

        $i0 = $r3.<androidx.recyclerview.widget.RecyclerView$s: int e>;

        if $i0 != 1 goto label3;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        goto label6;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $z0 = virtualinvoke $r4.<b.s.a.a: boolean d()>();

        if $z0 != 0 goto label5;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        if $i0 != $i1 goto label5;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        if $i0 == $i1 goto label4;

        goto label5;

     label4:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)>(r0);

        goto label6;

     label5:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

     label6:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()>();

        return;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        float $f0, $f1;
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean a(float,float,boolean)>($f1, $f0, $z0);

        return $z0;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        float $f0, $f1;
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean a(float,float)>($f1, $f0);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        int[] $r1, $r2;
        int $i0, $i1;
        b.i.i.l $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: int[];

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r3.<b.i.i.l: boolean a(int,int,int[],int[])>($i1, $i0, $r1, $r2);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[], int)
    {
        b.i.i.l $r3;
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: int[];

        $i1 := @parameter4: int;

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r3.<b.i.i.l: boolean a(int,int,int[],int[],int)>($i2, $i0, $r1, $r2, $i1);

        return $z0;
    }

    public final void dispatchNestedScroll(int, int, int, int, int[], int, int[])
    {
        b.i.i.l $r3;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        $i4 := @parameter5: int;

        $r2 := @parameter6: int[];

        $r3 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        virtualinvoke $r3.<b.i.i.l: void a(int,int,int,int,int[],int,int[])>($i0, $i1, $i2, $i3, $r1, $i4, $r2);

        return;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        b.i.i.l $r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: int[];

        $r2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r2.<b.i.i.l: boolean a(int,int,int,int,int[])>($i3, $i0, $i1, $i2, $r1);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[], int)
    {
        b.i.i.l $r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i4 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: int[];

        $i3 := @parameter5: int;

        $r2 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r2.<b.i.i.l: boolean a(int,int,int,int,int[],int)>($i4, $i0, $i1, $i2, $r1, $i3);

        return $z0;
    }

    public void dispatchOnScrollStateChanged(int)
    {
        androidx.recyclerview.widget.RecyclerView$m $r2;
        java.util.List $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: void onScrollStateChanged(int)>($i0);

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)>($i0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$m mScrollListener>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$m: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)>(r0, $i0);

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r3 == null goto label4;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

     label3:
        if $i1 < 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = (androidx.recyclerview.widget.RecyclerView$m) $r4;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$m: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)>(r0, $i0);

        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label3;

     label4:
        return;
    }

    public void dispatchOnScrolled(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$m $r1;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>;

        $i1 = $i1 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter> = $i1;

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getScrollX()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getScrollY()>();

        $i1 = $i4 - $i3;

        $i2 = $i5 - $i0;

        virtualinvoke r0.<android.view.ViewGroup: void onScrollChanged(int,int,int,int)>($i4, $i5, $i1, $i2);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)>($i3, $i0);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$m mScrollListener>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$m: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, $i3, $i0);

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 == null goto label3;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

     label2:
        if $i1 < 0 goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r1 = (androidx.recyclerview.widget.RecyclerView$m) $r3;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$m: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, $i3, $i0);

        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label2;

     label3:
        $i3 = r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter>;

        $i0 = -1;

        $i3 = $i3 + $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter> = $i3;

        return;
    }

    public void dispatchPendingImportantForAccessibilityChanges()
    {
        android.view.ViewParent $r5;
        androidx.recyclerview.widget.RecyclerView$v $r4;
        java.util.List $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (androidx.recyclerview.widget.RecyclerView$v) $r3;

        $r1 = $r4.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 != r0 goto label3;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i1 = $r4.<androidx.recyclerview.widget.RecyclerView$v: int mPendingAccessibilityState>;

        $i2 = -1;

        if $i1 == $i2 goto label3;

        $r1 = $r4.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r1, $i1);

        $i1 = -1;

        $r4.<androidx.recyclerview.widget.RecyclerView$v: int mPendingAccessibilityState> = $i1;

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.view.ViewGroup: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        return 1;
    }

    public void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.util.SparseArray $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>($r1);

        return;
    }

    public void dispatchSaveInstanceState(android.util.SparseArray)
    {
        android.util.SparseArray $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>($r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.recyclerview.widget.RecyclerView$s $r5;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$f $r7;
        android.graphics.Canvas $r1;
        android.widget.EdgeEffect $r6;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$h $r4;
        boolean $z0, $z1, $z2;
        float $f0, $f1;
        java.lang.Object $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($r1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $z0 = 0;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label02;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.recyclerview.widget.RecyclerView$h) $r3;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$h: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$s)>($r1, r0, $r5);

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r6 == null goto label07;

        $z1 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label07;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z1 == 0 goto label03;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        goto label04;

     label03:
        $i1 = 0;

     label04:
        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i2 = neg $i2;

        $i1 = $i2 + $i1;

        $f0 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r6 == null goto label05;

        $z1 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($r1);

        if $z1 == 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        goto label08;

     label07:
        $z1 = 0;

     label08:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r6 == null goto label12;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label12;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z2 == 0 goto label09;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label09:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r6 == null goto label10;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($r1);

        if $z2 == 0 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        $z1 = $z1 | $z2;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label12:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r6 == null goto label17;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label17;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z2 == 0 goto label13;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        goto label14;

     label13:
        $i2 = 0;

     label14:
        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i2 = neg $i2;

        $f0 = (float) $i2;

        $i1 = neg $i1;

        $f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r6 == null goto label15;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($r1);

        if $z2 == 0 goto label15;

        $z2 = 1;

        goto label16;

     label15:
        $z2 = 0;

     label16:
        $z1 = $z1 | $z2;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label17:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r6 == null goto label21;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label21;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z2 == 0 goto label18;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $i1 = neg $i1;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i1 = $i1 + $i2;

        $f0 = (float) $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i1 = neg $i1;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i1 + $i2;

        $f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        goto label19;

     label18:
        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $i1 = neg $i1;

        $f0 = (float) $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i1 = neg $i1;

        $f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label19:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r6 == null goto label20;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($r1);

        if $z2 == 0 goto label20;

        $z0 = 1;

     label20:
        $z0 = $z0 | $z1;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        goto label22;

     label21:
        $z0 = $z1;

     label22:
        if $z0 != 0 goto label23;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r7 == null goto label23;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label23;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        $z1 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$f: boolean g()>();

        if $z1 == 0 goto label23;

        $z0 = 1;

     label23:
        if $z0 == 0 goto label24;

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label24:
        return;
    }

    public boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.view.View $r1;
        long $l0;
        android.graphics.Canvas $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: android.graphics.Canvas;

        $r1 := @parameter1: android.view.View;

        $l0 := @parameter2: long;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r2, $r1, $l0);

        return $z0;
    }

    public void ensureBottomGlow()
    {
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$e $r2;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory>;

        $r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$e: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>(r0, 3);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow> = $r1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;
    }

    public void ensureLeftGlow()
    {
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$e $r2;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory>;

        $r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$e: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>(r0, 0);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow> = $r1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;
    }

    public void ensureRightGlow()
    {
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$e $r2;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory>;

        $r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$e: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>(r0, 2);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow> = $r1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;
    }

    public void ensureTopGlow()
    {
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$e $r2;
        android.widget.EdgeEffect $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory>;

        $r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$e: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>(r0, 1);

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow> = $r1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow>;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        virtualinvoke $r1.<android.widget.EdgeEffect: void setSize(int,int)>($i0, $i1);

        return;
    }

    public java.lang.String exceptionLabel()
    {
        android.content.Context $r5;
        androidx.recyclerview.widget.RecyclerView$a $r3;
        java.lang.StringBuilder $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r2;
        androidx.recyclerview.widget.RecyclerView$i $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = specialinvoke r0.<android.view.ViewGroup: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", adapter:");

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layout:");

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", context:");

        $r5 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$s)
    {
        android.widget.OverScroller $r3;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$u $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getScrollState()>();

        if $i0 != 2 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$u mViewFlinger>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView$u: android.widget.OverScroller c>;

        $i0 = virtualinvoke $r3.<android.widget.OverScroller: int getFinalX()>();

        $i1 = virtualinvoke $r3.<android.widget.OverScroller: int getCurrX()>();

        $i0 = $i0 - $i1;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int p> = $i0;

        $i0 = virtualinvoke $r3.<android.widget.OverScroller: int getFinalY()>();

        $i1 = virtualinvoke $r3.<android.widget.OverScroller: int getCurrY()>();

        $i0 = $i0 - $i1;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int q> = $i0;

        return;

     label1:
        $r1.<androidx.recyclerview.widget.RecyclerView$s: int p> = 0;

        $r1.<androidx.recyclerview.widget.RecyclerView$s: int q> = 0;

        return;
    }

    public android.view.View findChildViewUnder(float, float)
    {
        b.s.a.b $r1;
        byte $b2;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int a()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View c(int)>($i0);

        $f2 = virtualinvoke $r2.<android.view.View: float getTranslationX()>();

        $f3 = virtualinvoke $r2.<android.view.View: float getTranslationY()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f4 = (float) $i1;

        $f4 = $f4 + $f2;

        $b2 = $f1 cmpl $f4;

        $i1 = (int) $b2;

        if $i1 < 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $f4 = (float) $i1;

        $f2 = $f4 + $f2;

        $b2 = $f1 cmpg $f2;

        $i1 = (int) $b2;

        if $i1 > 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f2 = (float) $i1;

        $f2 = $f2 + $f3;

        $b2 = $f0 cmpl $f2;

        $i1 = (int) $b2;

        if $i1 < 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $f2 = (float) $i1;

        $f3 = $f2 + $f3;

        $b2 = $f0 cmpg $f3;

        $i1 = (int) $b2;

        if $i1 > 0 goto label2;

        return $r2;

     label2:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label3:
        return null;
    }

    public android.view.View findContainingItemView(android.view.View)
    {
        android.view.ViewParent $r2;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        if $r2 == null goto label2;

        if $r2 == r0 goto label2;

        $z0 = $r2 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r1 = (android.view.View) $r2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        if $r2 != r0 goto label3;

        return $r1;

     label3:
        return null;
    }

    public androidx.recyclerview.widget.RecyclerView$v findContainingViewHolder(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolder(android.view.View)>($r1);

        return $r2;
    }

    public androidx.recyclerview.widget.RecyclerView$v findViewHolderForAdapterPosition(int)
    {
        b.s.a.b $r2;
        androidx.recyclerview.widget.RecyclerView$v $r1, $r4;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        $r1 = null;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i1 = virtualinvoke $r2.<b.s.a.b: int b()>();

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label5;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = virtualinvoke $r2.<b.s.a.b: android.view.View e(int)>($i2);

        $r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r3);

        if $r4 == null goto label4;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label4;

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        if $i3 != $i0 goto label4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = $r4.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r2.<b.s.a.b: boolean d(android.view.View)>($r3);

        if $z0 == 0 goto label3;

        $r1 = $r4;

        goto label4;

     label3:
        return $r4;

     label4:
        $i2 = $i2 + 1;

        goto label2;

     label5:
        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$v findViewHolderForItemId(long)
    {
        b.s.a.b $r3;
        androidx.recyclerview.widget.RecyclerView$v $r2, $r5;
        long $l0, $l4;
        byte $b1;
        androidx.recyclerview.widget.RecyclerView$a $r1;
        int $i2, $i3;
        android.view.View $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $r2 = null;

        if $r1 == null goto label5;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i2 = virtualinvoke $r3.<b.s.a.b: int b()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label6;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r4 = virtualinvoke $r3.<b.s.a.b: android.view.View e(int)>($i3);

        $r5 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r4);

        if $r5 == null goto label4;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label4;

        $l4 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$v: long getItemId()>();

        $b1 = $l4 cmp $l0;

        if $b1 != 0 goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r4 = $r5.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<b.s.a.b: boolean d(android.view.View)>($r4);

        if $z0 == 0 goto label3;

        $r2 = $r5;

        goto label4;

     label3:
        return $r5;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        return null;

     label6:
        return $r2;
    }

    public androidx.recyclerview.widget.RecyclerView$v findViewHolderForLayoutPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$v $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v findViewHolderForPosition(int,boolean)>($i0, 0);

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$v findViewHolderForPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$v $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v findViewHolderForPosition(int,boolean)>($i0, 0);

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$v findViewHolderForPosition(int, boolean)
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$v $r2, $r4;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i1 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $r2 = null;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i2);

        $r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r3);

        if $r4 == null goto label5;

        $z1 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z1 != 0 goto label5;

        if $z0 == 0 goto label2;

        $i3 = $r4.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        if $i3 == $i0 goto label3;

        goto label5;

     label2:
        $i3 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: int getLayoutPosition()>();

        if $i3 == $i0 goto label3;

        goto label5;

     label3:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = $r4.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z1 = virtualinvoke $r1.<b.s.a.b: boolean d(android.view.View)>($r3);

        if $z1 == 0 goto label4;

        $r2 = $r4;

        goto label5;

     label4:
        return $r4;

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        return $r2;
    }

    public boolean fling(int, int)
    {
        androidx.recyclerview.widget.RecyclerView$k $r2;
        androidx.recyclerview.widget.RecyclerView$u $r3;
        byte $b2;
        int $i0, $i1, $i3, $i4;
        float $f0, $f1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $b2 = 0;

        if $r1 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot fling without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return 0;

     label01:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label02;

        return 0;

     label02:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z1 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label03;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>;

        if $i3 >= $i4 goto label04;

     label03:
        $i0 = 0;

     label04:
        if $z1 == 0 goto label05;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>;

        if $i3 >= $i4 goto label06;

     label05:
        $i1 = 0;

     label06:
        if $i0 != 0 goto label07;

        if $i1 != 0 goto label07;

        return 0;

     label07:
        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>($f0, $f1);

        if $z2 != 0 goto label14;

        if $z0 != 0 goto label09;

        if $z1 == 0 goto label08;

        goto label09;

     label08:
        $z2 = 0;

        goto label10;

     label09:
        $z2 = 1;

     label10:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>($f0, $f1, $z2);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$k mOnFlingListener>;

        if $r2 == null goto label11;

        $z3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$k: boolean a(int,int)>($i0, $i1);

        if $z3 == 0 goto label11;

        return 1;

     label11:
        if $z2 == 0 goto label14;

        if $z0 == 0 goto label12;

        $b2 = 1;

     label12:
        if $z1 == 0 goto label13;

        $b2 = $b2 | 2;

     label13:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>($b2, 1);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i3 = neg $i4;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i4);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i0);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $i3 = neg $i4;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i4);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$u mViewFlinger>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$u: void a(int,int)>($i0, $i1);

        return 1;

     label14:
        return 0;
    }

    public android.view.View focusSearch(android.view.View, int)
    {
        androidx.recyclerview.widget.RecyclerView$o $r6;
        android.view.FocusFinder $r5;
        androidx.recyclerview.widget.RecyclerView$s $r7;
        short $s1;
        byte $b3;
        androidx.recyclerview.widget.RecyclerView$a $r4;
        int $i0, $i2;
        android.view.View $r1, $r3, $r8;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: android.view.View onInterceptFocusSearch(android.view.View,int)>($r1, $i0);

        if $r3 == null goto label01;

        return $r3;

     label01:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r4 == null goto label02;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label02;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z1 != 0 goto label02;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z1 != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $r5 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        if $z1 == 0 goto label22;

        if $i0 == 2 goto label04;

        if $i0 != 1 goto label22;

     label04:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z1 == 0 goto label09;

        if $i0 != 2 goto label05;

        $s1 = 130;

        goto label06;

     label05:
        $s1 = 33;

     label06:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, $s1);

        if $r3 != null goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z0 == 0 goto label10;

        $i0 = $s1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        if $z1 != 0 goto label19;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label19;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $i2 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: int getLayoutDirection()>();

        if $i2 != 1 goto label11;

        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        if $i0 != 2 goto label13;

        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label15;

        $b3 = 66;

        goto label16;

     label15:
        $b3 = 17;

     label16:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, $b3);

        if $r3 != null goto label17;

        $z1 = 1;

        goto label18;

     label17:
        $z1 = 0;

     label18:
        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z0 == 0 goto label19;

        $i0 = $b3;

     label19:
        if $z1 == 0 goto label21;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r3 != null goto label20;

        return null;

     label20:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r1, $i0, $r6, $r7);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

     label21:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, $i0);

        goto label24;

     label22:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, $i0);

        if $r3 != null goto label24;

        if $z1 == 0 goto label24;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r3 != null goto label23;

        return null;

     label23:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r1, $i0, $r6, $r7);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        goto label24;

     label24:
        if $r3 == null goto label26;

        $z1 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z1 != 0 goto label26;

        $r8 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        if $r8 != null goto label25;

        $r1 = specialinvoke r0.<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>($r1, $i0);

        return $r1;

     label25:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)>($r3, null);

        return $r1;

     label26:
        $z1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)>($r1, $r3, $i0);

        if $z1 == 0 goto label27;

        return $r3;

     label27:
        $r1 = specialinvoke r0.<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>($r1, $i0);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        java.lang.IllegalStateException $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2;
        java.lang.StringBuilder $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r5;
        androidx.recyclerview.widget.RecyclerView$i $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()>();

        return $r2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RecyclerView has no LayoutManager");

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        java.lang.IllegalStateException $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        android.util.AttributeSet $r1;
        java.lang.StringBuilder $r6;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r7;
        androidx.recyclerview.widget.RecyclerView$i $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r4 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r4;

     label1:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RecyclerView has no LayoutManager");

        $r7 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        java.lang.IllegalStateException $r4;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        java.lang.StringBuilder $r5;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r6;
        androidx.recyclerview.widget.RecyclerView$i $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r3;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RecyclerView has no LayoutManager");

        $r6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        return "androidx.recyclerview.widget.RecyclerView";
    }

    public androidx.recyclerview.widget.RecyclerView$a getAdapter()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$a r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        return r1;
    }

    public int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$v)
    {
        b.s.a.a $r2;
        androidx.recyclerview.widget.RecyclerView$v $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: boolean hasAnyOfTheFlags(int)>(524);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: boolean isBound()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $i0 = $r1.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        $i0 = virtualinvoke $r2.<b.s.a.a: int a(int)>($i0);

        return $i0;

     label2:
        $i0 = -1;

        return $i0;
    }

    public int getBaseline()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: int getBaseline()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i0;
    }

    public long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$v)
    {
        androidx.recyclerview.widget.RecyclerView$a $r2;
        androidx.recyclerview.widget.RecyclerView$v $r1;
        int $i1;
        long $l0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: long getItemId()>();

        return $l0;

     label1:
        $i1 = $r1.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        $l0 = (long) $i1;

        return $l0;
    }

    public int getChildAdapterPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: int getAdapterPosition()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public int getChildDrawingOrder(int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$d $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$d mChildDrawingOrderCallback>;

        if $r1 != null goto label1;

        $i1 = specialinvoke r0.<android.view.ViewGroup: int getChildDrawingOrder(int,int)>($i1, $i0);

        return $i1;

     label1:
        $i1 = interfaceinvoke $r1.<androidx.recyclerview.widget.RecyclerView$d: int a(int,int)>($i1, $i0);

        return $i1;
    }

    public long getChildItemId(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$a $r2;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        android.view.View $r1;
        long $l0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: long getItemId()>();

        return $l0;

     label2:
        return -1L;
    }

    public int getChildLayoutPosition(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: int getLayoutPosition()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public int getChildPosition(android.view.View)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)>($r1);

        return $i0;
    }

    public androidx.recyclerview.widget.RecyclerView$v getChildViewHolder(android.view.View)
    {
        android.view.ViewParent $r3;
        androidx.recyclerview.widget.RecyclerView$v $r6;
        android.view.View $r2;
        java.lang.StringBuilder $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: android.view.View;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 == null goto label2;

        if $r3 != r0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a direct child of ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        $r6 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        return $r6;
    }

    public boolean getClipToPadding()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        return z0;
    }

    public b.s.a.K getCompatAccessibilityDelegate()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        b.s.a.K r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.K mAccessibilityDelegate>;

        return r1;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        android.view.View $r1;
        android.graphics.Rect $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>($r1, $r2);

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$e getEdgeEffectFactory()
    {
        androidx.recyclerview.widget.RecyclerView$e r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory>;

        return r1;
    }

    public androidx.recyclerview.widget.RecyclerView$f getItemAnimator()
    {
        androidx.recyclerview.widget.RecyclerView$f r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        return r1;
    }

    public android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
    {
        android.graphics.Rect $r5, $r7;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        java.util.ArrayList $r6;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        java.lang.Object $r8;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$h $r9;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $z0 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z0 != 0 goto label1;

        $r5 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return $r5;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean d()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()>();

        if $z0 == 0 goto label3;

     label2:
        $r5 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return $r5;

     label3:
        $r5 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r8 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r9 = (androidx.recyclerview.widget.RecyclerView$h) $r8;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$h: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$s)>($r7, $r1, r0, $r4);

        $i2 = $r5.<android.graphics.Rect: int left>;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = $r7.<android.graphics.Rect: int left>;

        $i2 = $i2 + $i3;

        $r5.<android.graphics.Rect: int left> = $i2;

        $i2 = $r5.<android.graphics.Rect: int top>;

        $i3 = $r7.<android.graphics.Rect: int top>;

        $i2 = $i2 + $i3;

        $r5.<android.graphics.Rect: int top> = $i2;

        $i2 = $r5.<android.graphics.Rect: int right>;

        $i3 = $r7.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $r5.<android.graphics.Rect: int right> = $i2;

        $i2 = $r5.<android.graphics.Rect: int bottom>;

        $i3 = $r7.<android.graphics.Rect: int bottom>;

        $i2 = $i2 + $i3;

        $r5.<android.graphics.Rect: int bottom> = $i2;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 0;

        return $r5;
    }

    public androidx.recyclerview.widget.RecyclerView$h getItemDecorationAt(int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r6;
        androidx.recyclerview.widget.RecyclerView$h $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()>();

        if $i0 < 0 goto label1;

        if $i0 >= $i1 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (androidx.recyclerview.widget.RecyclerView$h) $r4;

        return $r5;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an invalid index for size ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public int getItemDecorationCount()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public androidx.recyclerview.widget.RecyclerView$i getLayoutManager()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        return r1;
    }

    public int getMaxFlingVelocity()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        return i0;
    }

    public int getMinFlingVelocity()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity>;

        return i0;
    }

    public long getNanoTime()
    {
        long $l0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        return $l0;

     label1:
        return 0L;
    }

    public androidx.recyclerview.widget.RecyclerView$k getOnFlingListener()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$k r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$k mOnFlingListener>;

        return r1;
    }

    public boolean getPreserveFocusAfterLayout()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        return z0;
    }

    public androidx.recyclerview.widget.RecyclerView$n getRecycledViewPool()
    {
        androidx.recyclerview.widget.RecyclerView$n $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: androidx.recyclerview.widget.RecyclerView$n d()>();

        return $r1;
    }

    public int getScrollState()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        return i0;
    }

    public boolean hasFixedSize()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize>;

        return z0;
    }

    public boolean hasNestedScrollingParent()
    {
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean b()>();

        return $z0;
    }

    public boolean hasNestedScrollingParent(int)
    {
        int $i0;
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean b(int)>($i0);

        return $z0;
    }

    public boolean hasPendingAdapterUpdates()
    {
        b.s.a.a $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label2;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 != 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        $z0 = virtualinvoke $r1.<b.s.a.a: boolean c()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void initAdapterManager()
    {
        b.s.a.a $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        b.s.a.G $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new b.s.a.a;

        $r2 = new b.s.a.G;

        specialinvoke $r2.<b.s.a.G: void <init>(androidx.recyclerview.widget.RecyclerView)>(r0);

        specialinvoke $r1.<b.s.a.a: void <init>(b.s.a.a$a)>($r2);

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper> = $r1;

        return;
    }

    public void initFastScroller(android.graphics.drawable.StateListDrawable, android.graphics.drawable.Drawable, android.graphics.drawable.StateListDrawable, android.graphics.drawable.Drawable)
    {
        android.content.Context $r6;
        java.lang.IllegalArgumentException $r8;
        android.graphics.drawable.Drawable $r1, $r4;
        b.s.a.n $r2;
        android.graphics.drawable.StateListDrawable $r3, $r5;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r9;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r10;
        android.content.res.Resources $r7;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r3 := @parameter0: android.graphics.drawable.StateListDrawable;

        $r4 := @parameter1: android.graphics.drawable.Drawable;

        $r5 := @parameter2: android.graphics.drawable.StateListDrawable;

        $r1 := @parameter3: android.graphics.drawable.Drawable;

        if $r3 == null goto label1;

        if $r4 == null goto label1;

        if $r5 == null goto label1;

        if $r1 == null goto label1;

        $r6 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = new b.s.a.n;

        $i0 = <b.s.b: int fastscroll_default_thickness>;

        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $i1 = <b.s.b: int fastscroll_minimum_range>;

        $i1 = virtualinvoke $r7.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i2 = <b.s.b: int fastscroll_margin>;

        $i2 = virtualinvoke $r7.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i2);

        specialinvoke $r2.<b.s.a.n: void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int)>(r0, $r3, $r4, $r5, $r1, $i0, $i1, $i2);

        return;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to set fast scroller without both required drawables.");

        $r10 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r8;
    }

    public void invalidateGlows()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow> = null;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow> = null;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow> = null;

        r0.<androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow> = null;

        return;
    }

    public void invalidateItemDecorations()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot invalidate item decorations during a scroll or layout");

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public boolean isAccessibilityEnabled()
    {
        android.view.accessibility.AccessibilityManager $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAnimating()
    {
        androidx.recyclerview.widget.RecyclerView$f $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$f: boolean g()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAttachedToWindow()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        return z0;
    }

    public boolean isComputingLayout()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLayoutFrozen()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()>();

        return $z0;
    }

    public final boolean isLayoutSuppressed()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        return z0;
    }

    public boolean isNestedScrollingEnabled()
    {
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean c()>();

        return $z0;
    }

    public void jumpToPositionForSmoothScroller(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(2);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: void scrollToPosition(int)>($i0);

        virtualinvoke r0.<android.view.ViewGroup: boolean awakenScrollBars()>();

        return;
    }

    public void markItemDecorInsetsDirty()
    {
        b.s.a.b $r1;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        androidx.recyclerview.widget.RecyclerView$o $r5;
        int $i0, $i1;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $r4.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$o: void g()>();

        return;
    }

    public void markKnownViewsInvalid()
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        int $i0, $i1;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i1);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void addFlags(int)>(6);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void h()>();

        return;
    }

    public void offsetChildrenHorizontal(int)
    {
        b.s.a.b $r1;
        int $i0, $i1, $i2;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i1 = virtualinvoke $r1.<b.s.a.b: int a()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View c(int)>($i2);

        virtualinvoke $r2.<android.view.View: void offsetLeftAndRight(int)>($i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void offsetChildrenVertical(int)
    {
        b.s.a.b $r1;
        int $i0, $i1, $i2;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i1 = virtualinvoke $r1.<b.s.a.b: int a()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View c(int)>($i2);

        virtualinvoke $r2.<android.view.View: void offsetTopAndBottom(int)>($i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void offsetPositionRecordsForInsert(int, int)
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$o $r5;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i2 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i3);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        $i4 = $r3.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        if $i4 < $i0 goto label2;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void offsetPosition(int,boolean)>($i1, 0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$o: void a(int,int)>($i0, $i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void offsetPositionRecordsForMove(int, int)
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$o $r5;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i2 = virtualinvoke $r1.<b.s.a.b: int b()>();

        if $i0 >= $i1 goto label1;

        $i3 = $i0;

        $i4 = $i1;

        $b5 = -1;

        goto label2;

     label1:
        $i4 = $i0;

        $i3 = $i1;

        $b5 = 1;

     label2:
        $i6 = 0;

     label3:
        if $i6 >= $i2 goto label8;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i6);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label7;

        $i7 = $r3.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        if $i7 < $i3 goto label7;

        if $i7 <= $i4 goto label4;

        goto label7;

     label4:
        if $i7 != $i0 goto label5;

        $i7 = $i1 - $i0;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void offsetPosition(int,boolean)>($i7, 0);

        goto label6;

     label5:
        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void offsetPosition(int,boolean)>($b5, 0);

     label6:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 1;

     label7:
        $i6 = $i6 + 1;

        goto label3;

     label8:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$o: void b(int,int)>($i0, $i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void offsetPositionRecordsForRemove(int, int, boolean)
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$o $r5;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i3 = $i0 + $i1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i4 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $i5 = 0;

     label1:
        if $i5 >= $i4 goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i5);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label3;

        $z1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z1 != 0 goto label3;

        $i2 = $r3.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        if $i2 < $i3 goto label2;

        $i2 = neg $i1;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void offsetPosition(int,boolean)>($i2, $z0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 1;

        goto label3;

     label2:
        if $i2 < $i0 goto label3;

        $i2 = -1;

        $i6 = $i0 + $i2;

        $i2 = neg $i1;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void flagRemovedAndOffsetPosition(int,int,boolean)>($i6, $i2, $z0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean g> = 1;

     label3:
        $i5 = $i5 + 1;

        goto label1;

     label4:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$o: void a(int,int,boolean)>($i0, $i1, $z0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void onAttachedToWindow()
    {
        java.lang.ThreadLocal $r2;
        long $l1;
        b.s.a.p $r4, $r6;
        byte $b0;
        int $i2;
        android.view.Display $r5;
        float $f0, $f1;
        java.lang.Object $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        $z0 = 1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached> = 1;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z1 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.view.ViewGroup: boolean isLayoutRequested()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete> = $z0;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 == null goto label3;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)>(r0);

     label3:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label7;

        $r2 = <b.s.a.p: java.lang.ThreadLocal a>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (b.s.a.p) $r3;

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker> = $r4;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker>;

        if $r4 != null goto label6;

        $r6 = new b.s.a.p;

        specialinvoke $r6.<b.s.a.p: void <init>()>();

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker> = $r6;

        $r5 = staticinvoke <b.i.i.y: android.view.Display k(android.view.View)>(r0);

        $z0 = virtualinvoke r0.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 != 0 goto label4;

        if $r5 == null goto label4;

        $f0 = virtualinvoke $r5.<android.view.Display: float getRefreshRate()>();

        $f1 = $f0;

        $b0 = $f0 cmpl 30.0F;

        $i2 = (int) $b0;

        if $i2 < 0 goto label4;

        goto label5;

     label4:
        $f1 = 60.0F;

     label5:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker>;

        $f0 = 1.0E9F / $f1;

        $l1 = (long) $f0;

        $r4.<b.s.a.p: long e> = $l1;

        $r2 = <b.s.a.p: java.lang.ThreadLocal a>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

     label6:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker>;

        virtualinvoke $r4.<b.s.a.p: void a(androidx.recyclerview.widget.RecyclerView)>(r0);

     label7:
        return;
    }

    public void onChildAttachedToWindow(android.view.View)
    {
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        return;
    }

    public void onChildDetachedFromWindow(android.view.View)
    {
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        java.lang.Runnable $r5;
        b.s.a.V $r6;
        b.s.a.p $r7;
        java.util.List $r4;
        androidx.recyclerview.widget.RecyclerView$f $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$f: void b()>();

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached> = 0;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r3 == null goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$o)>(r0, $r1);

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        virtualinvoke r0.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r5);

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r6.<b.s.a.V: void b()>();

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label3;

        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker>;

        if $r7 == null goto label3;

        virtualinvoke $r7.<b.s.a.p: void b(androidx.recyclerview.widget.RecyclerView)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker> = null;

     label3:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        androidx.recyclerview.widget.RecyclerView$s $r2;
        java.util.ArrayList $r3;
        int $i0, $i1;
        android.graphics.Canvas $r1;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$h $r5;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (androidx.recyclerview.widget.RecyclerView$h) $r4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$h: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$s)>($r1, r0, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onEnterLayoutOrScroll()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i0 = $i0 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = $i0;

        return;
    }

    public void onExitLayoutOrScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)>(1);

        return;
    }

    public void onExitLayoutOrScroll(boolean)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i0 = $i0 - 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = $i0;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i0 >= 1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()>();

     label1:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        byte $b0;
        android.view.MotionEvent $r1;
        int $i1, $i2;
        float $f0, $f1, $f2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 != null goto label01;

        return 0;

     label01:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label02;

        return 0;

     label02:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i1 != 8 goto label11;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i1 & 2;

        if $i1 == 0 goto label05;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label03;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $f0 = neg $f0;

        goto label04;

     label03:
        $f0 = 0.0F;

     label04:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label08;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getAxisValue(int)>(10);

        goto label09;

     label05:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i1 & 4194304;

        if $i1 == 0 goto label07;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getAxisValue(int)>(26);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label06;

        $f0 = neg $f0;

        goto label08;

     label06:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label07;

        $f1 = $f0;

        $f0 = 0.0F;

        goto label09;

     label07:
        $f0 = 0.0F;

     label08:
        $f1 = 0.0F;

     label09:
        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label10;

        $b0 = $f1 cmpl 0.0F;

        if $b0 == 0 goto label11;

     label10:
        $f2 = r0.<androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor>;

        $f1 = $f1 * $f2;

        $i1 = (int) $f1;

        $f1 = r0.<androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor>;

        $f0 = $f0 * $f1;

        $i2 = (int) $f0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>($i1, $i2, $r1);

     label11:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.view.ViewParent $r6;
        android.view.VelocityTracker $r3;
        byte $b5;
        int[] $r7;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r5;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0, $z1, $z2;
        float $f0;
        java.lang.StringBuilder $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label01;

        return 0;

     label01:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener> = null;

        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label02;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

        return 1;

     label02:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 != null goto label03;

        return 0;

     label03:
        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label04;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r3;

     label04:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        if $i0 == 0 goto label14;

        if $i0 == 1 goto label13;

        if $i0 == 2 goto label08;

        if $i0 == 3 goto label07;

        if $i0 == 5 goto label06;

        if $i0 == 6 goto label05;

        goto label20;

     label05:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>($r1);

        goto label20;

     label06:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i1;

        goto label20;

     label07:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

        goto label20;

     label08:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i1);

        if $i1 >= 0 goto label09;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r5);

        return 0;

     label09:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i2 == 1 goto label20;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX>;

        $i3 = $i0 - $i2;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY>;

        $i2 = $i1 - $i2;

        if $z1 == 0 goto label10;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i4 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        if $i3 <= $i4 goto label10;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i0;

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        if $z0 == 0 goto label12;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        if $i0 <= $i2 goto label12;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i1;

        $z1 = 1;

     label12:
        if $z1 == 0 goto label20;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(1);

        goto label20;

     label13:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(0);

        goto label20;

     label14:
        $z2 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z2 == 0 goto label15;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 0;

     label15:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i1 != 2 goto label16;

        $r6 = virtualinvoke r0.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        interfaceinvoke $r6.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)>(1);

     label16:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $r7[1] = 0;

        $r7[0] = 0;

        if $z1 == 0 goto label17;

        $b5 = 1;

        goto label18;

     label17:
        $b5 = 0;

     label18:
        if $z0 == 0 goto label19;

        $b5 = $b5 | 2;

     label19:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>($b5, 0);

     label20:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i1 != 1 goto label21;

        return 1;

     label21:
        return 0;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        staticinvoke <b.i.e.b: void a(java.lang.String)>("RV OnLayout");

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <b.i.e.b: void a()>();

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete> = 1;

        return;
    }

    public void onMeasure(int, int)
    {
        b.s.a.a $r5;
        androidx.recyclerview.widget.RecyclerView$o $r1;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$a $r4;
        int $i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r3 != null goto label01;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)>($i0, $i1);

        return;

     label01:
        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: boolean isAutoMeasureEnabled()>();

        $z1 = 0;

        if $z0 == 0 goto label06;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void onMeasure(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,int,int)>($r1, $r2, $i0, $i1);

        if $i2 != 1073741824 goto label02;

        if $i3 != 1073741824 goto label02;

        $z1 = 1;

     label02:
        if $z1 != 0 goto label05;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r4 != null goto label03;

        return;

     label03:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i2 = $r2.<androidx.recyclerview.widget.RecyclerView$s: int e>;

        if $i2 != 1 goto label04;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>();

     label04:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void setMeasureSpecs(int,int)>($i0, $i1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean j> = 1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void setMeasuredDimensionFromChildren(int,int)>($i0, $i1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: boolean shouldMeasureTwice()>();

        if $z0 == 0 goto label14;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void setMeasureSpecs(int,int)>($i2, $i3);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean j> = 1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void setMeasuredDimensionFromChildren(int,int)>($i0, $i1);

     label05:
        return;

     label06:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize>;

        if $z0 == 0 goto label07;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void onMeasure(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,int,int)>($r1, $r2, $i0, $i1);

        return;

     label07:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure>;

        if $z0 == 0 goto label10;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean l>;

        if $z0 == 0 goto label08;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean h> = 1;

        goto label09;

     label08:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.a mAdapterHelper>;

        virtualinvoke $r5.<b.s.a.a: void b()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean h> = 0;

     label09:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        goto label11;

     label10:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean l>;

        if $z0 == 0 goto label11;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i1);

        return;

     label11:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r4 == null goto label12;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i2 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        $r2.<androidx.recyclerview.widget.RecyclerView$s: int f> = $i2;

        goto label13;

     label12:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: int f> = 0;

     label13:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void onMeasure(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,int,int)>($r1, $r2, $i0, $i1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $r2.<androidx.recyclerview.widget.RecyclerView$s: boolean h> = 0;

     label14:
        return;
    }

    public boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.recyclerview.widget.RecyclerView$SavedState $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof androidx.recyclerview.widget.RecyclerView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (androidx.recyclerview.widget.RecyclerView$SavedState) $r1;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState> = $r2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        $r1 = virtualinvoke $r2.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r3 == null goto label2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        $r1 = $r2.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        if $r1 == null goto label2;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: void onRestoreInstanceState(android.os.Parcelable)>($r1);

     label2:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.os.Parcelable $r2;
        androidx.recyclerview.widget.RecyclerView$SavedState $r1, $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = new androidx.recyclerview.widget.RecyclerView$SavedState;

        $r2 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r1.<androidx.recyclerview.widget.RecyclerView$SavedState: void <init>(android.os.Parcelable)>($r2);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState>;

        if $r3 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$SavedState: void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)>($r3);

        return $r1;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r4 == null goto label2;

        $r2 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$i: android.os.Parcelable onSaveInstanceState()>();

        $r1.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = $r2;

        return $r1;

     label2:
        $r1.<androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = null;

        return $r1;
    }

    public void onScrollStateChanged(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        return;
    }

    public void onScrolled(int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return;
    }

    public void onSizeChanged(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        if $i0 != $i2 goto label1;

        if $i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidateGlows()>();

     label2:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.ViewParent $r9;
        b.s.a.p $r10;
        android.view.VelocityTracker $r4;
        byte $b6;
        int[] $r2, $r8;
        android.view.MotionEvent $r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r7;
        androidx.recyclerview.widget.RecyclerView$i $r3;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1;
        java.lang.StringBuilder $r6;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        $z1 = 0;

        if $z0 != 0 goto label44;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $z0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label02;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

        return 1;

     label02:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r3 != null goto label03;

        return 0;

     label03:
        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z2 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r4 != null goto label04;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r4;

     label04:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        if $i0 != 0 goto label05;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $r2[1] = 0;

        $r2[0] = 0;

     label05:
        $r5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i2 = $r2[0];

        $f0 = (float) $i2;

        $i2 = $r2[1];

        $f1 = (float) $i2;

        virtualinvoke $r5.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, $f1);

        if $i0 == 0 goto label38;

        if $i0 == 1 goto label30;

        if $i0 == 2 goto label09;

        if $i0 == 3 goto label08;

        if $i0 == 5 goto label07;

        if $i0 == 6 goto label06;

        goto label42;

     label06:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>($r1);

        goto label42;

     label07:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i1;

        goto label42;

     label08:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void cancelScroll()>();

        goto label42;

     label09:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i1);

        if $i1 >= 0 goto label10;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r7);

        return 0;

     label10:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX>;

        $i3 = $i2 - $i0;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY>;

        $i4 = $i2 - $i1;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i2 == 1 goto label18;

        if $z0 == 0 goto label13;

        if $i3 <= 0 goto label11;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i2 = $i3 - $i2;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        goto label12;

     label11:
        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i2 = $i3 + $i2;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i2);

     label12:
        if $i3 == 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        if $z2 == 0 goto label17;

        if $i4 <= 0 goto label15;

        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i2 = $i4 - $i2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        goto label16;

     label15:
        $i2 = r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop>;

        $i2 = $i4 + $i2;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i2);

     label16:
        if $i4 == 0 goto label17;

        $z3 = 1;

     label17:
        if $z3 == 0 goto label18;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(1);

     label18:
        $i2 = $i3;

        $i5 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i5 != 1 goto label42;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r2[0] = 0;

        $r2[1] = 0;

        if $z0 == 0 goto label19;

        goto label20;

     label19:
        $i3 = 0;

     label20:
        if $z2 == 0 goto label21;

        $i5 = $i4;

        goto label22;

     label21:
        $i5 = 0;

     label22:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $z3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($i3, $i5, $r8, $r2, 0);

        if $z3 == 0 goto label23;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i3 = $r2[0];

        $i2 = $i2 - $i3;

        $i3 = $r2[1];

        $i4 = $i4 - $i3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i3 = $r2[0];

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i5 = $r8[0];

        $i3 = $i3 + $i5;

        $r2[0] = $i3;

        $i3 = $r2[1];

        $i5 = $r8[1];

        $i3 = $i3 + $i5;

        $r2[1] = $i3;

        $r9 = virtualinvoke r0.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        interfaceinvoke $r9.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label23:
        $i3 = $i4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i4 = $r2[0];

        $i0 = $i0 - $i4;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i0;

        $i0 = $r2[1];

        $i1 = $i1 - $i0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i1;

        if $z0 == 0 goto label24;

        $i1 = $i2;

        goto label25;

     label24:
        $i1 = 0;

     label25:
        if $z2 == 0 goto label26;

        $i0 = $i3;

        goto label27;

     label26:
        $i0 = 0;

     label27:
        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>($i1, $i0, $r1);

        if $z0 == 0 goto label28;

        $r9 = virtualinvoke r0.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        interfaceinvoke $r9.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label28:
        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker>;

        if $r10 == null goto label42;

        if $i2 != 0 goto label29;

        if $i3 == 0 goto label42;

     label29:
        $r10 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.p mGapWorker>;

        virtualinvoke $r10.<b.s.a.p: void a(androidx.recyclerview.widget.RecyclerView,int,int)>(r0, $i2, $i3);

        goto label42;

     label30:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r5);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity>;

        $f0 = (float) $i1;

        virtualinvoke $r4.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        if $z0 == 0 goto label31;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $f0 = virtualinvoke $r4.<android.view.VelocityTracker: float getXVelocity(int)>($i1);

        $f0 = neg $f0;

        goto label32;

     label31:
        $f0 = 0.0F;

     label32:
        if $z2 == 0 goto label33;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId>;

        $f1 = virtualinvoke $r4.<android.view.VelocityTracker: float getYVelocity(int)>($i1);

        $f1 = neg $f1;

        goto label34;

     label33:
        $f1 = 0.0F;

     label34:
        $b6 = $f0 cmpl 0.0F;

        if $b6 != 0 goto label35;

        $b6 = $f1 cmpl 0.0F;

        if $b6 == 0 goto label36;

     label35:
        $i1 = (int) $f0;

        $i0 = (int) $f1;

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>($i1, $i0);

        if $z1 != 0 goto label37;

     label36:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

     label37:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void resetScroll()>();

        $z1 = 1;

        goto label42;

     label38:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollPointerId> = $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchX> = $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInitialTouchY> = $i1;

        if $z0 == 0 goto label39;

        $b6 = 1;

        goto label40;

     label39:
        $b6 = 0;

     label40:
        if $z2 == 0 goto label41;

        $b6 = $b6 | 2;

     label41:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>($b6, 0);

     label42:
        if $z1 != 0 goto label43;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r5);

     label43:
        virtualinvoke $r5.<android.view.MotionEvent: void recycle()>();

        return 1;

     label44:
        return 0;
    }

    public void postAnimationRunner()
    {
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.Runnable $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner>;

        if $z0 != 0 goto label1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        staticinvoke <b.i.i.y: void a(android.view.View,java.lang.Runnable)>(r0, $r1);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner> = 1;

     label1:
        return;
    }

    public void processDataSetCompletelyChanged(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z1 := @parameter0: boolean;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent>;

        $z1 = $z1 | $z0;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent> = $z1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()>();

        return;
    }

    public void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$v, androidx.recyclerview.widget.RecyclerView$f$c)
    {
        androidx.recyclerview.widget.RecyclerView$v $r1;
        androidx.recyclerview.widget.RecyclerView$f$c $r2;
        long $l0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        b.s.a.V $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$f$c;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: void setFlags(int,int)>(0, 8192);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean i>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: boolean isUpdated()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label1;

        $l0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$v)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r3.<b.s.a.V: void a(long,androidx.recyclerview.widget.RecyclerView$v)>($l0, $r1);

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r3.<b.s.a.V: void c(androidx.recyclerview.widget.RecyclerView$v,androidx.recyclerview.widget.RecyclerView$f$c)>($r1, $r2);

        return;
    }

    public void removeAndRecycleViews()
    {
        androidx.recyclerview.widget.RecyclerView$o $r3;
        androidx.recyclerview.widget.RecyclerView$f $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$f: void b()>();

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$o)>($r3);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$o)>($r3);

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$o: void a()>();

        return;
    }

    public boolean removeAnimatingView(android.view.View)
    {
        b.s.a.b $r2;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $z0 = virtualinvoke $r2.<b.s.a.b: boolean f(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void e(androidx.recyclerview.widget.RecyclerView$v)>($r3);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void d(androidx.recyclerview.widget.RecyclerView$v)>($r3);

     label1:
        $z1 = $z0 ^ 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>($z1);

        return $z0;
    }

    public void removeDetachedView(android.view.View, boolean)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        java.lang.IllegalArgumentException $r3;
        android.view.View $r1;
        java.lang.StringBuilder $r4;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label3;

        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean isTmpDetached()>();

        if $z1 == 0 goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: void clearTmpDetachFlag()>();

        goto label3;

     label1:
        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called removeDetachedView with a view which is not flagged as tmp detached.");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label3:
        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)>($r1);

        specialinvoke r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>($r1, $z0);

        return;
    }

    public void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$h)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        androidx.recyclerview.widget.RecyclerView$h $r1;
        java.util.ArrayList $r3;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$h;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot remove item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getOverScrollMode()>();

        if $i0 != 2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<android.view.ViewGroup: void setWillNotDraw(boolean)>($z0);

     label4:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void removeItemDecorationAt(int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r4;
        androidx.recyclerview.widget.RecyclerView$h $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()>();

        if $i0 < 0 goto label1;

        if $i0 >= $i1 goto label1;

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$h getItemDecorationAt(int)>($i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$h)>($r3);

        return;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an invalid index for size ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r1;
    }

    public void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$j)
    {
        java.util.List $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$j $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$j;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        return;

     label1:
        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$l)
    {
        androidx.recyclerview.widget.RecyclerView$l $r1, $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        java.util.ArrayList $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$l;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener>;

        if $r3 != $r1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l mInterceptingOnItemTouchListener> = null;

     label1:
        return;
    }

    public void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$m)
    {
        androidx.recyclerview.widget.RecyclerView$m $r1;
        java.util.List $r2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$m;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void repositionShadowingViews()
    {
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2, $r4;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int a()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View c(int)>($i1);

        $r3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolder(android.view.View)>($r2);

        if $r3 == null goto label3;

        $r3 = $r3.<androidx.recyclerview.widget.RecyclerView$v: androidx.recyclerview.widget.RecyclerView$v mShadowingHolder>;

        if $r3 == null goto label3;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $i2 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i4 = virtualinvoke $r4.<android.view.View: int getLeft()>();

        if $i2 != $i4 goto label2;

        $i4 = virtualinvoke $r4.<android.view.View: int getTop()>();

        if $i3 == $i4 goto label3;

     label2:
        $i4 = virtualinvoke $r4.<android.view.View: int getWidth()>();

        $i4 = $i4 + $i2;

        $i5 = virtualinvoke $r4.<android.view.View: int getHeight()>();

        $i5 = $i5 + $i3;

        virtualinvoke $r4.<android.view.View: void layout(int,int,int,int)>($i2, $i3, $i4, $i5);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.view.View $r1, $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r3;
        androidx.recyclerview.widget.RecyclerView$i $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$i: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$s,android.view.View,android.view.View)>(r0, $r3, $r1, $r2);

        if $z0 != 0 goto label1;

        if $r2 == null goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)>($r1, $r2);

     label1:
        specialinvoke r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.graphics.Rect $r1;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r3 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)>(r0, $r3, $r1, $z0);

        return $z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$l $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.recyclerview.widget.RecyclerView$l) $r2;

        interfaceinvoke $r3.<androidx.recyclerview.widget.RecyclerView$l: void a(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>($z0);

        return;
    }

    public void requestLayout()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i0 != 0 goto label1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 1;

        return;
    }

    public void saveOldPositions()
    {
        b.s.a.b $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r1.<b.s.a.b: int b()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View e(int)>($i1);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void saveOldPosition()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void scrollBy(int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label1:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label2;

        return;

     label2:
        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z1 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 != 0 goto label3;

        if $z1 == 0 goto label8;

     label3:
        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $i0 = 0;

     label5:
        if $z1 == 0 goto label6;

        goto label7;

     label6:
        $i1 = 0;

     label7:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>($i0, $i1, null);

     label8:
        return;
    }

    public boolean scrollByInternal(int, int, android.view.MotionEvent)
    {
        java.util.ArrayList $r4;
        androidx.recyclerview.widget.RecyclerView$a $r2;
        int[] $r3, $r5;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.MotionEvent;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r2 == null goto label01;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r3[0] = 0;

        $r3[1] = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>($i0, $i1, $r3);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i3 = $r3[0];

        $i4 = $r3[1];

        $i5 = $i0 - $i3;

        $i2 = $i1 - $i4;

        $i6 = $i5;

        $i5 = $i2;

        goto label02;

     label01:
        $i3 = 0;

        $i4 = 0;

        $i6 = 0;

        $i5 = 0;

     label02:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label03;

        virtualinvoke r0.<android.view.ViewGroup: void invalidate()>();

     label03:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $r3[0] = 0;

        $r3[1] = 0;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i2 = $i3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>($i3, $i4, $i6, $i5, $r5, 0, $r3);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair>;

        $i3 = $r3[0];

        $i3 = $i6 - $i3;

        $i6 = $r3[1];

        $i5 = $i5 - $i6;

        $i6 = $r3[0];

        if $i6 != 0 goto label05;

        $i6 = $r3[1];

        if $i6 == 0 goto label04;

        goto label05;

     label04:
        $z0 = 0;

        goto label06;

     label05:
        $z0 = 1;

     label06:
        $i6 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset>;

        $i7 = $r3[0];

        $i6 = $i6 - $i7;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchX> = $i6;

        $i6 = r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY>;

        $i7 = $r3[1];

        $i6 = $i6 - $i7;

        r0.<androidx.recyclerview.widget.RecyclerView: int mLastTouchY> = $i6;

        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets>;

        $i6 = $r5[0];

        $i7 = $r3[0];

        $i6 = $i6 + $i7;

        $r5[0] = $i6;

        $i6 = $r5[1];

        $i7 = $r3[1];

        $i6 = $i6 + $i7;

        $r5[1] = $i6;

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getOverScrollMode()>();

        if $i6 == 2 goto label08;

        if $r1 == null goto label07;

        $z1 = staticinvoke <b.i.i.h: boolean a(android.view.MotionEvent,int)>($r1, 8194);

        if $z1 != 0 goto label07;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = (float) $i3;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f3 = (float) $i5;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>($f0, $f1, $f2, $f3);

     label07:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)>($i0, $i1);

     label08:
        if $i2 != 0 goto label09;

        if $i4 == 0 goto label10;

     label09:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)>($i2, $i4);

     label10:
        $z1 = virtualinvoke r0.<android.view.ViewGroup: boolean awakenScrollBars()>();

        if $z1 != 0 goto label11;

        virtualinvoke r0.<android.view.ViewGroup: void invalidate()>();

     label11:
        if $z0 != 0 goto label13;

        if $i2 != 0 goto label13;

        if $i4 == 0 goto label12;

        return 1;

     label12:
        return 0;

     label13:
        return 1;
    }

    public void scrollStep(int, int, int[])
    {
        int[] $r1;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        staticinvoke <b.i.e.b: void a(java.lang.String)>("RV Scroll");

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$s)>($r2);

        if $i0 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($i0, $r4, $r2);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        if $i1 == 0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $i1 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$i: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($i1, $r4, $r2);

        goto label4;

     label3:
        $i1 = 0;

     label4:
        staticinvoke <b.i.e.b: void a()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>(0);

        if $r1 == null goto label5;

        $r1[0] = $i0;

        $r1[1] = $i1;

     label5:
        return;
    }

    public void scrollTo(int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", "RecyclerView does not support scrolling to an absolute position. Use scrollToPosition instead");

        return;
    }

    public void scrollToPosition(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll to position a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: void scrollToPosition(int)>($i0);

        virtualinvoke r0.<android.view.ViewGroup: boolean awakenScrollBars()>();

        return;
    }

    public void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>($r1);

        return;
    }

    public void setAccessibilityDelegateCompat(b.s.a.K)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        b.s.a.K $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: b.s.a.K;

        r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.K mAccessibilityDelegate> = $r1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.K mAccessibilityDelegate>;

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a)>(r0, $r1);

        return;
    }

    public void setAdapter(androidx.recyclerview.widget.RecyclerView$a)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$a $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$a;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$a,boolean,boolean)>($r1, 0, 1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)>(0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$d)
    {
        androidx.recyclerview.widget.RecyclerView$d $r1, $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$d;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$d mChildDrawingOrderCallback>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$d mChildDrawingOrderCallback> = $r2;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$d mChildDrawingOrderCallback>;

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>($z0);

        return;
    }

    public boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$v, int)
    {
        java.util.List $r2;
        androidx.recyclerview.widget.RecyclerView$v $r1;
        int $i0;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        $r1.<androidx.recyclerview.widget.RecyclerView$v: int mPendingAccessibilityState> = $i0;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return 0;

     label1:
        $r3 = $r1.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r3, $i0);

        return 1;
    }

    public void setClipToPadding(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z1 := @parameter0: boolean;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z1 == $z0 goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidateGlows()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding> = $z1;

        specialinvoke r0.<android.view.ViewGroup: void setClipToPadding(boolean)>($z1);

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label2:
        return;
    }

    public void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$e)
    {
        androidx.recyclerview.widget.RecyclerView$e $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$e;

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r1);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e mEdgeEffectFactory> = $r1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void invalidateGlows()>();

        return;
    }

    public void setHasFixedSize(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize> = $z0;

        return;
    }

    public void setItemAnimator(androidx.recyclerview.widget.RecyclerView$f)
    {
        androidx.recyclerview.widget.RecyclerView$f $r1, $r2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$f$b $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$f;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$f: void b()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$f: void a(androidx.recyclerview.widget.RecyclerView$f$b)>(null);

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator> = $r1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r1 == null goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f$b mItemAnimatorListener>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$f: void a(androidx.recyclerview.widget.RecyclerView$f$b)>($r3);

     label2:
        return;
    }

    public void setItemViewCacheSize(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$o $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$o: void f(int)>($i0);

        return;
    }

    public void setLayoutFrozen(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>($z0);

        return;
    }

    public void setLayoutManager(androidx.recyclerview.widget.RecyclerView$i)
    {
        b.s.a.b $r5;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        java.lang.IllegalArgumentException $r7;
        androidx.recyclerview.widget.RecyclerView$f $r3;
        java.lang.StringBuilder $r8;
        androidx.recyclerview.widget.RecyclerView r0, $r6;
        java.lang.String $r9;
        androidx.recyclerview.widget.RecyclerView$i $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$i;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 == null goto label4;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$f: void b()>();

     label2:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$o)>($r4);

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$o)>($r4);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void a()>();

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$o)>(r0, $r4);

     label3:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)>(null);

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout> = null;

        goto label5;

     label4:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void a()>();

     label5:
        $r5 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        virtualinvoke $r5.<b.s.a.b: void c()>();

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout> = $r1;

        if $r1 == null goto label7;

        $r6 = $r1.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r6 != null goto label6;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)>(r0);

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label7;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$i: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)>(r0);

        goto label7;

     label6:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LayoutManager ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a RecyclerView:");

        r0 = $r1.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r9 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label7:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$o: void j()>();

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void setLayoutTransition(android.animation.LayoutTransition)
    {
        android.animation.LayoutTransition $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        android.animation.Animator $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.animation.LayoutTransition;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 18 goto label2;

        if $r1 != null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>(0);

        return;

     label1:
        $r2 = virtualinvoke $r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(0);

        if $r2 != null goto label2;

        $r2 = virtualinvoke $r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(1);

        if $r2 != null goto label2;

        $r2 = virtualinvoke $r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(2);

        if $r2 != null goto label2;

        $r2 = virtualinvoke $r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(3);

        if $r2 != null goto label2;

        $r2 = virtualinvoke $r1.<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>(4);

        if $r2 != null goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>(1);

        return;

     label2:
        if $r1 != null goto label3;

        specialinvoke r0.<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>(null);

        return;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Providing a LayoutTransition into RecyclerView is not supported. Please use setItemAnimator() instead for animating changes to the items in this RecyclerView");

        throw $r3;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        virtualinvoke $r1.<b.i.i.l: void a(boolean)>($z0);

        return;
    }

    public void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$k)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$k $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$k;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$k mOnFlingListener> = $r1;

        return;
    }

    public void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$m)
    {
        androidx.recyclerview.widget.RecyclerView$m $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$m;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$m mScrollListener> = $r1;

        return;
    }

    public void setPreserveFocusAfterLayout(boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = $z0;

        return;
    }

    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$n)
    {
        androidx.recyclerview.widget.RecyclerView$n $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$n;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: void a(androidx.recyclerview.widget.RecyclerView$n)>($r1);

        return;
    }

    public void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$p)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$p $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$p;

        r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$p mRecyclerListener> = $r1;

        return;
    }

    public void setScrollState(int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: int mScrollState> = $i0;

        if $i0 == 2 goto label2;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()>();

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)>($i0);

        return;
    }

    public void setScrollingTouchSlop(int)
    {
        android.content.Context $r1;
        android.view.ViewConfiguration $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        androidx.recyclerview.widget.RecyclerView r0;
        java.lang.String $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScrollingTouchSlop(): bad argument constant ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; using default value");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", $r4);

        goto label2;

     label1:
        $i0 = virtualinvoke $r2.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop> = $i0;

        return;

     label2:
        $i0 = virtualinvoke $r2.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<androidx.recyclerview.widget.RecyclerView: int mTouchSlop> = $i0;

        return;
    }

    public void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$t)
    {
        androidx.recyclerview.widget.RecyclerView$t $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$t;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: void a(androidx.recyclerview.widget.RecyclerView$t)>($r1);

        return;
    }

    public boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label4;

        if $r1 == null goto label1;

        $i0 = staticinvoke <b.i.i.a.a: int a(android.view.accessibility.AccessibilityEvent)>($r1);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        if $i0 != 0 goto label3;

        $i0 = 0;

     label3:
        $i1 = r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        $i0 = $i0 | $i1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = $i0;

        return 1;

     label4:
        return 0;
    }

    public void smoothScrollBy(int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>($i0, $i1, null);

        return;
    }

    public void smoothScrollBy(int, int, android.view.animation.Interpolator)
    {
        android.view.animation.Interpolator $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.animation.Interpolator;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>($i0, $i1, $r1, -2147483648);

        return;
    }

    public void smoothScrollBy(int, int, android.view.animation.Interpolator, int)
    {
        android.view.animation.Interpolator $r1;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.animation.Interpolator;

        $i2 := @parameter3: int;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>($i0, $i1, $r1, $i2, 0);

        return;
    }

    public void smoothScrollBy(int, int, android.view.animation.Interpolator, int, boolean)
    {
        android.view.animation.Interpolator $r1;
        androidx.recyclerview.widget.RecyclerView$u $r3;
        byte $b3;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 := @parameter2: android.view.animation.Interpolator;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label01:
        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z1 == 0 goto label02;

        return;

     label02:
        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $b3 = 0;

        if $z1 != 0 goto label03;

        $i1 = 0;

     label03:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        $z1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z1 != 0 goto label04;

        $i2 = 0;

     label04:
        if $i1 != 0 goto label05;

        if $i2 == 0 goto label13;

     label05:
        if $i0 == -2147483648 goto label07;

        if $i0 <= 0 goto label06;

        goto label07;

     label06:
        $z1 = 0;

        goto label08;

     label07:
        $z1 = 1;

     label08:
        if $z1 == 0 goto label12;

        if $z0 == 0 goto label11;

        if $i1 == 0 goto label09;

        $b3 = 1;

     label09:
        if $i2 == 0 goto label10;

        $b3 = $b3 | 2;

     label10:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>($b3, 1);

     label11:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$u mViewFlinger>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$u: void a(int,int,int,android.view.animation.Interpolator)>($i1, $i2, $i0, $r1);

        return;

     label12:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>($i1, $i2);

     label13:
        return;
    }

    public void smoothScrollToPosition(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$i: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$s,int)>(r0, $r1, $i0);

        return;
    }

    public void startInterceptRequestLayout()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        $i0 = $i0 + 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = $i0;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i0 != 1 goto label1;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 != 0 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

     label1:
        return;
    }

    public boolean startNestedScroll(int)
    {
        int $i0;
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean c(int)>($i0);

        return $z0;
    }

    public boolean startNestedScroll(int, int)
    {
        int $i0, $i1;
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<b.i.i.l: boolean a(int,int)>($i1, $i0);

        return $z0;
    }

    public void stopInterceptRequestLayout(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$a $r2;
        int $i0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i0 >= 1 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = 1;

     label1:
        if $z0 != 0 goto label2;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z1 != 0 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

     label2:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        if $i0 != 1 goto label4;

        if $z0 == 0 goto label3;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>;

        if $z0 == 0 goto label3;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 != 0 goto label3;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 == null goto label3;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r2 == null goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>();

     label3:
        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 != 0 goto label4;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

     label4:
        $i0 = r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth>;

        $i0 = $i0 - 1;

        r0.<androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth> = $i0;

        return;
    }

    public void stopNestedScroll()
    {
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        virtualinvoke $r1.<b.i.i.l: void d()>();

        return;
    }

    public void stopNestedScroll(int)
    {
        int $i0;
        b.i.i.l $r1;
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: b.i.i.l getScrollingChildHelper()>();

        virtualinvoke $r1.<b.i.i.l: void d(int)>($i0);

        return;
    }

    public void stopScroll()
    {
        androidx.recyclerview.widget.RecyclerView r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setScrollState(int)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()>();

        return;
    }

    public final void suppressLayout(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$a $r2;
        android.view.MotionEvent $r3;
        long $l0;
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$i $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed>;

        if $z0 == $z1 goto label3;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>("Do not suppressLayout in layout or scroll");

        if $z0 != 0 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed> = 0;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered> = 0;

        return;

     label2:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l0, 3, 0.0F, 0.0F, 0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>($r3);

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void stopScroll()>();

     label3:
        return;
    }

    public void swapAdapter(androidx.recyclerview.widget.RecyclerView$a, boolean)
    {
        androidx.recyclerview.widget.RecyclerView r0;
        androidx.recyclerview.widget.RecyclerView$a $r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$a;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$a,boolean,boolean)>($r1, 1, $z0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)>(1);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

        return;
    }

    public void viewRangeUpdate(int, int, java.lang.Object)
    {
        b.s.a.b $r2;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r6;
        androidx.recyclerview.widget.RecyclerView$o $r7;
        androidx.recyclerview.widget.RecyclerView$v $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r3;
        java.lang.Object $r1;
        androidx.recyclerview.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $i3 = virtualinvoke $r2.<b.s.a.b: int b()>();

        $i2 = $i0 + $i1;

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label4;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        $r3 = virtualinvoke $r2.<b.s.a.b: android.view.View e(int)>($i4);

        $r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r3);

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i5 = $r4.<androidx.recyclerview.widget.RecyclerView$v: int mPosition>;

        if $i5 < $i0 goto label3;

        if $i5 >= $i2 goto label3;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: void addFlags(int)>(2);

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: void addChangePayload(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r5;

        $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label3:
        $i4 = $i4 + 1;

        goto label1;

     label4:
        $r7 = r0.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$o: void c(int,int)>($i0, $i1);

        return;
    }
}
