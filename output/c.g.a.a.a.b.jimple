public final class c.g.a.a.a.b extends java.lang.Object implements c.g.a.g.g, c.g.a.g.s
{
    public static int a;
    public static int b;
    public final java.util.concurrent.atomic.AtomicReference c;
    public final java.lang.Runnable d;
    public final c.g.a.g.s e;

    public void <init>(c.g.a.g.s, java.util.concurrent.Executor, c.g.a.g.s)
    {
        c.g.a.a.a.b r0;
        java.util.concurrent.Executor $r1;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Runnable $r8;
        java.util.List $r5;
        c.g.a.g.s $r2, $r3;
        c.g.a.l.m $r6;
        c.g.a.a.a.b$a $r7;

        r0 := @this: c.g.a.a.a.b;

        $r2 := @parameter0: c.g.a.g.s;

        $r1 := @parameter1: java.util.concurrent.Executor;

        $r3 := @parameter2: c.g.a.g.s;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r6 = staticinvoke <c.g.a.l.m: c.g.a.l.m b(java.lang.Object)>($r5);

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r6);

        r0.<c.g.a.a.a.b: java.util.concurrent.atomic.AtomicReference c> = $r4;

        r0.<c.g.a.a.a.b: c.g.a.g.s e> = $r3;

        $r7 = new c.g.a.a.a.b$a;

        specialinvoke $r7.<c.g.a.a.a.b$a: void <init>(c.g.a.a.a.b,c.g.a.g.s,byte)>(r0, $r2, 0);

        $r8 = staticinvoke <c.g.a.f.a: java.lang.Runnable a(java.util.concurrent.Executor,java.lang.Runnable)>($r1, $r7);

        r0.<c.g.a.a.a.b: java.lang.Runnable d> = $r8;

        return;
    }

    public static java.util.concurrent.atomic.AtomicReference a(c.g.a.a.a.b)
    {
        c.g.a.a.a.b $r0;
        int $i0, $i1, $i2;
        java.util.concurrent.atomic.AtomicReference r1;

        $r0 := @parameter0: c.g.a.a.a.b;

        $i0 = <c.g.a.a.a.b: int a>;

        $i1 = $i0 & 119;

        $i0 = $i0 | 119;

        $i1 = $i1 + $i0;

        $i1 = $i1 % 128;

        <c.g.a.a.a.b: int b> = $i1;

        r1 = $r0.<c.g.a.a.a.b: java.util.concurrent.atomic.AtomicReference c>;

        $i0 = <c.g.a.a.a.b: int b>;

        $i1 = $i0 & 119;

        $i0 = $i0 ^ 119;

        $i2 = $i0 | $i1;

        $i0 = $i1 ^ $i2;

        $i1 = $i2 & $i1;

        $i1 = $i1 << 1;

        $i1 = $i0 + $i1;

        $i1 = $i1 % 128;

        <c.g.a.a.a.b: int a> = $i1;

        return r1;
    }

    public static c.g.a.g.s b(c.g.a.a.a.b)
    {
        java.lang.Throwable $r1;
        c.g.a.a.a.b $r0;
        java.lang.NullPointerException r3, $r4;
        c.g.a.g.s r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: c.g.a.a.a.b;

        $i0 = <c.g.a.a.a.b: int a>;

        $i1 = $i0 & 62;

        $i0 = $i0 | 62;

        $i0 = $i1 + $i0;

        $i1 = -1;

        $i1 = $i0 ^ $i1;

        $i2 = -1;

        $i0 = $i0 & $i2;

        $z0 = 1;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.a.a.b: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label1;

        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        r2 = $r0.<c.g.a.a.a.b: c.g.a.g.s e>;

        return r2;

     label2:
        r2 = $r0.<c.g.a.a.a.b: c.g.a.g.s e>;

     label3:
        $r4 = new java.lang.NullPointerException;

     label4:
        r3 = $r4;

     label5:
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r3;

     label6:
        $r1 := @caughtexception;

        throw $r1;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public final java.lang.Object a()
    {
        java.lang.Throwable $r4;
        c.g.a.a.a.a $r2;
        c.g.a.a.a.b r0;
        c.g.a.l.l $r3;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: c.g.a.a.a.b;

        $r2 = new c.g.a.a.a.a;

        specialinvoke $r2.<c.g.a.a.a.a: void <init>()>();

        virtualinvoke r0.<c.g.a.a.a.b: void a(c.g.a.g.g)>($r2);

        $r1 = virtualinvoke $r2.<c.g.a.a.a.a: java.lang.Object a()>();

        $r3 = (c.g.a.l.l) $r1;

        $i0 = <c.g.a.a.a.b: int a>;

        $i1 = $i0 & 18;

        $i0 = $i0 | 18;

        $i1 = $i1 + $i0;

        $z0 = 1;

        $i1 = $i1 - 1;

        $i0 = $i1 % 128;

        <c.g.a.a.a.b: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label1;

        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $i1 = 86 / 0;

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public final void a(c.g.a.g.g)
    {
        java.lang.Throwable $r12, $r13;
        long $l2;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Runnable $r14;
        java.lang.NullPointerException r15, $r17;
        java.util.ArrayList $r7, $r16;
        byte $b3;
        java.lang.Long $r11;
        int $i0, $i1, $i4;
        boolean $z0, $z1, $z2;
        c.g.a.a.a.b r0;
        c.g.a.l.l $r9;
        c.g.a.g.p $r5;
        java.util.List $r6;
        c.g.a.g.s $r10;
        c.g.a.l.m $r4, $r8;
        c.g.a.g.g $r1;
        java.lang.Object $r3;

        r0 := @this: c.g.a.a.a.b;

        $r1 := @parameter0: c.g.a.g.g;

     label01:
        $r2 = r0.<c.g.a.a.a.b: java.util.concurrent.atomic.AtomicReference c>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (c.g.a.l.m) $r3;

        $z0 = virtualinvoke $r4.<c.g.a.l.m: boolean b()>();

        $z1 = 0;

        if $z0 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        if $z0 == 1 goto label04;

        $r5 = virtualinvoke $r4.<c.g.a.l.m: c.g.a.g.p a()>();

        $r3 = virtualinvoke $r5.<c.g.a.g.p: java.lang.Object a()>();

        $r6 = (java.util.List) $r3;

        $r16 = new java.util.ArrayList;

        $r7 = $r16;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i0 = $i0 + 2;

        $i0 = $i0 - 1;

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i0);

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r8 = staticinvoke <c.g.a.l.m: c.g.a.l.m c(java.lang.Object)>($r7);

        $i1 = <c.g.a.a.a.b: int b>;

        $i0 = $i1 ^ 83;

        $i1 = $i1 & 83;

        $i1 = $i1 << 1;

        $i1 = neg $i1;

        $i1 = neg $i1;

        $i4 = -1;

        $i1 = $i1 ^ $i4;

        $i0 = $i0 - $i1;

        $i0 = $i0 - 1;

        $i0 = $i0 % 128;

        <c.g.a.a.a.b: int a> = $i0;

        $z0 = 0;

        goto label15;

     label04:
        $i1 = <c.g.a.a.a.b: int a>;

        $i0 = $i1 & 123;

        $i1 = $i1 | 123;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.a.a.b: int b> = $i0;

        $r5 = virtualinvoke $r4.<c.g.a.l.m: c.g.a.g.p c()>();

        $r3 = virtualinvoke $r5.<c.g.a.g.p: java.lang.Object a()>();

        $r9 = (c.g.a.l.l) $r3;

        $r10 = r0.<c.g.a.a.a.b: c.g.a.g.s e>;

        $r3 = interfaceinvoke $r10.<c.g.a.g.s: java.lang.Object a()>();

        $r11 = (java.lang.Long) $r3;

        $l2 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        $z0 = virtualinvoke $r9.<c.g.a.l.l: boolean b(long)>($l2);

        if $z0 == 0 goto label05;

        $b3 = 65;

        goto label06;

     label05:
        $b3 = 54;

     label06:
        if $b3 == 54 goto label14;

        $i1 = <c.g.a.a.a.b: int a>;

        $i0 = $i1 & 104;

        $i1 = $i1 | 104;

        $i0 = $i0 + $i1;

        $i1 = -1;

        $i1 = $i0 & $i1;

        $i4 = -1;

        $i0 = $i0 | $i4;

        $i0 = $i1 + $i0;

        $i1 = $i0 % 128;

        <c.g.a.a.a.b: int b> = $i1;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label07;

        $z1 = 0;

        goto label08;

     label07:
        $z1 = 1;

     label08:
        if $z1 == 1 goto label12;

        interfaceinvoke $r1.<c.g.a.g.g: void accept(java.lang.Object)>($r9);

     label09:
        $i0 = 38 / 0;

     label10:
        goto label13;

     label11:
        $r12 := @caughtexception;

        throw $r12;

     label12:
        interfaceinvoke $r1.<c.g.a.g.g: void accept(java.lang.Object)>($r9);

     label13:
        $i1 = <c.g.a.a.a.b: int a>;

        $i0 = $i1 & 75;

        $i4 = -1;

        $i4 = $i0 ^ $i4;

        $i1 = $i1 | 75;

        $i1 = $i1 & $i4;

        $i0 = $i0 << 1;

        $i0 = neg $i0;

        $i4 = neg $i0;

        $i0 = $i1 & $i4;

        $i1 = $i1 | $i4;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.a.a.b: int b> = $i0;

        return;

     label14:
        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        $r8 = staticinvoke <c.g.a.l.m: c.g.a.l.m c(java.lang.Object)>($r6);

        $i1 = <c.g.a.a.a.b: int b>;

        $i0 = $i1 & 18;

        $i1 = $i1 | 18;

        $i0 = $i0 + $i1;

        $i1 = -1;

        $i1 = $i0 | $i1;

        $i1 = $i1 << 1;

        $i4 = -1;

        $i0 = $i0 ^ $i4;

        $i0 = $i1 - $i0;

        $i0 = $i0 % 128;

        <c.g.a.a.a.b: int a> = $i0;

        $z0 = 1;

     label15:
        $r2 = r0.<c.g.a.a.a.b: java.util.concurrent.atomic.AtomicReference c>;

        $z2 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>($r4, $r8);

        if $z2 == 0 goto label16;

        $z2 = 0;

        goto label17;

     label16:
        $z2 = 1;

     label17:
        if $z2 == 0 goto label18;

        goto label01;

     label18:
        $i1 = <c.g.a.a.a.b: int b>;

        $i0 = $i1 & 11;

        $i1 = $i1 ^ 11;

        $i1 = $i1 | $i0;

        $i1 = neg $i1;

        $i4 = neg $i1;

        $i1 = $i0 ^ $i4;

        $i0 = $i4 & $i0;

        $i0 = $i0 << 1;

        $i0 = $i1 + $i0;

        $i1 = $i0 % 128;

        <c.g.a.a.a.b: int a> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label19;

        $b3 = 33;

        goto label20;

     label19:
        $b3 = 57;

     label20:
        if $b3 == 57 goto label25;

     label21:
        $r17 = new java.lang.NullPointerException;

     label22:
        r15 = $r17;

     label23:
        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r15;

     label24:
        $r13 := @caughtexception;

        throw $r13;

     label25:
        if $z0 == 0 goto label26;

        goto label27;

     label26:
        $z1 = 1;

     label27:
        if $z1 == 0 goto label28;

        goto label29;

     label28:
        $r14 = r0.<c.g.a.a.a.b: java.lang.Runnable d>;

        interfaceinvoke $r14.<java.lang.Runnable: void run()>();

        $i1 = <c.g.a.a.a.b: int a>;

        $i0 = $i1 ^ 21;

        $i1 = $i1 & 21;

        $i1 = $i1 << 1;

        $i0 = $i0 + $i1;

        $i1 = $i0 % 128;

        <c.g.a.a.a.b: int b> = $i1;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label29;

        goto label29;

     label29:
        $i0 = <c.g.a.a.a.b: int b>;

        $i1 = -8;

        $i1 = $i0 & $i1;

        $i4 = -1;

        $i4 = $i0 ^ $i4;

        $i4 = $i4 & 7;

        $i1 = $i1 | $i4;

        $i0 = $i0 & 7;

        $i0 = $i0 << 1;

        $i4 = $i1 | $i0;

        $i4 = $i4 << 1;

        $i0 = $i0 ^ $i1;

        $i0 = $i4 - $i0;

        $i0 = $i0 % 128;

        <c.g.a.a.a.b: int a> = $i0;

        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    public final void accept(java.lang.Object)
    {
        java.lang.Throwable $r3;
        c.g.a.a.a.b r0;
        byte $b2;
        int $i0, $i1, $i3;
        java.lang.Object $r1;
        c.g.a.g.g $r2;

        r0 := @this: c.g.a.a.a.b;

        $r1 := @parameter0: java.lang.Object;

        $i0 = <c.g.a.a.a.b: int a>;

        $i1 = $i0 ^ 23;

        $i0 = $i0 & 23;

        $i0 = $i0 << 1;

        $i3 = -1;

        $i0 = $i0 ^ $i3;

        $i1 = $i1 - $i0;

        $i0 = -1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.a.a.b: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label1;

        $b2 = 36;

        goto label2;

     label1:
        $b2 = 74;

     label2:
        if $b2 == 74 goto label6;

        $r2 = (c.g.a.g.g) $r1;

        virtualinvoke r0.<c.g.a.a.a.b: void a(c.g.a.g.g)>($r2);

     label3:
        $i1 = 50 / 0;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        throw $r3;

     label6:
        $r2 = (c.g.a.g.g) $r1;

        virtualinvoke r0.<c.g.a.a.a.b: void a(c.g.a.g.g)>($r2);

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public final c.g.a.a.a.b b()
    {
        java.lang.Throwable $r2;
        c.g.a.a.a.b r0;
        int $i0, $i1, $i2;
        java.lang.Runnable $r1;
        boolean $z0;

        r0 := @this: c.g.a.a.a.b;

        $i0 = <c.g.a.a.a.b: int b>;

        $i1 = $i0 ^ 23;

        $i0 = $i0 & 23;

        $z0 = 1;

        $i0 = $i0 << 1;

        $i2 = -1;

        $i0 = $i0 ^ $i2;

        $i1 = $i1 - $i0;

        $i1 = $i1 - 1;

        $i0 = $i1 % 128;

        <c.g.a.a.a.b: int a> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        $r1 = r0.<c.g.a.a.a.b: java.lang.Runnable d>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return r0;

     label2:
        $r1 = r0.<c.g.a.a.a.b: java.lang.Runnable d>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label3:
        $i1 = 89 / 0;

     label4:
        return r0;

     label5:
        $r2 := @caughtexception;

        throw $r2;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public final c.g.a.l.l c()
    {
        java.lang.Throwable $r4;
        c.g.a.a.a.a $r2, $r5;
        c.g.a.a.a.b r0;
        c.g.a.l.l $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: c.g.a.a.a.b;

        $r5 = new c.g.a.a.a.a;

        $r2 = $r5;

        specialinvoke $r5.<c.g.a.a.a.a: void <init>()>();

        virtualinvoke r0.<c.g.a.a.a.b: void a(c.g.a.g.g)>($r2);

        $r1 = virtualinvoke $r2.<c.g.a.a.a.a: java.lang.Object a()>();

        $r3 = (c.g.a.l.l) $r1;

        $i0 = <c.g.a.a.a.b: int b>;

        $i1 = $i0 & 13;

        $i2 = -1;

        $i2 = $i1 ^ $i2;

        $i0 = $i0 | 13;

        $i0 = $i0 & $i2;

        $z0 = 1;

        $i1 = $i1 << 1;

        $i1 = neg $i1;

        $i2 = neg $i1;

        $i1 = $i0 ^ $i2;

        $i0 = $i0 & $i2;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.a.a.b: int a> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $i1 = 62 / 0;

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <c.g.a.a.a.b: int b> = 1;

        <c.g.a.a.a.b: int a> = 0;

        return;
    }
}
