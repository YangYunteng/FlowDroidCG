public class org.dom4j.dom.DOMDocument extends org.dom4j.tree.DefaultDocument implements org.w3c.dom.Document
{
    public static final org.dom4j.dom.DOMDocumentFactory DOCUMENT_FACTORY;

    static void <clinit>()
    {
        org.dom4j.dom.DOMDocumentFactory $r1;
        org.dom4j.DocumentFactory $r0;

        $r0 = staticinvoke <org.dom4j.dom.DOMDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        $r1 = (org.dom4j.dom.DOMDocumentFactory) $r0;

        <org.dom4j.dom.DOMDocument: org.dom4j.dom.DOMDocumentFactory DOCUMENT_FACTORY> = $r1;

        return;
    }

    public void <init>()
    {
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        specialinvoke r0.<org.dom4j.tree.DefaultDocument: void <init>()>();

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void init()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.DefaultDocument: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void init()>();

        return;
    }

    public void <init>(java.lang.String, org.dom4j.dom.DOMElement, org.dom4j.dom.DOMDocumentType)
    {
        org.dom4j.dom.DOMDocumentType $r3;
        java.lang.String $r1;
        org.dom4j.dom.DOMElement $r2;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.dom.DOMElement;

        $r3 := @parameter2: org.dom4j.dom.DOMDocumentType;

        specialinvoke r0.<org.dom4j.tree.DefaultDocument: void <init>(java.lang.String,org.dom4j.Element,org.dom4j.DocumentType)>($r1, $r2, $r3);

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void init()>();

        return;
    }

    public void <init>(org.dom4j.dom.DOMDocumentType)
    {
        org.dom4j.dom.DOMDocumentType $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.dom4j.dom.DOMDocumentType;

        specialinvoke r0.<org.dom4j.tree.DefaultDocument: void <init>(org.dom4j.DocumentType)>($r1);

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void init()>();

        return;
    }

    public void <init>(org.dom4j.dom.DOMElement)
    {
        org.dom4j.dom.DOMElement $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.dom4j.dom.DOMElement;

        specialinvoke r0.<org.dom4j.tree.DefaultDocument: void <init>(org.dom4j.Element)>($r1);

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void init()>();

        return;
    }

    public void <init>(org.dom4j.dom.DOMElement, org.dom4j.dom.DOMDocumentType)
    {
        org.dom4j.dom.DOMDocumentType $r2;
        org.dom4j.dom.DOMElement $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.dom4j.dom.DOMElement;

        $r2 := @parameter1: org.dom4j.dom.DOMDocumentType;

        specialinvoke r0.<org.dom4j.tree.DefaultDocument: void <init>(org.dom4j.Element,org.dom4j.DocumentType)>($r1, $r2);

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void init()>();

        return;
    }

    private void checkNewChildNode(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Node $r1;
        org.w3c.dom.DOMException $r2;
        int $i1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.w3c.dom.Node;

        $s0 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        $i1 = (int) $s0;

        if $i1 == 8 goto label2;

        $i1 = (int) $s0;

        if $i1 == 7 goto label2;

        $i1 = (int) $s0;

        if $i1 != 10 goto label1;

        return;

     label1:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, "Given node cannot be a child of document");

        throw $r2;

     label2:
        return;
    }

    private void init()
    {
        org.dom4j.dom.DOMDocumentFactory $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = <org.dom4j.dom.DOMDocument: org.dom4j.dom.DOMDocumentFactory DOCUMENT_FACTORY>;

        virtualinvoke r0.<org.dom4j.tree.DefaultDocument: void setDocumentFactory(org.dom4j.DocumentFactory)>($r1);

        return;
    }

    public org.w3c.dom.Node appendChild(org.w3c.dom.Node)
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void checkNewChildNode(org.w3c.dom.Node)>($r1);

        staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)>(r0, $r1);

        return $r1;
    }

    public org.w3c.dom.Node cloneNode(boolean)
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node cloneNode(org.dom4j.Node,boolean)>(r0, $z0);

        return $r1;
    }

    public org.w3c.dom.Attr createAttribute(java.lang.String)
    {
        org.dom4j.QName $r3;
        java.lang.String $r1;
        org.w3c.dom.Attr $r5;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.Attribute $r4;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r4 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)>(null, $r3, "");

        $r5 = (org.w3c.dom.Attr) $r4;

        return $r5;
    }

    public org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String)
    {
        org.dom4j.QName $r4;
        java.lang.String $r1, $r2;
        org.w3c.dom.Attr $r6;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.Attribute $r5;
        org.dom4j.DocumentFactory $r3;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r4 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String,java.lang.String)>($r2, $r1);

        $r3 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r5 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)>(null, $r4, null);

        $r6 = (org.w3c.dom.Attr) $r5;

        return $r6;
    }

    public org.w3c.dom.CDATASection createCDATASection(java.lang.String)
    {
        org.dom4j.CDATA $r3;
        org.w3c.dom.CDATASection $r4;
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.CDATA createCDATA(java.lang.String)>($r1);

        $r4 = (org.w3c.dom.CDATASection) $r3;

        return $r4;
    }

    public org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.dom4j.Comment $r3;
        java.lang.String $r1;
        org.w3c.dom.Comment $r4;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Comment createComment(java.lang.String)>($r1);

        $r4 = (org.w3c.dom.Comment) $r3;

        return $r4;
    }

    public org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.dom4j.dom.DOMDocument r0;
        java.lang.NullPointerException r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        staticinvoke <org.dom4j.dom.DOMNodeHelper: void notSupported()>();

        r1 = new java.lang.NullPointerException;

        specialinvoke r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r1;
    }

    public org.w3c.dom.Element createElement(java.lang.String)
    {
        org.w3c.dom.Element $r4;
        org.dom4j.Element $r3;
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Element createElement(java.lang.String)>($r1);

        $r4 = (org.w3c.dom.Element) $r3;

        return $r4;
    }

    public org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element $r6;
        org.dom4j.QName $r4;
        org.dom4j.Element $r5;
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r3;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r4 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String,java.lang.String)>($r2, $r1);

        $r3 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r5 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.Element createElement(org.dom4j.QName)>($r4);

        $r6 = (org.w3c.dom.Element) $r5;

        return $r6;
    }

    public org.w3c.dom.EntityReference createEntityReference(java.lang.String)
    {
        org.dom4j.Entity $r3;
        org.w3c.dom.EntityReference $r4;
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Entity createEntity(java.lang.String,java.lang.String)>($r1, null);

        $r4 = (org.w3c.dom.EntityReference) $r3;

        return $r4;
    }

    public org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String)
    {
        org.w3c.dom.ProcessingInstruction $r5;
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.ProcessingInstruction $r4;
        org.dom4j.DocumentFactory $r3;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r4 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r2, $r1);

        $r5 = (org.w3c.dom.ProcessingInstruction) $r4;

        return $r5;
    }

    public org.w3c.dom.Text createTextNode(java.lang.String)
    {
        org.w3c.dom.Text $r4;
        org.dom4j.Text $r3;
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Text createText(java.lang.String)>($r1);

        $r4 = (org.w3c.dom.Text) $r3;

        return $r4;
    }

    public org.w3c.dom.NamedNodeMap getAttributes()
    {
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        return null;
    }

    public org.w3c.dom.NodeList getChildNodes()
    {
        java.util.List $r1;
        org.w3c.dom.NodeList $r2;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: java.util.List content()>();

        $r2 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.NodeList createNodeList(java.util.List)>($r1);

        return $r2;
    }

    public org.w3c.dom.DocumentType getDoctype()
    {
        org.dom4j.DocumentType $r1;
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.DocumentType $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = virtualinvoke r0.<org.dom4j.tree.DefaultDocument: org.dom4j.DocumentType getDocType()>();

        $r2 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.DocumentType asDOMDocumentType(org.dom4j.DocumentType)>($r1);

        return $r2;
    }

    public org.w3c.dom.Element getDocumentElement()
    {
        org.dom4j.Element $r1;
        org.w3c.dom.Element $r2;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = virtualinvoke r0.<org.dom4j.tree.DefaultDocument: org.dom4j.Element getRootElement()>();

        $r2 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Element asDOMElement(org.dom4j.Node)>($r1);

        return $r2;
    }

    public org.dom4j.DocumentFactory getDocumentFactory()
    {
        org.dom4j.dom.DOMDocumentFactory r2;
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.DocumentFactory $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = specialinvoke r0.<org.dom4j.tree.DefaultDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        if $r1 != null goto label1;

        r2 = <org.dom4j.dom.DOMDocument: org.dom4j.dom.DOMDocumentFactory DOCUMENT_FACTORY>;

        return r2;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.tree.DefaultDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        return $r1;
    }

    public org.w3c.dom.Element getElementById(java.lang.String)
    {
        org.w3c.dom.Element $r3;
        org.dom4j.Element $r2;
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: org.dom4j.Element elementByID(java.lang.String)>($r1);

        $r3 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Element asDOMElement(org.dom4j.Node)>($r2);

        return $r3;
    }

    public org.w3c.dom.NodeList getElementsByTagName(java.lang.String)
    {
        org.w3c.dom.NodeList $r2;
        java.lang.String $r3;
        org.dom4j.dom.DOMDocument r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r3 := @parameter0: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.dom4j.dom.DOMNodeHelper: void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)>($r1, r0, $r3);

        $r2 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.NodeList createNodeList(java.util.List)>($r1);

        return $r2;
    }

    public org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)
    {
        org.w3c.dom.NodeList $r3;
        java.lang.String $r1, $r4;
        org.dom4j.dom.DOMDocument r0;
        java.util.ArrayList $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        staticinvoke <org.dom4j.dom.DOMNodeHelper: void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)>($r2, r0, $r4, $r1);

        $r3 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.NodeList createNodeList(java.util.List)>($r2);

        return $r3;
    }

    public org.w3c.dom.Node getFirstChild()
    {
        org.dom4j.dom.DOMDocument r0;
        org.dom4j.Node $r1;
        org.w3c.dom.Node $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: org.dom4j.Node node(int)>(0);

        $r2 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node asDOMNode(org.dom4j.Node)>($r1);

        return $r2;
    }

    public org.w3c.dom.DOMImplementation getImplementation()
    {
        org.dom4j.dom.DOMDocumentFactory r3;
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.DOMImplementation $r2;
        org.dom4j.DocumentFactory $r1;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $z0 = $r1 instanceof org.w3c.dom.DOMImplementation;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.dom.DOMDocument: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r2 = (org.w3c.dom.DOMImplementation) $r1;

        return $r2;

     label1:
        r3 = <org.dom4j.dom.DOMDocument: org.dom4j.dom.DOMDocumentFactory DOCUMENT_FACTORY>;

        return r3;
    }

    public org.w3c.dom.Node getLastChild()
    {
        org.dom4j.Node $r1;
        org.w3c.dom.Node $r2;
        int $i0, $i1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $i0 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: int nodeCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: org.dom4j.Node node(int)>($i0);

        $r2 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node asDOMNode(org.dom4j.Node)>($r1);

        return $r2;
    }

    public java.lang.String getLocalName()
    {
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: java.lang.String getLocalName(org.dom4j.Node)>(r0);

        return $r1;
    }

    public java.lang.String getNamespaceURI()
    {
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: java.lang.String getNamespaceURI(org.dom4j.Node)>(r0);

        return $r1;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node getNextSibling(org.dom4j.Node)>(r0);

        return $r1;
    }

    public java.lang.String getNodeName()
    {
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        return "#document";
    }

    public java.lang.String getNodeValue()
    {
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        return null;
    }

    public org.w3c.dom.Document getOwnerDocument()
    {
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        return null;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node getParentNode(org.dom4j.Node)>(r0);

        return $r1;
    }

    public java.lang.String getPrefix()
    {
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: java.lang.String getPrefix(org.dom4j.Node)>(r0);

        return $r1;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node getPreviousSibling(org.dom4j.Node)>(r0);

        return $r1;
    }

    public boolean hasAttributes()
    {
        org.dom4j.dom.DOMDocument r0;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $z0 = staticinvoke <org.dom4j.dom.DOMNodeHelper: boolean hasAttributes(org.dom4j.Node)>(r0);

        return $z0;
    }

    public boolean hasChildNodes()
    {
        int $i0;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $i0 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: int nodeCount()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.w3c.dom.Node importNode(org.w3c.dom.Node, boolean)
    {
        org.w3c.dom.Node $r1;
        org.dom4j.dom.DOMDocument r0;
        java.lang.NullPointerException r2;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.w3c.dom.Node;

        $z0 := @parameter1: boolean;

        staticinvoke <org.dom4j.dom.DOMNodeHelper: void notSupported()>();

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r2;
    }

    public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1, $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void checkNewChildNode(org.w3c.dom.Node)>($r1);

        staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r1, $r2);

        return $r1;
    }

    public boolean isSupported(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMDocument r0;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.dom4j.dom.DOMNodeHelper: boolean isSupported(org.dom4j.Node,java.lang.String,java.lang.String)>(r0, $r2, $r1);

        return $z0;
    }

    public org.w3c.dom.Node removeChild(org.w3c.dom.Node)
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.w3c.dom.Node;

        staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node removeChild(org.dom4j.Node,org.w3c.dom.Node)>(r0, $r1);

        return $r1;
    }

    public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.dom4j.dom.DOMDocument r0;
        org.w3c.dom.Node $r1, $r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<org.dom4j.dom.DOMDocument: void checkNewChildNode(org.w3c.dom.Node)>($r1);

        staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node replaceChild(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)>(r0, $r1, $r2);

        return $r2;
    }

    public void setNodeValue(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void setPrefix(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.dom.DOMDocument r0;
        java.lang.NullPointerException r2;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <org.dom4j.dom.DOMNodeHelper: void setPrefix(org.dom4j.Node,java.lang.String)>(r0, $r1);

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r2;
    }

    public boolean supports(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMDocument r0;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocument;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.dom4j.dom.DOMNodeHelper: boolean supports(org.dom4j.Node,java.lang.String,java.lang.String)>(r0, $r2, $r1);

        return $z0;
    }
}
