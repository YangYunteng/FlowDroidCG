public final class k.a.e.c$a extends java.lang.Object
{
    public final java.util.List a;
    public final l.g b;
    public final int c;
    public int d;
    public k.a.e.b[] e;
    public int f;
    public int g;
    public int h;

    public void <init>(int, int, l.x)
    {
        l.g $r2;
        java.util.ArrayList $r4;
        k.a.e.c$a r0;
        l.x $r1;
        int $i0, $i1, $i2, $i3;
        k.a.e.b[] $r3;

        r0 := @this: k.a.e.c$a;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: l.x;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<k.a.e.c$a: java.util.List a> = $r4;

        $r3 = newarray (k.a.e.b)[8];

        r0.<k.a.e.c$a: k.a.e.b[] e> = $r3;

        $r3 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = lengthof $r3;

        $i3 = -1;

        $i2 = $i2 + $i3;

        r0.<k.a.e.c$a: int f> = $i2;

        r0.<k.a.e.c$a: int g> = 0;

        r0.<k.a.e.c$a: int h> = 0;

        r0.<k.a.e.c$a: int c> = $i1;

        r0.<k.a.e.c$a: int d> = $i0;

        $r2 = staticinvoke <l.q: l.g a(l.x)>($r1);

        r0.<k.a.e.c$a: l.g b> = $r2;

        return;
    }

    public void <init>(int, l.x)
    {
        int $i0;
        k.a.e.c$a r0;
        l.x $r1;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: l.x;

        specialinvoke r0.<k.a.e.c$a: void <init>(int,int,l.x)>($i0, $i0, $r1);

        return;
    }

    public final int a(int)
    {
        int $i0, $i1;
        k.a.e.c$a r0;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $i1 = r0.<k.a.e.c$a: int f>;

        $i1 = $i1 + 1;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public int a(int, int)
    {
        k.a.e.c$a r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: k.a.e.c$a;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i2 = $i2 & $i3;

        if $i2 >= $i3 goto label1;

        return $i2;

     label1:
        $i2 = 0;

     label2:
        $i1 = virtualinvoke r0.<k.a.e.c$a: int d()>();

        $i0 = $i1 & 128;

        if $i0 == 0 goto label3;

        $i0 = $i1 & 127;

        $i0 = $i0 << $i2;

        $i3 = $i3 + $i0;

        $i2 = $i2 + 7;

        goto label2;

     label3:
        $i2 = $i1 << $i2;

        $i2 = $i3 + $i2;

        return $i2;
    }

    public final void a()
    {
        int $i0, $i1;
        k.a.e.c$a r0;

        r0 := @this: k.a.e.c$a;

        $i0 = r0.<k.a.e.c$a: int d>;

        $i1 = r0.<k.a.e.c$a: int h>;

        if $i0 >= $i1 goto label2;

        if $i0 != 0 goto label1;

        virtualinvoke r0.<k.a.e.c$a: void b()>();

        return;

     label1:
        $i0 = $i1 - $i0;

        virtualinvoke r0.<k.a.e.c$a: int b(int)>($i0);

     label2:
        return;
    }

    public final void a(int, k.a.e.b)
    {
        k.a.e.b $r1, $r4;
        java.util.List $r2;
        k.a.e.c$a r0;
        int $i0, $i1, $i2, $i3;
        k.a.e.b[] $r3, $r5;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: k.a.e.b;

        $r2 = r0.<k.a.e.c$a: java.util.List a>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i1 = $r1.<k.a.e.b: int i>;

        $i2 = -1;

        if $i0 == $i2 goto label1;

        $r3 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = virtualinvoke r0.<k.a.e.c$a: int a(int)>($i0);

        $r4 = $r3[$i2];

        $i2 = $r4.<k.a.e.b: int i>;

        $i1 = $i1 - $i2;

     label1:
        $i2 = r0.<k.a.e.c$a: int d>;

        if $i1 <= $i2 goto label2;

        virtualinvoke r0.<k.a.e.c$a: void b()>();

        return;

     label2:
        $i3 = r0.<k.a.e.c$a: int h>;

        $i3 = $i3 + $i1;

        $i2 = $i3 - $i2;

        $i2 = virtualinvoke r0.<k.a.e.c$a: int b(int)>($i2);

        $i3 = -1;

        if $i0 != $i3 goto label4;

        $i0 = r0.<k.a.e.c$a: int g>;

        $i0 = $i0 + 1;

        $r5 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = lengthof $r5;

        if $i0 <= $i2 goto label3;

        $i0 = lengthof $r5;

        $i0 = $i0 * 2;

        $r3 = newarray (k.a.e.b)[$i0];

        $i2 = lengthof $r5;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r3, $i2, $i0);

        $r5 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i0 = lengthof $r5;

        $i2 = -1;

        $i0 = $i0 + $i2;

        r0.<k.a.e.c$a: int f> = $i0;

        r0.<k.a.e.c$a: k.a.e.b[] e> = $r3;

     label3:
        $i0 = r0.<k.a.e.c$a: int f>;

        $i2 = -1;

        $i2 = $i0 + $i2;

        r0.<k.a.e.c$a: int f> = $i2;

        $r3 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $r3[$i0] = $r1;

        $i0 = r0.<k.a.e.c$a: int g>;

        $i0 = $i0 + 1;

        r0.<k.a.e.c$a: int g> = $i0;

        goto label5;

     label4:
        $i3 = virtualinvoke r0.<k.a.e.c$a: int a(int)>($i0);

        $i2 = $i3 + $i2;

        $i0 = $i0 + $i2;

        $r3 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $r3[$i0] = $r1;

     label5:
        $i0 = r0.<k.a.e.c$a: int h>;

        $i0 = $i0 + $i1;

        r0.<k.a.e.c$a: int h> = $i0;

        return;
    }

    public final int b(int)
    {
        k.a.e.b $r2;
        k.a.e.c$a r0;
        int $i0, $i1, $i2, $i3, $i4;
        k.a.e.b[] $r1;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $i1 = 0;

        if $i0 <= 0 goto label3;

        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = lengthof $r1;

        $i3 = -1;

        $i2 = $i2 + $i3;

     label1:
        $i3 = r0.<k.a.e.c$a: int f>;

        if $i2 < $i3 goto label2;

        if $i0 <= 0 goto label2;

        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $r2 = $r1[$i2];

        $i3 = $r2.<k.a.e.b: int i>;

        $i0 = $i0 - $i3;

        $i3 = r0.<k.a.e.c$a: int h>;

        $r2 = $r1[$i2];

        $i4 = $r2.<k.a.e.b: int i>;

        $i3 = $i3 - $i4;

        r0.<k.a.e.c$a: int h> = $i3;

        $i3 = r0.<k.a.e.c$a: int g>;

        $i4 = -1;

        $i3 = $i3 + $i4;

        r0.<k.a.e.c$a: int g> = $i3;

        $i1 = $i1 + 1;

        $i3 = -1;

        $i2 = $i2 + $i3;

        goto label1;

     label2:
        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = r0.<k.a.e.c$a: int f>;

        $i0 = $i2 + 1;

        $i2 = $i2 + 1;

        $i2 = $i2 + $i1;

        $i3 = r0.<k.a.e.c$a: int g>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r1, $i2, $i3);

        $i0 = r0.<k.a.e.c$a: int f>;

        $i0 = $i0 + $i1;

        r0.<k.a.e.c$a: int f> = $i0;

        return $i1;

     label3:
        return 0;
    }

    public final void b()
    {
        k.a.e.c$a r0;
        int $i0, $i1;
        k.a.e.b[] $r1;

        r0 := @this: k.a.e.c$a;

        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i0 = lengthof $r1;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<k.a.e.c$a: int f> = $i0;

        r0.<k.a.e.c$a: int g> = 0;

        r0.<k.a.e.c$a: int h> = 0;

        return;
    }

    public java.util.List c()
    {
        java.util.List $r2;
        k.a.e.c$a r0;
        java.util.ArrayList $r1;

        r0 := @this: k.a.e.c$a;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<k.a.e.c$a: java.util.List a>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r2 = r0.<k.a.e.c$a: java.util.List a>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return $r1;
    }

    public final l.h c(int)
    {
        l.h r6;
        java.io.IOException $r3;
        k.a.e.b $r2;
        k.a.e.c$a r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;
        k.a.e.b[] $r1;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<k.a.e.c$a: boolean d(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = <k.a.e.c: k.a.e.b[] a>;

        $r2 = $r1[$i0];

        r6 = $r2.<k.a.e.b: l.h g>;

        return r6;

     label1:
        $r1 = <k.a.e.c: k.a.e.b[] a>;

        $i1 = lengthof $r1;

        $i1 = $i0 - $i1;

        $i1 = virtualinvoke r0.<k.a.e.c$a: int a(int)>($i1);

        if $i1 < 0 goto label2;

        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label2;

        $r2 = $r1[$i1];

        r6 = $r2.<k.a.e.b: l.h g>;

        return r6;

     label2:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Header index too large ");

        $i0 = $i0 + 1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public final int d()
    {
        short $s1;
        byte $b0;
        l.g $r1;
        k.a.e.c$a r0;
        int $i2;

        r0 := @this: k.a.e.c$a;

        $r1 = r0.<k.a.e.c$a: l.g b>;

        $b0 = interfaceinvoke $r1.<l.g: byte readByte()>();

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        return $i2;
    }

    public final boolean d(int)
    {
        k.a.e.c$a r0;
        int $i0, $i1;
        k.a.e.b[] $r1;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <k.a.e.c: k.a.e.b[] a>;

        $i1 = lengthof $r1;

        $i1 = $i1 - 1;

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public l.h e()
    {
        byte[] $r3;
        l.g $r2;
        l.h $r4;
        long $l0;
        k.a.e.c$a r0;
        int $i1, $i2;
        k.a.e.t $r1;
        boolean $z0;

        r0 := @this: k.a.e.c$a;

        $i1 = virtualinvoke r0.<k.a.e.c$a: int d()>();

        $i2 = $i1 & 128;

        if $i2 != 128 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = virtualinvoke r0.<k.a.e.c$a: int a(int,int)>($i1, 127);

        if $z0 == 0 goto label3;

        $r1 = staticinvoke <k.a.e.t: k.a.e.t b()>();

        $r2 = r0.<k.a.e.c$a: l.g b>;

        $l0 = (long) $i1;

        $r3 = interfaceinvoke $r2.<l.g: byte[] d(long)>($l0);

        $r3 = virtualinvoke $r1.<k.a.e.t: byte[] a(byte[])>($r3);

        $r4 = staticinvoke <l.h: l.h a(byte[])>($r3);

        return $r4;

     label3:
        $r2 = r0.<k.a.e.c$a: l.g b>;

        $l0 = (long) $i1;

        $r4 = interfaceinvoke $r2.<l.g: l.h f(long)>($l0);

        return $r4;
    }

    public final void e(int)
    {
        java.io.IOException $r4;
        k.a.e.b $r2;
        java.util.List $r3;
        k.a.e.c$a r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;
        k.a.e.b[] $r1;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<k.a.e.c$a: boolean d(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = <k.a.e.c: k.a.e.b[] a>;

        $r2 = $r1[$i0];

        $r3 = r0.<k.a.e.c$a: java.util.List a>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;

     label1:
        $r1 = <k.a.e.c: k.a.e.b[] a>;

        $i1 = lengthof $r1;

        $i1 = $i0 - $i1;

        $i1 = virtualinvoke r0.<k.a.e.c$a: int a(int)>($i1);

        if $i1 < 0 goto label2;

        $r1 = r0.<k.a.e.c$a: k.a.e.b[] e>;

        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label2;

        $r3 = r0.<k.a.e.c$a: java.util.List a>;

        $r2 = $r1[$i1];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;

     label2:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Header index too large ");

        $i0 = $i0 + 1;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public void f()
    {
        l.g $r1;
        java.io.IOException $r5;
        short $s1, $s2;
        byte $b0;
        k.a.e.c$a r0;
        int $i3, $i4;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: k.a.e.c$a;

     label01:
        $r1 = r0.<k.a.e.c$a: l.g b>;

        $z0 = interfaceinvoke $r1.<l.g: boolean f()>();

        if $z0 != 0 goto label10;

        $r1 = r0.<k.a.e.c$a: l.g b>;

        $b0 = interfaceinvoke $r1.<l.g: byte readByte()>();

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        if $i3 == 128 goto label09;

        $s2 = $s1 & 128;

        $i3 = (int) $s2;

        if $i3 != 128 goto label02;

        $i3 = (int) $s1;

        $i3 = virtualinvoke r0.<k.a.e.c$a: int a(int,int)>($i3, 127);

        $i4 = -1;

        $i3 = $i3 + $i4;

        virtualinvoke r0.<k.a.e.c$a: void e(int)>($i3);

        goto label01;

     label02:
        $i3 = (int) $s1;

        if $i3 != 64 goto label03;

        virtualinvoke r0.<k.a.e.c$a: void g()>();

        goto label01;

     label03:
        $s2 = $s1 & 64;

        $i3 = (int) $s2;

        if $i3 != 64 goto label04;

        $i3 = (int) $s1;

        $i3 = virtualinvoke r0.<k.a.e.c$a: int a(int,int)>($i3, 63);

        $i4 = -1;

        $i3 = $i3 + $i4;

        virtualinvoke r0.<k.a.e.c$a: void f(int)>($i3);

        goto label01;

     label04:
        $s2 = $s1 & 32;

        $i3 = (int) $s2;

        if $i3 != 32 goto label06;

        $i3 = (int) $s1;

        $i3 = virtualinvoke r0.<k.a.e.c$a: int a(int,int)>($i3, 31);

        r0.<k.a.e.c$a: int d> = $i3;

        $i3 = r0.<k.a.e.c$a: int d>;

        if $i3 < 0 goto label05;

        $i4 = r0.<k.a.e.c$a: int c>;

        if $i3 > $i4 goto label05;

        virtualinvoke r0.<k.a.e.c$a: void a()>();

        goto label01;

     label05:
        $r5 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid dynamic table size update ");

        $i3 = r0.<k.a.e.c$a: int d>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label06:
        $i3 = (int) $s1;

        if $i3 == 16 goto label08;

        if $s1 != 0 goto label07;

        goto label08;

     label07:
        $i3 = (int) $s1;

        $i3 = virtualinvoke r0.<k.a.e.c$a: int a(int,int)>($i3, 15);

        $i4 = -1;

        $i3 = $i3 + $i4;

        virtualinvoke r0.<k.a.e.c$a: void g(int)>($i3);

        goto label01;

     label08:
        virtualinvoke r0.<k.a.e.c$a: void h()>();

        goto label01;

     label09:
        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("index == 0");

        throw $r5;

     label10:
        return;
    }

    public final void f(int)
    {
        k.a.e.c$a r0;
        l.h $r1, $r2;
        int $i0;
        k.a.e.b $r3;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<k.a.e.c$a: l.h c(int)>($i0);

        $r2 = virtualinvoke r0.<k.a.e.c$a: l.h e()>();

        $r3 = new k.a.e.b;

        specialinvoke $r3.<k.a.e.b: void <init>(l.h,l.h)>($r1, $r2);

        $i0 = -1;

        virtualinvoke r0.<k.a.e.c$a: void a(int,k.a.e.b)>($i0, $r3);

        return;
    }

    public final void g()
    {
        k.a.e.c$a r0;
        l.h $r1, $r2;
        int $i0;
        k.a.e.b $r3;

        r0 := @this: k.a.e.c$a;

        $r1 = virtualinvoke r0.<k.a.e.c$a: l.h e()>();

        staticinvoke <k.a.e.c: l.h a(l.h)>($r1);

        $r2 = virtualinvoke r0.<k.a.e.c$a: l.h e()>();

        $r3 = new k.a.e.b;

        specialinvoke $r3.<k.a.e.b: void <init>(l.h,l.h)>($r1, $r2);

        $i0 = -1;

        virtualinvoke r0.<k.a.e.c$a: void a(int,k.a.e.b)>($i0, $r3);

        return;
    }

    public final void g(int)
    {
        java.util.List $r1;
        k.a.e.c$a r0;
        l.h $r3, $r4;
        int $i0;
        k.a.e.b $r2;

        r0 := @this: k.a.e.c$a;

        $i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<k.a.e.c$a: l.h c(int)>($i0);

        $r4 = virtualinvoke r0.<k.a.e.c$a: l.h e()>();

        $r1 = r0.<k.a.e.c$a: java.util.List a>;

        $r2 = new k.a.e.b;

        specialinvoke $r2.<k.a.e.b: void <init>(l.h,l.h)>($r3, $r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public final void h()
    {
        java.util.List $r1;
        k.a.e.c$a r0;
        l.h $r3, $r4;
        k.a.e.b $r2;

        r0 := @this: k.a.e.c$a;

        $r3 = virtualinvoke r0.<k.a.e.c$a: l.h e()>();

        staticinvoke <k.a.e.c: l.h a(l.h)>($r3);

        $r4 = virtualinvoke r0.<k.a.e.c$a: l.h e()>();

        $r1 = r0.<k.a.e.c$a: java.util.List a>;

        $r2 = new k.a.e.b;

        specialinvoke $r2.<k.a.e.b: void <init>(l.h,l.h)>($r3, $r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }
}
