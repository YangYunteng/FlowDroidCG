public class i.a.p extends i.a.o
{

    public static final java.lang.Appendable a(java.lang.Iterable, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, i.f.a.l)
    {
        java.lang.CharSequence $r1, $r2, $r3, $r6;
        java.util.Iterator $r7;
        java.lang.Appendable $r0;
        java.lang.Iterable $r5;
        i.f.a.l $r4;
        int $i0, $i1;
        java.lang.Object $r8;
        boolean $z0;

        $r5 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.lang.Appendable;

        $r1 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r2 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r3 := @parameter6: java.lang.CharSequence;

        $r4 := @parameter7: i.f.a.l;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r5, "$this$joinTo");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "buffer");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "separator");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "postfix");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r3, "truncated");

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $r7 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $i1 = $i1 + 1;

        if $i1 <= 1 goto label2;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

     label2:
        if $i0 < 0 goto label3;

        if $i1 > $i0 goto label4;

     label3:
        staticinvoke <i.j.f: void a(java.lang.Appendable,java.lang.Object,i.f.a.l)>($r0, $r8, $r4);

        goto label1;

     label4:
        if $i0 < 0 goto label5;

        if $i1 <= $i0 goto label5;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

     label5:
        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        return $r0;
    }

    public static java.lang.Appendable a(java.lang.Iterable, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, i.f.a.l, int, java.lang.Object)
    {
        java.lang.CharSequence $r2, $r3, $r4, $r5, $r8;
        java.lang.Appendable $r1;
        java.lang.Iterable $r0;
        i.f.a.l $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r7;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: i.f.a.l;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label1;

        $r2 = ", ";

        goto label1;

     label1:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label2;

        $r3 = "";

        goto label2;

     label2:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label3;

        goto label4;

     label3:
        $r8 = $r4;

     label4:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label5;

        $i0 = -1;

        goto label5;

     label5:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label6;

        $r4 = "...";

        goto label7;

     label6:
        $r4 = $r5;

     label7:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label8;

        $r6 = null;

        goto label8;

     label8:
        staticinvoke <i.a.p: java.lang.Appendable a(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,i.f.a.l)>($r0, $r1, $r2, $r3, $r8, $i0, $r4, $r6);

        return $r1;
    }

    public static final java.lang.String a(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, i.f.a.l)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        java.lang.Iterable $r5;
        i.f.a.l $r3;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r4;

        $r5 := @parameter0: java.lang.Iterable;

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: i.f.a.l;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r5, "$this$joinToString");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <i.a.p: java.lang.Appendable a(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,i.f.a.l)>($r5, $r7, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r4, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r4;
    }

    public static java.lang.String a(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, i.f.a.l, int, java.lang.Object)
    {
        java.lang.CharSequence $r0, $r3, $r4, $r5, $r8;
        java.lang.Iterable $r2;
        i.f.a.l $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r7;
        java.lang.String $r1;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r0 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r5 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: i.f.a.l;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r8 = "";

        if $i2 == 0 goto label2;

        $r4 = "";

        goto label2;

     label2:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label3;

        goto label4;

     label3:
        $r8 = $r0;

     label4:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label5;

        $i0 = -1;

        goto label5;

     label5:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label6;

        $r5 = "...";

     label6:
        $r0 = $r5;

        $i1 = $i1 & 32;

        if $i1 == 0 goto label7;

        $r6 = null;

     label7:
        $r1 = staticinvoke <i.a.p: java.lang.String a(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,i.f.a.l)>($r2, $r3, $r4, $r8, $i0, $r0, $r6);

        return $r1;
    }

    public static final java.util.Collection a(java.lang.Iterable, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection $r0;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "$this$filterNotNullTo");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "destination");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label1;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.List a(java.lang.Iterable)
    {
        java.util.List $r2;
        java.lang.Iterable $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$filterNotNull");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        staticinvoke <i.a.p: java.util.Collection a(java.lang.Iterable,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public static final java.util.List a(java.util.Collection)
    {
        java.util.Collection $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toMutableList");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        return $r1;
    }

    public static final java.lang.Object b(java.lang.Iterable)
    {
        java.util.List $r1;
        java.util.Iterator $r3;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r4;
        java.util.NoSuchElementException $r5;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$single");

        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) $r0;

        $r2 = staticinvoke <i.a.p: java.lang.Object c(java.util.List)>($r1);

        return $r2;

     label1:
        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r2;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Collection has more than one element.");

        throw $r4;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection is empty.");

        throw $r5;
    }

    public static final java.util.Collection b(java.lang.Iterable, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection $r0;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "$this$toCollection");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "destination");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.List b(java.util.Collection, java.lang.Iterable)
    {
        java.util.Collection $r0, $r3;
        int $i0, $i1;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$plus");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "elements");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r3 = (java.util.Collection) $r1;

        $i1 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        $i0 = $i0 + $i1;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r0);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        return $r2;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        staticinvoke <i.a.m: boolean a(java.util.Collection,java.lang.Iterable)>($r2, $r1);

        return $r2;
    }

    public static final java.lang.Object c(java.util.List)
    {
        java.util.List $r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: java.util.List;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$single");

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        return $r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List has more than one element.");

        throw $r2;

     label2:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List is empty.");

        throw $r3;
    }

    public static final java.util.List c(java.lang.Iterable)
    {
        java.util.List $r2;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        int $i0;
        java.lang.Object $r3;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toList");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label5;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label1;

        $r2 = staticinvoke <i.a.p: java.util.List a(java.util.Collection)>($r1);

        return $r2;

     label1:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r2 = (java.util.List) $r0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        goto label3;

     label2:
        $r4 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label3:
        $r2 = staticinvoke <i.a.g: java.util.List a(java.lang.Object)>($r3);

        return $r2;

     label4:
        $r2 = staticinvoke <i.a.h: java.util.List a()>();

        return $r2;

     label5:
        $r2 = staticinvoke <i.a.p: java.util.List d(java.lang.Iterable)>($r0);

        $r2 = staticinvoke <i.a.h: java.util.List b(java.util.List)>($r2);

        return $r2;
    }

    public static final java.util.List d(java.lang.Iterable)
    {
        java.util.List $r0;
        java.util.Collection $r2;
        java.lang.Iterable $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        $r1 := @parameter0: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "$this$toMutableList");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $r0 = staticinvoke <i.a.p: java.util.List a(java.util.Collection)>($r2);

        return $r0;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        staticinvoke <i.a.p: java.util.Collection b(java.lang.Iterable,java.util.Collection)>($r1, $r3);

        $r0 = (java.util.List) $r3;

        return $r0;
    }

    public static final java.util.Set e(java.lang.Iterable)
    {
        java.util.Iterator $r6;
        java.util.Collection $r1;
        java.util.Set $r3;
        java.lang.Iterable $r0;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        java.util.LinkedHashSet $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toSet");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label5;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label1;

        $r2 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $i0 = staticinvoke <i.a.w: int a(int)>($i0);

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>(int)>($i0);

        staticinvoke <i.a.p: java.util.Collection b(java.lang.Iterable,java.util.Collection)>($r0, $r2);

        $r3 = (java.util.Set) $r2;

        return $r3;

     label1:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r4 = (java.util.List) $r0;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        goto label3;

     label2:
        $r6 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label3:
        $r3 = staticinvoke <i.a.y: java.util.Set a(java.lang.Object)>($r5);

        return $r3;

     label4:
        $r3 = staticinvoke <i.a.z: java.util.Set a()>();

        return $r3;

     label5:
        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        staticinvoke <i.a.p: java.util.Collection b(java.lang.Iterable,java.util.Collection)>($r0, $r2);

        $r3 = (java.util.Set) $r2;

        $r3 = staticinvoke <i.a.z: java.util.Set a(java.util.Set)>($r3);

        return $r3;
    }
}
