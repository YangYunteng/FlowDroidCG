public class com.google.android.material.button.MaterialButton extends androidx.appcompat.widget.AppCompatButton implements android.widget.Checkable, com.google.android.material.shape.Shapeable
{
    public static final int[] CHECKABLE_STATE_SET;
    public static final int[] CHECKED_STATE_SET;
    public static final int DEF_STYLE_RES;
    public static final int ICON_GRAVITY_END;
    public static final int ICON_GRAVITY_START;
    public static final int ICON_GRAVITY_TEXT_END;
    public static final int ICON_GRAVITY_TEXT_START;
    public static final java.lang.String LOG_TAG;
    public boolean broadcasting;
    public boolean checked;
    public android.graphics.drawable.Drawable icon;
    public int iconGravity;
    public int iconLeft;
    public int iconPadding;
    public int iconSize;
    public android.content.res.ColorStateList iconTint;
    public android.graphics.PorterDuff$Mode iconTintMode;
    public final com.google.android.material.button.MaterialButtonHelper materialButtonHelper;
    public final java.util.LinkedHashSet onCheckedChangeListeners;
    public com.google.android.material.button.MaterialButton$OnPressedChangeListener onPressedChangeListenerInternal;

    static void <clinit>()
    {
        int $i0;
        int[] $r0;

        <com.google.android.material.button.MaterialButton: java.lang.String LOG_TAG> = "MaterialButton";

        <com.google.android.material.button.MaterialButton: int ICON_GRAVITY_TEXT_START> = 2;

        <com.google.android.material.button.MaterialButton: int ICON_GRAVITY_TEXT_END> = 4;

        <com.google.android.material.button.MaterialButton: int ICON_GRAVITY_START> = 1;

        <com.google.android.material.button.MaterialButton: int ICON_GRAVITY_END> = 3;

        <com.google.android.material.button.MaterialButton: int DEF_STYLE_RES> = 0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842911;

        <com.google.android.material.button.MaterialButton: int[] CHECKABLE_STATE_SET> = $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <com.google.android.material.button.MaterialButton: int[] CHECKED_STATE_SET> = $r0;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_Button>;

        <com.google.android.material.button.MaterialButton: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.button.MaterialButton r0;
        int $i0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int materialButtonStyle>;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2, $r7;
        com.google.android.material.button.MaterialButtonHelper $r12, $r14;
        android.graphics.drawable.Drawable $r9;
        android.content.res.TypedArray $r5;
        android.content.res.ColorStateList $r8;
        android.util.AttributeSet $r3;
        com.google.android.material.button.MaterialButton r0;
        int[] $r1, $r4;
        int $i0, $i1, $i2;
        java.util.LinkedHashSet $r13;
        boolean $z0;
        com.google.android.material.shape.ShapeAppearanceModel $r11;
        android.graphics.PorterDuff$Mode $r6;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r10;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.button.MaterialButton: int DEF_STYLE_RES>;

        $r2 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r2, $r3, $i1, $i0);

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r3, $i1);

        $r13 = new java.util.LinkedHashSet;

        specialinvoke $r13.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.button.MaterialButton: java.util.LinkedHashSet onCheckedChangeListeners> = $r13;

        $z0 = 0;

        r0.<com.google.android.material.button.MaterialButton: boolean checked> = 0;

        r0.<com.google.android.material.button.MaterialButton: boolean broadcasting> = 0;

        $r2 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $r4 = <com.google.android.material.R$styleable: int[] MaterialButton>;

        $i0 = <com.google.android.material.button.MaterialButton: int DEF_STYLE_RES>;

        $r1 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r2, $r3, $r4, $i1, $i0, $r1);

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_iconPadding>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButton: int iconPadding> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_iconTintMode>;

        $i2 = -1;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i2);

        $r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i0, $r6);

        r0.<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode iconTintMode> = $r6;

        $r7 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_iconTint>;

        $r8 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r7, $r5, $i0);

        r0.<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList iconTint> = $r8;

        $r7 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_icon>;

        $r9 = staticinvoke <com.google.android.material.resources.MaterialResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int)>($r7, $r5, $i0);

        r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon> = $r9;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_iconGravity>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInteger(int,int)>($i0, 1);

        r0.<com.google.android.material.button.MaterialButton: int iconGravity> = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialButton_iconSize>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<com.google.android.material.button.MaterialButton: int iconSize> = $i0;

        $i0 = <com.google.android.material.button.MaterialButton: int DEF_STYLE_RES>;

        $r10 = staticinvoke <com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int)>($r2, $r3, $i1, $i0);

        $r11 = virtualinvoke $r10.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        $r14 = new com.google.android.material.button.MaterialButtonHelper;

        specialinvoke $r14.<com.google.android.material.button.MaterialButtonHelper: void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel)>(r0, $r11);

        r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper> = $r14;

        $r12 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r12.<com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)>($r5);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconPadding>;

        virtualinvoke r0.<android.widget.Button: void setCompoundDrawablePadding(int)>($i1);

        $r9 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        if $r9 == null goto label1;

        $z0 = 1;

     label1:
        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>($z0);

        return;
    }

    private java.lang.String getA11yClassName()
    {
        com.google.android.material.button.MaterialButton r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        $r1 = class "Landroid/widget/CompoundButton;";

        goto label2;

     label1:
        $r1 = class "Landroid/widget/Button;";

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    private boolean isLayoutRTL()
    {
        int $i0;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isUsingOriginalBackground()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: boolean isBackgroundOverwritten()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void resetIconDrawable(boolean)
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r0, $r1, null, null, null);

        return;

     label1:
        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        staticinvoke <b.i.j.j: void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r0, null, null, $r1, null);

        return;
    }

    private void updateIcon(boolean)
    {
        android.graphics.drawable.Drawable $r1, $r5, $r6;
        android.graphics.PorterDuff$Mode $r3;
        android.content.res.ColorStateList $r2;
        com.google.android.material.button.MaterialButton r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.Drawable[] $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        $z1 = 0;

        if $r1 == null goto label06;

        $r1 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r1);

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon> = $r1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        $r2 = r0.<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList iconTint>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r2);

        $r3 = r0.<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode iconTintMode>;

        if $r3 == null goto label01;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r1, $r3);

     label01:
        $i0 = r0.<com.google.android.material.button.MaterialButton: int iconSize>;

        if $i0 == 0 goto label02;

        goto label03;

     label02:
        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

     label03:
        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconSize>;

        if $i1 == 0 goto label04;

        goto label05;

     label04:
        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label05:
        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        $i2 = r0.<com.google.android.material.button.MaterialButton: int iconLeft>;

        $i0 = $i0 + $i2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, 0, $i0, $i1);

     label06:
        $i0 = r0.<com.google.android.material.button.MaterialButton: int iconGravity>;

        if $i0 == 1 goto label08;

        if $i0 != 2 goto label07;

        goto label08;

     label07:
        $z2 = 0;

        goto label09;

     label08:
        $z2 = 1;

     label09:
        if $z0 == 0 goto label10;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void resetIconDrawable(boolean)>($z2);

        return;

     label10:
        $r4 = staticinvoke <b.i.j.j: android.graphics.drawable.Drawable[] a(android.widget.TextView)>(r0);

        $r5 = $r4[0];

        $r1 = $r4[2];

        if $z2 == 0 goto label11;

        $r6 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        if $r5 != $r6 goto label12;

     label11:
        if $z2 != 0 goto label13;

        $r5 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        if $r1 == $r5 goto label13;

     label12:
        $z1 = 1;

     label13:
        if $z1 == 0 goto label14;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void resetIconDrawable(boolean)>($z2);

     label14:
        return;
    }

    private void updateIconPosition()
    {
        java.lang.CharSequence $r4;
        android.graphics.drawable.Drawable $r1;
        android.text.method.TransformationMethod $r7;
        android.text.Layout $r2;
        com.google.android.material.button.MaterialButton r0;
        android.text.TextPaint $r3;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        if $r1 == null goto label9;

        $r2 = virtualinvoke r0.<android.widget.Button: android.text.Layout getLayout()>();

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = r0.<com.google.android.material.button.MaterialButton: int iconGravity>;

        $z0 = 1;

        if $i0 == 1 goto label8;

        if $i0 != 3 goto label2;

        goto label8;

     label2:
        $r3 = virtualinvoke r0.<android.widget.Button: android.text.TextPaint getPaint()>();

        $r4 = virtualinvoke r0.<android.widget.Button: java.lang.CharSequence getText()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = $r5;

        $r7 = virtualinvoke r0.<android.widget.Button: android.text.method.TransformationMethod getTransformationMethod()>();

        if $r7 == null goto label3;

        $r7 = virtualinvoke r0.<android.widget.Button: android.text.method.TransformationMethod getTransformationMethod()>();

        $r4 = interfaceinvoke $r7.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>($r5, r0);

        $r6 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

     label3:
        $f0 = virtualinvoke $r3.<android.graphics.Paint: float measureText(java.lang.String)>($r6);

        $i0 = (int) $f0;

        $r2 = virtualinvoke r0.<android.widget.Button: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r2.<android.text.Layout: int getEllipsizedWidth()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = r0.<com.google.android.material.button.MaterialButton: int iconSize>;

        if $i0 != 0 goto label4;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

     label4:
        $i2 = virtualinvoke r0.<android.widget.Button: int getMeasuredWidth()>();

        $i1 = $i2 - $i1;

        $i2 = staticinvoke <b.i.i.y: int t(android.view.View)>(r0);

        $i1 = $i1 - $i2;

        $i0 = $i1 - $i0;

        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconPadding>;

        $i0 = $i0 - $i1;

        $i1 = staticinvoke <b.i.i.y: int u(android.view.View)>(r0);

        $i0 = $i0 - $i1;

        $i0 = $i0 / 2;

        $z1 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isLayoutRTL()>();

        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconGravity>;

        if $i1 != 4 goto label5;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        if $z1 == $z0 goto label7;

        $i0 = neg $i0;

     label7:
        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconLeft>;

        if $i1 == $i0 goto label9;

        r0.<com.google.android.material.button.MaterialButton: int iconLeft> = $i0;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>(0);

        return;

     label8:
        r0.<com.google.android.material.button.MaterialButton: int iconLeft> = 0;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>(0);

     label9:
        return;
    }

    public void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    {
        com.google.android.material.button.MaterialButton$OnCheckedChangeListener $r1;
        com.google.android.material.button.MaterialButton r0;
        java.util.LinkedHashSet $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: com.google.android.material.button.MaterialButton$OnCheckedChangeListener;

        $r2 = r0.<com.google.android.material.button.MaterialButton: java.util.LinkedHashSet onCheckedChangeListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void clearOnCheckedChangeListeners()
    {
        com.google.android.material.button.MaterialButton r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 = r0.<com.google.android.material.button.MaterialButton: java.util.LinkedHashSet onCheckedChangeListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public android.content.res.ColorStateList getBackgroundTintList()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()>();

        return $r1;
    }

    public android.graphics.PorterDuff$Mode getBackgroundTintMode()
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>();

        return $r1;
    }

    public int getCornerRadius()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $i0 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: int getCornerRadius()>();

        return $i0;

     label1:
        return 0;
    }

    public android.graphics.drawable.Drawable getIcon()
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        return r1;
    }

    public int getIconGravity()
    {
        int i0;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        i0 = r0.<com.google.android.material.button.MaterialButton: int iconGravity>;

        return i0;
    }

    public int getIconPadding()
    {
        int i0;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        i0 = r0.<com.google.android.material.button.MaterialButton: int iconPadding>;

        return i0;
    }

    public int getIconSize()
    {
        int i0;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        i0 = r0.<com.google.android.material.button.MaterialButton: int iconSize>;

        return i0;
    }

    public android.content.res.ColorStateList getIconTint()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        r1 = r0.<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList iconTint>;

        return r1;
    }

    public android.graphics.PorterDuff$Mode getIconTintMode()
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode iconTintMode>;

        return r1;
    }

    public android.content.res.ColorStateList getRippleColor()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getRippleColor()>();

        return $r2;

     label1:
        return null;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        java.lang.IllegalStateException $r3;
        com.google.android.material.button.MaterialButton r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>();

        return $r2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to get ShapeAppearanceModel from a MaterialButton which has an overwritten background.");

        throw $r3;
    }

    public android.content.res.ColorStateList getStrokeColor()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getStrokeColor()>();

        return $r2;

     label1:
        return null;
    }

    public int getStrokeWidth()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $i0 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: int getStrokeWidth()>();

        return $i0;

     label1:
        return 0;
    }

    public android.content.res.ColorStateList getSupportBackgroundTintList()
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getSupportBackgroundTintList()>();

        return $r2;

     label1:
        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()>();

        return $r2;
    }

    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        android.graphics.PorterDuff$Mode $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>();

        return $r2;

     label1:
        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>();

        return $r2;
    }

    public boolean isCheckable()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isChecked()
    {
        com.google.android.material.button.MaterialButton r0;
        boolean z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        z0 = r0.<com.google.android.material.button.MaterialButton: boolean checked>;

        return z0;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        specialinvoke r0.<android.widget.Button: void onAttachedToWindow()>();

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>(r0, $r2);

     label1:
        return;
    }

    public int[] onCreateDrawableState(int)
    {
        com.google.android.material.button.MaterialButton r0;
        int[] $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $i0 = $i0 + 2;

        $r1 = specialinvoke r0.<android.widget.Button: int[] onCreateDrawableState(int)>($i0);

        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        $r2 = <com.google.android.material.button.MaterialButton: int[] CHECKABLE_STATE_SET>;

        staticinvoke <android.widget.Button: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isChecked()>();

        if $z0 == 0 goto label2;

        $r2 = <com.google.android.material.button.MaterialButton: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.Button: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label2:
        return $r1;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.google.android.material.button.MaterialButton r0;
        android.view.accessibility.AccessibilityEvent $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isChecked()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        com.google.android.material.button.MaterialButton r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isCheckable()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>($z0);

        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isChecked()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>($z0);

        $z0 = virtualinvoke r0.<android.widget.Button: boolean isClickable()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>($z0);

        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 != 21 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        if $r1 == null goto label1;

        $i1 = $i3 - $i1;

        $i0 = $i2 - $i0;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: void updateMaskBounds(int,int)>($i1, $i0);

     label1:
        return;
    }

    public void onMeasure(int, int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.Button: void onMeasure(int,int)>($i0, $i1);

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIconPosition()>();

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;
        com.google.android.material.button.MaterialButton$SavedState $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof com.google.android.material.button.MaterialButton$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.Button: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (com.google.android.material.button.MaterialButton$SavedState) $r1;

        $r1 = virtualinvoke $r2.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.Button: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $z0 = $r2.<com.google.android.material.button.MaterialButton$SavedState: boolean checked>;

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setChecked(boolean)>($z0);

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.os.Parcelable $r2;
        com.google.android.material.button.MaterialButton r0;
        com.google.android.material.button.MaterialButton$SavedState $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r2 = specialinvoke r0.<android.widget.Button: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new com.google.android.material.button.MaterialButton$SavedState;

        specialinvoke $r1.<com.google.android.material.button.MaterialButton$SavedState: void <init>(android.os.Parcelable)>($r2);

        $z0 = r0.<com.google.android.material.button.MaterialButton: boolean checked>;

        $r1.<com.google.android.material.button.MaterialButton$SavedState: boolean checked> = $z0;

        return $r1;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        java.lang.CharSequence $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIconPosition()>();

        return;
    }

    public boolean performClick()
    {
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void toggle()>();

        $z0 = specialinvoke r0.<android.widget.Button: boolean performClick()>();

        return $z0;
    }

    public void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    {
        com.google.android.material.button.MaterialButton$OnCheckedChangeListener $r1;
        com.google.android.material.button.MaterialButton r0;
        java.util.LinkedHashSet $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: com.google.android.material.button.MaterialButton$OnCheckedChangeListener;

        $r2 = r0.<com.google.android.material.button.MaterialButton: java.util.LinkedHashSet onCheckedChangeListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void setBackground(android.graphics.drawable.Drawable)
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setBackgroundColor(int)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)>($i0);

        return;

     label1:
        specialinvoke r0.<android.widget.Button: void setBackgroundColor(int)>($i0);

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.button.MaterialButtonHelper $r3;
        com.google.android.material.button.MaterialButton r0;
        int[] $r4;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == $r2 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MaterialButton", "Do not set the background; MaterialButton manages its own background drawable.");

        $r3 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r3.<com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        $r2 = virtualinvoke r0.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $r4 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

        return;

     label2:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setBackgroundResource(int)
    {
        android.content.Context $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setBackgroundTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

        return;
    }

    public void setCheckable(boolean)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: void setCheckable(boolean)>($z0);

     label1:
        return;
    }

    public void setChecked(boolean)
    {
        com.google.android.material.button.MaterialButton$OnCheckedChangeListener $r4;
        java.util.Iterator $r2;
        com.google.android.material.button.MaterialButton r0;
        java.lang.Object $r3;
        java.util.LinkedHashSet $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.google.android.material.button.MaterialButton: boolean isCheckable()>();

        if $z1 == 0 goto label4;

        $z1 = virtualinvoke r0.<android.widget.Button: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z1 = r0.<com.google.android.material.button.MaterialButton: boolean checked>;

        if $z1 == $z0 goto label4;

        r0.<com.google.android.material.button.MaterialButton: boolean checked> = $z0;

        virtualinvoke r0.<android.widget.Button: void refreshDrawableState()>();

        $z0 = r0.<com.google.android.material.button.MaterialButton: boolean broadcasting>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.google.android.material.button.MaterialButton: boolean broadcasting> = 1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: java.util.LinkedHashSet onCheckedChangeListeners>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.android.material.button.MaterialButton$OnCheckedChangeListener) $r3;

        $z0 = r0.<com.google.android.material.button.MaterialButton: boolean checked>;

        interfaceinvoke $r4.<com.google.android.material.button.MaterialButton$OnCheckedChangeListener: void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean)>(r0, $z0);

        goto label2;

     label3:
        r0.<com.google.android.material.button.MaterialButton: boolean broadcasting> = 0;

     label4:
        return;
    }

    public void setCornerRadius(int)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)>($i0);

     label1:
        return;
    }

    public void setCornerRadiusResource(int)
    {
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setCornerRadius(int)>($i0);

     label1:
        return;
    }

    public void setElevation(float)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        float $f0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.Button: void setElevation(float)>($f0);

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>();

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

     label1:
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable icon> = $r2;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>(1);

     label1:
        return;
    }

    public void setIconGravity(int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconGravity>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.button.MaterialButton: int iconGravity> = $i0;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIconPosition()>();

     label1:
        return;
    }

    public void setIconPadding(int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconPadding>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.button.MaterialButton: int iconPadding> = $i0;

        virtualinvoke r0.<android.widget.Button: void setCompoundDrawablePadding(int)>($i0);

     label1:
        return;
    }

    public void setIconResource(int)
    {
        android.content.Context $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setIconSize(int)
    {
        com.google.android.material.button.MaterialButton r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.google.android.material.button.MaterialButton: int iconSize>;

        if $i1 == $i0 goto label2;

        r0.<com.google.android.material.button.MaterialButton: int iconSize> = $i0;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>(1);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iconSize cannot be less than 0");

        throw $r1;

     label2:
        return;
    }

    public void setIconTint(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r2 := @parameter0: android.content.res.ColorStateList;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList iconTint>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList iconTint> = $r2;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>(0);

     label1:
        return;
    }

    public void setIconTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.PorterDuff$Mode $r1, $r2;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r2 := @parameter0: android.graphics.PorterDuff$Mode;

        $r1 = r0.<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode iconTintMode>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode iconTintMode> = $r2;

        specialinvoke r0.<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>(0);

     label1:
        return;
    }

    public void setIconTintResource(int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setInternalBackground(android.graphics.drawable.Drawable)
    {
        com.google.android.material.button.MaterialButton r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
    {
        com.google.android.material.button.MaterialButton$OnPressedChangeListener $r1;
        com.google.android.material.button.MaterialButton r0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: com.google.android.material.button.MaterialButton$OnPressedChangeListener;

        r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButton$OnPressedChangeListener onPressedChangeListenerInternal> = $r1;

        return;
    }

    public void setPressed(boolean)
    {
        com.google.android.material.button.MaterialButton$OnPressedChangeListener $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButton$OnPressedChangeListener onPressedChangeListenerInternal>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<com.google.android.material.button.MaterialButton$OnPressedChangeListener: void onPressedChanged(com.google.android.material.button.MaterialButton,boolean)>(r0, $z0);

     label1:
        specialinvoke r0.<android.widget.Button: void setPressed(boolean)>($z0);

        return;
    }

    public void setRippleColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.button.MaterialButtonHelper $r2;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButtonHelper: void setRippleColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setRippleColorResource(int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)>($r2);

     label1:
        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.button.MaterialButtonHelper $r2;
        java.lang.IllegalStateException $r3;
        com.google.android.material.button.MaterialButton r0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButtonHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to set ShapeAppearanceModel on a MaterialButton which has an overwritten background.");

        throw $r3;
    }

    public void setShouldDrawSurfaceColorStroke(boolean)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: void setShouldDrawSurfaceColorStroke(boolean)>($z0);

     label1:
        return;
    }

    public void setStrokeColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.button.MaterialButtonHelper $r2;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButtonHelper: void setStrokeColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setStrokeColorResource(int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)>($r2);

     label1:
        return;
    }

    public void setStrokeWidth(int)
    {
        com.google.android.material.button.MaterialButtonHelper $r1;
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButtonHelper: void setStrokeWidth(int)>($i0);

     label1:
        return;
    }

    public void setStrokeWidthResource(int)
    {
        com.google.android.material.button.MaterialButton r0;
        int $i0;
        boolean $z0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Button: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setStrokeWidth(int)>($i0);

     label1:
        return;
    }

    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.button.MaterialButtonHelper $r2;
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>($r1);

        return;

     label1:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.button.MaterialButtonHelper $r2;
        com.google.android.material.button.MaterialButton r0;
        android.graphics.PorterDuff$Mode $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.button.MaterialButton: com.google.android.material.button.MaterialButtonHelper materialButtonHelper>;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

        return;

     label1:
        specialinvoke r0.<androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

        return;
    }

    public void toggle()
    {
        com.google.android.material.button.MaterialButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButton;

        $z0 = r0.<com.google.android.material.button.MaterialButton: boolean checked>;

        $z0 = $z0 ^ 1;

        virtualinvoke r0.<com.google.android.material.button.MaterialButton: void setChecked(boolean)>($z0);

        return;
    }
}
