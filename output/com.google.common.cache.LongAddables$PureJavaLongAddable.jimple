public final class com.google.common.cache.LongAddables$PureJavaLongAddable extends java.util.concurrent.atomic.AtomicLong implements com.google.common.cache.LongAddable
{

    public void <init>()
    {
        com.google.common.cache.LongAddables$PureJavaLongAddable r0;

        r0 := @this: com.google.common.cache.LongAddables$PureJavaLongAddable;

        specialinvoke r0.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        return;
    }

    public void <init>(com.google.common.cache.LongAddables$1)
    {
        com.google.common.cache.LongAddables$PureJavaLongAddable r0;
        com.google.common.cache.LongAddables$1 $r1;

        r0 := @this: com.google.common.cache.LongAddables$PureJavaLongAddable;

        $r1 := @parameter0: com.google.common.cache.LongAddables$1;

        specialinvoke r0.<com.google.common.cache.LongAddables$PureJavaLongAddable: void <init>()>();

        return;
    }

    public void add(long)
    {
        long $l0;
        com.google.common.cache.LongAddables$PureJavaLongAddable r0;

        r0 := @this: com.google.common.cache.LongAddables$PureJavaLongAddable;

        $l0 := @parameter0: long;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)>($l0);

        return;
    }

    public void increment()
    {
        com.google.common.cache.LongAddables$PureJavaLongAddable r0;

        r0 := @this: com.google.common.cache.LongAddables$PureJavaLongAddable;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        return;
    }

    public long sum()
    {
        long $l0;
        com.google.common.cache.LongAddables$PureJavaLongAddable r0;

        r0 := @this: com.google.common.cache.LongAddables$PureJavaLongAddable;

        $l0 = virtualinvoke r0.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }
}
