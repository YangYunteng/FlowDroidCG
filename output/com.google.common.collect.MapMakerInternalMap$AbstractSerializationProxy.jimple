public abstract class com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy extends com.google.common.collect.ForwardingConcurrentMap implements java.io.Serializable
{
    public static final long serialVersionUID;
    public final int concurrencyLevel;
    public transient java.util.concurrent.ConcurrentMap delegate;
    public final com.google.common.base.Equivalence keyEquivalence;
    public final com.google.common.collect.MapMakerInternalMap$Strength keyStrength;
    public final com.google.common.base.Equivalence valueEquivalence;
    public final com.google.common.collect.MapMakerInternalMap$Strength valueStrength;

    public void <init>(com.google.common.collect.MapMakerInternalMap$Strength, com.google.common.collect.MapMakerInternalMap$Strength, com.google.common.base.Equivalence, com.google.common.base.Equivalence, int, java.util.concurrent.ConcurrentMap)
    {
        com.google.common.collect.MapMakerInternalMap$Strength $r1, $r2;
        com.google.common.base.Equivalence $r3, $r4;
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        int $i0;
        java.util.concurrent.ConcurrentMap $r5;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        $r1 := @parameter0: com.google.common.collect.MapMakerInternalMap$Strength;

        $r2 := @parameter1: com.google.common.collect.MapMakerInternalMap$Strength;

        $r3 := @parameter2: com.google.common.base.Equivalence;

        $r4 := @parameter3: com.google.common.base.Equivalence;

        $i0 := @parameter4: int;

        $r5 := @parameter5: java.util.concurrent.ConcurrentMap;

        specialinvoke r0.<com.google.common.collect.ForwardingConcurrentMap: void <init>()>();

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMakerInternalMap$Strength keyStrength> = $r1;

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMakerInternalMap$Strength valueStrength> = $r2;

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.base.Equivalence keyEquivalence> = $r3;

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.base.Equivalence valueEquivalence> = $r4;

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: int concurrencyLevel> = $i0;

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate> = $r5;

        return;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        $r1 = virtualinvoke r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    public volatile java.util.Map delegate()
    {
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        $r1 = virtualinvoke r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    public java.util.concurrent.ConcurrentMap delegate()
    {
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        java.util.concurrent.ConcurrentMap r1;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        r1 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        return r1;
    }

    public void readEntries(java.io.ObjectInputStream)
    {
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        java.io.ObjectInputStream $r1;
        java.lang.Object $r3, $r4;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        $r1 := @parameter0: java.io.ObjectInputStream;

     label1:
        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        if $r3 != null goto label2;

        return;

     label2:
        $r4 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r2 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;
    }

    public com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream)
    {
        com.google.common.collect.MapMakerInternalMap$Strength $r3;
        com.google.common.base.Equivalence $r4;
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        java.io.ObjectInputStream $r1;
        int $i0;
        com.google.common.collect.MapMaker $r2;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2 = new com.google.common.collect.MapMaker;

        specialinvoke $r2.<com.google.common.collect.MapMaker: void <init>()>();

        $r2 = virtualinvoke $r2.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker initialCapacity(int)>($i0);

        $r3 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength)>($r3);

        $r3 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength)>($r3);

        $r4 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.base.Equivalence keyEquivalence>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence)>($r4);

        $i0 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: int concurrencyLevel>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker concurrencyLevel(int)>($i0);

        return $r2;
    }

    public void writeMapTo(java.io.ObjectOutputStream)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.concurrent.ConcurrentMap $r2;
        com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy r0;
        int $i0;
        java.io.ObjectOutputStream $r1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        $i0 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: int size()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        goto label1;

     label2:
        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);

        return;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: long serialVersionUID> = 3L;

        return;
    }
}
