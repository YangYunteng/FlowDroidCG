public final class com.google.zxing.datamatrix.DataMatrixWriter extends java.lang.Object implements com.google.zxing.Writer
{

    public void <init>()
    {
        com.google.zxing.datamatrix.DataMatrixWriter r0;

        r0 := @this: com.google.zxing.datamatrix.DataMatrixWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte $b4;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        int $i0, $i1, $i2, $i3;
        com.google.zxing.common.BitMatrix $r1;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $r1 = new com.google.zxing.common.BitMatrix;

        specialinvoke $r1.<com.google.zxing.common.BitMatrix: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r1.<com.google.zxing.common.BitMatrix: void clear()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label5;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label4;

        $b4 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i2, $i3);

        if $b4 != 1 goto label3;

        virtualinvoke $r1.<com.google.zxing.common.BitMatrix: void set(int,int)>($i2, $i3);

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return $r1;
    }

    public static com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement, com.google.zxing.datamatrix.encoder.SymbolInfo)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r0;
        com.google.zxing.common.BitMatrix $r3;
        boolean $z0;

        $r2 := @parameter0: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $r0 := @parameter1: com.google.zxing.datamatrix.encoder.SymbolInfo;

        $i1 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataWidth()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataHeight()>();

        $r1 = new com.google.zxing.qrcode.encoder.ByteMatrix;

        $i3 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolWidth()>();

        $i4 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolHeight()>();

        specialinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void <init>(int,int)>($i3, $i4);

        $i3 = 0;

        $i4 = 0;

     label01:
        if $i3 >= $i2 goto label16;

        $i5 = $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixHeight>;

        $i5 = $i3 % $i5;

        if $i5 != 0 goto label06;

        $i5 = 0;

        $i6 = 0;

     label02:
        $i0 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolWidth()>();

        if $i5 >= $i0 goto label05;

        $i0 = $i5 % 2;

        if $i0 != 0 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i6, $i4, $z0);

        $i6 = $i6 + 1;

        $i5 = $i5 + 1;

        goto label02;

     label05:
        $i4 = $i4 + 1;

     label06:
        $i5 = 0;

        $i6 = 0;

     label07:
        if $i5 >= $i1 goto label12;

        $i0 = $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixWidth>;

        $i0 = $i5 % $i0;

        if $i0 != 0 goto label08;

        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i6, $i4, 1);

        $i6 = $i6 + 1;

     label08:
        $z0 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean getBit(int,int)>($i5, $i3);

        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i6, $i4, $z0);

        $i6 = $i6 + 1;

        $i7 = $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixWidth>;

        $i0 = $i5 % $i7;

        $i7 = $i7 - 1;

        if $i0 != $i7 goto label11;

        $i0 = $i3 % 2;

        if $i0 != 0 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i6, $i4, $z0);

        $i6 = $i6 + 1;

     label11:
        $i5 = $i5 + 1;

        goto label07;

     label12:
        $i4 = $i4 + 1;

        $i6 = $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixHeight>;

        $i5 = $i3 % $i6;

        $i6 = $i6 - 1;

        if $i5 != $i6 goto label15;

        $i5 = 0;

        $i6 = 0;

     label13:
        $i0 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolWidth()>();

        if $i5 >= $i0 goto label14;

        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i6, $i4, 1);

        $i6 = $i6 + 1;

        $i5 = $i5 + 1;

        goto label13;

     label14:
        $i4 = $i4 + 1;

     label15:
        $i3 = $i3 + 1;

        goto label01;

     label16:
        $r3 = staticinvoke <com.google.zxing.datamatrix.DataMatrixWriter: com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix)>($r1);

        return $r3;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int)
    {
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r2;
        java.lang.String $r3;
        com.google.zxing.BarcodeFormat $r1;
        com.google.zxing.datamatrix.DataMatrixWriter r0;

        r0 := @this: com.google.zxing.datamatrix.DataMatrixWriter;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.google.zxing.datamatrix.DataMatrixWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>($r3, $r1, $i0, $i1, null);

        return $r2;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Map)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement $r13;
        java.util.Map $r3;
        int $i0, $i1;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r12;
        java.lang.String $r1;
        com.google.zxing.datamatrix.DataMatrixWriter r0;
        boolean $z0;
        com.google.zxing.datamatrix.encoder.SymbolShapeHint $r5, $r9;
        java.lang.IllegalArgumentException $r15;
        com.google.zxing.EncodeHintType $r7;
        com.google.zxing.Dimension $r6, $r10, $r11;
        java.lang.Object $r8;
        com.google.zxing.common.BitMatrix $r14;
        java.lang.StringBuilder $r16;
        com.google.zxing.BarcodeFormat $r2, $r4;

        r0 := @this: com.google.zxing.datamatrix.DataMatrixWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.util.Map;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r4 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat DATA_MATRIX>;

        if $r2 != $r4 goto label7;

        if $i0 < 0 goto label6;

        if $i1 < 0 goto label6;

        $r5 = <com.google.zxing.datamatrix.encoder.SymbolShapeHint: com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE>;

        $r6 = null;

        if $r3 == null goto label4;

        $r7 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE>;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (com.google.zxing.datamatrix.encoder.SymbolShapeHint) $r8;

        if $r9 == null goto label1;

        $r5 = $r9;

     label1:
        $r7 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MIN_SIZE>;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r10 = (com.google.zxing.Dimension) $r8;

        if $r10 == null goto label2;

        goto label3;

     label2:
        $r10 = null;

     label3:
        $r7 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MAX_SIZE>;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r11 = (com.google.zxing.Dimension) $r8;

        if $r11 == null goto label5;

        $r6 = $r11;

        goto label5;

     label4:
        $r10 = null;

     label5:
        $r1 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension)>($r1, $r5, $r10, $r6);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r12 = staticinvoke <com.google.zxing.datamatrix.encoder.SymbolInfo: com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean)>($i0, $r5, $r10, $r6, 1);

        $r1 = staticinvoke <com.google.zxing.datamatrix.encoder.ErrorCorrection: java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo)>($r1, $r12);

        $r13 = new com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 = virtualinvoke $r12.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataWidth()>();

        $i1 = virtualinvoke $r12.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataHeight()>();

        specialinvoke $r13.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void <init>(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        virtualinvoke $r13.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void place()>();

        $r14 = staticinvoke <com.google.zxing.datamatrix.DataMatrixWriter: com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo)>($r13, $r12);

        return $r14;

     label6:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested dimensions are too small: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r15;

     label7:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only encode DATA_MATRIX, but got ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r15;

     label8:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Found empty contents");

        throw $r15;
    }
}
