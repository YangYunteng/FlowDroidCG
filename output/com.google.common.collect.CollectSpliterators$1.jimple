public final class com.google.common.collect.CollectSpliterators$1 extends java.lang.Object implements java.util.Spliterator
{
    public final java.util.Spliterator val$fromSpliterator;
    public final java.util.function.Function val$function;

    public void <init>(java.util.Spliterator, java.util.function.Function)
    {
        com.google.common.collect.CollectSpliterators$1 r0;
        java.util.Spliterator $r1;
        java.util.function.Function $r2;

        r0 := @this: com.google.common.collect.CollectSpliterators$1;

        $r1 := @parameter0: java.util.Spliterator;

        $r2 := @parameter1: java.util.function.Function;

        r0.<com.google.common.collect.CollectSpliterators$1: java.util.Spliterator val$fromSpliterator> = $r1;

        r0.<com.google.common.collect.CollectSpliterators$1: java.util.function.Function val$function> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a(java.util.function.Consumer, java.util.function.Function, java.lang.Object)
    {
        java.util.function.Consumer $r0;
        java.lang.Object $r1;
        java.util.function.Function $r2;

        $r0 := @parameter0: java.util.function.Consumer;

        $r2 := @parameter1: java.util.function.Function;

        $r1 := @parameter2: java.lang.Object;

        $r1 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        interfaceinvoke $r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    public static void b(java.util.function.Consumer, java.util.function.Function, java.lang.Object)
    {
        java.util.function.Consumer $r0;
        java.lang.Object $r1;
        java.util.function.Function $r2;

        $r0 := @parameter0: java.util.function.Consumer;

        $r2 := @parameter1: java.util.function.Function;

        $r1 := @parameter2: java.lang.Object;

        $r1 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        interfaceinvoke $r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    public int characteristics()
    {
        com.google.common.collect.CollectSpliterators$1 r0;
        int $i0, $i1;
        java.util.Spliterator $r1;

        r0 := @this: com.google.common.collect.CollectSpliterators$1;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.Spliterator val$fromSpliterator>;

        $i0 = interfaceinvoke $r1.<java.util.Spliterator: int characteristics()>();

        $i1 = -262;

        $i0 = $i0 & $i1;

        return $i0;
    }

    public long estimateSize()
    {
        long $l0;
        com.google.common.collect.CollectSpliterators$1 r0;
        java.util.Spliterator $r1;

        r0 := @this: com.google.common.collect.CollectSpliterators$1;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.Spliterator val$fromSpliterator>;

        $l0 = interfaceinvoke $r1.<java.util.Spliterator: long estimateSize()>();

        return $l0;
    }

    public void forEachRemaining(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.CollectSpliterators$1 r0;
        c.i.b.c.E $r4;
        java.util.Spliterator $r2;
        java.util.function.Function $r3;

        r0 := @this: com.google.common.collect.CollectSpliterators$1;

        $r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.Spliterator val$fromSpliterator>;

        $r3 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.function.Function val$function>;

        $r4 = new c.i.b.c.E;

        specialinvoke $r4.<c.i.b.c.E: void <init>(java.util.function.Consumer,java.util.function.Function)>($r1, $r3);

        interfaceinvoke $r2.<java.util.Spliterator: void forEachRemaining(java.util.function.Consumer)>($r4);

        return;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        java.util.function.Consumer $r4;
        com.google.common.collect.CollectSpliterators$1 r0;
        c.i.b.c.F $r3;
        java.util.Spliterator $r1;
        java.util.function.Function $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.CollectSpliterators$1;

        $r4 := @parameter0: java.util.function.Consumer;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.Spliterator val$fromSpliterator>;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.function.Function val$function>;

        $r3 = new c.i.b.c.F;

        specialinvoke $r3.<c.i.b.c.F: void <init>(java.util.function.Consumer,java.util.function.Function)>($r4, $r2);

        $z0 = interfaceinvoke $r1.<java.util.Spliterator: boolean tryAdvance(java.util.function.Consumer)>($r3);

        return $z0;
    }

    public java.util.Spliterator trySplit()
    {
        com.google.common.collect.CollectSpliterators$1 r0;
        java.util.function.Function $r1;
        java.util.Spliterator $r2;

        r0 := @this: com.google.common.collect.CollectSpliterators$1;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.Spliterator val$fromSpliterator>;

        $r2 = interfaceinvoke $r2.<java.util.Spliterator: java.util.Spliterator trySplit()>();

        if $r2 == null goto label1;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1: java.util.function.Function val$function>;

        $r2 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r2, $r1);

        return $r2;

     label1:
        return null;
    }
}
