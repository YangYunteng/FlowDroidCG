public final class com.google.common.base.CharMatcher$Is extends com.google.common.base.CharMatcher$FastMatcher
{
    public final char match;

    public void <init>(char)
    {
        char $c0;
        com.google.common.base.CharMatcher$Is r0;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $c0 := @parameter0: char;

        specialinvoke r0.<com.google.common.base.CharMatcher$FastMatcher: void <init>()>();

        r0.<com.google.common.base.CharMatcher$Is: char match> = $c0;

        return;
    }

    public com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)
    {
        com.google.common.base.CharMatcher$Is r0;
        com.google.common.base.CharMatcher $r1;
        char $c0;
        boolean $z0;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 := @parameter0: com.google.common.base.CharMatcher;

        $c0 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $z0 = virtualinvoke $r1.<com.google.common.base.CharMatcher: boolean matches(char)>($c0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher none()>();

        return $r1;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$Is r0;
        int $i2, $i3;
        char $c0, $c1;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $c1 := @parameter0: char;

        $c0 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $i2 = (int) $c1;

        $i3 = (int) $c0;

        if $i2 != $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.google.common.base.CharMatcher negate()
    {
        com.google.common.base.CharMatcher $r1;
        char $c0;
        com.google.common.base.CharMatcher$Is r0;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $c0 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher isNot(char)>($c0);

        return $r1;
    }

    public volatile java.util.function.Predicate negate()
    {
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CharMatcher$Is r0;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 = virtualinvoke r0.<com.google.common.base.CharMatcher$Is: com.google.common.base.CharMatcher negate()>();

        return $r1;
    }

    public com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)
    {
        com.google.common.base.CharMatcher$Is r0;
        com.google.common.base.CharMatcher $r1;
        char $c0;
        boolean $z0;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 := @parameter0: com.google.common.base.CharMatcher;

        $c0 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $z0 = virtualinvoke $r1.<com.google.common.base.CharMatcher: boolean matches(char)>($c0);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $r1 = specialinvoke r0.<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)>($r1);

        return $r1;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, char)
    {
        java.lang.CharSequence $r1;
        com.google.common.base.CharMatcher$Is r0;
        char $c0, $c1;
        java.lang.String $r2;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 := @parameter0: java.lang.CharSequence;

        $c0 := @parameter1: char;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $c1 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>($c1, $c0);

        return $r2;
    }

    public void setBits(java.util.BitSet)
    {
        com.google.common.base.CharMatcher$Is r0;
        int $i1;
        char $c0;
        java.util.BitSet $r1;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 := @parameter0: java.util.BitSet;

        $c0 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $i1 = (int) $c0;

        virtualinvoke $r1.<java.util.BitSet: void set(int)>($i1);

        return;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$Is r0;
        java.lang.StringBuilder $r1;
        char $c0;
        java.lang.String $r2;

        r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.is(\'");

        $c0 = r0.<com.google.common.base.CharMatcher$Is: char match>;

        $r2 = staticinvoke <com.google.common.base.CharMatcher: java.lang.String access$100(char)>($c0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
