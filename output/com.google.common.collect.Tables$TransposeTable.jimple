public class com.google.common.collect.Tables$TransposeTable extends com.google.common.collect.AbstractTable
{
    public static final com.google.common.base.Function TRANSPOSE_CELL;
    public final com.google.common.collect.Table original;

    static void <clinit>()
    {
        com.google.common.collect.Tables$TransposeTable$1 $r0;

        $r0 = new com.google.common.collect.Tables$TransposeTable$1;

        specialinvoke $r0.<com.google.common.collect.Tables$TransposeTable$1: void <init>()>();

        <com.google.common.collect.Tables$TransposeTable: com.google.common.base.Function TRANSPOSE_CELL> = $r0;

        return;
    }

    public void <init>(com.google.common.collect.Table)
    {
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r1 := @parameter0: com.google.common.collect.Table;

        specialinvoke r0.<com.google.common.collect.AbstractTable: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original> = $r1;

        return;
    }

    public java.util.Iterator cellIterator()
    {
        com.google.common.base.Function $r1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Set cellSet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r1 = <com.google.common.collect.Tables$TransposeTable: com.google.common.base.Function TRANSPOSE_CELL>;

        $r4 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>($r4, $r1);

        return $r4;
    }

    public java.util.Spliterator cellSpliterator()
    {
        com.google.common.base.Function $r1;
        java.util.Set $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;
        java.util.Spliterator $r4;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Set cellSet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Spliterator spliterator()>();

        $r1 = <com.google.common.collect.Tables$TransposeTable: com.google.common.base.Function TRANSPOSE_CELL>;

        $r4 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r4, $r1);

        return $r4;
    }

    public void clear()
    {
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        interfaceinvoke $r1.<com.google.common.collect.Table: void clear()>();

        return;
    }

    public java.util.Map column(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Table: java.util.Map row(java.lang.Object)>($r3);

        return $r2;
    }

    public java.util.Set columnKeySet()
    {
        java.util.Set $r1;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Set rowKeySet()>();

        return $r1;
    }

    public java.util.Map columnMap()
    {
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Map rowMap()>();

        return $r1;
    }

    public boolean contains(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Table: boolean contains(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $z0;
    }

    public boolean containsColumn(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $z0 = interfaceinvoke $r1.<com.google.common.collect.Table: boolean containsRow(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean containsRow(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $z0 = interfaceinvoke $r1.<com.google.common.collect.Table: boolean containsColumn(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $z0 = interfaceinvoke $r1.<com.google.common.collect.Table: boolean containsValue(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Table: java.lang.Object get(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2, $r4;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r4, $r2);

        return $r4;
    }

    public void putAll(com.google.common.collect.Table)
    {
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1, $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 := @parameter0: com.google.common.collect.Table;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r2 = staticinvoke <com.google.common.collect.Tables: com.google.common.collect.Table transpose(com.google.common.collect.Table)>($r2);

        interfaceinvoke $r1.<com.google.common.collect.Table: void putAll(com.google.common.collect.Table)>($r2);

        return;
    }

    public java.lang.Object remove(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Table: java.lang.Object remove(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $r3;
    }

    public java.util.Map row(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Table: java.util.Map column(java.lang.Object)>($r3);

        return $r2;
    }

    public java.util.Set rowKeySet()
    {
        java.util.Set $r1;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Set columnKeySet()>();

        return $r1;
    }

    public java.util.Map rowMap()
    {
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Map columnMap()>();

        return $r1;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r1 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $i0 = interfaceinvoke $r1.<com.google.common.collect.Table: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        com.google.common.collect.Tables$TransposeTable r0;
        com.google.common.collect.Table $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Tables$TransposeTable;

        $r2 = r0.<com.google.common.collect.Tables$TransposeTable: com.google.common.collect.Table original>;

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Collection values()>();

        return $r1;
    }
}
