public class com.google.common.cache.CacheBuilderSpec$MaximumWeightParser extends com.google.common.cache.CacheBuilderSpec$LongParser
{

    public void <init>()
    {
        com.google.common.cache.CacheBuilderSpec$MaximumWeightParser r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$MaximumWeightParser;

        specialinvoke r0.<com.google.common.cache.CacheBuilderSpec$LongParser: void <init>()>();

        return;
    }

    public void parseLong(com.google.common.cache.CacheBuilderSpec, long)
    {
        com.google.common.cache.CacheBuilderSpec$MaximumWeightParser r0;
        java.lang.Long $r2;
        long $l0;
        com.google.common.cache.CacheBuilderSpec $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$MaximumWeightParser;

        $r1 := @parameter0: com.google.common.cache.CacheBuilderSpec;

        $l0 := @parameter1: long;

        $r2 = $r1.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight>;

        $z0 = 1;

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r2 = $r1.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z1, "maximum weight was already set to ", $r2);

        $r2 = $r1.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumSize>;

        if $r2 != null goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r2 = $r1.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumSize>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "maximum size was already set to ", $r2);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight> = $r2;

        return;
    }
}
