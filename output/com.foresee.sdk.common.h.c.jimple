public class com.foresee.sdk.common.h.c extends java.lang.Object
{
    public static java.util.concurrent.ScheduledThreadPoolExecutor cy;

    public void <init>()
    {
        com.foresee.sdk.common.h.c r0;

        r0 := @this: com.foresee.sdk.common.h.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.concurrent.ScheduledThreadPoolExecutor P()
    {
        java.util.concurrent.ScheduledThreadPoolExecutor $r0;
        com.foresee.sdk.common.h.a $r1;
        boolean $z0;

        $r0 = <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor cy>;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.util.concurrent.ScheduledThreadPoolExecutor: boolean isShutdown()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = new com.foresee.sdk.common.h.a;

        specialinvoke $r1.<com.foresee.sdk.common.h.a: void <init>()>();

        <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor cy> = $r1;

     label2:
        $r0 = <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor cy>;

        return $r0;
    }

    public static void a(java.util.concurrent.ScheduledThreadPoolExecutor)
    {
        java.util.concurrent.ScheduledThreadPoolExecutor $r0;

        $r0 := @parameter0: java.util.concurrent.ScheduledThreadPoolExecutor;

        <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor cy> = $r0;

        return;
    }
}
