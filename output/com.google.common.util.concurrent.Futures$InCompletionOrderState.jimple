public final class com.google.common.util.concurrent.Futures$InCompletionOrderState extends java.lang.Object
{
    public volatile int delegateIndex;
    public final java.util.concurrent.atomic.AtomicInteger incompleteOutputCount;
    public final com.google.common.util.concurrent.ListenableFuture[] inputFutures;
    public boolean shouldInterrupt;
    public boolean wasCancelled;

    public void <init>(com.google.common.util.concurrent.ListenableFuture[])
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState r0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        com.google.common.util.concurrent.ListenableFuture[] $r1;
        int $i0;

        r0 := @this: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: boolean wasCancelled> = 0;

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: boolean shouldInterrupt> = 1;

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: int delegateIndex> = 0;

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: com.google.common.util.concurrent.ListenableFuture[] inputFutures> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        $i0 = lengthof $r1;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i0);

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: java.util.concurrent.atomic.AtomicInteger incompleteOutputCount> = $r2;

        return;
    }

    public void <init>(com.google.common.util.concurrent.ListenableFuture[], com.google.common.util.concurrent.Futures$1)
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState r0;
        com.google.common.util.concurrent.Futures$1 $r2;
        com.google.common.util.concurrent.ListenableFuture[] $r1;

        r0 := @this: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture[];

        $r2 := @parameter1: com.google.common.util.concurrent.Futures$1;

        specialinvoke r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: void <init>(com.google.common.util.concurrent.ListenableFuture[])>($r1);

        return;
    }

    public static void access$300(com.google.common.util.concurrent.Futures$InCompletionOrderState, com.google.common.collect.ImmutableList, int)
    {
        int $i0;
        com.google.common.util.concurrent.Futures$InCompletionOrderState $r0;
        com.google.common.collect.ImmutableList $r1;

        $r0 := @parameter0: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $r1 := @parameter1: com.google.common.collect.ImmutableList;

        $i0 := @parameter2: int;

        specialinvoke $r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: void recordInputCompletion(com.google.common.collect.ImmutableList,int)>($r1, $i0);

        return;
    }

    public static void access$400(com.google.common.util.concurrent.Futures$InCompletionOrderState, boolean)
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: void recordOutputCancellation(boolean)>($z0);

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture[] access$500(com.google.common.util.concurrent.Futures$InCompletionOrderState)
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState $r0;
        com.google.common.util.concurrent.ListenableFuture[] r1;

        $r0 := @parameter0: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        r1 = $r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: com.google.common.util.concurrent.ListenableFuture[] inputFutures>;

        return r1;
    }

    public static java.util.concurrent.atomic.AtomicInteger access$600(com.google.common.util.concurrent.Futures$InCompletionOrderState)
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState $r0;
        java.util.concurrent.atomic.AtomicInteger r1;

        $r0 := @parameter0: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        r1 = $r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: java.util.concurrent.atomic.AtomicInteger incompleteOutputCount>;

        return r1;
    }

    private void recordCompletion()
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        com.google.common.util.concurrent.ListenableFuture[] $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $r2 = r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: java.util.concurrent.atomic.AtomicInteger incompleteOutputCount>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label3;

        $z0 = r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: boolean wasCancelled>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: com.google.common.util.concurrent.ListenableFuture[] inputFutures>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r3[$i1];

        if $r1 == null goto label2;

        $z0 = r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: boolean shouldInterrupt>;

        interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>($z0);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void recordInputCompletion(com.google.common.collect.ImmutableList, int)
    {
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.Futures$InCompletionOrderState r0;
        com.google.common.collect.ImmutableList $r2;
        com.google.common.util.concurrent.ListenableFuture[] $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        com.google.common.util.concurrent.AbstractFuture $r5;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $r2 := @parameter0: com.google.common.collect.ImmutableList;

        $i0 := @parameter1: int;

        $r3 = r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: com.google.common.util.concurrent.ListenableFuture[] inputFutures>;

        $r1 = $r3[$i0];

        $r3[$i0] = null;

        $i0 = r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: int delegateIndex>;

     label1:
        $i1 = virtualinvoke $r2.<java.util.AbstractCollection: int size()>();

        if $i0 >= $i1 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.common.util.concurrent.AbstractFuture) $r4;

        $z0 = virtualinvoke $r5.<com.google.common.util.concurrent.AbstractFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>($r1);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: void recordCompletion()>();

        $i0 = $i0 + 1;

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: int delegateIndex> = $i0;

        return;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke $r2.<java.util.AbstractCollection: int size()>();

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: int delegateIndex> = $i0;

        return;
    }

    private void recordOutputCancellation(boolean)
    {
        com.google.common.util.concurrent.Futures$InCompletionOrderState r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$InCompletionOrderState;

        $z0 := @parameter0: boolean;

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: boolean wasCancelled> = 1;

        if $z0 != 0 goto label1;

        r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: boolean shouldInterrupt> = 0;

     label1:
        specialinvoke r0.<com.google.common.util.concurrent.Futures$InCompletionOrderState: void recordCompletion()>();

        return;
    }
}
