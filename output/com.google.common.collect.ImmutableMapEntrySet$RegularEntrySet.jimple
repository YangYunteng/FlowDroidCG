public final class com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet extends com.google.common.collect.ImmutableMapEntrySet
{
    public final transient java.util.Map$Entry[] entries;
    public final transient com.google.common.collect.ImmutableMap map;

    public void <init>(com.google.common.collect.ImmutableMap, java.util.Map$Entry[])
    {
        com.google.common.collect.ImmutableMap $r1;
        java.util.Map$Entry[] $r2;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        $r1 := @parameter0: com.google.common.collect.ImmutableMap;

        $r2 := @parameter1: java.util.Map$Entry[];

        specialinvoke r0.<com.google.common.collect.ImmutableMapEntrySet: void <init>()>();

        r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: com.google.common.collect.ImmutableMap map> = $r1;

        r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: java.util.Map$Entry[] entries> = $r2;

        return;
    }

    public com.google.common.collect.ImmutableList createAsList()
    {
        com.google.common.collect.RegularImmutableAsList $r1;
        java.util.Map$Entry[] $r2;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        $r1 = new com.google.common.collect.RegularImmutableAsList;

        $r2 = r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: java.util.Map$Entry[] entries>;

        specialinvoke $r1.<com.google.common.collect.RegularImmutableAsList: void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[])>(r0, $r2);

        return $r1;
    }

    public void forEach(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        java.util.Map$Entry $r3;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;
        int $i0, $i1;
        java.util.Map$Entry[] $r2;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        $r1 := @parameter0: java.util.function.Consumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: java.util.Map$Entry[] entries>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        interfaceinvoke $r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        java.util.Map$Entry[] $r2;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        $r2 = r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: java.util.Map$Entry[] entries>;

        $r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[])>($r2);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMap map()
    {
        com.google.common.collect.ImmutableMap r1;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        r1 = r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: com.google.common.collect.ImmutableMap map>;

        return r1;
    }

    public java.util.Spliterator spliterator()
    {
        java.util.Spliterator $r1;
        java.util.Map$Entry[] $r2;
        com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet r0;

        r0 := @this: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet;

        $r2 = r0.<com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet: java.util.Map$Entry[] entries>;

        $r1 = staticinvoke <java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int)>($r2, 1297);

        return $r1;
    }
}
