public class l.c extends l.z
{
    public static final long e;
    public static final long f;
    public static l.c g;
    public boolean h;
    public l.c i;
    public long j;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(60L);

        <l.c: long e> = $l0;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l0 = <l.c: long e>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toNanos(long)>($l0);

        <l.c: long f> = $l0;

        return;
    }

    public void <init>()
    {
        l.c r0;

        r0 := @this: l.c;

        specialinvoke r0.<l.z: void <init>()>();

        return;
    }

    public static void a(l.c, long, boolean)
    {
        l.c $r0, $r1, $r2;
        java.lang.Throwable $r4;
        long $l0, $l1, $l3;
        java.lang.AssertionError $r6;
        byte $b2;
        l.c$a $r5;
        int $i4;
        java.lang.Class $r3;
        boolean $z0;

        $r0 := @parameter0: l.c;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        entermonitor class "Ll/c;";

     label01:
        $r1 = <l.c: l.c g>;

        if $r1 != null goto label02;

        $r2 = new l.c;

        specialinvoke $r2.<l.c: void <init>()>();

        <l.c: l.c g> = $r2;

        $r5 = new l.c$a;

        specialinvoke $r5.<l.c$a: void <init>()>();

        virtualinvoke $r5.<java.lang.Thread: void start()>();

     label02:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label03;

        if $z0 == 0 goto label03;

        $l3 = virtualinvoke $r0.<l.z: long c()>();

        $l3 = $l3 - $l1;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l3);

        $l0 = $l0 + $l1;

        $r0.<l.c: long j> = $l0;

        goto label05;

     label03:
        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label04;

        $l0 = $l0 + $l1;

        $r0.<l.c: long j> = $l0;

        goto label05;

     label04:
        if $z0 == 0 goto label10;

        $l0 = virtualinvoke $r0.<l.z: long c()>();

        $r0.<l.c: long j> = $l0;

     label05:
        $l0 = virtualinvoke $r0.<l.c: long b(long)>($l1);

        $r1 = <l.c: l.c g>;

     label06:
        $r2 = $r1.<l.c: l.c i>;

        if $r2 == null goto label08;

        $r2 = $r1.<l.c: l.c i>;

        $l3 = virtualinvoke $r2.<l.c: long b(long)>($l1);

        $b2 = $l0 cmp $l3;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label07;

        goto label08;

     label07:
        $r1 = $r1.<l.c: l.c i>;

        goto label06;

     label08:
        $r2 = $r1.<l.c: l.c i>;

        $r0.<l.c: l.c i> = $r2;

        $r1.<l.c: l.c i> = $r0;

        $r0 = <l.c: l.c g>;

        if $r1 != $r0 goto label09;

        $r3 = class "Ll/c;";

        virtualinvoke $r3.<java.lang.Object: void notify()>();

     label09:
        exitmonitor class "Ll/c;";

        return;

     label10:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label11:
        $r4 := @caughtexception;

        exitmonitor class "Ll/c;";

        goto label12;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public static boolean a(l.c)
    {
        l.c $r0, $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: l.c;

        entermonitor class "Ll/c;";

     label1:
        $r1 = <l.c: l.c g>;

     label2:
        if $r1 == null goto label6;

        $r2 = $r1.<l.c: l.c i>;

        if $r2 != $r0 goto label4;

        $r2 = $r0.<l.c: l.c i>;

        $r1.<l.c: l.c i> = $r2;

        $r0.<l.c: l.c i> = null;

     label3:
        exitmonitor class "Ll/c;";

        return 0;

     label4:
        $r1 = $r1.<l.c: l.c i>;

     label5:
        goto label2;

     label6:
        exitmonitor class "Ll/c;";

        return 1;

     label7:
        $r3 := @caughtexception;

        exitmonitor class "Ll/c;";

        goto label8;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public static l.c g()
    {
        l.c $r0, $r2, $r3;
        long $l0, $l1, $l3;
        byte $b2;
        int $i4;
        java.lang.Class $r1;

        $r0 = <l.c: l.c g>;

        $r0 = $r0.<l.c: l.c i>;

        if $r0 != null goto label1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r1 = class "Ll/c;";

        $l1 = <l.c: long e>;

        virtualinvoke $r1.<java.lang.Object: void wait(long)>($l1);

        $r0 = <l.c: l.c g>;

        $r0 = $r0.<l.c: l.c i>;

        if $r0 != null goto label3;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l0 = $l1 - $l0;

        $l1 = <l.c: long f>;

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 < 0 goto label3;

        $r0 = <l.c: l.c g>;

        return $r0;

     label1:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l1 = virtualinvoke $r0.<l.c: long b(long)>($l0);

        $b2 = $l1 cmp 0L;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label2;

        $l0 = $l1 / 1000000L;

        $l3 = 1000000L * $l0;

        $l1 = $l1 - $l3;

        $r1 = class "Ll/c;";

        $i4 = (int) $l1;

        virtualinvoke $r1.<java.lang.Object: void wait(long,int)>($l0, $i4);

        return null;

     label2:
        $r2 = <l.c: l.c g>;

        $r3 = $r0.<l.c: l.c i>;

        $r2.<l.c: l.c i> = $r3;

        $r0.<l.c: l.c i> = null;

        return $r0;

     label3:
        return null;
    }

    public final java.io.IOException a(java.io.IOException)
    {
        l.c r0;
        java.io.IOException $r1;
        boolean $z0;

        r0 := @this: l.c;

        $r1 := @parameter0: java.io.IOException;

        $z0 = virtualinvoke r0.<l.c: boolean i()>();

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = virtualinvoke r0.<l.c: java.io.IOException b(java.io.IOException)>($r1);

        return $r1;
    }

    public final l.w a(l.w)
    {
        l.c r0;
        l.w $r1;
        l.a $r2;

        r0 := @this: l.c;

        $r1 := @parameter0: l.w;

        $r2 = new l.a;

        specialinvoke $r2.<l.a: void <init>(l.c,l.w)>(r0, $r1);

        return $r2;
    }

    public final l.x a(l.x)
    {
        l.c r0;
        l.b $r2;
        l.x $r1;

        r0 := @this: l.c;

        $r1 := @parameter0: l.x;

        $r2 = new l.b;

        specialinvoke $r2.<l.b: void <init>(l.c,l.x)>(r0, $r1);

        return $r2;
    }

    public final void a(boolean)
    {
        l.c r0;
        java.io.IOException $r1;
        boolean $z0, $z1;

        r0 := @this: l.c;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<l.c: boolean i()>();

        if $z1 == 0 goto label2;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<l.c: java.io.IOException b(java.io.IOException)>(null);

        throw $r1;

     label2:
        return;
    }

    public final long b(long)
    {
        l.c r0;
        long $l0, $l1;

        r0 := @this: l.c;

        $l0 := @parameter0: long;

        $l1 = r0.<l.c: long j>;

        $l0 = $l1 - $l0;

        return $l0;
    }

    public java.io.IOException b(java.io.IOException)
    {
        l.c r0;
        java.io.IOException $r1;
        java.io.InterruptedIOException $r2;

        r0 := @this: l.c;

        $r1 := @parameter0: java.io.IOException;

        $r2 = new java.io.InterruptedIOException;

        specialinvoke $r2.<java.io.InterruptedIOException: void <init>(java.lang.String)>("timeout");

        if $r1 == null goto label1;

        virtualinvoke $r2.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>($r1);

     label1:
        return $r2;
    }

    public final void h()
    {
        l.c r0;
        java.lang.IllegalStateException $r1;
        byte $b0;
        long $l1;
        boolean $z0;

        r0 := @this: l.c;

        $z0 = r0.<l.c: boolean h>;

        if $z0 != 0 goto label2;

        $l1 = virtualinvoke r0.<l.z: long f()>();

        $z0 = virtualinvoke r0.<l.z: boolean d()>();

        $b0 = $l1 cmp 0L;

        if $b0 != 0 goto label1;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<l.c: boolean h> = 1;

        staticinvoke <l.c: void a(l.c,long,boolean)>(r0, $l1, $z0);

        return;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unbalanced enter/exit");

        throw $r1;
    }

    public final boolean i()
    {
        l.c r0;
        boolean $z0;

        r0 := @this: l.c;

        $z0 = r0.<l.c: boolean h>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r0.<l.c: boolean h> = 0;

        $z0 = staticinvoke <l.c: boolean a(l.c)>(r0);

        return $z0;
    }

    public void j()
    {
        l.c r0;

        r0 := @this: l.c;

        return;
    }
}
