public abstract class com.google.common.collect.Multimaps$Entries extends java.util.AbstractCollection
{

    public void <init>()
    {
        com.google.common.collect.Multimaps$Entries r0;

        r0 := @this: com.google.common.collect.Multimaps$Entries;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public void clear()
    {
        com.google.common.collect.Multimap $r1;
        com.google.common.collect.Multimaps$Entries r0;

        r0 := @this: com.google.common.collect.Multimaps$Entries;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$Entries: com.google.common.collect.Multimap multimap()>();

        interfaceinvoke $r1.<com.google.common.collect.Multimap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        com.google.common.collect.Multimaps$Entries r0;
        java.lang.Object $r1, $r4;
        com.google.common.collect.Multimap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$Entries;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r3 = virtualinvoke r0.<com.google.common.collect.Multimaps$Entries: com.google.common.collect.Multimap multimap()>();

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $z0;

     label1:
        return 0;
    }

    public abstract com.google.common.collect.Multimap multimap();

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        com.google.common.collect.Multimaps$Entries r0;
        java.lang.Object $r1, $r4;
        com.google.common.collect.Multimap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$Entries;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r3 = virtualinvoke r0.<com.google.common.collect.Multimaps$Entries: com.google.common.collect.Multimap multimap()>();

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $z0;

     label1:
        return 0;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.Multimap $r1;
        com.google.common.collect.Multimaps$Entries r0;

        r0 := @this: com.google.common.collect.Multimaps$Entries;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$Entries: com.google.common.collect.Multimap multimap()>();

        $i0 = interfaceinvoke $r1.<com.google.common.collect.Multimap: int size()>();

        return $i0;
    }
}
