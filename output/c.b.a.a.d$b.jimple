public class c.b.a.a.d$b extends java.io.FilterInputStream
{
    public int a;

    public void <init>(java.io.InputStream)
    {
        c.b.a.a.d$b r0;
        java.io.InputStream $r1;

        r0 := @this: c.b.a.a.d$b;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<c.b.a.a.d$b: int a> = 0;

        return;
    }

    public void <init>(java.io.InputStream, c.b.a.a.c)
    {
        c.b.a.a.c $r2;
        c.b.a.a.d$b r0;
        java.io.InputStream $r1;

        r0 := @this: c.b.a.a.d$b;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: c.b.a.a.c;

        specialinvoke r0.<c.b.a.a.d$b: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public static int a(c.b.a.a.d$b)
    {
        int i0;
        c.b.a.a.d$b $r0;

        $r0 := @parameter0: c.b.a.a.d$b;

        i0 = $r0.<c.b.a.a.d$b: int a>;

        return i0;
    }

    public int read()
    {
        int $i0, $i1;
        c.b.a.a.d$b r0;

        r0 := @this: c.b.a.a.d$b;

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $i1 = r0.<c.b.a.a.d$b: int a>;

        $i1 = $i1 + 1;

        r0.<c.b.a.a.d$b: int a> = $i1;

     label1:
        return $i0;
    }

    public int read(byte[], int, int)
    {
        byte[] $r1;
        c.b.a.a.d$b r0;
        int $i0, $i1;

        r0 := @this: c.b.a.a.d$b;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>($r1, $i1, $i0);

        $i0 = -1;

        if $i1 == $i0 goto label1;

        $i0 = r0.<c.b.a.a.d$b: int a>;

        $i0 = $i0 + $i1;

        r0.<c.b.a.a.d$b: int a> = $i0;

     label1:
        return $i1;
    }
}
