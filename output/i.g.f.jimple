public class i.g.f extends i.g.e
{

    public static final int a(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        if $i1 >= $i0 goto label1;

        return $i0;

     label1:
        return $i1;
    }

    public static final int a(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i1 > $i2 goto label3;

        if $i0 >= $i1 goto label1;

        return $i1;

     label1:
        if $i0 <= $i2 goto label2;

        return $i2;

     label2:
        return $i0;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot coerce value to an empty range: maximum ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than minimum ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static final long a(long, long)
    {
        byte $b1;
        int $i3;
        long $l0, $l2;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $b1 = $l2 cmp $l0;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label1;

        return $l0;

     label1:
        return $l2;
    }

    public static final int b(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        if $i1 <= $i0 goto label1;

        return $i0;

     label1:
        return $i1;
    }

    public static final long b(long, long)
    {
        byte $b1;
        int $i3;
        long $l0, $l2;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $b1 = $l2 cmp $l0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        return $l0;

     label1:
        return $l2;
    }

    public static final i.g.b c(int, int)
    {
        int $i0, $i1, $i2;
        i.g.b $r1;
        i.g.b$a $r0;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0 = <i.g.b: i.g.b$a a>;

        $i2 = -1;

        $r1 = virtualinvoke $r0.<i.g.b$a: i.g.b a(int,int,int)>($i1, $i0, $i2);

        return $r1;
    }

    public static final i.g.d d(int, int)
    {
        i.g.d $r0, $r2;
        int $i0, $i1, $i2;
        i.g.d$a $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 > -2147483648 goto label1;

        $r1 = <i.g.d: i.g.d$a f>;

        $r0 = virtualinvoke $r1.<i.g.d$a: i.g.d a()>();

        return $r0;

     label1:
        $r2 = new i.g.d;

        $i2 = -1;

        $i1 = $i1 + $i2;

        specialinvoke $r2.<i.g.d: void <init>(int,int)>($i0, $i1);

        return $r2;
    }
}
