public final class com.google.common.collect.ImmutableRangeSet$ComplementRanges extends com.google.common.collect.ImmutableList
{
    public final boolean positiveBoundedAbove;
    public final boolean positiveBoundedBelow;
    public final int size;
    public final com.google.common.collect.ImmutableRangeSet this$0;

    public void <init>(com.google.common.collect.ImmutableRangeSet)
    {
        com.google.common.collect.Range $r4;
        com.google.common.collect.ImmutableList $r2;
        int $i0, $i1;
        com.google.common.collect.ImmutableRangeSet$ComplementRanges r0;
        java.lang.Object $r3;
        com.google.common.collect.ImmutableRangeSet $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$ComplementRanges;

        $r1 := @parameter0: com.google.common.collect.ImmutableRangeSet;

        r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: com.google.common.collect.ImmutableRangeSet this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.ImmutableList: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.google.common.collect.Range) $r3;

        $z0 = virtualinvoke $r4.<com.google.common.collect.Range: boolean hasLowerBound()>();

        r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedBelow> = $z0;

        $r2 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r1);

        $r3 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>($r2);

        $r4 = (com.google.common.collect.Range) $r3;

        $z0 = virtualinvoke $r4.<com.google.common.collect.Range: boolean hasUpperBound()>();

        r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedAbove> = $z0;

        $r2 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r1);

        $i0 = virtualinvoke $r2.<java.util.AbstractCollection: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

        $z0 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedBelow>;

        if $z0 == 0 goto label1;

        $i0 = $i0 + 1;

     label1:
        $z0 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedAbove>;

        if $z0 == 0 goto label2;

        $i0 = $i0 + 1;

     label2:
        r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: int size> = $i0;

        return;
    }

    public com.google.common.collect.Range get(int)
    {
        com.google.common.collect.Cut $r1, $r6;
        com.google.common.collect.Range $r5;
        com.google.common.collect.ImmutableList $r3;
        int $i0, $i1, $i2;
        com.google.common.collect.ImmutableRangeSet$ComplementRanges r0;
        java.lang.Object $r4;
        com.google.common.collect.ImmutableRangeSet $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$ComplementRanges;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: int size>;

        staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int)>($i0, $i1);

        $z0 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedBelow>;

        if $z0 == 0 goto label2;

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        goto label3;

     label1:
        $r2 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: com.google.common.collect.ImmutableRangeSet this$0>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r2);

        $i1 = -1;

        $i1 = $i0 + $i1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (com.google.common.collect.Range) $r4;

        $r1 = $r5.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        goto label3;

     label2:
        $r2 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: com.google.common.collect.ImmutableRangeSet this$0>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.common.collect.Range) $r4;

        $r1 = $r5.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

     label3:
        $z0 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedAbove>;

        if $z0 == 0 goto label4;

        $i1 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: int size>;

        $i2 = -1;

        $i1 = $i1 + $i2;

        if $i0 != $i1 goto label4;

        $r6 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut aboveAll()>();

        goto label5;

     label4:
        $r2 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: com.google.common.collect.ImmutableRangeSet this$0>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r2);

        $z0 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: boolean positiveBoundedBelow>;

        $z0 = $z0 ^ 1;

        $i0 = $i0 + $z0;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.common.collect.Range) $r4;

        $r6 = $r5.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

     label5:
        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut)>($r1, $r6);

        return $r5;
    }

    public volatile java.lang.Object get(int)
    {
        com.google.common.collect.Range $r1;
        int $i0;
        com.google.common.collect.ImmutableRangeSet$ComplementRanges r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$ComplementRanges;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: com.google.common.collect.Range get(int)>($i0);

        return $r1;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.ImmutableRangeSet$ComplementRanges r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$ComplementRanges;

        return 1;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.ImmutableRangeSet$ComplementRanges r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$ComplementRanges;

        i0 = r0.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: int size>;

        return i0;
    }
}
