public class org.codehaus.jackson.map.ser.impl.TimeZoneSerializer extends org.codehaus.jackson.map.ser.ScalarSerializerBase
{
    public static final org.codehaus.jackson.map.ser.impl.TimeZoneSerializer instance;

    static void <clinit>()
    {
        org.codehaus.jackson.map.ser.impl.TimeZoneSerializer $r0;

        $r0 = new org.codehaus.jackson.map.ser.impl.TimeZoneSerializer;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void <init>()>();

        <org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: org.codehaus.jackson.map.ser.impl.TimeZoneSerializer instance> = $r0;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.map.ser.impl.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.TimeZoneSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.ScalarSerializerBase: void <init>(java.lang.Class)>(class "Ljava/util/TimeZone;");

        return;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.JsonGenerator $r1;
        java.util.TimeZone $r4;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Object $r3;
        org.codehaus.jackson.map.ser.impl.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.TimeZoneSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.TimeZone) $r3;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serialize(java.util.TimeZone, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.JsonGenerator $r1;
        java.util.TimeZone $r4;
        org.codehaus.jackson.map.SerializerProvider $r2;
        org.codehaus.jackson.map.ser.impl.TimeZoneSerializer r0;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.map.ser.impl.TimeZoneSerializer;

        $r4 := @parameter0: java.util.TimeZone;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r3 = virtualinvoke $r4.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r3);

        return;
    }

    public volatile void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer)
    {
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.TypeSerializer $r3;
        java.util.TimeZone $r5;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ser.impl.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.TimeZoneSerializer;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r3 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        $r5 = (java.util.TimeZone) $r4;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void serializeWithType(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r5, $r1, $r2, $r3);

        return;
    }

    public void serializeWithType(java.util.TimeZone, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer)
    {
        java.util.TimeZone $r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.TypeSerializer $r4;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.ser.impl.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.TimeZoneSerializer;

        $r1 := @parameter0: java.util.TimeZone;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        virtualinvoke $r4.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class)>($r1, $r2, class "Ljava/util/TimeZone;");

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r1, $r2, $r3);

        virtualinvoke $r4.<org.codehaus.jackson.map.TypeSerializer: void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>($r1, $r2);

        return;
    }
}
