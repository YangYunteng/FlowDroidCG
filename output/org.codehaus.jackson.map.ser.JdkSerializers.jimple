public class org.codehaus.jackson.map.ser.JdkSerializers extends java.lang.Object implements org.codehaus.jackson.map.util.Provider
{

    public void <init>()
    {
        org.codehaus.jackson.map.ser.JdkSerializers r0;

        r0 := @this: org.codehaus.jackson.map.ser.JdkSerializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Collection provide()
    {
        org.codehaus.jackson.map.ser.ToStringSerializer $r3;
        java.util.Set $r1;
        java.util.HashMap $r2;
        java.lang.Class $r4;
        org.codehaus.jackson.map.ser.JdkSerializers r0;

        r0 := @this: org.codehaus.jackson.map.ser.JdkSerializers;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = <org.codehaus.jackson.map.ser.ToStringSerializer: org.codehaus.jackson.map.ser.ToStringSerializer instance>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URL;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URI;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Currency;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/UUID;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/regex/Pattern;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Locale;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Locale;", $r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicReference;", class "Lorg/codehaus/jackson/map/ser/JdkSerializers$AtomicReferenceSerializer;");

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicBoolean;", class "Lorg/codehaus/jackson/map/ser/JdkSerializers$AtomicBooleanSerializer;");

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicInteger;", class "Lorg/codehaus/jackson/map/ser/JdkSerializers$AtomicIntegerSerializer;");

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicLong;", class "Lorg/codehaus/jackson/map/ser/JdkSerializers$AtomicLongSerializer;");

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/io/File;", class "Lorg/codehaus/jackson/map/ser/JdkSerializers$FileSerializer;");

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Class;", class "Lorg/codehaus/jackson/map/ser/JdkSerializers$ClassSerializer;");

        $r4 = <java.lang.Void: java.lang.Class TYPE>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, class "Lorg/codehaus/jackson/map/ser/NullSerializer;");

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        return $r1;
    }
}
