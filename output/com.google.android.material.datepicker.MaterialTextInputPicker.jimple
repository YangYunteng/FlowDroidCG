public final class com.google.android.material.datepicker.MaterialTextInputPicker extends com.google.android.material.datepicker.PickerFragment
{
    public static final java.lang.String CALENDAR_CONSTRAINTS_KEY;
    public static final java.lang.String DATE_SELECTOR_KEY;
    public com.google.android.material.datepicker.CalendarConstraints calendarConstraints;
    public com.google.android.material.datepicker.DateSelector dateSelector;

    public void <init>()
    {
        com.google.android.material.datepicker.MaterialTextInputPicker r0;

        r0 := @this: com.google.android.material.datepicker.MaterialTextInputPicker;

        specialinvoke r0.<com.google.android.material.datepicker.PickerFragment: void <init>()>();

        return;
    }

    public static com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector, com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.DateSelector $r3;
        android.os.Bundle $r2;
        com.google.android.material.datepicker.MaterialTextInputPicker $r1;
        com.google.android.material.datepicker.CalendarConstraints $r0;

        $r3 := @parameter0: com.google.android.material.datepicker.DateSelector;

        $r0 := @parameter1: com.google.android.material.datepicker.CalendarConstraints;

        $r1 = new com.google.android.material.datepicker.MaterialTextInputPicker;

        specialinvoke $r1.<com.google.android.material.datepicker.MaterialTextInputPicker: void <init>()>();

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("DATE_SELECTOR_KEY", $r3);

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("CALENDAR_CONSTRAINTS_KEY", $r0);

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)>($r2);

        return $r1;
    }

    public com.google.android.material.datepicker.DateSelector getDateSelector()
    {
        com.google.android.material.datepicker.DateSelector $r1;
        java.lang.IllegalStateException $r2;
        com.google.android.material.datepicker.MaterialTextInputPicker r0;

        r0 := @this: com.google.android.material.datepicker.MaterialTextInputPicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("dateSelector should not be null. Use MaterialTextInputPicker#newInstance() to create this fragment with a DateSelector, and call this method after the fragment has been created.");

        throw $r2;
    }

    public void onCreate(android.os.Bundle)
    {
        com.google.android.material.datepicker.DateSelector $r3;
        android.os.Bundle $r1;
        android.os.Parcelable $r2;
        com.google.android.material.datepicker.MaterialTextInputPicker r0;
        com.google.android.material.datepicker.CalendarConstraints $r4;

        r0 := @this: com.google.android.material.datepicker.MaterialTextInputPicker;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>($r1);

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.os.Bundle getArguments()>();

     label1:
        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("DATE_SELECTOR_KEY");

        $r3 = (com.google.android.material.datepicker.DateSelector) $r2;

        r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.DateSelector dateSelector> = $r3;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("CALENDAR_CONSTRAINTS_KEY");

        $r4 = (com.google.android.material.datepicker.CalendarConstraints) $r2;

        r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints> = $r4;

        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.google.android.material.datepicker.MaterialTextInputPicker$1 $r5;
        android.os.Bundle $r2;
        android.view.LayoutInflater $r7;
        com.google.android.material.datepicker.CalendarConstraints $r4;
        android.view.ViewGroup $r1;
        com.google.android.material.datepicker.DateSelector $r3;
        com.google.android.material.datepicker.MaterialTextInputPicker r0;
        android.view.View $r6;

        r0 := @this: com.google.android.material.datepicker.MaterialTextInputPicker;

        $r7 := @parameter0: android.view.LayoutInflater;

        $r1 := @parameter1: android.view.ViewGroup;

        $r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $r4 = r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r5 = new com.google.android.material.datepicker.MaterialTextInputPicker$1;

        specialinvoke $r5.<com.google.android.material.datepicker.MaterialTextInputPicker$1: void <init>(com.google.android.material.datepicker.MaterialTextInputPicker)>(r0);

        $r6 = interfaceinvoke $r3.<com.google.android.material.datepicker.DateSelector: android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)>($r7, $r1, $r2, $r4, $r5);

        return $r6;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.google.android.material.datepicker.DateSelector $r2;
        android.os.Bundle $r1;
        com.google.android.material.datepicker.MaterialTextInputPicker r0;
        com.google.android.material.datepicker.CalendarConstraints $r3;

        r0 := @this: com.google.android.material.datepicker.MaterialTextInputPicker;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>($r1);

        $r2 = r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("DATE_SELECTOR_KEY", $r2);

        $r3 = r0.<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("CALENDAR_CONSTRAINTS_KEY", $r3);

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.datepicker.MaterialTextInputPicker: java.lang.String DATE_SELECTOR_KEY> = "DATE_SELECTOR_KEY";

        <com.google.android.material.datepicker.MaterialTextInputPicker: java.lang.String CALENDAR_CONSTRAINTS_KEY> = "CALENDAR_CONSTRAINTS_KEY";

        return;
    }
}
