public class com.google.android.material.datepicker.UtcDates extends java.lang.Object
{
    public static final java.lang.String UTC;
    public static java.util.concurrent.atomic.AtomicReference timeSourceRef;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        <com.google.android.material.datepicker.UtcDates: java.lang.String UTC> = "UTC";

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        <com.google.android.material.datepicker.UtcDates: java.util.concurrent.atomic.AtomicReference timeSourceRef> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.datepicker.UtcDates r0;

        r0 := @this: com.google.android.material.datepicker.UtcDates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long canonicalYearMonthDay(long)
    {
        long $l0;
        java.util.Calendar $r0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendar()>();

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getDayCopy(java.util.Calendar)>($r0);

        $l0 = virtualinvoke $r0.<java.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public static int findCharactersInDateFormatPattern(java.lang.String, java.lang.String, int, int)
    {
        int $i0, $i1, $i2, $i4;
        char $c3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

     label1:
        if $i1 < 0 goto label4;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i2 = (int) $c3;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i2);

        $i4 = -1;

        if $i2 != $i4 goto label4;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i2 = (int) $c3;

        if $i2 != 39 goto label3;

     label2:
        $i1 = $i1 + $i0;

        if $i1 < 0 goto label3;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i2 = (int) $c3;

        if $i2 == 39 goto label3;

        goto label2;

     label3:
        $i1 = $i1 + $i0;

        goto label1;

     label4:
        return $i1;
    }

    public static android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale)
    {
        android.icu.text.DateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)>("MMMd", $r1);

        return $r0;
    }

    public static android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale)
    {
        android.icu.text.DateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)>("MMMEd", $r1);

        return $r0;
    }

    public static android.icu.text.DateFormat getAndroidFormat(java.lang.String, java.util.Locale)
    {
        java.util.Locale $r1;
        android.icu.util.TimeZone $r3;
        android.icu.text.DateFormat $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <android.icu.text.DateFormat: android.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,java.util.Locale)>($r0, $r1);

        $r3 = staticinvoke <com.google.android.material.datepicker.UtcDates: android.icu.util.TimeZone getUtcAndroidTimeZone()>();

        virtualinvoke $r2.<android.icu.text.DateFormat: void setTimeZone(android.icu.util.TimeZone)>($r3);

        return $r2;
    }

    public static java.util.Calendar getDayCopy(java.util.Calendar)
    {
        java.util.Calendar $r0, $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.util.Calendar;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendarOf(java.util.Calendar)>($r0);

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendar()>();

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(1);

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(2);

        $i2 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(5);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int,int)>($i0, $i1, $i2);

        return $r1;
    }

    public static java.text.DateFormat getFormat(int, java.util.Locale)
    {
        java.util.Locale $r0;
        java.util.TimeZone $r2;
        int $i0;
        java.text.DateFormat $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.Locale;

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i0, $r0);

        $r2 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()>();

        virtualinvoke $r1.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        return $r1;
    }

    public static java.text.DateFormat getFullFormat()
    {
        java.util.Locale $r0;
        java.text.DateFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFullFormat(java.util.Locale)>($r0);

        return $r1;
    }

    public static java.text.DateFormat getFullFormat(java.util.Locale)
    {
        java.text.DateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFormat(int,java.util.Locale)>(0, $r1);

        return $r0;
    }

    public static java.text.DateFormat getMediumFormat()
    {
        java.util.Locale $r0;
        java.text.DateFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.DateFormat getMediumFormat(java.util.Locale)>($r0);

        return $r1;
    }

    public static java.text.DateFormat getMediumFormat(java.util.Locale)
    {
        java.text.DateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFormat(int,java.util.Locale)>(2, $r1);

        return $r0;
    }

    public static java.text.DateFormat getMediumNoYear()
    {
        java.util.Locale $r0;
        java.text.DateFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.DateFormat getMediumNoYear(java.util.Locale)>($r0);

        return $r1;
    }

    public static java.text.DateFormat getMediumNoYear(java.util.Locale)
    {
        java.util.Locale $r0;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r3;
        java.text.DateFormat $r1;

        $r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.DateFormat getMediumFormat(java.util.Locale)>($r0);

        $r2 = (java.text.SimpleDateFormat) $r1;

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        $r3 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.lang.String removeYearFromDateFormatPattern(java.lang.String)>($r3);

        virtualinvoke $r2.<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>($r3);

        return $r2;
    }

    public static java.text.SimpleDateFormat getSimpleFormat(java.lang.String)
    {
        java.text.SimpleDateFormat $r2;
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)>($r0, $r1);

        return $r2;
    }

    public static java.text.SimpleDateFormat getSimpleFormat(java.lang.String, java.util.Locale)
    {
        java.util.Locale $r0;
        java.util.TimeZone $r2;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r3;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.Locale;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r3, $r0);

        $r2 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()>();

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        return $r1;
    }

    public static java.text.SimpleDateFormat getTextInputFormat()
    {
        java.util.Locale $r0;
        java.util.TimeZone $r4;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r3;
        java.text.DateFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, $r0);

        $r2 = (java.text.SimpleDateFormat) $r1;

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String toLocalizedPattern()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s+", "");

        $r2 = new java.text.SimpleDateFormat;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r3, $r0);

        $r4 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()>();

        virtualinvoke $r2.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        virtualinvoke $r2.<java.text.SimpleDateFormat: void setLenient(boolean)>(0);

        return $r2;
    }

    public static java.lang.String getTextInputHint(android.content.res.Resources, java.text.SimpleDateFormat)
    {
        int $i0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2, $r3, $r4, $r5;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: java.text.SimpleDateFormat;

        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String toLocalizedPattern()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_text_input_year_abbr>;

        $r3 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $i0 = <com.google.android.material.R$string: int mtrl_picker_text_input_month_abbr>;

        $r4 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $i0 = <com.google.android.material.R$string: int mtrl_picker_text_input_day_abbr>;

        $r5 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("d", $r5);

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("M", $r4);

        $r3 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("y", $r3);

        return $r3;
    }

    public static com.google.android.material.datepicker.TimeSource getTimeSource()
    {
        java.lang.Object $r1;
        com.google.android.material.datepicker.TimeSource $r2;
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = <com.google.android.material.datepicker.UtcDates: java.util.concurrent.atomic.AtomicReference timeSourceRef>;

        $r1 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r2 = (com.google.android.material.datepicker.TimeSource) $r1;

        if $r2 != null goto label1;

        $r2 = staticinvoke <com.google.android.material.datepicker.TimeSource: com.google.android.material.datepicker.TimeSource system()>();

     label1:
        return $r2;
    }

    public static java.util.TimeZone getTimeZone()
    {
        java.util.TimeZone $r0;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        return $r0;
    }

    public static java.util.Calendar getTodayCalendar()
    {
        com.google.android.material.datepicker.TimeSource $r0;
        java.util.Calendar $r1;
        java.util.TimeZone $r2;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: com.google.android.material.datepicker.TimeSource getTimeSource()>();

        $r1 = virtualinvoke $r0.<com.google.android.material.datepicker.TimeSource: java.util.Calendar now()>();

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, 0);

        $r2 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()>();

        virtualinvoke $r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r2);

        return $r1;
    }

    public static android.icu.util.TimeZone getUtcAndroidTimeZone()
    {
        android.icu.util.TimeZone $r0;

        $r0 = staticinvoke <android.icu.util.TimeZone: android.icu.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        return $r0;
    }

    public static java.util.Calendar getUtcCalendar()
    {
        java.util.Calendar $r0;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendarOf(java.util.Calendar)>(null);

        return $r0;
    }

    public static java.util.Calendar getUtcCalendarOf(java.util.Calendar)
    {
        java.util.Calendar $r0, $r2;
        java.util.TimeZone $r1;
        long $l0;

        $r0 := @parameter0: java.util.Calendar;

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()>();

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r1);

        if $r0 != null goto label1;

        virtualinvoke $r2.<java.util.Calendar: void clear()>();

        return $r2;

     label1:
        $l0 = virtualinvoke $r0.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r2.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        return $r2;
    }

    public static android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale)
    {
        android.icu.text.DateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)>("yMMMd", $r1);

        return $r0;
    }

    public static android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale)
    {
        android.icu.text.DateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)>("yMMMEd", $r1);

        return $r0;
    }

    public static java.text.SimpleDateFormat getYearMonthFormat()
    {
        java.text.SimpleDateFormat $r1;
        java.util.Locale $r0;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)>($r0);

        return $r1;
    }

    public static java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;

        $r1 := @parameter0: java.util.Locale;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)>("LLLL, yyyy", $r1);

        return $r0;
    }

    public static java.lang.String removeYearFromDateFormatPattern(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.google.android.material.datepicker.UtcDates: int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)>($r0, "yY", 1, 0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < $i1 goto label1;

        return $r0;

     label1:
        $r1 = "EMd";

        $i1 = staticinvoke <com.google.android.material.datepicker.UtcDates: int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)>($r0, "EMd", 1, $i0);

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label2;

        $r3 = new java.lang.StringBuilder;

        $r2 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EMd");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $i2 = -1;

        $i0 = staticinvoke <com.google.android.material.datepicker.UtcDates: int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)>($r0, $r1, $i2, $i0);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r1, " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;
    }

    public static void setTimeSource(com.google.android.material.datepicker.TimeSource)
    {
        com.google.android.material.datepicker.TimeSource $r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        $r0 := @parameter0: com.google.android.material.datepicker.TimeSource;

        $r1 = <com.google.android.material.datepicker.UtcDates: java.util.concurrent.atomic.AtomicReference timeSourceRef>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r0);

        return;
    }
}
