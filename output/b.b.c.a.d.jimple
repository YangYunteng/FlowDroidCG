public class b.b.c.a.d extends b.b.c.a.c
{
    public static final boolean DEBUG;
    public static final java.lang.String TAG;
    public boolean mMutated;
    public b.b.c.a.d$a mStateListState;

    public void <init>()
    {
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        specialinvoke r0.<b.b.c.a.d: void <init>(b.b.c.a.d$a,android.content.res.Resources)>(null, null);

        return;
    }

    public void <init>(b.b.c.a.d$a)
    {
        b.b.c.a.d$a $r1;
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        $r1 := @parameter0: b.b.c.a.d$a;

        specialinvoke r0.<b.b.c.a.c: void <init>()>();

        if $r1 == null goto label1;

        virtualinvoke r0.<b.b.c.a.d: void setConstantState(b.b.c.a.c$b)>($r1);

     label1:
        return;
    }

    public void <init>(b.b.c.a.d$a, android.content.res.Resources)
    {
        int[] $r3;
        b.b.c.a.d r0;
        b.b.c.a.d$a $r2, $r4;
        android.content.res.Resources $r1;

        r0 := @this: b.b.c.a.d;

        $r4 := @parameter0: b.b.c.a.d$a;

        $r1 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<b.b.c.a.c: void <init>()>();

        $r2 = new b.b.c.a.d$a;

        specialinvoke $r2.<b.b.c.a.d$a: void <init>(b.b.c.a.d$a,b.b.c.a.d,android.content.res.Resources)>($r4, r0, $r1);

        virtualinvoke r0.<b.b.c.a.d: void setConstantState(b.b.c.a.c$b)>($r2);

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke r0.<b.b.c.a.d: boolean onStateChange(int[])>($r3);

        return;
    }

    private void inflateChildElements(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.content.Context $r4;
        android.graphics.drawable.Drawable $r10;
        android.content.res.TypedArray $r9;
        android.util.AttributeSet $r1;
        int[] $r8;
        int $i0, $i1, $i2;
        java.lang.String $r7;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r6;
        boolean $z0;
        b.b.c.a.d r0;
        b.b.f.Q $r11;
        b.b.c.a.d$a $r3;
        org.xmlpull.v1.XmlPullParserException $r14;
        java.lang.StringBuilder $r12, $r13;
        android.content.res.Resources $r5;

        r0 := @this: b.b.c.a.d;

        $r4 := @parameter0: android.content.Context;

        $r5 := @parameter1: android.content.res.Resources;

        $r6 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter3: android.util.AttributeSet;

        $r2 := @parameter4: android.content.res.Resources$Theme;

        $r3 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

     label01:
        $i1 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label11;

        $i2 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label02;

        if $i1 == 3 goto label11;

     label02:
        if $i1 == 2 goto label03;

        goto label01;

     label03:
        if $i2 > $i0 goto label01;

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label04;

        goto label01;

     label04:
        $r8 = <b.b.d.b: int[] StateListDrawableItem>;

        $r9 = staticinvoke <b.i.b.a.i: android.content.res.TypedArray a(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r5, $r2, $r1, $r8);

        $r10 = null;

        $i1 = <b.b.d.b: int StateListDrawableItem_android_drawable>;

        $i2 = -1;

        $i1 = virtualinvoke $r9.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, $i2);

        if $i1 <= 0 goto label05;

        $r11 = staticinvoke <b.b.f.Q: b.b.f.Q a()>();

        $r10 = virtualinvoke $r11.<b.b.f.Q: android.graphics.drawable.Drawable b(android.content.Context,int)>($r4, $i1);

     label05:
        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        $r8 = virtualinvoke r0.<b.b.c.a.d: int[] extractStateSet(android.util.AttributeSet)>($r1);

        if $r10 != null goto label10;

     label06:
        $i1 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 4 goto label07;

        goto label06;

     label07:
        if $i1 != 2 goto label09;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label08;

        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, $r6, $r1, $r2);

        goto label10;

     label08:
        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r5, $r6, $r1);

        goto label10;

     label09:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        $r12 = $r13;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        throw $r14;

     label10:
        virtualinvoke $r3.<b.b.c.a.d$a: int a(int[],android.graphics.drawable.Drawable)>($r8, $r10);

        goto label01;

     label11:
        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        b.b.c.a.d r0;
        int $i0, $i1;
        b.b.c.a.d$a $r1;
        android.content.res.TypedArray $r2;
        boolean $z0;

        r0 := @this: b.b.c.a.d;

        $r2 := @parameter0: android.content.res.TypedArray;

        $r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $i0 = $r1.<b.b.c.a.c$b: int d>;

        $i1 = virtualinvoke $r2.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i0 = $i0 | $i1;

        $r1.<b.b.c.a.c$b: int d> = $i0;

     label1:
        $i0 = <b.b.d.b: int StateListDrawable_android_variablePadding>;

        $z0 = $r1.<b.b.c.a.c$b: boolean i>;

        $z0 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        $r1.<b.b.c.a.c$b: boolean i> = $z0;

        $i0 = <b.b.d.b: int StateListDrawable_android_constantSize>;

        $z0 = $r1.<b.b.c.a.c$b: boolean l>;

        $z0 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        $r1.<b.b.c.a.c$b: boolean l> = $z0;

        $i0 = <b.b.d.b: int StateListDrawable_android_enterFadeDuration>;

        $i1 = $r1.<b.b.c.a.c$b: int A>;

        $i0 = virtualinvoke $r2.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i1);

        $r1.<b.b.c.a.c$b: int A> = $i0;

        $i0 = <b.b.d.b: int StateListDrawable_android_exitFadeDuration>;

        $i1 = $r1.<b.b.c.a.c$b: int B>;

        $i0 = virtualinvoke $r2.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i1);

        $r1.<b.b.c.a.c$b: int B> = $i0;

        $i0 = <b.b.d.b: int StateListDrawable_android_dither>;

        $z0 = $r1.<b.b.c.a.c$b: boolean x>;

        $z0 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        $r1.<b.b.c.a.c$b: boolean x> = $z0;

        return;
    }

    public void addState(int[], android.graphics.drawable.Drawable)
    {
        int[] $r3;
        b.b.c.a.d r0;
        android.graphics.drawable.Drawable $r1;
        b.b.c.a.d$a $r2;

        r0 := @this: b.b.c.a.d;

        $r3 := @parameter0: int[];

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        $r2 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        virtualinvoke $r2.<b.b.c.a.d$a: int a(int[],android.graphics.drawable.Drawable)>($r3, $r1);

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke r0.<b.b.c.a.d: boolean onStateChange(int[])>($r3);

     label1:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        int[] $r1;
        android.content.res.Resources$Theme $r2;
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        $r2 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<b.b.c.a.c: void applyTheme(android.content.res.Resources$Theme)>($r2);

        $r1 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke r0.<b.b.c.a.d: boolean onStateChange(int[])>($r1);

        return;
    }

    public void clearMutated()
    {
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        specialinvoke r0.<b.b.c.a.c: void clearMutated()>();

        r0.<b.b.c.a.d: boolean mMutated> = 0;

        return;
    }

    public volatile b.b.c.a.c$b cloneConstantState()
    {
        b.b.c.a.d$a $r1;
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        $r1 = virtualinvoke r0.<b.b.c.a.d: b.b.c.a.d$a cloneConstantState()>();

        return $r1;
    }

    public b.b.c.a.d$a cloneConstantState()
    {
        b.b.c.a.d$a $r1, $r2;
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        $r1 = new b.b.c.a.d$a;

        $r2 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        specialinvoke $r1.<b.b.c.a.d$a: void <init>(b.b.c.a.d$a,b.b.c.a.d,android.content.res.Resources)>($r2, r0, null);

        return $r1;
    }

    public int[] extractStateSet(android.util.AttributeSet)
    {
        b.b.c.a.d r0;
        android.util.AttributeSet $r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: b.b.c.a.d;

        $r2 := @parameter0: android.util.AttributeSet;

        $i0 = interfaceinvoke $r2.<android.util.AttributeSet: int getAttributeCount()>();

        $r1 = newarray (int)[$i0];

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $i3 = interfaceinvoke $r2.<android.util.AttributeSet: int getAttributeNameResource(int)>($i1);

        $i4 = $i3;

        if $i3 == 0 goto label4;

        if $i3 == 16842960 goto label4;

        if $i3 == 16843161 goto label4;

        $i5 = $i2 + 1;

        $z0 = interfaceinvoke $r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>($i1, 0);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i4 = neg $i3;

     label3:
        $r1[$i2] = $i4;

        $i2 = $i5;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $r1 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r1, $i2);

        return $r1;
    }

    public int getStateCount()
    {
        int $i0;
        b.b.c.a.d$a $r1;
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        $r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $i0 = virtualinvoke $r1.<b.b.c.a.c$b: int f()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable getStateDrawable(int)
    {
        b.b.c.a.d r0;
        int $i0;
        b.b.c.a.d$a $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: b.b.c.a.d;

        $i0 := @parameter0: int;

        $r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $r2 = virtualinvoke $r1.<b.b.c.a.c$b: android.graphics.drawable.Drawable a(int)>($i0);

        return $r2;
    }

    public int getStateDrawableIndex(int[])
    {
        int[] $r2;
        b.b.c.a.d r0;
        int $i0;
        b.b.c.a.d$a $r1;

        r0 := @this: b.b.c.a.d;

        $r2 := @parameter0: int[];

        $r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $i0 = virtualinvoke $r1.<b.b.c.a.d$a: int a(int[])>($r2);

        return $i0;
    }

    public b.b.c.a.d$a getStateListState()
    {
        b.b.c.a.d$a r1;
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        return r1;
    }

    public int[] getStateSet(int)
    {
        int[][] $r2;
        int[] $r3;
        b.b.c.a.d r0;
        int $i0;
        b.b.c.a.d$a $r1;

        r0 := @this: b.b.c.a.d;

        $i0 := @parameter0: int;

        $r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $r2 = $r1.<b.b.c.a.d$a: int[][] J>;

        $r3 = $r2[$i0];

        return $r3;
    }

    public void inflate(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.content.Context $r5;
        b.b.c.a.d r0;
        android.content.res.TypedArray $r7;
        android.util.AttributeSet $r3;
        int[] $r6;
        int $i0;
        android.content.res.Resources$Theme $r4;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        r0 := @this: b.b.c.a.d;

        $r5 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter3: android.util.AttributeSet;

        $r4 := @parameter4: android.content.res.Resources$Theme;

        $r6 = <b.b.d.b: int[] StateListDrawable>;

        $r7 = staticinvoke <b.i.b.a.i: android.content.res.TypedArray a(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r4, $r3, $r6);

        $i0 = <b.b.d.b: int StateListDrawable_android_visible>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        virtualinvoke r0.<b.b.c.a.c: boolean setVisible(boolean,boolean)>($z0, 1);

        specialinvoke r0.<b.b.c.a.d: void updateStateFromTypedArray(android.content.res.TypedArray)>($r7);

        virtualinvoke r0.<b.b.c.a.c: void updateDensity(android.content.res.Resources)>($r1);

        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<b.b.c.a.d: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, $r1, $r2, $r3, $r4);

        $r6 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke r0.<b.b.c.a.d: boolean onStateChange(int[])>($r6);

        return;
    }

    public boolean isStateful()
    {
        b.b.c.a.d r0;

        r0 := @this: b.b.c.a.d;

        return 1;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        b.b.c.a.d$a $r1;
        b.b.c.a.d r0;
        boolean $z0;

        r0 := @this: b.b.c.a.d;

        $z0 = r0.<b.b.c.a.d: boolean mMutated>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<b.b.c.a.c: android.graphics.drawable.Drawable mutate()>();

        if r0 != r0 goto label1;

        $r1 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        virtualinvoke $r1.<b.b.c.a.d$a: void o()>();

        r0.<b.b.c.a.d: boolean mMutated> = 1;

     label1:
        return r0;
    }

    public boolean onStateChange(int[])
    {
        int[] $r1;
        b.b.c.a.d r0;
        int $i0, $i1;
        b.b.c.a.d$a $r2;
        boolean $z0, $z1;

        r0 := @this: b.b.c.a.d;

        $r1 := @parameter0: int[];

        $z0 = specialinvoke r0.<b.b.c.a.c: boolean onStateChange(int[])>($r1);

        $r2 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $i0 = virtualinvoke $r2.<b.b.c.a.d$a: int a(int[])>($r1);

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        $r2 = r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState>;

        $r1 = <android.util.StateSet: int[] WILD_CARD>;

        $i1 = virtualinvoke $r2.<b.b.c.a.d$a: int a(int[])>($r1);

     label1:
        $z1 = virtualinvoke r0.<b.b.c.a.c: boolean selectDrawable(int)>($i1);

        if $z1 != 0 goto label3;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public void setConstantState(b.b.c.a.c$b)
    {
        b.b.c.a.d r0;
        b.b.c.a.c$b $r1;
        b.b.c.a.d$a $r2;
        boolean $z0;

        r0 := @this: b.b.c.a.d;

        $r1 := @parameter0: b.b.c.a.c$b;

        specialinvoke r0.<b.b.c.a.c: void setConstantState(b.b.c.a.c$b)>($r1);

        $z0 = $r1 instanceof b.b.c.a.d$a;

        if $z0 == 0 goto label1;

        $r2 = (b.b.c.a.d$a) $r1;

        r0.<b.b.c.a.d: b.b.c.a.d$a mStateListState> = $r2;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <b.b.c.a.d: java.lang.String TAG> = "StateListDrawable";

        <b.b.c.a.d: boolean DEBUG> = 0;

        return;
    }
}
