public final class com.google.android.material.datepicker.MaterialDatePicker extends androidx.fragment.app.DialogFragment
{
    public static final java.lang.String CALENDAR_CONSTRAINTS_KEY;
    public static final java.lang.Object CANCEL_BUTTON_TAG;
    public static final java.lang.Object CONFIRM_BUTTON_TAG;
    public static final java.lang.String DATE_SELECTOR_KEY;
    public static final int INPUT_MODE_CALENDAR;
    public static final java.lang.String INPUT_MODE_KEY;
    public static final int INPUT_MODE_TEXT;
    public static final java.lang.String OVERRIDE_THEME_RES_ID;
    public static final java.lang.String TITLE_TEXT_KEY;
    public static final java.lang.String TITLE_TEXT_RES_ID_KEY;
    public static final java.lang.Object TOGGLE_BUTTON_TAG;
    public com.google.android.material.shape.MaterialShapeDrawable background;
    public com.google.android.material.datepicker.MaterialCalendar calendar;
    public com.google.android.material.datepicker.CalendarConstraints calendarConstraints;
    public android.widget.Button confirmButton;
    public com.google.android.material.datepicker.DateSelector dateSelector;
    public boolean fullscreen;
    public android.widget.TextView headerSelectionText;
    public com.google.android.material.internal.CheckableImageButton headerToggleButton;
    public int inputMode;
    public final java.util.LinkedHashSet onCancelListeners;
    public final java.util.LinkedHashSet onDismissListeners;
    public final java.util.LinkedHashSet onNegativeButtonClickListeners;
    public final java.util.LinkedHashSet onPositiveButtonClickListeners;
    public int overrideThemeResId;
    public com.google.android.material.datepicker.PickerFragment pickerFragment;
    public java.lang.CharSequence titleText;
    public int titleTextResId;

    static void <clinit>()
    {
        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.String TITLE_TEXT_RES_ID_KEY> = "TITLE_TEXT_RES_ID_KEY";

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.String TITLE_TEXT_KEY> = "TITLE_TEXT_KEY";

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.String OVERRIDE_THEME_RES_ID> = "OVERRIDE_THEME_RES_ID";

        <com.google.android.material.datepicker.MaterialDatePicker: int INPUT_MODE_TEXT> = 1;

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.String INPUT_MODE_KEY> = "INPUT_MODE_KEY";

        <com.google.android.material.datepicker.MaterialDatePicker: int INPUT_MODE_CALENDAR> = 0;

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.String DATE_SELECTOR_KEY> = "DATE_SELECTOR_KEY";

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.String CALENDAR_CONSTRAINTS_KEY> = "CALENDAR_CONSTRAINTS_KEY";

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object CONFIRM_BUTTON_TAG> = "CONFIRM_BUTTON_TAG";

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object CANCEL_BUTTON_TAG> = "CANCEL_BUTTON_TAG";

        <com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object TOGGLE_BUTTON_TAG> = "TOGGLE_BUTTON_TAG";

        return;
    }

    public void <init>()
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        specialinvoke r0.<androidx.fragment.app.DialogFragment: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onPositiveButtonClickListeners> = $r1;

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onNegativeButtonClickListeners> = $r1;

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onCancelListeners> = $r1;

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onDismissListeners> = $r1;

        return;
    }

    public static java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)
    {
        com.google.android.material.datepicker.MaterialDatePicker $r0;
        java.util.LinkedHashSet r1;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        r1 = $r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onPositiveButtonClickListeners>;

        return r1;
    }

    public static java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)
    {
        com.google.android.material.datepicker.MaterialDatePicker $r0;
        java.util.LinkedHashSet r1;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        r1 = $r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onNegativeButtonClickListeners>;

        return r1;
    }

    public static void access$200(com.google.android.material.datepicker.MaterialDatePicker)
    {
        com.google.android.material.datepicker.MaterialDatePicker $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        specialinvoke $r0.<com.google.android.material.datepicker.MaterialDatePicker: void updateHeader()>();

        return;
    }

    public static com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)
    {
        com.google.android.material.datepicker.DateSelector r1;
        com.google.android.material.datepicker.MaterialDatePicker $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        r1 = $r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        return r1;
    }

    public static android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)
    {
        android.widget.Button r1;
        com.google.android.material.datepicker.MaterialDatePicker $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        r1 = $r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton>;

        return r1;
    }

    public static com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)
    {
        com.google.android.material.internal.CheckableImageButton r1;
        com.google.android.material.datepicker.MaterialDatePicker $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        r1 = $r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        return r1;
    }

    public static void access$600(com.google.android.material.datepicker.MaterialDatePicker, com.google.android.material.internal.CheckableImageButton)
    {
        com.google.android.material.internal.CheckableImageButton $r1;
        com.google.android.material.datepicker.MaterialDatePicker $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter1: com.google.android.material.internal.CheckableImageButton;

        specialinvoke $r0.<com.google.android.material.datepicker.MaterialDatePicker: void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)>($r1);

        return;
    }

    public static void access$700(com.google.android.material.datepicker.MaterialDatePicker)
    {
        com.google.android.material.datepicker.MaterialDatePicker $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker;

        specialinvoke $r0.<com.google.android.material.datepicker.MaterialDatePicker: void startPickerFragment()>();

        return;
    }

    public static android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)
    {
        android.content.Context $r1;
        int[] $r2;
        android.graphics.drawable.StateListDrawable $r0;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        $r1 := @parameter0: android.content.Context;

        $r0 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r0.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r2 = newarray (int)[1];

        $r2[0] = 16842912;

        $i0 = <com.google.android.material.R$drawable: int material_ic_calendar_black_24dp>;

        $r3 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r0.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r2, $r3);

        $r2 = newarray (int)[0];

        $i0 = <com.google.android.material.R$drawable: int material_ic_edit_black_24dp>;

        $r3 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r0.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r2, $r3);

        return $r0;
    }

    public static int getDialogPickerHeight(android.content.Context)
    {
        android.content.Context $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int mtrl_calendar_navigation_height>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $i1 = <com.google.android.material.R$dimen: int mtrl_calendar_navigation_top_padding>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i1);

        $i0 = $i0 + $i1;

        $i1 = <com.google.android.material.R$dimen: int mtrl_calendar_navigation_bottom_padding>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i1);

        $i0 = $i0 + $i1;

        $i1 = <com.google.android.material.R$dimen: int mtrl_calendar_days_of_week_height>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i2 = <com.google.android.material.datepicker.MonthAdapter: int MAXIMUM_WEEKS>;

        $i3 = <com.google.android.material.R$dimen: int mtrl_calendar_day_height>;

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i3);

        $i2 = $i2 * $i3;

        $i3 = <com.google.android.material.datepicker.MonthAdapter: int MAXIMUM_WEEKS>;

        $i4 = -1;

        $i3 = $i3 + $i4;

        $i4 = <com.google.android.material.R$dimen: int mtrl_calendar_month_vertical_padding>;

        $i4 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i4);

        $i3 = $i3 * $i4;

        $i2 = $i2 + $i3;

        $i3 = <com.google.android.material.R$dimen: int mtrl_calendar_bottom_padding>;

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i3);

        $i0 = $i0 + $i1;

        $i0 = $i0 + $i2;

        $i0 = $i0 + $i3;

        return $i0;
    }

    public static int getPaddedPickerWidth(android.content.Context)
    {
        android.content.Context $r0;
        com.google.android.material.datepicker.Month $r2;
        int $i0, $i1, $i2, $i3;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int mtrl_calendar_content_padding>;

        $i2 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i1);

        $r2 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month current()>();

        $i1 = $r2.<com.google.android.material.datepicker.Month: int daysInWeek>;

        $i0 = <com.google.android.material.R$dimen: int mtrl_calendar_day_width>;

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $i0 = <com.google.android.material.R$dimen: int mtrl_calendar_month_horizontal_padding>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i0);

        $i2 = $i2 * 2;

        $i3 = $i3 * $i1;

        $i2 = $i2 + $i3;

        $i3 = -1;

        $i1 = $i1 + $i3;

        $i1 = $i1 * $i0;

        $i1 = $i2 + $i1;

        return $i1;
    }

    private int getThemeResId(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.datepicker.DateSelector $r2;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        int $i0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.content.Context;

        $i0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: int overrideThemeResId>;

        if $i0 == 0 goto label1;

        return $i0;

     label1:
        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $i0 = interfaceinvoke $r2.<com.google.android.material.datepicker.DateSelector: int getDefaultThemeResId(android.content.Context)>($r1);

        return $i0;
    }

    private void initHeaderToggle(android.content.Context)
    {
        android.content.Context $r3;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.internal.CheckableImageButton $r4;
        com.google.android.material.datepicker.MaterialDatePicker$4 $r5;
        android.graphics.drawable.Drawable $r2;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r3 := @parameter0: android.content.Context;

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        $r1 = <com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object TOGGLE_BUTTON_TAG>;

        virtualinvoke $r4.<android.widget.ImageButton: void setTag(java.lang.Object)>($r1);

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        $r2 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)>($r3);

        virtualinvoke $r4.<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r2);

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        $i0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: int inputMode>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke $r4.<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)>($z0);

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a)>($r4, null);

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        specialinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)>($r4);

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        $r5 = new com.google.android.material.datepicker.MaterialDatePicker$4;

        specialinvoke $r5.<com.google.android.material.datepicker.MaterialDatePicker$4: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>(r0);

        virtualinvoke $r4.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r5);

        return;
    }

    public static boolean isFullscreen(android.content.Context)
    {
        android.content.Context $r0;
        int[] $r3;
        int $i0;
        java.lang.Class $r1;
        java.lang.String $r2;
        android.content.res.TypedArray $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <com.google.android.material.R$attr: int materialCalendarStyle>;

        $r1 = class "Lcom/google/android/material/datepicker/MaterialCalendar;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        $i0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>($r0, $i0, $r2);

        $r3 = newarray (int)[1];

        $r3[0] = 16843277;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r3);

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return $z0;
    }

    public static com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder)
    {
        com.google.android.material.datepicker.DateSelector $r3;
        android.os.Bundle $r1;
        java.lang.CharSequence $r5;
        com.google.android.material.datepicker.MaterialDatePicker $r0;
        com.google.android.material.datepicker.MaterialDatePicker$Builder $r2;
        int $i0;
        com.google.android.material.datepicker.CalendarConstraints $r4;

        $r2 := @parameter0: com.google.android.material.datepicker.MaterialDatePicker$Builder;

        $r0 = new com.google.android.material.datepicker.MaterialDatePicker;

        specialinvoke $r0.<com.google.android.material.datepicker.MaterialDatePicker: void <init>()>();

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $i0 = $r2.<com.google.android.material.datepicker.MaterialDatePicker$Builder: int overrideThemeResId>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("OVERRIDE_THEME_RES_ID", $i0);

        $r3 = $r2.<com.google.android.material.datepicker.MaterialDatePicker$Builder: com.google.android.material.datepicker.DateSelector dateSelector>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("DATE_SELECTOR_KEY", $r3);

        $r4 = $r2.<com.google.android.material.datepicker.MaterialDatePicker$Builder: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("CALENDAR_CONSTRAINTS_KEY", $r4);

        $i0 = $r2.<com.google.android.material.datepicker.MaterialDatePicker$Builder: int titleTextResId>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("TITLE_TEXT_RES_ID_KEY", $i0);

        $r5 = $r2.<com.google.android.material.datepicker.MaterialDatePicker$Builder: java.lang.CharSequence titleText>;

        virtualinvoke $r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("TITLE_TEXT_KEY", $r5);

        $i0 = $r2.<com.google.android.material.datepicker.MaterialDatePicker$Builder: int inputMode>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("INPUT_MODE_KEY", $i0);

        virtualinvoke $r0.<androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)>($r1);

        return $r0;
    }

    private void startPickerFragment()
    {
        android.content.Context $r2;
        b.m.a.l $r7;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.datepicker.CalendarConstraints $r3;
        com.google.android.material.internal.CheckableImageButton $r5;
        com.google.android.material.datepicker.MaterialDatePicker$3 $r9;
        com.google.android.material.datepicker.DateSelector $r1;
        b.m.a.z $r8;
        int $i0;
        com.google.android.material.datepicker.MaterialCalendar $r4;
        com.google.android.material.datepicker.PickerFragment $r6;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $r2 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.content.Context requireContext()>();

        $i0 = specialinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: int getThemeResId(android.content.Context)>($r2);

        $r3 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r4 = staticinvoke <com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)>($r1, $i0, $r3);

        r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.MaterialCalendar calendar> = $r4;

        $r5 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        $z0 = virtualinvoke $r5.<com.google.android.material.internal.CheckableImageButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $r3 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r6 = staticinvoke <com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints)>($r1, $r3);

        goto label2;

     label1:
        $r6 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.MaterialCalendar calendar>;

     label2:
        r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.PickerFragment pickerFragment> = $r6;

        specialinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: void updateHeader()>();

        $r7 = virtualinvoke r0.<androidx.fragment.app.Fragment: b.m.a.l getChildFragmentManager()>();

        $r8 = virtualinvoke $r7.<b.m.a.l: b.m.a.z a()>();

        $i0 = <com.google.android.material.R$id: int mtrl_calendar_frame>;

        $r6 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.PickerFragment pickerFragment>;

        virtualinvoke $r8.<b.m.a.z: b.m.a.z b(int,androidx.fragment.app.Fragment)>($i0, $r6);

        virtualinvoke $r8.<b.m.a.z: void c()>();

        $r6 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.PickerFragment pickerFragment>;

        $r9 = new com.google.android.material.datepicker.MaterialDatePicker$3;

        specialinvoke $r9.<com.google.android.material.datepicker.MaterialDatePicker$3: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>(r0);

        virtualinvoke $r6.<com.google.android.material.datepicker.PickerFragment: boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)>($r9);

        return;
    }

    public static long thisMonthInUtcMilliseconds()
    {
        long l0;
        com.google.android.material.datepicker.Month $r0;

        $r0 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month current()>();

        l0 = $r0.<com.google.android.material.datepicker.Month: long timeInMillis>;

        return l0;
    }

    public static long todayInUtcMilliseconds()
    {
        long $l0;
        java.util.Calendar $r0;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getTodayCalendar()>();

        $l0 = virtualinvoke $r0.<java.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    private void updateHeader()
    {
        android.widget.TextView $r2;
        java.lang.Object[] $r4;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        int $i0;
        java.lang.String $r1, $r3;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = virtualinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: java.lang.String getHeaderText()>();

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.TextView headerSelectionText>;

        $i0 = <com.google.android.material.R$string: int mtrl_picker_announce_current_selection>;

        $r3 = virtualinvoke r0.<androidx.fragment.app.Fragment: java.lang.String getString(int)>($i0);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4);

        virtualinvoke $r2.<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>($r3);

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.TextView headerSelectionText>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        return;
    }

    private void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)
    {
        android.content.Context $r3;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.internal.CheckableImageButton $r1, $r2;
        int $i0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: com.google.android.material.internal.CheckableImageButton;

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        $z0 = virtualinvoke $r2.<com.google.android.material.internal.CheckableImageButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<android.widget.ImageButton: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_toggle_to_calendar_input_mode>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>($i0);

        goto label2;

     label1:
        $r3 = virtualinvoke $r1.<android.widget.ImageButton: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_toggle_to_text_input_mode>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>($i0);

     label2:
        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton>;

        virtualinvoke $r1.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r4);

        return;
    }

    public boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.content.DialogInterface$OnCancelListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: android.content.DialogInterface$OnCancelListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onCancelListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.content.DialogInterface$OnDismissListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: android.content.DialogInterface$OnDismissListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onDismissListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.view.View$OnClickListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: android.view.View$OnClickListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onNegativeButtonClickListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onPositiveButtonClickListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public void clearOnCancelListeners()
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onCancelListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public void clearOnDismissListeners()
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onDismissListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public void clearOnNegativeButtonClickListeners()
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onNegativeButtonClickListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public void clearOnPositiveButtonClickListeners()
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onPositiveButtonClickListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public java.lang.String getHeaderText()
    {
        com.google.android.material.datepicker.DateSelector $r1;
        android.content.Context $r2;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        java.lang.String $r3;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $r2 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.content.Context getContext()>();

        $r3 = interfaceinvoke $r1.<com.google.android.material.datepicker.DateSelector: java.lang.String getSelectionDisplayString(android.content.Context)>($r2);

        return $r3;
    }

    public final java.lang.Object getSelection()
    {
        com.google.android.material.datepicker.DateSelector $r2;
        java.lang.Object $r1;
        com.google.android.material.datepicker.MaterialDatePicker r0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $r1 = interfaceinvoke $r2.<com.google.android.material.datepicker.DateSelector: java.lang.Object getSelection()>();

        return $r1;
    }

    public final void onCancel(android.content.DialogInterface)
    {
        java.util.Iterator $r3;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.content.DialogInterface$OnCancelListener $r5;
        java.lang.Object $r4;
        java.util.LinkedHashSet $r2;
        android.content.DialogInterface $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.content.DialogInterface;

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onCancelListeners>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.DialogInterface$OnCancelListener) $r4;

        interfaceinvoke $r5.<android.content.DialogInterface$OnCancelListener: void onCancel(android.content.DialogInterface)>($r1);

        goto label1;

     label2:
        specialinvoke r0.<androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)>($r1);

        return;
    }

    public final void onCreate(android.os.Bundle)
    {
        com.google.android.material.datepicker.DateSelector $r3;
        android.os.Bundle $r1;
        android.os.Parcelable $r2;
        java.lang.CharSequence $r5;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        int $i0;
        com.google.android.material.datepicker.CalendarConstraints $r4;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)>($r1);

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.os.Bundle getArguments()>();

     label1:
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("OVERRIDE_THEME_RES_ID");

        r0.<com.google.android.material.datepicker.MaterialDatePicker: int overrideThemeResId> = $i0;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("DATE_SELECTOR_KEY");

        $r3 = (com.google.android.material.datepicker.DateSelector) $r2;

        r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector> = $r3;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("CALENDAR_CONSTRAINTS_KEY");

        $r4 = (com.google.android.material.datepicker.CalendarConstraints) $r2;

        r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints> = $r4;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("TITLE_TEXT_RES_ID_KEY");

        r0.<com.google.android.material.datepicker.MaterialDatePicker: int titleTextResId> = $i0;

        $r5 = virtualinvoke $r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("TITLE_TEXT_KEY");

        r0.<com.google.android.material.datepicker.MaterialDatePicker: java.lang.CharSequence titleText> = $r5;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("INPUT_MODE_KEY");

        r0.<com.google.android.material.datepicker.MaterialDatePicker: int inputMode> = $i0;

        return;
    }

    public final android.app.Dialog onCreateDialog(android.os.Bundle)
    {
        android.content.Context $r3, $r4;
        android.os.Bundle $r1;
        android.app.Dialog $r2;
        android.content.res.ColorStateList $r8;
        int $i0, $i1, $i2;
        android.view.View $r10;
        java.lang.String $r6;
        boolean $z0;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.shape.MaterialShapeDrawable $r7;
        float $f0;
        java.lang.Class $r5;
        android.view.Window $r9;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = new android.app.Dialog;

        $r3 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.content.Context requireContext()>();

        $r4 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.content.Context requireContext()>();

        $i0 = specialinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: int getThemeResId(android.content.Context)>($r4);

        specialinvoke $r2.<android.app.Dialog: void <init>(android.content.Context,int)>($r3, $i0);

        $r3 = virtualinvoke $r2.<android.app.Dialog: android.content.Context getContext()>();

        $z0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: boolean isFullscreen(android.content.Context)>($r3);

        r0.<com.google.android.material.datepicker.MaterialDatePicker: boolean fullscreen> = $z0;

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $r5 = class "Lcom/google/android/material/datepicker/MaterialDatePicker;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getCanonicalName()>();

        $i2 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>($r3, $i0, $r6);

        $r7 = new com.google.android.material.shape.MaterialShapeDrawable;

        $i0 = <com.google.android.material.R$attr: int materialCalendarStyle>;

        $i1 = <com.google.android.material.R$style: int Widget_MaterialComponents_MaterialCalendar>;

        specialinvoke $r7.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r3, null, $i0, $i1);

        r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background> = $r7;

        $r7 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background>;

        virtualinvoke $r7.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r3);

        $r7 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background>;

        $r8 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i2);

        virtualinvoke $r7.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r8);

        $r7 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background>;

        $r9 = virtualinvoke $r2.<android.app.Dialog: android.view.Window getWindow()>();

        $r10 = virtualinvoke $r9.<android.view.Window: android.view.View getDecorView()>();

        $f0 = staticinvoke <b.i.i.y: float l(android.view.View)>($r10);

        virtualinvoke $r7.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

        return $r2;
    }

    public final android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        android.content.Context $r5, $r8;
        android.os.Bundle $r3;
        com.google.android.material.internal.CheckableImageButton $r10;
        com.google.android.material.datepicker.MaterialDatePicker$1 $r16;
        com.google.android.material.datepicker.MaterialDatePicker$2 $r17;
        com.google.android.material.datepicker.DateSelector $r13;
        int $i0, $i1;
        android.view.View $r4, $r6, $r7;
        android.widget.Button $r12;
        android.widget.LinearLayout$LayoutParams $r15;
        boolean $z0;
        java.lang.CharSequence $r11;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        android.widget.TextView $r9;
        java.lang.Object $r14;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.os.Bundle;

        $z0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: boolean fullscreen>;

        if $z0 == 0 goto label1;

        $i0 = <com.google.android.material.R$layout: int mtrl_picker_fullscreen>;

        goto label2;

     label1:
        $i0 = <com.google.android.material.R$layout: int mtrl_picker_dialog>;

     label2:
        $r4 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, $r2);

        $r5 = virtualinvoke $r4.<android.view.View: android.content.Context getContext()>();

        $z0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: boolean fullscreen>;

        if $z0 == 0 goto label3;

        $i0 = <com.google.android.material.R$id: int mtrl_calendar_frame>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r15 = new android.widget.LinearLayout$LayoutParams;

        $i0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: int getPaddedPickerWidth(android.content.Context)>($r5);

        $i1 = -2;

        specialinvoke $r15.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r6.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r15);

        goto label4;

     label3:
        $i0 = <com.google.android.material.R$id: int mtrl_calendar_main_pane>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $i0 = <com.google.android.material.R$id: int mtrl_calendar_frame>;

        $r7 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r15 = new android.widget.LinearLayout$LayoutParams;

        $i0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: int getPaddedPickerWidth(android.content.Context)>($r5);

        $i1 = -1;

        specialinvoke $r15.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r6.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r15);

        $r8 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.content.Context requireContext()>();

        $i0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: int getDialogPickerHeight(android.content.Context)>($r8);

        virtualinvoke $r7.<android.view.View: void setMinimumHeight(int)>($i0);

     label4:
        $i0 = <com.google.android.material.R$id: int mtrl_picker_header_selection_text>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r6;

        r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.TextView headerSelectionText> = $r9;

        $r9 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.TextView headerSelectionText>;

        staticinvoke <b.i.i.y: void g(android.view.View,int)>($r9, 1);

        $i0 = <com.google.android.material.R$id: int mtrl_picker_header_toggle>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r10 = (com.google.android.material.internal.CheckableImageButton) $r6;

        r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton headerToggleButton> = $r10;

        $i0 = <com.google.android.material.R$id: int mtrl_picker_title_text>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r6;

        $r11 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.lang.CharSequence titleText>;

        if $r11 == null goto label5;

        virtualinvoke $r9.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

        goto label6;

     label5:
        $i0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: int titleTextResId>;

        virtualinvoke $r9.<android.widget.TextView: void setText(int)>($i0);

     label6:
        specialinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: void initHeaderToggle(android.content.Context)>($r5);

        $i0 = <com.google.android.material.R$id: int confirm_button>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r12 = (android.widget.Button) $r6;

        r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton> = $r12;

        $r13 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        $z0 = interfaceinvoke $r13.<com.google.android.material.datepicker.DateSelector: boolean isSelectionComplete()>();

        if $z0 == 0 goto label7;

        $r12 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton>;

        virtualinvoke $r12.<android.widget.Button: void setEnabled(boolean)>(1);

        goto label8;

     label7:
        $r12 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton>;

        virtualinvoke $r12.<android.widget.Button: void setEnabled(boolean)>(0);

     label8:
        $r12 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton>;

        $r14 = <com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object CONFIRM_BUTTON_TAG>;

        virtualinvoke $r12.<android.widget.Button: void setTag(java.lang.Object)>($r14);

        $r12 = r0.<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button confirmButton>;

        $r16 = new com.google.android.material.datepicker.MaterialDatePicker$1;

        specialinvoke $r16.<com.google.android.material.datepicker.MaterialDatePicker$1: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>(r0);

        virtualinvoke $r12.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r16);

        $i0 = <com.google.android.material.R$id: int cancel_button>;

        $r6 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>($i0);

        $r12 = (android.widget.Button) $r6;

        $r14 = <com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object CANCEL_BUTTON_TAG>;

        virtualinvoke $r12.<android.widget.Button: void setTag(java.lang.Object)>($r14);

        $r17 = new com.google.android.material.datepicker.MaterialDatePicker$2;

        specialinvoke $r17.<com.google.android.material.datepicker.MaterialDatePicker$2: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>(r0);

        virtualinvoke $r12.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r17);

        return $r4;
    }

    public final void onDismiss(android.content.DialogInterface)
    {
        java.util.Iterator $r3;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.view.ViewGroup $r7;
        android.view.View $r6;
        java.lang.Object $r4;
        android.content.DialogInterface$OnDismissListener $r5;
        java.util.LinkedHashSet $r2;
        android.content.DialogInterface $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.content.DialogInterface;

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onDismissListeners>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.DialogInterface$OnDismissListener) $r4;

        interfaceinvoke $r5.<android.content.DialogInterface$OnDismissListener: void onDismiss(android.content.DialogInterface)>($r1);

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.view.View getView()>();

        $r7 = (android.view.ViewGroup) $r6;

        if $r7 == null goto label3;

        virtualinvoke $r7.<android.view.ViewGroup: void removeAllViews()>();

     label3:
        specialinvoke r0.<androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)>($r1);

        return;
    }

    public final void onSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        java.lang.CharSequence $r7;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.datepicker.Month $r6;
        com.google.android.material.datepicker.CalendarConstraints $r4;
        long $l1;
        com.google.android.material.datepicker.DateSelector $r2;
        int $i0;
        com.google.android.material.datepicker.MaterialCalendar $r5;
        com.google.android.material.datepicker.CalendarConstraints$Builder $r3;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>($r1);

        $i0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: int overrideThemeResId>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("OVERRIDE_THEME_RES_ID", $i0);

        $r2 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector dateSelector>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("DATE_SELECTOR_KEY", $r2);

        $r3 = new com.google.android.material.datepicker.CalendarConstraints$Builder;

        $r4 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        specialinvoke $r3.<com.google.android.material.datepicker.CalendarConstraints$Builder: void <init>(com.google.android.material.datepicker.CalendarConstraints)>($r4);

        $r5 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.MaterialCalendar calendar>;

        $r6 = virtualinvoke $r5.<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month getCurrentMonth()>();

        if $r6 == null goto label1;

        $r5 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.MaterialCalendar calendar>;

        $r6 = virtualinvoke $r5.<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month getCurrentMonth()>();

        $l1 = $r6.<com.google.android.material.datepicker.Month: long timeInMillis>;

        virtualinvoke $r3.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long)>($l1);

     label1:
        $r4 = virtualinvoke $r3.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints build()>();

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("CALENDAR_CONSTRAINTS_KEY", $r4);

        $i0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: int titleTextResId>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("TITLE_TEXT_RES_ID_KEY", $i0);

        $r7 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.lang.CharSequence titleText>;

        virtualinvoke $r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("TITLE_TEXT_KEY", $r7);

        return;
    }

    public void onStart()
    {
        android.graphics.Rect $r6;
        android.graphics.drawable.InsetDrawable $r7;
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.dialog.InsetDialogOnTouchListener $r8;
        android.app.Dialog $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        int $i0, $i1;
        android.view.View $r5;
        android.view.Window $r3;
        boolean $z0;
        android.content.res.Resources $r4;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        specialinvoke r0.<androidx.fragment.app.DialogFragment: void onStart()>();

        $r2 = virtualinvoke r0.<androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()>();

        $r3 = virtualinvoke $r2.<android.app.Dialog: android.view.Window getWindow()>();

        $z0 = r0.<com.google.android.material.datepicker.MaterialDatePicker: boolean fullscreen>;

        if $z0 == 0 goto label1;

        $i0 = -1;

        $i1 = -1;

        virtualinvoke $r3.<android.view.Window: void setLayout(int,int)>($i0, $i1);

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background>;

        virtualinvoke $r3.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        goto label2;

     label1:
        $i0 = -2;

        $i1 = -2;

        virtualinvoke $r3.<android.view.Window: void setLayout(int,int)>($i0, $i1);

        $r4 = virtualinvoke r0.<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int mtrl_calendar_dialog_background_inset>;

        $i0 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i0);

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i0, $i0, $i0);

        $r7 = new android.graphics.drawable.InsetDrawable;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.shape.MaterialShapeDrawable background>;

        specialinvoke $r7.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>($r1, $i0, $i0, $i0, $i0);

        virtualinvoke $r3.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r7);

        $r5 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        $r8 = new com.google.android.material.dialog.InsetDialogOnTouchListener;

        $r2 = virtualinvoke r0.<androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()>();

        specialinvoke $r8.<com.google.android.material.dialog.InsetDialogOnTouchListener: void <init>(android.app.Dialog,android.graphics.Rect)>($r2, $r6);

        virtualinvoke $r5.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r8);

     label2:
        specialinvoke r0.<com.google.android.material.datepicker.MaterialDatePicker: void startPickerFragment()>();

        return;
    }

    public void onStop()
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.datepicker.PickerFragment $r1;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.PickerFragment pickerFragment>;

        virtualinvoke $r1.<com.google.android.material.datepicker.PickerFragment: void clearOnSelectionChangedListeners()>();

        specialinvoke r0.<androidx.fragment.app.DialogFragment: void onStop()>();

        return;
    }

    public boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.content.DialogInterface$OnCancelListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: android.content.DialogInterface$OnCancelListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onCancelListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.content.DialogInterface$OnDismissListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: android.content.DialogInterface$OnDismissListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onDismissListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        android.view.View$OnClickListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: android.view.View$OnClickListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onNegativeButtonClickListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    {
        com.google.android.material.datepicker.MaterialDatePicker r0;
        com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener $r2;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MaterialDatePicker;

        $r2 := @parameter0: com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener;

        $r1 = r0.<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet onPositiveButtonClickListeners>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r2);

        return $z0;
    }
}
