public final class com.google.common.collect.MultimapBuilder$HashSetSupplier extends java.lang.Object implements com.google.common.base.Supplier, java.io.Serializable
{
    public final int expectedValuesPerKey;

    public void <init>(int)
    {
        int $i0;
        com.google.common.collect.MultimapBuilder$HashSetSupplier r0;

        r0 := @this: com.google.common.collect.MultimapBuilder$HashSetSupplier;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "expectedValuesPerKey");

        r0.<com.google.common.collect.MultimapBuilder$HashSetSupplier: int expectedValuesPerKey> = $i0;

        return;
    }

    public volatile java.lang.Object get()
    {
        java.util.Set $r1;
        com.google.common.collect.MultimapBuilder$HashSetSupplier r0;

        r0 := @this: com.google.common.collect.MultimapBuilder$HashSetSupplier;

        $r1 = virtualinvoke r0.<com.google.common.collect.MultimapBuilder$HashSetSupplier: java.util.Set get()>();

        return $r1;
    }

    public java.util.Set get()
    {
        java.util.HashSet $r1;
        int $i0;
        com.google.common.collect.MultimapBuilder$HashSetSupplier r0;

        r0 := @this: com.google.common.collect.MultimapBuilder$HashSetSupplier;

        $i0 = r0.<com.google.common.collect.MultimapBuilder$HashSetSupplier: int expectedValuesPerKey>;

        $r1 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSetWithExpectedSize(int)>($i0);

        return $r1;
    }
}
