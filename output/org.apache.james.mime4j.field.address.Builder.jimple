public class org.apache.james.mime4j.field.address.Builder extends java.lang.Object
{
    public static org.apache.james.mime4j.field.address.Builder singleton;

    static void <clinit>()
    {
        org.apache.james.mime4j.field.address.Builder $r0;

        $r0 = new org.apache.james.mime4j.field.address.Builder;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder: void <init>()>();

        <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void addSpecials(java.lang.StringBuilder, org.apache.james.mime4j.field.address.parser.Token)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        org.apache.james.mime4j.field.address.parser.Token $r2, $r3;
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r3 := @parameter1: org.apache.james.mime4j.field.address.parser.Token;

        if $r3 == null goto label1;

        $r2 = $r3.<org.apache.james.mime4j.field.address.parser.Token: org.apache.james.mime4j.field.address.parser.Token specialToken>;

        specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.parser.Token)>($r1, $r2);

        $r4 = $r3.<org.apache.james.mime4j.field.address.parser.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label1:
        return;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList, org.apache.james.mime4j.field.address.parser.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r2;
        org.apache.james.mime4j.field.address.parser.Node $r4;
        org.apache.james.mime4j.field.address.DomainList $r1;
        org.apache.james.mime4j.field.address.parser.ASTdomain $r7;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r3;
        org.apache.james.mime4j.field.address.Mailbox $r9;
        java.lang.String $r6, $r8;
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTlocal_part $r5;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.DomainList;

        $r2 := @parameter1: org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        $r3 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $r5 = (org.apache.james.mime4j.field.address.parser.ASTlocal_part) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r5, 1);

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $r7 = (org.apache.james.mime4j.field.address.parser.ASTdomain) $r4;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r7, 1);

        $r9 = new org.apache.james.mime4j.field.address.Mailbox;

        specialinvoke $r9.<org.apache.james.mime4j.field.address.Mailbox: void <init>(org.apache.james.mime4j.field.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8);

        return $r9;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.Mailbox $r1;
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r2;
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r2 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList,org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>(null, $r2);

        return $r1;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)
    {
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r7;
        java.lang.IllegalStateException $r9;
        org.apache.james.mime4j.field.address.parser.Node $r3, $r4;
        org.apache.james.mime4j.field.address.DomainList $r6;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r2;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r1;
        org.apache.james.mime4j.field.address.Mailbox $r8;
        org.apache.james.mime4j.field.address.parser.ASTroute $r5;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        $r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $r4 = $r3;

        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTroute;

        if $z0 == 0 goto label1;

        $r5 = (org.apache.james.mime4j.field.address.parser.ASTroute) $r3;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.DomainList buildRoute(org.apache.james.mime4j.field.address.parser.ASTroute)>($r5);

        $r4 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        goto label2;

     label1:
        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z0 == 0 goto label4;

        $r6 = null;

     label2:
        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z0 == 0 goto label3;

        $r7 = (org.apache.james.mime4j.field.address.parser.ASTaddr_spec) $r4;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList,org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>($r6, $r7);

        return $r8;

     label3:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;
    }

    private org.apache.james.mime4j.field.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.parser.ASTgroup_body)
    {
        java.lang.IllegalStateException $r7;
        org.apache.james.mime4j.field.address.MailboxList $r8;
        org.apache.james.mime4j.field.address.parser.Node $r4;
        org.apache.james.mime4j.field.address.parser.ASTmailbox $r5;
        org.apache.james.mime4j.field.address.parser.ASTgroup_body $r2;
        java.util.ArrayList $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r3;
        org.apache.james.mime4j.field.address.Mailbox $r6;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r2 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTgroup_body;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r2);

     label1:
        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.parser.ASTmailbox;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.james.mime4j.field.address.parser.ASTmailbox) $r4;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.parser.ASTmailbox)>($r5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label3:
        $r8 = new org.apache.james.mime4j.field.address.MailboxList;

        specialinvoke $r8.<org.apache.james.mime4j.field.address.MailboxList: void <init>(java.util.List,boolean)>($r1, 1);

        return $r8;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.parser.ASTname_addr)
    {
        java.lang.IllegalStateException $r9;
        org.apache.james.mime4j.field.address.parser.ASTphrase $r4;
        org.apache.james.mime4j.field.address.parser.Node $r3;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r2;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r7;
        org.apache.james.mime4j.field.address.Mailbox $r6, $r8;
        org.apache.james.mime4j.field.address.parser.ASTname_addr $r1;
        java.lang.String $r5;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTname_addr;

        $r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTphrase;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.james.mime4j.field.address.parser.ASTphrase) $r3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r4, 0);

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String)>($r5);

        $r6 = new org.apache.james.mime4j.field.address.Mailbox;

        $r7 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) $r3;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r7);

        specialinvoke $r6.<org.apache.james.mime4j.field.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.field.address.Mailbox)>($r5, $r8);

        return $r6;

     label1:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;

     label2:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;
    }

    private org.apache.james.mime4j.field.address.DomainList buildRoute(org.apache.james.mime4j.field.address.parser.ASTroute)
    {
        java.lang.IllegalStateException $r7;
        org.apache.james.mime4j.field.address.parser.Node $r4;
        org.apache.james.mime4j.field.address.parser.ASTdomain $r5;
        org.apache.james.mime4j.field.address.DomainList $r8;
        java.util.ArrayList $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r3;
        int $i0;
        java.lang.String $r6;
        org.apache.james.mime4j.field.address.parser.ASTroute $r2;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r2 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTroute;

        $r1 = new java.util.ArrayList;

        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.parser.SimpleNode: int jjtGetNumChildren()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r2);

     label1:
        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.parser.ASTdomain;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.james.mime4j.field.address.parser.ASTdomain) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r5, 1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label3:
        $r8 = new org.apache.james.mime4j.field.address.DomainList;

        specialinvoke $r8.<org.apache.james.mime4j.field.address.DomainList: void <init>(java.util.List,boolean)>($r1, 1);

        return $r8;
    }

    private java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode, boolean)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.apache.james.mime4j.field.address.parser.Token $r4, $r5, $r6;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r3 := @parameter0: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $z0 := @parameter1: boolean;

        $r4 = $r3.<org.apache.james.mime4j.field.address.parser.BaseNode: org.apache.james.mime4j.field.address.parser.Token firstToken>;

        $r5 = $r3.<org.apache.james.mime4j.field.address.parser.BaseNode: org.apache.james.mime4j.field.address.parser.Token lastToken>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label1:
        if $r4 == $r5 goto label2;

        $r2 = $r4.<org.apache.james.mime4j.field.address.parser.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = $r4.<org.apache.james.mime4j.field.address.parser.Token: org.apache.james.mime4j.field.address.parser.Token next>;

        if $z0 != 0 goto label1;

        $r6 = $r4.<org.apache.james.mime4j.field.address.parser.Token: org.apache.james.mime4j.field.address.parser.Token specialToken>;

        specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.parser.Token)>($r1, $r6);

        goto label1;

     label2:
        $r2 = $r5.<org.apache.james.mime4j.field.address.parser.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static org.apache.james.mime4j.field.address.Builder getInstance()
    {
        org.apache.james.mime4j.field.address.Builder r0;

        r0 = <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton>;

        return r0;
    }

    public org.apache.james.mime4j.field.address.Address buildAddress(org.apache.james.mime4j.field.address.parser.ASTaddress)
    {
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r4;
        java.lang.IllegalStateException $r13;
        org.apache.james.mime4j.field.address.parser.ASTphrase $r7;
        org.apache.james.mime4j.field.address.MailboxList $r11;
        org.apache.james.mime4j.field.address.parser.Node $r3;
        org.apache.james.mime4j.field.address.parser.ASTgroup_body $r10;
        org.apache.james.mime4j.field.address.Group $r9;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r2;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r6;
        org.apache.james.mime4j.field.address.Mailbox $r5, $r12;
        java.lang.String $r8;
        org.apache.james.mime4j.field.address.parser.ASTaddress $r1;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTaddress;

        $r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.james.mime4j.field.address.parser.ASTaddr_spec) $r3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>($r4);

        return $r5;

     label1:
        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z0 == 0 goto label2;

        $r6 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) $r3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r6);

        return $r5;

     label2:
        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTphrase;

        if $z0 == 0 goto label5;

        $r7 = (org.apache.james.mime4j.field.address.parser.ASTphrase) $r3;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r7, 0);

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTgroup_body;

        if $z0 == 0 goto label3;

        $r9 = new org.apache.james.mime4j.field.address.Group;

        $r10 = (org.apache.james.mime4j.field.address.parser.ASTgroup_body) $r3;

        $r11 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.parser.ASTgroup_body)>($r10);

        specialinvoke $r9.<org.apache.james.mime4j.field.address.Group: void <init>(java.lang.String,org.apache.james.mime4j.field.address.MailboxList)>($r8, $r11);

        return $r9;

     label3:
        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z0 == 0 goto label4;

        $r8 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String)>($r8);

        $r5 = new org.apache.james.mime4j.field.address.Mailbox;

        $r6 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) $r3;

        $r12 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r6);

        specialinvoke $r5.<org.apache.james.mime4j.field.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.field.address.Mailbox)>($r8, $r12);

        return $r5;

     label4:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label5:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;
    }

    public org.apache.james.mime4j.field.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.parser.ASTaddress_list)
    {
        org.apache.james.mime4j.field.address.parser.Node $r3;
        org.apache.james.mime4j.field.address.Address $r5;
        java.util.ArrayList $r1;
        org.apache.james.mime4j.field.address.AddressList $r6;
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.ASTaddress_list $r2;
        org.apache.james.mime4j.field.address.parser.ASTaddress $r4;
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r2 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTaddress_list;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.parser.SimpleNode: int jjtGetNumChildren()>();

        if $i0 >= $i1 goto label2;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int)>($i0);

        $r4 = (org.apache.james.mime4j.field.address.parser.ASTaddress) $r3;

        $r5 = virtualinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Address buildAddress(org.apache.james.mime4j.field.address.parser.ASTaddress)>($r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new org.apache.james.mime4j.field.address.AddressList;

        specialinvoke $r6.<org.apache.james.mime4j.field.address.AddressList: void <init>(java.util.List,boolean)>($r1, 1);

        return $r6;
    }

    public org.apache.james.mime4j.field.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.parser.ASTmailbox)
    {
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r4;
        java.lang.IllegalStateException $r8;
        org.apache.james.mime4j.field.address.parser.Node $r3;
        org.apache.james.mime4j.field.address.parser.ASTmailbox $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r2;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r6;
        org.apache.james.mime4j.field.address.Mailbox $r5;
        org.apache.james.mime4j.field.address.parser.ASTname_addr $r7;
        org.apache.james.mime4j.field.address.Builder r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTmailbox;

        $r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.james.mime4j.field.address.parser.ASTaddr_spec) $r3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>($r4);

        return $r5;

     label1:
        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z0 == 0 goto label2;

        $r6 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) $r3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r6);

        return $r5;

     label2:
        $z0 = $r3 instanceof org.apache.james.mime4j.field.address.parser.ASTname_addr;

        if $z0 == 0 goto label3;

        $r7 = (org.apache.james.mime4j.field.address.parser.ASTname_addr) $r3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.parser.ASTname_addr)>($r7);

        return $r5;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;
    }
}
