public abstract class org.codehaus.jackson.map.deser.FromStringDeserializer extends org.codehaus.jackson.map.deser.StdScalarDeserializer
{

    public void <init>(java.lang.Class)
    {
        org.codehaus.jackson.map.deser.FromStringDeserializer r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.jackson.map.deser.FromStringDeserializer;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdScalarDeserializer: void <init>(java.lang.Class)>($r1);

        return;
    }

    public static java.lang.Iterable all()
    {
        org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer $r1;
        org.codehaus.jackson.map.deser.FromStringDeserializer$URLDeserializer $r2;
        org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer $r3;
        org.codehaus.jackson.map.deser.FromStringDeserializer$PatternDeserializer $r5;
        org.codehaus.jackson.map.deser.FromStringDeserializer$InetAddressDeserializer $r7;
        java.util.ArrayList $r0;
        org.codehaus.jackson.map.deser.FromStringDeserializer$CurrencyDeserializer $r4;
        org.codehaus.jackson.map.deser.FromStringDeserializer$LocaleDeserializer $r6;
        org.codehaus.jackson.map.deser.FromStringDeserializer$TimeZoneDeserializer $r8;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer;

        specialinvoke $r1.<org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = new org.codehaus.jackson.map.deser.FromStringDeserializer$URLDeserializer;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.FromStringDeserializer$URLDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r3 = new org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r4 = new org.codehaus.jackson.map.deser.FromStringDeserializer$CurrencyDeserializer;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.FromStringDeserializer$CurrencyDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r5 = new org.codehaus.jackson.map.deser.FromStringDeserializer$PatternDeserializer;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.FromStringDeserializer$PatternDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = new org.codehaus.jackson.map.deser.FromStringDeserializer$LocaleDeserializer;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.FromStringDeserializer$LocaleDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = new org.codehaus.jackson.map.deser.FromStringDeserializer$InetAddressDeserializer;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.FromStringDeserializer$InetAddressDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r8 = new org.codehaus.jackson.map.deser.FromStringDeserializer$TimeZoneDeserializer;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.FromStringDeserializer$TimeZoneDeserializer: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        return $r0;
    }

    public abstract java.lang.Object _deserialize(java.lang.String, org.codehaus.jackson.map.DeserializationContext);

    public java.lang.Object _deserializeEmbedded(java.lang.Object, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.deser.FromStringDeserializer r0;
        org.codehaus.jackson.map.JsonMappingException $r6;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        org.codehaus.jackson.map.DeserializationContext $r1;

        r0 := @this: org.codehaus.jackson.map.deser.FromStringDeserializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t know how to convert embedded Object of type ");

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into ");

        $r4 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String)>($r5);

        throw $r6;
    }

    public final java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r4, $r5;
        java.lang.IllegalArgumentException $r2;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.deser.FromStringDeserializer r0;
        org.codehaus.jackson.map.JsonMappingException $r9;
        int $i0;
        java.lang.Object $r7;
        java.lang.Class $r8, $r10;
        java.lang.String $r6;
        org.codehaus.jackson.JsonParser $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.FromStringDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r4 != $r5 goto label4;

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r6, $r1);

     label2:
        if $r7 == null goto label3;

        return $r7;

     label3:
        $r8 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String)>($r8, "not a valid textual representation");

        throw $r9;

     label4:
        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT>;

        if $r4 != $r5 goto label7;

        $r7 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: java.lang.Object getEmbeddedObject()>();

        if $r7 != null goto label5;

        return null;

     label5:
        $r8 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z0 == 0 goto label6;

        return $r7;

     label6:
        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.FromStringDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext)>($r7, $r1);

        return $r7;

     label7:
        $r8 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

     label8:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
    }
}
