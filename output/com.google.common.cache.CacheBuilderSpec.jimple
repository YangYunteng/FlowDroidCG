public final class com.google.common.cache.CacheBuilderSpec extends java.lang.Object
{
    public static final com.google.common.base.Splitter KEYS_SPLITTER;
    public static final com.google.common.base.Splitter KEY_VALUE_SPLITTER;
    public static final com.google.common.collect.ImmutableMap VALUE_PARSERS;
    public long accessExpirationDuration;
    public java.util.concurrent.TimeUnit accessExpirationTimeUnit;
    public java.lang.Integer concurrencyLevel;
    public java.lang.Integer initialCapacity;
    public com.google.common.cache.LocalCache$Strength keyStrength;
    public java.lang.Long maximumSize;
    public java.lang.Long maximumWeight;
    public java.lang.Boolean recordStats;
    public long refreshDuration;
    public java.util.concurrent.TimeUnit refreshTimeUnit;
    public final java.lang.String specification;
    public com.google.common.cache.LocalCache$Strength valueStrength;
    public long writeExpirationDuration;
    public java.util.concurrent.TimeUnit writeExpirationTimeUnit;

    static void <clinit>()
    {
        com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser $r5;
        com.google.common.cache.LocalCache$Strength $r7;
        com.google.common.cache.CacheBuilderSpec$InitialCapacityParser $r2;
        com.google.common.cache.CacheBuilderSpec$WriteDurationParser $r11;
        com.google.common.cache.CacheBuilderSpec$RecordStatsParser $r9;
        com.google.common.collect.ImmutableMap $r13;
        com.google.common.cache.CacheBuilderSpec$ValueStrengthParser $r8;
        com.google.common.cache.CacheBuilderSpec$RefreshDurationParser $r12;
        com.google.common.collect.ImmutableMap$Builder $r1;
        com.google.common.cache.CacheBuilderSpec$AccessDurationParser $r10;
        com.google.common.cache.CacheBuilderSpec$MaximumWeightParser $r4;
        com.google.common.cache.CacheBuilderSpec$MaximumSizeParser $r3;
        com.google.common.cache.CacheBuilderSpec$KeyStrengthParser $r6;
        com.google.common.base.Splitter $r0;

        $r0 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(44);

        $r0 = virtualinvoke $r0.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>();

        <com.google.common.cache.CacheBuilderSpec: com.google.common.base.Splitter KEYS_SPLITTER> = $r0;

        $r0 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(61);

        $r0 = virtualinvoke $r0.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>();

        <com.google.common.cache.CacheBuilderSpec: com.google.common.base.Splitter KEY_VALUE_SPLITTER> = $r0;

        $r1 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r2 = new com.google.common.cache.CacheBuilderSpec$InitialCapacityParser;

        specialinvoke $r2.<com.google.common.cache.CacheBuilderSpec$InitialCapacityParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("initialCapacity", $r2);

        $r3 = new com.google.common.cache.CacheBuilderSpec$MaximumSizeParser;

        specialinvoke $r3.<com.google.common.cache.CacheBuilderSpec$MaximumSizeParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("maximumSize", $r3);

        $r4 = new com.google.common.cache.CacheBuilderSpec$MaximumWeightParser;

        specialinvoke $r4.<com.google.common.cache.CacheBuilderSpec$MaximumWeightParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("maximumWeight", $r4);

        $r5 = new com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser;

        specialinvoke $r5.<com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("concurrencyLevel", $r5);

        $r6 = new com.google.common.cache.CacheBuilderSpec$KeyStrengthParser;

        $r7 = <com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$Strength WEAK>;

        specialinvoke $r6.<com.google.common.cache.CacheBuilderSpec$KeyStrengthParser: void <init>(com.google.common.cache.LocalCache$Strength)>($r7);

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("weakKeys", $r6);

        $r8 = new com.google.common.cache.CacheBuilderSpec$ValueStrengthParser;

        $r7 = <com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$Strength SOFT>;

        specialinvoke $r8.<com.google.common.cache.CacheBuilderSpec$ValueStrengthParser: void <init>(com.google.common.cache.LocalCache$Strength)>($r7);

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("softValues", $r8);

        $r8 = new com.google.common.cache.CacheBuilderSpec$ValueStrengthParser;

        $r7 = <com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$Strength WEAK>;

        specialinvoke $r8.<com.google.common.cache.CacheBuilderSpec$ValueStrengthParser: void <init>(com.google.common.cache.LocalCache$Strength)>($r7);

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("weakValues", $r8);

        $r9 = new com.google.common.cache.CacheBuilderSpec$RecordStatsParser;

        specialinvoke $r9.<com.google.common.cache.CacheBuilderSpec$RecordStatsParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("recordStats", $r9);

        $r10 = new com.google.common.cache.CacheBuilderSpec$AccessDurationParser;

        specialinvoke $r10.<com.google.common.cache.CacheBuilderSpec$AccessDurationParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("expireAfterAccess", $r10);

        $r11 = new com.google.common.cache.CacheBuilderSpec$WriteDurationParser;

        specialinvoke $r11.<com.google.common.cache.CacheBuilderSpec$WriteDurationParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("expireAfterWrite", $r11);

        $r12 = new com.google.common.cache.CacheBuilderSpec$RefreshDurationParser;

        specialinvoke $r12.<com.google.common.cache.CacheBuilderSpec$RefreshDurationParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("refreshAfterWrite", $r12);

        $r12 = new com.google.common.cache.CacheBuilderSpec$RefreshDurationParser;

        specialinvoke $r12.<com.google.common.cache.CacheBuilderSpec$RefreshDurationParser: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("refreshInterval", $r12);

        $r13 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        <com.google.common.cache.CacheBuilderSpec: com.google.common.collect.ImmutableMap VALUE_PARSERS> = $r13;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        com.google.common.cache.CacheBuilderSpec r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.cache.CacheBuilderSpec: java.lang.String specification> = $r1;

        return;
    }

    public static java.lang.String access$000(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r0);

        return $r1;
    }

    public static com.google.common.cache.CacheBuilderSpec disableCaching()
    {
        com.google.common.cache.CacheBuilderSpec $r0;

        $r0 = staticinvoke <com.google.common.cache.CacheBuilderSpec: com.google.common.cache.CacheBuilderSpec parse(java.lang.String)>("maximumSize=0");

        return $r0;
    }

    public static java.lang.Long durationInNanos(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;
        java.lang.Long $r1;

        $l0 := @parameter0: long;

        $r0 := @parameter1: java.util.concurrent.TimeUnit;

        if $r0 != null goto label1;

        return null;

     label1:
        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toNanos(long)>($l0);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    public static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.String $r2;
        java.util.Locale $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, $r2, $r0);

        return $r2;
    }

    public static com.google.common.cache.CacheBuilderSpec parse(java.lang.String)
    {
        java.util.Iterator $r4;
        com.google.common.collect.ImmutableMap $r7;
        java.lang.Iterable $r3;
        com.google.common.collect.ImmutableList $r6;
        com.google.common.cache.CacheBuilderSpec$ValueParser $r8;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r1, $r9;
        com.google.common.cache.CacheBuilderSpec $r0;
        com.google.common.base.Splitter $r2;
        boolean $z0, $z1;

        $r1 := @parameter0: java.lang.String;

        $r0 = new com.google.common.cache.CacheBuilderSpec;

        specialinvoke $r0.<com.google.common.cache.CacheBuilderSpec: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r2 = <com.google.common.cache.CacheBuilderSpec: com.google.common.base.Splitter KEYS_SPLITTER>;

        $r3 = virtualinvoke $r2.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r1);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r5;

        $r2 = <com.google.common.cache.CacheBuilderSpec: com.google.common.base.Splitter KEY_VALUE_SPLITTER>;

        $r3 = virtualinvoke $r2.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r1);

        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r3);

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "blank key-value pair");

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $z0 = 0;

        if $i0 > 2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z1, "key-value pair %s with more than one equals sign", $r1);

        $r5 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r1 = (java.lang.String) $r5;

        $r7 = <com.google.common.cache.CacheBuilderSpec: com.google.common.collect.ImmutableMap VALUE_PARSERS>;

        $r5 = virtualinvoke $r7.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (com.google.common.cache.CacheBuilderSpec$ValueParser) $r5;

        if $r8 == null goto label4;

        $z0 = 1;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "unknown key %s", $r1);

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 != 1 goto label5;

        $r9 = null;

        goto label6;

     label5:
        $r5 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

        $r9 = (java.lang.String) $r5;

     label6:
        interfaceinvoke $r8.<com.google.common.cache.CacheBuilderSpec$ValueParser: void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String)>($r0, $r1, $r9);

        goto label1;

     label7:
        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.cache.LocalCache$Strength $r7, $r8;
        long $l0;
        java.lang.Integer $r3, $r4;
        java.util.concurrent.TimeUnit $r11;
        java.lang.Long $r5, $r6;
        java.lang.Boolean $r9, $r10;
        java.lang.Object $r1;
        com.google.common.cache.CacheBuilderSpec r0, $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.common.cache.CacheBuilderSpec;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.common.cache.CacheBuilderSpec) $r1;

        $r3 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer initialCapacity>;

        $r4 = $r2.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer initialCapacity>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumSize>;

        $r6 = $r2.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumSize>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight>;

        $r6 = $r2.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer concurrencyLevel>;

        $r4 = $r2.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer concurrencyLevel>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label3;

        $r7 = r0.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength keyStrength>;

        $r8 = $r2.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength keyStrength>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z0 == 0 goto label3;

        $r7 = r0.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength valueStrength>;

        $r8 = $r2.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength valueStrength>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z0 == 0 goto label3;

        $r9 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Boolean recordStats>;

        $r10 = $r2.<com.google.common.cache.CacheBuilderSpec: java.lang.Boolean recordStats>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z0 == 0 goto label3;

        $l0 = r0.<com.google.common.cache.CacheBuilderSpec: long writeExpirationDuration>;

        $r11 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit writeExpirationTimeUnit>;

        $r5 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r11);

        $l0 = $r2.<com.google.common.cache.CacheBuilderSpec: long writeExpirationDuration>;

        $r11 = $r2.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit writeExpirationTimeUnit>;

        $r6 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r11);

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label3;

        $l0 = r0.<com.google.common.cache.CacheBuilderSpec: long accessExpirationDuration>;

        $r11 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit accessExpirationTimeUnit>;

        $r5 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r11);

        $l0 = $r2.<com.google.common.cache.CacheBuilderSpec: long accessExpirationDuration>;

        $r11 = $r2.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit accessExpirationTimeUnit>;

        $r6 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r11);

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label3;

        $l0 = r0.<com.google.common.cache.CacheBuilderSpec: long refreshDuration>;

        $r11 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit refreshTimeUnit>;

        $r5 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r11);

        $l0 = $r2.<com.google.common.cache.CacheBuilderSpec: long refreshDuration>;

        $r11 = $r2.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit refreshTimeUnit>;

        $r6 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r11);

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.cache.LocalCache$Strength $r4;
        java.lang.Object[] $r1;
        long $l0;
        java.lang.Integer $r2;
        java.util.concurrent.TimeUnit $r6;
        java.lang.Long $r3;
        int $i1;
        java.lang.Boolean $r5;
        com.google.common.cache.CacheBuilderSpec r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec;

        $r1 = newarray (java.lang.Object)[10];

        $r2 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer initialCapacity>;

        $r1[0] = $r2;

        $r3 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumSize>;

        $r1[1] = $r3;

        $r3 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight>;

        $r1[2] = $r3;

        $r2 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer concurrencyLevel>;

        $r1[3] = $r2;

        $r4 = r0.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength keyStrength>;

        $r1[4] = $r4;

        $r4 = r0.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength valueStrength>;

        $r1[5] = $r4;

        $r5 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Boolean recordStats>;

        $r1[6] = $r5;

        $l0 = r0.<com.google.common.cache.CacheBuilderSpec: long writeExpirationDuration>;

        $r6 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit writeExpirationTimeUnit>;

        $r3 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r6);

        $r1[7] = $r3;

        $l0 = r0.<com.google.common.cache.CacheBuilderSpec: long accessExpirationDuration>;

        $r6 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit accessExpirationTimeUnit>;

        $r3 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r6);

        $r1[8] = $r3;

        $l0 = r0.<com.google.common.cache.CacheBuilderSpec: long refreshDuration>;

        $r6 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit refreshTimeUnit>;

        $r3 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit)>($l0, $r6);

        $r1[9] = $r3;

        $i1 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i1;
    }

    public com.google.common.cache.CacheBuilder toCacheBuilder()
    {
        com.google.common.cache.LocalCache$Strength $r4;
        long $l1;
        java.lang.AssertionError $r6;
        java.lang.Integer $r2;
        java.util.concurrent.TimeUnit $r8;
        java.lang.Long $r3;
        int[] $r5;
        int $i0;
        java.lang.Boolean $r7;
        com.google.common.cache.CacheBuilder $r1;
        com.google.common.cache.CacheBuilderSpec r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec;

        $r1 = staticinvoke <com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder newBuilder()>();

        $r2 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer initialCapacity>;

        if $r2 == null goto label01;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder initialCapacity(int)>($i0);

     label01:
        $r3 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumSize>;

        if $r3 == null goto label02;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder maximumSize(long)>($l1);

     label02:
        $r3 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Long maximumWeight>;

        if $r3 == null goto label03;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder maximumWeight(long)>($l1);

     label03:
        $r2 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Integer concurrencyLevel>;

        if $r2 == null goto label04;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder concurrencyLevel(int)>($i0);

     label04:
        $r4 = r0.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength keyStrength>;

        if $r4 == null goto label06;

        $r5 = <com.google.common.cache.CacheBuilderSpec$1: int[] $SwitchMap$com$google$common$cache$LocalCache$Strength>;

        $i0 = virtualinvoke $r4.<java.lang.Enum: int ordinal()>();

        $i0 = $r5[$i0];

        if $i0 != 1 goto label05;

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder weakKeys()>();

        goto label06;

     label05:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label06:
        $r4 = r0.<com.google.common.cache.CacheBuilderSpec: com.google.common.cache.LocalCache$Strength valueStrength>;

        if $r4 == null goto label09;

        $r5 = <com.google.common.cache.CacheBuilderSpec$1: int[] $SwitchMap$com$google$common$cache$LocalCache$Strength>;

        $i0 = virtualinvoke $r4.<java.lang.Enum: int ordinal()>();

        $i0 = $r5[$i0];

        if $i0 == 1 goto label08;

        if $i0 != 2 goto label07;

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder softValues()>();

        goto label09;

     label07:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label08:
        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder weakValues()>();

     label09:
        $r7 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.Boolean recordStats>;

        if $r7 == null goto label10;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder recordStats()>();

     label10:
        $r8 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit writeExpirationTimeUnit>;

        if $r8 == null goto label11;

        $l1 = r0.<com.google.common.cache.CacheBuilderSpec: long writeExpirationDuration>;

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder expireAfterWrite(long,java.util.concurrent.TimeUnit)>($l1, $r8);

     label11:
        $r8 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit accessExpirationTimeUnit>;

        if $r8 == null goto label12;

        $l1 = r0.<com.google.common.cache.CacheBuilderSpec: long accessExpirationDuration>;

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder expireAfterAccess(long,java.util.concurrent.TimeUnit)>($l1, $r8);

     label12:
        $r8 = r0.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit refreshTimeUnit>;

        if $r8 == null goto label13;

        $l1 = r0.<com.google.common.cache.CacheBuilderSpec: long refreshDuration>;

        virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder refreshAfterWrite(long,java.util.concurrent.TimeUnit)>($l1, $r8);

     label13:
        return $r1;
    }

    public java.lang.String toParsableString()
    {
        java.lang.String r1;
        com.google.common.cache.CacheBuilderSpec r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec;

        r1 = r0.<com.google.common.cache.CacheBuilderSpec: java.lang.String specification>;

        return r1;
    }

    public java.lang.String toString()
    {
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        java.lang.String $r2;
        com.google.common.cache.CacheBuilderSpec r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r2 = virtualinvoke r0.<com.google.common.cache.CacheBuilderSpec: java.lang.String toParsableString()>();

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object)>($r2);

        $r2 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r2;
    }
}
