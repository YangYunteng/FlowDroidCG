public class com.google.firebase.crashlytics.internal.common.CrashlyticsCore extends java.lang.Object
{
    public static final float CLS_DEFAULT_PROCESS_DELAY;
    public static final java.lang.String CRASHLYTICS_REQUIRE_BUILD_ID;
    public static final boolean CRASHLYTICS_REQUIRE_BUILD_ID_DEFAULT;
    public static final java.lang.String CRASH_MARKER_FILE_NAME;
    public static final int DEFAULT_MAIN_HANDLER_TIMEOUT_SEC;
    public static final java.lang.String INITIALIZATION_MARKER_FILE_NAME;
    public static final java.lang.String MISSING_BUILD_ID_MSG;
    public final com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger analyticsEventLogger;
    public final com.google.firebase.FirebaseApp app;
    public com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker;
    public final com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource breadcrumbSource;
    public final android.content.Context context;
    public com.google.firebase.crashlytics.internal.common.CrashlyticsController controller;
    public java.util.concurrent.ExecutorService crashHandlerExecutor;
    public com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker;
    public final com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter;
    public boolean didCrashOnPreviousExecution;
    public final com.google.firebase.crashlytics.internal.common.IdManager idManager;
    public com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker initializationMarker;
    public com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent;
    public final long startTime;

    public void <init>(com.google.firebase.FirebaseApp, com.google.firebase.crashlytics.internal.common.IdManager, com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent, com.google.firebase.crashlytics.internal.common.DataCollectionArbiter, com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource, com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger, java.util.concurrent.ExecutorService)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        android.content.Context $r8;
        long $l0;
        com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource $r4;
        com.google.firebase.crashlytics.internal.common.IdManager $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r9;
        com.google.firebase.crashlytics.internal.common.DataCollectionArbiter $r3;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r2;
        com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger $r5;
        java.util.concurrent.ExecutorService $r6;
        com.google.firebase.FirebaseApp $r7;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r7 := @parameter0: com.google.firebase.FirebaseApp;

        $r1 := @parameter1: com.google.firebase.crashlytics.internal.common.IdManager;

        $r2 := @parameter2: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent;

        $r3 := @parameter3: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter;

        $r4 := @parameter4: com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource;

        $r5 := @parameter5: com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger;

        $r6 := @parameter6: java.util.concurrent.ExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.FirebaseApp app> = $r7;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter> = $r3;

        $r8 = virtualinvoke $r7.<com.google.firebase.FirebaseApp: android.content.Context getApplicationContext()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context> = $r8;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.IdManager idManager> = $r1;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent> = $r2;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource breadcrumbSource> = $r4;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger analyticsEventLogger> = $r5;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.util.concurrent.ExecutorService crashHandlerExecutor> = $r6;

        $r9 = new com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker;

        specialinvoke $r9.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: void <init>(java.util.concurrent.ExecutorService)>($r6);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker> = $r9;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: long startTime> = $l0;

        return;
    }

    public static com.google.android.gms.tasks.Task access$000(com.google.firebase.crashlytics.internal.common.CrashlyticsCore, com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore $r2;
        com.google.android.gms.tasks.Task $r1;

        $r2 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r0 := @parameter1: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        $r1 = specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.android.gms.tasks.Task doBackgroundInitialization(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>($r0);

        return $r1;
    }

    public static com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker access$100(com.google.firebase.crashlytics.internal.common.CrashlyticsCore)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore $r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker initializationMarker>;

        return r1;
    }

    public static com.google.firebase.crashlytics.internal.common.CrashlyticsController access$200(com.google.firebase.crashlytics.internal.common.CrashlyticsCore)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore $r0;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        return r1;
    }

    private void checkForPreviousCrash()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        java.lang.Exception $r1;
        com.google.android.gms.tasks.Task $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore$4 $r3;
        java.lang.Boolean $r6, $r7;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsCore$4;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore$4: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsCore)>(r0);

        $r4 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.util.concurrent.Callable)>($r3);

     label1:
        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: java.lang.Object awaitEvenIfOnMainThread(com.google.android.gms.tasks.Task)>($r4);

        $r6 = (java.lang.Boolean) $r5;

     label2:
        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: boolean didCrashOnPreviousExecution> = $z0;

        return;

     label3:
        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: boolean didCrashOnPreviousExecution> = 0;

        return;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    private com.google.android.gms.tasks.Task doBackgroundInitialization(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        java.lang.Throwable $r11;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.settings.model.SessionSettingsData $r10;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        java.lang.RuntimeException $r8;
        com.google.android.gms.tasks.Task $r9;
        java.lang.Exception $r12;
        com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource $r3;
        com.google.firebase.crashlytics.internal.Logger $r7;
        com.google.firebase.crashlytics.internal.settings.model.FeaturesSettingsData $r6;
        int $i0;
        com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbHandler $r4;
        com.google.firebase.crashlytics.internal.settings.model.Settings $r5;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void markInitializationStarted()>();

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void cleanInvalidTempFiles()>();

     label01:
        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource breadcrumbSource>;

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore$$Lambda$1: com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbHandler lambdaFactory$(com.google.firebase.crashlytics.internal.common.CrashlyticsCore)>(r0);

        interfaceinvoke $r3.<com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbSource: void registerBreadcrumbHandler(com.google.firebase.crashlytics.internal.breadcrumbs.BreadcrumbHandler)>($r4);

        $r5 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.settings.SettingsDataProvider: com.google.firebase.crashlytics.internal.settings.model.Settings getSettings()>();

        $r6 = interfaceinvoke $r5.<com.google.firebase.crashlytics.internal.settings.model.Settings: com.google.firebase.crashlytics.internal.settings.model.FeaturesSettingsData getFeaturesData()>();

        $z0 = $r6.<com.google.firebase.crashlytics.internal.settings.model.FeaturesSettingsData: boolean collectReports>;

     label02:
        if $z0 != 0 goto label07;

     label03:
        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Collection of crash reports disabled in Crashlytics settings.");

     label04:
        $r8 = new java.lang.RuntimeException;

     label05:
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Collection of crash reports disabled in Crashlytics settings.");

        $r9 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forException(java.lang.Exception)>($r8);

     label06:
        virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void markInitializationComplete()>();

        return $r9;

     label07:
        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r10 = interfaceinvoke $r5.<com.google.firebase.crashlytics.internal.settings.model.Settings: com.google.firebase.crashlytics.internal.settings.model.SessionSettingsData getSessionData()>();

        $i0 = $r10.<com.google.firebase.crashlytics.internal.settings.model.SessionSettingsData: int maxCustomExceptionEvents>;

        $z0 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: boolean finalizeSessions(int)>($i0);

     label08:
        if $z0 != 0 goto label10;

     label09:
        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Could not finalize previous sessions.");

     label10:
        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r9 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.settings.SettingsDataProvider: com.google.android.gms.tasks.Task getAppSettings()>();

        $r9 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task submitAllReports(float,com.google.android.gms.tasks.Task)>(1.0F, $r9);

     label11:
        virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void markInitializationComplete()>();

        return $r9;

     label12:
        $r11 := @caughtexception;

        goto label16;

     label13:
        $r12 := @caughtexception;

     label14:
        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Crashlytics encountered a problem during asynchronous initialization.", $r12);

        $r9 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forException(java.lang.Exception)>($r12);

     label15:
        virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void markInitializationComplete()>();

        return $r9;

     label16:
        virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void markInitializationComplete()>();

        throw $r11;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label11 with label13;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }

    private void finishInitSynchronously(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r2;
        java.util.concurrent.TimeoutException $r7;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ExecutionException $r8;
        com.google.firebase.crashlytics.internal.Logger $r6;
        java.util.concurrent.Future $r5;
        java.lang.InterruptedException $r9;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore$2 $r3;
        java.util.concurrent.ExecutorService $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r2 := @parameter0: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsCore$2;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore$2: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsCore,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>(r0, $r2);

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.util.concurrent.ExecutorService crashHandlerExecutor>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Crashlytics detected incomplete initialization on previous app launch. Will initialize synchronously.");

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label1:
        interfaceinvoke $r5.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Crashlytics timed out during initialization.", $r7);

        return;

     label4:
        $r8 := @caughtexception;

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Problem encountered during Crashlytics initialization.", $r8);

        return;

     label5:
        $r9 := @caughtexception;

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Crashlytics was interrupted during initialization.", $r9);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    public static java.lang.String getVersion()
    {
        return "17.2.2";
    }

    public static boolean isBuildIdValid(java.lang.String, boolean)
    {
        com.google.firebase.crashlytics.internal.Logger $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Configured not to require a build ID.");

        return 1;

     label1:
        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean isNullOrEmpty(java.lang.String)>($r0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     |  | ");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".   \\ |  | /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".    \\    /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     \\  /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".      \\/");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", "The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app\'s build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".      /\\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     /  \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".    /    \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".   / |  | \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FirebaseCrashlytics", ".");

        return 0;
    }

    public com.google.android.gms.tasks.Task checkForUnsentReports()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.android.gms.tasks.Task $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r1 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task checkForUnsentReports()>();

        return $r1;
    }

    public com.google.android.gms.tasks.Task deleteUnsentReports()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.android.gms.tasks.Task $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r1 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task deleteUnsentReports()>();

        return $r1;
    }

    public boolean didCrashOnPreviousExecution()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        boolean z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        z0 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: boolean didCrashOnPreviousExecution>;

        return z0;
    }

    public boolean didPreviousInitializationFail()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker $r1;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker initializationMarker>;

        $z0 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker: boolean isPresent()>();

        return $z0;
    }

    public com.google.android.gms.tasks.Task doBackgroundInitializationAsync(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore$1 $r2;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r4;
        java.util.concurrent.ExecutorService $r1;
        com.google.android.gms.tasks.Task $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r4 := @parameter0: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.util.concurrent.ExecutorService crashHandlerExecutor>;

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsCore$1;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore$1: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsCore,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>(r0, $r4);

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: com.google.android.gms.tasks.Task callTask(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r1, $r2);

        return $r3;
    }

    public com.google.firebase.crashlytics.internal.common.CrashlyticsController getController()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        return r1;
    }

    public void log(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        long $l0, $l1;
        java.lang.String $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: long startTime>;

        $l0 = $l0 - $l1;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeToLog(long,java.lang.String)>($l0, $r1);

        return;
    }

    public void logException(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        java.lang.Thread $r3;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeNonFatalException(java.lang.Thread,java.lang.Throwable)>($r3, $r1);

        return;
    }

    public void markInitializationComplete()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore$3 $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsCore$3;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore$3: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.util.concurrent.Callable)>($r2);

        return;
    }

    public void markInitializationStarted()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.Logger $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: void checkRunningOnThread()>();

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker initializationMarker>;

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker: boolean create()>();

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Initialization marker file created.");

        return;
    }

    public boolean onPreExecute(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        android.content.Context $r2;
        java.lang.IllegalStateException $r23;
        com.google.firebase.FirebaseOptions $r14;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker $r8;
        com.google.firebase.crashlytics.internal.persistence.FileStoreImpl $r7;
        com.google.firebase.crashlytics.internal.common.IdManager $r5;
        java.lang.Thread$UncaughtExceptionHandler $r21;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r3;
        java.lang.String $r9, $r12, $r15;
        com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger $r20;
        boolean $z0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.unity.ResourceUnityVersionProvider $r17;
        com.google.firebase.crashlytics.internal.common.AppData $r16;
        com.google.firebase.crashlytics.internal.network.HttpRequestFactory $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r18;
        java.lang.Exception $r22;
        com.google.firebase.crashlytics.internal.Logger $r10;
        com.google.firebase.crashlytics.internal.common.DataCollectionArbiter $r6;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r19;
        java.lang.StringBuilder $r11;
        com.google.firebase.FirebaseApp $r13;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String getMappingFileId(android.content.Context)>($r2);

        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mapping file ID is: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r12);

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r2, "com.crashlytics.RequireBuildId", 1);

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: boolean isBuildIdValid(java.lang.String,boolean)>($r9, $z0);

        if $z0 == 0 goto label25;

        $r13 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.FirebaseApp app>;

        $r14 = virtualinvoke $r13.<com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()>();

        $r12 = virtualinvoke $r14.<com.google.firebase.FirebaseOptions: java.lang.String getApplicationId()>();

     label01:
        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

     label02:
        $r11 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing Crashlytics ");

        $r15 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String getVersion()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void i(java.lang.String)>($r15);

     label04:
        $r7 = new com.google.firebase.crashlytics.internal.persistence.FileStoreImpl;

     label05:
        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        specialinvoke $r7.<com.google.firebase.crashlytics.internal.persistence.FileStoreImpl: void <init>(android.content.Context)>($r2);

     label06:
        $r8 = new com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker;

     label07:
        specialinvoke $r8.<com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker: void <init>(java.lang.String,com.google.firebase.crashlytics.internal.persistence.FileStore)>("crash_marker", $r7);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker> = $r8;

     label08:
        $r8 = new com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker;

     label09:
        specialinvoke $r8.<com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker: void <init>(java.lang.String,com.google.firebase.crashlytics.internal.persistence.FileStore)>("initialization_marker", $r7);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker initializationMarker> = $r8;

     label10:
        $r4 = new com.google.firebase.crashlytics.internal.network.HttpRequestFactory;

     label11:
        specialinvoke $r4.<com.google.firebase.crashlytics.internal.network.HttpRequestFactory: void <init>()>();

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        $r5 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.IdManager idManager>;

        $r16 = staticinvoke <com.google.firebase.crashlytics.internal.common.AppData: com.google.firebase.crashlytics.internal.common.AppData create(android.content.Context,com.google.firebase.crashlytics.internal.common.IdManager,java.lang.String,java.lang.String)>($r2, $r5, $r12, $r9);

     label12:
        $r17 = new com.google.firebase.crashlytics.internal.unity.ResourceUnityVersionProvider;

     label13:
        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        specialinvoke $r17.<com.google.firebase.crashlytics.internal.unity.ResourceUnityVersionProvider: void <init>(android.content.Context)>($r2);

        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

     label14:
        $r11 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installer package name is: ");

        $r9 = $r16.<com.google.firebase.crashlytics.internal.common.AppData: java.lang.String installerPackageName>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r9);

     label16:
        $r18 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController;

     label17:
        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r5 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.IdManager idManager>;

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter>;

        $r8 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker>;

        $r19 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        $r20 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger analyticsEventLogger>;

        specialinvoke $r18.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void <init>(android.content.Context,com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker,com.google.firebase.crashlytics.internal.network.HttpRequestFactory,com.google.firebase.crashlytics.internal.common.IdManager,com.google.firebase.crashlytics.internal.common.DataCollectionArbiter,com.google.firebase.crashlytics.internal.persistence.FileStore,com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker,com.google.firebase.crashlytics.internal.common.AppData,com.google.firebase.crashlytics.internal.report.ReportManager,com.google.firebase.crashlytics.internal.report.ReportUploader$Provider,com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent,com.google.firebase.crashlytics.internal.unity.UnityVersionProvider,com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>($r2, $r3, $r4, $r5, $r6, $r7, $r8, $r16, null, null, $r19, $r17, $r20, $r1);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller> = $r18;

        $z0 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: boolean didPreviousInitializationFail()>();

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void checkForPreviousCrash()>();

        $r18 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        virtualinvoke $r18.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void enableExceptionHandling(java.lang.Thread$UncaughtExceptionHandler,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>($r21, $r1);

     label18:
        if $z0 == 0 goto label23;

     label19:
        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: android.content.Context context>;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean canTryConnection(android.content.Context)>($r2);

     label20:
        if $z0 == 0 goto label23;

     label21:
        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Crashlytics did not finish previous background initialization. Initializing synchronously.");

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void finishInitSynchronously(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>($r1);

     label22:
        return 0;

     label23:
        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Exception handling initialization successful");

        return 1;

     label24:
        $r22 := @caughtexception;

        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Crashlytics was not started due to an exception during initialization", $r22);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller> = null;

        return 0;

     label25:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app\'s build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.");

        throw $r23;

        catch java.lang.Exception from label01 to label02 with label24;
        catch java.lang.Exception from label03 to label04 with label24;
        catch java.lang.Exception from label05 to label06 with label24;
        catch java.lang.Exception from label07 to label08 with label24;
        catch java.lang.Exception from label09 to label10 with label24;
        catch java.lang.Exception from label11 to label12 with label24;
        catch java.lang.Exception from label13 to label14 with label24;
        catch java.lang.Exception from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label18 with label24;
        catch java.lang.Exception from label19 to label20 with label24;
        catch java.lang.Exception from label21 to label22 with label24;
    }

    public com.google.android.gms.tasks.Task sendUnsentReports()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.android.gms.tasks.Task $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        $r1 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task sendUnsentReports()>();

        return $r1;
    }

    public void setCrashlyticsCollectionEnabled(java.lang.Boolean)
    {
        com.google.firebase.crashlytics.internal.common.DataCollectionArbiter $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        java.lang.Boolean $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: java.lang.Boolean;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter>;

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>($r1);

        return;
    }

    public void setCustomKey(java.lang.String, java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r3;
        java.lang.String $r1, $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void setCustomKey(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setUserId(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsCore r0;
        java.lang.String $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsCore: com.google.firebase.crashlytics.internal.common.CrashlyticsController controller>;

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void setUserId(java.lang.String)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String MISSING_BUILD_ID_MSG> = "The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app\'s build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String INITIALIZATION_MARKER_FILE_NAME> = "initialization_marker";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: int DEFAULT_MAIN_HANDLER_TIMEOUT_SEC> = 4;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String CRASH_MARKER_FILE_NAME> = "crash_marker";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: boolean CRASHLYTICS_REQUIRE_BUILD_ID_DEFAULT> = 1;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String CRASHLYTICS_REQUIRE_BUILD_ID> = "com.crashlytics.RequireBuildId";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: float CLS_DEFAULT_PROCESS_DELAY> = 1.0F;

        return;
    }
}
