public final class com.google.android.material.circularreveal.CircularRevealCompat extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.material.circularreveal.CircularRevealCompat r0;

        r0 := @this: com.google.android.material.circularreveal.CircularRevealCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget, float, float, float)
    {
        java.lang.IllegalStateException $r10;
        com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo $r0;
        android.animation.Animator $r7;
        android.util.Property $r2;
        android.animation.TypeEvaluator $r3;
        int $i0, $i1;
        android.animation.Animator[] $r9;
        android.view.View $r6;
        android.animation.AnimatorSet $r8;
        android.animation.ObjectAnimator $r5;
        com.google.android.material.circularreveal.CircularRevealWidget $r1;
        float $f0, $f1, $f2, $f3;
        com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo[] $r4;

        $r1 := @parameter0: com.google.android.material.circularreveal.CircularRevealWidget;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f0 := @parameter3: float;

        $r2 = <com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: android.util.Property CIRCULAR_REVEAL>;

        $r3 = <com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: android.animation.TypeEvaluator CIRCULAR_REVEAL>;

        $r4 = newarray (com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)[1];

        $r0 = new com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo;

        specialinvoke $r0.<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void <init>(float,float,float)>($f1, $f2, $f0);

        $r4[0] = $r0;

        $r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r1, $r2, $r3, $r4);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r0 = interfaceinvoke $r1.<com.google.android.material.circularreveal.CircularRevealWidget: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()>();

        if $r0 == null goto label1;

        $f3 = $r0.<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: float radius>;

        $r6 = (android.view.View) $r1;

        $i0 = (int) $f1;

        $i1 = (int) $f2;

        $r7 = staticinvoke <android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>($r6, $i0, $i1, $f3, $f0);

        $r8 = new android.animation.AnimatorSet;

        specialinvoke $r8.<android.animation.AnimatorSet: void <init>()>();

        $r9 = newarray (android.animation.Animator)[2];

        $r9[0] = $r5;

        $r9[1] = $r7;

        virtualinvoke $r8.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r9);

        return $r8;

     label1:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Caller must set a non-null RevealInfo before calling this.");

        throw $r10;

     label2:
        return $r5;
    }

    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget, float, float, float, float)
    {
        com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo $r4;
        android.animation.Animator $r7;
        android.util.Property $r1;
        android.animation.TypeEvaluator $r2;
        int $i0, $i1;
        android.animation.Animator[] $r9;
        android.view.View $r6;
        android.animation.AnimatorSet $r8;
        android.animation.ObjectAnimator $r5;
        com.google.android.material.circularreveal.CircularRevealWidget $r0;
        float $f0, $f1, $f2, $f3;
        com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo[] $r3;

        $r0 := @parameter0: com.google.android.material.circularreveal.CircularRevealWidget;

        $f2 := @parameter1: float;

        $f3 := @parameter2: float;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r1 = <com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: android.util.Property CIRCULAR_REVEAL>;

        $r2 = <com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: android.animation.TypeEvaluator CIRCULAR_REVEAL>;

        $r3 = newarray (com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)[2];

        $r4 = new com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo;

        specialinvoke $r4.<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void <init>(float,float,float)>($f2, $f3, $f0);

        $r3[0] = $r4;

        $r4 = new com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo;

        specialinvoke $r4.<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void <init>(float,float,float)>($f2, $f3, $f1);

        $r3[1] = $r4;

        $r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r0, $r1, $r2, $r3);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r6 = (android.view.View) $r0;

        $i0 = (int) $f2;

        $i1 = (int) $f3;

        $r7 = staticinvoke <android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>($r6, $i0, $i1, $f0, $f1);

        $r8 = new android.animation.AnimatorSet;

        specialinvoke $r8.<android.animation.AnimatorSet: void <init>()>();

        $r9 = newarray (android.animation.Animator)[2];

        $r9[0] = $r5;

        $r9[1] = $r7;

        virtualinvoke $r8.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r9);

        return $r8;

     label1:
        return $r5;
    }

    public static android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
    {
        com.google.android.material.circularreveal.CircularRevealWidget $r0;
        com.google.android.material.circularreveal.CircularRevealCompat$1 $r1;

        $r0 := @parameter0: com.google.android.material.circularreveal.CircularRevealWidget;

        $r1 = new com.google.android.material.circularreveal.CircularRevealCompat$1;

        specialinvoke $r1.<com.google.android.material.circularreveal.CircularRevealCompat$1: void <init>(com.google.android.material.circularreveal.CircularRevealWidget)>($r0);

        return $r1;
    }
}
