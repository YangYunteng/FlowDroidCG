public class project.android.imageprocessing.filter.colour.SaturationFilter extends project.android.imageprocessing.filter.BasicFilter
{
    public static final java.lang.String UNIFORM_SATURATION;
    public float saturation;
    public int saturationHandle;

    public void <init>(float)
    {
        project.android.imageprocessing.filter.colour.SaturationFilter r0;
        byte $b0;
        int $i1;
        float $f0;

        r0 := @this: project.android.imageprocessing.filter.colour.SaturationFilter;

        $f0 := @parameter0: float;

        specialinvoke r0.<project.android.imageprocessing.filter.BasicFilter: void <init>()>();

        $b0 = $f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $f0 = 0.0F;

     label1:
        r0.<project.android.imageprocessing.filter.colour.SaturationFilter: float saturation> = $f0;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.colour.SaturationFilter r0;

        r0 := @this: project.android.imageprocessing.filter.colour.SaturationFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nvarying vec2 v_TexCoord;\nuniform float u_Saturation;\nconst vec3 luminanceWeighting = vec3(0.2125, 0.7154, 0.0721);\nvoid main(){\n   vec4 color = texture2D(u_Texture0,v_TexCoord);\n   float luminance = dot(color.rgb, luminanceWeighting);\n   vec3 greyScaleColor = vec3(luminance);\n   gl_FragColor = vec4(mix(greyScaleColor, color.rgb, u_Saturation), color.a);\n}\n";
    }

    public void initShaderHandles()
    {
        int $i0;
        project.android.imageprocessing.filter.colour.SaturationFilter r0;

        r0 := @this: project.android.imageprocessing.filter.colour.SaturationFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void initShaderHandles()>();

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Saturation");

        r0.<project.android.imageprocessing.filter.colour.SaturationFilter: int saturationHandle> = $i0;

        return;
    }

    public void passShaderValues()
    {
        int $i0;
        float $f0;
        project.android.imageprocessing.filter.colour.SaturationFilter r0;

        r0 := @this: project.android.imageprocessing.filter.colour.SaturationFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void passShaderValues()>();

        $i0 = r0.<project.android.imageprocessing.filter.colour.SaturationFilter: int saturationHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.colour.SaturationFilter: float saturation>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        return;
    }

    public static void <clinit>()
    {
        <project.android.imageprocessing.filter.colour.SaturationFilter: java.lang.String UNIFORM_SATURATION> = "u_Saturation";

        return;
    }
}
