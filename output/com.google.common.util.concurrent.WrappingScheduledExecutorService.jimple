public abstract class com.google.common.util.concurrent.WrappingScheduledExecutorService extends com.google.common.util.concurrent.WrappingExecutorService implements java.util.concurrent.ScheduledExecutorService
{
    public final java.util.concurrent.ScheduledExecutorService delegate;

    public void <init>(java.util.concurrent.ScheduledExecutorService)
    {
        java.util.concurrent.ScheduledExecutorService $r1;
        com.google.common.util.concurrent.WrappingScheduledExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.WrappingScheduledExecutorService;

        $r1 := @parameter0: java.util.concurrent.ScheduledExecutorService;

        specialinvoke r0.<com.google.common.util.concurrent.WrappingExecutorService: void <init>(java.util.concurrent.ExecutorService)>($r1);

        r0.<com.google.common.util.concurrent.WrappingScheduledExecutorService: java.util.concurrent.ScheduledExecutorService delegate> = $r1;

        return;
    }

    public final java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledFuture $r4;
        java.util.concurrent.ScheduledExecutorService $r2;
        long $l0;
        com.google.common.util.concurrent.WrappingScheduledExecutorService r0;
        java.lang.Runnable $r3;

        r0 := @this: com.google.common.util.concurrent.WrappingScheduledExecutorService;

        $r3 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.WrappingScheduledExecutorService: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.WrappingExecutorService: java.lang.Runnable wrapTask(java.lang.Runnable)>($r3);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r3, $l0, $r1);

        return $r4;
    }

    public final java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledFuture $r4;
        java.util.concurrent.ScheduledExecutorService $r2;
        long $l0;
        java.util.concurrent.Callable $r3;
        com.google.common.util.concurrent.WrappingScheduledExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.WrappingScheduledExecutorService;

        $r3 := @parameter0: java.util.concurrent.Callable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.WrappingScheduledExecutorService: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.WrappingExecutorService: java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable)>($r3);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r3, $l0, $r1);

        return $r4;
    }

    public final java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledFuture $r4;
        java.util.concurrent.ScheduledExecutorService $r2;
        long $l0, $l1;
        com.google.common.util.concurrent.WrappingScheduledExecutorService r0;
        java.lang.Runnable $r3;

        r0 := @this: com.google.common.util.concurrent.WrappingScheduledExecutorService;

        $r3 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r1 := @parameter3: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.WrappingScheduledExecutorService: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.WrappingExecutorService: java.lang.Runnable wrapTask(java.lang.Runnable)>($r3);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r3, $l0, $l1, $r1);

        return $r4;
    }

    public final java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledFuture $r4;
        java.util.concurrent.ScheduledExecutorService $r2;
        long $l0, $l1;
        com.google.common.util.concurrent.WrappingScheduledExecutorService r0;
        java.lang.Runnable $r3;

        r0 := @this: com.google.common.util.concurrent.WrappingScheduledExecutorService;

        $r3 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r1 := @parameter3: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.WrappingScheduledExecutorService: java.util.concurrent.ScheduledExecutorService delegate>;

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.WrappingExecutorService: java.lang.Runnable wrapTask(java.lang.Runnable)>($r3);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r3, $l0, $l1, $r1);

        return $r4;
    }
}
