public final class j.a.b.z extends java.lang.Object
{
    public static final java.lang.String a;
    public static final java.lang.String b;

    static void <clinit>()
    {
        java.lang.Throwable $r4, $r6;
        i.g$a $r0;
        java.lang.Class $r1;
        java.lang.Object $r3, $r5;
        java.lang.String $r2;

     label01:
        $r0 = <i.g: i.g$a a>;

     label02:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("i.c.b.a.a");

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r1, "Class.forName(baseContinuationImplClass)");

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

     label03:
        $r3 = $r2;

     label04:
        staticinvoke <i.g: java.lang.Object a(java.lang.Object)>($r2);

     label05:
        goto label07;

     label06:
        $r4 := @caughtexception;

        $r0 = <i.g: i.g$a a>;

        $r5 = staticinvoke <i.h: java.lang.Object a(java.lang.Throwable)>($r4);

        $r3 = $r5;

        staticinvoke <i.g: java.lang.Object a(java.lang.Object)>($r5);

     label07:
        $r4 = staticinvoke <i.g: java.lang.Throwable b(java.lang.Object)>($r3);

        if $r4 != null goto label08;

        goto label09;

     label08:
        $r3 = "kotlin.coroutines.jvm.internal.BaseContinuationImpl";

     label09:
        $r2 = (java.lang.String) $r3;

        <j.a.b.z: java.lang.String a> = $r2;

     label10:
        $r0 = <i.g: i.g$a a>;

     label11:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("j.a.b.z");

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r1, "Class.forName(stackTraceRecoveryClass)");

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

     label12:
        $r3 = $r2;

     label13:
        staticinvoke <i.g: java.lang.Object a(java.lang.Object)>($r2);

     label14:
        goto label16;

     label15:
        $r6 := @caughtexception;

        $r0 = <i.g: i.g$a a>;

        $r5 = staticinvoke <i.h: java.lang.Object a(java.lang.Throwable)>($r6);

        $r3 = $r5;

        staticinvoke <i.g: java.lang.Object a(java.lang.Object)>($r5);

     label16:
        $r4 = staticinvoke <i.g: java.lang.Throwable b(java.lang.Object)>($r3);

        if $r4 != null goto label17;

        goto label18;

     label17:
        $r3 = "kotlinx.coroutines.internal.StackTraceRecoveryKt";

     label18:
        $r2 = (java.lang.String) $r3;

        <j.a.b.z: java.lang.String b> = $r2;

        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public static final int a(java.lang.StackTraceElement[], java.lang.String)
    {
        java.lang.StackTraceElement[] $r0;
        int $i0, $i1;
        java.lang.StackTraceElement $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.StackTraceElement[];

        $r1 := @parameter1: java.lang.String;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r3 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = staticinvoke <i.f.b.i: boolean a(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = -1;

        return $i0;
    }

    public static final i.f a(java.lang.Throwable)
    {
        java.lang.Throwable $r0, $r1;
        i.f $r6;
        java.lang.StackTraceElement[] $r4;
        int $i0, $i1;
        java.lang.Class $r2, $r3;
        java.lang.StackTraceElement $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 == null goto label6;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <i.f.b.i: boolean a(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label6;

        $r4 = virtualinvoke $r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r4, "currentTrace");

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r5 = $r4[$i1];

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r5, "it");

        $z0 = staticinvoke <j.a.b.z: boolean a(java.lang.StackTraceElement)>($r5);

        if $z0 == 0 goto label2;

        $z0 = 1;

        goto label4;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = 0;

     label4:
        if $z0 == 0 goto label5;

        $r6 = staticinvoke <i.j: i.f a(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r6;

     label5:
        $r4 = newarray (java.lang.StackTraceElement)[0];

        $r6 = staticinvoke <i.j: i.f a(java.lang.Object,java.lang.Object)>($r0, $r4);

        return $r6;

     label6:
        $r4 = newarray (java.lang.StackTraceElement)[0];

        $r6 = staticinvoke <i.j: i.f a(java.lang.Object,java.lang.Object)>($r0, $r4);

        return $r6;
    }

    public static final java.lang.StackTraceElement a(java.lang.String)
    {
        int $i0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.StackTraceElement $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "message");

        $r3 = new java.lang.StackTraceElement;

        $r2 = new java.lang.StringBuilder;

        $r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0008\u0008\u0008(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = -1;

        specialinvoke $r3.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r0, "\u0008", "\u0008", $i0);

        return $r3;
    }

    public static final java.lang.Throwable a(java.lang.Throwable, i.c.b.a.d)
    {
        java.lang.Throwable $r0, $r4, $r6;
        i.f $r2;
        i.c.b.a.d $r1;
        java.lang.StackTraceElement[] $r5;
        java.lang.Object $r3;
        java.util.ArrayDeque $r7;
        boolean $z0;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: i.c.b.a.d;

        $r2 = staticinvoke <j.a.b.z: i.f a(java.lang.Throwable)>($r0);

        $r3 = virtualinvoke $r2.<i.f: java.lang.Object a()>();

        $r4 = (java.lang.Throwable) $r3;

        $r3 = virtualinvoke $r2.<i.f: java.lang.Object b()>();

        $r5 = (java.lang.StackTraceElement[]) $r3;

        $r6 = staticinvoke <j.a.b.l: java.lang.Throwable a(java.lang.Throwable)>($r4);

        if $r6 == null goto label3;

        $r7 = staticinvoke <j.a.b.z: java.util.ArrayDeque a(i.c.b.a.d)>($r1);

        $z0 = virtualinvoke $r7.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        if $r4 == $r0 goto label2;

        staticinvoke <j.a.b.z: void a(java.lang.StackTraceElement[],java.util.ArrayDeque)>($r5, $r7);

     label2:
        staticinvoke <j.a.b.z: java.lang.Throwable a(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)>($r4, $r6, $r7);

        return $r6;

     label3:
        return $r0;
    }

    public static final java.lang.Throwable a(java.lang.Throwable, i.c.e)
    {
        java.lang.Throwable $r0;
        i.c.b.a.d $r2;
        i.c.e $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: i.c.e;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "exception");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "continuation");

        $z0 = staticinvoke <j.a.z: boolean d()>();

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof i.c.b.a.d;

        if $z0 != 0 goto label1;

        return $r0;

     label1:
        $r2 = (i.c.b.a.d) $r1;

        $r0 = staticinvoke <j.a.b.z: java.lang.Throwable a(java.lang.Throwable,i.c.b.a.d)>($r0, $r2);

     label2:
        return $r0;
    }

    public static final java.lang.Throwable a(java.lang.Throwable, java.lang.Throwable, java.util.ArrayDeque)
    {
        java.lang.Throwable $r1, $r2;
        java.lang.Object[] $r6;
        java.util.Iterator $r8;
        kotlin.TypeCastException $r10;
        java.lang.StackTraceElement[] $r4, $r7;
        int $i0, $i1, $i2;
        java.lang.StackTraceElement $r0;
        java.lang.Object $r9;
        java.lang.String $r5;
        java.util.ArrayDeque $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.util.ArrayDeque;

        $r0 = staticinvoke <j.a.b.z: java.lang.StackTraceElement a(java.lang.String)>("Coroutine boundary");

        virtualinvoke $r3.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r4, "causeTrace");

        $r5 = <j.a.b.z: java.lang.String a>;

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r5, "baseContinuationImplClassName");

        $i0 = staticinvoke <j.a.b.z: int a(java.lang.StackTraceElement[],java.lang.String)>($r4, $r5);

        $i1 = 0;

        $i2 = -1;

        if $i0 != $i2 goto label2;

        $r4 = newarray (java.lang.StackTraceElement)[0];

        $r6 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        if $r6 == null goto label1;

        $r4 = (java.lang.StackTraceElement[]) $r6;

        virtualinvoke $r2.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r4);

        return $r2;

     label1:
        $r10 = new kotlin.TypeCastException;

        specialinvoke $r10.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r10;

     label2:
        $i2 = virtualinvoke $r3.<java.util.ArrayDeque: int size()>();

        $i2 = $i2 + $i0;

        $r7 = newarray (java.lang.StackTraceElement)[$i2];

        $i2 = 0;

     label3:
        if $i2 >= $i0 goto label4;

        $r0 = $r4[$i2];

        $r7[$i2] = $r0;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r8 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (java.lang.StackTraceElement) $r9;

        $i2 = $i0 + $i1;

        $r7[$i2] = $r0;

        $i1 = $i1 + 1;

        goto label5;

     label6:
        virtualinvoke $r2.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r7);

        return $r2;
    }

    public static final java.util.ArrayDeque a(i.c.b.a.d)
    {
        i.c.b.a.d $r1, $r3;
        java.lang.StackTraceElement $r2;
        java.util.ArrayDeque $r0;
        boolean $z0;

        $r1 := @parameter0: i.c.b.a.d;

        $r0 = new java.util.ArrayDeque;

        specialinvoke $r0.<java.util.ArrayDeque: void <init>()>();

        $r2 = interfaceinvoke $r1.<i.c.b.a.d: java.lang.StackTraceElement getStackTraceElement()>();

        if $r2 == null goto label1;

        virtualinvoke $r0.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r2);

     label1:
        $z0 = $r1 instanceof i.c.b.a.d;

        if $z0 != 0 goto label2;

        $r1 = null;

     label2:
        if $r1 == null goto label3;

        $r3 = interfaceinvoke $r1.<i.c.b.a.d: i.c.b.a.d getCallerFrame()>();

        $r1 = $r3;

        if $r3 == null goto label3;

        $r2 = interfaceinvoke $r3.<i.c.b.a.d: java.lang.StackTraceElement getStackTraceElement()>();

        if $r2 == null goto label1;

        virtualinvoke $r0.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r2);

        goto label1;

     label3:
        return $r0;
    }

    public static final void a(java.lang.StackTraceElement[], java.util.ArrayDeque)
    {
        java.lang.StackTraceElement[] $r0;
        int $i0, $i1, $i2;
        java.lang.StackTraceElement $r2, $r4;
        java.lang.Object $r3;
        java.util.ArrayDeque $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.StackTraceElement[];

        $r1 := @parameter1: java.util.ArrayDeque;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $z0 = staticinvoke <j.a.b.z: boolean a(java.lang.StackTraceElement)>($r2);

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i1 = -1;

     label4:
        $i0 = $i1 + 1;

        $i1 = lengthof $r0;

        $i2 = -1;

        $i1 = $i1 + $i2;

        if $i1 < $i0 goto label7;

     label5:
        $r2 = $r0[$i1];

        $r3 = virtualinvoke $r1.<java.util.ArrayDeque: java.lang.Object getLast()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r3, "result.last");

        $r4 = (java.lang.StackTraceElement) $r3;

        $z0 = staticinvoke <j.a.b.z: boolean a(java.lang.StackTraceElement,java.lang.StackTraceElement)>($r2, $r4);

        if $z0 == 0 goto label6;

        virtualinvoke $r1.<java.util.ArrayDeque: java.lang.Object removeLast()>();

     label6:
        $r2 = $r0[$i1];

        virtualinvoke $r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r2);

        if $i1 == $i0 goto label7;

        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label5;

     label7:
        return;
    }

    public static final boolean a(java.lang.StackTraceElement)
    {
        java.lang.StackTraceElement $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.StackTraceElement;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$isArtificial");

        $r1 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r1, "className");

        $z0 = staticinvoke <i.j.p: boolean a(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r1, "\u0008\u0008\u0008", 0, 2, null);

        return $z0;
    }

    public static final boolean a(java.lang.StackTraceElement, java.lang.StackTraceElement)
    {
        int $i0, $i1;
        java.lang.StackTraceElement $r0, $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.StackTraceElement;

        $r1 := @parameter1: java.lang.StackTraceElement;

        $i0 = virtualinvoke $r0.<java.lang.StackTraceElement: int getLineNumber()>();

        $i1 = virtualinvoke $r1.<java.lang.StackTraceElement: int getLineNumber()>();

        if $i0 != $i1 goto label1;

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $z0 = staticinvoke <i.f.b.i: boolean a(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $z0 = staticinvoke <i.f.b.i: boolean a(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = staticinvoke <i.f.b.i: boolean a(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final java.lang.Throwable b(java.lang.Throwable)
    {
        java.lang.Throwable $r0, $r1;
        java.lang.StackTraceElement[] $r4;
        int $i0, $i1;
        java.lang.Class $r2, $r3;
        java.lang.StackTraceElement $r5;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.Throwable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "exception");

        $z0 = staticinvoke <j.a.z: boolean d()>();

        if $z0 != 0 goto label1;

        return $r0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 == null goto label7;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = staticinvoke <i.f.b.i: boolean a(java.lang.Object,java.lang.Object)>($r2, $r3);

        $z0 = 1;

        $z1 = $z1 ^ 1;

        if $z1 == 0 goto label2;

        return $r0;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r4, "exception.stackTrace");

        $i0 = lengthof $r4;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r5 = $r4[$i1];

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r5, "it");

        $z1 = staticinvoke <j.a.b.z: boolean a(java.lang.StackTraceElement)>($r5);

        if $z1 == 0 goto label4;

        goto label6;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $z0 = 0;

     label6:
        if $z0 == 0 goto label7;

        return $r1;

     label7:
        return $r0;
    }
}
