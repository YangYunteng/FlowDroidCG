public final class com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock extends java.lang.Object implements java.util.concurrent.locks.ReadWriteLock
{
    public final java.util.concurrent.locks.ReadWriteLock delegate;

    public void <init>()
    {
        com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock r0;
        java.util.concurrent.locks.ReentrantReadWriteLock $r1;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock: java.util.concurrent.locks.ReadWriteLock delegate> = $r1;

        return;
    }

    public java.util.concurrent.locks.Lock readLock()
    {
        com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock r0;
        java.util.concurrent.locks.Lock $r2;
        com.google.common.util.concurrent.Striped$WeakSafeLock $r1;
        java.util.concurrent.locks.ReadWriteLock $r3;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock;

        $r1 = new com.google.common.util.concurrent.Striped$WeakSafeLock;

        $r3 = r0.<com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock: java.util.concurrent.locks.ReadWriteLock delegate>;

        $r2 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        specialinvoke $r1.<com.google.common.util.concurrent.Striped$WeakSafeLock: void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock)>($r2, r0);

        return $r1;
    }

    public java.util.concurrent.locks.Lock writeLock()
    {
        com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock r0;
        java.util.concurrent.locks.Lock $r2;
        com.google.common.util.concurrent.Striped$WeakSafeLock $r1;
        java.util.concurrent.locks.ReadWriteLock $r3;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock;

        $r1 = new com.google.common.util.concurrent.Striped$WeakSafeLock;

        $r3 = r0.<com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock: java.util.concurrent.locks.ReadWriteLock delegate>;

        $r2 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        specialinvoke $r1.<com.google.common.util.concurrent.Striped$WeakSafeLock: void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock)>($r2, r0);

        return $r1;
    }
}
