public class com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet extends com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection implements java.util.SortedSet
{
    public final com.google.common.collect.AbstractMapBasedMultimap this$0;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap, java.lang.Object, java.util.SortedSet, com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)
    {
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.SortedSet $r3;
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.util.SortedSet;

        $r4 := @parameter3: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: com.google.common.collect.AbstractMapBasedMultimap this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>($r1, $r2, $r3, $r4);

        return;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0;
        java.util.SortedSet $r1;
        java.util.Comparator $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.util.Comparator comparator()>();

        return $r2;
    }

    public java.lang.Object first()
    {
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object first()>();

        return $r2;
    }

    public java.util.SortedSet getSortedSetDelegate()
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0;
        java.util.SortedSet $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection getDelegate()>();

        $r2 = (java.util.SortedSet) $r1;

        return $r2;
    }

    public java.util.SortedSet headSet(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap $r2;
        java.util.SortedSet $r5;
        java.lang.Object $r3, $r4;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0, $r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r6;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r3 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.Object getKey()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>();

        $r5 = interfaceinvoke $r5.<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>($r3);

        $r6 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

        if $r6 != null goto label1;

        $r6 = r0;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

     label2:
        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>($r2, $r4, $r5, $r6);

        return $r1;
    }

    public java.lang.Object last()
    {
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object last()>();

        return $r2;
    }

    public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        java.util.SortedSet $r6;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r7;
        com.google.common.collect.AbstractMapBasedMultimap $r2;
        java.lang.Object $r3, $r4, $r5;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0, $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r3 := @parameter0: java.lang.Object;

        $r4 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r5 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.Object getKey()>();

        $r6 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>();

        $r6 = interfaceinvoke $r6.<java.util.SortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r7 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

        if $r7 != null goto label1;

        $r7 = r0;

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

     label2:
        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>($r2, $r5, $r6, $r7);

        return $r1;
    }

    public java.util.SortedSet tailSet(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap $r2;
        java.util.SortedSet $r5;
        java.lang.Object $r3, $r4;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet r0, $r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r6;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r3 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.Object getKey()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>();

        $r5 = interfaceinvoke $r5.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>($r3);

        $r6 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

        if $r6 != null goto label1;

        $r6 = r0;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

     label2:
        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>($r2, $r4, $r5, $r6);

        return $r1;
    }
}
