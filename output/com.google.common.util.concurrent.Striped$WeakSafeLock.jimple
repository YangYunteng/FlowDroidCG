public final class com.google.common.util.concurrent.Striped$WeakSafeLock extends com.google.common.util.concurrent.ForwardingLock
{
    public final java.util.concurrent.locks.Lock delegate;
    public final com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference;

    public void <init>(java.util.concurrent.locks.Lock, com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock)
    {
        com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock $r2;
        java.util.concurrent.locks.Lock $r1;
        com.google.common.util.concurrent.Striped$WeakSafeLock r0;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeLock;

        $r1 := @parameter0: java.util.concurrent.locks.Lock;

        $r2 := @parameter1: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock;

        specialinvoke r0.<com.google.common.util.concurrent.ForwardingLock: void <init>()>();

        r0.<com.google.common.util.concurrent.Striped$WeakSafeLock: java.util.concurrent.locks.Lock delegate> = $r1;

        r0.<com.google.common.util.concurrent.Striped$WeakSafeLock: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference> = $r2;

        return;
    }

    public java.util.concurrent.locks.Lock delegate()
    {
        java.util.concurrent.locks.Lock r1;
        com.google.common.util.concurrent.Striped$WeakSafeLock r0;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeLock;

        r1 = r0.<com.google.common.util.concurrent.Striped$WeakSafeLock: java.util.concurrent.locks.Lock delegate>;

        return r1;
    }

    public java.util.concurrent.locks.Condition newCondition()
    {
        com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock $r2;
        java.util.concurrent.locks.Condition $r3;
        java.util.concurrent.locks.Lock $r4;
        com.google.common.util.concurrent.Striped$WeakSafeLock r0;
        com.google.common.util.concurrent.Striped$WeakSafeCondition $r1;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeLock;

        $r1 = new com.google.common.util.concurrent.Striped$WeakSafeCondition;

        $r4 = r0.<com.google.common.util.concurrent.Striped$WeakSafeLock: java.util.concurrent.locks.Lock delegate>;

        $r3 = interfaceinvoke $r4.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        $r2 = r0.<com.google.common.util.concurrent.Striped$WeakSafeLock: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference>;

        specialinvoke $r1.<com.google.common.util.concurrent.Striped$WeakSafeCondition: void <init>(java.util.concurrent.locks.Condition,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock)>($r3, $r2);

        return $r1;
    }
}
