public final class i.c.a.b extends i.c.b.a.i
{
    public int a;
    public final i.c.e b;
    public final i.f.a.p c;
    public final java.lang.Object d;

    public void <init>(i.c.e, i.c.e, i.f.a.p, java.lang.Object)
    {
        i.c.a.b r0;
        i.f.a.p $r3;
        java.lang.Object $r4;
        i.c.e $r1, $r2;

        r0 := @this: i.c.a.b;

        $r1 := @parameter0: i.c.e;

        $r2 := @parameter1: i.c.e;

        $r3 := @parameter2: i.f.a.p;

        $r4 := @parameter3: java.lang.Object;

        r0.<i.c.a.b: i.c.e b> = $r1;

        r0.<i.c.a.b: i.f.a.p c> = $r3;

        r0.<i.c.a.b: java.lang.Object d> = $r4;

        specialinvoke r0.<i.c.b.a.i: void <init>(i.c.e)>($r2);

        return;
    }

    public java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r2;
        i.c.a.b r0;
        i.f.a.p $r3;
        int $i0;
        java.lang.Object $r1;
        kotlin.TypeCastException $r4;

        r0 := @this: i.c.a.b;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<i.c.a.b: int a>;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        r0.<i.c.a.b: int a> = 2;

        staticinvoke <i.h: void a(java.lang.Object)>($r1);

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This coroutine had already completed");

        throw $r2;

     label2:
        r0.<i.c.a.b: int a> = 1;

        staticinvoke <i.h: void a(java.lang.Object)>($r1);

        $r3 = r0.<i.c.a.b: i.f.a.p c>;

        if $r3 == null goto label3;

        staticinvoke <i.f.b.q: java.lang.Object a(java.lang.Object,int)>($r3, 2);

        $r1 = r0.<i.c.a.b: java.lang.Object d>;

        $r1 = interfaceinvoke $r3.<i.f.a.p: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, r0);

        return $r1;

     label3:
        $r4 = new kotlin.TypeCastException;

        specialinvoke $r4.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type (R, kotlin.coroutines.Continuation<T>) -> kotlin.Any?");

        throw $r4;
    }
}
