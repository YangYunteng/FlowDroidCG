public final class l.v extends l.h
{
    public final transient byte[][] f;
    public final transient int[] g;

    public void <init>(l.e, int)
    {
        byte[] $r6;
        l.e $r1;
        long $l1, $l2;
        java.lang.AssertionError $r3;
        byte[][] $r4;
        l.t $r2;
        l.v r0;
        int[] $r5;
        int $i0, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: l.v;

        $r1 := @parameter0: l.e;

        $i0 := @parameter1: int;

        specialinvoke r0.<l.h: void <init>(byte[])>(null);

        $l1 = $r1.<l.e: long c>;

        $l2 = (long) $i0;

        staticinvoke <l.A: void a(long,long,long)>($l1, 0L, $l2);

        $i3 = 0;

        $r2 = $r1.<l.e: l.t b>;

        $i4 = 0;

        $i5 = 0;

     label1:
        if $i4 >= $i0 goto label3;

        $i6 = $r2.<l.t: int c>;

        $i7 = $r2.<l.t: int b>;

        if $i6 == $i7 goto label2;

        $i6 = $i6 - $i7;

        $i4 = $i4 + $i6;

        $i5 = $i5 + 1;

        $r2 = $r2.<l.t: l.t f>;

        goto label1;

     label2:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("s.limit == s.pos");

        throw $r3;

     label3:
        $r4 = newarray (byte[])[$i5];

        r0.<l.v: byte[][] f> = $r4;

        $i4 = $i5 * 2;

        $r5 = newarray (int)[$i4];

        r0.<l.v: int[] g> = $r5;

        $r2 = $r1.<l.e: l.t b>;

        $i4 = 0;

     label4:
        if $i3 >= $i0 goto label6;

        $r4 = r0.<l.v: byte[][] f>;

        $r6 = $r2.<l.t: byte[] a>;

        $r4[$i4] = $r6;

        $i5 = $r2.<l.t: int c>;

        $i6 = $r2.<l.t: int b>;

        $i5 = $i5 - $i6;

        $i3 = $i3 + $i5;

        if $i3 <= $i0 goto label5;

        $i3 = $i0;

     label5:
        $r5 = r0.<l.v: int[] g>;

        $r5[$i4] = $i3;

        $r4 = r0.<l.v: byte[][] f>;

        $i5 = lengthof $r4;

        $i5 = $i5 + $i4;

        $i6 = $r2.<l.t: int b>;

        $r5[$i5] = $i6;

        $r2.<l.t: boolean d> = 1;

        $i4 = $i4 + 1;

        $r2 = $r2.<l.t: l.t f>;

        goto label4;

     label6:
        return;
    }

    public byte a(int)
    {
        byte[] $r3;
        long $l2, $l3;
        byte[][] $r2;
        byte $b6;
        l.v r0;
        int[] $r1;
        int $i0, $i1, $i4, $i5;

        r0 := @this: l.v;

        $i1 := @parameter0: int;

        $r1 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i0 = lengthof $r2;

        $i4 = -1;

        $i0 = $i0 + $i4;

        $i0 = $r1[$i0];

        $l2 = (long) $i0;

        $l3 = (long) $i1;

        staticinvoke <l.A: void a(long,long,long)>($l2, $l3, 1L);

        $i0 = virtualinvoke r0.<l.v: int b(int)>($i1);

        if $i0 != 0 goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $r1 = r0.<l.v: int[] g>;

        $i4 = -1;

        $i4 = $i0 + $i4;

        $i4 = $r1[$i4];

     label2:
        $r1 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i5 = lengthof $r2;

        $i5 = $i5 + $i0;

        $i5 = $r1[$i5];

        $r3 = $r2[$i0];

        $i1 = $i1 - $i4;

        $i1 = $i1 + $i5;

        $b6 = $r3[$i1];

        return $b6;
    }

    public java.lang.String a()
    {
        java.lang.String $r2;
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r2 = virtualinvoke $r1.<l.h: java.lang.String a()>();

        return $r2;
    }

    public l.h a(int, int)
    {
        l.v r0;
        l.h $r1;
        int $i0, $i1;

        r0 := @this: l.v;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r1 = virtualinvoke $r1.<l.h: l.h a(int,int)>($i1, $i0);

        return $r1;
    }

    public void a(l.e)
    {
        byte[] $r2;
        l.e $r1;
        long $l6, $l7;
        byte[][] $r3;
        l.t $r5, $r6;
        l.v r0;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: l.v;

        $r1 := @parameter0: l.e;

        $r3 = r0.<l.v: byte[][] f>;

        $i2 = lengthof $r3;

        $i3 = 0;

        $i1 = 0;

     label1:
        if $i3 >= $i2 goto label4;

        $r4 = r0.<l.v: int[] g>;

        $i0 = $i2 + $i3;

        $i0 = $r4[$i0];

        $i4 = $r4[$i3];

        $r5 = new l.t;

        $r3 = r0.<l.v: byte[][] f>;

        $r2 = $r3[$i3];

        $i5 = $i0 + $i4;

        $i1 = $i5 - $i1;

        specialinvoke $r5.<l.t: void <init>(byte[],int,int,boolean,boolean)>($r2, $i0, $i1, 1, 0);

        $r6 = $r1.<l.e: l.t b>;

        if $r6 != null goto label2;

        $r5.<l.t: l.t g> = $r5;

        $r5.<l.t: l.t f> = $r5;

        $r1.<l.e: l.t b> = $r5;

        goto label3;

     label2:
        $r6 = $r6.<l.t: l.t g>;

        virtualinvoke $r6.<l.t: l.t a(l.t)>($r5);

     label3:
        $i3 = $i3 + 1;

        $i1 = $i4;

        goto label1;

     label4:
        $l6 = $r1.<l.e: long c>;

        $l7 = (long) $i1;

        $l6 = $l6 + $l7;

        $r1.<l.e: long c> = $l6;

        return;
    }

    public boolean a(int, l.h, int, int)
    {
        byte[] $r4;
        l.h $r1;
        byte[][] $r2;
        l.v r0;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: l.v;

        $i0 := @parameter0: int;

        $r1 := @parameter1: l.h;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i0 < 0 goto label7;

        $i3 = virtualinvoke r0.<l.v: int e()>();

        $i3 = $i3 - $i2;

        if $i0 <= $i3 goto label1;

        return 0;

     label1:
        $i3 = virtualinvoke r0.<l.v: int b(int)>($i0);

     label2:
        if $i2 <= 0 goto label6;

        if $i3 != 0 goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r3 = r0.<l.v: int[] g>;

        $i4 = -1;

        $i4 = $i3 + $i4;

        $i4 = $r3[$i4];

     label4:
        $r3 = r0.<l.v: int[] g>;

        $i5 = $r3[$i3];

        $i5 = $i5 - $i4;

        $i5 = $i5 + $i4;

        $i5 = $i5 - $i0;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i5);

        $r3 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i6 = lengthof $r2;

        $i6 = $i6 + $i3;

        $i6 = $r3[$i6];

        $i4 = $i0 - $i4;

        $i4 = $i4 + $i6;

        $r4 = $r2[$i3];

        $z0 = virtualinvoke $r1.<l.h: boolean a(int,byte[],int,int)>($i1, $r4, $i4, $i5);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $i0 = $i0 + $i5;

        $i1 = $i1 + $i5;

        $i2 = $i2 - $i5;

        $i3 = $i3 + 1;

        goto label2;

     label6:
        return 1;

     label7:
        return 0;
    }

    public boolean a(int, byte[], int, int)
    {
        byte[] $r1, $r4;
        byte[][] $r2;
        l.v r0;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: l.v;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i0 < 0 goto label7;

        $i3 = virtualinvoke r0.<l.v: int e()>();

        $i3 = $i3 - $i2;

        if $i0 > $i3 goto label7;

        if $i1 < 0 goto label7;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i2;

        if $i1 <= $i3 goto label1;

        return 0;

     label1:
        $i3 = virtualinvoke r0.<l.v: int b(int)>($i0);

     label2:
        if $i2 <= 0 goto label6;

        if $i3 != 0 goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r3 = r0.<l.v: int[] g>;

        $i4 = -1;

        $i4 = $i3 + $i4;

        $i4 = $r3[$i4];

     label4:
        $r3 = r0.<l.v: int[] g>;

        $i5 = $r3[$i3];

        $i5 = $i5 - $i4;

        $i5 = $i5 + $i4;

        $i5 = $i5 - $i0;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i5);

        $r3 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i6 = lengthof $r2;

        $i6 = $i6 + $i3;

        $i6 = $r3[$i6];

        $i4 = $i0 - $i4;

        $i4 = $i4 + $i6;

        $r4 = $r2[$i3];

        $z0 = staticinvoke <l.A: boolean a(byte[],int,byte[],int,int)>($r4, $i4, $r1, $i1, $i5);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $i0 = $i0 + $i5;

        $i1 = $i1 + $i5;

        $i2 = $i2 - $i5;

        $i3 = $i3 + 1;

        goto label2;

     label6:
        return 1;

     label7:
        return 0;
    }

    public final int b(int)
    {
        byte[][] $r2;
        l.v r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: l.v;

        $i0 := @parameter0: int;

        $r1 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i1 = lengthof $r2;

        $i0 = $i0 + 1;

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(int[],int,int,int)>($r1, 0, $i1, $i0);

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        $i1 = -1;

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public java.lang.String b()
    {
        java.lang.String $r2;
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r2 = virtualinvoke $r1.<l.h: java.lang.String b()>();

        return $r2;
    }

    public l.h c()
    {
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r1 = virtualinvoke $r1.<l.h: l.h c()>();

        return $r1;
    }

    public l.h d()
    {
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r1 = virtualinvoke $r1.<l.h: l.h d()>();

        return $r1;
    }

    public int e()
    {
        byte[][] $r2;
        l.v r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: l.v;

        $r1 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i0 = lengthof $r2;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = $r1[$i0];

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        l.v r0;
        l.h $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: l.v;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof l.h;

        if $z0 == 0 goto label2;

        $r2 = (l.h) $r1;

        $i0 = virtualinvoke $r2.<l.h: int e()>();

        $i1 = virtualinvoke r0.<l.v: int e()>();

        if $i0 != $i1 goto label2;

        $i0 = virtualinvoke r0.<l.v: int e()>();

        $z0 = virtualinvoke r0.<l.v: boolean a(int,l.h,int,int)>(0, $r2, 0, $i0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public l.h f()
    {
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r1 = virtualinvoke $r1.<l.h: l.h f()>();

        return $r1;
    }

    public byte[] g()
    {
        byte[] $r3, $r4;
        byte[][] $r2;
        l.v r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: l.v;

        $r1 = r0.<l.v: int[] g>;

        $r2 = r0.<l.v: byte[][] f>;

        $i1 = lengthof $r2;

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i1 = $r1[$i1];

        $r3 = newarray (byte)[$i1];

        $i1 = lengthof $r2;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = r0.<l.v: int[] g>;

        $i0 = $i1 + $i2;

        $i4 = $r1[$i0];

        $i5 = $r1[$i2];

        $r2 = r0.<l.v: byte[][] f>;

        $r4 = $r2[$i2];

        $i0 = $i5 - $i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, $r3, $i3, $i0);

        $i2 = $i2 + 1;

        $i3 = $i5;

        goto label1;

     label2:
        return $r3;
    }

    public java.lang.String h()
    {
        java.lang.String $r2;
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r2 = virtualinvoke $r1.<l.h: java.lang.String h()>();

        return $r2;
    }

    public int hashCode()
    {
        byte[] $r2;
        byte[][] $r1;
        byte $b0;
        l.v r0;
        int[] $r3;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: l.v;

        $i1 = r0.<l.h: int d>;

        if $i1 == 0 goto label1;

        return $i1;

     label1:
        $r1 = r0.<l.v: byte[][] f>;

        $i1 = lengthof $r1;

        $i2 = 0;

        $i3 = 1;

        $i4 = 0;

     label2:
        if $i2 >= $i1 goto label5;

        $r1 = r0.<l.v: byte[][] f>;

        $r2 = $r1[$i2];

        $r3 = r0.<l.v: int[] g>;

        $i5 = $i1 + $i2;

        $i5 = $r3[$i5];

        $i6 = $r3[$i2];

        $i4 = $i6 - $i4;

        $i4 = $i4 + $i5;

     label3:
        if $i5 >= $i4 goto label4;

        $i3 = $i3 * 31;

        $b0 = $r2[$i5];

        $i7 = (int) $b0;

        $i3 = $i3 + $i7;

        $i5 = $i5 + 1;

        goto label3;

     label4:
        $i2 = $i2 + 1;

        $i4 = $i6;

        goto label2;

     label5:
        r0.<l.h: int d> = $i3;

        return $i3;
    }

    public final l.h i()
    {
        byte[] $r2;
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = new l.h;

        $r2 = virtualinvoke r0.<l.v: byte[] g()>();

        specialinvoke $r1.<l.h: void <init>(byte[])>($r2);

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        l.v r0;
        l.h $r1;

        r0 := @this: l.v;

        $r1 = virtualinvoke r0.<l.v: l.h i()>();

        $r2 = virtualinvoke $r1.<l.h: java.lang.String toString()>();

        return $r2;
    }
}
