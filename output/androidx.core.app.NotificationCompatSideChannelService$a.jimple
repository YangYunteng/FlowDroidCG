public class androidx.core.app.NotificationCompatSideChannelService$a extends android.support.v4.app.INotificationSideChannel$Stub
{
    public final androidx.core.app.NotificationCompatSideChannelService a;

    public void <init>(androidx.core.app.NotificationCompatSideChannelService)
    {
        androidx.core.app.NotificationCompatSideChannelService$a r0;
        androidx.core.app.NotificationCompatSideChannelService $r1;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$a;

        $r1 := @parameter0: androidx.core.app.NotificationCompatSideChannelService;

        r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a> = $r1;

        specialinvoke r0.<android.support.v4.app.INotificationSideChannel$Stub: void <init>()>();

        return;
    }

    public void cancel(java.lang.String, int, java.lang.String)
    {
        java.lang.Throwable $r4;
        androidx.core.app.NotificationCompatSideChannelService$a r0;
        long $l2;
        int $i0, $i1;
        androidx.core.app.NotificationCompatSideChannelService $r2;
        java.lang.String $r1, $r3;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$a;

        $r3 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 = r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>($i1, $r3);

        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a>;

        virtualinvoke $r2.<androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)>($r3, $i0, $r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void cancelAll(java.lang.String)
    {
        java.lang.Throwable $r3;
        androidx.core.app.NotificationCompatSideChannelService$a r0;
        int $i0;
        androidx.core.app.NotificationCompatSideChannelService $r1;
        long $l1;
        java.lang.String $r2;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$a;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>($i0, $r2);

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a>;

        virtualinvoke $r1.<androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notify(java.lang.String, int, java.lang.String, android.app.Notification)
    {
        java.lang.Throwable $r5;
        androidx.core.app.NotificationCompatSideChannelService$a r0;
        long $l2;
        int $i0, $i1;
        android.app.Notification $r2;
        androidx.core.app.NotificationCompatSideChannelService $r3;
        java.lang.String $r1, $r4;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$a;

        $r4 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: android.app.Notification;

        $r3 = r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>($i1, $r4);

        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<androidx.core.app.NotificationCompatSideChannelService$a: androidx.core.app.NotificationCompatSideChannelService a>;

        virtualinvoke $r3.<androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>($r4, $i0, $r1, $r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
