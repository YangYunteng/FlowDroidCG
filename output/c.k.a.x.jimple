public final class c.k.a.x extends c.k.a.s
{
    public final java.util.List w;
    public final java.util.List x;

    public void <init>(java.util.List, java.util.List)
    {
        java.util.List $r1, $r2;
        c.k.a.x r0;
        java.util.ArrayList $r3;

        r0 := @this: c.k.a.x;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<c.k.a.x: void <init>(java.util.List,java.util.List,java.util.List)>($r1, $r2, $r3);

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List)
    {
        java.lang.Object[] $r4;
        java.util.Iterator $r5;
        java.util.List $r1, $r2, $r3;
        int $i0;
        java.lang.Object $r6;
        c.k.a.s $r7, $r8;
        c.k.a.x r0;
        boolean $z0;

        r0 := @this: c.k.a.x;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

        specialinvoke r0.<c.k.a.s: void <init>(java.util.List)>($r3);

        $r3 = staticinvoke <c.k.a.w: java.util.List b(java.util.Collection)>($r1);

        r0.<c.k.a.x: java.util.List w> = $r3;

        $r2 = staticinvoke <c.k.a.w: java.util.List b(java.util.Collection)>($r2);

        r0.<c.k.a.x: java.util.List x> = $r2;

        $r2 = r0.<c.k.a.x: java.util.List w>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        staticinvoke <c.k.a.w: void a(boolean,java.lang.String,java.lang.Object[])>($z0, "unexpected extends bounds: %s", $r4);

        $r1 = r0.<c.k.a.x: java.util.List w>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (c.k.a.s) $r6;

        $z0 = virtualinvoke $r7.<c.k.a.s: boolean b()>();

        if $z0 != 0 goto label04;

        $r8 = <c.k.a.s: c.k.a.s a>;

        if $r7 == $r8 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r7;

        staticinvoke <c.k.a.w: void a(boolean,java.lang.String,java.lang.Object[])>($z0, "invalid upper bound: %s", $r4);

        goto label03;

     label06:
        $r1 = r0.<c.k.a.x: java.util.List x>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (c.k.a.s) $r6;

        $z0 = virtualinvoke $r7.<c.k.a.s: boolean b()>();

        if $z0 != 0 goto label08;

        $r8 = <c.k.a.s: c.k.a.s a>;

        if $r7 == $r8 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r7;

        staticinvoke <c.k.a.w: void a(boolean,java.lang.String,java.lang.Object[])>($z0, "invalid lower bound: %s", $r4);

        goto label07;

     label10:
        return;
    }

    public static c.k.a.s a(java.lang.reflect.WildcardType, java.util.Map)
    {
        java.util.List $r4, $r5;
        java.util.Map $r0;
        java.lang.reflect.WildcardType $r2;
        java.lang.reflect.Type[] $r3;
        c.k.a.x $r1;

        $r2 := @parameter0: java.lang.reflect.WildcardType;

        $r0 := @parameter1: java.util.Map;

        $r1 = new c.k.a.x;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r4 = staticinvoke <c.k.a.s: java.util.List a(java.lang.reflect.Type[],java.util.Map)>($r3, $r0);

        $r3 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r5 = staticinvoke <c.k.a.s: java.util.List a(java.lang.reflect.Type[],java.util.Map)>($r3, $r0);

        specialinvoke $r1.<c.k.a.x: void <init>(java.util.List,java.util.List)>($r4, $r5);

        return $r1;
    }

    public c.k.a.g a(c.k.a.g)
    {
        java.lang.Object[] $r4;
        c.k.a.d $r2;
        c.k.a.g $r1;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r5;
        c.k.a.s $r6;
        c.k.a.x r0;
        boolean $z0;

        r0 := @this: c.k.a.x;

        $r1 := @parameter0: c.k.a.g;

        $r3 = r0.<c.k.a.x: java.util.List x>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r3 = r0.<c.k.a.x: java.util.List x>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r4[0] = $r5;

        virtualinvoke $r1.<c.k.a.g: c.k.a.g a(java.lang.String,java.lang.Object[])>("? super $T", $r4);

        return $r1;

     label1:
        $r3 = r0.<c.k.a.x: java.util.List w>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (c.k.a.s) $r5;

        $r2 = <c.k.a.s: c.k.a.d j>;

        $z0 = virtualinvoke $r6.<c.k.a.s: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<c.k.a.g: c.k.a.g a(java.lang.String)>("?");

        return $r1;

     label2:
        $r4 = newarray (java.lang.Object)[1];

        $r3 = r0.<c.k.a.x: java.util.List w>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r4[0] = $r5;

        virtualinvoke $r1.<c.k.a.g: c.k.a.g a(java.lang.String,java.lang.Object[])>("? extends $T", $r4);

        return $r1;
    }

    public c.k.a.s c()
    {
        java.util.List $r2, $r3;
        c.k.a.x r0, $r1;

        r0 := @this: c.k.a.x;

        $r1 = new c.k.a.x;

        $r2 = r0.<c.k.a.x: java.util.List w>;

        $r3 = r0.<c.k.a.x: java.util.List x>;

        specialinvoke $r1.<c.k.a.x: void <init>(java.util.List,java.util.List)>($r2, $r3);

        return $r1;
    }
}
