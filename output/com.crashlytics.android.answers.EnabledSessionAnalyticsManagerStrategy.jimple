public class com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy extends java.lang.Object implements com.crashlytics.android.answers.SessionAnalyticsManagerStrategy
{
    public static final int UNDEFINED_ROLLOVER_INTERVAL_SECONDS;
    public f.a.a.a.a.b.i apiKey;
    public final android.content.Context context;
    public boolean customEventsEnabled;
    public com.crashlytics.android.answers.EventFilter eventFilter;
    public final java.util.concurrent.ScheduledExecutorService executorService;
    public final com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager;
    public f.a.a.a.a.d.g filesSender;
    public final com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter firebaseAnalyticsApiAdapter;
    public boolean forwardToFirebaseAnalyticsEnabled;
    public final f.a.a.a.a.e.g httpRequestFactory;
    public boolean includePurchaseEventsInForwardedEvents;
    public final f.a.a.a.l kit;
    public final com.crashlytics.android.answers.SessionEventMetadata metadata;
    public boolean predefinedEventsEnabled;
    public final java.util.concurrent.atomic.AtomicReference rolloverFutureRef;
    public volatile int rolloverIntervalSeconds;

    public void <init>(f.a.a.a.l, android.content.Context, java.util.concurrent.ScheduledExecutorService, com.crashlytics.android.answers.SessionAnalyticsFilesManager, f.a.a.a.a.e.g, com.crashlytics.android.answers.SessionEventMetadata, com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter)
    {
        android.content.Context $r2;
        f.a.a.a.a.e.g $r5;
        f.a.a.a.a.b.i $r9;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r4;
        java.util.concurrent.atomic.AtomicReference $r8;
        com.crashlytics.android.answers.SessionEventMetadata $r6;
        com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter $r7;
        java.util.concurrent.ScheduledExecutorService $r3;
        int $i0;
        com.crashlytics.android.answers.KeepAllEventFilter $r10;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        f.a.a.a.l $r1;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: f.a.a.a.l;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r4 := @parameter3: com.crashlytics.android.answers.SessionAnalyticsFilesManager;

        $r5 := @parameter4: f.a.a.a.a.e.g;

        $r6 := @parameter5: com.crashlytics.android.answers.SessionEventMetadata;

        $r7 := @parameter6: com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef> = $r8;

        $r9 = new f.a.a.a.a.b.i;

        specialinvoke $r9.<f.a.a.a.a.b.i: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.b.i apiKey> = $r9;

        $r10 = new com.crashlytics.android.answers.KeepAllEventFilter;

        specialinvoke $r10.<com.crashlytics.android.answers.KeepAllEventFilter: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r10;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = 1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = 1;

        $i0 = -1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds> = $i0;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean forwardToFirebaseAnalyticsEnabled> = 0;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean includePurchaseEventsInForwardedEvents> = 0;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.l kit> = $r1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context> = $r2;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.ScheduledExecutorService executorService> = $r3;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager> = $r4;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.e.g httpRequestFactory> = $r5;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter firebaseAnalyticsApiAdapter> = $r7;

        return;
    }

    public void cancelTimeBasedFileRollOver()
    {
        android.content.Context $r3;
        java.util.concurrent.ScheduledFuture $r4;
        java.lang.Object $r2;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void c(android.content.Context,java.lang.String)>($r3, "Cancelling time-based rollover because no events are currently being generated.");

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (java.util.concurrent.ScheduledFuture) $r2;

        interfaceinvoke $r4.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label1:
        return;
    }

    public void deleteAllEvents()
    {
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r1;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r1.<f.a.a.a.a.d.c: void deleteAllEventsFiles()>();

        return;
    }

    public void processEvent(com.crashlytics.android.answers.SessionEvent$Builder)
    {
        com.crashlytics.android.answers.SessionEventMetadata $r2;
        java.lang.String $r8, $r12;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        boolean $z0, $z1, $z2;
        f.a.a.a.o $r6;
        com.crashlytics.android.answers.SessionEvent $r3;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r10;
        java.io.IOException $r11;
        com.crashlytics.android.answers.EventFilter $r9;
        java.lang.Exception $r14;
        com.crashlytics.android.answers.SessionEvent$Builder $r1;
        com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter $r13;
        java.lang.StringBuilder $r7;
        com.crashlytics.android.answers.SessionEvent$Type $r4, $r5;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: com.crashlytics.android.answers.SessionEvent$Builder;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata>;

        $r3 = virtualinvoke $r1.<com.crashlytics.android.answers.SessionEvent$Builder: com.crashlytics.android.answers.SessionEvent build(com.crashlytics.android.answers.SessionEventMetadata)>($r2);

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0 != 0 goto label01;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type CUSTOM>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<java.lang.Enum: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label01;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom events tracking disabled - skipping event: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label01:
        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0 != 0 goto label02;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type PREDEFINED>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<java.lang.Enum: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label02;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined events tracking disabled - skipping event: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label02:
        $r9 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter>;

        $z0 = interfaceinvoke $r9.<com.crashlytics.android.answers.EventFilter: boolean skipEvent(com.crashlytics.android.answers.SessionEvent)>($r3);

        if $z0 == 0 goto label03;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping filtered event: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label03:
        $r10 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

     label04:
        virtualinvoke $r10.<f.a.a.a.a.d.c: void writeEvent(java.lang.Object)>($r3);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write event: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Answers", $r8, $r11);

     label07:
        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void scheduleTimeBasedRollOverIfNeeded()>();

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type CUSTOM>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<java.lang.Enum: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label09;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type PREDEFINED>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<java.lang.Enum: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label08;

        goto label09;

     label08:
        $z0 = 0;

        goto label10;

     label09:
        $z0 = 1;

     label10:
        $r8 = $r3.<com.crashlytics.android.answers.SessionEvent: java.lang.String predefinedType>;

        $r12 = "purchase";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        $z2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean forwardToFirebaseAnalyticsEnabled>;

        if $z2 == 0 goto label15;

        if $z0 != 0 goto label11;

        return;

     label11:
        if $z1 == 0 goto label12;

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean includePurchaseEventsInForwardedEvents>;

        if $z0 != 0 goto label12;

        return;

     label12:
        $r13 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter firebaseAnalyticsApiAdapter>;

        virtualinvoke $r13.<com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter: void processEvent(com.crashlytics.android.answers.SessionEvent)>($r3);

     label13:
        return;

     label14:
        $r14 := @caughtexception;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to map event to Firebase: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Answers", $r8, $r14);

     label15:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public boolean rollFileOver()
    {
        android.content.Context $r1;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r2;
        java.io.IOException $r3;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

     label1:
        $z0 = virtualinvoke $r2.<f.a.a.a.a.d.c: boolean rollFileOver()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r1, "Failed to roll file over.", $r3);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void scheduleTimeBasedFileRollOver(long, long)
    {
        android.content.Context $r1;
        f.a.a.a.a.d.j $r2;
        java.util.concurrent.ScheduledFuture $r9;
        long $l0, $l1;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.RejectedExecutionException $r10;
        java.util.concurrent.ScheduledExecutorService $r8;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r4 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r5 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label6;

        $r2 = new f.a.a.a.a.d.j;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        specialinvoke $r2.<f.a.a.a.a.d.j: void <init>(android.content.Context,f.a.a.a.a.d.f)>($r1, r0);

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling time based file roll over every ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <f.a.a.a.a.b.l: void c(android.content.Context,java.lang.String)>($r1, $r7);

        $r4 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r8 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.ScheduledExecutorService executorService>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label3:
        $r9 = interfaceinvoke $r8.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r2, $l0, $l1, $r3);

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r9);

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r1, "Failed to schedule time based file roll over", $r10);

     label6:
        return;

        catch java.util.concurrent.RejectedExecutionException from label3 to label4 with label5;
    }

    public void scheduleTimeBasedRollOverIfNeeded()
    {
        int $i0, $i3;
        long $l1, $l2;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $i3 = -1;

        if $i0 == $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $l1 = (long) $i0;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $l2 = (long) $i0;

        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void scheduleTimeBasedFileRollOver(long,long)>($l1, $l2);

     label3:
        return;
    }

    public void sendEvents()
    {
        android.content.Context $r2;
        java.lang.Object[] $r6;
        f.a.a.a.a.d.g $r1;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r3;
        java.lang.Integer $r7;
        java.lang.Exception $r9;
        java.util.List $r4;
        java.util.Locale $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r10;
        java.lang.String $r8;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.d.g filesSender>;

        if $r1 != null goto label01;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void c(android.content.Context,java.lang.String)>($r2, "skipping files send because we don\'t yet know the target endpoint");

        return;

     label01:
        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void c(android.content.Context,java.lang.String)>($r2, "Sending all files");

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        $r4 = virtualinvoke $r3.<f.a.a.a.a.d.c: java.util.List getBatchOfFilesToSend()>();

        $i0 = 0;

     label02:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label03:
        if $i1 <= 0 goto label15;

     label04:
        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

     label05:
        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[1];

     label06:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "attempt to send batch of %d files", $r6);

        staticinvoke <f.a.a.a.a.b.l: void c(android.content.Context,java.lang.String)>($r2, $r8);

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.d.g filesSender>;

        $z0 = interfaceinvoke $r1.<f.a.a.a.a.d.g: boolean send(java.util.List)>($r4);

     label07:
        if $z0 == 0 goto label11;

     label08:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label09:
        $i0 = $i0 + $i1;

     label10:
        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r3.<f.a.a.a.a.d.c: void deleteSentFiles(java.util.List)>($r4);

     label11:
        if $z0 != 0 goto label12;

        goto label15;

     label12:
        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        $r4 = virtualinvoke $r3.<f.a.a.a.a.d.c: java.util.List getBatchOfFilesToSend()>();

     label13:
        goto label02;

     label14:
        $r9 := @caughtexception;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to send batch of analytics files to server: ");

        $r8 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <f.a.a.a.a.b.l: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r2, $r8, $r9);

     label15:
        if $i0 != 0 goto label16;

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r3.<f.a.a.a.a.d.c: void deleteOldestInRollOverIfOverMax()>();

     label16:
        return;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void setAnalyticsSettingsData(f.a.a.a.a.g.b, java.lang.String)
    {
        android.content.Context $r8;
        long $l1;
        com.crashlytics.android.answers.AnswersRetryFilesSender $r10;
        f.a.a.a.a.g.b $r2;
        int $i0;
        java.lang.String $r3, $r5, $r9;
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        f.a.a.a.l $r4;
        boolean $z0;
        f.a.a.a.o $r12;
        f.a.a.a.a.e.g $r6;
        f.a.a.a.a.b.i $r7;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r11;
        com.crashlytics.android.answers.SessionAnalyticsFilesSender $r1;
        java.lang.StringBuilder $r13;
        com.crashlytics.android.answers.SamplingEventFilter $r14;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r2 := @parameter0: f.a.a.a.a.g.b;

        $r3 := @parameter1: java.lang.String;

        $r1 = new com.crashlytics.android.answers.SessionAnalyticsFilesSender;

        $r4 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.l kit>;

        $r5 = $r2.<f.a.a.a.a.g.b: java.lang.String a>;

        $r6 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.e.g httpRequestFactory>;

        $r7 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.b.i apiKey>;

        $r8 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r9 = virtualinvoke $r7.<f.a.a.a.a.b.i: java.lang.String d(android.content.Context)>($r8);

        specialinvoke $r1.<com.crashlytics.android.answers.SessionAnalyticsFilesSender: void <init>(f.a.a.a.l,java.lang.String,java.lang.String,f.a.a.a.a.e.g,java.lang.String)>($r4, $r3, $r5, $r6, $r9);

        $r10 = staticinvoke <com.crashlytics.android.answers.AnswersRetryFilesSender: com.crashlytics.android.answers.AnswersRetryFilesSender build(com.crashlytics.android.answers.SessionAnalyticsFilesSender)>($r1);

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: f.a.a.a.a.d.g filesSender> = $r10;

        $r11 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r11.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void setAnalyticsSettingsData(f.a.a.a.a.g.b)>($r2);

        $z0 = $r2.<f.a.a.a.a.g.b: boolean f>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean forwardToFirebaseAnalyticsEnabled> = $z0;

        $z0 = $r2.<f.a.a.a.a.g.b: boolean g>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean includePurchaseEventsInForwardedEvents> = $z0;

        $r12 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Firebase analytics forwarding ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean forwardToFirebaseAnalyticsEnabled>;

        $r3 = "enabled";

        if $z0 == 0 goto label1;

        $r5 = "enabled";

        goto label2;

     label1:
        $r5 = "disabled";

     label2:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r5);

        $r12 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Firebase analytics including purchase events ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean includePurchaseEventsInForwardedEvents>;

        if $z0 == 0 goto label3;

        $r5 = "enabled";

        goto label4;

     label3:
        $r5 = "disabled";

     label4:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r5);

        $z0 = $r2.<f.a.a.a.a.g.b: boolean h>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = $z0;

        $r12 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom event tracking ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0 == 0 goto label5;

        $r5 = "enabled";

        goto label6;

     label5:
        $r5 = "disabled";

     label6:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r5);

        $z0 = $r2.<f.a.a.a.a.g.b: boolean i>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = $z0;

        $r12 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined event tracking ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0 == 0 goto label7;

        goto label8;

     label7:
        $r3 = "disabled";

     label8:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", $r3);

        $i0 = $r2.<f.a.a.a.a.g.b: int k>;

        if $i0 <= 1 goto label9;

        $r12 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r12.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Answers", "Event sampling enabled");

        $r14 = new com.crashlytics.android.answers.SamplingEventFilter;

        $i0 = $r2.<f.a.a.a.a.g.b: int k>;

        specialinvoke $r14.<com.crashlytics.android.answers.SamplingEventFilter: void <init>(int)>($i0);

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r14;

     label9:
        $i0 = $r2.<f.a.a.a.a.g.b: int b>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds> = $i0;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $l1 = (long) $i0;

        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void scheduleTimeBasedFileRollOver(long,long)>(0L, $l1);

        return;
    }

    public static void <clinit>()
    {
        <com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int UNDEFINED_ROLLOVER_INTERVAL_SECONDS> = -1;

        return;
    }
}
