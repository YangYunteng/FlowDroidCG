public final class c.i.b.c.zc extends java.lang.Object
{

    public static void a(com.google.common.collect.RangeSet, java.lang.Iterable)
    {
        com.google.common.collect.RangeSet $r0;
        java.util.Iterator $r2;
        com.google.common.collect.Range $r4;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.RangeSet;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.collect.Range) $r3;

        interfaceinvoke $r0.<com.google.common.collect.RangeSet: void add(com.google.common.collect.Range)>($r4);

        goto label1;

     label2:
        return;
    }

    public static boolean b(com.google.common.collect.RangeSet, java.lang.Iterable)
    {
        com.google.common.collect.RangeSet $r0;
        java.util.Iterator $r2;
        com.google.common.collect.Range $r4;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.RangeSet;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.collect.Range) $r3;

        $z0 = interfaceinvoke $r0.<com.google.common.collect.RangeSet: boolean encloses(com.google.common.collect.Range)>($r4);

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public static void c(com.google.common.collect.RangeSet, java.lang.Iterable)
    {
        com.google.common.collect.RangeSet $r0;
        java.util.Iterator $r2;
        com.google.common.collect.Range $r4;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.RangeSet;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.collect.Range) $r3;

        interfaceinvoke $r0.<com.google.common.collect.RangeSet: void remove(com.google.common.collect.Range)>($r4);

        goto label1;

     label2:
        return;
    }
}
