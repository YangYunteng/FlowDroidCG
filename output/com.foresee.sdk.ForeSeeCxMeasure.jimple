public class com.foresee.sdk.ForeSeeCxMeasure extends com.foresee.sdk.ForeSeeBase implements com.foresee.sdk.common.product.ForeSeeProduct
{
    public static com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance;

    public void <init>()
    {
        com.foresee.sdk.ForeSeeCxMeasure r0;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        specialinvoke r0.<com.foresee.sdk.ForeSeeBase: void <init>()>();

        return;
    }

    public static void checkIfEligibleForSurvey()
    {
        com.foresee.sdk.ForeSeeCxMeasure$11 $r0;

        $r0 = new com.foresee.sdk.ForeSeeCxMeasure$11;

        specialinvoke $r0.<com.foresee.sdk.ForeSeeCxMeasure$11: void <init>()>();

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r0);

        return;
    }

    public static void customInviteAccepted()
    {
        com.foresee.sdk.ForeSeeCxMeasure$9 $r0;

        $r0 = new com.foresee.sdk.ForeSeeCxMeasure$9;

        specialinvoke $r0.<com.foresee.sdk.ForeSeeCxMeasure$9: void <init>()>();

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r0);

        return;
    }

    public static void customInviteDeclined()
    {
        com.foresee.sdk.ForeSeeCxMeasure$10 $r0;

        $r0 = new com.foresee.sdk.ForeSeeCxMeasure$10;

        specialinvoke $r0.<com.foresee.sdk.ForeSeeCxMeasure$10: void <init>()>();

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r0);

        return;
    }

    public static java.util.Map getAllCPPs()
    {
        java.util.Map $r3;
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r0;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;
        com.foresee.sdk.common.configuration.IConfiguration $r2;
        boolean $z0;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r0 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r1 = virtualinvoke $r0.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        $r2 = virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r3 = interfaceinvoke $r2.<com.foresee.sdk.common.configuration.IConfiguration: java.util.Map getCpps()>();

        return $r3;
    }

    public static java.util.Map getAllContactDetails()
    {
        java.util.Map $r3;
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r0;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;
        com.foresee.sdk.common.configuration.IConfiguration $r2;
        boolean $z0;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r0 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r1 = virtualinvoke $r0.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        $r2 = virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r3 = interfaceinvoke $r2.<com.foresee.sdk.common.configuration.IConfiguration: java.util.Map getAllContactDetails()>();

        return $r3;
    }

    public static java.lang.String getCPPValue(java.lang.String)
    {
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String $r0;
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r1;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r2;
        com.foresee.sdk.common.configuration.IConfiguration $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        if $r0 == null goto label2;

        $r1 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r2 = virtualinvoke $r1.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        $r3 = virtualinvoke $r2.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r4 = interfaceinvoke $r3.<com.foresee.sdk.common.configuration.IConfiguration: java.util.Map getCpps()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r5;

        return $r0;

     label2:
        return null;
    }

    public static java.lang.String getContactDetails()
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r0;
        java.lang.String $r3;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;
        com.foresee.sdk.common.configuration.IConfiguration $r2;
        boolean $z0;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r0 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r1 = virtualinvoke $r0.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        $r2 = virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r3 = interfaceinvoke $r2.<com.foresee.sdk.common.configuration.IConfiguration: java.lang.String getContactDetails()>();

        return $r3;
    }

    public static java.lang.String getContactDetails(com.foresee.sdk.common.configuration.ContactType)
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r1;
        java.lang.String $r4;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r2;
        com.foresee.sdk.common.configuration.IConfiguration $r3;
        com.foresee.sdk.common.configuration.ContactType $r0;
        boolean $z0;

        $r0 := @parameter0: com.foresee.sdk.common.configuration.ContactType;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r2 = virtualinvoke $r1.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        $r3 = virtualinvoke $r2.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r4 = interfaceinvoke $r3.<com.foresee.sdk.common.configuration.IConfiguration: java.lang.String getContactDetails(com.foresee.sdk.common.configuration.ContactType)>($r0);

        return $r4;
    }

    public static com.foresee.sdk.common.configuration.ContactType getPreferredContactType()
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r0;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;
        com.foresee.sdk.common.configuration.IConfiguration $r2;
        com.foresee.sdk.common.configuration.ContactType $r3;
        boolean $z0;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r0 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r1 = virtualinvoke $r0.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        $r2 = virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.common.configuration.IConfiguration getCurrentConfiguration()>();

        $r3 = interfaceinvoke $r2.<com.foresee.sdk.common.configuration.IConfiguration: com.foresee.sdk.common.configuration.ContactType getPreferredContactType()>();

        return $r3;
    }

    public static java.lang.String getVersion()
    {
        return "5.3.0";
    }

    public static void incrementPageViews()
    {
        com.foresee.sdk.ForeSeeCxMeasure$4 $r0;

        $r0 = new com.foresee.sdk.ForeSeeCxMeasure$4;

        specialinvoke $r0.<com.foresee.sdk.ForeSeeCxMeasure$4: void <init>()>();

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r0);

        return;
    }

    public static void incrementSignificantEventCountWithKey(java.lang.String)
    {
        java.lang.String $r0;
        com.foresee.sdk.ForeSeeCxMeasure$1 $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.foresee.sdk.ForeSeeCxMeasure$1;

        specialinvoke $r1.<com.foresee.sdk.ForeSeeCxMeasure$1: void <init>(java.lang.String)>($r0);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r1);

        return;
    }

    public static void sendInviteStyleEventIfNecessary(com.foresee.sdk.common.configuration.IConfiguration)
    {
        com.foresee.sdk.common.configuration.Invite $r3;
        com.foresee.sdk.common.a.a.a $r4;
        com.foresee.sdk.common.a.a.c $r0;
        com.foresee.sdk.common.a.a.c$a $r2;
        int[] $r7;
        java.lang.Boolean $r6;
        java.lang.String $r5;
        com.foresee.sdk.common.configuration.IConfiguration $r1;
        boolean $z0;

        $r1 := @parameter0: com.foresee.sdk.common.configuration.IConfiguration;

        $r0 = new com.foresee.sdk.common.a.a.c;

        $r2 = <com.foresee.sdk.common.a.a.c$a: com.foresee.sdk.common.a.a.c$a InviteStyle>;

        specialinvoke $r0.<com.foresee.sdk.common.a.a.c: void <init>(com.foresee.sdk.common.a.a.c$a)>($r2);

        $r3 = interfaceinvoke $r1.<com.foresee.sdk.common.configuration.IConfiguration: com.foresee.sdk.common.configuration.Invite getInvite()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r0.<com.foresee.sdk.common.a.a.a: com.foresee.sdk.common.a.a.a a(java.lang.String,java.lang.Object)>("fs_mode", "modern");

        $r5 = virtualinvoke $r3.<com.foresee.sdk.common.configuration.Invite: java.lang.String getLogo()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        $z0 = $z0 ^ 1;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = virtualinvoke $r4.<com.foresee.sdk.common.a.a.a: com.foresee.sdk.common.a.a.a a(java.lang.String,java.lang.Object)>("fs_customLogoPresent", $r6);

        $r7 = virtualinvoke $r3.<com.foresee.sdk.common.configuration.Invite: int[] getBaseColor()>();

        if $r7 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = virtualinvoke $r4.<com.foresee.sdk.common.a.a.a: com.foresee.sdk.common.a.a.a a(java.lang.String,java.lang.Object)>("fs_customColorPresent", $r6);

        $r5 = virtualinvoke $r3.<com.foresee.sdk.common.configuration.Invite: java.lang.String getHeader()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        $z0 = $z0 ^ 1;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r4.<com.foresee.sdk.common.a.a.a: com.foresee.sdk.common.a.a.a a(java.lang.String,java.lang.Object)>("fs_customBannerPresent", $r6);

        goto label4;

     label3:
        $r4 = virtualinvoke $r0.<com.foresee.sdk.common.a.a.a: com.foresee.sdk.common.a.a.a a(java.lang.String,java.lang.Object)>("fs_mode", "legacy");

        $r5 = interfaceinvoke $r1.<com.foresee.sdk.common.configuration.IConfiguration: java.lang.String getCustomLogoPath()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        $z0 = $z0 ^ 1;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r4.<com.foresee.sdk.common.a.a.a: com.foresee.sdk.common.a.a.a a(java.lang.String,java.lang.Object)>("fs_customLogoPresent", $r6);

     label4:
        staticinvoke <com.foresee.sdk.common.a.b: void a(com.foresee.sdk.common.a.a.a)>($r0);

        return;
    }

    public static void setContactDetails(com.foresee.sdk.common.configuration.ContactType, java.lang.String)
    {
        java.lang.String $r1;
        com.foresee.sdk.common.configuration.ContactType $r0;
        com.foresee.sdk.ForeSeeCxMeasure$6 $r2;

        $r0 := @parameter0: com.foresee.sdk.common.configuration.ContactType;

        $r1 := @parameter1: java.lang.String;

        $r2 = new com.foresee.sdk.ForeSeeCxMeasure$6;

        specialinvoke $r2.<com.foresee.sdk.ForeSeeCxMeasure$6: void <init>(com.foresee.sdk.common.configuration.ContactType,java.lang.String)>($r0, $r1);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r2);

        return;
    }

    public static void setContactDetails(java.lang.String)
    {
        com.foresee.sdk.ForeSeeCxMeasure$5 $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.foresee.sdk.ForeSeeCxMeasure$5;

        specialinvoke $r1.<com.foresee.sdk.ForeSeeCxMeasure$5: void <init>(java.lang.String)>($r0);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r1);

        return;
    }

    public static void setInviteListener(com.foresee.sdk.cxMeasure.tracker.listeners.BaseInviteListener)
    {
        com.foresee.sdk.ForeSeeCxMeasure$8 $r1;
        com.foresee.sdk.cxMeasure.tracker.listeners.BaseInviteListener $r0;

        $r0 := @parameter0: com.foresee.sdk.cxMeasure.tracker.listeners.BaseInviteListener;

        $r1 = new com.foresee.sdk.ForeSeeCxMeasure$8;

        specialinvoke $r1.<com.foresee.sdk.ForeSeeCxMeasure$8: void <init>(com.foresee.sdk.cxMeasure.tracker.listeners.BaseInviteListener)>($r0);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r1);

        return;
    }

    public static void setPreferredContactType(com.foresee.sdk.common.configuration.ContactType)
    {
        com.foresee.sdk.common.configuration.ContactType $r0;
        com.foresee.sdk.ForeSeeCxMeasure$7 $r1;

        $r0 := @parameter0: com.foresee.sdk.common.configuration.ContactType;

        $r1 = new com.foresee.sdk.ForeSeeCxMeasure$7;

        specialinvoke $r1.<com.foresee.sdk.ForeSeeCxMeasure$7: void <init>(com.foresee.sdk.common.configuration.ContactType)>($r0);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r1);

        return;
    }

    public static void showInviteForSurveyID(java.lang.String)
    {
        java.lang.String $r0;
        com.foresee.sdk.ForeSeeCxMeasure$2 $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.foresee.sdk.ForeSeeCxMeasure$2;

        specialinvoke $r1.<com.foresee.sdk.ForeSeeCxMeasure$2: void <init>(java.lang.String)>($r0);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r1);

        return;
    }

    public static void showSurveyForSurveyID(java.lang.String)
    {
        com.foresee.sdk.ForeSeeCxMeasure$3 $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.foresee.sdk.ForeSeeCxMeasure$3;

        specialinvoke $r1.<com.foresee.sdk.ForeSeeCxMeasure$3: void <init>(java.lang.String)>($r0);

        staticinvoke <com.foresee.sdk.ForeSeeBase: void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)>($r1);

        return;
    }

    public void completeProductInitialization(android.app.Application, com.foresee.sdk.common.configuration.IConfiguration, com.foresee.sdk.common.configuration.IConfiguration)
    {
        android.app.Application $r1;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r3;
        com.foresee.sdk.common.configuration.IConfiguration $r2, $r4;
        com.foresee.sdk.ForeSeeCxMeasure r0;
        boolean $z0;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        $r1 := @parameter0: android.app.Application;

        $r4 := @parameter1: com.foresee.sdk.common.configuration.IConfiguration;

        $r2 := @parameter2: com.foresee.sdk.common.configuration.IConfiguration;

        $z0 = $r4 instanceof com.foresee.sdk.common.configuration.ConfigurationStub;

        if $z0 == 0 goto label1;

        staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: boolean start(android.app.Application)>($r1);

     label1:
        $r3 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        virtualinvoke $r3.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: void update(android.app.Application,com.foresee.sdk.common.configuration.IConfiguration)>($r1, $r2);

        return;
    }

    public boolean getIsStarted()
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r2;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;
        com.foresee.sdk.ForeSeeCxMeasure r0;
        boolean $z0;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        $r2 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        if $r2 == null goto label1;

        $z0 = $r2 instanceof com.foresee.sdk.internal.ForeSeeCxMeasureFacadeStub;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r2.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void initStubInstance()
    {
        com.foresee.sdk.ForeSeeCxMeasure r0;
        com.foresee.sdk.internal.ForeSeeCxMeasureFacadeStub $r1;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        $r1 = new com.foresee.sdk.internal.ForeSeeCxMeasureFacadeStub;

        specialinvoke $r1.<com.foresee.sdk.internal.ForeSeeCxMeasureFacadeStub: void <init>()>();

        <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance> = $r1;

        return;
    }

    public void logFeatures(android.app.Application, com.foresee.sdk.common.configuration.IConfiguration)
    {
        com.foresee.sdk.cxMeasure.tracker.a.a $r3;
        com.foresee.sdk.common.a.a.e $r4;
        android.app.Application $r1;
        com.foresee.sdk.common.configuration.IConfiguration $r2;
        com.foresee.sdk.ForeSeeCxMeasure r0;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        $r1 := @parameter0: android.app.Application;

        $r2 := @parameter1: com.foresee.sdk.common.configuration.IConfiguration;

        staticinvoke <com.foresee.sdk.ForeSeeCxMeasure: void sendInviteStyleEventIfNecessary(com.foresee.sdk.common.configuration.IConfiguration)>($r2);

        $r3 = new com.foresee.sdk.cxMeasure.tracker.a.a;

        $r4 = new com.foresee.sdk.common.a.a.e;

        specialinvoke $r4.<com.foresee.sdk.common.a.a.e: void <init>()>();

        specialinvoke $r3.<com.foresee.sdk.cxMeasure.tracker.a.a: void <init>(com.foresee.sdk.common.a.a.e)>($r4);

        virtualinvoke $r3.<com.foresee.sdk.cxMeasure.tracker.a.a: void a(android.app.Application,com.foresee.sdk.common.configuration.IConfiguration)>($r1, $r2);

        return;
    }

    public boolean prepareProduct(android.app.Application, com.foresee.sdk.common.configuration.IConfiguration)
    {
        android.app.Application $r1;
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r2;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r4;
        com.foresee.sdk.common.configuration.IConfiguration $r3;
        com.foresee.sdk.ForeSeeCxMeasure r0;
        boolean $z0;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        $r1 := @parameter0: android.app.Application;

        $r3 := @parameter1: com.foresee.sdk.common.configuration.IConfiguration;

        $z0 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: boolean prepare(android.app.Application,com.foresee.sdk.common.configuration.IConfiguration)>($r1, $r3);

        $r2 = new com.foresee.sdk.internal.ForeSeeCxMeasureFacade;

        $r4 = staticinvoke <com.foresee.sdk.cxMeasure.tracker.TrackingContext: com.foresee.sdk.cxMeasure.tracker.TrackingContext Instance()>();

        specialinvoke $r2.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: void <init>(android.app.Application,com.foresee.sdk.cxMeasure.tracker.TrackingContext)>($r1, $r4);

        <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance> = $r2;

        return $z0;
    }

    public void resetProductState()
    {
        com.foresee.sdk.internal.ForeSeeCxMeasureFacade $r2;
        com.foresee.sdk.cxMeasure.tracker.TrackingContext $r1;
        com.foresee.sdk.ForeSeeCxMeasure r0;

        r0 := @this: com.foresee.sdk.ForeSeeCxMeasure;

        $r2 = <com.foresee.sdk.ForeSeeCxMeasure: com.foresee.sdk.internal.ForeSeeCxMeasureFacade instance>;

        $r1 = virtualinvoke $r2.<com.foresee.sdk.internal.ForeSeeCxMeasureFacade: com.foresee.sdk.cxMeasure.tracker.TrackingContext getTracker()>();

        virtualinvoke $r1.<com.foresee.sdk.cxMeasure.tracker.TrackingContext: void resetAll()>();

        return;
    }
}
