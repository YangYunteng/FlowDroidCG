public abstract class com.foresee.sdk.ForeSeeBase extends java.lang.Object
{
    public static final java.lang.String PRODUCT_CLASS_CXMEASURE;
    public static final java.lang.String PRODUCT_CLASS_FEEDBACK;
    public static final java.lang.String PRODUCT_CLASS_REPLAY;
    public static com.foresee.sdk.common.configuration.IConfiguration config;
    public static java.util.List productList;
    public static java.util.concurrent.ConcurrentLinkedQueue unsubmittedRunnableQueue;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        <com.foresee.sdk.ForeSeeBase: java.lang.String PRODUCT_CLASS_REPLAY> = "com.foresee.sdk.ForeSeeReplay";

        <com.foresee.sdk.ForeSeeBase: java.lang.String PRODUCT_CLASS_FEEDBACK> = "com.foresee.sdk.ForeSeeFeedback";

        <com.foresee.sdk.ForeSeeBase: java.lang.String PRODUCT_CLASS_CXMEASURE> = "com.foresee.sdk.ForeSeeCxMeasure";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.foresee.sdk.ForeSeeBase: java.util.List productList> = $r0;

        $r1 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        <com.foresee.sdk.ForeSeeBase: java.util.concurrent.ConcurrentLinkedQueue unsubmittedRunnableQueue> = $r1;

        return;
    }

    public void <init>()
    {
        com.foresee.sdk.ForeSeeBase r0;

        r0 := @this: com.foresee.sdk.ForeSeeBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addProducts()
    {
        java.util.List $r0;
        java.lang.Object $r1;
        com.foresee.sdk.common.product.ForeSeeProduct $r2;
        boolean $z0;

        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.List productList>;

        interfaceinvoke $r0.<java.util.List: void clear()>();

        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean checkClassExistence(java.lang.String)>("com.foresee.sdk.ForeSeeCxMeasure");

        if $z0 == 0 goto label1;

        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.List productList>;

        $r1 = staticinvoke <com.foresee.sdk.common.utils.Util: java.lang.Object createInstanceByClassName(java.lang.String)>("com.foresee.sdk.ForeSeeCxMeasure");

        $r2 = (com.foresee.sdk.common.product.ForeSeeProduct) $r1;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label1:
        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean checkClassExistence(java.lang.String)>("com.foresee.sdk.ForeSeeFeedback");

        if $z0 == 0 goto label2;

        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.List productList>;

        $r1 = staticinvoke <com.foresee.sdk.common.utils.Util: java.lang.Object createInstanceByClassName(java.lang.String)>("com.foresee.sdk.ForeSeeFeedback");

        $r2 = (com.foresee.sdk.common.product.ForeSeeProduct) $r1;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public static void clearUnsubmittedRunnableQueue()
    {
        java.util.concurrent.ConcurrentLinkedQueue $r0;

        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.concurrent.ConcurrentLinkedQueue unsubmittedRunnableQueue>;

        virtualinvoke $r0.<java.util.concurrent.ConcurrentLinkedQueue: void clear()>();

        return;
    }

    public static com.foresee.sdk.common.configuration.Configuration getSDKConfiguration()
    {
        com.foresee.sdk.common.configuration.Configuration $r4;
        java.lang.Object $r1;
        java.lang.Class $r3;
        com.foresee.sdk.common.configuration.IConfiguration $r0;
        java.lang.ClassCastException $r2;

        $r3 = class "Lcom/foresee/sdk/common/configuration/Configuration;";

        $r0 = <com.foresee.sdk.ForeSeeBase: com.foresee.sdk.common.configuration.IConfiguration config>;

     label1:
        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r0);

        $r4 = (com.foresee.sdk.common.configuration.Configuration) $r1;

     label2:
        return $r4;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    public static boolean isForeSeeStarted()
    {
        java.util.Iterator $r1;
        com.foresee.sdk.common.configuration.Configuration $r6;
        java.util.List $r0;
        com.foresee.sdk.common.b$a $r4;
        java.lang.Object $r2;
        java.lang.String $r5;
        com.foresee.sdk.common.product.ForeSeeProduct $r3;
        boolean $z0;

        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.List productList>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.foresee.sdk.common.product.ForeSeeProduct) $r2;

        $z0 = interfaceinvoke $r3.<com.foresee.sdk.common.product.ForeSeeProduct: boolean getIsStarted()>();

        if $z0 != 0 goto label1;

        $r4 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a WARN>;

        $r5 = <com.foresee.sdk.common.constants.LogTags: java.lang.String SDK_LIB>;

        staticinvoke <com.foresee.sdk.common.b: void a(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String)>($r4, $r5, "The ForeSee SDK has not been started. Please check the documentation for the correct way to initialize the SDK.");

        return 0;

     label2:
        $r6 = staticinvoke <com.foresee.sdk.ForeSeeBase: com.foresee.sdk.common.configuration.Configuration getSDKConfiguration()>();

        if $r6 == null goto label3;

        return 1;

     label3:
        return 0;
    }

    public static void submitRunnableOrAddToQueueIfSdkNotStarted(java.lang.Runnable)
    {
        java.util.concurrent.ScheduledThreadPoolExecutor $r2;
        java.lang.Runnable $r0;
        boolean $z0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        $r0 := @parameter0: java.lang.Runnable;

        $z0 = staticinvoke <com.foresee.sdk.ForeSeeBase: boolean isForeSeeStarted()>();

        if $z0 != 0 goto label1;

        $r1 = <com.foresee.sdk.ForeSeeBase: java.util.concurrent.ConcurrentLinkedQueue unsubmittedRunnableQueue>;

        virtualinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>($r0);

        return;

     label1:
        $r2 = staticinvoke <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor P()>();

        virtualinvoke $r2.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r0);

        return;
    }

    public static void submitUnsubmittedRunnableQueue()
    {
        java.util.concurrent.ScheduledThreadPoolExecutor $r1;
        java.lang.Object $r2;
        java.lang.Runnable $r3;
        java.util.concurrent.ConcurrentLinkedQueue $r0;
        boolean $z0;

     label1:
        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.concurrent.ConcurrentLinkedQueue unsubmittedRunnableQueue>;

        $z0 = virtualinvoke $r0.<java.util.concurrent.ConcurrentLinkedQueue: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r1 = staticinvoke <com.foresee.sdk.common.h.c: java.util.concurrent.ScheduledThreadPoolExecutor P()>();

        $r0 = <com.foresee.sdk.ForeSeeBase: java.util.concurrent.ConcurrentLinkedQueue unsubmittedRunnableQueue>;

        $r2 = virtualinvoke $r0.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

        $r3 = (java.lang.Runnable) $r2;

        virtualinvoke $r1.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

        goto label1;

     label2:
        return;
    }

    public abstract void completeProductInitialization(android.app.Application, com.foresee.sdk.common.configuration.IConfiguration, com.foresee.sdk.common.configuration.IConfiguration);

    public abstract void initStubInstance();

    public abstract void logFeatures(android.app.Application, com.foresee.sdk.common.configuration.IConfiguration);

    public abstract boolean prepareProduct(android.app.Application, com.foresee.sdk.common.configuration.IConfiguration);

    public abstract void resetProductState();
}
