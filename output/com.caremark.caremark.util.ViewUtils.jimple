public class com.caremark.caremark.util.ViewUtils extends java.lang.Object
{
    public static final java.lang.String PATTERN;
    public static final char SEPARATOR;
    public static final java.lang.String SPACE;

    public void <init>()
    {
        com.caremark.caremark.util.ViewUtils r0;

        r0 := @this: com.caremark.caremark.util.ViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addAutoStartWorkerFragment(b.m.a.l, com.caremark.caremark.core.async.fragment.WorkerFragment, java.lang.String)
    {
        com.caremark.caremark.core.async.fragment.WorkerFragment $r1;
        android.os.Bundle $r4, $r5;
        b.m.a.l $r0;
        androidx.fragment.app.Fragment $r3;
        java.lang.String $r2;

        $r0 := @parameter0: b.m.a.l;

        $r1 := @parameter1: com.caremark.caremark.core.async.fragment.WorkerFragment;

        $r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<b.m.a.l: androidx.fragment.app.Fragment a(java.lang.String)>($r2);

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.os.Bundle getArguments()>();

        $r5 = $r4;

        if $r4 != null goto label2;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label2:
        virtualinvoke $r5.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("auto_start", 1);

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)>($r5);

        staticinvoke <com.caremark.caremark.util.ViewUtils: void addWorkerFragment(b.m.a.l,com.caremark.caremark.core.async.fragment.WorkerFragment,java.lang.String)>($r0, $r1, $r2);

        return;
    }

    public static void addWorkerFragment(b.m.a.l, com.caremark.caremark.core.async.fragment.WorkerFragment, java.lang.String)
    {
        com.caremark.caremark.core.async.fragment.WorkerFragment $r0;
        b.m.a.l $r2;
        b.m.a.z $r4;
        androidx.fragment.app.Fragment $r3;
        java.lang.String $r1;

        $r2 := @parameter0: b.m.a.l;

        $r0 := @parameter1: com.caremark.caremark.core.async.fragment.WorkerFragment;

        $r1 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r2.<b.m.a.l: androidx.fragment.app.Fragment a(java.lang.String)>($r1);

        if $r3 != null goto label1;

        $r4 = virtualinvoke $r2.<b.m.a.l: b.m.a.z a()>();

        virtualinvoke $r4.<b.m.a.z: b.m.a.z a(androidx.fragment.app.Fragment,java.lang.String)>($r0, $r1);

        virtualinvoke $r4.<b.m.a.z: int a()>();

     label1:
        return;
    }

    public static void disableHardwareRendering(android.view.View)
    {
        int $i0;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        virtualinvoke $r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>(1, null);

     label1:
        return;
    }

    public static java.lang.CharSequence getItalicText(java.lang.String)
    {
        android.text.SpannableString $r0;
        int $i0;
        android.text.style.StyleSpan $r2;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 = new android.text.SpannableString;

        specialinvoke $r0.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r1);

        $r2 = new android.text.style.StyleSpan;

        specialinvoke $r2.<android.text.style.StyleSpan: void <init>(int)>(2);

        $i0 = virtualinvoke $r0.<android.text.SpannableString: int length()>();

        virtualinvoke $r0.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r2, 0, $i0, 17);

        return $r0;
    }

    public static int getScreenWidth(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager $r2;
        int $i0;
        android.view.Display $r3;
        java.lang.Object $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r2 = (android.view.WindowManager) $r1;

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r3.<android.view.Display: int getWidth()>();

        return $i0;
    }

    public static int getScreenWidthForPortrait(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager $r2;
        int $i0, $i1;
        android.view.Display $r3;
        java.lang.Object $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r2 = (android.view.WindowManager) $r1;

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r3.<android.view.Display: int getWidth()>();

        $i1 = virtualinvoke $r3.<android.view.Display: int getHeight()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;
    }

    public static void hideKeyboard(android.view.View)
    {
        android.content.Context $r1;
        android.view.View $r0;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        android.view.inputmethod.InputMethodManager $r3;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        $r4 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r4, 0);

     label1:
        return;
    }

    public static void hideKeyboard(android.view.View, android.os.ResultReceiver)
    {
        android.content.Context $r2;
        android.view.View $r1;
        java.lang.Object $r3;
        android.os.ResultReceiver $r0;
        android.os.IBinder $r5;
        android.view.inputmethod.InputMethodManager $r4;

        $r1 := @parameter0: android.view.View;

        $r0 := @parameter1: android.os.ResultReceiver;

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        $r5 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>($r5, 0, $r0);

        return;
    }

    public static boolean isLandscapeMode(android.content.res.Resources)
    {
        int $i0;
        android.content.res.Configuration $r0;
        android.content.res.Resources $r1;

        $r1 := @parameter0: android.content.res.Resources;

        $r0 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r0.<android.content.res.Configuration: int orientation>;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isTablet(android.content.res.Resources)
    {
        android.content.res.Configuration $r1;
        int $i0;
        android.content.res.Resources $r0;
        boolean $z0, $z1;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 15;

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 15;

        if $i0 != 3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z0 != 0 goto label6;

        if $z1 == 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        return 1;
    }

    public static java.lang.String maskAddressLine(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $r1 == null goto label1;

        if $i0 <= 6 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        $r2[0] = $r1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131820656, $r2);

     label1:
        return $r1;
    }

    public static java.lang.String maskDrugInfo(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $r1 == null goto label1;

        if $i0 <= 2 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r2[0] = $r1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131821219, $r2);

     label1:
        return $r1;
    }

    public static java.lang.String maskShippingNumber(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 3 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - 3;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r2[0] = $r1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131820655, $r2);

     label1:
        return $r1;
    }

    public static java.lang.CharSequence noTrailingwhiteLines(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0, $r1;
        int $i0, $i2;
        char $c1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.CharSequence;

     label01:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label02:
        $i2 = -1;

        $i0 = $i0 + $i2;

     label03:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label04:
        $i0 = (int) $c1;

        if $i0 != 10 goto label10;

     label05:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label06:
        $i2 = -1;

        $i0 = $i0 + $i2;

     label07:
        $r1 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label08:
        $r0 = $r1;

        goto label01;

     label09:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label10:
        return $r0;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static void removeWorkerFragment(b.m.a.l, java.lang.String)
    {
        b.m.a.l $r0;
        b.m.a.z $r3;
        androidx.fragment.app.Fragment $r2;
        java.lang.String $r1;

        $r0 := @parameter0: b.m.a.l;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<b.m.a.l: androidx.fragment.app.Fragment a(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r0.<b.m.a.l: b.m.a.z a()>();

        virtualinvoke $r3.<b.m.a.z: b.m.a.z c(androidx.fragment.app.Fragment)>($r2);

        virtualinvoke $r3.<b.m.a.z: int a()>();

     label1:
        return;
    }

    public static float roundFloatValue(float)
    {
        java.text.DecimalFormatSymbols $r0;
        java.text.DecimalFormat $r2;
        float $f0;
        java.lang.String $r3;
        java.lang.Exception $r1;
        double $d0;

        $f0 := @parameter0: float;

        $r0 = new java.text.DecimalFormatSymbols;

        specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>()>();

        virtualinvoke $r0.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);

        $r2 = new java.text.DecimalFormat;

        specialinvoke $r2.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>("#.#", $r0);

        $d0 = (double) $f0;

     label1:
        $r3 = virtualinvoke $r2.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

     label2:
        return $f0;

     label3:
        return 0.0F;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void showKeyboard(android.view.View)
    {
        android.content.Context $r1;
        android.view.View $r0;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        android.view.inputmethod.InputMethodManager $r3;

        $r0 := @parameter0: android.view.View;

        staticinvoke <com.caremark.caremark.util.ViewUtils: void hideKeyboard(android.view.View)>($r0);

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        $r4 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>($r4, 2, 0);

        return;
    }

    public static java.lang.CharSequence updateStyleAndColor(java.lang.CharSequence, int, int, int, int)
    {
        java.lang.CharSequence $r1;
        android.text.SpannableString $r0;
        android.text.style.StyleSpan $r2;
        int $i0, $i1, $i2, $i3;
        android.text.style.ForegroundColorSpan $r3;

        $r1 := @parameter0: java.lang.CharSequence;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r0 = new android.text.SpannableString;

        specialinvoke $r0.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r1);

        $r2 = new android.text.style.StyleSpan;

        specialinvoke $r2.<android.text.style.StyleSpan: void <init>(int)>($i3);

        virtualinvoke $r0.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r2, $i1, $i2, 17);

        $r3 = new android.text.style.ForegroundColorSpan;

        specialinvoke $r3.<android.text.style.ForegroundColorSpan: void <init>(int)>($i0);

        virtualinvoke $r0.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r3, $i1, $i2, 17);

        return $r0;
    }

    public static void <clinit>()
    {
        <com.caremark.caremark.util.ViewUtils: java.lang.String SPACE> = " ";

        <com.caremark.caremark.util.ViewUtils: char SEPARATOR> = 46;

        <com.caremark.caremark.util.ViewUtils: java.lang.String PATTERN> = "#.#";

        return;
    }
}
