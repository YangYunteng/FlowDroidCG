public abstract class com.google.common.graph.AbstractValueGraph extends com.google.common.graph.AbstractBaseGraph implements com.google.common.graph.ValueGraph
{

    public void <init>()
    {
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: void <init>()>();

        return;
    }

    public static java.util.Map edgeValueMap(com.google.common.graph.ValueGraph)
    {
        com.google.common.graph.AbstractValueGraph$2 $r0;
        com.google.common.graph.ValueGraph $r1;
        java.util.Map $r3;
        java.util.Set $r2;

        $r1 := @parameter0: com.google.common.graph.ValueGraph;

        $r0 = new com.google.common.graph.AbstractValueGraph$2;

        specialinvoke $r0.<com.google.common.graph.AbstractValueGraph$2: void <init>(com.google.common.graph.ValueGraph)>($r1);

        $r2 = interfaceinvoke $r1.<com.google.common.graph.ValueGraph: java.util.Set edges()>();

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.Map asMap(java.util.Set,com.google.common.base.Function)>($r2, $r0);

        return $r3;
    }

    public com.google.common.graph.Graph asGraph()
    {
        com.google.common.graph.AbstractValueGraph r0;
        com.google.common.graph.AbstractValueGraph$1 $r1;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 = new com.google.common.graph.AbstractValueGraph$1;

        specialinvoke $r1.<com.google.common.graph.AbstractValueGraph$1: void <init>(com.google.common.graph.AbstractValueGraph)>(r0);

        return $r1;
    }

    public volatile int degree(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: int degree(java.lang.Object)>($r1);

        return $i0;
    }

    public java.util.Optional edgeValue(java.lang.Object, java.lang.Object)
    {
        java.util.Optional $r3;
        java.lang.Object $r1, $r2;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = interfaceinvoke r0.<com.google.common.graph.ValueGraph: java.lang.Object edgeValueOrDefault(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r1, null);

        $r3 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r2);

        return $r3;
    }

    public volatile java.util.Set edges()
    {
        java.util.Set $r1;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: java.util.Set edges()>();

        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        java.util.Set $r3, $r4;
        com.google.common.graph.ValueGraph $r2;
        java.util.Map $r5, $r6;
        java.lang.Object $r1;
        com.google.common.graph.AbstractValueGraph r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.common.graph.ValueGraph;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.common.graph.ValueGraph) $r1;

        $z0 = interfaceinvoke r0.<com.google.common.graph.ValueGraph: boolean isDirected()>();

        $z1 = interfaceinvoke $r2.<com.google.common.graph.ValueGraph: boolean isDirected()>();

        if $z0 != $z1 goto label3;

        $r3 = interfaceinvoke r0.<com.google.common.graph.ValueGraph: java.util.Set nodes()>();

        $r4 = interfaceinvoke $r2.<com.google.common.graph.ValueGraph: java.util.Set nodes()>();

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <com.google.common.graph.AbstractValueGraph: java.util.Map edgeValueMap(com.google.common.graph.ValueGraph)>(r0);

        $r6 = staticinvoke <com.google.common.graph.AbstractValueGraph: java.util.Map edgeValueMap(com.google.common.graph.ValueGraph)>($r2);

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public volatile boolean hasEdgeConnecting(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.graph.AbstractValueGraph r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: boolean hasEdgeConnecting(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public final int hashCode()
    {
        int $i0;
        com.google.common.graph.AbstractValueGraph r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 = staticinvoke <com.google.common.graph.AbstractValueGraph: java.util.Map edgeValueMap(com.google.common.graph.ValueGraph)>(r0);

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public volatile int inDegree(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: int inDegree(java.lang.Object)>($r1);

        return $i0;
    }

    public volatile int outDegree(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: int outDegree(java.lang.Object)>($r1);

        return $i0;
    }

    public volatile java.lang.Iterable predecessors(java.lang.Object)
    {
        java.lang.Object $r2;
        java.lang.Iterable $r1;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <c.i.b.d.d: java.lang.Iterable a(com.google.common.graph.ValueGraph,java.lang.Object)>(r0, $r2);

        return $r1;
    }

    public volatile java.lang.Iterable successors(java.lang.Object)
    {
        java.lang.Object $r2;
        java.lang.Iterable $r1;
        com.google.common.graph.AbstractValueGraph r0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <c.i.b.d.d: java.lang.Iterable b(com.google.common.graph.ValueGraph,java.lang.Object)>(r0, $r2);

        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.Map $r3;
        java.util.Set $r2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.google.common.graph.AbstractValueGraph r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.AbstractValueGraph;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isDirected: ");

        $z0 = interfaceinvoke r0.<com.google.common.graph.ValueGraph: boolean isDirected()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowsSelfLoops: ");

        $z0 = interfaceinvoke r0.<com.google.common.graph.ValueGraph: boolean allowsSelfLoops()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nodes: ");

        $r2 = interfaceinvoke r0.<com.google.common.graph.ValueGraph: java.util.Set nodes()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", edges: ");

        $r3 = staticinvoke <com.google.common.graph.AbstractValueGraph: java.util.Map edgeValueMap(com.google.common.graph.ValueGraph)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
