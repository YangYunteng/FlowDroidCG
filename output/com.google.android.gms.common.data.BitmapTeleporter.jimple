public class com.google.android.gms.common.data.BitmapTeleporter extends com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable implements com.google.android.gms.common.internal.ReflectedParcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public final int mType;
    public final int zali;
    public android.os.ParcelFileDescriptor zalj;
    public android.graphics.Bitmap zalk;
    public boolean zall;
    public java.io.File zalm;

    static void <clinit>()
    {
        com.google.android.gms.common.data.zaa $r0;

        $r0 = new com.google.android.gms.common.data.zaa;

        specialinvoke $r0.<com.google.android.gms.common.data.zaa: void <init>()>();

        <com.google.android.gms.common.data.BitmapTeleporter: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, android.os.ParcelFileDescriptor, int)
    {
        android.os.ParcelFileDescriptor $r1;
        com.google.android.gms.common.data.BitmapTeleporter r0;
        int $i0, $i1;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $i1 := @parameter0: int;

        $r1 := @parameter1: android.os.ParcelFileDescriptor;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: void <init>()>();

        r0.<com.google.android.gms.common.data.BitmapTeleporter: int zali> = $i1;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj> = $r1;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: int mType> = $i0;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.graphics.Bitmap zalk> = null;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: boolean zall> = 0;

        return;
    }

    public void <init>(android.graphics.Bitmap)
    {
        com.google.android.gms.common.data.BitmapTeleporter r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: void <init>()>();

        r0.<com.google.android.gms.common.data.BitmapTeleporter: int zali> = 1;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj> = null;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: int mType> = 0;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.graphics.Bitmap zalk> = $r1;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: boolean zall> = 1;

        return;
    }

    public static void zaa(java.io.Closeable)
    {
        java.io.IOException $r1;
        java.io.Closeable $r0;

        $r0 := @parameter0: java.io.Closeable;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapTeleporter", "Could not close stream", $r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private final java.io.FileOutputStream zabx()
    {
        java.lang.IllegalStateException $r5;
        android.os.ParcelFileDescriptor $r4;
        com.google.android.gms.common.data.BitmapTeleporter r0;
        java.io.FileOutputStream $r3;
        java.io.IOException $r6;
        java.io.FileNotFoundException $r1;
        java.io.File $r2;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $r2 = r0.<com.google.android.gms.common.data.BitmapTeleporter: java.io.File zalm>;

        if $r2 == null goto label7;

     label1:
        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("teleporter", ".tmp", $r2);

     label2:
        $r3 = new java.io.FileOutputStream;

     label3:
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        $r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r2, 268435456);

     label4:
        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj> = $r4;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        return $r3;

     label5:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Temporary file is somehow already deleted");

        throw $r5;

     label6:
        $r6 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create temporary file", $r6);

        throw $r5;

     label7:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setTempDir() must be called before writing this object to a parcel");

        throw $r5;

     label8:
        $r1 := @caughtexception;

        goto label5;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.FileNotFoundException from label3 to label4 with label8;
    }

    public android.graphics.Bitmap get()
    {
        java.lang.Throwable $r9;
        java.io.DataInputStream $r1;
        byte[] $r4;
        java.lang.IllegalStateException $r11;
        android.os.ParcelFileDescriptor $r3;
        com.google.android.gms.common.data.BitmapTeleporter r0;
        java.io.IOException $r10;
        android.graphics.Bitmap$Config $r6;
        java.nio.ByteBuffer $r7;
        android.graphics.Bitmap $r8;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r2;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $z0 = r0.<com.google.android.gms.common.data.BitmapTeleporter: boolean zall>;

        if $z0 != 0 goto label9;

        $r1 = new java.io.DataInputStream;

        $r2 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        $r3 = r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj>;

        specialinvoke $r2.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r3);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

     label1:
        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

     label2:
        $r4 = newarray (byte)[$i0];

     label3:
        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        $i1 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        $r5 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r6 = staticinvoke <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config valueOf(java.lang.String)>($r5);

        virtualinvoke $r1.<java.io.DataInputStream: int read(byte[])>($r4);

     label4:
        staticinvoke <com.google.android.gms.common.data.BitmapTeleporter: void zaa(java.io.Closeable)>($r1);

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r4);

        $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r6);

        virtualinvoke $r8.<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>($r7);

        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.graphics.Bitmap zalk> = $r8;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: boolean zall> = 1;

        goto label9;

     label5:
        $r9 := @caughtexception;

        goto label8;

     label6:
        $r10 := @caughtexception;

     label7:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read from parcel file descriptor", $r10);

        throw $r11;

     label8:
        staticinvoke <com.google.android.gms.common.data.BitmapTeleporter: void zaa(java.io.Closeable)>($r1);

        throw $r9;

     label9:
        $r8 = r0.<com.google.android.gms.common.data.BitmapTeleporter: android.graphics.Bitmap zalk>;

        return $r8;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public void release()
    {
        android.os.ParcelFileDescriptor $r1;
        com.google.android.gms.common.data.BitmapTeleporter r0;
        java.io.IOException $r2;
        boolean $z0;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $z0 = r0.<com.google.android.gms.common.data.BitmapTeleporter: boolean zall>;

        if $z0 != 0 goto label4;

        $r1 = r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj>;

     label1:
        virtualinvoke $r1.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapTeleporter", "Could not close PFD", $r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setTempDir(java.io.File)
    {
        com.google.android.gms.common.data.BitmapTeleporter r0;
        java.io.File $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $r1 := @parameter0: java.io.File;

        if $r1 == null goto label1;

        r0.<com.google.android.gms.common.data.BitmapTeleporter: java.io.File zalm> = $r1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot set null temp directory");

        throw $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        java.lang.Throwable $r11;
        byte[] $r5;
        java.lang.IllegalStateException $r13;
        android.os.ParcelFileDescriptor $r2;
        android.graphics.Bitmap$Config $r9;
        android.os.Parcel $r1;
        java.nio.ByteBuffer $r4;
        java.io.BufferedOutputStream $r6;
        java.io.DataOutputStream $r8;
        int $i0, $i1, $i2;
        java.lang.String $r10;
        com.google.android.gms.common.data.BitmapTeleporter r0;
        java.io.FileOutputStream $r7;
        java.io.IOException $r12;
        android.graphics.Bitmap $r3;

        r0 := @this: com.google.android.gms.common.data.BitmapTeleporter;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj>;

        if $r2 != null goto label8;

        $r3 = r0.<com.google.android.gms.common.data.BitmapTeleporter: android.graphics.Bitmap zalk>;

        $i1 = virtualinvoke $r3.<android.graphics.Bitmap: int getRowBytes()>();

        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        $i1 = $i1 * $i2;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        virtualinvoke $r3.<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>($r4);

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        $r6 = new java.io.BufferedOutputStream;

        $r7 = specialinvoke r0.<com.google.android.gms.common.data.BitmapTeleporter: java.io.FileOutputStream zabx()>();

        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7);

        $r8 = new java.io.DataOutputStream;

        specialinvoke $r8.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

     label1:
        $i1 = lengthof $r5;

     label2:
        virtualinvoke $r8.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $i1 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        virtualinvoke $r8.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $i1 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r8.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $r9 = virtualinvoke $r3.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r10 = virtualinvoke $r9.<android.graphics.Bitmap$Config: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r10);

        virtualinvoke $r8.<java.io.DataOutputStream: void write(byte[])>($r5);

     label3:
        staticinvoke <com.google.android.gms.common.data.BitmapTeleporter: void zaa(java.io.Closeable)>($r8);

        goto label8;

     label4:
        $r11 := @caughtexception;

        goto label7;

     label5:
        $r12 := @caughtexception;

     label6:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not write into unlinked file", $r12);

        throw $r13;

     label7:
        staticinvoke <com.google.android.gms.common.data.BitmapTeleporter: void zaa(java.io.Closeable)>($r8);

        throw $r11;

     label8:
        $i1 = $i0 | 1;

        $i0 = staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int beginObjectHeader(android.os.Parcel)>($r1);

        $i2 = r0.<com.google.android.gms.common.data.BitmapTeleporter: int zali>;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeInt(android.os.Parcel,int,int)>($r1, 1, $i2);

        $r2 = r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj>;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeParcelable(android.os.Parcel,int,android.os.Parcelable,int,boolean)>($r1, 2, $r2, $i1, 0);

        $i1 = r0.<com.google.android.gms.common.data.BitmapTeleporter: int mType>;

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeInt(android.os.Parcel,int,int)>($r1, 3, $i1);

        staticinvoke <com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void finishObjectHeader(android.os.Parcel,int)>($r1, $i0);

        r0.<com.google.android.gms.common.data.BitmapTeleporter: android.os.ParcelFileDescriptor zalj> = null;

        return;

        catch java.io.IOException from label2 to label3 with label5;
        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }
}
