public class org.dom4j.bean.BeanDocumentFactory extends org.dom4j.DocumentFactory
{
    public static org.dom4j.bean.BeanDocumentFactory singleton;

    static void <clinit>()
    {
        org.dom4j.bean.BeanDocumentFactory $r0;

        $r0 = new org.dom4j.bean.BeanDocumentFactory;

        specialinvoke $r0.<org.dom4j.bean.BeanDocumentFactory: void <init>()>();

        <org.dom4j.bean.BeanDocumentFactory: org.dom4j.bean.BeanDocumentFactory singleton> = $r0;

        return;
    }

    public void <init>()
    {
        org.dom4j.bean.BeanDocumentFactory r0;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        specialinvoke r0.<org.dom4j.DocumentFactory: void <init>()>();

        return;
    }

    public static org.dom4j.DocumentFactory getInstance()
    {
        org.dom4j.bean.BeanDocumentFactory r0;

        r0 = <org.dom4j.bean.BeanDocumentFactory: org.dom4j.bean.BeanDocumentFactory singleton>;

        return r0;
    }

    public org.dom4j.Attribute createAttribute(org.dom4j.Element, org.dom4j.QName, java.lang.String)
    {
        org.dom4j.bean.BeanDocumentFactory r0;
        org.dom4j.tree.DefaultAttribute $r4;
        org.dom4j.QName $r1;
        org.dom4j.Element $r3;
        java.lang.String $r2;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        $r3 := @parameter0: org.dom4j.Element;

        $r1 := @parameter1: org.dom4j.QName;

        $r2 := @parameter2: java.lang.String;

        $r4 = new org.dom4j.tree.DefaultAttribute;

        specialinvoke $r4.<org.dom4j.tree.DefaultAttribute: void <init>(org.dom4j.QName,java.lang.String)>($r1, $r2);

        return $r4;
    }

    public java.lang.Object createBean(org.dom4j.QName)
    {
        org.dom4j.QName $r1;
        org.dom4j.bean.BeanDocumentFactory r0;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        $r1 := @parameter0: org.dom4j.QName;

        return null;
    }

    public java.lang.Object createBean(org.dom4j.QName, org.xml.sax.Attributes)
    {
        java.lang.Exception $r7;
        org.dom4j.bean.BeanDocumentFactory r0;
        org.xml.sax.Attributes $r2;
        org.dom4j.QName $r1;
        java.lang.Class $r4;
        java.lang.Object $r6;
        java.lang.String $r3;
        java.lang.ClassLoader $r5;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 := @parameter1: org.xml.sax.Attributes;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        if $r3 == null goto label4;

        $r4 = class "Lorg/dom4j/bean/BeanDocumentFactory;";

     label1:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r3, 1, $r5);

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanDocumentFactory: void handleException(java.lang.Exception)>($r7);

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.dom4j.Element createElement(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement $r2;
        org.dom4j.bean.BeanDocumentFactory r0;
        org.dom4j.QName $r1;
        java.lang.Object $r3;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        $r1 := @parameter0: org.dom4j.QName;

        $r3 = virtualinvoke r0.<org.dom4j.bean.BeanDocumentFactory: java.lang.Object createBean(org.dom4j.QName)>($r1);

        if $r3 != null goto label1;

        $r2 = new org.dom4j.bean.BeanElement;

        specialinvoke $r2.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName)>($r1);

        return $r2;

     label1:
        $r2 = new org.dom4j.bean.BeanElement;

        specialinvoke $r2.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r1, $r3);

        return $r2;
    }

    public org.dom4j.Element createElement(org.dom4j.QName, org.xml.sax.Attributes)
    {
        org.dom4j.bean.BeanElement $r2;
        org.dom4j.bean.BeanDocumentFactory r0;
        org.xml.sax.Attributes $r4;
        org.dom4j.QName $r1;
        java.lang.Object $r3;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        $r1 := @parameter0: org.dom4j.QName;

        $r4 := @parameter1: org.xml.sax.Attributes;

        $r3 = virtualinvoke r0.<org.dom4j.bean.BeanDocumentFactory: java.lang.Object createBean(org.dom4j.QName,org.xml.sax.Attributes)>($r1, $r4);

        if $r3 != null goto label1;

        $r2 = new org.dom4j.bean.BeanElement;

        specialinvoke $r2.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName)>($r1);

        return $r2;

     label1:
        $r2 = new org.dom4j.bean.BeanElement;

        specialinvoke $r2.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r1, $r3);

        return $r2;
    }

    public void handleException(java.lang.Exception)
    {
        java.io.PrintStream $r1;
        org.dom4j.bean.BeanDocumentFactory r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        $r4 := @parameter0: java.lang.Exception;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("#### Warning: couldn\'t create bean: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }
}
