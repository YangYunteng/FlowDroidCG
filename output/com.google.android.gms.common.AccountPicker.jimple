public final class com.google.android.gms.common.AccountPicker extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.gms.common.AccountPicker r0;

        r0 := @this: com.google.android.gms.common.AccountPicker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.Intent newChooseAccountIntent(android.accounts.Account, java.util.ArrayList, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)
    {
        android.os.Bundle $r4;
        android.accounts.Account $r6;
        java.lang.String[] $r0, $r3;
        android.content.Intent $r5;
        java.util.ArrayList $r7;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r6 := @parameter0: android.accounts.Account;

        $r7 := @parameter1: java.util.ArrayList;

        $r0 := @parameter2: java.lang.String[];

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: java.lang.String;

        $r2 := @parameter5: java.lang.String;

        $r3 := @parameter6: java.lang.String[];

        $r4 := @parameter7: android.os.Bundle;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>()>();

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>(1, "We only support hostedDomain filter for account chip styled account picker");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.google.android.gms.common.account.CHOOSE_ACCOUNT");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.google.android.gms");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("allowableAccounts", $r7);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("allowableAccountTypes", $r0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("addAccountOptions", $r4);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("selectedAccount", $r6);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("alwaysPromptForAccount", $z0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("descriptionTextOverride", $r1);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("authTokenType", $r2);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("addAccountRequiredFeatures", $r3);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("setGmsCoreAccount", 0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideTheme", 0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideCustomTheme", 0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("hostedDomainFilter", null);

        return $r5;
    }

    public static android.content.Intent newChooseAccountIntent(com.google.android.gms.common.AccountPicker$AccountChooserOptions)
    {
        java.lang.Object[] $r6;
        android.os.Bundle $r7;
        android.accounts.Account $r8;
        com.google.android.gms.common.AccountPicker$AccountChooserOptions $r1;
        android.content.Intent $r0;
        java.lang.String[] $r5;
        java.util.ArrayList $r4;
        byte $b0;
        int $i1;
        java.lang.String $r2;
        com.google.android.gms.common.AccountPicker$AccountChooserOptions$zza $r3;
        boolean $z0;

        $r1 := @parameter0: com.google.android.gms.common.AccountPicker$AccountChooserOptions;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>()>();

        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zza(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        $b0 = 0;

        if $z0 != 0 goto label05;

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzb(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $r2 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "We only support hostedDomain filter for account chip styled account picker");

        $r3 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: com.google.android.gms.common.AccountPicker$AccountChooserOptions$zza zzc(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $r3 != null goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Consent is only valid for account chip styled account picker");

     label05:
        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zza(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $z0 == 0 goto label06;

        $r2 = "com.google.android.gms.common.account.CHOOSE_ACCOUNT_USERTILE";

        goto label07;

     label06:
        $r2 = "com.google.android.gms.common.account.CHOOSE_ACCOUNT";

     label07:
        virtualinvoke $r0.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r2);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.google.android.gms");

        $r4 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzd(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("allowableAccounts", $r4);

        $r4 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zze(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $r4 == null goto label08;

        $r4 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zze(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        $r5 = newarray (java.lang.String)[0];

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (java.lang.String[]) $r6;

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("allowableAccountTypes", $r5);

     label08:
        $r7 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.os.Bundle zzf(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("addAccountOptions", $r7);

        $r8 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.accounts.Account zzg(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("selectedAccount", $r8);

        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzh(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("alwaysPromptForAccount", $z0);

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzi(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("descriptionTextOverride", $r2);

        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzj(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("setGmsCoreAccount", $z0);

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzk(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("realClientPackage", $r2);

        $i1 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: int zzl(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideTheme", $i1);

        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zza(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $z0 == 0 goto label09;

        $b0 = 2;

     label09:
        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideCustomTheme", $b0);

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzb(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("hostedDomainFilter", $r2);

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zza(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $z0 == 0 goto label10;

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzi(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label10;

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzi(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("title", $r2);

     label10:
        $r3 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: com.google.android.gms.common.AccountPicker$AccountChooserOptions$zza zzc(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $r3 == null goto label11;

        virtualinvoke $r7.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("should_show_consent", 1);

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("privacy_policy_url", null);

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("terms_of_service_url", null);

     label11:
        $z0 = virtualinvoke $r7.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label12;

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("first_party_options_bundle", $r7);

     label12:
        return $r0;
    }
}
