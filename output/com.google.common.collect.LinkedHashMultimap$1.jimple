public class com.google.common.collect.LinkedHashMultimap$1 extends java.lang.Object implements java.util.Iterator
{
    public com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry;
    public final com.google.common.collect.LinkedHashMultimap this$0;
    public com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove;

    public void <init>(com.google.common.collect.LinkedHashMultimap)
    {
        com.google.common.collect.LinkedHashMultimap$1 r0;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1;
        com.google.common.collect.LinkedHashMultimap $r2;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$1;

        $r2 := @parameter0: com.google.common.collect.LinkedHashMultimap;

        r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap this$0> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap this$0>;

        $r1 = staticinvoke <com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap)>($r2);

        $r1 = $r1.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry successorInMultimap>;

        r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry> = $r1;

        return;
    }

    public boolean hasNext()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1, $r2;
        com.google.common.collect.LinkedHashMultimap$1 r0;
        com.google.common.collect.LinkedHashMultimap $r3;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$1;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry>;

        $r3 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap this$0>;

        $r1 = staticinvoke <com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap)>($r3);

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile java.lang.Object next()
    {
        com.google.common.collect.LinkedHashMultimap$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$1;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap$1: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1, $r2;
        com.google.common.collect.LinkedHashMultimap$1 r0;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$1;

        $z0 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap$1: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry>;

        r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove> = $r2;

        $r1 = $r2.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry successorInMultimap>;

        r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry> = $r1;

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public void remove()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1;
        com.google.common.collect.LinkedHashMultimap$1 r0;
        java.lang.Object $r3, $r4;
        com.google.common.collect.LinkedHashMultimap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap$1;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>($z0);

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap this$0>;

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove>;

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>();

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove>;

        $r4 = virtualinvoke $r1.<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>();

        virtualinvoke $r2.<com.google.common.collect.LinkedHashMultimap: boolean remove(java.lang.Object,java.lang.Object)>($r3, $r4);

        r0.<com.google.common.collect.LinkedHashMultimap$1: com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove> = null;

        return;
    }
}
