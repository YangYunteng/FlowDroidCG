public final class com.google.android.material.textfield.IndicatorViewController extends java.lang.Object
{
    public static final int CAPTION_OPACITY_FADE_ANIMATION_DURATION;
    public static final int CAPTION_STATE_ERROR;
    public static final int CAPTION_STATE_HELPER_TEXT;
    public static final int CAPTION_STATE_NONE;
    public static final int CAPTION_TRANSLATE_Y_ANIMATION_DURATION;
    public static final int COUNTER_INDEX;
    public static final int ERROR_INDEX;
    public static final int HELPER_INDEX;
    public android.animation.Animator captionAnimator;
    public android.widget.FrameLayout captionArea;
    public int captionDisplayed;
    public int captionToShow;
    public final float captionTranslationYPx;
    public int captionViewsAdded;
    public final android.content.Context context;
    public boolean errorEnabled;
    public java.lang.CharSequence errorText;
    public int errorTextAppearance;
    public android.widget.TextView errorView;
    public java.lang.CharSequence errorViewContentDescription;
    public android.content.res.ColorStateList errorViewTextColor;
    public java.lang.CharSequence helperText;
    public boolean helperTextEnabled;
    public int helperTextTextAppearance;
    public android.widget.TextView helperTextView;
    public android.content.res.ColorStateList helperTextViewTextColor;
    public android.widget.LinearLayout indicatorArea;
    public int indicatorsAdded;
    public final com.google.android.material.textfield.TextInputLayout textInputView;
    public android.graphics.Typeface typeface;

    public void <init>(com.google.android.material.textfield.TextInputLayout)
    {
        android.content.Context $r2;
        com.google.android.material.textfield.TextInputLayout $r1;
        int $i0;
        float $f0;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.content.res.Resources $r3;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.content.Context getContext()>();

        r0.<com.google.android.material.textfield.IndicatorViewController: android.content.Context context> = $r2;

        r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView> = $r1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int design_textinput_caption_translate_y>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $f0 = (float) $i0;

        r0.<com.google.android.material.textfield.IndicatorViewController: float captionTranslationYPx> = $f0;

        return;
    }

    public static int access$002(com.google.android.material.textfield.IndicatorViewController, int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController $r0;

        $r0 := @parameter0: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter1: int;

        $r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed> = $i0;

        return $i0;
    }

    public static android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController, android.animation.Animator)
    {
        com.google.android.material.textfield.IndicatorViewController $r0;
        android.animation.Animator $r1;

        $r0 := @parameter0: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter1: android.animation.Animator;

        $r0.<com.google.android.material.textfield.IndicatorViewController: android.animation.Animator captionAnimator> = $r1;

        return $r1;
    }

    public static android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
    {
        com.google.android.material.textfield.IndicatorViewController $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.google.android.material.textfield.IndicatorViewController;

        r1 = $r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        return r1;
    }

    private boolean canAdjustIndicatorPadding()
    {
        android.widget.LinearLayout $r2;
        com.google.android.material.textfield.TextInputLayout $r3;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.EditText $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        if $r2 == null goto label1;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $r1 = virtualinvoke $r3.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void createCaptionAnimators(java.util.List, boolean, android.widget.TextView, int, int, int)
    {
        android.animation.ObjectAnimator $r3;
        java.util.List $r1;
        android.widget.TextView $r2;
        int $i0, $i1, $i2;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: android.widget.TextView;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        if $r2 == null goto label5;

        if $z0 != 0 goto label1;

        return;

     label1:
        if $i0 == $i2 goto label2;

        if $i0 != $i1 goto label5;

     label2:
        if $i2 != $i0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r3 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)>($r2, $z0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        if $i2 != $i0 goto label5;

        $r3 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)>($r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label5:
        return;
    }

    private android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView, boolean)
    {
        android.animation.TimeInterpolator $r5;
        android.animation.ObjectAnimator $r1;
        float[] $r4;
        android.util.Property $r3;
        android.widget.TextView $r2;
        float $f0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 := @parameter0: android.widget.TextView;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $f0 = 1.0F;

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        $r3 = <android.view.View: android.util.Property ALPHA>;

        $r4 = newarray (float)[1];

        $r4[0] = $f0;

        $r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r2, $r3, $r4);

        virtualinvoke $r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(167L);

        $r5 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        return $r1;
    }

    private android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    {
        android.animation.TimeInterpolator $r5;
        android.widget.TextView $r2;
        android.animation.ObjectAnimator $r1;
        float $f0;
        float[] $r4;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.util.Property $r3;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 := @parameter0: android.widget.TextView;

        $r3 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r4 = newarray (float)[2];

        $f0 = r0.<com.google.android.material.textfield.IndicatorViewController: float captionTranslationYPx>;

        $f0 = neg $f0;

        $r4[0] = $f0;

        $f0 = 0.0F;

        $r4[1] = $f0;

        $r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r2, $r3, $r4);

        virtualinvoke $r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(217L);

        $r5 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        return $r1;
    }

    private android.widget.TextView getCaptionViewFromDisplayState(int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        return null;

     label1:
        r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        return r1;

     label2:
        r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        return r1;
    }

    private boolean isCaptionStateError(int)
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isCaptionStateHelperText(int)
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        if $i0 != 2 goto label1;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence helperText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setCaptionViewVisibilities(int, int)
    {
        android.widget.TextView $r1;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        if $i1 != $i0 goto label1;

        return;

     label1:
        if $i0 == 0 goto label2;

        $r1 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>($i0);

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(0);

        virtualinvoke $r1.<android.widget.TextView: void setAlpha(float)>(1.0F);

     label2:
        if $i1 == 0 goto label3;

        $r1 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>($i1);

        if $r1 == null goto label3;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(4);

        if $i1 != 1 goto label3;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>(null);

     label3:
        r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed> = $i0;

        return;
    }

    private void setTextViewTypeface(android.widget.TextView, android.graphics.Typeface)
    {
        android.graphics.Typeface $r2;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.graphics.Typeface;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r2);

     label1:
        return;
    }

    private void setViewGroupGoneIfEmpty(android.view.ViewGroup, int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.view.ViewGroup $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        if $i0 != 0 goto label1;

        virtualinvoke $r1.<android.view.ViewGroup: void setVisibility(int)>(8);

     label1:
        return;
    }

    private boolean shouldAnimateCaptionView(android.widget.TextView, java.lang.CharSequence)
    {
        java.lang.CharSequence $r1, $r4;
        com.google.android.material.textfield.TextInputLayout $r3;
        android.widget.TextView $r2;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 := @parameter0: android.widget.TextView;

        $r1 := @parameter1: java.lang.CharSequence;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $z0 = staticinvoke <b.i.i.y: boolean E(android.view.View)>($r3);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $z0 = virtualinvoke $r3.<android.widget.LinearLayout: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $i1 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        if $i1 != $i0 goto label1;

        if $r2 == null goto label1;

        $r4 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r1);

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void updateCaptionViewsVisibility(int, int, boolean)
    {
        com.google.android.material.textfield.TextInputLayout $r6;
        java.util.ArrayList $r2;
        android.widget.TextView $r3, $r4;
        com.google.android.material.textfield.IndicatorViewController$1 $r5;
        int $i0, $i1;
        android.animation.AnimatorSet $r1;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $i0 != $i1 goto label1;

        return;

     label1:
        if $z0 == 0 goto label2;

        $r1 = new android.animation.AnimatorSet;

        specialinvoke $r1.<android.animation.AnimatorSet: void <init>()>();

        r0.<com.google.android.material.textfield.IndicatorViewController: android.animation.Animator captionAnimator> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $z1 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean helperTextEnabled>;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int)>($r2, $z1, $r3, 2, $i0, $i1);

        $z1 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean errorEnabled>;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int)>($r2, $z1, $r3, 1, $i0, $i1);

        staticinvoke <com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>($r1, $r2);

        $r3 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>($i0);

        $r4 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>($i1);

        $r5 = new com.google.android.material.textfield.IndicatorViewController$1;

        specialinvoke $r5.<com.google.android.material.textfield.IndicatorViewController$1: void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView)>(r0, $i1, $r3, $i0, $r4);

        virtualinvoke $r1.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r5);

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        goto label3;

     label2:
        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setCaptionViewVisibilities(int,int)>($i0, $i1);

     label3:
        $r6 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r6.<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>();

        $r6 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r6.<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>($z0);

        $r6 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r6.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

        return;
    }

    public void addIndicator(android.widget.TextView, int)
    {
        android.content.Context $r4;
        android.widget.LinearLayout $r2, $r7;
        com.google.android.material.textfield.TextInputLayout $r5;
        android.widget.FrameLayout $r3, $r8;
        android.widget.TextView $r1;
        int $i0, $i1, $i2;
        android.widget.LinearLayout$LayoutParams $r9;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.EditText $r6;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        if $r2 != null goto label1;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea>;

        if $r3 != null goto label1;

        $r7 = new android.widget.LinearLayout;

        $r4 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.Context context>;

        specialinvoke $r7.<android.widget.LinearLayout: void <init>(android.content.Context)>($r4);

        r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea> = $r7;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r5 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $i1 = -1;

        $i2 = -2;

        virtualinvoke $r5.<android.widget.LinearLayout: void addView(android.view.View,int,int)>($r2, $i1, $i2);

        $r8 = new android.widget.FrameLayout;

        $r4 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.Context context>;

        specialinvoke $r8.<android.widget.FrameLayout: void <init>(android.content.Context)>($r4);

        r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea> = $r8;

        $r9 = new android.widget.LinearLayout$LayoutParams;

        $i1 = -2;

        specialinvoke $r9.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(0, $i1, 1.0F);

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r9);

        $r5 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $r6 = virtualinvoke $r5.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        if $r6 == null goto label1;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void adjustIndicatorPadding()>();

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionView(int)>($i0);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r3.<android.widget.FrameLayout: void setVisibility(int)>(0);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r3.<android.widget.FrameLayout: void addView(android.view.View)>($r1);

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionViewsAdded>;

        $i0 = $i0 + 1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int captionViewsAdded> = $i0;

        goto label3;

     label2:
        $r9 = new android.widget.LinearLayout$LayoutParams;

        $i0 = -2;

        $i1 = -2;

        specialinvoke $r9.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r9);

     label3:
        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int indicatorsAdded>;

        $i0 = $i0 + 1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int indicatorsAdded> = $i0;

        return;
    }

    public void adjustIndicatorPadding()
    {
        android.widget.LinearLayout $r1;
        com.google.android.material.textfield.TextInputLayout $r2;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.EditText $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean canAdjustIndicatorPadding()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $r3 = virtualinvoke $r2.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        $i0 = staticinvoke <b.i.i.y: int u(android.view.View)>($r3);

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        $r3 = virtualinvoke $r2.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        $i1 = staticinvoke <b.i.i.y: int t(android.view.View)>($r3);

        staticinvoke <b.i.i.y: void b(android.view.View,int,int,int,int)>($r1, $i0, 0, $i1, 0);

     label1:
        return;
    }

    public void cancelCaptionAnimator()
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        android.animation.Animator $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.animation.Animator captionAnimator>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.animation.Animator: void cancel()>();

     label1:
        return;
    }

    public boolean errorIsDisplayed()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionStateError(int)>($i0);

        return $z0;
    }

    public boolean errorShouldBeShown()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionStateError(int)>($i0);

        return $z0;
    }

    public java.lang.CharSequence getErrorContentDescription()
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        java.lang.CharSequence r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        r1 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorViewContentDescription>;

        return r1;
    }

    public java.lang.CharSequence getErrorText()
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        java.lang.CharSequence r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        r1 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorText>;

        return r1;
    }

    public int getErrorViewCurrentTextColor()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getCurrentTextColor()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public android.content.res.ColorStateList getErrorViewTextColors()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r2;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        return $r1;

     label1:
        return null;
    }

    public java.lang.CharSequence getHelperText()
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        java.lang.CharSequence r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        r1 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence helperText>;

        return r1;
    }

    public android.content.res.ColorStateList getHelperTextViewColors()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r2;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        return $r1;

     label1:
        return null;
    }

    public int getHelperTextViewCurrentTextColor()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getCurrentTextColor()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public boolean helperTextIsDisplayed()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionStateHelperText(int)>($i0);

        return $z0;
    }

    public boolean helperTextShouldBeShown()
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionStateHelperText(int)>($i0);

        return $z0;
    }

    public void hideError()
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorText> = null;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>();

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        if $i0 != 1 goto label2;

        $z0 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean helperTextEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence helperText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow> = 2;

        goto label2;

     label1:
        r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow> = 0;

     label2:
        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        $i1 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r1, null);

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i0, $i1, $z0);

        return;
    }

    public void hideHelperText()
    {
        android.widget.TextView $r1;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>();

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        if $i0 != 2 goto label1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow> = 0;

     label1:
        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        $i1 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r1, null);

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i0, $i1, $z0);

        return;
    }

    public boolean isCaptionView(int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isErrorEnabled()
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        z0 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean errorEnabled>;

        return z0;
    }

    public boolean isHelperTextEnabled()
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        z0 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean helperTextEnabled>;

        return z0;
    }

    public void removeIndicator(android.widget.TextView, int)
    {
        android.widget.LinearLayout $r2;
        android.widget.TextView $r1;
        int $i0, $i1;
        android.widget.FrameLayout $r3;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionView(int)>($i0);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea>;

        if $r3 == null goto label2;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionViewsAdded>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int captionViewsAdded> = $i0;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionViewsAdded>;

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)>($r3, $i0);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.FrameLayout captionArea>;

        virtualinvoke $r3.<android.widget.FrameLayout: void removeView(android.view.View)>($r1);

        goto label3;

     label2:
        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void removeView(android.view.View)>($r1);

     label3:
        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int indicatorsAdded>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int indicatorsAdded> = $i0;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.LinearLayout indicatorArea>;

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int indicatorsAdded>;

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)>($r2, $i0);

        return;
    }

    public void setErrorContentDescription(java.lang.CharSequence)
    {
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r2;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorViewContentDescription> = $r1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>($r1);

     label1:
        return;
    }

    public void setErrorEnabled(boolean)
    {
        androidx.appcompat.widget.AppCompatTextView $r1;
        android.graphics.Typeface $r4;
        android.content.Context $r2;
        java.lang.CharSequence $r6;
        com.google.android.material.textfield.TextInputLayout $r7;
        android.content.res.ColorStateList $r5;
        android.widget.TextView $r3;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean errorEnabled>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>();

        if $z0 == 0 goto label4;

        $r1 = new androidx.appcompat.widget.AppCompatTextView;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.Context context>;

        specialinvoke $r1.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r2);

        r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView> = $r1;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        $i0 = <com.google.android.material.R$id: int textinput_error>;

        virtualinvoke $r3.<android.widget.TextView: void setId(int)>($i0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label2;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r3.<android.widget.TextView: void setTextAlignment(int)>(5);

     label2:
        $r4 = r0.<com.google.android.material.textfield.IndicatorViewController: android.graphics.Typeface typeface>;

        if $r4 == null goto label3;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r3.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r4);

     label3:
        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int errorTextAppearance>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>($i0);

        $r5 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList errorViewTextColor>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setErrorViewTextColor(android.content.res.ColorStateList)>($r5);

        $r6 = r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorViewContentDescription>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setErrorContentDescription(java.lang.CharSequence)>($r6);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(4);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        staticinvoke <b.i.i.y: void g(android.view.View,int)>($r3, 1);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void addIndicator(android.widget.TextView,int)>($r3, 0);

        goto label5;

     label4:
        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void hideError()>();

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>($r3, 0);

        r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView> = null;

        $r7 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r7.<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>();

        $r7 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r7.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

     label5:
        r0.<com.google.android.material.textfield.IndicatorViewController: boolean errorEnabled> = $z0;

        return;
    }

    public void setErrorTextAppearance(int)
    {
        android.widget.TextView $r1;
        com.google.android.material.textfield.TextInputLayout $r2;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.textfield.IndicatorViewController: int errorTextAppearance> = $i0;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r2.<com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>($r1, $i0);

     label1:
        return;
    }

    public void setErrorViewTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r2;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList errorViewTextColor> = $r1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setHelperTextAppearance(int)
    {
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.textfield.IndicatorViewController: int helperTextTextAppearance> = $i0;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r1 == null goto label1;

        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r1, $i0);

     label1:
        return;
    }

    public void setHelperTextEnabled(boolean)
    {
        androidx.appcompat.widget.AppCompatTextView $r1;
        android.graphics.Typeface $r4;
        android.content.Context $r2;
        com.google.android.material.textfield.TextInputLayout $r6;
        android.content.res.ColorStateList $r5;
        android.widget.TextView $r3;
        int $i0;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.textfield.IndicatorViewController: boolean helperTextEnabled>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>();

        if $z0 == 0 goto label4;

        $r1 = new androidx.appcompat.widget.AppCompatTextView;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.Context context>;

        specialinvoke $r1.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r2);

        r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView> = $r1;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        $i0 = <com.google.android.material.R$id: int textinput_helper_text>;

        virtualinvoke $r3.<android.widget.TextView: void setId(int)>($i0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label2;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setTextAlignment(int)>(5);

     label2:
        $r4 = r0.<com.google.android.material.textfield.IndicatorViewController: android.graphics.Typeface typeface>;

        if $r4 == null goto label3;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r4);

     label3:
        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(4);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        staticinvoke <b.i.i.y: void g(android.view.View,int)>($r3, 1);

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int helperTextTextAppearance>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setHelperTextAppearance(int)>($i0);

        $r5 = r0.<com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList helperTextViewTextColor>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setHelperTextViewTextColor(android.content.res.ColorStateList)>($r5);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void addIndicator(android.widget.TextView,int)>($r3, 1);

        goto label5;

     label4:
        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>();

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>($r3, 1);

        r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView> = null;

        $r6 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r6.<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>();

        $r6 = r0.<com.google.android.material.textfield.IndicatorViewController: com.google.android.material.textfield.TextInputLayout textInputView>;

        virtualinvoke $r6.<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>();

     label5:
        r0.<com.google.android.material.textfield.IndicatorViewController: boolean helperTextEnabled> = $z0;

        return;
    }

    public void setHelperTextViewTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.textfield.IndicatorViewController r0;
        android.widget.TextView $r2;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList helperTextViewTextColor> = $r1;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setTypefaces(android.graphics.Typeface)
    {
        android.graphics.Typeface $r1, $r2;
        android.widget.TextView $r3;
        com.google.android.material.textfield.IndicatorViewController r0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<com.google.android.material.textfield.IndicatorViewController: android.graphics.Typeface typeface>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.textfield.IndicatorViewController: android.graphics.Typeface typeface> = $r1;

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)>($r3, $r1);

        $r3 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)>($r3, $r1);

     label1:
        return;
    }

    public void showError(java.lang.CharSequence)
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>();

        r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence errorText> = $r2;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        if $i0 == 1 goto label1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow> = 1;

     label1:
        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        $i1 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView errorView>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r1, $r2);

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i0, $i1, $z0);

        return;
    }

    public void showHelper(java.lang.CharSequence)
    {
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1;
        com.google.android.material.textfield.IndicatorViewController r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.IndicatorViewController;

        $r2 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>();

        r0.<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence helperText> = $r2;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        if $i0 == 2 goto label1;

        r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow> = 2;

     label1:
        $i0 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionDisplayed>;

        $i1 = r0.<com.google.android.material.textfield.IndicatorViewController: int captionToShow>;

        $r1 = r0.<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView helperTextView>;

        $z0 = specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>($r1, $r2);

        specialinvoke r0.<com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>($i0, $i1, $z0);

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.textfield.IndicatorViewController: int HELPER_INDEX> = 1;

        <com.google.android.material.textfield.IndicatorViewController: int ERROR_INDEX> = 0;

        <com.google.android.material.textfield.IndicatorViewController: int COUNTER_INDEX> = 2;

        <com.google.android.material.textfield.IndicatorViewController: int CAPTION_TRANSLATE_Y_ANIMATION_DURATION> = 217;

        <com.google.android.material.textfield.IndicatorViewController: int CAPTION_STATE_NONE> = 0;

        <com.google.android.material.textfield.IndicatorViewController: int CAPTION_STATE_HELPER_TEXT> = 2;

        <com.google.android.material.textfield.IndicatorViewController: int CAPTION_STATE_ERROR> = 1;

        <com.google.android.material.textfield.IndicatorViewController: int CAPTION_OPACITY_FADE_ANIMATION_DURATION> = 167;

        return;
    }
}
