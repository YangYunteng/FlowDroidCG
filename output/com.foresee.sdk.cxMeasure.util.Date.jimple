public class com.foresee.sdk.cxMeasure.util.Date extends java.util.Date
{

    public void <init>()
    {
        long $l0;
        com.foresee.sdk.cxMeasure.util.Date r0;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<java.util.Date: void <init>(long)>($l0);

        return;
    }

    public void <init>(long)
    {
        long $l0;
        com.foresee.sdk.cxMeasure.util.Date r0;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $l0 := @parameter0: long;

        specialinvoke r0.<java.util.Date: void <init>(long)>($l0);

        return;
    }

    public void <init>(java.util.Date)
    {
        long $l0;
        com.foresee.sdk.cxMeasure.util.Date r0;
        java.util.Date $r1;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $r1 := @parameter0: java.util.Date;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        specialinvoke r0.<java.util.Date: void <init>(long)>($l0);

        return;
    }

    public void addDays(int)
    {
        com.foresee.sdk.cxMeasure.util.Date r0;
        int $i1;
        long $l0, $l2;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $i1 := @parameter0: int;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $i1 = $i1 * 86400000;

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        virtualinvoke r0.<java.util.Date: void setTime(long)>($l0);

        return;
    }

    public void addMinutes(int)
    {
        com.foresee.sdk.cxMeasure.util.Date r0;
        int $i1, $i3;
        long $l0, $l2;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $i1 := @parameter0: int;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $i3 = 60000;

        $i1 = $i1 * $i3;

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        virtualinvoke r0.<java.util.Date: void setTime(long)>($l0);

        return;
    }

    public java.util.Date getJavaDate()
    {
        long $l0;
        com.foresee.sdk.cxMeasure.util.Date r0;
        java.util.Date $r1;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $r1 = new java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        return $r1;
    }

    public boolean isAfter(java.util.Date)
    {
        com.foresee.sdk.cxMeasure.util.Date r0;
        byte $b2;
        java.util.Date $r1;
        int $i3;
        long $l0, $l1;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $r1 := @parameter0: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void subtractDays(int)
    {
        int $i0;
        com.foresee.sdk.cxMeasure.util.Date r0;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $i0 := @parameter0: int;

        $i0 = neg $i0;

        virtualinvoke r0.<com.foresee.sdk.cxMeasure.util.Date: void addDays(int)>($i0);

        return;
    }

    public void subtractMinutes(int)
    {
        int $i0;
        com.foresee.sdk.cxMeasure.util.Date r0;

        r0 := @this: com.foresee.sdk.cxMeasure.util.Date;

        $i0 := @parameter0: int;

        $i0 = neg $i0;

        virtualinvoke r0.<com.foresee.sdk.cxMeasure.util.Date: void addMinutes(int)>($i0);

        return;
    }
}
