public class com.google.common.collect.Iterators$MergingIterator$1 extends java.lang.Object implements java.util.Comparator
{
    public final com.google.common.collect.Iterators$MergingIterator this$0;
    public final java.util.Comparator val$itemComparator;

    public void <init>(com.google.common.collect.Iterators$MergingIterator, java.util.Comparator)
    {
        com.google.common.collect.Iterators$MergingIterator $r1;
        java.util.Comparator $r2;
        com.google.common.collect.Iterators$MergingIterator$1 r0;

        r0 := @this: com.google.common.collect.Iterators$MergingIterator$1;

        $r1 := @parameter0: com.google.common.collect.Iterators$MergingIterator;

        $r2 := @parameter1: java.util.Comparator;

        r0.<com.google.common.collect.Iterators$MergingIterator$1: com.google.common.collect.Iterators$MergingIterator this$0> = $r1;

        r0.<com.google.common.collect.Iterators$MergingIterator$1: java.util.Comparator val$itemComparator> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.google.common.collect.PeekingIterator, com.google.common.collect.PeekingIterator)
    {
        int $i0;
        java.lang.Object $r4, $r5;
        java.util.Comparator $r1;
        com.google.common.collect.Iterators$MergingIterator$1 r0;
        com.google.common.collect.PeekingIterator $r2, $r3;

        r0 := @this: com.google.common.collect.Iterators$MergingIterator$1;

        $r2 := @parameter0: com.google.common.collect.PeekingIterator;

        $r3 := @parameter1: com.google.common.collect.PeekingIterator;

        $r1 = r0.<com.google.common.collect.Iterators$MergingIterator$1: java.util.Comparator val$itemComparator>;

        $r4 = interfaceinvoke $r2.<com.google.common.collect.PeekingIterator: java.lang.Object peek()>();

        $r5 = interfaceinvoke $r3.<com.google.common.collect.PeekingIterator: java.lang.Object peek()>();

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Iterators$MergingIterator$1 r0;
        com.google.common.collect.PeekingIterator $r3, $r4;

        r0 := @this: com.google.common.collect.Iterators$MergingIterator$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.google.common.collect.PeekingIterator) $r1;

        $r4 = (com.google.common.collect.PeekingIterator) $r2;

        $i0 = virtualinvoke r0.<com.google.common.collect.Iterators$MergingIterator$1: int compare(com.google.common.collect.PeekingIterator,com.google.common.collect.PeekingIterator)>($r3, $r4);

        return $i0;
    }
}
