public class com.google.android.material.internal.BaselineLayout extends android.view.ViewGroup
{
    public int baseline;

    public void <init>(android.content.Context)
    {
        int $i0;
        android.content.Context $r1;
        com.google.android.material.internal.BaselineLayout r0;

        r0 := @this: com.google.android.material.internal.BaselineLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        $i0 = -1;

        r0.<com.google.android.material.internal.BaselineLayout: int baseline> = $i0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        android.util.AttributeSet $r1;
        int $i0;
        com.google.android.material.internal.BaselineLayout r0;

        r0 := @this: com.google.android.material.internal.BaselineLayout;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r1, 0);

        $i0 = -1;

        r0.<com.google.android.material.internal.BaselineLayout: int baseline> = $i0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2;
        android.util.AttributeSet $r1;
        int $i0;
        com.google.android.material.internal.BaselineLayout r0;

        r0 := @this: com.google.android.material.internal.BaselineLayout;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r1, $i0);

        $i0 = -1;

        r0.<com.google.android.material.internal.BaselineLayout: int baseline> = $i0;

        return;
    }

    public int getBaseline()
    {
        int i0;
        com.google.android.material.internal.BaselineLayout r0;

        r0 := @this: com.google.android.material.internal.BaselineLayout;

        i0 = r0.<com.google.android.material.internal.BaselineLayout: int baseline>;

        return i0;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        com.google.android.material.internal.BaselineLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.BaselineLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i0 = $i2 - $i0;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i0 = $i0 - $i2;

        $i0 = $i0 - $i3;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i4 = 0;

     label1:
        if $i4 >= $i1 goto label6;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i5 != 8 goto label2;

        goto label5;

     label2:
        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i7 = $i0 - $i6;

        $i7 = $i7 / 2;

        $i7 = $i7 + $i3;

        $i8 = r0.<com.google.android.material.internal.BaselineLayout: int baseline>;

        $i9 = -1;

        if $i8 == $i9 goto label3;

        $i8 = virtualinvoke $r1.<android.view.View: int getBaseline()>();

        $i9 = -1;

        if $i8 == $i9 goto label3;

        $i8 = r0.<com.google.android.material.internal.BaselineLayout: int baseline>;

        $i8 = $i8 + $i2;

        $i9 = virtualinvoke $r1.<android.view.View: int getBaseline()>();

        $i8 = $i8 - $i9;

        goto label4;

     label3:
        $i8 = $i2;

     label4:
        $i6 = $i6 + $i7;

        $i5 = $i5 + $i8;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i7, $i8, $i6, $i5);

     label5:
        $i4 = $i4 + 1;

        goto label1;

     label6:
        return;
    }

    public void onMeasure(int, int)
    {
        com.google.android.material.internal.BaselineLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.View $r1;

        r0 := @this: com.google.android.material.internal.BaselineLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i3 = 0;

        $i4 = -1;

        $i5 = -1;

        $i6 = 0;

        $i7 = 0;

        $i8 = 0;

     label1:
        if $i3 >= $i2 goto label5;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i9 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i9 != 8 goto label2;

        goto label4;

     label2:
        virtualinvoke r0.<android.view.ViewGroup: void measureChild(android.view.View,int,int)>($r1, $i0, $i1);

        $i9 = virtualinvoke $r1.<android.view.View: int getBaseline()>();

        $i10 = -1;

        if $i9 == $i10 goto label3;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i9);

        $i10 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i9 = $i10 - $i9;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i9);

     label3:
        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i9);

        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i9);

        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredState()>();

        $i8 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i8, $i9);

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        $i2 = -1;

        if $i4 == $i2 goto label6;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i2);

        $i2 = $i2 + $i4;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i2);

        r0.<com.google.android.material.internal.BaselineLayout: int baseline> = $i4;

     label6:
        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumHeight()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i4);

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumWidth()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i7, $i0, $i8);

        $i8 = $i8 << 16;

        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i4, $i1, $i8);

        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
}
