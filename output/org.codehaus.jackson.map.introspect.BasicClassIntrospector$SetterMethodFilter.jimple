public class org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter extends java.lang.Object implements org.codehaus.jackson.map.introspect.MethodFilter
{

    public void <init>()
    {
        org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter r0;

        r0 := @this: org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean includeMethod(java.lang.reflect.Method)
    {
        org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter r0;
        int $i0;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter;

        $r1 := @parameter0: java.lang.reflect.Method;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label2;

        return 0;

     label2:
        return 1;
    }
}
