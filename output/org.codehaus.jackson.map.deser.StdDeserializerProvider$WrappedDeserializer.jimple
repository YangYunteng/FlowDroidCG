public final class org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer extends org.codehaus.jackson.map.JsonDeserializer
{
    public final org.codehaus.jackson.map.JsonDeserializer _deserializer;
    public final org.codehaus.jackson.map.TypeDeserializer _typeDeserializer;

    public void <init>(org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r1;
        org.codehaus.jackson.map.JsonDeserializer $r2;
        org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.TypeDeserializer;

        $r2 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.JsonDeserializer: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: org.codehaus.jackson.map.TypeDeserializer _typeDeserializer> = $r1;

        r0.<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: org.codehaus.jackson.map.JsonDeserializer _deserializer> = $r2;

        return;
    }

    public java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.TypeDeserializer $r3;
        org.codehaus.jackson.map.JsonDeserializer $r2;
        java.lang.Object $r4;
        org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r5;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer;

        $r5 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = r0.<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: org.codehaus.jackson.map.JsonDeserializer _deserializer>;

        $r3 = r0.<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: org.codehaus.jackson.map.TypeDeserializer _typeDeserializer>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r5, $r1, $r3);

        return $r4;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r1;
        java.lang.IllegalStateException $r4;
        org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer r0;
        org.codehaus.jackson.JsonParser $r2;
        org.codehaus.jackson.map.DeserializationContext $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Type-wrapped deserializer\'s deserializeWithType should never get called");

        throw $r4;
    }
}
