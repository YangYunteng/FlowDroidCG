public final class com.google.common.graph.Traverser$TreeTraverser extends com.google.common.graph.Traverser
{
    public final com.google.common.graph.SuccessorsFunction tree;

    public void <init>(com.google.common.graph.SuccessorsFunction)
    {
        com.google.common.graph.Traverser$TreeTraverser r0;
        com.google.common.graph.SuccessorsFunction $r1;

        r0 := @this: com.google.common.graph.Traverser$TreeTraverser;

        $r1 := @parameter0: com.google.common.graph.SuccessorsFunction;

        specialinvoke r0.<com.google.common.graph.Traverser: void <init>(com.google.common.graph.Traverser$1)>(null);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.graph.Traverser$TreeTraverser: com.google.common.graph.SuccessorsFunction tree> = $r1;

        return;
    }

    public static com.google.common.graph.SuccessorsFunction access$200(com.google.common.graph.Traverser$TreeTraverser)
    {
        com.google.common.graph.Traverser$TreeTraverser $r0;
        com.google.common.graph.SuccessorsFunction r1;

        $r0 := @parameter0: com.google.common.graph.Traverser$TreeTraverser;

        r1 = $r0.<com.google.common.graph.Traverser$TreeTraverser: com.google.common.graph.SuccessorsFunction tree>;

        return r1;
    }

    private void checkThatNodeIsInTree(java.lang.Object)
    {
        com.google.common.graph.Traverser$TreeTraverser r0;
        java.lang.Object $r1;
        com.google.common.graph.SuccessorsFunction $r2;

        r0 := @this: com.google.common.graph.Traverser$TreeTraverser;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.graph.Traverser$TreeTraverser: com.google.common.graph.SuccessorsFunction tree>;

        interfaceinvoke $r2.<com.google.common.graph.SuccessorsFunction: java.lang.Iterable successors(java.lang.Object)>($r1);

        return;
    }

    public java.lang.Iterable breadthFirst(java.lang.Object)
    {
        com.google.common.graph.Traverser$TreeTraverser$1 $r2;
        com.google.common.graph.Traverser$TreeTraverser r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.graph.Traverser$TreeTraverser;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        specialinvoke r0.<com.google.common.graph.Traverser$TreeTraverser: void checkThatNodeIsInTree(java.lang.Object)>($r1);

        $r2 = new com.google.common.graph.Traverser$TreeTraverser$1;

        specialinvoke $r2.<com.google.common.graph.Traverser$TreeTraverser$1: void <init>(com.google.common.graph.Traverser$TreeTraverser,java.lang.Object)>(r0, $r1);

        return $r2;
    }

    public java.lang.Iterable depthFirstPostOrder(java.lang.Object)
    {
        com.google.common.graph.Traverser$TreeTraverser r0;
        java.lang.Object $r1;
        com.google.common.graph.Traverser$TreeTraverser$3 $r2;

        r0 := @this: com.google.common.graph.Traverser$TreeTraverser;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        specialinvoke r0.<com.google.common.graph.Traverser$TreeTraverser: void checkThatNodeIsInTree(java.lang.Object)>($r1);

        $r2 = new com.google.common.graph.Traverser$TreeTraverser$3;

        specialinvoke $r2.<com.google.common.graph.Traverser$TreeTraverser$3: void <init>(com.google.common.graph.Traverser$TreeTraverser,java.lang.Object)>(r0, $r1);

        return $r2;
    }

    public java.lang.Iterable depthFirstPreOrder(java.lang.Object)
    {
        com.google.common.graph.Traverser$TreeTraverser$2 $r2;
        com.google.common.graph.Traverser$TreeTraverser r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.graph.Traverser$TreeTraverser;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        specialinvoke r0.<com.google.common.graph.Traverser$TreeTraverser: void checkThatNodeIsInTree(java.lang.Object)>($r1);

        $r2 = new com.google.common.graph.Traverser$TreeTraverser$2;

        specialinvoke $r2.<com.google.common.graph.Traverser$TreeTraverser$2: void <init>(com.google.common.graph.Traverser$TreeTraverser,java.lang.Object)>(r0, $r1);

        return $r2;
    }
}
