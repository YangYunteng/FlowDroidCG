public class c.c.a.i.b.x extends java.lang.Object implements c.b.a.m$b
{
    public final androidx.lifecycle.MutableLiveData a;
    public final c.c.a.i.b.A b;

    public void <init>(c.c.a.i.b.A, androidx.lifecycle.MutableLiveData)
    {
        androidx.lifecycle.MutableLiveData $r2;
        c.c.a.i.b.A $r1;
        c.c.a.i.b.x r0;

        r0 := @this: c.c.a.i.b.x;

        $r1 := @parameter0: c.c.a.i.b.A;

        $r2 := @parameter1: androidx.lifecycle.MutableLiveData;

        r0.<c.c.a.i.b.x: c.c.a.i.b.A b> = $r1;

        r0.<c.c.a.i.b.x: androidx.lifecycle.MutableLiveData a> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void a(java.lang.String)
    {
        androidx.lifecycle.MutableLiveData $r11;
        com.caremark.caremark.util.firebasePerformance.HeaderParser $r2;
        javax.xml.parsers.SAXParserFactory $r4;
        com.caremark.caremark.core.exceptions.ServerResponseException $r15;
        c.c.a.d.d $r13;
        javax.xml.parsers.SAXParser $r5;
        c.c.a.i.b.e $r10;
        java.lang.String $r1, $r3;
        boolean $z0;
        org.xml.sax.InputSource $r6;
        c.c.a.i.b.A $r12;
        c.c.a.i.b.a.c $r8;
        com.caremark.caremark.nativeeasyrefill.model.MultiplePlaceOrderResult $r9;
        c.c.a.i.b.x r0;
        java.lang.Exception $r14;
        java.io.StringReader $r7;

        r0 := @this: c.c.a.i.b.x;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label20;

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label02:
        if $z0 != 0 goto label20;

        $r2 = new com.caremark.caremark.util.firebasePerformance.HeaderParser;

     label03:
        specialinvoke $r2.<com.caremark.caremark.util.firebasePerformance.HeaderParser: void <init>(java.lang.String,boolean)>($r1, 1);

        $r3 = virtualinvoke $r2.<com.caremark.caremark.util.firebasePerformance.HeaderParser: java.lang.String getStatusCode()>();

        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void onResponseFirebaseImp(java.lang.String,java.lang.String)>("and_multiplePlaceOrder_service", $r3);

        $r4 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

     label04:
        $r6 = new org.xml.sax.InputSource;

        $r7 = new java.io.StringReader;

     label05:
        specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r6.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r7);

     label06:
        $r8 = new c.c.a.i.b.a.c;

     label07:
        specialinvoke $r8.<c.c.a.i.b.a.c: void <init>()>();

        virtualinvoke $r5.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>($r6, $r8);

        $r9 = virtualinvoke $r8.<c.c.a.i.b.a.c: com.caremark.caremark.nativeeasyrefill.model.MultiplePlaceOrderResult a()>();

     label08:
        if $r9 == null goto label13;

        $r10 = new c.c.a.i.b.e;

     label09:
        specialinvoke $r10.<c.c.a.i.b.e: void <init>(java.lang.Object,com.android.volley.VolleyError)>($r9, null);

     label10:
        $r11 = r0.<c.c.a.i.b.x: androidx.lifecycle.MutableLiveData a>;

     label11:
        virtualinvoke $r11.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>($r10);

     label12:
        goto label27;

     label13:
        $r12 = r0.<c.c.a.i.b.x: c.c.a.i.b.A b>;

        $r11 = r0.<c.c.a.i.b.x: androidx.lifecycle.MutableLiveData a>;

     label14:
        $r13 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        $r1 = virtualinvoke $r13.<c.c.a.d.d: java.lang.String H()>();

        $r13 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        $r3 = virtualinvoke $r13.<c.c.a.d.d: java.lang.String I()>();

        virtualinvoke $r12.<c.c.a.i.b.B: void a(androidx.lifecycle.MutableLiveData,java.lang.String,java.lang.String)>($r11, $r1, $r3);

     label15:
        goto label27;

     label16:
        $r14 := @caughtexception;

        goto label26;

     label17:
        $r14 := @caughtexception;

        goto label26;

     label18:
        $r14 := @caughtexception;

        goto label26;

     label19:
        $r14 := @caughtexception;

        goto label26;

     label20:
        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void onEmptyResponseFirebaseImp(java.lang.String)>("and_multiplePlaceOrder_service");

     label21:
        $r12 = r0.<c.c.a.i.b.x: c.c.a.i.b.A b>;

        $r11 = r0.<c.c.a.i.b.x: androidx.lifecycle.MutableLiveData a>;

     label22:
        virtualinvoke $r12.<c.c.a.i.b.B: void a(androidx.lifecycle.MutableLiveData,java.lang.String,java.lang.String)>($r11, "", "");

     label23:
        $r15 = new com.caremark.caremark.core.exceptions.ServerResponseException;

     label24:
        specialinvoke $r15.<com.caremark.caremark.core.exceptions.ServerResponseException: void <init>(java.lang.String)>("Network problem");

     label25:
        throw $r15;

     label26:
        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void onEmptyResponseFirebaseImp(java.lang.String)>("and_multiplePlaceOrder_service");

        $r12 = r0.<c.c.a.i.b.x: c.c.a.i.b.A b>;

        $r11 = r0.<c.c.a.i.b.x: androidx.lifecycle.MutableLiveData a>;

        virtualinvoke $r12.<c.c.a.i.b.B: void a(androidx.lifecycle.MutableLiveData,java.lang.String,java.lang.String)>($r11, "", "");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiplePlace", "MultiplePlace Exception", $r14);

     label27:
        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void stopFirebaseTrace(java.lang.String)>("and_multiplePlaceOrder_service");

        return;

        catch com.caremark.caremark.core.exceptions.ServerResponseException from label01 to label02 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label03 to label04 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label05 to label06 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label07 to label08 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label09 to label10 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label11 to label12 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label14 to label15 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label20 to label21 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label22 to label23 with label19;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label24 to label26 with label19;
        catch java.io.IOException from label01 to label02 with label18;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.io.IOException from label05 to label06 with label18;
        catch java.io.IOException from label07 to label08 with label18;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.io.IOException from label14 to label15 with label18;
        catch java.io.IOException from label20 to label21 with label18;
        catch java.io.IOException from label22 to label23 with label18;
        catch java.io.IOException from label24 to label25 with label18;
        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label03 to label04 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label05 to label06 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label07 to label08 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label09 to label10 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label11 to label12 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label14 to label15 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label20 to label21 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label22 to label23 with label17;
        catch javax.xml.parsers.ParserConfigurationException from label24 to label25 with label17;
        catch org.xml.sax.SAXException from label01 to label02 with label16;
        catch org.xml.sax.SAXException from label03 to label04 with label16;
        catch org.xml.sax.SAXException from label05 to label06 with label16;
        catch org.xml.sax.SAXException from label07 to label08 with label16;
        catch org.xml.sax.SAXException from label09 to label10 with label16;
        catch org.xml.sax.SAXException from label11 to label12 with label16;
        catch org.xml.sax.SAXException from label14 to label15 with label16;
        catch org.xml.sax.SAXException from label20 to label21 with label16;
        catch org.xml.sax.SAXException from label22 to label23 with label16;
        catch org.xml.sax.SAXException from label24 to label25 with label16;
    }

    public volatile void onResponse(java.lang.Object)
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        c.c.a.i.b.x r0;

        r0 := @this: c.c.a.i.b.x;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke r0.<c.c.a.i.b.x: void a(java.lang.String)>($r2);

        return;
    }
}
