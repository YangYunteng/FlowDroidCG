public final class com.google.android.material.datepicker.Month extends java.lang.Object implements java.lang.Comparable, android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public final int daysInMonth;
    public final int daysInWeek;
    public final java.util.Calendar firstOfMonth;
    public final java.lang.String longName;
    public final int month;
    public final long timeInMillis;
    public final int year;

    static void <clinit>()
    {
        com.google.android.material.datepicker.Month$1 $r0;

        $r0 = new com.google.android.material.datepicker.Month$1;

        specialinvoke $r0.<com.google.android.material.datepicker.Month$1: void <init>()>();

        <com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(java.util.Calendar)
    {
        java.util.Calendar $r1;
        com.google.android.material.datepicker.Month r0;
        java.util.Date $r3;
        int $i0;
        java.text.SimpleDateFormat $r2;
        long $l1;
        java.lang.String $r4;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 := @parameter0: java.util.Calendar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, 1);

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getDayCopy(java.util.Calendar)>($r1);

        r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth> = $r1;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        r0.<com.google.android.material.datepicker.Month: int month> = $i0;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        r0.<com.google.android.material.datepicker.Month: int year> = $i0;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getMaximum(int)>(7);

        r0.<com.google.android.material.datepicker.Month: int daysInWeek> = $i0;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getActualMaximum(int)>(5);

        r0.<com.google.android.material.datepicker.Month: int daysInMonth> = $i0;

        $r2 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getYearMonthFormat()>();

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        r0.<com.google.android.material.datepicker.Month: java.lang.String longName> = $r4;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $l1 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.google.android.material.datepicker.Month: long timeInMillis> = $l1;

        return;
    }

    public static com.google.android.material.datepicker.Month create(int, int)
    {
        java.util.Calendar $r0;
        com.google.android.material.datepicker.Month $r1;
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendar()>();

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(1, $i1);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(2, $i0);

        $r1 = new com.google.android.material.datepicker.Month;

        specialinvoke $r1.<com.google.android.material.datepicker.Month: void <init>(java.util.Calendar)>($r0);

        return $r1;
    }

    public static com.google.android.material.datepicker.Month create(long)
    {
        long $l0;
        java.util.Calendar $r0;
        com.google.android.material.datepicker.Month $r1;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendar()>();

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $r1 = new com.google.android.material.datepicker.Month;

        specialinvoke $r1.<com.google.android.material.datepicker.Month: void <init>(java.util.Calendar)>($r0);

        return $r1;
    }

    public static com.google.android.material.datepicker.Month current()
    {
        java.util.Calendar $r1;
        com.google.android.material.datepicker.Month $r0;

        $r0 = new com.google.android.material.datepicker.Month;

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getTodayCalendar()>();

        specialinvoke $r0.<com.google.android.material.datepicker.Month: void <init>(java.util.Calendar)>($r1);

        return $r0;
    }

    public int compareTo(com.google.android.material.datepicker.Month)
    {
        java.util.Calendar $r1, $r3;
        com.google.android.material.datepicker.Month r0, $r2;
        int $i0;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r2 := @parameter0: com.google.android.material.datepicker.Month;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $r3 = $r2.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int compareTo(java.util.Calendar)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.google.android.material.datepicker.Month r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.android.material.datepicker.Month) $r1;

        $i0 = virtualinvoke r0.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r2);

        return $i0;
    }

    public int daysFromStartOfWeekToFirstOfMonth()
    {
        java.util.Calendar $r1;
        com.google.android.material.datepicker.Month r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(7);

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        $i0 = $i0 - $i1;

        if $i0 >= 0 goto label1;

        $i1 = r0.<com.google.android.material.datepicker.Month: int daysInWeek>;

        $i0 = $i0 + $i1;

     label1:
        return $i0;
    }

    public int describeContents()
    {
        com.google.android.material.datepicker.Month r0;

        r0 := @this: com.google.android.material.datepicker.Month;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.android.material.datepicker.Month r0, $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.android.material.datepicker.Month;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.android.material.datepicker.Month) $r1;

        $i1 = r0.<com.google.android.material.datepicker.Month: int month>;

        $i0 = $r2.<com.google.android.material.datepicker.Month: int month>;

        if $i1 != $i0 goto label3;

        $i0 = r0.<com.google.android.material.datepicker.Month: int year>;

        $i1 = $r2.<com.google.android.material.datepicker.Month: int year>;

        if $i0 != $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public long getDay(int)
    {
        java.util.Calendar $r1;
        com.google.android.material.datepicker.Month r0;
        int $i0;
        long $l1;

        r0 := @this: com.google.android.material.datepicker.Month;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getDayCopy(java.util.Calendar)>($r1);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, $i0);

        $l1 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        return $l1;
    }

    public java.lang.String getLongName()
    {
        java.lang.String r1;
        com.google.android.material.datepicker.Month r0;

        r0 := @this: com.google.android.material.datepicker.Month;

        r1 = r0.<com.google.android.material.datepicker.Month: java.lang.String longName>;

        return r1;
    }

    public long getStableId()
    {
        long $l0;
        java.util.Calendar $r1;
        com.google.android.material.datepicker.Month r0;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r1;
        com.google.android.material.datepicker.Month r0;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<com.google.android.material.datepicker.Month: int month>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i0 = r0.<com.google.android.material.datepicker.Month: int year>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r2;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public com.google.android.material.datepicker.Month monthsLater(int)
    {
        int $i0;
        java.util.Calendar $r1;
        com.google.android.material.datepicker.Month r0;

        r0 := @this: com.google.android.material.datepicker.Month;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $r1 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getDayCopy(java.util.Calendar)>($r1);

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(2, $i0);

        r0 = new com.google.android.material.datepicker.Month;

        specialinvoke r0.<com.google.android.material.datepicker.Month: void <init>(java.util.Calendar)>($r1);

        return r0;
    }

    public int monthsUntil(com.google.android.material.datepicker.Month)
    {
        com.google.android.material.datepicker.Month r0, $r1;
        java.lang.IllegalArgumentException $r3;
        java.util.Calendar $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 := @parameter0: com.google.android.material.datepicker.Month;

        $r2 = r0.<com.google.android.material.datepicker.Month: java.util.Calendar firstOfMonth>;

        $z0 = $r2 instanceof java.util.GregorianCalendar;

        if $z0 == 0 goto label1;

        $i0 = $r1.<com.google.android.material.datepicker.Month: int year>;

        $i1 = r0.<com.google.android.material.datepicker.Month: int year>;

        $i0 = $i0 - $i1;

        $i0 = $i0 * 12;

        $i1 = $r1.<com.google.android.material.datepicker.Month: int month>;

        $i2 = r0.<com.google.android.material.datepicker.Month: int month>;

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i1;

        return $i0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only Gregorian calendars are supported.");

        throw $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        int $i0;
        com.google.android.material.datepicker.Month r0;
        android.os.Parcel $r1;

        r0 := @this: com.google.android.material.datepicker.Month;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = r0.<com.google.android.material.datepicker.Month: int year>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.google.android.material.datepicker.Month: int month>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
}
