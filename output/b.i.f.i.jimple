public class b.i.f.i extends java.lang.Object implements java.lang.Runnable
{
    public final java.util.concurrent.atomic.AtomicReference a;
    public final java.util.concurrent.Callable b;
    public final java.util.concurrent.locks.ReentrantLock c;
    public final java.util.concurrent.atomic.AtomicBoolean d;
    public final java.util.concurrent.locks.Condition e;
    public final b.i.f.j f;

    public void <init>(b.i.f.j, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.Callable, java.util.concurrent.locks.ReentrantLock, java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.locks.Condition)
    {
        java.util.concurrent.locks.Condition $r6;
        java.util.concurrent.locks.ReentrantLock $r4;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        java.util.concurrent.Callable $r3;
        java.util.concurrent.atomic.AtomicReference $r2;
        b.i.f.j $r1;
        b.i.f.i r0;

        r0 := @this: b.i.f.i;

        $r1 := @parameter0: b.i.f.j;

        $r2 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        $r3 := @parameter2: java.util.concurrent.Callable;

        $r4 := @parameter3: java.util.concurrent.locks.ReentrantLock;

        $r5 := @parameter4: java.util.concurrent.atomic.AtomicBoolean;

        $r6 := @parameter5: java.util.concurrent.locks.Condition;

        r0.<b.i.f.i: b.i.f.j f> = $r1;

        r0.<b.i.f.i: java.util.concurrent.atomic.AtomicReference a> = $r2;

        r0.<b.i.f.i: java.util.concurrent.Callable b> = $r3;

        r0.<b.i.f.i: java.util.concurrent.locks.ReentrantLock c> = $r4;

        r0.<b.i.f.i: java.util.concurrent.atomic.AtomicBoolean d> = $r5;

        r0.<b.i.f.i: java.util.concurrent.locks.Condition e> = $r6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r8;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        java.util.concurrent.Callable $r4;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Exception $r2;
        b.i.f.i r0;
        java.util.concurrent.locks.Condition $r7;
        java.lang.Object $r1;

        r0 := @this: b.i.f.i;

     label1:
        $r3 = r0.<b.i.f.i: java.util.concurrent.atomic.AtomicReference a>;

        $r4 = r0.<b.i.f.i: java.util.concurrent.Callable b>;

        $r1 = interfaceinvoke $r4.<java.util.concurrent.Callable: java.lang.Object call()>();

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r1);

     label2:
        $r5 = r0.<b.i.f.i: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label3:
        $r6 = r0.<b.i.f.i: java.util.concurrent.atomic.AtomicBoolean d>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r7 = r0.<b.i.f.i: java.util.concurrent.locks.Condition e>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void signal()>();

     label4:
        $r5 = r0.<b.i.f.i: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label5:
        $r8 := @caughtexception;

        $r5 = r0.<b.i.f.i: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r8;

     label6:
        $r2 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
