public abstract class k.a.b extends java.lang.Object implements java.lang.Runnable
{
    public final java.lang.String a;

    public transient void <init>(java.lang.String, java.lang.Object[])
    {
        k.a.b r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: k.a.b;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <k.a.e: java.lang.String a(java.lang.String,java.lang.Object[])>($r2, $r1);

        r0.<k.a.b: java.lang.String a> = $r2;

        return;
    }

    public abstract void b();

    public final void run()
    {
        java.lang.Throwable $r4;
        java.lang.Thread $r1;
        k.a.b r0;
        java.lang.String $r2, $r3;

        r0 := @this: k.a.b;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = r0.<k.a.b: java.lang.String a>;

        virtualinvoke $r1.<java.lang.Thread: void setName(java.lang.String)>($r3);

     label1:
        virtualinvoke r0.<k.a.b: void b()>();

     label2:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r1.<java.lang.Thread: void setName(java.lang.String)>($r2);

        return;

     label3:
        $r4 := @caughtexception;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r1.<java.lang.Thread: void setName(java.lang.String)>($r2);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
