public class com.google.common.reflect.Invokable$MethodInvokable extends com.google.common.reflect.Invokable
{
    public final java.lang.reflect.Method method;

    public void <init>(java.lang.reflect.Method)
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.reflect.Method $r1;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<com.google.common.reflect.Invokable: void <init>(java.lang.reflect.AccessibleObject)>($r1);

        r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method> = $r1;

        return;
    }

    public java.lang.reflect.Type[] getGenericExceptionTypes()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.reflect.Type[] $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();

        return $r1;
    }

    public java.lang.reflect.Type[] getGenericParameterTypes()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.reflect.Type[] $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        return $r1;
    }

    public java.lang.reflect.Type getGenericReturnType()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.reflect.Type $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        return $r1;
    }

    public final java.lang.'annotation'.Annotation[][] getParameterAnnotations()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.'annotation'.Annotation[][] $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        return $r1;
    }

    public final java.lang.reflect.TypeVariable[] getTypeParameters()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.reflect.Method $r2;
        java.lang.reflect.TypeVariable[] $r1;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        return $r1;
    }

    public final java.lang.Object invokeInternal(java.lang.Object, java.lang.Object[])
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.Object[] $r1;
        java.lang.Object $r3;
        java.lang.reflect.Method $r2;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object[];

        $r2 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r1);

        return $r3;
    }

    public final boolean isOverridable()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        int $i0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $z0 = virtualinvoke r0.<com.google.common.reflect.Element: boolean isFinal()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.google.common.reflect.Element: boolean isPrivate()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.google.common.reflect.Element: boolean isStatic()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Class getDeclaringClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isVarArgs()
    {
        com.google.common.reflect.Invokable$MethodInvokable r0;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable$MethodInvokable;

        $r1 = r0.<com.google.common.reflect.Invokable$MethodInvokable: java.lang.reflect.Method method>;

        $z0 = virtualinvoke $r1.<java.lang.reflect.Method: boolean isVarArgs()>();

        return $z0;
    }
}
