public abstract class com.google.common.io.LineBuffer extends java.lang.Object
{
    public java.lang.StringBuilder line;
    public boolean sawReturn;

    public void <init>()
    {
        com.google.common.io.LineBuffer r0;
        java.lang.StringBuilder $r1;

        r0 := @this: com.google.common.io.LineBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line> = $r1;

        return;
    }

    private boolean finishLine(boolean)
    {
        com.google.common.io.LineBuffer r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.io.LineBuffer;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.common.io.LineBuffer: boolean sawReturn>;

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label1;

        $r2 = "\r\n";

        goto label4;

     label1:
        $r2 = "\r";

        goto label4;

     label2:
        if $z0 == 0 goto label3;

        $r2 = "\n";

        goto label4;

     label3:
        $r2 = "";

     label4:
        $r3 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.common.io.LineBuffer: void handleLine(java.lang.String,java.lang.String)>($r1, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line> = $r3;

        r0.<com.google.common.io.LineBuffer: boolean sawReturn> = 0;

        return $z0;
    }

    public void add(char[], int, int)
    {
        com.google.common.io.LineBuffer r0;
        char $c2;
        int $i0, $i1, $i3, $i4;
        char[] $r1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @this: com.google.common.io.LineBuffer;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<com.google.common.io.LineBuffer: boolean sawReturn>;

        if $z0 == 0 goto label03;

        if $i1 <= 0 goto label03;

        $c2 = $r1[$i0];

        $i3 = (int) $c2;

        if $i3 != 10 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>($z0);

        if $z0 == 0 goto label03;

        $i3 = $i0 + 1;

        goto label04;

     label03:
        $i3 = $i0;

     label04:
        $i0 = $i0 + $i1;

        $i1 = $i3;

     label05:
        if $i3 >= $i0 goto label12;

        $c2 = $r1[$i3];

        $i4 = (int) $c2;

        if $i4 == 10 goto label09;

        $i4 = (int) $c2;

        if $i4 == 13 goto label06;

        goto label11;

     label06:
        $r2 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i4 = $i3 - $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i1, $i4);

        r0.<com.google.common.io.LineBuffer: boolean sawReturn> = 1;

        $i1 = $i3 + 1;

        if $i1 >= $i0 goto label10;

        $c2 = $r1[$i1];

        $i4 = (int) $c2;

        if $i4 != 10 goto label07;

        $z0 = 1;

        goto label08;

     label07:
        $z0 = 0;

     label08:
        specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>($z0);

        if $z0 == 0 goto label10;

        $i3 = $i1;

        goto label10;

     label09:
        $r2 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i4 = $i3 - $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i1, $i4);

        specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>(1);

     label10:
        $i1 = $i3 + 1;

     label11:
        $i3 = $i3 + 1;

        goto label05;

     label12:
        $r2 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i0 = $i0 - $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i1, $i0);

        return;
    }

    public void finish()
    {
        int $i0;
        com.google.common.io.LineBuffer r0;
        java.lang.StringBuilder $r1;
        boolean $z0;

        r0 := @this: com.google.common.io.LineBuffer;

        $z0 = r0.<com.google.common.io.LineBuffer: boolean sawReturn>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

     label1:
        specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>(0);

     label2:
        return;
    }

    public abstract void handleLine(java.lang.String, java.lang.String);
}
