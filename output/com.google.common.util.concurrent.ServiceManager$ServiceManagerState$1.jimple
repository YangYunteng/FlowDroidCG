public class com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 extends java.lang.Object implements com.google.common.base.Function
{
    public final com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0;

    public void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState)
    {
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 r0;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r1;

        r0 := @this: com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1;

        $r1 := @parameter0: com.google.common.util.concurrent.ServiceManager$ServiceManagerState;

        r0.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1: com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Long apply(java.util.Map$Entry)
    {
        java.util.Map$Entry $r2;
        java.lang.Long $r3;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1;

        $r2 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (java.lang.Long) $r1;

        return $r3;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        java.util.Map$Entry $r3;
        java.lang.Long $r1;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.util.Map$Entry) $r2;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1: java.lang.Long apply(java.util.Map$Entry)>($r3);

        return $r1;
    }
}
