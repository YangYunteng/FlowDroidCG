public final class com.google.common.collect.ImmutableRangeSet extends com.google.common.collect.AbstractRangeSet implements java.io.Serializable
{
    public static final com.google.common.collect.ImmutableRangeSet ALL;
    public static final com.google.common.collect.ImmutableRangeSet EMPTY;
    public transient com.google.common.collect.ImmutableRangeSet complement;
    public final transient com.google.common.collect.ImmutableList ranges;

    static void <clinit>()
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.ImmutableRangeSet $r0;
        com.google.common.collect.ImmutableList $r1;

        $r0 = new com.google.common.collect.ImmutableRangeSet;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeSet: void <init>(com.google.common.collect.ImmutableList)>($r1);

        <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet EMPTY> = $r0;

        $r0 = new com.google.common.collect.ImmutableRangeSet;

        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r2);

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeSet: void <init>(com.google.common.collect.ImmutableList)>($r1);

        <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet ALL> = $r0;

        return;
    }

    public void <init>(com.google.common.collect.ImmutableList)
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.ImmutableList $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.ImmutableList;

        specialinvoke r0.<com.google.common.collect.AbstractRangeSet: void <init>()>();

        r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges> = $r1;

        return;
    }

    public void <init>(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableRangeSet)
    {
        com.google.common.collect.ImmutableRangeSet r0, $r2;
        com.google.common.collect.ImmutableList $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.ImmutableList;

        $r2 := @parameter1: com.google.common.collect.ImmutableRangeSet;

        specialinvoke r0.<com.google.common.collect.AbstractRangeSet: void <init>()>();

        r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges> = $r1;

        r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet complement> = $r2;

        return;
    }

    public static com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)
    {
        com.google.common.collect.ImmutableRangeSet $r0;
        com.google.common.collect.ImmutableList r1;

        $r0 := @parameter0: com.google.common.collect.ImmutableRangeSet;

        r1 = $r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        return r1;
    }

    public static com.google.common.collect.ImmutableRangeSet all()
    {
        com.google.common.collect.ImmutableRangeSet r0;

        r0 = <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet ALL>;

        return r0;
    }

    public static com.google.common.collect.ImmutableRangeSet$Builder builder()
    {
        com.google.common.collect.ImmutableRangeSet$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableRangeSet$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeSet$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet)
    {
        com.google.common.collect.RangeSet $r0;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.Range $r2;
        java.util.Set $r3;
        com.google.common.collect.ImmutableRangeSet $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.RangeSet;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $z0 = interfaceinvoke $r0.<com.google.common.collect.RangeSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet of()>();

        return $r1;

     label1:
        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $z0 = interfaceinvoke $r0.<com.google.common.collect.RangeSet: boolean encloses(com.google.common.collect.Range)>($r2);

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet all()>();

        return $r1;

     label2:
        $z0 = $r0 instanceof com.google.common.collect.ImmutableRangeSet;

        if $z0 == 0 goto label3;

        $r1 = (com.google.common.collect.ImmutableRangeSet) $r0;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableRangeSet: boolean isPartialView()>();

        if $z0 != 0 goto label3;

        return $r1;

     label3:
        $r1 = new com.google.common.collect.ImmutableRangeSet;

        $r3 = interfaceinvoke $r0.<com.google.common.collect.RangeSet: java.util.Set asRanges()>();

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r3);

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet: void <init>(com.google.common.collect.ImmutableList)>($r4);

        return $r1;
    }

    public static com.google.common.collect.ImmutableRangeSet copyOf(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableRangeSet$Builder $r0;
        com.google.common.collect.ImmutableRangeSet $r2;
        java.lang.Iterable $r1;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 = new com.google.common.collect.ImmutableRangeSet$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeSet$Builder: void <init>()>();

        $r0 = virtualinvoke $r0.<com.google.common.collect.ImmutableRangeSet$Builder: com.google.common.collect.ImmutableRangeSet$Builder addAll(java.lang.Iterable)>($r1);

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableRangeSet$Builder: com.google.common.collect.ImmutableRangeSet build()>();

        return $r2;
    }

    private com.google.common.collect.ImmutableList intersectRanges(com.google.common.collect.Range)
    {
        com.google.common.collect.Cut $r6;
        com.google.common.base.Function $r5;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r7;
        com.google.common.collect.ImmutableRangeSet$1 $r8;
        com.google.common.collect.Range $r2, $r4;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r1;
        com.google.common.collect.ImmutableList $r3;
        int $i0, $i1;
        com.google.common.collect.ImmutableRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r3.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label8;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.Range span()>();

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r4);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        return $r3;

     label2:
        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean hasLowerBound()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function upperBoundFn()>();

        $r6 = $r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r7 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER>;

        $r1 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r3, $r5, $r6, $r7, $r1);

        goto label4;

     label3:
        $i0 = 0;

     label4:
        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z0 == 0 goto label5;

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r6 = $r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r7 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_PRESENT>;

        $r1 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER>;

        $i1 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r3, $r5, $r6, $r7, $r1);

        goto label6;

     label5:
        $r3 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $i1 = virtualinvoke $r3.<java.util.AbstractCollection: int size()>();

     label6:
        $i1 = $i1 - $i0;

        if $i1 != 0 goto label7;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r3;

     label7:
        $r8 = new com.google.common.collect.ImmutableRangeSet$1;

        specialinvoke $r8.<com.google.common.collect.ImmutableRangeSet$1: void <init>(com.google.common.collect.ImmutableRangeSet,int,int,com.google.common.collect.Range)>(r0, $i1, $i0, $r2);

        return $r8;

     label8:
        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r3;
    }

    public static com.google.common.collect.ImmutableRangeSet of()
    {
        com.google.common.collect.ImmutableRangeSet r0;

        r0 = <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet EMPTY>;

        return r0;
    }

    public static com.google.common.collect.ImmutableRangeSet of(com.google.common.collect.Range)
    {
        com.google.common.collect.ImmutableList $r3;
        com.google.common.collect.Range $r0, $r2;
        com.google.common.collect.ImmutableRangeSet $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.Range;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $z0 = virtualinvoke $r0.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet of()>();

        return $r1;

     label1:
        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $z0 = virtualinvoke $r0.<com.google.common.collect.Range: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet all()>();

        return $r1;

     label2:
        $r1 = new com.google.common.collect.ImmutableRangeSet;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r0);

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet: void <init>(com.google.common.collect.ImmutableList)>($r3);

        return $r1;
    }

    public static java.util.stream.Collector toImmutableRangeSet()
    {
        java.util.stream.Collector $r0;

        $r0 = staticinvoke <com.google.common.collect.CollectCollectors: java.util.stream.Collector toImmutableRangeSet()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableRangeSet unionOf(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableRangeSet $r2;
        com.google.common.collect.TreeRangeSet $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <com.google.common.collect.TreeRangeSet: com.google.common.collect.TreeRangeSet create(java.lang.Iterable)>($r0);

        $r2 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet)>($r1);

        return $r2;
    }

    public void add(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableRangeSet r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void addAll(com.google.common.collect.RangeSet)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RangeSet $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.RangeSet;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void addAll(java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableRangeSet r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.google.common.collect.ImmutableSet asDescendingSetOfRanges()
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.Ordering $r4;
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RegularImmutableSortedSet $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r2;

     label1:
        $r3 = new com.google.common.collect.RegularImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList reverse()>();

        $r4 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Ordering rangeLexOrdering()>();

        $r4 = virtualinvoke $r4.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        specialinvoke $r3.<com.google.common.collect.RegularImmutableSortedSet: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r1, $r4);

        return $r3;
    }

    public volatile java.util.Set asDescendingSetOfRanges()
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableSet asDescendingSetOfRanges()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet asRanges()
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.Ordering $r4;
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RegularImmutableSortedSet $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r2;

     label1:
        $r3 = new com.google.common.collect.RegularImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r4 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Ordering rangeLexOrdering()>();

        specialinvoke $r3.<com.google.common.collect.RegularImmutableSortedSet: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r1, $r4);

        return $r3;
    }

    public volatile java.util.Set asRanges()
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableSet asRanges()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSortedSet asSet(com.google.common.collect.DiscreteDomain)
    {
        com.google.common.collect.ImmutableSortedSet $r3;
        com.google.common.collect.Range $r4;
        java.lang.IllegalArgumentException $r5;
        com.google.common.collect.DiscreteDomain $r2;
        com.google.common.collect.ImmutableRangeSet$AsSet $r6;
        com.google.common.collect.ImmutableRangeSet r0;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r2 := @parameter0: com.google.common.collect.DiscreteDomain;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet of()>();

        return $r3;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.Range span()>();

        $r4 = virtualinvoke $r4.<com.google.common.collect.Range: com.google.common.collect.Range canonical(com.google.common.collect.DiscreteDomain)>($r2);

        $z0 = virtualinvoke $r4.<com.google.common.collect.Range: boolean hasLowerBound()>();

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke $r4.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z0 != 0 goto label5;

     label2:
        virtualinvoke $r2.<com.google.common.collect.DiscreteDomain: java.lang.Comparable maxValue()>();

     label3:
        goto label5;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Neither the DiscreteDomain nor this range set are bounded above");

        throw $r5;

     label5:
        $r6 = new com.google.common.collect.ImmutableRangeSet$AsSet;

        specialinvoke $r6.<com.google.common.collect.ImmutableRangeSet$AsSet: void <init>(com.google.common.collect.ImmutableRangeSet,com.google.common.collect.DiscreteDomain)>(r0, $r2);

        return $r6;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Neither the DiscreteDomain nor this range set are bounded below");

        throw $r5;

     label7:
        $r1 := @caughtexception;

        goto label4;

        catch java.util.NoSuchElementException from label2 to label3 with label7;
    }

    public volatile void clear()
    {
        com.google.common.collect.ImmutableRangeSet r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        specialinvoke r0.<com.google.common.collect.AbstractRangeSet: void clear()>();

        return;
    }

    public com.google.common.collect.ImmutableRangeSet complement()
    {
        com.google.common.collect.Range $r4, $r5;
        com.google.common.collect.ImmutableList $r2;
        int $i0;
        com.google.common.collect.ImmutableRangeSet$ComplementRanges $r6;
        java.lang.Object $r3;
        com.google.common.collect.ImmutableRangeSet r0, $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet complement>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r2.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet all()>();

        r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet complement> = $r1;

        return $r1;

     label2:
        $r2 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $i0 = virtualinvoke $r2.<java.util.AbstractCollection: int size()>();

        if $i0 != 1 goto label3;

        $r2 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.google.common.collect.Range) $r3;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $z0 = virtualinvoke $r4.<com.google.common.collect.Range: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r1 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet of()>();

        r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet complement> = $r1;

        return $r1;

     label3:
        $r6 = new com.google.common.collect.ImmutableRangeSet$ComplementRanges;

        specialinvoke $r6.<com.google.common.collect.ImmutableRangeSet$ComplementRanges: void <init>(com.google.common.collect.ImmutableRangeSet)>(r0);

        $r1 = new com.google.common.collect.ImmutableRangeSet;

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet: void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableRangeSet)>($r6, r0);

        r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet complement> = $r1;

        return $r1;
    }

    public volatile com.google.common.collect.RangeSet complement()
    {
        com.google.common.collect.ImmutableRangeSet r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet complement()>();

        return r0;
    }

    public volatile boolean contains(java.lang.Comparable)
    {
        java.lang.Comparable $r1;
        com.google.common.collect.ImmutableRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: java.lang.Comparable;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractRangeSet: boolean contains(java.lang.Comparable)>($r1);

        return $z0;
    }

    public com.google.common.collect.ImmutableRangeSet difference(com.google.common.collect.RangeSet)
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RangeSet $r1;
        com.google.common.collect.TreeRangeSet $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.RangeSet;

        $r2 = staticinvoke <com.google.common.collect.TreeRangeSet: com.google.common.collect.TreeRangeSet create(com.google.common.collect.RangeSet)>(r0);

        interfaceinvoke $r2.<com.google.common.collect.RangeSet: void removeAll(com.google.common.collect.RangeSet)>($r1);

        r0 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet)>($r2);

        return r0;
    }

    public boolean encloses(com.google.common.collect.Range)
    {
        com.google.common.collect.Cut $r1;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r2;
        com.google.common.base.Function $r6;
        com.google.common.collect.Range $r4, $r9;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r3;
        com.google.common.collect.ImmutableList $r5;
        com.google.common.collect.Ordering $r7;
        int $i0, $i1;
        java.lang.Object $r8;
        com.google.common.collect.ImmutableRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r4 := @parameter0: com.google.common.collect.Range;

        $r5 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r6 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r1 = $r4.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r7 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r2 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT>;

        $r3 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r5, $r6, $r1, $r7, $r2, $r3);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $r5 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (com.google.common.collect.Range) $r8;

        $z0 = virtualinvoke $r9.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile boolean enclosesAll(com.google.common.collect.RangeSet)
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RangeSet $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.RangeSet;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractRangeSet: boolean enclosesAll(com.google.common.collect.RangeSet)>($r1);

        return $z0;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractRangeSet: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public com.google.common.collect.ImmutableRangeSet intersection(com.google.common.collect.RangeSet)
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RangeSet $r1;
        com.google.common.collect.TreeRangeSet $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.RangeSet;

        $r2 = staticinvoke <com.google.common.collect.TreeRangeSet: com.google.common.collect.TreeRangeSet create(com.google.common.collect.RangeSet)>(r0);

        $r1 = interfaceinvoke $r1.<com.google.common.collect.RangeSet: com.google.common.collect.RangeSet complement()>();

        interfaceinvoke $r2.<com.google.common.collect.RangeSet: void removeAll(com.google.common.collect.RangeSet)>($r1);

        r0 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet)>($r2);

        return r0;
    }

    public boolean intersects(com.google.common.collect.Range)
    {
        com.google.common.collect.Cut $r6;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r1;
        com.google.common.base.Function $r5;
        com.google.common.collect.Range $r3, $r9;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r2;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.Ordering $r7;
        int $i0, $i1;
        java.lang.Object $r8;
        com.google.common.collect.ImmutableRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r3 := @parameter0: com.google.common.collect.Range;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r6 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r7 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r1 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT>;

        $r2 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r4, $r5, $r6, $r7, $r1, $r2);

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $i1 = virtualinvoke $r4.<java.util.AbstractCollection: int size()>();

        if $i0 >= $i1 goto label1;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (com.google.common.collect.Range) $r8;

        $z0 = virtualinvoke $r9.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (com.google.common.collect.Range) $r8;

        $r9 = virtualinvoke $r9.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r3);

        $z0 = virtualinvoke $r9.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        if $i0 <= 0 goto label2;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $i0 = $i0 - 1;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (com.google.common.collect.Range) $r8;

        $z0 = virtualinvoke $r9.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (com.google.common.collect.Range) $r8;

        $r3 = virtualinvoke $r9.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r3);

        $z0 = virtualinvoke $r3.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.ImmutableList $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        return $z0;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.ImmutableList $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableCollection: boolean isPartialView()>();

        return $z0;
    }

    public com.google.common.collect.Range rangeContaining(java.lang.Comparable)
    {
        com.google.common.collect.Cut $r6;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r1;
        com.google.common.base.Function $r5;
        com.google.common.collect.Range $r9;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r2;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.Ordering $r7;
        int $i0, $i1;
        java.lang.Comparable $r3;
        java.lang.Object $r8;
        com.google.common.collect.ImmutableRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r3 := @parameter0: java.lang.Comparable;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r6 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowValue(java.lang.Comparable)>($r3);

        $r7 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r1 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT>;

        $r2 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r4, $r5, $r6, $r7, $r1, $r2);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (com.google.common.collect.Range) $r8;

        $z0 = virtualinvoke $r9.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label1;

        return $r9;

     label1:
        return null;
    }

    public void remove(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableRangeSet r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void removeAll(com.google.common.collect.RangeSet)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.RangeSet $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.RangeSet;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void removeAll(java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableRangeSet r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.google.common.collect.Range span()
    {
        com.google.common.collect.Cut $r4, $r5;
        com.google.common.collect.Range $r3;
        com.google.common.collect.ImmutableList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableRangeSet r0;
        java.util.NoSuchElementException $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.google.common.collect.Range) $r2;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        $i0 = virtualinvoke $r1.<java.util.AbstractCollection: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.google.common.collect.Range) $r2;

        $r5 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut)>($r4, $r5);

        return $r3;

     label1:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;
    }

    public com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range)
    {
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.ImmutableRangeSet r0, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.Range span()>();

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r2);

        if $z0 == 0 goto label2;

        $r3 = new com.google.common.collect.ImmutableRangeSet;

        $r4 = specialinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList intersectRanges(com.google.common.collect.Range)>($r1);

        specialinvoke $r3.<com.google.common.collect.ImmutableRangeSet: void <init>(com.google.common.collect.ImmutableList)>($r4);

        return $r3;

     label2:
        r0 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet of()>();

        return r0;
    }

    public volatile com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.ImmutableRangeSet r0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range)>($r1);

        return r0;
    }

    public com.google.common.collect.ImmutableRangeSet union(com.google.common.collect.RangeSet)
    {
        com.google.common.collect.RangeSet $r1;
        com.google.common.collect.ImmutableSet $r2;
        java.util.Set $r3;
        com.google.common.collect.ImmutableRangeSet r0;
        java.lang.Iterable $r4;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter0: com.google.common.collect.RangeSet;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableSet asRanges()>();

        $r3 = interfaceinvoke $r1.<com.google.common.collect.RangeSet: java.util.Set asRanges()>();

        $r4 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>($r2, $r3);

        r0 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet unionOf(java.lang.Iterable)>($r4);

        return r0;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableRangeSet r0;
        com.google.common.collect.ImmutableRangeSet$SerializedForm $r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeSet;

        $r1 = new com.google.common.collect.ImmutableRangeSet$SerializedForm;

        $r2 = r0.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList ranges>;

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet$SerializedForm: void <init>(com.google.common.collect.ImmutableList)>($r2);

        return $r1;
    }
}
