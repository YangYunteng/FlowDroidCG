public class b.i.c.k extends b.i.c.i
{
    public final java.lang.Class g;
    public final java.lang.reflect.Constructor h;
    public final java.lang.reflect.Method i;
    public final java.lang.reflect.Method j;
    public final java.lang.reflect.Method k;
    public final java.lang.reflect.Method l;
    public final java.lang.reflect.Method m;

    public void <init>()
    {
        java.lang.ReflectiveOperationException $r9;
        java.lang.reflect.Constructor $r3;
        b.i.c.k r0;
        java.lang.Class $r1, $r2;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        java.lang.reflect.Method $r4, $r5, $r6, $r7, $r8;

        r0 := @this: b.i.c.k;

        specialinvoke r0.<b.i.c.i: void <init>()>();

        $r1 = null;

     label01:
        $r2 = virtualinvoke r0.<b.i.c.k: java.lang.Class d()>();

        $r3 = virtualinvoke r0.<b.i.c.k: java.lang.reflect.Constructor e(java.lang.Class)>($r2);

     label02:
        $r4 = virtualinvoke r0.<b.i.c.k: java.lang.reflect.Method b(java.lang.Class)>($r2);

     label03:
        $r5 = virtualinvoke r0.<b.i.c.k: java.lang.reflect.Method c(java.lang.Class)>($r2);

     label04:
        $r6 = virtualinvoke r0.<b.i.c.k: java.lang.reflect.Method f(java.lang.Class)>($r2);

     label05:
        $r7 = virtualinvoke r0.<b.i.c.k: java.lang.reflect.Method a(java.lang.Class)>($r2);

     label06:
        $r8 = virtualinvoke r0.<b.i.c.k: java.lang.reflect.Method d(java.lang.Class)>($r2);

     label07:
        $r1 = $r2;

        goto label11;

     label08:
        $r9 := @caughtexception;

        goto label10;

     label09:
        $r9 := @caughtexception;

     label10:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to collect necessary methods for class ");

        $r2 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TypefaceCompatApi26Impl", $r11, $r9);

        $r8 = null;

        $r3 = null;

        $r4 = null;

        $r5 = null;

        $r6 = null;

        $r7 = null;

     label11:
        r0.<b.i.c.k: java.lang.Class g> = $r1;

        r0.<b.i.c.k: java.lang.reflect.Constructor h> = $r3;

        r0.<b.i.c.k: java.lang.reflect.Method i> = $r4;

        r0.<b.i.c.k: java.lang.reflect.Method j> = $r5;

        r0.<b.i.c.k: java.lang.reflect.Method k> = $r6;

        r0.<b.i.c.k: java.lang.reflect.Method l> = $r7;

        r0.<b.i.c.k: java.lang.reflect.Method m> = $r8;

        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label09;
        catch java.lang.ClassNotFoundException from label02 to label03 with label09;
        catch java.lang.ClassNotFoundException from label03 to label04 with label09;
        catch java.lang.ClassNotFoundException from label04 to label05 with label09;
        catch java.lang.ClassNotFoundException from label05 to label06 with label09;
        catch java.lang.ClassNotFoundException from label06 to label07 with label09;
        catch java.lang.NoSuchMethodException from label01 to label02 with label08;
        catch java.lang.NoSuchMethodException from label02 to label03 with label08;
        catch java.lang.NoSuchMethodException from label03 to label04 with label08;
        catch java.lang.NoSuchMethodException from label04 to label05 with label08;
        catch java.lang.NoSuchMethodException from label05 to label06 with label08;
        catch java.lang.NoSuchMethodException from label06 to label07 with label08;
    }

    private java.lang.Object b()
    {
        b.i.c.k r0;
        java.lang.IllegalAccessException $r2;
        java.lang.Object[] $r6;
        java.lang.InstantiationException $r3;
        java.lang.Object $r1;
        java.lang.reflect.Constructor $r5;
        java.lang.reflect.InvocationTargetException $r4;

        r0 := @this: b.i.c.k;

        $r5 = r0.<b.i.c.k: java.lang.reflect.Constructor h>;

        $r6 = newarray (java.lang.Object)[0];

     label1:
        $r1 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label2:
        return $r1;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        goto label3;

     label5:
        $r3 := @caughtexception;

        goto label3;

     label6:
        $r4 := @caughtexception;

        goto label3;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }

    public android.graphics.Typeface a(android.content.Context, android.content.res.Resources, int, java.lang.String, int)
    {
        android.graphics.Typeface $r4;
        android.content.Context $r2;
        b.i.c.k r0;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r1;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: b.i.c.k;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.content.res.Resources;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $z0 = virtualinvoke r0.<b.i.c.k: boolean c()>();

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<b.i.c.p: android.graphics.Typeface a(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>($r2, $r3, $i1, $r1, $i0);

        return $r4;

     label1:
        $r5 = specialinvoke r0.<b.i.c.k: java.lang.Object b()>();

        if $r5 != null goto label2;

        return null;

     label2:
        $i1 = -1;

        $i0 = -1;

        $z0 = virtualinvoke r0.<b.i.c.k: boolean a(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])>($r2, $r5, $r1, 0, $i1, $i0, null);

        if $z0 != 0 goto label3;

        virtualinvoke r0.<b.i.c.k: void b(java.lang.Object)>($r5);

        return null;

     label3:
        $z0 = virtualinvoke r0.<b.i.c.k: boolean c(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        return null;

     label4:
        $r4 = virtualinvoke r0.<b.i.c.k: android.graphics.Typeface a(java.lang.Object)>($r5);

        return $r4;
    }

    public android.graphics.Typeface a(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$b[], int)
    {
        android.graphics.Typeface $r13;
        java.lang.Throwable $r14, $r15, $r16;
        android.content.Context $r4;
        android.graphics.Typeface$Builder $r11, $r21;
        android.os.ParcelFileDescriptor $r10;
        androidx.core.provider.FontsContractCompat$b[] $r6;
        android.net.Uri $r9;
        java.nio.ByteBuffer $r20;
        android.content.ContentResolver $r8;
        java.util.Map $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.core.provider.FontsContractCompat$b $r7;
        boolean $z0;
        android.os.CancellationSignal $r5;
        java.io.IOException $r1, $r2, $r3;
        b.i.c.k r0;
        java.io.FileDescriptor $r12;
        java.lang.Object $r18, $r19;

        r0 := @this: b.i.c.k;

        $r4 := @parameter0: android.content.Context;

        $r5 := @parameter1: android.os.CancellationSignal;

        $r6 := @parameter2: androidx.core.provider.FontsContractCompat$b[];

        $i0 := @parameter3: int;

        $i1 = lengthof $r6;

        if $i1 >= 1 goto label01;

        return null;

     label01:
        $z0 = virtualinvoke r0.<b.i.c.k: boolean c()>();

        if $z0 != 0 goto label22;

        $r7 = virtualinvoke r0.<b.i.c.p: androidx.core.provider.FontsContractCompat$b a(androidx.core.provider.FontsContractCompat$b[],int)>($r6, $i0);

        $r8 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label02:
        $r9 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: android.net.Uri c()>();

        $r10 = virtualinvoke $r8.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>($r9, "r", $r5);

     label03:
        if $r10 != null goto label06;

        if $r10 == null goto label35;

     label04:
        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        return null;

     label06:
        $r21 = new android.graphics.Typeface$Builder;

     label07:
        $r11 = $r21;

     label08:
        $r12 = virtualinvoke $r10.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r21.<android.graphics.Typeface$Builder: void <init>(java.io.FileDescriptor)>($r12);

        $i0 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: int d()>();

        $r11 = virtualinvoke $r11.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setWeight(int)>($i0);

        $z0 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: boolean e()>();

        $r11 = virtualinvoke $r11.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setItalic(boolean)>($z0);

        $r13 = virtualinvoke $r11.<android.graphics.Typeface$Builder: android.graphics.Typeface build()>();

     label09:
        if $r10 == null goto label36;

     label10:
        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label11:
        return $r13;

     label12:
        $r14 := @caughtexception;

     label13:
        throw $r14;

     label14:
        $r15 := @caughtexception;

        if $r10 == null goto label21;

        if $r14 == null goto label20;

     label15:
        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label16:
        goto label21;

     label17:
        $r16 := @caughtexception;

     label18:
        virtualinvoke $r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r16);

     label19:
        goto label21;

     label20:
        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label21:
        throw $r15;

     label22:
        $r17 = staticinvoke <androidx.core.provider.FontsContractCompat: java.util.Map a(android.content.Context,androidx.core.provider.FontsContractCompat$b[],android.os.CancellationSignal)>($r4, $r6, $r5);

        $r18 = specialinvoke r0.<b.i.c.k: java.lang.Object b()>();

        if $r18 != null goto label23;

        return null;

     label23:
        $i1 = lengthof $r6;

        $z0 = 0;

        $i2 = 0;

     label24:
        if $i2 >= $i1 goto label28;

        $r7 = $r6[$i2];

        $r9 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: android.net.Uri c()>();

        $r19 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r20 = (java.nio.ByteBuffer) $r19;

        if $r20 != null goto label25;

        goto label27;

     label25:
        $i3 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: int b()>();

        $i4 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: int d()>();

        $z0 = virtualinvoke $r7.<androidx.core.provider.FontsContractCompat$b: boolean e()>();

        $i5 = (int) $z0;

        $z0 = virtualinvoke r0.<b.i.c.k: boolean a(java.lang.Object,java.nio.ByteBuffer,int,int,int)>($r18, $r20, $i3, $i4, $i5);

        if $z0 != 0 goto label26;

        virtualinvoke r0.<b.i.c.k: void b(java.lang.Object)>($r18);

        return null;

     label26:
        $z0 = 1;

     label27:
        $i2 = $i2 + 1;

        goto label24;

     label28:
        if $z0 != 0 goto label29;

        virtualinvoke r0.<b.i.c.k: void b(java.lang.Object)>($r18);

        return null;

     label29:
        $z0 = virtualinvoke r0.<b.i.c.k: boolean c(java.lang.Object)>($r18);

        if $z0 != 0 goto label30;

        return null;

     label30:
        $r13 = virtualinvoke r0.<b.i.c.k: android.graphics.Typeface a(java.lang.Object)>($r18);

        if $r13 != null goto label31;

        return null;

     label31:
        $r13 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r13, $i0);

        return $r13;

     label32:
        $r1 := @caughtexception;

        return null;

     label33:
        $r2 := @caughtexception;

        return null;

     label34:
        $r3 := @caughtexception;

     label35:
        return null;

     label36:
        return $r13;

        catch java.io.IOException from label02 to label03 with label32;
        catch java.io.IOException from label04 to label05 with label32;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label33;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.io.IOException from label18 to label19 with label34;
        catch java.io.IOException from label20 to label22 with label34;
    }

    public android.graphics.Typeface a(android.content.Context, b.i.b.a.c$b, android.content.res.Resources, int)
    {
        android.graphics.Typeface $r4;
        android.content.Context $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.fonts.FontVariationAxis[] $r10;
        java.lang.String $r8, $r9;
        boolean $z0;
        b.i.b.a.c$b $r2;
        b.i.b.a.c$c $r7;
        b.i.c.k r0;
        java.lang.Object $r5;
        b.i.b.a.c$c[] $r6;
        android.content.res.Resources $r3;

        r0 := @this: b.i.c.k;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: b.i.b.a.c$b;

        $r3 := @parameter2: android.content.res.Resources;

        $i0 := @parameter3: int;

        $z0 = virtualinvoke r0.<b.i.c.k: boolean c()>();

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<b.i.c.i: android.graphics.Typeface a(android.content.Context,b.i.b.a.c$b,android.content.res.Resources,int)>($r1, $r2, $r3, $i0);

        return $r4;

     label1:
        $r5 = specialinvoke r0.<b.i.c.k: java.lang.Object b()>();

        if $r5 != null goto label2;

        return null;

     label2:
        $r6 = virtualinvoke $r2.<b.i.b.a.c$b: b.i.b.a.c$c[] a()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r7 = $r6[$i1];

        $r8 = virtualinvoke $r7.<b.i.b.a.c$c: java.lang.String a()>();

        $i2 = virtualinvoke $r7.<b.i.b.a.c$c: int c()>();

        $i3 = virtualinvoke $r7.<b.i.b.a.c$c: int e()>();

        $z0 = virtualinvoke $r7.<b.i.b.a.c$c: boolean f()>();

        $r9 = virtualinvoke $r7.<b.i.b.a.c$c: java.lang.String d()>();

        $r10 = staticinvoke <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>($r9);

        $i4 = (int) $z0;

        $z0 = virtualinvoke r0.<b.i.c.k: boolean a(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])>($r1, $r5, $r8, $i2, $i3, $i4, $r10);

        if $z0 != 0 goto label4;

        virtualinvoke r0.<b.i.c.k: void b(java.lang.Object)>($r5);

        return null;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $z0 = virtualinvoke r0.<b.i.c.k: boolean c(java.lang.Object)>($r5);

        if $z0 != 0 goto label6;

        return null;

     label6:
        $r4 = virtualinvoke r0.<b.i.c.k: android.graphics.Typeface a(java.lang.Object)>($r5);

        return $r4;
    }

    public android.graphics.Typeface a(java.lang.Object)
    {
        android.graphics.Typeface $r9;
        java.lang.IllegalAccessException $r1;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.reflect.InvocationTargetException $r2;
        b.i.c.k r0;
        int $i0;
        java.lang.Object $r3, $r5;
        java.lang.Class $r4;
        java.lang.reflect.Method $r6;

        r0 := @this: b.i.c.k;

        $r3 := @parameter0: java.lang.Object;

        $r4 = r0.<b.i.c.k: java.lang.Class g>;

     label01:
        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, 1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r5, 0, $r3);

     label02:
        $r6 = r0.<b.i.c.k: java.lang.reflect.Method m>;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = $r5;

        $i0 = -1;

     label03:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        $r7[1] = $r8;

        $i0 = -1;

     label05:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label06:
        $r7[2] = $r8;

     label07:
        $r3 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r7);

     label08:
        $r9 = (android.graphics.Typeface) $r3;

        return $r9;

     label09:
        $r1 := @caughtexception;

        return null;

     label10:
        $r2 := @caughtexception;

        return null;

        catch java.lang.IllegalAccessException from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label03 to label04 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
    }

    public java.lang.reflect.Method a(java.lang.Class)
    {
        b.i.c.k r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: b.i.c.k;

        $r2 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("abortCreation", $r3);

        return $r1;
    }

    public final boolean a(android.content.Context, java.lang.Object, java.lang.String, int, int, int, android.graphics.fonts.FontVariationAxis[])
    {
        android.content.Context $r6;
        java.lang.Object[] $r8;
        java.lang.Integer $r10;
        android.content.res.AssetManager $r9;
        int $i0, $i1, $i2;
        android.graphics.fonts.FontVariationAxis[] $r2;
        java.lang.Boolean $r11;
        java.lang.String $r7;
        java.lang.reflect.Method $r3;
        boolean $z0;
        java.lang.IllegalAccessException $r4;
        java.lang.reflect.InvocationTargetException $r5;
        b.i.c.k r0;
        java.lang.Object $r1;

        r0 := @this: b.i.c.k;

        $r6 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Object;

        $r7 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $r2 := @parameter6: android.graphics.fonts.FontVariationAxis[];

        $r3 = r0.<b.i.c.k: java.lang.reflect.Method i>;

        $r8 = newarray (java.lang.Object)[8];

     label01:
        $r9 = virtualinvoke $r6.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        $r8[0] = $r9;

        $r8[1] = $r7;

     label03:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label04:
        $r8[2] = $r10;

     label05:
        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label06:
        $r8[3] = $r11;

     label07:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label08:
        $r8[4] = $r10;

     label09:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label10:
        $r8[5] = $r10;

     label11:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label12:
        $r8[6] = $r10;

        $r8[7] = $r2;

     label13:
        $r1 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r8);

     label14:
        $r11 = (java.lang.Boolean) $r1;

     label15:
        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

     label16:
        return $z0;

     label17:
        $r4 := @caughtexception;

        return 0;

     label18:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label01 to label02 with label17;
        catch java.lang.IllegalAccessException from label03 to label04 with label17;
        catch java.lang.IllegalAccessException from label05 to label06 with label17;
        catch java.lang.IllegalAccessException from label07 to label08 with label17;
        catch java.lang.IllegalAccessException from label09 to label10 with label17;
        catch java.lang.IllegalAccessException from label11 to label12 with label17;
        catch java.lang.IllegalAccessException from label13 to label14 with label17;
        catch java.lang.IllegalAccessException from label15 to label16 with label17;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label18;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label18;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label18;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label18;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label18;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label18;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label18;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label18;
    }

    public final boolean a(java.lang.Object, java.nio.ByteBuffer, int, int, int)
    {
        java.lang.IllegalAccessException $r2;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        java.nio.ByteBuffer $r5;
        java.lang.reflect.InvocationTargetException $r3;
        b.i.c.k r0;
        int $i0, $i1, $i2;
        java.lang.Boolean $r8;
        java.lang.Object $r4;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: b.i.c.k;

        $r4 := @parameter0: java.lang.Object;

        $r5 := @parameter1: java.nio.ByteBuffer;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r1 = r0.<b.i.c.k: java.lang.reflect.Method j>;

        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

     label01:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label02:
        $r6[1] = $r7;

        $r6[2] = null;

     label03:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        $r6[3] = $r7;

     label05:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label06:
        $r6[4] = $r7;

     label07:
        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r6);

     label08:
        $r8 = (java.lang.Boolean) $r4;

     label09:
        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        return $z0;

     label11:
        $r2 := @caughtexception;

        return 0;

     label12:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label09 to label10 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label12;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label12;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label12;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label12;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label12;
    }

    public java.lang.reflect.Method b(java.lang.Class)
    {
        b.i.c.k r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2, $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: b.i.c.k;

        $r2 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[8];

        $r3[0] = class "Landroid/content/res/AssetManager;";

        $r3[1] = class "Ljava/lang/String;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[3] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[4] = $r4;

        $r3[5] = $r4;

        $r3[6] = $r4;

        $r3[7] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addFontFromAssetManager", $r3);

        return $r1;
    }

    public final void b(java.lang.Object)
    {
        b.i.c.k r0;
        java.lang.IllegalAccessException $r3;
        java.lang.Object[] $r5;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.reflect.InvocationTargetException $r4;

        r0 := @this: b.i.c.k;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.i.c.k: java.lang.reflect.Method l>;

        $r5 = newarray (java.lang.Object)[0];

     label1:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

     label4:
        $r4 := @caughtexception;

        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public java.lang.reflect.Method c(java.lang.Class)
    {
        b.i.c.k r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2, $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: b.i.c.k;

        $r2 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[5];

        $r3[0] = class "Ljava/nio/ByteBuffer;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r3[2] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r3[3] = $r4;

        $r3[4] = $r4;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addFontFromBuffer", $r3);

        return $r1;
    }

    public final boolean c()
    {
        b.i.c.k r0;
        java.lang.reflect.Method $r1;

        r0 := @this: b.i.c.k;

        $r1 = r0.<b.i.c.k: java.lang.reflect.Method i>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TypefaceCompatApi26Impl", "Unable to collect necessary private methods. Fallback to legacy implementation.");

     label1:
        $r1 = r0.<b.i.c.k: java.lang.reflect.Method i>;

        if $r1 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    public final boolean c(java.lang.Object)
    {
        java.lang.IllegalAccessException $r3;
        java.lang.Object[] $r2;
        java.lang.reflect.InvocationTargetException $r4;
        b.i.c.k r0;
        java.lang.Boolean $r6;
        java.lang.Object $r5;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: b.i.c.k;

        $r5 := @parameter0: java.lang.Object;

        $r1 = r0.<b.i.c.k: java.lang.reflect.Method k>;

        $r2 = newarray (java.lang.Object)[0];

     label1:
        $r5 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r2);

     label2:
        $r6 = (java.lang.Boolean) $r5;

     label3:
        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label4:
        return $z0;

     label5:
        $r3 := @caughtexception;

        return 0;

     label6:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label6;
    }

    public java.lang.Class d()
    {
        b.i.c.k r0;
        java.lang.Class $r1;

        r0 := @this: b.i.c.k;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.graphics.FontFamily");

        return $r1;
    }

    public java.lang.reflect.Method d(java.lang.Class)
    {
        b.i.c.k r0;
        java.lang.Class[] $r3;
        java.lang.Class $r1, $r4;
        java.lang.Object $r2;
        java.lang.reflect.Method $r5;

        r0 := @this: b.i.c.k;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, 1);

        $r1 = class "Landroid/graphics/Typeface;";

        $r3 = newarray (java.lang.Class)[3];

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r3[0] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r3[2] = $r4;

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createFromFamiliesWithDefault", $r3);

        virtualinvoke $r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        return $r5;
    }

    public java.lang.reflect.Constructor e(java.lang.Class)
    {
        b.i.c.k r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.reflect.Constructor $r1;

        r0 := @this: b.i.c.k;

        $r2 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        return $r1;
    }

    public java.lang.reflect.Method f(java.lang.Class)
    {
        b.i.c.k r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: b.i.c.k;

        $r2 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("freeze", $r3);

        return $r1;
    }
}
