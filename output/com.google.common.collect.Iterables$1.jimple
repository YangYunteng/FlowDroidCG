public final class com.google.common.collect.Iterables$1 extends com.google.common.collect.FluentIterable
{
    public final java.lang.Iterable val$iterable;

    public void <init>(java.lang.Iterable)
    {
        java.lang.Iterable $r1;
        com.google.common.collect.Iterables$1 r0;

        r0 := @this: com.google.common.collect.Iterables$1;

        $r1 := @parameter0: java.lang.Iterable;

        r0.<com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable> = $r1;

        specialinvoke r0.<com.google.common.collect.FluentIterable: void <init>()>();

        return;
    }

    public static java.lang.Iterable a(java.lang.Iterable)
    {
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        return $r0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r1;
        java.lang.Iterable $r2;
        com.google.common.collect.Iterables$1 r0;

        r0 := @this: com.google.common.collect.Iterables$1;

        $r2 = r0.<com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable>;

        $r1 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator cycle(java.lang.Iterable)>($r2);

        return $r1;
    }

    public java.util.Spliterator spliterator()
    {
        c.i.b.c.Ka $r2;
        java.util.stream.Stream $r3;
        c.i.b.c.Na $r4;
        java.util.Spliterator $r5;
        java.lang.Iterable $r1;
        com.google.common.collect.Iterables$1 r0;

        r0 := @this: com.google.common.collect.Iterables$1;

        $r1 = r0.<com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable>;

        $r2 = new c.i.b.c.Ka;

        specialinvoke $r2.<c.i.b.c.Ka: void <init>(java.lang.Iterable)>($r1);

        $r3 = staticinvoke <g.a.b.e: java.util.stream.Stream a(java.util.function.Supplier)>($r2);

        $r4 = <c.i.b.c.Na: c.i.b.c.Na a>;

        $r3 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>($r4);

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.Spliterator spliterator()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        java.lang.Iterable $r2;
        com.google.common.collect.Iterables$1 r0;

        r0 := @this: com.google.common.collect.Iterables$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (cycled)");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
