public class com.google.common.collect.StandardTable$Column$EntrySet extends com.google.common.collect.Sets$ImprovedAbstractSet
{
    public final com.google.common.collect.StandardTable$Column this$1;

    public void <init>(com.google.common.collect.StandardTable$Column)
    {
        com.google.common.collect.StandardTable$Column $r1;
        com.google.common.collect.StandardTable$Column$EntrySet r0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 := @parameter0: com.google.common.collect.StandardTable$Column;

        r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1> = $r1;

        specialinvoke r0.<com.google.common.collect.Sets$ImprovedAbstractSet: void <init>()>();

        return;
    }

    public void <init>(com.google.common.collect.StandardTable$Column, com.google.common.collect.StandardTable$1)
    {
        com.google.common.collect.StandardTable$Column $r1;
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable$1 $r2;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 := @parameter0: com.google.common.collect.StandardTable$Column;

        $r2 := @parameter1: com.google.common.collect.StandardTable$1;

        specialinvoke r0.<com.google.common.collect.StandardTable$Column$EntrySet: void <init>(com.google.common.collect.StandardTable$Column)>($r1);

        return;
    }

    public void clear()
    {
        com.google.common.collect.StandardTable$Column $r1;
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.base.Predicate $r2;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r2 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate alwaysTrue()>();

        virtualinvoke $r1.<com.google.common.collect.StandardTable$Column: boolean removeFromColumnIf(com.google.common.base.Predicate)>($r2);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        com.google.common.collect.StandardTable$Column $r3;
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable $r4;
        java.lang.Object $r1, $r5, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r5 = $r3.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r6 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <com.google.common.collect.StandardTable: boolean access$300(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r5, $r6);

        return $z0;

     label1:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable $r1;
        com.google.common.collect.StandardTable$Column $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r1 = $r2.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.StandardTable: boolean containsColumn(java.lang.Object)>($r3);

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.StandardTable$Column $r2;
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable$Column$EntrySetIterator $r1;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 = new com.google.common.collect.StandardTable$Column$EntrySetIterator;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        specialinvoke $r1.<com.google.common.collect.StandardTable$Column$EntrySetIterator: void <init>(com.google.common.collect.StandardTable$Column,com.google.common.collect.StandardTable$1)>($r2, null);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        com.google.common.collect.StandardTable$Column $r3;
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable $r4;
        java.lang.Object $r1, $r5, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r5 = $r3.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r6 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <com.google.common.collect.StandardTable: boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r5, $r6);

        return $z0;

     label1:
        return 0;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.base.Predicate $r3;
        java.util.Collection $r2;
        com.google.common.collect.StandardTable$Column $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r2 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate in(java.util.Collection)>($r2);

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate not(com.google.common.base.Predicate)>($r3);

        $z0 = virtualinvoke $r1.<com.google.common.collect.StandardTable$Column: boolean removeFromColumnIf(com.google.common.base.Predicate)>($r3);

        return $z0;
    }

    public int size()
    {
        java.util.Iterator $r5;
        java.util.Collection $r4;
        com.google.common.collect.StandardTable$Column $r1;
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable $r2;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r2 = $r1.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map) $r6;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r6 = $r1.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i0;
    }
}
