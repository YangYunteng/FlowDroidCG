public class com.google.common.collect.Streams$1Splitr extends com.google.common.collect.Streams$MapWithIndexSpliterator implements java.util.function.Consumer
{
    public java.lang.Object holder;
    public final com.google.common.collect.Streams$FunctionWithIndex val$function;

    public void <init>(java.util.Spliterator, long, com.google.common.collect.Streams$FunctionWithIndex)
    {
        com.google.common.collect.Streams$FunctionWithIndex $r2;
        long $l0;
        com.google.common.collect.Streams$1Splitr r0;
        java.util.Spliterator $r1;

        r0 := @this: com.google.common.collect.Streams$1Splitr;

        $r1 := @parameter0: java.util.Spliterator;

        $l0 := @parameter1: long;

        $r2 := @parameter2: com.google.common.collect.Streams$FunctionWithIndex;

        r0.<com.google.common.collect.Streams$1Splitr: com.google.common.collect.Streams$FunctionWithIndex val$function> = $r2;

        specialinvoke r0.<com.google.common.collect.Streams$MapWithIndexSpliterator: void <init>(java.util.Spliterator,long)>($r1, $l0);

        return;
    }

    public void accept(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.Streams$1Splitr r0;

        r0 := @this: com.google.common.collect.Streams$1Splitr;

        $r1 := @parameter0: java.lang.Object;

        r0.<com.google.common.collect.Streams$1Splitr: java.lang.Object holder> = $r1;

        return;
    }

    public com.google.common.collect.Streams$1Splitr createSplit(java.util.Spliterator, long)
    {
        com.google.common.collect.Streams$FunctionWithIndex $r3;
        long $l0;
        com.google.common.collect.Streams$1Splitr r0, $r2;
        java.util.Spliterator $r1;

        r0 := @this: com.google.common.collect.Streams$1Splitr;

        $r1 := @parameter0: java.util.Spliterator;

        $l0 := @parameter1: long;

        $r2 = new com.google.common.collect.Streams$1Splitr;

        $r3 = r0.<com.google.common.collect.Streams$1Splitr: com.google.common.collect.Streams$FunctionWithIndex val$function>;

        specialinvoke $r2.<com.google.common.collect.Streams$1Splitr: void <init>(java.util.Spliterator,long,com.google.common.collect.Streams$FunctionWithIndex)>($r1, $l0, $r3);

        return $r2;
    }

    public volatile com.google.common.collect.Streams$MapWithIndexSpliterator createSplit(java.util.Spliterator, long)
    {
        long $l0;
        com.google.common.collect.Streams$1Splitr r0;
        java.util.Spliterator $r1;

        r0 := @this: com.google.common.collect.Streams$1Splitr;

        $r1 := @parameter0: java.util.Spliterator;

        $l0 := @parameter1: long;

        r0 = virtualinvoke r0.<com.google.common.collect.Streams$1Splitr: com.google.common.collect.Streams$1Splitr createSplit(java.util.Spliterator,long)>($r1, $l0);

        return r0;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Streams$FunctionWithIndex $r4;
        long $l0, $l1;
        com.google.common.collect.Streams$1Splitr r0;
        java.util.function.Consumer $r2;
        java.lang.Object $r1;
        java.util.Spliterator $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Streams$1Splitr;

        $r2 := @parameter0: java.util.function.Consumer;

        $r3 = r0.<com.google.common.collect.Streams$MapWithIndexSpliterator: java.util.Spliterator fromSpliterator>;

        $z0 = interfaceinvoke $r3.<java.util.Spliterator: boolean tryAdvance(java.util.function.Consumer)>(r0);

        if $z0 == 0 goto label6;

     label1:
        $r4 = r0.<com.google.common.collect.Streams$1Splitr: com.google.common.collect.Streams$FunctionWithIndex val$function>;

        $r1 = r0.<com.google.common.collect.Streams$1Splitr: java.lang.Object holder>;

        $l0 = r0.<com.google.common.collect.Streams$MapWithIndexSpliterator: long index>;

     label2:
        $l1 = 1L + $l0;

     label3:
        r0.<com.google.common.collect.Streams$MapWithIndexSpliterator: long index> = $l1;

        $r1 = interfaceinvoke $r4.<com.google.common.collect.Streams$FunctionWithIndex: java.lang.Object apply(java.lang.Object,long)>($r1, $l0);

        interfaceinvoke $r2.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

     label4:
        r0.<com.google.common.collect.Streams$1Splitr: java.lang.Object holder> = null;

        return 1;

     label5:
        $r5 := @caughtexception;

        r0.<com.google.common.collect.Streams$1Splitr: java.lang.Object holder> = null;

        throw $r5;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
