public final class j.a.d.a$b extends java.lang.Thread
{
    public static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater a;
    public final j.a.d.o b;
    public long c;
    public long d;
    public int e;
    public int f;
    public int g;
    public final j.a.d.a h;
    public volatile int indexInArray;
    public volatile java.lang.Object nextParkedWorker;
    public volatile int spins;
    public volatile j.a.d.a$c state;
    public volatile int terminationState;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lj/a/d/a$b;", "terminationState");

        <j.a.d.a$b: java.util.concurrent.atomic.AtomicIntegerFieldUpdater a> = $r0;

        return;
    }

    public void <init>(j.a.d.a)
    {
        j.a.d.o $r2;
        j.a.b.A $r4;
        j.a.d.a $r1;
        int $i0;
        j.a.d.a$b r0;
        java.util.Random $r5;
        j.a.d.a$c $r3;

        r0 := @this: j.a.d.a$b;

        $r1 := @parameter0: j.a.d.a;

        r0.<j.a.d.a$b: j.a.d.a h> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        virtualinvoke r0.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r2 = new j.a.d.o;

        specialinvoke $r2.<j.a.d.o: void <init>()>();

        r0.<j.a.d.a$b: j.a.d.o b> = $r2;

        $r3 = <j.a.d.a$c: j.a.d.a$c d>;

        r0.<j.a.d.a$b: j.a.d.a$c state> = $r3;

        r0.<j.a.d.a$b: int terminationState> = 0;

        $r4 = staticinvoke <j.a.d.a: j.a.b.A m()>();

        r0.<j.a.d.a$b: java.lang.Object nextParkedWorker> = $r4;

        $i0 = staticinvoke <j.a.d.a: int l()>();

        r0.<j.a.d.a$b: int e> = $i0;

        $r5 = staticinvoke <j.a.d.a: java.util.Random f(j.a.d.a)>($r1);

        $i0 = virtualinvoke $r5.<java.util.Random: int nextInt()>();

        r0.<j.a.d.a$b: int f> = $i0;

        return;
    }

    public void <init>(j.a.d.a, int)
    {
        int $i0;
        j.a.d.a$b r0;
        j.a.d.a $r1;

        r0 := @this: j.a.d.a$b;

        $r1 := @parameter0: j.a.d.a;

        $i0 := @parameter1: int;

        specialinvoke r0.<j.a.d.a$b: void <init>(j.a.d.a)>($r1);

        virtualinvoke r0.<j.a.d.a$b: void b(int)>($i0);

        return;
    }

    public final int a(int)
    {
        int $i0, $i1, $i2;
        j.a.d.a$b r0;

        r0 := @this: j.a.d.a$b;

        $i0 := @parameter0: int;

        $i1 = r0.<j.a.d.a$b: int f>;

        $i2 = $i1 << 13;

        $i1 = $i1 ^ $i2;

        r0.<j.a.d.a$b: int f> = $i1;

        $i1 = r0.<j.a.d.a$b: int f>;

        $i2 = $i1 >> 17;

        $i1 = $i1 ^ $i2;

        r0.<j.a.d.a$b: int f> = $i1;

        $i1 = r0.<j.a.d.a$b: int f>;

        $i2 = $i1 << 5;

        $i1 = $i1 ^ $i2;

        r0.<j.a.d.a$b: int f> = $i1;

        $i1 = -1;

        $i1 = $i0 + $i1;

        $i2 = $i1 & $i0;

        if $i2 != 0 goto label1;

        $i0 = r0.<j.a.d.a$b: int f>;

        $i0 = $i0 & $i1;

        return $i0;

     label1:
        $i1 = r0.<j.a.d.a$b: int f>;

        $i1 = $i1 & 2147483647;

        $i0 = $i1 % $i0;

        return $i0;
    }

    public final void a(j.a.d.l)
    {
        j.a.d.a $r3;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r4;
        java.lang.AssertionError $r7;
        j.a.d.l $r1, $r2;
        j.a.d.a$b r0;
        j.a.d.a$c $r5, $r6;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r1 := @parameter0: j.a.d.l;

        $r2 = <j.a.d.l: j.a.d.l a>;

        if $r1 == $r2 goto label5;

        $r3 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r4 = <j.a.d.a: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLongFieldUpdater: long addAndGet(java.lang.Object,long)>($r3, -2097152L);

        $r5 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r6 = <j.a.d.a$c: j.a.d.a$c e>;

        if $r5 == $r6 goto label5;

        $z0 = staticinvoke <j.a.z: boolean a()>();

        if $z0 == 0 goto label4;

        $r6 = <j.a.d.a$c: j.a.d.a$c b>;

        if $r5 != $r6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label4:
        $r5 = <j.a.d.a$c: j.a.d.a$c d>;

        r0.<j.a.d.a$b: j.a.d.a$c state> = $r5;

     label5:
        return;
    }

    public final void a(j.a.d.l, long)
    {
        j.a.d.a $r3;
        java.util.concurrent.Semaphore $r6;
        long $l0, $l1, $l3, $l4;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r4;
        j.a.d.l $r1, $r2;
        j.a.d.n $r7;
        byte $b5;
        int $i2;
        j.a.d.a$b r0;
        j.a.d.a$c $r5;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r1 := @parameter0: j.a.d.l;

        $l1 := @parameter1: long;

        $r2 = <j.a.d.l: j.a.d.l a>;

        if $r1 == $r2 goto label1;

        $r3 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r4 = <j.a.d.a: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLongFieldUpdater: long addAndGet(java.lang.Object,long)>($r3, 2097152L);

        $r5 = <j.a.d.a$c: j.a.d.a$c b>;

        $z0 = virtualinvoke r0.<j.a.d.a$b: boolean a(j.a.d.a$c)>($r5);

        if $z0 == 0 goto label3;

        $r3 = r0.<j.a.d.a$b: j.a.d.a h>;

        staticinvoke <j.a.d.a: void j(j.a.d.a)>($r3);

        return;

     label1:
        $r3 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r6 = staticinvoke <j.a.d.a: java.util.concurrent.Semaphore b(j.a.d.a)>($r3);

        $i2 = virtualinvoke $r6.<java.util.concurrent.Semaphore: int availablePermits()>();

        if $i2 != 0 goto label2;

        return;

     label2:
        $r7 = <j.a.d.m: j.a.d.n g>;

        $l3 = virtualinvoke $r7.<j.a.d.n: long a()>();

        $l4 = $l3 - $l1;

        $l1 = <j.a.d.m: long a>;

        $b5 = $l4 cmp $l1;

        $i2 = (int) $b5;

        if $i2 < 0 goto label3;

        $l4 = r0.<j.a.d.a$b: long d>;

        $l4 = $l3 - $l4;

        $l0 = (long) 5;

        $l1 = $l1 * $l0;

        $b5 = $l4 cmp $l1;

        $i2 = (int) $b5;

        if $i2 < 0 goto label3;

        r0.<j.a.d.a$b: long d> = $l3;

        $r3 = r0.<j.a.d.a$b: j.a.d.a h>;

        staticinvoke <j.a.d.a: void j(j.a.d.a)>($r3);

     label3:
        return;
    }

    public final void a(java.lang.Object)
    {
        j.a.d.a$b r0;
        java.lang.Object $r1;

        r0 := @this: j.a.d.a$b;

        $r1 := @parameter0: java.lang.Object;

        r0.<j.a.d.a$b: java.lang.Object nextParkedWorker> = $r1;

        return;
    }

    public final boolean a()
    {
        j.a.d.l $r3;
        j.a.d.o $r5;
        j.a.d.a $r1;
        j.a.d.a$b r0;
        j.a.d.e $r2;
        j.a.d.i $r4;

        r0 := @this: j.a.d.a$b;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r2 = staticinvoke <j.a.d.a: j.a.d.e d(j.a.d.a)>($r1);

        $r3 = <j.a.d.l: j.a.d.l b>;

        $r4 = virtualinvoke $r2.<j.a.d.e: j.a.d.i a(j.a.d.l)>($r3);

        if $r4 == null goto label1;

        $r5 = r0.<j.a.d.a$b: j.a.d.o b>;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r2 = staticinvoke <j.a.d.a: j.a.d.e d(j.a.d.a)>($r1);

        virtualinvoke $r5.<j.a.d.o: boolean a(j.a.d.i,j.a.d.e)>($r4, $r2);

        return 0;

     label1:
        return 1;
    }

    public final boolean a(long)
    {
        j.a.d.a $r1;
        j.a.d.a$b r0;
        long $l0;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $l0 := @parameter0: long;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        staticinvoke <j.a.d.a: void a(j.a.d.a,j.a.d.a$b)>($r1, r0);

        $z0 = virtualinvoke r0.<j.a.d.a$b: boolean a()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        staticinvoke <java.util.concurrent.locks.LockSupport: void parkNanos(long)>($l0);

        return 1;
    }

    public final boolean a(j.a.d.a$c)
    {
        java.util.concurrent.Semaphore $r2;
        j.a.d.a $r5;
        j.a.d.a$b r0;
        j.a.d.a$c $r1, $r3, $r4;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r1 := @parameter0: j.a.d.a$c;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "newState");

        $r3 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r4 = <j.a.d.a$c: j.a.d.a$c a>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r5 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r2 = staticinvoke <j.a.d.a: java.util.concurrent.Semaphore b(j.a.d.a)>($r5);

        virtualinvoke $r2.<java.util.concurrent.Semaphore: void release()>();

     label3:
        if $r3 == $r1 goto label4;

        r0.<j.a.d.a$b: j.a.d.a$c state> = $r1;

     label4:
        return $z0;
    }

    public final void b()
    {
        j.a.d.a $r2;
        long $l0, $l2;
        byte $b1;
        int $i3;
        j.a.d.a$b r0;
        j.a.d.a$c $r1;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r1 = <j.a.d.a$c: j.a.d.a$c c>;

        virtualinvoke r0.<j.a.d.a$b: boolean a(j.a.d.a$c)>($r1);

        $z0 = virtualinvoke r0.<j.a.d.a$b: boolean a()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<j.a.d.a$b: int terminationState> = 0;

        $l0 = r0.<j.a.d.a$b: long c>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r2 = r0.<j.a.d.a$b: j.a.d.a h>;

        $l2 = staticinvoke <j.a.d.a: long e(j.a.d.a)>($r2);

        $l0 = $l0 + $l2;

        r0.<j.a.d.a$b: long c> = $l0;

     label2:
        $r2 = r0.<j.a.d.a$b: j.a.d.a h>;

        $l0 = staticinvoke <j.a.d.a: long e(j.a.d.a)>($r2);

        $z0 = virtualinvoke r0.<j.a.d.a$b: boolean a(long)>($l0);

        if $z0 != 0 goto label3;

        return;

     label3:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = r0.<j.a.d.a$b: long c>;

        $l0 = $l0 - $l2;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label4;

        r0.<j.a.d.a$b: long c> = 0L;

        virtualinvoke r0.<j.a.d.a$b: void p()>();

     label4:
        return;
    }

    public final void b(int)
    {
        j.a.d.a $r2;
        int $i0;
        j.a.d.a$b r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: j.a.d.a$b;

        $i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r3 = staticinvoke <j.a.d.a: java.lang.String g(j.a.d.a)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-worker-");

        if $i0 != 0 goto label1;

        $r3 = "TERMINATED";

        goto label2;

     label1:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.Thread: void setName(java.lang.String)>($r3);

        r0.<j.a.d.a$b: int indexInArray> = $i0;

        return;
    }

    public final void b(j.a.d.l)
    {
        java.lang.AssertionError $r5;
        j.a.d.l $r2, $r4;
        int $i0;
        j.a.d.a$b r0;
        j.a.d.a$c $r1, $r3;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r2 := @parameter0: j.a.d.l;

        r0.<j.a.d.a$b: long c> = 0L;

        r0.<j.a.d.a$b: int g> = 0;

        $r3 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r1 = <j.a.d.a$c: j.a.d.a$c c>;

        if $r3 != $r1 goto label5;

        $z0 = staticinvoke <j.a.z: boolean a()>();

        if $z0 == 0 goto label4;

        $r4 = <j.a.d.l: j.a.d.l b>;

        if $r2 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $r1 = <j.a.d.a$c: j.a.d.a$c b>;

        r0.<j.a.d.a$b: j.a.d.a$c state> = $r1;

        $i0 = staticinvoke <j.a.d.a: int l()>();

        r0.<j.a.d.a$b: int e> = $i0;

     label5:
        r0.<j.a.d.a$b: int spins> = 0;

        return;
    }

    public final void c()
    {
        int $i0, $i1;
        j.a.d.a$b r0;
        long $l2;
        j.a.d.a$c $r1;

        r0 := @this: j.a.d.a$b;

        $i0 = r0.<j.a.d.a$b: int spins>;

        $i1 = staticinvoke <j.a.d.a: int k()>();

        if $i0 > $i1 goto label1;

        $i1 = $i0 + 1;

        r0.<j.a.d.a$b: int spins> = $i1;

        $i1 = staticinvoke <j.a.d.a: int j()>();

        if $i0 < $i1 goto label3;

        staticinvoke <java.lang.Thread: void yield()>();

        return;

     label1:
        $i0 = r0.<j.a.d.a$b: int e>;

        $i1 = staticinvoke <j.a.d.a: int i()>();

        if $i0 >= $i1 goto label2;

        $i0 = r0.<j.a.d.a$b: int e>;

        $i0 = $i0 * 3;

        $i0 = $i0 >>> 1;

        $i1 = staticinvoke <j.a.d.a: int i()>();

        $i0 = staticinvoke <i.g.f: int b(int,int)>($i0, $i1);

        r0.<j.a.d.a$b: int e> = $i0;

     label2:
        $r1 = <j.a.d.a$c: j.a.d.a$c c>;

        virtualinvoke r0.<j.a.d.a$b: boolean a(j.a.d.a$c)>($r1);

        $i0 = r0.<j.a.d.a$b: int e>;

        $l2 = (long) $i0;

        virtualinvoke r0.<j.a.d.a$b: boolean a(long)>($l2);

     label3:
        return;
    }

    public final j.a.d.i d()
    {
        j.a.d.l $r1;
        j.a.d.o $r3;
        j.a.d.a $r4;
        j.a.d.a$b r0;
        j.a.d.e $r5;
        j.a.d.i $r2;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $z0 = virtualinvoke r0.<j.a.d.a$b: boolean m()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<j.a.d.a$b: j.a.d.i e()>();

        return $r2;

     label1:
        $r3 = r0.<j.a.d.a$b: j.a.d.o b>;

        $r2 = virtualinvoke $r3.<j.a.d.o: j.a.d.i b()>();

        if $r2 == null goto label2;

        return $r2;

     label2:
        $r4 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r5 = staticinvoke <j.a.d.a: j.a.d.e d(j.a.d.a)>($r4);

        $r1 = <j.a.d.l: j.a.d.l b>;

        $r2 = virtualinvoke $r5.<j.a.d.e: j.a.d.i a(j.a.d.l)>($r1);

        return $r2;
    }

    public final j.a.d.i e()
    {
        j.a.d.a $r2;
        j.a.d.e $r3;
        j.a.d.i $r4;
        j.a.d.l $r1;
        j.a.d.o $r5;
        int $i0;
        j.a.d.a$b r0;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r2 = r0.<j.a.d.a$b: j.a.d.a h>;

        $i0 = staticinvoke <j.a.d.a: int a(j.a.d.a)>($r2);

        $i0 = $i0 * 2;

        $i0 = virtualinvoke r0.<j.a.d.a$b: int a(int)>($i0);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r3 = staticinvoke <j.a.d.a: j.a.d.e d(j.a.d.a)>($r2);

        $r1 = <j.a.d.l: j.a.d.l a>;

        $r4 = virtualinvoke $r3.<j.a.d.e: j.a.d.i a(j.a.d.l)>($r1);

        if $r4 == null goto label3;

        return $r4;

     label3:
        $r5 = r0.<j.a.d.a$b: j.a.d.o b>;

        $r4 = virtualinvoke $r5.<j.a.d.o: j.a.d.i b()>();

        if $r4 == null goto label4;

        return $r4;

     label4:
        if $z0 != 0 goto label5;

        $r2 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r3 = staticinvoke <j.a.d.a: j.a.d.e d(j.a.d.a)>($r2);

        $r6 = virtualinvoke $r3.<j.a.b.q: java.lang.Object c()>();

        $r4 = (j.a.d.i) $r6;

        if $r4 == null goto label5;

        return $r4;

     label5:
        $r4 = virtualinvoke r0.<j.a.d.a$b: j.a.d.i o()>();

        return $r4;
    }

    public final int f()
    {
        int i0;
        j.a.d.a$b r0;

        r0 := @this: j.a.d.a$b;

        i0 = r0.<j.a.d.a$b: int indexInArray>;

        return i0;
    }

    public final j.a.d.o g()
    {
        j.a.d.a$b r0;
        j.a.d.o r1;

        r0 := @this: j.a.d.a$b;

        r1 = r0.<j.a.d.a$b: j.a.d.o b>;

        return r1;
    }

    public final j.a.d.a$c getState()
    {
        j.a.d.a$b r0;
        j.a.d.a$c r1;

        r0 := @this: j.a.d.a$b;

        r1 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        return r1;
    }

    public final java.lang.Object h()
    {
        j.a.d.a$b r0;
        java.lang.Object r1;

        r0 := @this: j.a.d.a$b;

        r1 = r0.<j.a.d.a$b: java.lang.Object nextParkedWorker>;

        return r1;
    }

    public final j.a.d.a i()
    {
        j.a.d.a$b r0;
        j.a.d.a r1;

        r0 := @this: j.a.d.a$b;

        r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        return r1;
    }

    public final void j()
    {
        int $i0;
        j.a.d.a$b r0;

        r0 := @this: j.a.d.a$b;

        $i0 = staticinvoke <j.a.d.a: int l()>();

        r0.<j.a.d.a$b: int e> = $i0;

        r0.<j.a.d.a$b: int spins> = 0;

        return;
    }

    public final boolean k()
    {
        j.a.d.a$b r0;
        j.a.d.a$c $r1, $r2;

        r0 := @this: j.a.d.a$b;

        $r2 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r1 = <j.a.d.a$c: j.a.d.a$c b>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean l()
    {
        j.a.d.a$b r0;
        j.a.d.a$c $r1, $r2;

        r0 := @this: j.a.d.a$b;

        $r2 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r1 = <j.a.d.a$c: j.a.d.a$c c>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean m()
    {
        j.a.d.a $r3;
        java.util.concurrent.Semaphore $r4;
        j.a.d.a$b r0;
        j.a.d.a$c $r1, $r2;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r2 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r1 = <j.a.d.a$c: j.a.d.a$c a>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        $r3 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r4 = staticinvoke <j.a.d.a: java.util.concurrent.Semaphore b(j.a.d.a)>($r3);

        $z0 = virtualinvoke $r4.<java.util.concurrent.Semaphore: boolean tryAcquire()>();

        if $z0 == 0 goto label2;

        $r1 = <j.a.d.a$c: j.a.d.a$c a>;

        r0.<j.a.d.a$b: j.a.d.a$c state> = $r1;

        return 1;

     label2:
        return 0;
    }

    public final boolean n()
    {
        java.lang.IllegalStateException $r5;
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r1;
        int $i0, $i1;
        j.a.d.a$b r0;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $i0 = r0.<j.a.d.a$b: int terminationState>;

        if $i0 != 1 goto label1;

        return 0;

     label1:
        $i1 = -1;

        if $i0 != $i1 goto label2;

        return 0;

     label2:
        if $i0 != 0 goto label3;

        $r1 = <j.a.d.a$b: java.util.concurrent.atomic.AtomicIntegerFieldUpdater a>;

        $i0 = -1;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(r0, 0, $i0);

        return $z0;

     label3:
        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid terminationState = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r5;
    }

    public final j.a.d.i o()
    {
        j.a.d.a $r1;
        j.a.d.a$b[] $r2;
        j.a.d.e $r6;
        j.a.d.i $r7;
        j.a.d.o $r4, $r5;
        int $i0, $i1;
        j.a.d.a$b r0, $r3;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $i0 = staticinvoke <j.a.d.a: int c(j.a.d.a)>($r1);

        if $i0 >= 2 goto label1;

        return null;

     label1:
        $i1 = r0.<j.a.d.a$b: int g>;

        if $i1 != 0 goto label2;

        $i1 = virtualinvoke r0.<j.a.d.a$b: int a(int)>($i0);

     label2:
        $i1 = $i1 + 1;

        if $i1 <= $i0 goto label3;

        $i1 = 1;

     label3:
        r0.<j.a.d.a$b: int g> = $i1;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r2 = staticinvoke <j.a.d.a: j.a.d.a$b[] h(j.a.d.a)>($r1);

        $r3 = $r2[$i1];

        if $r3 == null goto label4;

        if $r3 == r0 goto label4;

        $r4 = r0.<j.a.d.a$b: j.a.d.o b>;

        $r5 = $r3.<j.a.d.a$b: j.a.d.o b>;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r6 = staticinvoke <j.a.d.a: j.a.d.e d(j.a.d.a)>($r1);

        $z0 = virtualinvoke $r4.<j.a.d.o: boolean a(j.a.d.o,j.a.d.e)>($r5, $r6);

        if $z0 == 0 goto label4;

        $r4 = r0.<j.a.d.a$b: j.a.d.o b>;

        $r7 = virtualinvoke $r4.<j.a.d.o: j.a.d.i b()>();

        return $r7;

     label4:
        return null;
    }

    public final void p()
    {
        java.lang.Throwable $r9;
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r3;
        j.a.d.a $r1;
        i.l $r7;
        j.a.d.a$b[] $r2, $r5;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r4;
        long $l2;
        java.lang.NullPointerException r10;
        int $i0, $i1;
        j.a.d.a$b r0, $r6;
        j.a.d.a$c $r8;
        boolean $z0;

        r0 := @this: j.a.d.a$b;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r2 = staticinvoke <j.a.d.a: j.a.d.a$b[] h(j.a.d.a)>($r1);

        entermonitor $r2;

     label01:
        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $z0 = staticinvoke <j.a.d.a: boolean i(j.a.d.a)>($r1);

     label02:
        if $z0 == 0 goto label03;

        exitmonitor $r2;

        return;

     label03:
        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $i0 = staticinvoke <j.a.d.a: int c(j.a.d.a)>($r1);

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $i1 = staticinvoke <j.a.d.a: int a(j.a.d.a)>($r1);

     label04:
        if $i0 > $i1 goto label05;

        exitmonitor $r2;

        return;

     label05:
        $z0 = virtualinvoke r0.<j.a.d.a$b: boolean a()>();

     label06:
        if $z0 != 0 goto label07;

        exitmonitor $r2;

        return;

     label07:
        $r3 = <j.a.d.a$b: java.util.concurrent.atomic.AtomicIntegerFieldUpdater a>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(r0, 0, 1);

     label08:
        if $z0 != 0 goto label09;

        exitmonitor $r2;

        return;

     label09:
        $i0 = r0.<j.a.d.a$b: int indexInArray>;

        virtualinvoke r0.<j.a.d.a$b: void b(int)>(0);

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        staticinvoke <j.a.d.a: void a(j.a.d.a,j.a.d.a$b,int,int)>($r1, r0, $i0, 0);

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r4 = <j.a.d.a: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        $l2 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndDecrement(java.lang.Object)>($r1);

        $l2 = $l2 & 2097151L;

        $i1 = (int) $l2;

        if $i1 == $i0 goto label12;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r5 = staticinvoke <j.a.d.a: j.a.d.a$b[] h(j.a.d.a)>($r1);

        $r6 = $r5[$i1];

        if $r6 == null goto label10;

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r5 = staticinvoke <j.a.d.a: j.a.d.a$b[] h(j.a.d.a)>($r1);

        $r5[$i0] = $r6;

        virtualinvoke $r6.<j.a.d.a$b: void b(int)>($i0);

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        staticinvoke <j.a.d.a: void a(j.a.d.a,j.a.d.a$b,int,int)>($r1, $r6, $i1, $i0);

        goto label12;

     label10:
        staticinvoke <i.f.b.i: void a()>();

     label11:
        r10 = new java.lang.NullPointerException;

        specialinvoke r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r10;

     label12:
        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $r5 = staticinvoke <j.a.d.a: j.a.d.a$b[] h(j.a.d.a)>($r1);

        $r5[$i1] = null;

        $r7 = <i.l: i.l a>;

     label13:
        exitmonitor $r2;

        $r8 = <j.a.d.a$c: j.a.d.a$c e>;

        r0.<j.a.d.a$b: j.a.d.a$c state> = $r8;

        return;

     label14:
        $r9 := @caughtexception;

        exitmonitor $r2;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void run()
    {
        j.a.d.a $r1;
        long $l0;
        j.a.d.i $r4;
        j.a.d.l $r5;
        j.a.d.a$b r0;
        j.a.d.a$c $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: j.a.d.a$b;

        $z0 = 0;

     label1:
        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        $z1 = staticinvoke <j.a.d.a: boolean i(j.a.d.a)>($r1);

        if $z1 != 0 goto label6;

        $r2 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r3 = <j.a.d.a$c: j.a.d.a$c e>;

        if $r2 == $r3 goto label6;

        $r4 = virtualinvoke r0.<j.a.d.a$b: j.a.d.i d()>();

        if $r4 != null goto label4;

        $r2 = r0.<j.a.d.a$b: j.a.d.a$c state>;

        $r3 = <j.a.d.a$c: j.a.d.a$c a>;

        if $r2 != $r3 goto label2;

        virtualinvoke r0.<j.a.d.a$b: void c()>();

        goto label3;

     label2:
        virtualinvoke r0.<j.a.d.a$b: void b()>();

     label3:
        $z0 = 1;

        goto label1;

     label4:
        $r5 = virtualinvoke $r4.<j.a.d.i: j.a.d.l a()>();

        if $z0 == 0 goto label5;

        virtualinvoke r0.<j.a.d.a$b: void b(j.a.d.l)>($r5);

        $z0 = 0;

     label5:
        $l0 = $r4.<j.a.d.i: long a>;

        virtualinvoke r0.<j.a.d.a$b: void a(j.a.d.l,long)>($r5, $l0);

        $r1 = r0.<j.a.d.a$b: j.a.d.a h>;

        staticinvoke <j.a.d.a: void a(j.a.d.a,j.a.d.i)>($r1, $r4);

        virtualinvoke r0.<j.a.d.a$b: void a(j.a.d.l)>($r5);

        goto label1;

     label6:
        $r2 = <j.a.d.a$c: j.a.d.a$c e>;

        virtualinvoke r0.<j.a.d.a$b: boolean a(j.a.d.a$c)>($r2);

        return;
    }
}
