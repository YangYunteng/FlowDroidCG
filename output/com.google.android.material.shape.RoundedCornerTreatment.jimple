public class com.google.android.material.shape.RoundedCornerTreatment extends com.google.android.material.shape.CornerTreatment
{
    public float radius;

    public void <init>()
    {
        com.google.android.material.shape.RoundedCornerTreatment r0;

        r0 := @this: com.google.android.material.shape.RoundedCornerTreatment;

        specialinvoke r0.<com.google.android.material.shape.CornerTreatment: void <init>()>();

        r0.<com.google.android.material.shape.RoundedCornerTreatment: float radius> = -1.0F;

        return;
    }

    public void <init>(float)
    {
        float $f0;
        com.google.android.material.shape.RoundedCornerTreatment r0;

        r0 := @this: com.google.android.material.shape.RoundedCornerTreatment;

        $f0 := @parameter0: float;

        specialinvoke r0.<com.google.android.material.shape.CornerTreatment: void <init>()>();

        r0.<com.google.android.material.shape.RoundedCornerTreatment: float radius> = -1.0F;

        r0.<com.google.android.material.shape.RoundedCornerTreatment: float radius> = $f0;

        return;
    }

    public void getCornerPath(com.google.android.material.shape.ShapePath, float, float, float)
    {
        com.google.android.material.shape.RoundedCornerTreatment r0;
        float $f0, $f1, $f2, $f3, $f4;
        com.google.android.material.shape.ShapePath $r1;

        r0 := @this: com.google.android.material.shape.RoundedCornerTreatment;

        $r1 := @parameter0: com.google.android.material.shape.ShapePath;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 = $f2 * $f1;

        $f4 = 180.0F - $f0;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void reset(float,float,float,float)>(0.0F, $f3, 180.0F, $f4);

        $f2 = $f2 * 2.0F;

        $f1 = $f2 * $f1;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void addArc(float,float,float,float,float,float)>(0.0F, 0.0F, $f1, $f1, 180.0F, $f0);

        return;
    }
}
