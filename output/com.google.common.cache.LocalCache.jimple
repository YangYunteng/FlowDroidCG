public class com.google.common.cache.LocalCache extends java.util.AbstractMap implements java.util.concurrent.ConcurrentMap
{
    public static final int CONTAINS_VALUE_RETRIES;
    public static final java.util.Queue DISCARDING_QUEUE;
    public static final int DRAIN_MAX;
    public static final int DRAIN_THRESHOLD;
    public static final int MAXIMUM_CAPACITY;
    public static final int MAX_SEGMENTS;
    public static final com.google.common.cache.LocalCache$ValueReference UNSET;
    public static final java.util.logging.Logger logger;
    public final int concurrencyLevel;
    public final com.google.common.cache.CacheLoader defaultLoader;
    public final com.google.common.cache.LocalCache$EntryFactory entryFactory;
    public java.util.Set entrySet;
    public final long expireAfterAccessNanos;
    public final long expireAfterWriteNanos;
    public final com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter;
    public final com.google.common.base.Equivalence keyEquivalence;
    public java.util.Set keySet;
    public final com.google.common.cache.LocalCache$Strength keyStrength;
    public final long maxWeight;
    public final long refreshNanos;
    public final com.google.common.cache.RemovalListener removalListener;
    public final java.util.Queue removalNotificationQueue;
    public final int segmentMask;
    public final int segmentShift;
    public final com.google.common.cache.LocalCache$Segment[] segments;
    public final com.google.common.base.Ticker ticker;
    public final com.google.common.base.Equivalence valueEquivalence;
    public final com.google.common.cache.LocalCache$Strength valueStrength;
    public java.util.Collection values;
    public final com.google.common.cache.Weigher weigher;

    static void <clinit>()
    {
        com.google.common.cache.LocalCache$2 $r4;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        com.google.common.cache.LocalCache$1 $r3;

        <com.google.common.cache.LocalCache: int MAX_SEGMENTS> = 65536;

        <com.google.common.cache.LocalCache: int MAXIMUM_CAPACITY> = 1073741824;

        <com.google.common.cache.LocalCache: int DRAIN_THRESHOLD> = 63;

        <com.google.common.cache.LocalCache: int DRAIN_MAX> = 16;

        <com.google.common.cache.LocalCache: int CONTAINS_VALUE_RETRIES> = 3;

        $r0 = class "Lcom/google/common/cache/LocalCache;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.cache.LocalCache: java.util.logging.Logger logger> = $r2;

        $r3 = new com.google.common.cache.LocalCache$1;

        specialinvoke $r3.<com.google.common.cache.LocalCache$1: void <init>()>();

        <com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$ValueReference UNSET> = $r3;

        $r4 = new com.google.common.cache.LocalCache$2;

        specialinvoke $r4.<com.google.common.cache.LocalCache$2: void <init>()>();

        <com.google.common.cache.LocalCache: java.util.Queue DISCARDING_QUEUE> = $r4;

        return;
    }

    public void <init>(com.google.common.cache.CacheBuilder, com.google.common.cache.CacheLoader)
    {
        com.google.common.cache.LocalCache$Strength $r3;
        com.google.common.cache.AbstractCache$StatsCounter $r13;
        com.google.common.base.Supplier $r11;
        long $l0, $l8, $l9;
        com.google.common.cache.LocalCache r0;
        byte $b1;
        int $i2, $i3, $i4, $i5, $i6, $i7;
        com.google.common.cache.LocalCache$EntryFactory $r10;
        com.google.common.cache.CacheBuilder$NullListener $r7;
        com.google.common.cache.Weigher $r5;
        boolean $z0, $z1;
        com.google.common.cache.LocalCache$Segment[] $r14;
        com.google.common.base.Equivalence $r4;
        com.google.common.base.Ticker $r9;
        com.google.common.cache.LocalCache$Segment $r15;
        com.google.common.cache.CacheLoader $r2;
        com.google.common.cache.RemovalListener $r6;
        java.lang.Object $r12;
        com.google.common.cache.CacheBuilder $r1;
        java.util.Queue $r8;
        java.util.concurrent.ConcurrentLinkedQueue $r16;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: com.google.common.cache.CacheBuilder;

        $r2 := @parameter1: com.google.common.cache.CacheLoader;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        $i2 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: int getConcurrencyLevel()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 65536);

        r0.<com.google.common.cache.LocalCache: int concurrencyLevel> = $i2;

        $r3 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.LocalCache$Strength getKeyStrength()>();

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength keyStrength> = $r3;

        $r3 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.LocalCache$Strength getValueStrength()>();

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength valueStrength> = $r3;

        $r4 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.base.Equivalence getKeyEquivalence()>();

        r0.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence> = $r4;

        $r4 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.base.Equivalence getValueEquivalence()>();

        r0.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence valueEquivalence> = $r4;

        $l0 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: long getMaximumWeight()>();

        r0.<com.google.common.cache.LocalCache: long maxWeight> = $l0;

        $r5 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.Weigher getWeigher()>();

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.Weigher weigher> = $r5;

        $l0 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: long getExpireAfterAccessNanos()>();

        r0.<com.google.common.cache.LocalCache: long expireAfterAccessNanos> = $l0;

        $l0 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: long getExpireAfterWriteNanos()>();

        r0.<com.google.common.cache.LocalCache: long expireAfterWriteNanos> = $l0;

        $l0 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: long getRefreshNanos()>();

        r0.<com.google.common.cache.LocalCache: long refreshNanos> = $l0;

        $r6 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.cache.RemovalListener getRemovalListener()>();

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.RemovalListener removalListener> = $r6;

        $r6 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.RemovalListener removalListener>;

        $r7 = <com.google.common.cache.CacheBuilder$NullListener: com.google.common.cache.CacheBuilder$NullListener INSTANCE>;

        if $r6 != $r7 goto label01;

        $r8 = staticinvoke <com.google.common.cache.LocalCache: java.util.Queue discardingQueue()>();

        goto label02;

     label01:
        $r16 = new java.util.concurrent.ConcurrentLinkedQueue;

        $r8 = $r16;

        specialinvoke $r16.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

     label02:
        r0.<com.google.common.cache.LocalCache: java.util.Queue removalNotificationQueue> = $r8;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean recordsTime()>();

        $r9 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.base.Ticker getTicker(boolean)>($z0);

        r0.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker> = $r9;

        $r3 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength keyStrength>;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean usesAccessEntries()>();

        $z1 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean usesWriteEntries()>();

        $r10 = staticinvoke <com.google.common.cache.LocalCache$EntryFactory: com.google.common.cache.LocalCache$EntryFactory getFactory(com.google.common.cache.LocalCache$Strength,boolean,boolean)>($r3, $z0, $z1);

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$EntryFactory entryFactory> = $r10;

        $r11 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.base.Supplier getStatsCounterSupplier()>();

        $r12 = interfaceinvoke $r11.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r13 = (com.google.common.cache.AbstractCache$StatsCounter) $r12;

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter> = $r13;

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.CacheLoader defaultLoader> = $r2;

        $i2 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: int getInitialCapacity()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 1073741824);

        $i3 = $i2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean evictsBySize()>();

        if $z0 == 0 goto label03;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean customWeigher()>();

        if $z0 != 0 goto label03;

        $l0 = r0.<com.google.common.cache.LocalCache: long maxWeight>;

        $i4 = (int) $l0;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

     label03:
        $i2 = 0;

        $i4 = 1;

        $i5 = 1;

        $i6 = 0;

     label04:
        $i7 = r0.<com.google.common.cache.LocalCache: int concurrencyLevel>;

        if $i5 >= $i7 goto label06;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean evictsBySize()>();

        if $z0 == 0 goto label05;

        $i7 = $i5 * 20;

        $l8 = (long) $i7;

        $l0 = r0.<com.google.common.cache.LocalCache: long maxWeight>;

        $b1 = $l8 cmp $l0;

        $i7 = (int) $b1;

        if $i7 > 0 goto label06;

     label05:
        $i6 = $i6 + 1;

        $i5 = $i5 << 1;

        goto label04;

     label06:
        $i6 = 32 - $i6;

        r0.<com.google.common.cache.LocalCache: int segmentShift> = $i6;

        $i6 = -1;

        $i6 = $i5 + $i6;

        r0.<com.google.common.cache.LocalCache: int segmentMask> = $i6;

        $r14 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] newSegmentArray(int)>($i5);

        r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments> = $r14;

        $i6 = $i3 / $i5;

        $i7 = $i6 * $i5;

        if $i7 >= $i3 goto label07;

        $i6 = $i6 + 1;

     label07:
        if $i4 >= $i6 goto label08;

        $i4 = $i4 << 1;

        goto label07;

     label08:
        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean evictsBySize()>();

        if $z0 == 0 goto label11;

        $l8 = r0.<com.google.common.cache.LocalCache: long maxWeight>;

        $l9 = (long) $i5;

        $l0 = $l8 / $l9;

        $l0 = $l0 + 1L;

        $l8 = $l8 % $l9;

     label09:
        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $i3 = lengthof $r14;

        if $i2 >= $i3 goto label12;

        $l9 = (long) $i2;

        $b1 = $l9 cmp $l8;

        if $b1 != 0 goto label10;

        $l0 = $l0 - 1L;

     label10:
        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $r11 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.base.Supplier getStatsCounterSupplier()>();

        $r12 = interfaceinvoke $r11.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r13 = (com.google.common.cache.AbstractCache$StatsCounter) $r12;

        $r15 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter)>($i4, $l0, $r13);

        $r14[$i2] = $r15;

        $i2 = $i2 + 1;

        goto label09;

     label11:
        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $i3 = lengthof $r14;

        if $i2 >= $i3 goto label12;

        $r11 = virtualinvoke $r1.<com.google.common.cache.CacheBuilder: com.google.common.base.Supplier getStatsCounterSupplier()>();

        $r12 = interfaceinvoke $r11.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r13 = (com.google.common.cache.AbstractCache$StatsCounter) $r12;

        $r15 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter)>($i4, -1L, $r13);

        $r14[$i2] = $r15;

        $i2 = $i2 + 1;

        goto label11;

     label12:
        return;
    }

    public static java.lang.Object a(java.lang.Object, java.util.function.BiFunction, java.lang.Object, java.lang.Object)
    {
        java.util.function.BiFunction $r0;
        java.lang.Object $r1, $r2, $r3;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.util.function.BiFunction;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        if $r2 != null goto label1;

        return $r3;

     label1:
        $r3 = interfaceinvoke $r0.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r3;
    }

    public static java.lang.Object a(java.util.function.BiFunction, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        java.util.function.BiFunction $r2;

        $r2 := @parameter0: java.util.function.BiFunction;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $r0 = interfaceinvoke $r2.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $r0;
    }

    public static java.lang.Object a(java.util.function.Function, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2, $r3;
        java.util.function.Function $r0;

        $r0 := @parameter0: java.util.function.Function;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        if $r3 != null goto label1;

        $r1 = interfaceinvoke $r0.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        return $r1;

     label1:
        return $r3;
    }

    public static java.util.ArrayList access$200(java.util.Collection)
    {
        java.util.ArrayList $r0;
        java.util.Collection $r1;

        $r1 := @parameter0: java.util.Collection;

        $r0 = staticinvoke <com.google.common.cache.LocalCache: java.util.ArrayList toArrayList(java.util.Collection)>($r1);

        return $r0;
    }

    public static void connectAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r1 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        interfaceinvoke $r0.<com.google.common.cache.LocalCache$ReferenceEntry: void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r1);

        interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r0);

        return;
    }

    public static void connectWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r1 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        interfaceinvoke $r0.<com.google.common.cache.LocalCache$ReferenceEntry: void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r1);

        interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r0);

        return;
    }

    public static java.util.Queue discardingQueue()
    {
        java.util.Queue r0;

        r0 = <com.google.common.cache.LocalCache: java.util.Queue DISCARDING_QUEUE>;

        return r0;
    }

    public static com.google.common.cache.LocalCache$ReferenceEntry nullEntry()
    {
        com.google.common.cache.LocalCache$NullEntry r0;

        r0 = <com.google.common.cache.LocalCache$NullEntry: com.google.common.cache.LocalCache$NullEntry INSTANCE>;

        return r0;
    }

    public static void nullifyAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r1 = staticinvoke <com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$ReferenceEntry nullEntry()>();

        interfaceinvoke $r0.<com.google.common.cache.LocalCache$ReferenceEntry: void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r1);

        interfaceinvoke $r0.<com.google.common.cache.LocalCache$ReferenceEntry: void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r1);

        return;
    }

    public static void nullifyWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r1 = staticinvoke <com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$ReferenceEntry nullEntry()>();

        interfaceinvoke $r0.<com.google.common.cache.LocalCache$ReferenceEntry: void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r1);

        interfaceinvoke $r0.<com.google.common.cache.LocalCache$ReferenceEntry: void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry)>($r1);

        return;
    }

    public static int rehash(int)
    {
        int $i0, $i1, $i2;

        $i1 := @parameter0: int;

        $i0 = $i1 << 15;

        $i2 = -12931;

        $i0 = $i0 ^ $i2;

        $i1 = $i1 + $i0;

        $i0 = $i1 >>> 10;

        $i1 = $i1 ^ $i0;

        $i0 = $i1 << 3;

        $i1 = $i1 + $i0;

        $i0 = $i1 >>> 6;

        $i1 = $i1 ^ $i0;

        $i2 = $i1 << 2;

        $i0 = $i1 << 14;

        $i0 = $i2 + $i0;

        $i1 = $i1 + $i0;

        $i0 = $i1 >>> 16;

        $i1 = $i1 ^ $i0;

        return $i1;
    }

    public static java.util.ArrayList toArrayList(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection $r1;
        int $i0;
        java.util.ArrayList $r0;

        $r1 := @parameter0: java.util.Collection;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        staticinvoke <com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>($r0, $r2);

        return $r0;
    }

    public static com.google.common.cache.LocalCache$ValueReference unset()
    {
        com.google.common.cache.LocalCache$ValueReference r0;

        r0 = <com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$ValueReference UNSET>;

        return r0;
    }

    public void cleanUp()
    {
        com.google.common.cache.LocalCache r0;
        int $i0, $i1;
        com.google.common.cache.LocalCache$Segment $r2;
        com.google.common.cache.LocalCache$Segment[] $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: void cleanUp()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        com.google.common.cache.LocalCache r0;
        int $i0, $i1;
        com.google.common.cache.LocalCache$Segment $r2;
        com.google.common.cache.LocalCache$Segment[] $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: void clear()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.Object compute(java.lang.Object, java.util.function.BiFunction)
    {
        com.google.common.cache.LocalCache r0;
        java.util.function.BiFunction $r1;
        int $i0;
        java.lang.Object $r2;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.function.BiFunction;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: java.lang.Object compute(java.lang.Object,int,java.util.function.BiFunction)>($r2, $i0, $r1);

        return $r2;
    }

    public java.lang.Object computeIfAbsent(java.lang.Object, java.util.function.Function)
    {
        com.google.common.cache.LocalCache r0;
        java.lang.Object $r3;
        c.i.b.b.a $r2;
        java.util.function.Function $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.function.Function;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = new c.i.b.b.a;

        specialinvoke $r2.<c.i.b.b.a: void <init>(java.util.function.Function,java.lang.Object)>($r1, $r3);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>($r3, $r2);

        return $r3;
    }

    public java.lang.Object computeIfPresent(java.lang.Object, java.util.function.BiFunction)
    {
        com.google.common.cache.LocalCache r0;
        java.util.function.BiFunction $r1;
        java.lang.Object $r3;
        c.i.b.b.b $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.function.BiFunction;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = new c.i.b.b.b;

        specialinvoke $r2.<c.i.b.b.b: void <init>(java.util.function.BiFunction)>($r1);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>($r3, $r2);

        return $r3;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.cache.LocalCache$Segment $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $z0 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: boolean containsKey(java.lang.Object,int)>($r1, $i0);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        long $l1, $l2, $l4, $l8;
        java.util.concurrent.atomic.AtomicReferenceArray $r5;
        com.google.common.cache.LocalCache r0;
        byte $b9;
        int $i0, $i3, $i5, $i6, $i7;
        com.google.common.cache.LocalCache$Segment[] $r4;
        boolean $z0;
        com.google.common.base.Equivalence $r8;
        com.google.common.base.Ticker $r3;
        com.google.common.cache.LocalCache$Segment $r2;
        com.google.common.cache.LocalCache$ReferenceEntry $r7;
        java.lang.Object $r1, $r6;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r3 = r0.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        $l2 = virtualinvoke $r3.<com.google.common.base.Ticker: long read()>();

        $r4 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $l1 = -1L;

        $i3 = 0;

     label02:
        if $i3 >= 3 goto label11;

        $i0 = lengthof $r4;

        $l4 = 0L;

        $i5 = 0;

     label03:
        if $i5 >= $i0 goto label09;

        $r2 = $r4[$i5];

        $i6 = $r2.<com.google.common.cache.LocalCache$Segment: int count>;

        $r5 = $r2.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i6 = 0;

     label04:
        $i7 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        if $i6 >= $i7 goto label08;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i6);

        $r7 = (com.google.common.cache.LocalCache$ReferenceEntry) $r6;

     label05:
        if $r7 == null goto label07;

        $r6 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long)>($r7, $l2);

        if $r6 == null goto label06;

        $r8 = r0.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence valueEquivalence>;

        $z0 = virtualinvoke $r8.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>($r1, $r6);

        if $z0 == 0 goto label06;

        return 1;

     label06:
        $r7 = interfaceinvoke $r7.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label05;

     label07:
        $i6 = $i6 + 1;

        goto label04;

     label08:
        $i6 = $r2.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $l8 = (long) $i6;

        $l4 = $l4 + $l8;

        $i5 = $i5 + 1;

        goto label03;

     label09:
        $b9 = $l4 cmp $l1;

        if $b9 != 0 goto label10;

        goto label11;

     label10:
        $i3 = $i3 + 1;

        $l1 = $l4;

        goto label02;

     label11:
        return 0;
    }

    public com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r1, $r2;
        com.google.common.cache.LocalCache r0;
        int $i0;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r1 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        $i0 = interfaceinvoke $r2.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>($r2, $r1);

        return $r2;
    }

    public com.google.common.cache.LocalCache$Segment createSegment(int, long, com.google.common.cache.AbstractCache$StatsCounter)
    {
        com.google.common.cache.LocalCache r0;
        com.google.common.cache.AbstractCache$StatsCounter $r1;
        int $i0;
        long $l1;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 := @parameter2: com.google.common.cache.AbstractCache$StatsCounter;

        $r2 = new com.google.common.cache.LocalCache$Segment;

        specialinvoke $r2.<com.google.common.cache.LocalCache$Segment: void <init>(com.google.common.cache.LocalCache,int,long,com.google.common.cache.AbstractCache$StatsCounter)>(r0, $i0, $l1, $r1);

        return $r2;
    }

    public boolean customWeigher()
    {
        com.google.common.cache.LocalCache r0;
        com.google.common.cache.CacheBuilder$OneWeigher $r1;
        com.google.common.cache.Weigher $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.Weigher weigher>;

        $r1 = <com.google.common.cache.CacheBuilder$OneWeigher: com.google.common.cache.CacheBuilder$OneWeigher INSTANCE>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Set entrySet()
    {
        com.google.common.cache.LocalCache$EntrySet $r2;
        java.util.Set $r1;
        com.google.common.cache.LocalCache r0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: java.util.Set entrySet>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new com.google.common.cache.LocalCache$EntrySet;

        specialinvoke $r2.<com.google.common.cache.LocalCache$EntrySet: void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap)>(r0, r0);

        r0.<com.google.common.cache.LocalCache: java.util.Set entrySet> = $r2;

        return $r2;
    }

    public boolean evictsBySize()
    {
        com.google.common.cache.LocalCache r0;
        byte $b0;
        int $i2;
        long $l1;

        r0 := @this: com.google.common.cache.LocalCache;

        $l1 = r0.<com.google.common.cache.LocalCache: long maxWeight>;

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean expires()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterWrite()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterAccess()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean expiresAfterAccess()
    {
        com.google.common.cache.LocalCache r0;
        byte $b0;
        int $i2;
        long $l1;

        r0 := @this: com.google.common.cache.LocalCache;

        $l1 = r0.<com.google.common.cache.LocalCache: long expireAfterAccessNanos>;

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean expiresAfterWrite()
    {
        com.google.common.cache.LocalCache r0;
        byte $b0;
        int $i2;
        long $l1;

        r0 := @this: com.google.common.cache.LocalCache;

        $l1 = r0.<com.google.common.cache.LocalCache: long expireAfterWriteNanos>;

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r1 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: java.lang.Object get(java.lang.Object,int)>($r1, $i0);

        return $r1;
    }

    public java.lang.Object get(java.lang.Object, com.google.common.cache.CacheLoader)
    {
        com.google.common.cache.CacheLoader $r1;
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r2;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.common.cache.CacheLoader;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: java.lang.Object get(java.lang.Object,int,com.google.common.cache.CacheLoader)>($r2, $i0, $r1);

        return $r2;
    }

    public com.google.common.collect.ImmutableMap getAll(java.lang.Iterable)
    {
        java.lang.Throwable $r15;
        com.google.common.cache.AbstractCache$StatsCounter $r14;
        java.lang.Iterable $r2;
        java.util.LinkedHashMap $r3;
        com.google.common.cache.LocalCache r0;
        java.util.Map $r9;
        int $i0, $i1, $i2;
        com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException $r1;
        java.lang.String $r12;
        com.google.common.cache.CacheLoader$InvalidCacheLoadException $r10, $r17;
        java.util.LinkedHashSet $r4;
        boolean $z0;
        java.util.Iterator $r5;
        com.google.common.collect.ImmutableMap $r13;
        com.google.common.cache.CacheLoader $r8;
        java.lang.Object $r6, $r7;
        java.lang.StringBuilder $r11, $r16;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Iterable;

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r4 = staticinvoke <com.google.common.collect.Sets: java.util.LinkedHashSet newLinkedHashSet()>();

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

        $i1 = 0;

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object get(java.lang.Object)>($r6);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 != 0 goto label01;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $r7 != null goto label02;

        $i1 = $i1 + 1;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r6);

        goto label01;

     label02:
        $i0 = $i0 + 1;

        goto label01;

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

     label04:
        if $z0 != 0 goto label26;

     label05:
        $r8 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.CacheLoader defaultLoader>;

     label06:
        $r9 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.util.Map loadAll(java.util.Set,com.google.common.cache.CacheLoader)>($r4, $r8);

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label08:
        if $z0 == 0 goto label26;

     label09:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

     label10:
        if $r7 == null goto label13;

     label11:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label12:
        goto label07;

     label13:
        $r17 = new com.google.common.cache.CacheLoader$InvalidCacheLoadException;

     label14:
        $r10 = $r17;

     label15:
        $r16 = new java.lang.StringBuilder;

     label16:
        $r11 = $r16;

     label17:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadAll failed to return a value for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.google.common.cache.CacheLoader$InvalidCacheLoadException: void <init>(java.lang.String)>($r12);

     label18:
        throw $r10;

     label19:
        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label21:
        if $z0 == 0 goto label26;

     label22:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label23:
        $i2 = -1;

        $i1 = $i1 + $i2;

     label24:
        $r8 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.CacheLoader defaultLoader>;

        $r7 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object get(java.lang.Object,com.google.common.cache.CacheLoader)>($r6, $r8);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label25:
        goto label20;

     label26:
        $r13 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>($r3);

     label27:
        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r14.<com.google.common.cache.AbstractCache$StatsCounter: void recordHits(int)>($i0);

        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r14.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>($i1);

        return $r13;

     label28:
        $r15 := @caughtexception;

        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r14.<com.google.common.cache.AbstractCache$StatsCounter: void recordHits(int)>($i0);

        $r14 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r14.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>($i1);

        goto label29;

     label29:
        throw $r15;

     label30:
        $r1 := @caughtexception;

        goto label19;

        catch java.lang.Throwable from label03 to label04 with label28;
        catch com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException from label06 to label08 with label30;
        catch com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException from label09 to label10 with label30;
        catch com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException from label11 to label12 with label30;
        catch com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException from label17 to label18 with label30;
        catch java.lang.Throwable from label05 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label17 to label19 with label28;
        catch java.lang.Throwable from label19 to label21 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
    }

    public com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable)
    {
        java.util.Iterator $r3;
        com.google.common.collect.ImmutableMap $r7;
        com.google.common.cache.AbstractCache$StatsCounter $r6;
        java.lang.Iterable $r1;
        java.util.LinkedHashMap $r2;
        com.google.common.cache.LocalCache r0;
        int $i0, $i1;
        java.lang.Object $r4, $r5;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i0 = 0;

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 != null goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r6.<com.google.common.cache.AbstractCache$StatsCounter: void recordHits(int)>($i0);

        $r6 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r6.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>($i1);

        $r7 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>($r2);

        return $r7;
    }

    public com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r3;
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r3 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object,int)>($r1, $i0);

        return $r3;
    }

    public java.lang.Object getIfPresent(java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        com.google.common.cache.AbstractCache$StatsCounter $r3;
        int $i0;
        java.lang.Object $r1;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r1 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: java.lang.Object get(java.lang.Object,int)>($r1, $i0);

        if $r1 != null goto label1;

        $r3 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r3.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>(1);

        return $r1;

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        interfaceinvoke $r3.<com.google.common.cache.AbstractCache$StatsCounter: void recordHits(int)>(1);

        return $r1;
    }

    public java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry, long)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r1;
        com.google.common.cache.LocalCache r0;
        long $l0;
        java.lang.Object $r2;
        com.google.common.cache.LocalCache$ValueReference $r3;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $l0 := @parameter1: long;

        $r2 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $r2 = interfaceinvoke $r3.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long)>($r1, $l0);

        if $z0 == 0 goto label3;

        return null;

     label3:
        return $r2;
    }

    public java.lang.Object getOrDefault(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.cache.LocalCache r0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object get(java.lang.Object)>($r2);

        if $r2 == null goto label1;

        return $r2;

     label1:
        return $r1;
    }

    public java.lang.Object getOrLoad(java.lang.Object)
    {
        com.google.common.cache.CacheLoader $r1;
        java.lang.Object $r2;
        com.google.common.cache.LocalCache r0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.CacheLoader defaultLoader>;

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object get(java.lang.Object,com.google.common.cache.CacheLoader)>($r2, $r1);

        return $r2;
    }

    public int hash(java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        com.google.common.base.Equivalence $r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $i0 = virtualinvoke $r1.<com.google.common.base.Equivalence: int hash(java.lang.Object)>($r2);

        $i0 = staticinvoke <com.google.common.cache.LocalCache: int rehash(int)>($i0);

        return $i0;
    }

    public void invalidateAll(java.lang.Iterable)
    {
        com.google.common.cache.LocalCache r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object remove(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        long $l0, $l3;
        com.google.common.cache.LocalCache$Segment $r2;
        com.google.common.cache.LocalCache r0;
        byte $b4;
        int $i1, $i2;
        com.google.common.cache.LocalCache$Segment[] $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $l0 = 0L;

        $i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        $r2 = $r1[$i1];

        $i2 = $r2.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i2 == 0 goto label2;

        return 0;

     label2:
        $r2 = $r1[$i1];

        $i2 = $r2.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $l3 = (long) $i2;

        $l0 = $l0 + $l3;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $b4 = $l0 cmp 0L;

        if $b4 == 0 goto label7;

        $i1 = 0;

     label4:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label6;

        $r2 = $r1[$i1];

        $i2 = $r2.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i2 == 0 goto label5;

        return 0;

     label5:
        $r2 = $r1[$i1];

        $i2 = $r2.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $l3 = (long) $i2;

        $l0 = $l0 - $l3;

        $i1 = $i1 + 1;

        goto label4;

     label6:
        $b4 = $l0 cmp 0L;

        if $b4 == 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry, long)
    {
        long $l0, $l1, $l2;
        com.google.common.cache.LocalCache$ReferenceEntry $r1;
        com.google.common.cache.LocalCache r0;
        byte $b3;
        int $i4;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $l1 := @parameter1: long;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterAccess()>();

        if $z0 == 0 goto label1;

        $l0 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: long getAccessTime()>();

        $l2 = $l1 - $l0;

        $l0 = r0.<com.google.common.cache.LocalCache: long expireAfterAccessNanos>;

        $b3 = $l2 cmp $l0;

        $i4 = (int) $b3;

        if $i4 < 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterWrite()>();

        if $z0 == 0 goto label2;

        $l0 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: long getWriteTime()>();

        $l1 = $l1 - $l0;

        $l0 = r0.<com.google.common.cache.LocalCache: long expireAfterWriteNanos>;

        $b3 = $l1 cmp $l0;

        $i4 = (int) $b3;

        if $i4 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isLive(com.google.common.cache.LocalCache$ReferenceEntry, long)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r1;
        com.google.common.cache.LocalCache r0;
        int $i1;
        long $l0;
        java.lang.Object $r3;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $l0 := @parameter1: long;

        $i1 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i1);

        $r3 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long)>($r1, $l0);

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r1;
        com.google.common.cache.LocalCache r0;
        com.google.common.cache.LocalCache$KeySet $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: java.util.Set keySet>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new com.google.common.cache.LocalCache$KeySet;

        specialinvoke $r2.<com.google.common.cache.LocalCache$KeySet: void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap)>(r0, r0);

        r0.<com.google.common.cache.LocalCache: java.util.Set keySet> = $r2;

        return $r2;
    }

    public java.util.Map loadAll(java.util.Set, com.google.common.cache.CacheLoader)
    {
        java.lang.Throwable $r14;
        com.google.common.base.Stopwatch $r3;
        com.google.common.cache.AbstractCache$StatsCounter $r9;
        java.lang.Error $r15;
        long $l0;
        com.google.common.util.concurrent.ExecutionError $r16;
        com.google.common.cache.LocalCache r0;
        com.google.common.util.concurrent.UncheckedExecutionException $r20;
        java.util.Map $r4;
        java.lang.Thread $r22;
        com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException $r23;
        java.lang.String $r13;
        com.google.common.cache.CacheLoader$InvalidCacheLoadException $r11;
        boolean $z0, $z1;
        java.util.Map$Entry $r7;
        java.util.Iterator $r5;
        java.util.Set $r1;
        java.lang.RuntimeException $r19;
        java.lang.Exception $r17;
        com.google.common.cache.CacheLoader $r2;
        java.util.concurrent.TimeUnit $r10;
        java.util.concurrent.ExecutionException $r18;
        java.lang.InterruptedException $r21;
        java.lang.Object $r6, $r8;
        java.lang.StringBuilder $r12;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: com.google.common.cache.CacheLoader;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>();

        $z0 = 0;

     label01:
        $r4 = virtualinvoke $r2.<com.google.common.cache.CacheLoader: java.util.Map loadAll(java.lang.Iterable)>($r1);

     label02:
        if $r4 == null goto label08;

        virtualinvoke $r3.<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>();

        $r1 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r6 == null goto label05;

        if $r8 != null goto label04;

        goto label05;

     label04:
        virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        goto label03;

     label05:
        $z0 = 1;

        goto label03;

     label06:
        if $z0 != 0 goto label07;

        $r9 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r3.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r10);

        interfaceinvoke $r9.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadSuccess(long)>($l0);

        return $r4;

     label07:
        $r9 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r3.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r10);

        interfaceinvoke $r9.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadException(long)>($l0);

        $r11 = new com.google.common.cache.CacheLoader$InvalidCacheLoadException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned null keys or values from loadAll");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.google.common.cache.CacheLoader$InvalidCacheLoadException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label08:
        $r9 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r3.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r10);

        interfaceinvoke $r9.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadException(long)>($l0);

        $r11 = new com.google.common.cache.CacheLoader$InvalidCacheLoadException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned null map from loadAll");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.google.common.cache.CacheLoader$InvalidCacheLoadException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label09:
        $r14 := @caughtexception;

        goto label21;

     label10:
        $r15 := @caughtexception;

     label11:
        $r16 = new com.google.common.util.concurrent.ExecutionError;

        specialinvoke $r16.<com.google.common.util.concurrent.ExecutionError: void <init>(java.lang.Error)>($r15);

        throw $r16;

     label12:
        $r17 := @caughtexception;

     label13:
        $r18 = new java.util.concurrent.ExecutionException;

        specialinvoke $r18.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r17);

        throw $r18;

     label14:
        $r19 := @caughtexception;

     label15:
        $r20 = new com.google.common.util.concurrent.UncheckedExecutionException;

        specialinvoke $r20.<com.google.common.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label16:
        $r21 := @caughtexception;

     label17:
        $r22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r22.<java.lang.Thread: void interrupt()>();

        $r18 = new java.util.concurrent.ExecutionException;

        specialinvoke $r18.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r21);

        throw $r18;

     label18:
        $r23 := @caughtexception;

     label19:
        throw $r23;

     label20:
        $r14 := @caughtexception;

        $z0 = 1;

     label21:
        if $z0 != 0 goto label22;

        $r9 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter>;

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r3.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r10);

        interfaceinvoke $r9.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadException(long)>($l0);

     label22:
        goto label23;

     label23:
        throw $r14;

        catch com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException from label01 to label02 with label18;
        catch java.lang.InterruptedException from label01 to label02 with label16;
        catch java.lang.RuntimeException from label01 to label02 with label14;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Error from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label15 to label16 with label09;
        catch java.lang.Throwable from label17 to label18 with label09;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    public long longSize()
    {
        com.google.common.cache.LocalCache r0;
        int $i0, $i2;
        long $l1, $l3;
        com.google.common.cache.LocalCache$Segment $r2;
        com.google.common.cache.LocalCache$Segment[] $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $l1 = 0L;

        $i2 = 0;

     label1:
        $i0 = lengthof $r1;

        if $i2 >= $i0 goto label2;

        $r2 = $r1[$i2];

        $i0 = $r2.<com.google.common.cache.LocalCache$Segment: int count>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $l3 = (long) $i0;

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    public java.lang.Object merge(java.lang.Object, java.lang.Object, java.util.function.BiFunction)
    {
        com.google.common.cache.LocalCache r0;
        java.util.function.BiFunction $r2;
        c.i.b.b.d $r3;
        java.lang.Object $r1, $r4;

        r0 := @this: com.google.common.cache.LocalCache;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.util.function.BiFunction;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r3 = new c.i.b.b.d;

        specialinvoke $r3.<c.i.b.b.d: void <init>(java.lang.Object,java.util.function.BiFunction)>($r1, $r2);

        $r4 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>($r4, $r3);

        return $r4;
    }

    public com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object, int, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        java.lang.Throwable $r4;
        com.google.common.cache.LocalCache$ReferenceEntry $r1;
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r2;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.common.cache.LocalCache$ReferenceEntry;

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r1 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)>($r2, $i0, $r1);

     label2:
        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r1;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final com.google.common.cache.LocalCache$Segment[] newSegmentArray(int)
    {
        int $i0;
        com.google.common.cache.LocalCache r0;
        com.google.common.cache.LocalCache$Segment[] $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $i0 := @parameter0: int;

        $r1 = newarray (com.google.common.cache.LocalCache$Segment)[$i0];

        return $r1;
    }

    public com.google.common.cache.LocalCache$ValueReference newValueReference(com.google.common.cache.LocalCache$ReferenceEntry, java.lang.Object, int)
    {
        com.google.common.cache.LocalCache$Strength $r2;
        com.google.common.cache.LocalCache$ValueReference $r5;
        com.google.common.cache.LocalCache$Segment $r4;
        com.google.common.cache.LocalCache$ReferenceEntry $r3;
        com.google.common.cache.LocalCache r0;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r3 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r1 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 = interfaceinvoke $r3.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r2 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength valueStrength>;

        $r4 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int)>($r4, $r3, $r1, $i0);

        return $r5;
    }

    public void processPendingNotifications()
    {
        java.lang.Throwable $r6;
        com.google.common.cache.RemovalNotification $r4;
        java.util.logging.Logger $r7;
        java.util.logging.Level $r1;
        com.google.common.cache.LocalCache r0;
        java.lang.Object $r2;
        com.google.common.cache.RemovalListener $r5;
        java.util.Queue $r3;

        r0 := @this: com.google.common.cache.LocalCache;

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache: java.util.Queue removalNotificationQueue>;

        $r2 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object poll()>();

        $r4 = (com.google.common.cache.RemovalNotification) $r2;

        if $r4 == null goto label5;

     label2:
        $r5 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.RemovalListener removalListener>;

        interfaceinvoke $r5.<com.google.common.cache.RemovalListener: void onRemoval(com.google.common.cache.RemovalNotification)>($r4);

     label3:
        goto label1;

     label4:
        $r6 := @caughtexception;

        $r7 = <com.google.common.cache.LocalCache: java.util.logging.Logger logger>;

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r1, "Exception thrown by removal listener", $r6);

        goto label1;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>($r2, $i0, $r1, 0);

        return $r2;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.common.cache.LocalCache r0;
        java.util.Map $r1;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>($r2, $i0, $r1, 1);

        return $r2;
    }

    public void reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r1;
        com.google.common.cache.LocalCache r0;
        int $i0;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $i0 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: boolean reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry,int)>($r1, $i0);

        return;
    }

    public void reclaimValue(com.google.common.cache.LocalCache$ValueReference)
    {
        com.google.common.cache.LocalCache$ReferenceEntry $r2;
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r4;
        com.google.common.cache.LocalCache$ValueReference $r1;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: com.google.common.cache.LocalCache$ValueReference;

        $r2 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ValueReference: com.google.common.cache.LocalCache$ReferenceEntry getEntry()>();

        $i0 = interfaceinvoke $r2.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r4 = interfaceinvoke $r2.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: boolean reclaimValue(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference)>($r4, $i0, $r1);

        return;
    }

    public boolean recordsAccess()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterAccess()>();

        return $z0;
    }

    public boolean recordsTime()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean recordsWrite()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean recordsAccess()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean recordsWrite()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterWrite()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean refreshes()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void refresh(java.lang.Object)
    {
        com.google.common.cache.CacheLoader $r2;
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r1);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.CacheLoader defaultLoader>;

        virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: java.lang.Object refresh(java.lang.Object,int,com.google.common.cache.CacheLoader,boolean)>($r1, $i0, $r2, 0);

        return;
    }

    public boolean refreshes()
    {
        com.google.common.cache.LocalCache r0;
        byte $b0;
        int $i2;
        long $l1;

        r0 := @this: com.google.common.cache.LocalCache;

        $l1 = r0.<com.google.common.cache.LocalCache: long refreshNanos>;

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.cache.LocalCache$Segment $r2;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r1 = virtualinvoke $r2.<com.google.common.cache.LocalCache$Segment: java.lang.Object remove(java.lang.Object,int)>($r1, $i0);

        return $r1;
    }

    public boolean remove(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.common.cache.LocalCache$Segment $r3;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r2 == null goto label2;

        if $r1 != null goto label1;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $z0 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: boolean remove(java.lang.Object,int,java.lang.Object)>($r2, $i0, $r1);

        return $z0;

     label2:
        return 0;
    }

    public boolean removeIf(java.util.function.BiPredicate)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.function.BiPredicate $r1;
        com.google.common.cache.LocalCache r0;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 := @parameter0: java.util.function.BiPredicate;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $r5 = virtualinvoke r0.<com.google.common.cache.LocalCache: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 == null goto label1;

        $z1 = interfaceinvoke $r1.<java.util.function.BiPredicate: boolean test(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 != 0 goto label3;

        goto label1;

     label3:
        $z1 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean remove(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 == 0 goto label2;

        $z0 = 1;

        goto label1;

     label4:
        return $z0;
    }

    public java.lang.Object replace(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.google.common.cache.LocalCache$Segment $r3;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $r2 = virtualinvoke $r3.<com.google.common.cache.LocalCache$Segment: java.lang.Object replace(java.lang.Object,int,java.lang.Object)>($r2, $i0, $r1);

        return $r2;
    }

    public boolean replace(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.LocalCache r0;
        int $i0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.cache.LocalCache$Segment $r4;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.cache.LocalCache: int hash(java.lang.Object)>($r3);

        $r4 = virtualinvoke r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment segmentFor(int)>($i0);

        $z0 = virtualinvoke $r4.<com.google.common.cache.LocalCache$Segment: boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object)>($r3, $i0, $r1, $r2);

        return $z0;
    }

    public com.google.common.cache.LocalCache$Segment segmentFor(int)
    {
        com.google.common.cache.LocalCache r0;
        int $i0, $i1;
        com.google.common.cache.LocalCache$Segment $r2;
        com.google.common.cache.LocalCache$Segment[] $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Segment[] segments>;

        $i1 = r0.<com.google.common.cache.LocalCache: int segmentShift>;

        $i0 = $i0 >>> $i1;

        $i1 = r0.<com.google.common.cache.LocalCache: int segmentMask>;

        $i0 = $i0 & $i1;

        $r2 = $r1[$i0];

        return $r2;
    }

    public int size()
    {
        int $i1;
        long $l0;
        com.google.common.cache.LocalCache r0;

        r0 := @this: com.google.common.cache.LocalCache;

        $l0 = virtualinvoke r0.<com.google.common.cache.LocalCache: long longSize()>();

        $i1 = staticinvoke <com.google.common.primitives.Ints: int saturatedCast(long)>($l0);

        return $i1;
    }

    public boolean usesAccessEntries()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean usesAccessQueue()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean recordsAccess()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean usesAccessQueue()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterAccess()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean evictsBySize()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean usesKeyReferences()
    {
        com.google.common.cache.LocalCache$Strength $r1, $r2;
        com.google.common.cache.LocalCache r0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength keyStrength>;

        $r1 = <com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$Strength STRONG>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean usesValueReferences()
    {
        com.google.common.cache.LocalCache$Strength $r1, $r2;
        com.google.common.cache.LocalCache r0;

        r0 := @this: com.google.common.cache.LocalCache;

        $r2 = r0.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength valueStrength>;

        $r1 = <com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$Strength STRONG>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean usesWriteEntries()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean usesWriteQueue()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean recordsWrite()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean usesWriteQueue()
    {
        com.google.common.cache.LocalCache r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache: boolean expiresAfterWrite()>();

        return $z0;
    }

    public java.util.Collection values()
    {
        com.google.common.cache.LocalCache r0;
        com.google.common.cache.LocalCache$Values $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.cache.LocalCache;

        $r1 = r0.<com.google.common.cache.LocalCache: java.util.Collection values>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new com.google.common.cache.LocalCache$Values;

        specialinvoke $r2.<com.google.common.cache.LocalCache$Values: void <init>(com.google.common.cache.LocalCache,java.util.concurrent.ConcurrentMap)>(r0, r0);

        r0.<com.google.common.cache.LocalCache: java.util.Collection values> = $r2;

        return $r2;
    }
}
