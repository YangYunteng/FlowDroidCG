public class c.b.a.a.d extends java.lang.Object implements c.b.a.a
{
    public final java.util.Map a;
    public long b;
    public final java.io.File c;
    public final int d;

    public void <init>(java.io.File)
    {
        c.b.a.a.d r0;
        java.io.File $r1;

        r0 := @this: c.b.a.a.d;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<c.b.a.a.d: void <init>(java.io.File,int)>($r1, 5242880);

        return;
    }

    public void <init>(java.io.File, int)
    {
        java.util.LinkedHashMap $r2;
        c.b.a.a.d r0;
        int $i0;
        java.io.File $r1;

        r0 := @this: c.b.a.a.d;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(16, 0.75F, 1);

        r0.<c.b.a.a.d: java.util.Map a> = $r2;

        r0.<c.b.a.a.d: long b> = 0L;

        r0.<c.b.a.a.d: java.io.File c> = $r1;

        r0.<c.b.a.a.d: int d> = $i0;

        return;
    }

    public static int a(java.io.InputStream)
    {
        int $i0, $i1;
        java.io.EOFException $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return $i0;

     label1:
        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;
    }

    public static void a(java.io.OutputStream, int)
    {
        java.io.OutputStream $r0;
        int $i0, $i1;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 = $i0 >> 0;

        $i1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $i1 = $i0 >> 8;

        $i1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $i1 = $i0 >> 16;

        $i1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        return;
    }

    public static void a(java.io.OutputStream, long)
    {
        java.io.OutputStream $r0;
        byte $b3;
        int $i0;
        long $l1, $l2;

        $r0 := @parameter0: java.io.OutputStream;

        $l1 := @parameter1: long;

        $l2 = $l1 >>> 0;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l2 = $l1 >>> 8;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l2 = $l1 >>> 16;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l2 = $l1 >>> 24;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l2 = $l1 >>> 32;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l2 = $l1 >>> 40;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l2 = $l1 >>> 48;

        $i0 = (int) $l2;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $l1 = $l1 >>> 56;

        $i0 = (int) $l1;

        $b3 = (byte) $i0;

        $i0 = (int) $b3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        return;
    }

    public static void a(java.io.OutputStream, java.lang.String)
    {
        java.io.OutputStream $r0;
        byte[] $r1;
        int $i0;
        long $l1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        staticinvoke <c.b.a.a.d: void a(java.io.OutputStream,long)>($r0, $l1);

        $i0 = lengthof $r1;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public static void a(java.util.Map, java.io.OutputStream)
    {
        java.io.OutputStream $r0;
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        $r1 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.io.OutputStream;

        if $r1 == null goto label2;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        staticinvoke <c.b.a.a.d: void a(java.io.OutputStream,int)>($r0, $i0);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        staticinvoke <c.b.a.a.d: void a(java.io.OutputStream,java.lang.String)>($r0, $r6);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r4;

        staticinvoke <c.b.a.a.d: void a(java.io.OutputStream,java.lang.String)>($r0, $r6);

        goto label1;

     label2:
        staticinvoke <c.b.a.a.d: void a(java.io.OutputStream,int)>($r0, 0);

     label3:
        return;
    }

    public static byte[] a(java.io.InputStream, int)
    {
        byte[] $r1;
        java.io.IOException $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i0 - $i1;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i2);

        $i3 = -1;

        if $i2 == $i3 goto label2;

        $i1 = $i1 + $i2;

        goto label1;

     label2:
        if $i1 != $i0 goto label3;

        return $r1;

     label3:
        $r5 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, read ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r3);

        goto label4;

     label4:
        throw $r5;
    }

    public static int b(java.io.InputStream)
    {
        int $i0, $i1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $i0 = $i0 << 0;

        $i1 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i1 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $i1 = $i1 << 16;

        $i0 = $i0 | $i1;

        $i1 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $i1 = $i1 << 24;

        $i0 = $i1 | $i0;

        return $i0;
    }

    public static long c(java.io.InputStream)
    {
        int $i0;
        long $l1, $l2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l1 = (long) $i0;

        $l1 = $l1 & 255L;

        $l1 = $l1 << 0;

        $l1 = $l1 | 0L;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 8;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 16;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 24;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 32;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 40;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 48;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <c.b.a.a.d: int a(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = 255L & $l2;

        $l2 = $l2 << 56;

        $l1 = $l1 | $l2;

        return $l1;
    }

    public static java.lang.String d(java.io.InputStream)
    {
        byte[] $r1;
        int $i1;
        long $l0;
        java.lang.String $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $l0 = staticinvoke <c.b.a.a.d: long c(java.io.InputStream)>($r0);

        $i1 = (int) $l0;

        $r1 = staticinvoke <c.b.a.a.d: byte[] a(java.io.InputStream,int)>($r0, $i1);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

        return $r2;
    }

    public static java.util.Map e(java.io.InputStream)
    {
        java.util.Map $r1;
        int $i0, $i1;
        java.util.HashMap $r4;
        java.lang.String $r2, $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <c.b.a.a.d: int b(java.io.InputStream)>($r0);

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        $r4 = new java.util.HashMap;

        $r1 = $r4;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>($i0);

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r2 = staticinvoke <c.b.a.a.d: java.lang.String d(java.io.InputStream)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r3 = staticinvoke <c.b.a.a.d: java.lang.String d(java.io.InputStream)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    public java.io.File a(java.lang.String)
    {
        c.b.a.a.d r0;
        java.lang.String $r3;
        java.io.File $r1, $r2;

        r0 := @this: c.b.a.a.d;

        $r3 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = r0.<c.b.a.a.d: java.io.File c>;

        $r3 = virtualinvoke r0.<c.b.a.a.d: java.lang.String b(java.lang.String)>($r3);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        return $r1;
    }

    public void a()
    {
        java.lang.Throwable $r14, $r15;
        java.io.BufferedInputStream $r1, $r11;
        java.lang.Object[] $r8;
        c.b.a.a.d$a $r13;
        c.b.a.a.d r0;
        long $l2;
        int $i0, $i1;
        java.lang.String $r9;
        boolean $z0;
        java.io.IOException $r2, $r3, $r4, $r5, $r6;
        java.io.FileInputStream $r12;
        java.io.File $r7;
        java.io.File[] $r10;

        r0 := @this: c.b.a.a.d;

        entermonitor r0;

     label01:
        $r7 = r0.<c.b.a.a.d: java.io.File c>;

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        $i0 = 0;

        if $z0 != 0 goto label03;

        $r7 = r0.<c.b.a.a.d: java.io.File c>;

        $z0 = virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label02;

        $r8 = newarray (java.lang.Object)[1];

        $r7 = r0.<c.b.a.a.d: java.io.File c>;

        $r9 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8[0] = $r9;

        staticinvoke <c.b.a.p: void c(java.lang.String,java.lang.Object[])>("Unable to create cache dir %s", $r8);

     label02:
        exitmonitor r0;

        return;

     label03:
        $r7 = r0.<c.b.a.a.d: java.io.File c>;

        $r10 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles()>();

     label04:
        if $r10 != null goto label05;

        exitmonitor r0;

        return;

     label05:
        $i1 = lengthof $r10;

     label06:
        if $i0 >= $i1 goto label27;

        $r7 = $r10[$i0];

     label07:
        $r11 = null;

     label08:
        $r1 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

     label09:
        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

     label10:
        $r13 = staticinvoke <c.b.a.a.d$a: c.b.a.a.d$a a(java.io.InputStream)>($r1);

        $l2 = virtualinvoke $r7.<java.io.File: long length()>();

     label11:
        $r13.<c.b.a.a.d$a: long a> = $l2;

        $r9 = $r13.<c.b.a.a.d$a: java.lang.String b>;

     label12:
        virtualinvoke r0.<c.b.a.a.d: void a(java.lang.String,c.b.a.a.d$a)>($r9, $r13);

     label13:
        virtualinvoke $r1.<java.io.BufferedInputStream: void close()>();

     label14:
        goto label26;

     label15:
        $r14 := @caughtexception;

        $r11 = $r1;

        goto label21;

     label16:
        $r11 = $r1;

        goto label18;

     label17:
        $r14 := @caughtexception;

        goto label21;

     label18:
        if $r7 == null goto label24;

     label19:
        virtualinvoke $r7.<java.io.File: boolean delete()>();

     label20:
        goto label24;

     label21:
        if $r11 == null goto label23;

     label22:
        virtualinvoke $r11.<java.io.BufferedInputStream: void close()>();

     label23:
        throw $r14;

     label24:
        if $r11 == null goto label26;

     label25:
        virtualinvoke $r11.<java.io.BufferedInputStream: void close()>();

     label26:
        $i0 = $i0 + 1;

        goto label06;

     label27:
        exitmonitor r0;

        return;

     label28:
        $r15 := @caughtexception;

        exitmonitor r0;

        goto label29;

     label29:
        throw $r15;

     label30:
        $r2 := @caughtexception;

        goto label18;

     label31:
        $r3 := @caughtexception;

        goto label16;

     label32:
        $r4 := @caughtexception;

        goto label26;

     label33:
        $r5 := @caughtexception;

        goto label23;

     label34:
        $r6 := @caughtexception;

        goto label26;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label07 with label28;
        catch java.io.IOException from label09 to label10 with label30;
        catch java.lang.Throwable from label08 to label10 with label17;
        catch java.io.IOException from label10 to label11 with label31;
        catch java.io.IOException from label12 to label13 with label31;
        catch java.lang.Throwable from label10 to label13 with label15;
        catch java.io.IOException from label13 to label14 with label32;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label19 to label20 with label17;
        catch java.io.IOException from label22 to label23 with label33;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.io.IOException from label25 to label26 with label34;
        catch java.lang.Throwable from label25 to label26 with label28;
    }

    public final void a(int)
    {
        java.lang.Object[] $r1;
        c.b.a.a.d$a $r7;
        c.b.a.a.d r0;
        long $l1, $l2, $l3, $l5, $l6;
        java.lang.Integer $r10;
        byte $b4;
        java.lang.Long $r11;
        java.util.Map $r2;
        int $i0, $i7;
        java.lang.String $r8;
        boolean $z0;
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.io.File $r9;
        float $f0, $f1;
        java.lang.Object $r5;

        r0 := @this: c.b.a.a.d;

        $i0 := @parameter0: int;

        $l1 = r0.<c.b.a.a.d: long b>;

        $l2 = (long) $i0;

        $l1 = $l1 + $l2;

        $i0 = r0.<c.b.a.a.d: int d>;

        $l3 = (long) $i0;

        $b4 = $l1 cmp $l3;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $z0 = <c.b.a.p: boolean b>;

        if $z0 == 0 goto label2;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <c.b.a.p: void d(java.lang.String,java.lang.Object[])>("Pruning old cache entries.", $r1);

     label2:
        $l3 = r0.<c.b.a.a.d: long b>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<c.b.a.a.d: java.util.Map a>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $i0 = 0;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (c.b.a.a.d$a) $r5;

        $r8 = $r7.<c.b.a.a.d$a: java.lang.String b>;

        $r9 = virtualinvoke r0.<c.b.a.a.d: java.io.File a(java.lang.String)>($r8);

        $z0 = virtualinvoke $r9.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label4;

        $l5 = r0.<c.b.a.a.d: long b>;

        $l6 = $r7.<c.b.a.a.d$a: long a>;

        $l5 = $l5 - $l6;

        r0.<c.b.a.a.d: long b> = $l5;

        goto label5;

     label4:
        $r1 = newarray (java.lang.Object)[2];

        $r8 = $r7.<c.b.a.a.d$a: java.lang.String b>;

        $r1[0] = $r8;

        $r8 = virtualinvoke r0.<c.b.a.a.d: java.lang.String b(java.lang.String)>($r8);

        $r1[1] = $r8;

        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("Could not delete cache entry for key=%s, filename=%s", $r1);

     label5:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $i0 = $i0 + 1;

        $l5 = r0.<c.b.a.a.d: long b>;

        $l5 = $l5 + $l2;

        $f0 = (float) $l5;

        $i7 = r0.<c.b.a.a.d: int d>;

        $f1 = (float) $i7;

        $f1 = $f1 * 0.9F;

        $b4 = $f0 cmpg $f1;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label6;

        goto label7;

     label6:
        goto label3;

     label7:
        $z0 = <c.b.a.p: boolean b>;

        if $z0 == 0 goto label8;

        $r1 = newarray (java.lang.Object)[3];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r10;

        $l2 = r0.<c.b.a.a.d: long b>;

        $l3 = $l2 - $l3;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[1] = $r11;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $l3 - $l1;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[2] = $r11;

        staticinvoke <c.b.a.p: void d(java.lang.String,java.lang.Object[])>("pruned %d files, %d bytes, %d ms", $r1);

     label8:
        return;
    }

    public void a(java.lang.String, c.b.a.a$a)
    {
        java.lang.Throwable $r10;
        c.b.a.a$a $r5;
        byte[] $r6;
        java.lang.Object[] $r9;
        c.b.a.a.d$a $r1;
        c.b.a.a.d r0;
        java.io.FileOutputStream $r8;
        java.io.IOException $r2, $r3;
        java.io.File $r7;
        int $i0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: c.b.a.a.d;

        $r4 := @parameter0: java.lang.String;

        $r5 := @parameter1: c.b.a.a$a;

        entermonitor r0;

     label01:
        $r6 = $r5.<c.b.a.a$a: byte[] a>;

        $i0 = lengthof $r6;

        virtualinvoke r0.<c.b.a.a.d: void a(int)>($i0);

        $r7 = virtualinvoke r0.<c.b.a.a.d: java.io.File a(java.lang.String)>($r4);

     label02:
        $r8 = new java.io.FileOutputStream;

     label03:
        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r7);

     label04:
        $r1 = new c.b.a.a.d$a;

     label05:
        specialinvoke $r1.<c.b.a.a.d$a: void <init>(java.lang.String,c.b.a.a$a)>($r4, $r5);

        $z0 = virtualinvoke $r1.<c.b.a.a.d$a: boolean a(java.io.OutputStream)>($r8);

     label06:
        if $z0 == 0 goto label09;

        $r6 = $r5.<c.b.a.a$a: byte[] a>;

     label07:
        virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[])>($r6);

        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

        virtualinvoke r0.<c.b.a.a.d: void a(java.lang.String,c.b.a.a.d$a)>($r4, $r1);

     label08:
        exitmonitor r0;

        return;

     label09:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label10:
        $r9 = newarray (java.lang.Object)[1];

     label11:
        $r4 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

     label12:
        $r9[0] = $r4;

     label13:
        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("Failed to write header for %s", $r9);

     label14:
        $r2 = new java.io.IOException;

     label15:
        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;

     label16:
        $z0 = virtualinvoke $r7.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label17;

        $r9 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9[0] = $r4;

        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("Could not clean up file %s", $r9);

     label17:
        exitmonitor r0;

        return;

     label18:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

     label19:
        $r2 := @caughtexception;

        goto label16;

     label20:
        $r3 := @caughtexception;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.lang.Throwable from label02 to label08 with label18;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.io.IOException from label11 to label12 with label20;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.io.IOException from label15 to label16 with label20;
        catch java.lang.Throwable from label09 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public final void a(java.lang.String, c.b.a.a.d$a)
    {
        c.b.a.a.d$a $r2, $r5;
        c.b.a.a.d r0;
        long $l0, $l1, $l2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: c.b.a.a.d;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: c.b.a.a.d$a;

        $r3 = r0.<c.b.a.a.d: java.util.Map a>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $l1 = r0.<c.b.a.a.d: long b>;

        $l0 = $r2.<c.b.a.a.d$a: long a>;

        $l0 = $l1 + $l0;

        r0.<c.b.a.a.d: long b> = $l0;

        goto label2;

     label1:
        $r3 = r0.<c.b.a.a.d: java.util.Map a>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (c.b.a.a.d$a) $r4;

        $l0 = r0.<c.b.a.a.d: long b>;

        $l2 = $r2.<c.b.a.a.d$a: long a>;

        $l1 = $r5.<c.b.a.a.d$a: long a>;

        $l1 = $l2 - $l1;

        $l0 = $l0 + $l1;

        r0.<c.b.a.a.d: long b> = $l0;

     label2:
        $r3 = r0.<c.b.a.a.d: java.util.Map a>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public final java.lang.String b(java.lang.String)
    {
        c.b.a.a.d r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;

        r0 := @this: c.b.a.a.d;

        $r2 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void c(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r3;
        c.b.a.a.d r0;
        java.lang.String $r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: c.b.a.a.d;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = virtualinvoke r0.<c.b.a.a.d: java.io.File a(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        virtualinvoke r0.<c.b.a.a.d: void d(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r1 = virtualinvoke r0.<c.b.a.a.d: java.lang.String b(java.lang.String)>($r1);

        $r3[1] = $r1;

        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("Could not delete cache entry for key=%s, filename=%s", $r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void d(java.lang.String)
    {
        c.b.a.a.d$a $r4;
        java.util.Map $r3;
        c.b.a.a.d r0;
        long $l0, $l1;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: c.b.a.a.d;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<c.b.a.a.d: java.util.Map a>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (c.b.a.a.d$a) $r2;

        if $r4 == null goto label1;

        $l1 = r0.<c.b.a.a.d: long b>;

        $l0 = $r4.<c.b.a.a.d$a: long a>;

        $l0 = $l1 - $l0;

        r0.<c.b.a.a.d: long b> = $l0;

        $r3 = r0.<c.b.a.a.d: java.util.Map a>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    public c.b.a.a$a get(java.lang.String)
    {
        java.lang.Throwable $r14, $r17;
        byte[] $r11;
        c.b.a.a$a $r12;
        java.lang.Object[] $r15;
        c.b.a.a.d$a $r7;
        c.b.a.a.d$b $r9;
        c.b.a.a.d r0;
        long $l0, $l2;
        java.util.Map $r5;
        int $i1;
        java.lang.String $r4, $r16;
        java.io.IOException $r1, $r2, $r3, $r13;
        java.io.FileInputStream $r10;
        java.io.File $r8;
        java.lang.Object $r6;

        r0 := @this: c.b.a.a.d;

        $r4 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r5 = r0.<c.b.a.a.d: java.util.Map a>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (c.b.a.a.d$a) $r6;

     label02:
        if $r7 != null goto label03;

        exitmonitor r0;

        return null;

     label03:
        $r8 = virtualinvoke r0.<c.b.a.a.d: java.io.File a(java.lang.String)>($r4);

     label04:
        $r9 = new c.b.a.a.d$b;

        $r10 = new java.io.FileInputStream;

     label05:
        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

        specialinvoke $r9.<c.b.a.a.d$b: void <init>(java.io.InputStream,c.b.a.a.c)>($r10, null);

     label06:
        staticinvoke <c.b.a.a.d$a: c.b.a.a.d$a a(java.io.InputStream)>($r9);

        $l0 = virtualinvoke $r8.<java.io.File: long length()>();

        $i1 = staticinvoke <c.b.a.a.d$b: int a(c.b.a.a.d$b)>($r9);

     label07:
        $l2 = (long) $i1;

        $l0 = $l0 - $l2;

        $i1 = (int) $l0;

     label08:
        $r11 = staticinvoke <c.b.a.a.d: byte[] a(java.io.InputStream,int)>($r9, $i1);

        $r12 = virtualinvoke $r7.<c.b.a.a.d$a: c.b.a.a$a a(byte[])>($r11);

     label09:
        virtualinvoke $r9.<java.io.FilterInputStream: void close()>();

     label10:
        exitmonitor r0;

        return $r12;

     label11:
        exitmonitor r0;

        return null;

     label12:
        $r13 := @caughtexception;

        goto label15;

     label13:
        $r14 := @caughtexception;

        $r9 = null;

        goto label22;

     label14:
        $r13 := @caughtexception;

        $r9 = null;

     label15:
        $r15 = newarray (java.lang.Object)[2];

        $r16 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r15[0] = $r16;

        $r16 = virtualinvoke $r13.<java.io.IOException: java.lang.String toString()>();

        $r15[1] = $r16;

        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("%s: %s", $r15);

        virtualinvoke r0.<c.b.a.a.d: void c(java.lang.String)>($r4);

     label16:
        if $r9 == null goto label20;

     label17:
        virtualinvoke $r9.<java.io.FilterInputStream: void close()>();

     label18:
        goto label20;

     label19:
        exitmonitor r0;

        return null;

     label20:
        exitmonitor r0;

        return null;

     label21:
        $r14 := @caughtexception;

     label22:
        if $r9 == null goto label26;

     label23:
        virtualinvoke $r9.<java.io.FilterInputStream: void close()>();

     label24:
        goto label26;

     label25:
        exitmonitor r0;

        return null;

     label26:
        throw $r14;

     label27:
        $r17 := @caughtexception;

        exitmonitor r0;

        throw $r17;

     label28:
        $r1 := @caughtexception;

        goto label11;

     label29:
        $r2 := @caughtexception;

        goto label19;

     label30:
        $r3 := @caughtexception;

        goto label25;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.lang.Throwable from label04 to label06 with label13;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.lang.Throwable from label06 to label09 with label21;
        catch java.io.IOException from label09 to label10 with label28;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.io.IOException from label17 to label18 with label29;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.io.IOException from label23 to label24 with label30;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label26 to label27 with label27;
    }
}
