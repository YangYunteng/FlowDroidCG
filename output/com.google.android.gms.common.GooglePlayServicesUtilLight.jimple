public class com.google.android.gms.common.GooglePlayServicesUtilLight extends java.lang.Object
{
    public static final int GMS_AVAILABILITY_NOTIFICATION_ID;
    public static final int GMS_GENERAL_ERROR_NOTIFICATION_ID;
    public static final java.lang.String GOOGLE_PLAY_GAMES_PACKAGE;
    public static final java.lang.String GOOGLE_PLAY_SERVICES_PACKAGE;
    public static final int GOOGLE_PLAY_SERVICES_VERSION_CODE;
    public static final java.lang.String GOOGLE_PLAY_STORE_PACKAGE;
    public static final java.util.concurrent.atomic.AtomicBoolean sCanceledAvailabilityNotification;
    public static boolean zzav;
    public static boolean zzaw;
    public static boolean zzax;
    public static boolean zzay;
    public static final java.util.concurrent.atomic.AtomicBoolean zzaz;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzay> = 0;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzax> = 0;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzaw> = 0;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzav> = 0;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String GOOGLE_PLAY_STORE_PACKAGE> = "com.android.vending";

        <com.google.android.gms.common.GooglePlayServicesUtilLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE> = 12451000;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String GOOGLE_PLAY_SERVICES_PACKAGE> = "com.google.android.gms";

        <com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String GOOGLE_PLAY_GAMES_PACKAGE> = "com.google.android.play.games";

        <com.google.android.gms.common.GooglePlayServicesUtilLight: int GMS_GENERAL_ERROR_NOTIFICATION_ID> = 39789;

        <com.google.android.gms.common.GooglePlayServicesUtilLight: int GMS_AVAILABILITY_NOTIFICATION_ID> = 10436;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        <com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean sCanceledAvailabilityNotification> = $r0;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        <com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean zzaz> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.gms.common.GooglePlayServicesUtilLight r0;

        r0 := @this: com.google.android.gms.common.GooglePlayServicesUtilLight;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void cancelAvailabilityErrorNotifications(android.content.Context)
    {
        android.content.Context $r1;
        android.app.NotificationManager $r4;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        java.lang.SecurityException $r0;
        java.lang.Object $r3;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $r2 = <com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean sCanceledAvailabilityNotification>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

     label2:
        $r4 = (android.app.NotificationManager) $r3;

        if $r4 == null goto label6;

     label3:
        virtualinvoke $r4.<android.app.NotificationManager: void cancel(int)>(10436);

     label4:
        return;

     label5:
        $r0 := @caughtexception;

     label6:
        return;

        catch java.lang.SecurityException from label1 to label2 with label5;
        catch java.lang.SecurityException from label3 to label4 with label5;
    }

    public static void enableUsingApkIndependentContext()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;

        $r0 = <com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean zzaz>;

        virtualinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public static void ensurePlayServicesAvailable(android.content.Context, int)
    {
        android.content.Context $r0;
        com.google.android.gms.common.GoogleApiAvailabilityLight $r1;
        android.content.Intent $r2;
        com.google.android.gms.common.GooglePlayServicesRepairableException $r6;
        com.google.android.gms.common.GooglePlayServicesNotAvailableException $r5;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()>();

        $i0 = virtualinvoke $r1.<com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context,int)>($r0, $i0);

        if $i0 == 0 goto label2;

        $r1 = staticinvoke <com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()>();

        $r2 = virtualinvoke $r1.<com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)>($r0, $i0, "e");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(57);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GooglePlayServices not available due to error ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", $r4);

        if $r2 != null goto label1;

        $r5 = new com.google.android.gms.common.GooglePlayServicesNotAvailableException;

        specialinvoke $r5.<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>($i0);

        throw $r5;

     label1:
        $r6 = new com.google.android.gms.common.GooglePlayServicesRepairableException;

        specialinvoke $r6.<com.google.android.gms.common.GooglePlayServicesRepairableException: void <init>(int,java.lang.String,android.content.Intent)>($i0, "Google Play Services not available", $r2);

        throw $r6;

     label2:
        return;
    }

    public static int getApkVersion(android.content.Context)
    {
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r0;
        int i0;
        android.content.pm.PackageInfo $r3;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.google.android.gms", 0);

     label2:
        i0 = $r3.<android.content.pm.PackageInfo: int versionCode>;

        return i0;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", "Google Play services is missing.");

        return 0;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static int getClientVersion(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkState(boolean)>(1);

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = staticinvoke <com.google.android.gms.common.util.ClientLibraryUtils: int getClientVersion(android.content.Context,java.lang.String)>($r0, $r1);

        return $i0;
    }

    public static android.app.PendingIntent getErrorPendingIntent(int, android.content.Context, int)
    {
        android.content.Context $r0;
        com.google.android.gms.common.GoogleApiAvailabilityLight $r1;
        int $i0, $i1;
        android.app.PendingIntent $r2;

        $i1 := @parameter0: int;

        $r0 := @parameter1: android.content.Context;

        $i0 := @parameter2: int;

        $r1 = staticinvoke <com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()>();

        $r2 = virtualinvoke $r1.<com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)>($r0, $i1, $i0);

        return $r2;
    }

    public static java.lang.String getErrorString(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.google.android.gms.common.ConnectionResult: java.lang.String zza(int)>($i0);

        return $r0;
    }

    public static android.content.Intent getGooglePlayServicesAvailabilityRecoveryIntent(int)
    {
        int $i0;
        android.content.Intent $r1;
        com.google.android.gms.common.GoogleApiAvailabilityLight $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()>();

        $r1 = virtualinvoke $r0.<com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)>(null, $i0, null);

        return $r1;
    }

    public static android.content.Context getRemoteContext(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager$NameNotFoundException $r1;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>("com.google.android.gms", 3);

     label2:
        return $r0;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static android.content.res.Resources getRemoteResource(android.content.Context)
    {
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r0;
        android.content.res.Resources $r3;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>("com.google.android.gms");

     label2:
        return $r3;

     label3:
        return null;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static boolean honorsDebugCertificates(android.content.Context)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        com.google.android.gms.common.wrappers.PackageManagerWrapper $r1;
        android.content.pm.PackageInfo $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzay>;

        if $z0 != 0 goto label16;

     label01:
        $r1 = staticinvoke <com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)>($r0);

        $r2 = virtualinvoke $r1.<com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.google.android.gms", 64);

        staticinvoke <com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context)>($r0);

     label02:
        if $r2 == null goto label09;

     label03:
        $z0 = staticinvoke <com.google.android.gms.common.GoogleSignatureVerifier: boolean zza(android.content.pm.PackageInfo,boolean)>($r2, 0);

     label04:
        if $z0 != 0 goto label09;

     label05:
        $z0 = staticinvoke <com.google.android.gms.common.GoogleSignatureVerifier: boolean zza(android.content.pm.PackageInfo,boolean)>($r2, 1);

     label06:
        if $z0 == 0 goto label09;

     label07:
        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzax> = 1;

     label08:
        goto label10;

     label09:
        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzax> = 0;

     label10:
        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzay> = 1;

        goto label16;

     label11:
        $r3 := @caughtexception;

        goto label15;

     label12:
        $r4 := @caughtexception;

     label13:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GooglePlayServicesUtil", "Cannot find Google Play services package name.", $r4);

     label14:
        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzay> = 1;

        goto label16;

     label15:
        <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzay> = 1;

        throw $r3;

     label16:
        $z0 = <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzax>;

        if $z0 != 0 goto label18;

        $z0 = staticinvoke <com.google.android.gms.common.util.DeviceProperties: boolean isUserBuild()>();

        if $z0 != 0 goto label17;

        return 1;

     label17:
        return 0;

     label18:
        return 1;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label12;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
    }

    public static int isGooglePlayServicesAvailable(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <com.google.android.gms.common.GooglePlayServicesUtilLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE>;

        $i0 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context,int)>($r0, $i0);

        return $i0;
    }

    public static int isGooglePlayServicesAvailable(android.content.Context, int)
    {
        java.lang.Throwable $r1;
        android.content.Context $r2;
        java.lang.IllegalStateException $r7;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r4, $r5;
        android.content.res.Resources $r3;
        boolean $z0;

        $r2 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

     label01:
        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.gms.common.R$string: int common_google_play_services_unknown_issue>;

        virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>($i1);

     label02:
        goto label04;

     label03:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", "The Google Play services resources were not found. Check your project configuration to ensure that the resources are included.");

     label04:
        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = "com.google.android.gms";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label07;

        $r6 = <com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean zzaz>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label07;

        $i1 = staticinvoke <com.google.android.gms.common.internal.zzp: int zze(android.content.Context)>($r2);

        if $i1 == 0 goto label06;

        $i2 = <com.google.android.gms.common.GooglePlayServicesUtilLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE>;

        if $i1 != $i2 goto label05;

        goto label07;

     label05:
        $r7 = new java.lang.IllegalStateException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(320);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The meta-data tag in your app\'s AndroidManifest.xml does not have the right value.  Expected ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label06:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A required meta-data tag in your app\'s AndroidManifest.xml does not exist.  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />");

        throw $r7;

     label07:
        $z0 = staticinvoke <com.google.android.gms.common.util.DeviceProperties: boolean isWearableWithoutPlayStore(android.content.Context)>($r2);

        if $z0 != 0 goto label08;

        $z0 = staticinvoke <com.google.android.gms.common.util.DeviceProperties: boolean zzj(android.content.Context)>($r2);

        if $z0 != 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        $i0 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtilLight: int zza(android.content.Context,boolean,int)>($r2, $z0, $i0);

        return $i0;

     label10:
        $r1 := @caughtexception;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label10;
    }

    public static boolean isGooglePlayServicesUid(android.content.Context, int)
    {
        int $i0;
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <com.google.android.gms.common.util.UidVerifier: boolean isGooglePlayServicesUid(android.content.Context,int)>($r0, $i0);

        return $z0;
    }

    public static boolean isPlayServicesPossiblyUpdating(android.content.Context, int)
    {
        int $i0;
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        if $i0 != 18 goto label1;

        return 1;

     label1:
        if $i0 != 1 goto label2;

        $z0 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)>($r0, "com.google.android.gms");

        return $z0;

     label2:
        return 0;
    }

    public static boolean isPlayStorePossiblyUpdating(android.content.Context, int)
    {
        int $i0;
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        if $i0 != 9 goto label1;

        $z0 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)>($r0, "com.android.vending");

        return $z0;

     label1:
        return 0;
    }

    public static boolean isRestrictedUserProfile(android.content.Context)
    {
        android.os.UserManager $r2;
        android.content.Context $r0;
        android.os.Bundle $r4;
        java.lang.Object $r1;
        java.lang.String $r3, $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR2()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r2 = (android.os.UserManager) $r1;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>($r3);

        if $r4 == null goto label1;

        $r3 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("restricted_profile");

        $r5 = "true";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSidewinderDevice(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.google.android.gms.common.util.DeviceProperties: boolean isSidewinder(android.content.Context)>($r0);

        return $z0;
    }

    public static boolean isUninstalledAppPossiblyUpdating(android.content.Context, java.lang.String)
    {
        android.content.Context $r2;
        java.util.Iterator $r7;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r1;
        java.lang.Exception $r0;
        android.content.pm.PackageInstaller $r5;
        java.util.List $r6;
        android.content.pm.PackageInstaller$SessionInfo $r9;
        java.lang.Object $r8;
        java.lang.String $r3, $r10;
        android.content.pm.ApplicationInfo $r11;
        boolean $z0, $z1;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("com.google.android.gms");

        $z1 = staticinvoke <com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipop()>();

        if $z1 == 0 goto label04;

     label01:
        $r4 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageInstaller: java.util.List getAllSessions()>();

     label02:
        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.content.pm.PackageInstaller$SessionInfo) $r8;

        $r10 = virtualinvoke $r9.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getAppPackageName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label03;

        return 1;

     label04:
        $r4 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label05:
        $r11 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 8192);

     label06:
        if $z0 == 0 goto label07;

        $z0 = $r11.<android.content.pm.ApplicationInfo: boolean enabled>;

        return $z0;

     label07:
        $z0 = $r11.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z0 == 0 goto label10;

     label08:
        $z0 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isRestrictedUserProfile(android.content.Context)>($r2);

     label09:
        if $z0 != 0 goto label13;

        return 1;

     label10:
        return 0;

     label11:
        $r0 := @caughtexception;

        return 0;

     label12:
        $r1 := @caughtexception;

     label13:
        return 0;

        catch java.lang.Exception from label01 to label02 with label11;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label12;
    }

    public static boolean isUserRecoverableError(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label1;

        if $i0 == 2 goto label1;

        if $i0 == 3 goto label1;

        if $i0 == 9 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean uidHasPackageName(android.content.Context, int, java.lang.String)
    {
        android.content.Context $r1;
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.google.android.gms.common.util.UidVerifier: boolean uidHasPackageName(android.content.Context,int,java.lang.String)>($r1, $i0, $r0);

        return $z0;
    }

    public static int zza(android.content.Context, boolean, int)
    {
        android.content.Context $r2;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r0, $r1, $r13;
        android.content.pm.PackageInfo $r5, $r6;
        android.content.pm.Signature[] $r7;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r11;
        android.content.pm.ApplicationInfo $r12;
        android.content.pm.Signature $r8, $r9;

        $r2 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        if $i0 < 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean)>($z1);

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = null;

        if $z0 == 0 goto label06;

     label03:
        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.android.vending", 8256);

     label04:
        goto label06;

     label05:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(" requires the Google Play Store, but it is missing.");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", $r3);

        return 9;

     label06:
        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.google.android.gms", 64);

     label07:
        staticinvoke <com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context)>($r2);

        $z1 = staticinvoke <com.google.android.gms.common.GoogleSignatureVerifier: boolean zza(android.content.pm.PackageInfo,boolean)>($r6, 1);

        if $z1 != 0 goto label08;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(" requires Google Play services, but their signature is invalid.");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", $r3);

        return 9;

     label08:
        if $z0 == 0 goto label10;

        $z0 = staticinvoke <com.google.android.gms.common.GoogleSignatureVerifier: boolean zza(android.content.pm.PackageInfo,boolean)>($r5, 1);

        if $z0 == 0 goto label09;

        $r7 = $r5.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r8 = $r7[0];

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r9 = $r7[0];

        $z0 = virtualinvoke $r8.<android.content.pm.Signature: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label10;

     label09:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(" requires Google Play Store, but its signature is invalid.");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", $r3);

        return 9;

     label10:
        $i1 = $r6.<android.content.pm.PackageInfo: int versionCode>;

        $i1 = staticinvoke <com.google.android.gms.common.util.zzb: int zzc(int)>($i1);

        $i2 = staticinvoke <com.google.android.gms.common.util.zzb: int zzc(int)>($i0);

        if $i1 >= $i2 goto label11;

        $i1 = $r6.<android.content.pm.PackageInfo: int versionCode>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i2 = $i2 + 82;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Google Play services out of date for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  Requires ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", $r3);

        return 2;

     label11:
        $r12 = $r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r12 != null goto label15;

     label12:
        $r12 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>("com.google.android.gms", 0);

     label13:
        goto label15;

     label14:
        $r13 := @caughtexception;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(" requires Google Play services, but they\'re missing when getting application info.");

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("GooglePlayServicesUtil", $r3, $r13);

        return 1;

     label15:
        $z0 = $r12.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z0 != 0 goto label16;

        return 3;

     label16:
        return 0;

     label17:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(" requires Google Play services, but they are missing.");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GooglePlayServicesUtil", $r3);

        return 1;

     label18:
        $r0 := @caughtexception;

        goto label05;

     label19:
        $r1 := @caughtexception;

        goto label17;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label18;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label14;
    }
}
