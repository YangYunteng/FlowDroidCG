public class org.codehaus.jackson.map.deser.BeanDeserializer$1 extends java.lang.Object
{
    public static final int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType;
    public static final int[] $SwitchMap$org$codehaus$jackson$JsonToken;

    static void <clinit>()
    {
        org.codehaus.jackson.JsonToken $r15;
        java.lang.NoSuchFieldError $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.codehaus.jackson.JsonParser$NumberType[] $r11;
        org.codehaus.jackson.JsonToken[] $r14;
        int[] $r12;
        int $i0;
        org.codehaus.jackson.JsonParser$NumberType $r13;

        $r11 = staticinvoke <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType[] values()>();

        $i0 = lengthof $r11;

        $r12 = newarray (int)[$i0];

        <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType> = $r12;

     label01:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r13 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType INT>;

        $i0 = virtualinvoke $r13.<java.lang.Enum: int ordinal()>();

     label02:
        $r12[$i0] = 1;

     label03:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r13 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType LONG>;

        $i0 = virtualinvoke $r13.<java.lang.Enum: int ordinal()>();

     label04:
        $r12[$i0] = 2;

     label05:
        $r14 = staticinvoke <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken[] values()>();

        $i0 = lengthof $r14;

        $r12 = newarray (int)[$i0];

        <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken> = $r12;

     label06:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label07:
        $r12[$i0] = 1;

     label08:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label09:
        $r12[$i0] = 2;

     label10:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label11:
        $r12[$i0] = 3;

     label12:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label13:
        $r12[$i0] = 4;

     label14:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_TRUE>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label15:
        $r12[$i0] = 5;

     label16:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_FALSE>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label17:
        $r12[$i0] = 6;

     label18:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label19:
        $r12[$i0] = 7;

     label20:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label21:
        $r12[$i0] = 8;

     label22:
        $r12 = <org.codehaus.jackson.map.deser.BeanDeserializer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        $i0 = virtualinvoke $r15.<java.lang.Enum: int ordinal()>();

     label23:
        $r12[$i0] = 9;

        return;

     label24:
        $r0 := @caughtexception;

        goto label03;

     label25:
        $r1 := @caughtexception;

        goto label05;

     label26:
        $r2 := @caughtexception;

        goto label08;

     label27:
        $r3 := @caughtexception;

        goto label10;

     label28:
        $r4 := @caughtexception;

        goto label12;

     label29:
        $r5 := @caughtexception;

        goto label14;

     label30:
        $r6 := @caughtexception;

        goto label16;

     label31:
        $r7 := @caughtexception;

        goto label18;

     label32:
        $r8 := @caughtexception;

        goto label20;

     label33:
        $r9 := @caughtexception;

        goto label22;

     label34:
        $r10 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label24;
        catch java.lang.NoSuchFieldError from label03 to label04 with label25;
        catch java.lang.NoSuchFieldError from label06 to label07 with label26;
        catch java.lang.NoSuchFieldError from label08 to label09 with label27;
        catch java.lang.NoSuchFieldError from label10 to label11 with label28;
        catch java.lang.NoSuchFieldError from label12 to label13 with label29;
        catch java.lang.NoSuchFieldError from label14 to label15 with label30;
        catch java.lang.NoSuchFieldError from label16 to label17 with label31;
        catch java.lang.NoSuchFieldError from label18 to label19 with label32;
        catch java.lang.NoSuchFieldError from label20 to label21 with label33;
        catch java.lang.NoSuchFieldError from label22 to label23 with label34;
    }
}
