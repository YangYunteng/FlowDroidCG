public class com.google.common.collect.LinkedListMultimap$NodeIterator extends java.lang.Object implements java.util.ListIterator
{
    public com.google.common.collect.LinkedListMultimap$Node current;
    public int expectedModCount;
    public com.google.common.collect.LinkedListMultimap$Node next;
    public int nextIndex;
    public com.google.common.collect.LinkedListMultimap$Node previous;
    public final com.google.common.collect.LinkedListMultimap this$0;

    public void <init>(com.google.common.collect.LinkedListMultimap, int)
    {
        com.google.common.collect.LinkedListMultimap $r1, $r2;
        int $i0, $i1, $i2;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r3;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 := @parameter0: com.google.common.collect.LinkedListMultimap;

        $i1 := @parameter1: int;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap this$0>;

        $i2 = staticinvoke <com.google.common.collect.LinkedListMultimap: int access$000(com.google.common.collect.LinkedListMultimap)>($r2);

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int expectedModCount> = $i2;

        $i2 = virtualinvoke $r1.<com.google.common.collect.LinkedListMultimap: int size()>();

        staticinvoke <com.google.common.base.Preconditions: int checkPositionIndex(int,int)>($i1, $i2);

        $i0 = $i2 / 2;

        if $i1 < $i0 goto label2;

        $r3 = staticinvoke <com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$100(com.google.common.collect.LinkedListMultimap)>($r1);

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous> = $r3;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i2;

     label1:
        if $i1 >= $i2 goto label4;

        virtualinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$200(com.google.common.collect.LinkedListMultimap)>($r1);

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next> = $r3;

     label3:
        $i2 = -1;

        if $i1 <= 0 goto label4;

        virtualinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next()>();

        $i1 = $i1 + $i2;

        goto label3;

     label4:
        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current> = null;

        return;
    }

    private void checkForConcurrentModification()
    {
        com.google.common.collect.LinkedListMultimap $r1;
        int $i0, $i1;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap this$0>;

        $i1 = staticinvoke <com.google.common.collect.LinkedListMultimap: int access$000(com.google.common.collect.LinkedListMultimap)>($r1);

        $i0 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int expectedModCount>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;
    }

    public volatile void add(java.lang.Object)
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) $r1;

        virtualinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void add(java.util.Map$Entry)>($r2);

        return;
    }

    public void add(java.util.Map$Entry)
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        java.lang.UnsupportedOperationException $r2;
        java.util.Map$Entry $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean hasNext()
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        specialinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void checkForConcurrentModification()>();

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasPrevious()
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        specialinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void checkForConcurrentModification()>();

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.google.common.collect.LinkedListMultimap$Node next()
    {
        int $i0;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        specialinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void checkForConcurrentModification()>();

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next>;

        staticinvoke <com.google.common.collect.LinkedListMultimap: void access$300(java.lang.Object)>($r1);

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next>;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current> = $r1;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous> = $r1;

        $r1 = $r1.<com.google.common.collect.LinkedListMultimap$Node: com.google.common.collect.LinkedListMultimap$Node next>;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next> = $r1;

        $i0 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i0;

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next()>();

        return $r1;
    }

    public int nextIndex()
    {
        int i0;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        i0 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        return i0;
    }

    public com.google.common.collect.LinkedListMultimap$Node previous()
    {
        int $i0, $i1;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        specialinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void checkForConcurrentModification()>();

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous>;

        staticinvoke <com.google.common.collect.LinkedListMultimap: void access$300(java.lang.Object)>($r1);

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous>;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current> = $r1;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next> = $r1;

        $r1 = $r1.<com.google.common.collect.LinkedListMultimap$Node: com.google.common.collect.LinkedListMultimap$Node previous>;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous> = $r1;

        $i0 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i0;

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        return $r1;
    }

    public volatile java.lang.Object previous()
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous()>();

        return $r1;
    }

    public int previousIndex()
    {
        int $i0, $i1;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $i0 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public void remove()
    {
        com.google.common.collect.LinkedListMultimap $r3;
        int $i0;
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        com.google.common.collect.LinkedListMultimap$Node $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        specialinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void checkForConcurrentModification()>();

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>($z0);

        $r2 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next>;

        if $r2 == $r1 goto label3;

        $r1 = $r2.<com.google.common.collect.LinkedListMultimap$Node: com.google.common.collect.LinkedListMultimap$Node previous>;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node previous> = $r1;

        $i0 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i0 = $i0 - 1;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i0;

        goto label4;

     label3:
        $r1 = $r2.<com.google.common.collect.LinkedListMultimap$Node: com.google.common.collect.LinkedListMultimap$Node next>;

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node next> = $r1;

     label4:
        $r3 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap this$0>;

        $r1 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        staticinvoke <com.google.common.collect.LinkedListMultimap: void access$400(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node)>($r3, $r1);

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current> = null;

        $r3 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap this$0>;

        $i0 = staticinvoke <com.google.common.collect.LinkedListMultimap: int access$000(com.google.common.collect.LinkedListMultimap)>($r3);

        r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: int expectedModCount> = $i0;

        return;
    }

    public volatile void set(java.lang.Object)
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) $r1;

        virtualinvoke r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: void set(java.util.Map$Entry)>($r2);

        return;
    }

    public void set(java.util.Map$Entry)
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        java.lang.UnsupportedOperationException $r2;
        java.util.Map$Entry $r1;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setValue(java.lang.Object)
    {
        com.google.common.collect.LinkedListMultimap$NodeIterator r0;
        java.lang.Object $r1;
        com.google.common.collect.LinkedListMultimap$Node $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedListMultimap$NodeIterator;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r2 = r0.<com.google.common.collect.LinkedListMultimap$NodeIterator: com.google.common.collect.LinkedListMultimap$Node current>;

        $r2.<com.google.common.collect.LinkedListMultimap$Node: java.lang.Object value> = $r1;

        return;
    }
}
