public abstract class com.google.common.collect.AbstractMapBasedMultimap$Itr extends java.lang.Object implements java.util.Iterator
{
    public java.util.Collection collection;
    public java.lang.Object key;
    public final java.util.Iterator keyIterator;
    public final com.google.common.collect.AbstractMapBasedMultimap this$0;
    public java.util.Iterator valueIterator;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap)
    {
        com.google.common.collect.AbstractMapBasedMultimap$Itr r0;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.Iterator $r4;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$Itr;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: com.google.common.collect.AbstractMapBasedMultimap this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator keyIterator> = $r4;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.lang.Object key> = null;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Collection collection> = null;

        $r4 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator emptyModifiableIterator()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator valueIterator> = $r4;

        return;
    }

    public boolean hasNext()
    {
        com.google.common.collect.AbstractMapBasedMultimap$Itr r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$Itr;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator keyIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator valueIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.Object next()
    {
        com.google.common.collect.AbstractMapBasedMultimap$Itr r0;
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        java.util.Collection $r4;
        java.lang.Object $r2, $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$Itr;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator valueIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator keyIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        $r2 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.lang.Object key> = $r2;

        $r2 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.Collection) $r2;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Collection collection> = $r4;

        $r4 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Collection collection>;

        $r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator valueIterator> = $r1;

     label1:
        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.lang.Object key>;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator valueIterator>;

        $r5 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.lang.Object output(java.lang.Object,java.lang.Object)>($r2, $r5);

        return $r2;
    }

    public abstract java.lang.Object output(java.lang.Object, java.lang.Object);

    public void remove()
    {
        com.google.common.collect.AbstractMapBasedMultimap$Itr r0;
        com.google.common.collect.AbstractMapBasedMultimap $r3;
        java.util.Iterator $r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$Itr;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator valueIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: java.util.Iterator keyIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

     label1:
        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$Itr: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$210(com.google.common.collect.AbstractMapBasedMultimap)>($r3);

        return;
    }
}
