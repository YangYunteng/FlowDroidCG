public final class com.google.common.cache.Striped64$Cell extends java.lang.Object
{
    public static final sun.misc.Unsafe UNSAFE;
    public static final long valueOffset;
    public volatile long p0;
    public volatile long p1;
    public volatile long p2;
    public volatile long p3;
    public volatile long p4;
    public volatile long p5;
    public volatile long p6;
    public volatile long q0;
    public volatile long q1;
    public volatile long q2;
    public volatile long q3;
    public volatile long q4;
    public volatile long q5;
    public volatile long q6;
    public volatile long value;

    static void <clinit>()
    {
        sun.misc.Unsafe $r0;
        java.lang.Error $r4;
        java.lang.Class $r1;
        long $l0;
        java.lang.reflect.Field $r2;
        java.lang.Exception $r3;

     label1:
        $r0 = staticinvoke <com.google.common.cache.Striped64: sun.misc.Unsafe access$000()>();

     label2:
        <com.google.common.cache.Striped64$Cell: sun.misc.Unsafe UNSAFE> = $r0;

        $r1 = class "Lcom/google/common/cache/Striped64$Cell;";

        $r0 = <com.google.common.cache.Striped64$Cell: sun.misc.Unsafe UNSAFE>;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("value");

        $l0 = virtualinvoke $r0.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r2);

     label4:
        <com.google.common.cache.Striped64$Cell: long valueOffset> = $l0;

        return;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void <init>(long)
    {
        long $l0;
        com.google.common.cache.Striped64$Cell r0;

        r0 := @this: com.google.common.cache.Striped64$Cell;

        $l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.cache.Striped64$Cell: long value> = $l0;

        return;
    }

    public final boolean cas(long, long)
    {
        sun.misc.Unsafe $r1;
        long $l0, $l1, $l2;
        com.google.common.cache.Striped64$Cell r0;
        boolean $z0;

        r0 := @this: com.google.common.cache.Striped64$Cell;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $r1 = <com.google.common.cache.Striped64$Cell: sun.misc.Unsafe UNSAFE>;

        $l1 = <com.google.common.cache.Striped64$Cell: long valueOffset>;

        $z0 = virtualinvoke $r1.<sun.misc.Unsafe: boolean compareAndSwapLong(java.lang.Object,long,long,long)>(r0, $l1, $l2, $l0);

        return $z0;
    }
}
