public class c.c.a.i.c.b extends java.lang.Object
{

    public static long a(java.util.Date)
    {
        java.util.Date $r0, $r1;
        long $l0, $l1;

        $r0 := @parameter0: java.util.Date;

        $r1 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke $r0.<java.util.Date: long getTime()>();

        $l0 = $l0 - $l1;

        $l0 = $l0 / 1000L;

        $l0 = $l0 / 60L;

        $l0 = $l0 / 60L;

        $l0 = $l0 / 24L;

        return $l0;
    }

    public static boolean a(java.lang.String)
    {
        java.util.Date $r2;
        java.lang.String[] $r1;
        java.lang.Exception $r4;
        java.util.Calendar $r3;
        int $i0, $i1, $i2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label11;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label11;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $i0 = lengthof $r1;

        if $i0 >= 2 goto label01;

        return 1;

     label01:
        $r0 = $r1[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r0 = $r1[1];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label02:
        $r2 = new java.util.Date;

     label03:
        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>($r2);

        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

     label04:
        if $i1 <= $i2 goto label05;

        return 0;

     label05:
        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

     label06:
        if $i1 != $i2 goto label09;

     label07:
        $i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

     label08:
        $i1 = $i1 + 1;

        if $i0 < $i1 goto label11;

        return 0;

     label09:
        return 1;

     label10:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("EasyRefillDate", "EasyRefillDate Exception", $r4);

     label11:
        return 1;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }
}
