public class j.a.d.d extends j.a.P
{
    public j.a.d.a a;
    public final int b;
    public final int c;
    public final long d;
    public final java.lang.String e;

    public void <init>(int, int, long, java.lang.String)
    {
        j.a.d.a $r2;
        int $i0, $i2;
        j.a.d.d r0;
        long $l1;
        java.lang.String $r1;

        r0 := @this: j.a.d.d;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $r1 := @parameter3: java.lang.String;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "schedulerName");

        specialinvoke r0.<j.a.P: void <init>()>();

        r0.<j.a.d.d: int b> = $i2;

        r0.<j.a.d.d: int c> = $i0;

        r0.<j.a.d.d: long d> = $l1;

        r0.<j.a.d.d: java.lang.String e> = $r1;

        $r2 = virtualinvoke r0.<j.a.d.d: j.a.d.a m()>();

        r0.<j.a.d.d: j.a.d.a a> = $r2;

        return;
    }

    public void <init>(int, int, java.lang.String)
    {
        int $i0, $i1;
        j.a.d.d r0;
        long $l2;
        java.lang.String $r1;

        r0 := @this: j.a.d.d;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "schedulerName");

        $l2 = <j.a.d.m: long f>;

        specialinvoke r0.<j.a.d.d: void <init>(int,int,long,java.lang.String)>($i0, $i1, $l2, $r1);

        return;
    }

    public void <init>(int, int, java.lang.String, int, i.f.b.g)
    {
        int $i0, $i1, $i2, $i3;
        j.a.d.d r0;
        java.lang.String $r1;
        i.f.b.g $r2;

        r0 := @this: j.a.d.d;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $i2 := @parameter3: int;

        $r2 := @parameter4: i.f.b.g;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $i0 = <j.a.d.m: int d>;

     label1:
        $i3 = $i2 & 2;

        if $i3 == 0 goto label2;

        $i1 = <j.a.d.m: int e>;

     label2:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label3;

        $r1 = "DefaultDispatcher";

     label3:
        specialinvoke r0.<j.a.d.d: void <init>(int,int,java.lang.String)>($i0, $i1, $r1);

        return;
    }

    public final j.a.q a(int)
    {
        j.a.d.d r0;
        j.a.d.f $r1;
        java.lang.IllegalArgumentException $r5;
        j.a.d.l $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: j.a.d.d;

        $i0 := @parameter0: int;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = new j.a.d.f;

        $r2 = <j.a.d.l: j.a.d.l b>;

        specialinvoke $r1.<j.a.d.f: void <init>(j.a.d.d,int,j.a.d.l)>(r0, $i0, $r2);

        return $r1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected positive parallelism level, but have ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r5;
    }

    public final void a(java.lang.Runnable, j.a.d.j, boolean)
    {
        j.a.d.a $r5;
        j.a.d.d r0;
        java.lang.Runnable $r4;
        j.a.d.i $r2;
        j.a.d.j $r1;
        java.util.concurrent.RejectedExecutionException $r3;
        j.a.B $r6;
        boolean $z0;

        r0 := @this: j.a.d.d;

        $r4 := @parameter0: java.lang.Runnable;

        $r1 := @parameter1: j.a.d.j;

        $z0 := @parameter2: boolean;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r4, "block");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "context");

        $r5 = r0.<j.a.d.d: j.a.d.a a>;

     label1:
        virtualinvoke $r5.<j.a.d.a: void a(java.lang.Runnable,j.a.d.j,boolean)>($r4, $r1, $z0);

     label2:
        return;

     label3:
        $r6 = <j.a.B: j.a.B g>;

        $r5 = r0.<j.a.d.d: j.a.d.a a>;

        $r2 = virtualinvoke $r5.<j.a.d.a: j.a.d.i a(java.lang.Runnable,j.a.d.j)>($r4, $r1);

        virtualinvoke $r6.<j.a.L: void a(java.lang.Runnable)>($r2);

        return;

     label4:
        $r3 := @caughtexception;

        goto label3;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label4;
    }

    public void dispatch(i.c.h, java.lang.Runnable)
    {
        java.util.concurrent.RejectedExecutionException $r4;
        i.c.h $r1;
        j.a.d.a $r3;
        j.a.d.d r0;
        java.lang.Runnable $r2;
        j.a.B $r5;

        r0 := @this: j.a.d.d;

        $r1 := @parameter0: i.c.h;

        $r2 := @parameter1: java.lang.Runnable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "context");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "block");

        $r3 = r0.<j.a.d.d: j.a.d.a a>;

     label1:
        staticinvoke <j.a.d.a: void a(j.a.d.a,java.lang.Runnable,j.a.d.j,boolean,int,java.lang.Object)>($r3, $r2, null, 0, 6, null);

     label2:
        return;

     label3:
        $r5 = <j.a.B: j.a.B g>;

        virtualinvoke $r5.<j.a.L: void dispatch(i.c.h,java.lang.Runnable)>($r1, $r2);

        return;

     label4:
        $r4 := @caughtexception;

        goto label3;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label4;
    }

    public void dispatchYield(i.c.h, java.lang.Runnable)
    {
        java.util.concurrent.RejectedExecutionException $r4;
        i.c.h $r1;
        j.a.d.a $r3;
        j.a.d.d r0;
        java.lang.Runnable $r2;
        j.a.B $r5;

        r0 := @this: j.a.d.d;

        $r1 := @parameter0: i.c.h;

        $r2 := @parameter1: java.lang.Runnable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "context");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "block");

        $r3 = r0.<j.a.d.d: j.a.d.a a>;

     label1:
        staticinvoke <j.a.d.a: void a(j.a.d.a,java.lang.Runnable,j.a.d.j,boolean,int,java.lang.Object)>($r3, $r2, null, 1, 2, null);

     label2:
        return;

     label3:
        $r5 = <j.a.B: j.a.B g>;

        virtualinvoke $r5.<j.a.q: void dispatchYield(i.c.h,java.lang.Runnable)>($r1, $r2);

        return;

     label4:
        $r4 := @caughtexception;

        goto label3;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label4;
    }

    public final j.a.d.a m()
    {
        j.a.d.a $r2;
        int $i0, $i1;
        j.a.d.d r0;
        long $l2;
        java.lang.String $r1;

        r0 := @this: j.a.d.d;

        $r2 = new j.a.d.a;

        $i0 = r0.<j.a.d.d: int b>;

        $i1 = r0.<j.a.d.d: int c>;

        $l2 = r0.<j.a.d.d: long d>;

        $r1 = r0.<j.a.d.d: java.lang.String e>;

        specialinvoke $r2.<j.a.d.a: void <init>(int,int,long,java.lang.String)>($i0, $i1, $l2, $r1);

        return $r2;
    }
}
