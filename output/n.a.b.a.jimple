public final class n.a.b.a extends java.lang.Object
{
    public static final java.lang.Object a;
    public final java.util.Map b;

    static void <clinit>()
    {
        n.a.b.a$a $r0;

        $r0 = new n.a.b.a$a;

        specialinvoke $r0.<n.a.b.a$a: void <init>(byte)>(0);

        <n.a.b.a: java.lang.Object a> = $r0;

        return;
    }

    public void <init>()
    {
        n.a.b.a r0;
        java.util.HashMap $r1;

        r0 := @this: n.a.b.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<n.a.b.a: java.util.Map b> = $r1;

        return;
    }

    public void <init>(c.g.a.j.t)
    {
        c.g.a.j.t $r1;
        char $c0;
        repackaged.org.json.JSONException $r8;
        n.a.b.a r0;
        java.util.Map $r5;
        int $i1;
        java.lang.Object $r2, $r4;
        java.lang.StringBuilder $r6, $r7;
        java.lang.String $r3;

        r0 := @this: n.a.b.a;

        $r1 := @parameter0: c.g.a.j.t;

        specialinvoke r0.<n.a.b.a: void <init>()>();

     label01:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char e()>();

        if $c0 == 0 goto label02;

        $i1 = (int) $c0;

        if $i1 <= 32 goto label01;

     label02:
        $i1 = (int) $c0;

        if $i1 != 123 goto label13;

     label03:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        if $c0 == 0 goto label12;

        $i1 = (int) $c0;

        if $i1 == 125 goto label15;

        virtualinvoke $r1.<c.g.a.j.t: void d()>();

        $r2 = virtualinvoke $r1.<c.g.a.j.t: java.lang.Object c()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 != 58 goto label11;

        $r2 = virtualinvoke $r1.<c.g.a.j.t: java.lang.Object c()>();

        if $r3 == null goto label07;

        if $r2 == null goto label07;

        if $r3 != null goto label04;

        $r4 = null;

        goto label05;

     label04:
        $r5 = r0.<n.a.b.a: java.util.Map b>;

        $r4 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

     label05:
        if $r4 != null goto label06;

        virtualinvoke r0.<n.a.b.a: n.a.b.a a(java.lang.String,java.lang.Object)>($r3, $r2);

        goto label07;

     label06:
        $r8 = new repackaged.org.json.JSONException;

        $r7 = new java.lang.StringBuilder;

        $r6 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Duplicate key \"");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label07:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 == 44 goto label09;

        $i1 = (int) $c0;

        if $i1 == 59 goto label09;

        $i1 = (int) $c0;

        if $i1 != 125 goto label08;

        return;

     label08:
        $r8 = new repackaged.org.json.JSONException;

        $r7 = new java.lang.StringBuilder;

        $r6 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a \',\' or \'}\'");

        $r3 = virtualinvoke $r1.<c.g.a.j.t: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label09:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 != 125 goto label10;

        return;

     label10:
        virtualinvoke $r1.<c.g.a.j.t: void d()>();

        goto label03;

     label11:
        $r8 = new repackaged.org.json.JSONException;

        $r7 = new java.lang.StringBuilder;

        $r6 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a \':\' after a key");

        $r3 = virtualinvoke $r1.<c.g.a.j.t: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label12:
        $r8 = new repackaged.org.json.JSONException;

        $r7 = new java.lang.StringBuilder;

        $r6 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A JSONObject text must end with \'}\'");

        $r3 = virtualinvoke $r1.<c.g.a.j.t: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label13:
        $r8 = new repackaged.org.json.JSONException;

        $r7 = new java.lang.StringBuilder;

        $r6 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A JSONObject text must begin with \'{\'");

        $r3 = virtualinvoke $r1.<c.g.a.j.t: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r3);

        goto label14;

     label14:
        throw $r8;

     label15:
        return;
    }

    public void <init>(java.lang.Object)
    {
        java.lang.reflect.Method[] $r7;
        n.a.b.a r0;
        java.util.Locale $r2;
        java.util.Map $r15;
        int $i0, $i1;
        java.lang.String $r9, $r10, $r11;
        java.lang.reflect.Method $r8;
        boolean $z0;
        java.lang.Class[] $r12;
        char $c2;
        java.lang.Exception $r3, $r4;
        java.lang.Object $r1, $r14;
        java.lang.Class $r5;
        java.lang.StringBuilder $r13;
        java.lang.ClassLoader $r6;

        r0 := @this: n.a.b.a;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<n.a.b.a: void <init>()>();

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r6 == null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        goto label04;

     label03:
        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label38;

     label06:
        $r8 = $r7[$i0];

        $i1 = virtualinvoke $r8.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

     label07:
        if $z0 == 0 goto label37;

     label08:
        $r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("get");

     label09:
        $r10 = "";

        if $z0 == 0 goto label16;

        $r11 = "getClass";

     label10:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label11:
        if $z0 != 0 goto label19;

        $r11 = "getDeclaringClass";

     label12:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label13:
        if $z0 == 0 goto label14;

        goto label19;

     label14:
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(3);

     label15:
        goto label19;

     label16:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("is");

     label17:
        if $z0 == 0 goto label19;

     label18:
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(2);

     label19:
        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

     label20:
        if $i1 <= 0 goto label37;

     label21:
        $c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c2);

     label22:
        if $z0 == 0 goto label37;

     label23:
        $r12 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r12;

     label24:
        if $i1 != 0 goto label37;

     label25:
        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

     label26:
        if $i1 != 1 goto label29;

        $r2 = <java.util.Locale: java.util.Locale ROOT>;

     label27:
        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

     label28:
        goto label34;

     label29:
        $c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(1);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c2);

     label30:
        if $z0 != 0 goto label34;

        $r13 = new java.lang.StringBuilder;

     label31:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

     label32:
        $r2 = <java.util.Locale: java.util.Locale ROOT>;

     label33:
        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label34:
        $r14 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, null);

     label35:
        if $r14 == null goto label37;

     label36:
        $r15 = r0.<n.a.b.a: java.util.Map b>;

        $r14 = staticinvoke <n.a.b.a: java.lang.Object a(java.lang.Object)>($r14);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r14);

     label37:
        $i0 = $i0 + 1;

        goto label05;

     label38:
        return;

     label39:
        $r3 := @caughtexception;

        goto label37;

     label40:
        $r4 := @caughtexception;

        goto label37;

        catch java.lang.Exception from label06 to label07 with label39;
        catch java.lang.Exception from label08 to label09 with label39;
        catch java.lang.Exception from label10 to label11 with label40;
        catch java.lang.Exception from label12 to label13 with label40;
        catch java.lang.Exception from label14 to label15 with label40;
        catch java.lang.Exception from label16 to label17 with label40;
        catch java.lang.Exception from label18 to label19 with label40;
        catch java.lang.Exception from label19 to label20 with label40;
        catch java.lang.Exception from label21 to label22 with label40;
        catch java.lang.Exception from label23 to label24 with label40;
        catch java.lang.Exception from label25 to label26 with label40;
        catch java.lang.Exception from label27 to label28 with label40;
        catch java.lang.Exception from label29 to label30 with label40;
        catch java.lang.Exception from label31 to label32 with label40;
        catch java.lang.Exception from label33 to label34 with label40;
        catch java.lang.Exception from label34 to label35 with label40;
        catch java.lang.Exception from label36 to label37 with label40;
    }

    public void <init>(java.lang.String)
    {
        n.a.b.a r0;
        c.g.a.j.t $r2;
        java.lang.String $r1;

        r0 := @this: n.a.b.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = new c.g.a.j.t;

        specialinvoke $r2.<c.g.a.j.t: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<n.a.b.a: void <init>(c.g.a.j.t)>($r2);

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.HashMap $r2;
        n.a.b.a r0;
        java.util.Map $r1;
        java.lang.Object $r5, $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: n.a.b.a;

        $r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<n.a.b.a: java.util.Map b> = $r2;

        if $r1 == null goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r5 == null goto label1;

        $r1 = r0.<n.a.b.a: java.util.Map b>;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r5 = staticinvoke <n.a.b.a: java.lang.Object a(java.lang.Object)>($r5);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r5);

        goto label1;

     label2:
        return;
    }

    public static final java.io.Writer a(java.io.Writer, java.lang.Object, int, int)
    {
        n.a.b.b $r10, $r17;
        n.a.b.a $r9, $r16;
        java.math.BigDecimal $r15;
        n.a.b.c $r3;
        java.lang.Enum $r8;
        java.util.Map $r11;
        int $i0, $i1;
        java.lang.String $r4, $r7;
        java.lang.Number $r6;
        boolean $z0;
        java.util.Collection $r12;
        java.lang.NumberFormatException $r0;
        java.lang.Exception $r5;
        repackaged.org.json.JSONException $r14;
        java.io.Writer $r1;
        java.lang.Object $r2;
        java.lang.Class $r13;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        if $r2 == null goto label23;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(null);

        if $z0 == 0 goto label01;

        goto label23;

     label01:
        $z0 = $r2 instanceof n.a.b.c;

        if $z0 == 0 goto label07;

     label02:
        $r3 = (n.a.b.c) $r2;

        $r4 = interfaceinvoke $r3.<n.a.b.c: java.lang.String a()>();

     label03:
        if $r4 == null goto label04;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();

        goto label05;

     label04:
        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r4);

     label05:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r4);

        return $r1;

     label06:
        $r5 := @caughtexception;

        $r14 = new repackaged.org.json.JSONException;

        specialinvoke $r14.<repackaged.org.json.JSONException: void <init>(java.lang.Throwable)>($r5);

        throw $r14;

     label07:
        $z0 = $r2 instanceof java.lang.Number;

        if $z0 == 0 goto label15;

        $r6 = (java.lang.Number) $r2;

        if $r6 == null goto label14;

        staticinvoke <n.a.b.a: void b(java.lang.Object)>($r6);

        $r4 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r7 = $r4;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(46);

        if $i0 <= 0 goto label10;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(101);

        if $i0 >= 0 goto label10;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(69);

        if $i0 >= 0 goto label10;

     label08:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>("0");

        if $z0 == 0 goto label09;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label08;

     label09:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 == 0 goto label10;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label10:
        $r15 = new java.math.BigDecimal;

     label11:
        specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>($r7);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r7);

     label12:
        return $r1;

     label13:
        staticinvoke <n.a.b.a: java.io.Writer a(java.lang.String,java.io.Writer)>($r7, $r1);

        return $r1;

     label14:
        $r14 = new repackaged.org.json.JSONException;

        specialinvoke $r14.<repackaged.org.json.JSONException: void <init>(java.lang.String)>("Null pointer");

        throw $r14;

     label15:
        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label16;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r4);

        return $r1;

     label16:
        $z0 = $r2 instanceof java.lang.Enum;

        if $z0 == 0 goto label17;

        $r8 = (java.lang.Enum) $r2;

        $r4 = virtualinvoke $r8.<java.lang.Enum: java.lang.String name()>();

        $r4 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r4);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r4);

        return $r1;

     label17:
        $z0 = $r2 instanceof n.a.b.a;

        if $z0 == 0 goto label18;

        $r9 = (n.a.b.a) $r2;

        virtualinvoke $r9.<n.a.b.a: java.io.Writer a(java.io.Writer,int,int)>($r1, $i0, $i1);

        return $r1;

     label18:
        $z0 = $r2 instanceof n.a.b.b;

        if $z0 == 0 goto label19;

        $r10 = (n.a.b.b) $r2;

        virtualinvoke $r10.<n.a.b.b: java.io.Writer a(java.io.Writer,int,int)>($r1, $i0, $i1);

        return $r1;

     label19:
        $z0 = $r2 instanceof java.util.Map;

        if $z0 == 0 goto label20;

        $r11 = (java.util.Map) $r2;

        $r16 = new n.a.b.a;

        specialinvoke $r16.<n.a.b.a: void <init>(java.util.Map)>($r11);

        virtualinvoke $r16.<n.a.b.a: java.io.Writer a(java.io.Writer,int,int)>($r1, $i0, $i1);

        return $r1;

     label20:
        $z0 = $r2 instanceof java.util.Collection;

        if $z0 == 0 goto label21;

        $r12 = (java.util.Collection) $r2;

        $r17 = new n.a.b.b;

        specialinvoke $r17.<n.a.b.b: void <init>(java.util.Collection)>($r12);

        virtualinvoke $r17.<n.a.b.b: java.io.Writer a(java.io.Writer,int,int)>($r1, $i0, $i1);

        return $r1;

     label21:
        $r13 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r13.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label22;

        $r17 = new n.a.b.b;

        specialinvoke $r17.<n.a.b.b: void <init>(java.lang.Object)>($r2);

        virtualinvoke $r17.<n.a.b.b: java.io.Writer a(java.io.Writer,int,int)>($r1, $i0, $i1);

        return $r1;

     label22:
        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <n.a.b.a: java.io.Writer a(java.lang.String,java.io.Writer)>($r4, $r1);

        return $r1;

     label23:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("null");

        return $r1;

     label24:
        $r0 := @caughtexception;

        goto label13;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.NumberFormatException from label11 to label12 with label24;
    }

    public static java.io.Writer a(java.lang.String, java.io.Writer)
    {
        char $c3;
        java.io.Writer $r0;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r1, $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.io.Writer;

        if $r1 == null goto label17;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        goto label17;

     label01:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        virtualinvoke $r0.<java.io.Writer: void write(int)>(34);

        $i1 = 0;

        $i2 = 0;

     label02:
        if $i1 >= $i0 goto label16;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i4 = (int) $c3;

        if $i4 == 12 goto label14;

        $i4 = (int) $c3;

        if $i4 == 13 goto label13;

        $i4 = (int) $c3;

        if $i4 == 34 goto label11;

        $i4 = (int) $c3;

        if $i4 == 47 goto label09;

        $i2 = (int) $c3;

        if $i2 == 92 goto label11;

        $i2 = (int) $c3;

        lookupswitch($i2)
        {
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label06;
            default: goto label03;
        };

     label03:
        $i2 = (int) $c3;

        if $i2 < 32 goto label05;

        $i2 = (int) $c3;

        if $i2 < 128 goto label04;

        $i2 = (int) $c3;

        if $i2 < 160 goto label05;

     label04:
        $i2 = (int) $c3;

        if $i2 < 8192 goto label12;

        $i2 = (int) $c3;

        if $i2 >= 8448 goto label12;

     label05:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\\u");

        $i2 = (int) $c3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = 4 - $i2;

        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String,int,int)>("0000", 0, $i2);

        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>($r2);

        goto label15;

     label06:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\\n");

        goto label15;

     label07:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\\t");

        goto label15;

     label08:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\\b");

        goto label15;

     label09:
        if $i2 != 60 goto label10;

        virtualinvoke $r0.<java.io.Writer: void write(int)>(92);

     label10:
        $i2 = (int) $c3;

        virtualinvoke $r0.<java.io.Writer: void write(int)>($i2);

        goto label15;

     label11:
        virtualinvoke $r0.<java.io.Writer: void write(int)>(92);

     label12:
        $i2 = (int) $c3;

        virtualinvoke $r0.<java.io.Writer: void write(int)>($i2);

        goto label15;

     label13:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\\r");

        goto label15;

     label14:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\\f");

     label15:
        $i1 = $i1 + 1;

        $i2 = $c3;

        goto label02;

     label16:
        virtualinvoke $r0.<java.io.Writer: void write(int)>(34);

        return $r0;

     label17:
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>("\"\"");

        return $r0;
    }

    public static java.lang.Object a(java.lang.Object)
    {
        java.lang.Package $r8;
        java.util.Collection $r3;
        java.lang.Exception $r0;
        n.a.b.b $r4;
        n.a.b.a $r7;
        java.util.Map $r6;
        java.lang.Object $r1, $r2;
        java.lang.Class $r5;
        java.lang.String $r9;
        java.lang.ClassLoader $r10;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        $r1 = <n.a.b.a: java.lang.Object a>;

        return $r1;

     label01:
        $z0 = $r1 instanceof n.a.b.a;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof n.a.b.b;

        if $z0 != 0 goto label36;

        $r2 = <n.a.b.a: java.lang.Object a>;

     label02:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

     label03:
        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof n.a.b.c;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Byte;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Character;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Short;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Long;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Float;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Double;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.math.BigInteger;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.math.BigDecimal;

        if $z0 != 0 goto label36;

        $z0 = $r1 instanceof java.lang.Enum;

        if $z0 == 0 goto label04;

        return $r1;

     label04:
        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label09;

     label05:
        $r3 = (java.util.Collection) $r1;

     label06:
        $r4 = new n.a.b.b;

     label07:
        specialinvoke $r4.<n.a.b.b: void <init>(java.util.Collection)>($r3);

     label08:
        return $r4;

     label09:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isArray()>();

     label10:
        if $z0 == 0 goto label13;

        $r4 = new n.a.b.b;

     label11:
        specialinvoke $r4.<n.a.b.b: void <init>(java.lang.Object)>($r1);

     label12:
        return $r4;

     label13:
        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label18;

     label14:
        $r6 = (java.util.Map) $r1;

     label15:
        $r7 = new n.a.b.a;

     label16:
        specialinvoke $r7.<n.a.b.a: void <init>(java.util.Map)>($r6);

     label17:
        return $r7;

     label18:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.Package getPackage()>();

     label19:
        if $r8 == null goto label22;

     label20:
        $r9 = virtualinvoke $r8.<java.lang.Package: java.lang.String getName()>();

     label21:
        goto label23;

     label22:
        $r9 = "";

     label23:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

     label24:
        if $z0 != 0 goto label32;

     label25:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("javax.");

     label26:
        if $z0 != 0 goto label32;

     label27:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label28:
        if $r10 != null goto label29;

        goto label32;

     label29:
        $r7 = new n.a.b.a;

     label30:
        specialinvoke $r7.<n.a.b.a: void <init>(java.lang.Object)>($r1);

     label31:
        return $r7;

     label32:
        $r9 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

     label33:
        return $r9;

     label34:
        return null;

     label35:
        $r0 := @caughtexception;

        goto label34;

     label36:
        return $r1;

        catch java.lang.Exception from label02 to label03 with label35;
        catch java.lang.Exception from label05 to label06 with label35;
        catch java.lang.Exception from label07 to label08 with label35;
        catch java.lang.Exception from label09 to label10 with label35;
        catch java.lang.Exception from label11 to label12 with label35;
        catch java.lang.Exception from label14 to label15 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.lang.Exception from label20 to label21 with label35;
        catch java.lang.Exception from label23 to label24 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Exception from label32 to label33 with label35;
    }

    public static final void a(java.io.Writer, int)
    {
        java.io.Writer $r0;
        int $i0, $i1;

        $r0 := @parameter0: java.io.Writer;

        $i0 := @parameter1: int;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        virtualinvoke $r0.<java.io.Writer: void write(int)>(32);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static java.lang.Object b(java.lang.String)
    {
        java.lang.Double $r5;
        char $c1;
        long $l3, $l4;
        java.lang.Integer $r4;
        java.lang.Exception $r0;
        byte $b0;
        java.lang.Long $r3, $r8;
        int $i2;
        java.lang.Boolean r6;
        java.lang.Object r7;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label01;

        return $r1;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label02;

        r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r6;

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z0 == 0 goto label03;

        r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r6;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z0 == 0 goto label04;

        r7 = <n.a.b.a: java.lang.Object a>;

        return r7;

     label04:
        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 < 48 goto label05;

        $i2 = (int) $c1;

        if $i2 <= 57 goto label06;

     label05:
        $i2 = (int) $c1;

        if $i2 != 45 goto label26;

     label06:
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

     label07:
        if $i2 >= 0 goto label22;

     label08:
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(101);

     label09:
        if $i2 >= 0 goto label22;

     label10:
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(69);

     label11:
        if $i2 >= 0 goto label22;

        $r2 = "-0";

     label12:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label13:
        if $z0 == 0 goto label14;

        goto label22;

     label14:
        $r8 = new java.lang.Long;

        $r3 = $r8;

     label15:
        specialinvoke $r8.<java.lang.Long: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.Long: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label16:
        if $z0 == 0 goto label28;

     label17:
        $l3 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $i2 = virtualinvoke $r3.<java.lang.Long: int intValue()>();

     label18:
        $l4 = (long) $i2;

        $b0 = $l3 cmp $l4;

        if $b0 != 0 goto label21;

     label19:
        $i2 = virtualinvoke $r3.<java.lang.Long: int intValue()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label20:
        return $r4;

     label21:
        return $r3;

     label22:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r5.<java.lang.Double: boolean isInfinite()>();

     label23:
        if $z0 != 0 goto label28;

     label24:
        $z0 = virtualinvoke $r5.<java.lang.Double: boolean isNaN()>();

     label25:
        if $z0 != 0 goto label28;

        return $r5;

     label26:
        return $r1;

     label27:
        $r0 := @caughtexception;

     label28:
        return $r1;

        catch java.lang.Exception from label06 to label07 with label27;
        catch java.lang.Exception from label08 to label09 with label27;
        catch java.lang.Exception from label10 to label11 with label27;
        catch java.lang.Exception from label12 to label13 with label27;
        catch java.lang.Exception from label15 to label16 with label27;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label22 to label23 with label27;
        catch java.lang.Exception from label24 to label25 with label27;
    }

    public static void b(java.lang.Object)
    {
        repackaged.org.json.JSONException $r2;
        java.lang.Float $r3;
        java.lang.Double $r1;
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label4;

        $z0 = $r0 instanceof java.lang.Double;

        if $z0 == 0 goto label2;

        $r1 = (java.lang.Double) $r0;

        $z0 = virtualinvoke $r1.<java.lang.Double: boolean isInfinite()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Double: boolean isNaN()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new repackaged.org.json.JSONException;

        specialinvoke $r2.<repackaged.org.json.JSONException: void <init>(java.lang.String)>("JSON does not allow non-finite numbers.");

        throw $r2;

     label2:
        $z0 = $r0 instanceof java.lang.Float;

        if $z0 == 0 goto label4;

        $r3 = (java.lang.Float) $r0;

        $z0 = virtualinvoke $r3.<java.lang.Float: boolean isInfinite()>();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.Float: boolean isNaN()>();

        if $z0 != 0 goto label3;

        return;

     label3:
        $r2 = new repackaged.org.json.JSONException;

        specialinvoke $r2.<repackaged.org.json.JSONException: void <init>(java.lang.String)>("JSON does not allow non-finite numbers.");

        throw $r2;

     label4:
        return;
    }

    public static java.lang.String c(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.StringBuffer $r3;
        java.io.StringWriter $r0;
        java.io.IOException $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        entermonitor $r3;

     label1:
        staticinvoke <n.a.b.a: java.io.Writer a(java.lang.String,java.io.Writer)>($r2, $r0);

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        exitmonitor $r3;

     label3:
        return $r2;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r3;

        throw $r4;

     label5:
        exitmonitor $r3;

        return "";

     label6:
        $r1 := @caughtexception;

        goto label5;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public final int a(java.lang.String)
    {
        java.lang.Exception $r1;
        repackaged.org.json.JSONException $r6;
        n.a.b.a r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r2, $r5;
        java.lang.Number $r4;
        boolean $z0;

        r0 := @this: n.a.b.a;

        $r2 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<n.a.b.a: java.lang.Object e(java.lang.String)>($r2);

        $z0 = $r3 instanceof java.lang.Number;

        if $z0 == 0 goto label3;

     label1:
        $r4 = (java.lang.Number) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

     label2:
        return $i0;

     label3:
        $r5 = (java.lang.String) $r3;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label4:
        return $i0;

     label5:
        $r6 = new repackaged.org.json.JSONException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSONObject[");

        $r2 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not an int.");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label6:
        $r1 := @caughtexception;

        goto label5;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public final java.io.Writer a(java.io.Writer, int, int)
    {
        n.a.b.a r0;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.io.IOException $r7;
        repackaged.org.json.JSONException $r8;
        java.io.Writer $r1;
        java.lang.Object $r5;

        r0 := @this: n.a.b.a;

        $r1 := @parameter0: java.io.Writer;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = r0.<n.a.b.a: java.util.Map b>;

     label01:
        $i2 = interfaceinvoke $r2.<java.util.Map: int size()>();

     label02:
        $r2 = r0.<n.a.b.a: java.util.Map b>;

     label03:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke $r1.<java.io.Writer: void write(int)>(123);

     label04:
        if $i2 != 1 goto label11;

     label05:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r6 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r6);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r6);

        virtualinvoke $r1.<java.io.Writer: void write(int)>(58);

     label06:
        if $i1 <= 0 goto label08;

     label07:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(32);

     label08:
        $r2 = r0.<n.a.b.a: java.util.Map b>;

     label09:
        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        staticinvoke <n.a.b.a: java.io.Writer a(java.io.Writer,java.lang.Object,int,int)>($r1, $r5, $i1, $i0);

     label10:
        goto label34;

     label11:
        if $i2 == 0 goto label34;

        $i2 = $i0 + $i1;

        $i3 = 0;

        $z0 = 0;

     label12:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label13:
        if $z1 == 0 goto label29;

     label14:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label15:
        if $z0 == 0 goto label17;

     label16:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(44);

     label17:
        if $i1 <= 0 goto label19;

     label18:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(10);

     label19:
        $i4 = 0;

     label20:
        if $i4 >= $i2 goto label23;

     label21:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(32);

     label22:
        $i4 = $i4 + 1;

        goto label20;

     label23:
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r6 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r6);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r6);

        virtualinvoke $r1.<java.io.Writer: void write(int)>(58);

     label24:
        if $i1 <= 0 goto label26;

     label25:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(32);

     label26:
        $r2 = r0.<n.a.b.a: java.util.Map b>;

     label27:
        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        staticinvoke <n.a.b.a: java.io.Writer a(java.io.Writer,java.lang.Object,int,int)>($r1, $r5, $i1, $i2);

     label28:
        $z0 = 1;

        goto label12;

     label29:
        if $i1 <= 0 goto label31;

     label30:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(10);

     label31:
        if $i3 >= $i0 goto label34;

     label32:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(32);

     label33:
        $i3 = $i3 + 1;

        goto label31;

     label34:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(125);

     label35:
        return $r1;

     label36:
        $r7 := @caughtexception;

        $r8 = new repackaged.org.json.JSONException;

        specialinvoke $r8.<repackaged.org.json.JSONException: void <init>(java.lang.Throwable)>($r7);

        goto label37;

     label37:
        throw $r8;

        catch java.io.IOException from label01 to label02 with label36;
        catch java.io.IOException from label03 to label04 with label36;
        catch java.io.IOException from label05 to label06 with label36;
        catch java.io.IOException from label07 to label08 with label36;
        catch java.io.IOException from label09 to label10 with label36;
        catch java.io.IOException from label12 to label13 with label36;
        catch java.io.IOException from label14 to label15 with label36;
        catch java.io.IOException from label16 to label17 with label36;
        catch java.io.IOException from label18 to label19 with label36;
        catch java.io.IOException from label21 to label22 with label36;
        catch java.io.IOException from label23 to label24 with label36;
        catch java.io.IOException from label25 to label26 with label36;
        catch java.io.IOException from label27 to label28 with label36;
        catch java.io.IOException from label30 to label31 with label36;
        catch java.io.IOException from label32 to label33 with label36;
        catch java.io.IOException from label34 to label35 with label36;
    }

    public final java.lang.String a()
    {
        java.lang.Throwable $r4;
        n.a.b.a r0;
        java.lang.StringBuffer $r2;
        java.io.StringWriter $r1;
        java.lang.String $r3;

        r0 := @this: n.a.b.a;

        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        entermonitor $r2;

     label1:
        virtualinvoke r0.<n.a.b.a: java.io.Writer a(java.io.Writer,int,int)>($r1, 0, 0);

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final n.a.b.a a(java.lang.String, java.lang.Object)
    {
        n.a.b.a r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.String $r2;
        java.lang.NullPointerException $r4;

        r0 := @this: n.a.b.a;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.Object;

        if $r2 == null goto label2;

        if $r3 == null goto label1;

        staticinvoke <n.a.b.a: void b(java.lang.Object)>($r3);

        $r1 = r0.<n.a.b.a: java.util.Map b>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return r0;

     label1:
        $r1 = r0.<n.a.b.a: java.util.Map b>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        return r0;

     label2:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null key.");

        throw $r4;
    }

    public final java.lang.String d(java.lang.String)
    {
        repackaged.org.json.JSONException $r3;
        n.a.b.a r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: n.a.b.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<n.a.b.a: java.lang.Object e(java.lang.String)>($r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.String) $r2;

        return $r1;

     label1:
        $r3 = new repackaged.org.json.JSONException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSONObject[");

        $r1 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not a string.");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public final java.lang.Object e(java.lang.String)
    {
        repackaged.org.json.JSONException $r5;
        n.a.b.a r0;
        java.util.Map $r4;
        java.lang.StringBuilder $r1;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: n.a.b.a;

        $r2 := @parameter0: java.lang.String;

        if $r2 == null goto label4;

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r4 = r0.<n.a.b.a: java.util.Map b>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

     label2:
        if $r3 == null goto label3;

        return $r3;

     label3:
        $r5 = new repackaged.org.json.JSONException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSONObject[");

        $r2 = staticinvoke <n.a.b.a: java.lang.String c(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label4:
        $r5 = new repackaged.org.json.JSONException;

        specialinvoke $r5.<repackaged.org.json.JSONException: void <init>(java.lang.String)>("Null key.");

        throw $r5;
    }

    public final java.lang.String toString()
    {
        n.a.b.a r0;
        java.lang.String $r1;
        java.lang.Exception $r2;

        r0 := @this: n.a.b.a;

     label1:
        $r1 = virtualinvoke r0.<n.a.b.a: java.lang.String a()>();

     label2:
        return $r1;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }
}
