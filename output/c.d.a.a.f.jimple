public class c.d.a.a.f extends org.apache.http.entity.AbstractHttpEntity implements java.lang.Cloneable
{
    public java.util.List a;
    public c.d.a.a.b b;

    public void <init>()
    {
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        specialinvoke r0.<c.d.a.a.f: void <init>(java.lang.String)>(null);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        c.d.a.a.b $r3;
        c.d.a.a.f r0;
        java.util.ArrayList $r2;

        r0 := @this: c.d.a.a.f;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<c.d.a.a.f: java.util.List a> = $r2;

        $r3 = new c.d.a.a.b;

        specialinvoke $r3.<c.d.a.a.b: void <init>(java.lang.String)>($r1);

        r0.<c.d.a.a.f: c.d.a.a.b b> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data; boundary=\"");

        $r3 = r0.<c.d.a.a.f: c.d.a.a.b b>;

        $r1 = virtualinvoke $r3.<c.d.a.a.b: java.lang.String b()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void setContentType(java.lang.String)>($r1);

        return;
    }

    public java.lang.String a()
    {
        java.lang.String $r1;
        c.d.a.a.b $r2;
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        $r2 = r0.<c.d.a.a.f: c.d.a.a.b b>;

        $r1 = virtualinvoke $r2.<c.d.a.a.b: java.lang.String b()>();

        return $r1;
    }

    public void a(c.d.a.a.i)
    {
        c.d.a.a.i $r1;
        java.util.List $r2;
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        $r1 := @parameter0: c.d.a.a.i;

        $r2 = r0.<c.d.a.a.f: java.util.List a>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.CloneNotSupportedException $r1;
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        $r1 = new java.lang.CloneNotSupportedException;

        specialinvoke $r1.<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>("MultipartEntity does not support cloning");

        throw $r1;
    }

    public java.io.InputStream getContent()
    {
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        return null;
    }

    public long getContentLength()
    {
        byte[] $r6;
        java.util.Iterator $r3;
        long $l0, $l1;
        java.util.List $r2;
        c.d.a.a.i $r5;
        int $i2;
        java.lang.Object $r4;
        c.d.a.a.b $r1;
        c.d.a.a.f r0;
        boolean $z0;

        r0 := @this: c.d.a.a.f;

        $r2 = r0.<c.d.a.a.f: java.util.List a>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        $l0 = 0L;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (c.d.a.a.i) $r4;

        $r1 = r0.<c.d.a.a.f: c.d.a.a.b b>;

        $l1 = interfaceinvoke $r5.<c.d.a.a.i: long a(c.d.a.a.b)>($r1);

        $l0 = $l0 + $l1;

        goto label1;

     label2:
        $r1 = r0.<c.d.a.a.f: c.d.a.a.b b>;

        $r6 = virtualinvoke $r1.<c.d.a.a.b: byte[] c()>();

        $i2 = lengthof $r6;

        $l1 = (long) $i2;

        $l0 = $l0 + $l1;

        return $l0;
    }

    public boolean isRepeatable()
    {
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        return 1;
    }

    public boolean isStreaming()
    {
        c.d.a.a.f r0;

        r0 := @this: c.d.a.a.f;

        return 0;
    }

    public void writeTo(java.io.OutputStream)
    {
        java.io.OutputStream $r2;
        byte[] $r7;
        java.util.Iterator $r4;
        java.lang.IllegalArgumentException $r8;
        java.util.List $r3;
        c.d.a.a.i $r6;
        java.lang.Object $r5;
        c.d.a.a.b $r1;
        c.d.a.a.f r0;
        boolean $z0;

        r0 := @this: c.d.a.a.f;

        $r2 := @parameter0: java.io.OutputStream;

        if $r2 == null goto label3;

        $r3 = r0.<c.d.a.a.f: java.util.List a>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (c.d.a.a.i) $r5;

        $r1 = r0.<c.d.a.a.f: c.d.a.a.b b>;

        interfaceinvoke $r6.<c.d.a.a.i: void a(java.io.OutputStream,c.d.a.a.b)>($r2, $r1);

        goto label1;

     label2:
        $r1 = r0.<c.d.a.a.f: c.d.a.a.b b>;

        $r7 = virtualinvoke $r1.<c.d.a.a.b: byte[] c()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        return;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        goto label4;

     label4:
        throw $r8;
    }
}
