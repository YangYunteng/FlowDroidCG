public class com.google.android.material.shape.ShapePath$LineShadowOperation extends com.google.android.material.shape.ShapePath$ShadowCompatOperation
{
    public final com.google.android.material.shape.ShapePath$PathLineOperation operation;
    public final float startX;
    public final float startY;

    public void <init>(com.google.android.material.shape.ShapePath$PathLineOperation, float, float)
    {
        float $f0, $f1;
        com.google.android.material.shape.ShapePath$PathLineOperation $r1;
        com.google.android.material.shape.ShapePath$LineShadowOperation r0;

        r0 := @this: com.google.android.material.shape.ShapePath$LineShadowOperation;

        $r1 := @parameter0: com.google.android.material.shape.ShapePath$PathLineOperation;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        specialinvoke r0.<com.google.android.material.shape.ShapePath$ShadowCompatOperation: void <init>()>();

        r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: com.google.android.material.shape.ShapePath$PathLineOperation operation> = $r1;

        r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startX> = $f0;

        r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startY> = $f1;

        return;
    }

    public void draw(android.graphics.Matrix, com.google.android.material.shadow.ShadowRenderer, int, android.graphics.Canvas)
    {
        android.graphics.RectF $r5;
        com.google.android.material.shadow.ShadowRenderer $r1;
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r2;
        com.google.android.material.shape.ShapePath$PathLineOperation $r4;
        android.graphics.Matrix $r3, $r6;
        com.google.android.material.shape.ShapePath$LineShadowOperation r0;
        double $d0, $d1;

        r0 := @this: com.google.android.material.shape.ShapePath$LineShadowOperation;

        $r3 := @parameter0: android.graphics.Matrix;

        $r1 := @parameter1: com.google.android.material.shadow.ShadowRenderer;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.graphics.Canvas;

        $r4 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: com.google.android.material.shape.ShapePath$PathLineOperation operation>;

        $f0 = staticinvoke <com.google.android.material.shape.ShapePath$PathLineOperation: float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)>($r4);

        $f1 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startY>;

        $f0 = $f0 - $f1;

        $r4 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: com.google.android.material.shape.ShapePath$PathLineOperation operation>;

        $f1 = staticinvoke <com.google.android.material.shape.ShapePath$PathLineOperation: float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)>($r4);

        $f2 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startX>;

        $f1 = $f1 - $f2;

        $r5 = new android.graphics.RectF;

        $d0 = (double) $f0;

        $d1 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        $f0 = (float) $d0;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, 0.0F);

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r3);

        $f0 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startX>;

        $f1 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startY>;

        virtualinvoke $r6.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        $f0 = virtualinvoke r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float getAngle()>();

        virtualinvoke $r6.<android.graphics.Matrix: boolean preRotate(float)>($f0);

        virtualinvoke $r1.<com.google.android.material.shadow.ShadowRenderer: void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int)>($r2, $r6, $r5, $i0);

        return;
    }

    public float getAngle()
    {
        float $f0, $f1, $f2;
        com.google.android.material.shape.ShapePath$PathLineOperation $r1;
        com.google.android.material.shape.ShapePath$LineShadowOperation r0;
        double $d0;

        r0 := @this: com.google.android.material.shape.ShapePath$LineShadowOperation;

        $r1 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: com.google.android.material.shape.ShapePath$PathLineOperation operation>;

        $f1 = staticinvoke <com.google.android.material.shape.ShapePath$PathLineOperation: float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)>($r1);

        $f0 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startY>;

        $f1 = $f1 - $f0;

        $r1 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: com.google.android.material.shape.ShapePath$PathLineOperation operation>;

        $f2 = staticinvoke <com.google.android.material.shape.ShapePath$PathLineOperation: float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)>($r1);

        $f0 = r0.<com.google.android.material.shape.ShapePath$LineShadowOperation: float startX>;

        $f0 = $f2 - $f0;

        $f1 = $f1 / $f0;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double atan(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f1 = (float) $d0;

        return $f1;
    }
}
