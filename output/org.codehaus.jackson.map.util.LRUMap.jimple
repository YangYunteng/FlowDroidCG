public class org.codehaus.jackson.map.util.LRUMap extends java.util.LinkedHashMap
{
    public final int _maxEntries;

    public void <init>(int, int)
    {
        org.codehaus.jackson.map.util.LRUMap r0;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.map.util.LRUMap;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>($i0, 0.8F, 1);

        r0.<org.codehaus.jackson.map.util.LRUMap: int _maxEntries> = $i1;

        return;
    }

    public boolean removeEldestEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry $r1;
        org.codehaus.jackson.map.util.LRUMap r0;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.map.util.LRUMap;

        $r1 := @parameter0: java.util.Map$Entry;

        $i1 = virtualinvoke r0.<java.util.LinkedHashMap: int size()>();

        $i0 = r0.<org.codehaus.jackson.map.util.LRUMap: int _maxEntries>;

        if $i1 <= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
