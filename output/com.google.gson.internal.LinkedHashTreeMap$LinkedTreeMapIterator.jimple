public abstract class com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator extends java.lang.Object implements java.util.Iterator
{
    public int expectedModCount;
    public com.google.gson.internal.LinkedHashTreeMap$Node lastReturned;
    public com.google.gson.internal.LinkedHashTreeMap$Node next;
    public final com.google.gson.internal.LinkedHashTreeMap this$0;

    public void <init>(com.google.gson.internal.LinkedHashTreeMap)
    {
        com.google.gson.internal.LinkedHashTreeMap $r1;
        com.google.gson.internal.LinkedHashTreeMap$Node $r2;
        int $i0;
        com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator r0;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0>;

        $r2 = $r1.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header>;

        $r2 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node next> = $r2;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node lastReturned> = null;

        $i0 = $r1.<com.google.gson.internal.LinkedHashTreeMap: int modCount>;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: int expectedModCount> = $i0;

        return;
    }

    public final boolean hasNext()
    {
        com.google.gson.internal.LinkedHashTreeMap $r2;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r3;
        com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator r0;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator;

        $r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        $r2 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0>;

        $r3 = $r2.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header>;

        if $r1 == $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final com.google.gson.internal.LinkedHashTreeMap$Node nextNode()
    {
        com.google.gson.internal.LinkedHashTreeMap $r2;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r3;
        int $i0, $i1;
        com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator r0;
        java.util.NoSuchElementException $r5;
        java.util.ConcurrentModificationException $r4;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator;

        $r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        $r2 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0>;

        $r3 = $r2.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header>;

        if $r1 == $r3 goto label2;

        $i0 = $r2.<com.google.gson.internal.LinkedHashTreeMap: int modCount>;

        $i1 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: int expectedModCount>;

        if $i0 != $i1 goto label1;

        $r3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node next> = $r3;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node lastReturned> = $r1;

        return $r1;

     label1:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

     label2:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;
    }

    public final void remove()
    {
        com.google.gson.internal.LinkedHashTreeMap $r1;
        java.lang.IllegalStateException $r3;
        com.google.gson.internal.LinkedHashTreeMap$Node $r2;
        int $i0;
        com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator r0;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator;

        $r2 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node lastReturned>;

        if $r2 == null goto label1;

        $r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0>;

        virtualinvoke $r1.<com.google.gson.internal.LinkedHashTreeMap: void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)>($r2, 1);

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node lastReturned> = null;

        $r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0>;

        $i0 = $r1.<com.google.gson.internal.LinkedHashTreeMap: int modCount>;

        r0.<com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: int expectedModCount> = $i0;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;
    }
}
