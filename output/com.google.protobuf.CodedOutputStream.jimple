public abstract class com.google.protobuf.CodedOutputStream extends com.google.protobuf.ByteOutput
{
    public static final int DEFAULT_BUFFER_SIZE;
    public static final boolean HAS_UNSAFE_ARRAY_OPERATIONS;
    public static final int LITTLE_ENDIAN_32_SIZE;
    public static final java.util.logging.Logger logger;
    public boolean serializationDeterministic;
    public com.google.protobuf.CodedOutputStreamWriter wrapper;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        <com.google.protobuf.CodedOutputStream: int LITTLE_ENDIAN_32_SIZE> = 4;

        <com.google.protobuf.CodedOutputStream: int DEFAULT_BUFFER_SIZE> = 4096;

        $r0 = class "Lcom/google/protobuf/CodedOutputStream;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.protobuf.CodedOutputStream: java.util.logging.Logger logger> = $r2;

        $z0 = staticinvoke <com.google.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()>();

        <com.google.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS> = $z0;

        return;
    }

    public void <init>()
    {
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        specialinvoke r0.<com.google.protobuf.ByteOutput: void <init>()>();

        return;
    }

    public void <init>(com.google.protobuf.CodedOutputStream$1)
    {
        com.google.protobuf.CodedOutputStream r0;
        com.google.protobuf.CodedOutputStream$1 $r1;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.CodedOutputStream$1;

        specialinvoke r0.<com.google.protobuf.CodedOutputStream: void <init>()>();

        return;
    }

    public static boolean access$100()
    {
        boolean z0;

        z0 = <com.google.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        return z0;
    }

    public static int computeBoolSize(int, boolean)
    {
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)>($z0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeByteArraySize(int, byte[])
    {
        int $i0, $i1;
        byte[] $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeByteArraySizeNoTag(byte[])>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeByteArraySizeNoTag(byte[])
    {
        int $i0;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeByteBufferSize(int, java.nio.ByteBuffer)
    {
        int $i0, $i1;
        java.nio.ByteBuffer $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.nio.ByteBuffer;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeByteBufferSizeNoTag(java.nio.ByteBuffer)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeByteBufferSizeNoTag(java.nio.ByteBuffer)
    {
        int $i0;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int capacity()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeBytesSize(int, com.google.protobuf.ByteString)
    {
        int $i0, $i1;
        com.google.protobuf.ByteString $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.ByteString;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.google.protobuf.ByteString)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeBytesSizeNoTag(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString $r0;
        int $i0;

        $r0 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeDoubleSize(int, double)
    {
        int $i0, $i1;
        double $d0;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)>($d0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double $d0;

        $d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeFixed32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int $i0, $i1;
        float $f0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)>($f0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float $f0;

        $f0 := @parameter0: float;

        return 4;
    }

    public static int computeGroupSize(int, com.google.protobuf.MessageLite)
    {
        int $i0, $i1;
        com.google.protobuf.MessageLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.MessageLite;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i0 = $i0 * 2;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.google.protobuf.MessageLite)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeGroupSize(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r0 := @parameter2: com.google.protobuf.Schema;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i0 = $i0 * 2;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r1, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeGroupSizeNoTag(com.google.protobuf.MessageLite)
    {
        int $i0;
        com.google.protobuf.MessageLite $r0;

        $r0 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r0.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        return $i0;
    }

    public static int computeGroupSizeNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r0;
        int $i0;
        com.google.protobuf.AbstractMessageLite $r2;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r0 := @parameter1: com.google.protobuf.Schema;

        $r2 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r2.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r0);

        return $i0;
    }

    public static int computeInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeInt64SizeNoTag(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        return $i0;
    }

    public static int computeLazyFieldMessageSetExtensionSize(int, com.google.protobuf.LazyFieldLite)
    {
        int $i0, $i1;
        com.google.protobuf.LazyFieldLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.LazyFieldLite;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 * 2;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLazyFieldSize(int,com.google.protobuf.LazyFieldLite)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeLazyFieldSize(int, com.google.protobuf.LazyFieldLite)
    {
        int $i0, $i1;
        com.google.protobuf.LazyFieldLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.LazyFieldLite;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLazyFieldSizeNoTag(com.google.protobuf.LazyFieldLite)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeLazyFieldSizeNoTag(com.google.protobuf.LazyFieldLite)
    {
        int $i0;
        com.google.protobuf.LazyFieldLite $r0;

        $r0 := @parameter0: com.google.protobuf.LazyFieldLite;

        $i0 = virtualinvoke $r0.<com.google.protobuf.LazyFieldLite: int getSerializedSize()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeLengthDelimitedFieldSize(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static int computeMessageSetExtensionSize(int, com.google.protobuf.MessageLite)
    {
        int $i0, $i1;
        com.google.protobuf.MessageLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.MessageLite;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 * 2;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeMessageSize(int, com.google.protobuf.MessageLite)
    {
        int $i0, $i1;
        com.google.protobuf.MessageLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.MessageLite;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeMessageSize(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r0 := @parameter2: com.google.protobuf.Schema;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r1, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeMessageSizeNoTag(com.google.protobuf.MessageLite)
    {
        int $i0;
        com.google.protobuf.MessageLite $r0;

        $r0 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r0.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeMessageSizeNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r0;
        int $i0;
        com.google.protobuf.AbstractMessageLite $r2;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r0 := @parameter1: com.google.protobuf.Schema;

        $r2 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r2.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r0);

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computePreferredBufferSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 <= 4096 goto label1;

        return 4096;

     label1:
        return $i0;
    }

    public static int computeRawMessageSetExtensionSize(int, com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString $r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.ByteString;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 * 2;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeRawVarint32Size(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeRawVarint64Size(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        return $i0;
    }

    public static int computeSFixed32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)>($i0);

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeSInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        int $i1;
        long $l0;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)>($l0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l0);

        return $i1;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        byte[] $r3;
        java.nio.charset.Charset $r0;
        int $i0;
        java.lang.String $r2;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r1;

        $r2 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <com.google.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>($r2);

     label2:
        goto label4;

     label3:
        $r0 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r0);

        $i0 = lengthof $r3;

     label4:
        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label1 to label2 with label5;
    }

    public static int computeTagSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i0, 0);

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeUInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i1 = -16384;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label2;

        return 2;

     label2:
        $i1 = -2097152 & $i0;

        if $i1 != 0 goto label3;

        return 3;

     label3:
        $i0 = $i0 & -268435456;

        if $i0 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeUInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        byte $b2;
        int $i3;
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = -128L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        return 10;

     label2:
        $l1 = -34359738368L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $i3 = 6;

        $l0 = $l0 >>> 28;

        goto label4;

     label3:
        $i3 = 2;

     label4:
        $l1 = -2097152L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        $i3 = $i3 + 2;

        $l0 = $l0 >>> 14;

     label5:
        $l0 = $l0 & -16384L;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label6;

        $i3 = $i3 + 1;

     label6:
        return $i3;
    }

    public static int encodeZigZag32(int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 = $i1 << 1;

        $i1 = $i1 >> 31;

        $i1 = $i1 ^ $i0;

        return $i1;
    }

    public static long encodeZigZag64(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 << 1;

        $l0 = $l0 >> 63;

        $l0 = $l0 ^ $l1;

        return $l0;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(com.google.protobuf.ByteOutput, int)
    {
        int $i0;
        com.google.protobuf.ByteOutput $r1;
        java.lang.IllegalArgumentException $r2;
        com.google.protobuf.CodedOutputStream$ByteOutputEncoder $r0;

        $r1 := @parameter0: com.google.protobuf.ByteOutput;

        $i0 := @parameter1: int;

        if $i0 < 0 goto label1;

        $r0 = new com.google.protobuf.CodedOutputStream$ByteOutputEncoder;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$ByteOutputEncoder: void <init>(com.google.protobuf.ByteOutput,int)>($r1, $i0);

        return $r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be positive");

        throw $r2;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        com.google.protobuf.CodedOutputStream $r0;

        $r1 := @parameter0: java.io.OutputStream;

        $r0 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>($r1, 4096);

        return $r0;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream $r0;
        int $i0;
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r1;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $r1 = new com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void <init>(java.io.OutputStream,int)>($r0, $i0);

        return $r1;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$HeapNioEncoder $r1;
        java.lang.IllegalArgumentException $r3;
        java.nio.ByteBuffer $r0;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke $r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        $r1 = new com.google.protobuf.CodedOutputStream$HeapNioEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$HeapNioEncoder: void <init>(java.nio.ByteBuffer)>($r0);

        return $r1;

     label1:
        $z0 = virtualinvoke $r0.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r0.<java.nio.ByteBuffer: boolean isReadOnly()>();

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <com.google.protobuf.CodedOutputStream$UnsafeDirectNioEncoder: boolean isSupported()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newUnsafeInstance(java.nio.ByteBuffer)>($r0);

        return $r2;

     label2:
        $r2 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newSafeInstance(java.nio.ByteBuffer)>($r0);

        return $r2;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ByteBuffer is read-only");

        throw $r3;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer, int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStream $r0;
        java.nio.ByteBuffer $r1;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $i0 := @parameter1: int;

        $r0 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer)>($r1);

        return $r0;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(byte[])
    {
        int $i0;
        byte[] $r1;
        com.google.protobuf.CodedOutputStream $r0;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r0 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[],int,int)>($r1, 0, $i0);

        return $r0;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(byte[], int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r1;
        byte[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new com.google.protobuf.CodedOutputStream$ArrayEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public static com.google.protobuf.CodedOutputStream newSafeInstance(java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$SafeDirectNioEncoder $r1;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = new com.google.protobuf.CodedOutputStream$SafeDirectNioEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$SafeDirectNioEncoder: void <init>(java.nio.ByteBuffer)>($r0);

        return $r1;
    }

    public static com.google.protobuf.CodedOutputStream newUnsafeInstance(java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$UnsafeDirectNioEncoder $r1;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = new com.google.protobuf.CodedOutputStream$UnsafeDirectNioEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$UnsafeDirectNioEncoder: void <init>(java.nio.ByteBuffer)>($r0);

        return $r1;
    }

    public final void checkNoSpaceLeft()
    {
        int $i0;
        java.lang.IllegalStateException $r1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 = virtualinvoke r0.<com.google.protobuf.CodedOutputStream: int spaceLeft()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

    public abstract void flush();

    public abstract int getTotalBytesWritten();

    public final void inefficientWriteStringNoTag(java.lang.String, com.google.protobuf.Utf8$UnpairedSurrogateException)
    {
        byte[] $r2;
        java.lang.IndexOutOfBoundsException $r8;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r4;
        java.util.logging.Logger $r5;
        java.util.logging.Level $r1;
        java.nio.charset.Charset $r6;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r7;
        int $i0;
        java.lang.String $r3;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: com.google.protobuf.Utf8$UnpairedSurrogateException;

        $r5 = <com.google.protobuf.CodedOutputStream: java.util.logging.Logger logger>;

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r1, "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", $r4);

        $r6 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        $i0 = lengthof $r2;

     label1:
        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

     label2:
        $i0 = lengthof $r2;

     label3:
        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>($r2, 0, $i0);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r7 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r7.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label6;
        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label6;
        catch com.google.protobuf.CodedOutputStream$OutOfSpaceException from label1 to label2 with label5;
        catch com.google.protobuf.CodedOutputStream$OutOfSpaceException from label3 to label4 with label5;
    }

    public boolean isSerializationDeterministic()
    {
        com.google.protobuf.CodedOutputStream r0;
        boolean z0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        z0 = r0.<com.google.protobuf.CodedOutputStream: boolean serializationDeterministic>;

        return z0;
    }

    public abstract int spaceLeft();

    public void useDeterministicSerialization()
    {
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        r0.<com.google.protobuf.CodedOutputStream: boolean serializationDeterministic> = 1;

        return;
    }

    public abstract void write(byte);

    public abstract void write(java.nio.ByteBuffer);

    public abstract void write(byte[], int, int);

    public abstract void writeBool(int, boolean);

    public final void writeBoolNoTag(boolean)
    {
        byte $b0;
        com.google.protobuf.CodedOutputStream r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $z0 := @parameter0: boolean;

        $b0 = (byte) $z0;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void write(byte)>($b0);

        return;
    }

    public abstract void writeByteArray(int, byte[]);

    public abstract void writeByteArray(int, byte[], int, int);

    public final void writeByteArrayNoTag(byte[])
    {
        int $i0;
        byte[] $r1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public abstract void writeByteArrayNoTag(byte[], int, int);

    public abstract void writeByteBuffer(int, java.nio.ByteBuffer);

    public abstract void writeBytes(int, com.google.protobuf.ByteString);

    public abstract void writeBytesNoTag(com.google.protobuf.ByteString);

    public final void writeDouble(int, double)
    {
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream r0;
        double $d0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>($i0, $l1);

        return;
    }

    public final void writeDoubleNoTag(double)
    {
        long $l0;
        com.google.protobuf.CodedOutputStream r0;
        double $d0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeEnum(int, int)
    {
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>($i0, $i1);

        return;
    }

    public final void writeEnumNoTag(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>($i0);

        return;
    }

    public abstract void writeFixed32(int, int);

    public abstract void writeFixed32NoTag(int);

    public abstract void writeFixed64(int, long);

    public abstract void writeFixed64NoTag(long);

    public final void writeFloat(int, float)
    {
        int $i0, $i1;
        float $f0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>($i0, $i1);

        return;
    }

    public final void writeFloatNoTag(float)
    {
        int $i0;
        float $f0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeGroup(int, com.google.protobuf.MessageLite)
    {
        int $i0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 3);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite)>($r1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 4);

        return;
    }

    public final void writeGroup(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r2;
        com.google.protobuf.Schema $r1;
        int $i0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $r2 := @parameter1: com.google.protobuf.MessageLite;

        $r1 := @parameter2: com.google.protobuf.Schema;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 3);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r2, $r1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 4);

        return;
    }

    public final void writeGroupNoTag(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        interfaceinvoke $r1.<com.google.protobuf.MessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>(r0);

        return;
    }

    public final void writeGroupNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.CodedOutputStreamWriter $r3;
        com.google.protobuf.Schema $r2;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 := @parameter1: com.google.protobuf.Schema;

        $r3 = r0.<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke $r2.<com.google.protobuf.Schema: void writeTo(java.lang.Object,com.google.protobuf.Writer)>($r1, $r3);

        return;
    }

    public abstract void writeInt32(int, int);

    public abstract void writeInt32NoTag(int);

    public final void writeInt64(int, long)
    {
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>($i0, $l1);

        return;
    }

    public final void writeInt64NoTag(long)
    {
        long $l0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l0);

        return;
    }

    public abstract void writeLazy(java.nio.ByteBuffer);

    public abstract void writeLazy(byte[], int, int);

    public abstract void writeMessage(int, com.google.protobuf.MessageLite);

    public abstract void writeMessage(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema);

    public abstract void writeMessageNoTag(com.google.protobuf.MessageLite);

    public abstract void writeMessageNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema);

    public abstract void writeMessageSetExtension(int, com.google.protobuf.MessageLite);

    public final void writeRawByte(byte)
    {
        byte $b0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $b0 := @parameter0: byte;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void write(byte)>($b0);

        return;
    }

    public final void writeRawByte(int)
    {
        int $i0;
        byte $b1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $b1 = (byte) $i0;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void write(byte)>($b1);

        return;
    }

    public final void writeRawBytes(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString $r1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        virtualinvoke $r1.<com.google.protobuf.ByteString: void writeTo(com.google.protobuf.ByteOutput)>(r0);

        return;
    }

    public abstract void writeRawBytes(java.nio.ByteBuffer);

    public final void writeRawBytes(byte[])
    {
        int $i0;
        byte[] $r1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public final void writeRawBytes(byte[], int, int)
    {
        byte[] $r1;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final void writeRawLittleEndian32(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeRawLittleEndian64(long)
    {
        long $l0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public abstract void writeRawMessageSetExtension(int, com.google.protobuf.ByteString);

    public final void writeRawVarint32(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        return;
    }

    public final void writeRawVarint64(long)
    {
        long $l0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l0);

        return;
    }

    public final void writeSFixed32(int, int)
    {
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>($i0, $i1);

        return;
    }

    public final void writeSFixed32NoTag(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeSFixed64(int, long)
    {
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>($i0, $l1);

        return;
    }

    public final void writeSFixed64NoTag(long)
    {
        long $l0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeSInt32(int, int)
    {
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)>($i1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>($i0, $i1);

        return;
    }

    public final void writeSInt32NoTag(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)>($i0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        return;
    }

    public final void writeSInt64(int, long)
    {
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l1 = staticinvoke <com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)>($l1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>($i0, $l1);

        return;
    }

    public final void writeSInt64NoTag(long)
    {
        long $l0;
        com.google.protobuf.CodedOutputStream r0;

        r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)>($l0);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l0);

        return;
    }

    public abstract void writeString(int, java.lang.String);

    public abstract void writeStringNoTag(java.lang.String);

    public abstract void writeTag(int, int);

    public abstract void writeUInt32(int, int);

    public abstract void writeUInt32NoTag(int);

    public abstract void writeUInt64(int, long);

    public abstract void writeUInt64NoTag(long);
}
