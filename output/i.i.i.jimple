public class i.i.i extends i.i.g
{

    public static final i.i.b a(i.i.b, i.f.a.l)
    {
        i.f.a.l $r1;
        i.i.b $r0;
        i.i.k $r2;

        $r0 := @parameter0: i.i.b;

        $r1 := @parameter1: i.f.a.l;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$map");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "transform");

        $r2 = new i.i.k;

        specialinvoke $r2.<i.i.k: void <init>(i.i.b,i.f.a.l)>($r0, $r1);

        return $r2;
    }

    public static final java.util.Collection a(i.i.b, java.util.Collection)
    {
        java.util.Iterator $r2;
        i.i.b $r1;
        java.util.Collection $r0;
        java.lang.Object $r3;
        boolean $z0;

        $r1 := @parameter0: i.i.b;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "$this$toCollection");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "destination");

        $r2 = interfaceinvoke $r1.<i.i.b: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.lang.Iterable b(i.i.b)
    {
        i.i.h $r1;
        i.i.b $r0;

        $r0 := @parameter0: i.i.b;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$asIterable");

        $r1 = new i.i.h;

        specialinvoke $r1.<i.i.h: void <init>(i.i.b)>($r0);

        return $r1;
    }

    public static final java.util.List c(i.i.b)
    {
        java.util.List $r1;
        i.i.b $r0;

        $r0 := @parameter0: i.i.b;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toList");

        $r1 = staticinvoke <i.i.i: java.util.List d(i.i.b)>($r0);

        $r1 = staticinvoke <i.a.h: java.util.List b(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List d(i.i.b)
    {
        java.util.List $r2;
        i.i.b $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: i.i.b;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toMutableList");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        staticinvoke <i.i.i: java.util.Collection a(i.i.b,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.List) $r1;

        return $r2;
    }
}
