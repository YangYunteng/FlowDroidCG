public final class com.google.common.util.concurrent.Futures$2 extends java.lang.Object implements java.util.concurrent.Future
{
    public final com.google.common.base.Function val$function;
    public final java.util.concurrent.Future val$input;

    public void <init>(java.util.concurrent.Future, com.google.common.base.Function)
    {
        com.google.common.util.concurrent.Futures$2 r0;
        java.util.concurrent.Future $r1;
        com.google.common.base.Function $r2;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $r1 := @parameter0: java.util.concurrent.Future;

        $r2 := @parameter1: com.google.common.base.Function;

        r0.<com.google.common.util.concurrent.Futures$2: java.util.concurrent.Future val$input> = $r1;

        r0.<com.google.common.util.concurrent.Futures$2: com.google.common.base.Function val$function> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.Object applyTransformation(java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.util.concurrent.ExecutionException $r4;
        com.google.common.util.concurrent.Futures$2 r0;
        com.google.common.base.Function $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = r0.<com.google.common.util.concurrent.Futures$2: com.google.common.base.Function val$function>;

        $r1 = interfaceinvoke $r2.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r1);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.util.concurrent.ExecutionException;

        specialinvoke $r4.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean cancel(boolean)
    {
        com.google.common.util.concurrent.Futures$2 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.common.util.concurrent.Futures$2: java.util.concurrent.Future val$input>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>($z0);

        return $z0;
    }

    public java.lang.Object get()
    {
        com.google.common.util.concurrent.Futures$2 r0;
        java.util.concurrent.Future $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $r1 = r0.<com.google.common.util.concurrent.Futures$2: java.util.concurrent.Future val$input>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.Future: java.lang.Object get()>();

        $r2 = specialinvoke r0.<com.google.common.util.concurrent.Futures$2: java.lang.Object applyTransformation(java.lang.Object)>($r2);

        return $r2;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.Futures$2 r0;
        java.util.concurrent.Future $r2;
        long $l0;
        java.lang.Object $r3;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.Futures$2: java.util.concurrent.Future val$input>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        $r3 = specialinvoke r0.<com.google.common.util.concurrent.Futures$2: java.lang.Object applyTransformation(java.lang.Object)>($r3);

        return $r3;
    }

    public boolean isCancelled()
    {
        com.google.common.util.concurrent.Futures$2 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $r1 = r0.<com.google.common.util.concurrent.Futures$2: java.util.concurrent.Future val$input>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        com.google.common.util.concurrent.Futures$2 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$2;

        $r1 = r0.<com.google.common.util.concurrent.Futures$2: java.util.concurrent.Future val$input>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isDone()>();

        return $z0;
    }
}
