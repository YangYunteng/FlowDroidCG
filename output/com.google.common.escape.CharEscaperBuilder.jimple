public final class com.google.common.escape.CharEscaperBuilder extends java.lang.Object
{
    public final java.util.Map map;
    public int max;

    public void <init>()
    {
        com.google.common.escape.CharEscaperBuilder r0;
        int $i0;
        java.util.HashMap $r1;

        r0 := @this: com.google.common.escape.CharEscaperBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<com.google.common.escape.CharEscaperBuilder: int max> = $i0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.google.common.escape.CharEscaperBuilder: java.util.Map map> = $r1;

        return;
    }

    public com.google.common.escape.CharEscaperBuilder addEscape(char, java.lang.String)
    {
        java.lang.Character $r2;
        java.util.Map $r1;
        com.google.common.escape.CharEscaperBuilder r0;
        int $i1, $i2;
        char $c0;
        java.lang.String $r3;

        r0 := @this: com.google.common.escape.CharEscaperBuilder;

        $c0 := @parameter0: char;

        $r3 := @parameter1: java.lang.String;

        $r1 = r0.<com.google.common.escape.CharEscaperBuilder: java.util.Map map>;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = r0.<com.google.common.escape.CharEscaperBuilder: int max>;

        $i2 = (int) $c0;

        if $i2 <= $i1 goto label1;

        $i1 = (int) $c0;

        r0.<com.google.common.escape.CharEscaperBuilder: int max> = $i1;

     label1:
        return r0;
    }

    public com.google.common.escape.CharEscaperBuilder addEscapes(char[], java.lang.String)
    {
        com.google.common.escape.CharEscaperBuilder r0;
        int $i0, $i2;
        char[] $r1;
        char $c1;
        java.lang.String $r2;

        r0 := @this: com.google.common.escape.CharEscaperBuilder;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $c1 = $r1[$i2];

        virtualinvoke r0.<com.google.common.escape.CharEscaperBuilder: com.google.common.escape.CharEscaperBuilder addEscape(char,java.lang.String)>($c1, $r2);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    public char[][] toArray()
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.google.common.escape.CharEscaperBuilder r0;
        java.util.Set $r3;
        char $c1;
        char[][] $r1;
        java.lang.Character $r7;
        java.util.Map $r2;
        int $i0;
        char[] $r9;
        java.lang.Object $r5;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: com.google.common.escape.CharEscaperBuilder;

        $i0 = r0.<com.google.common.escape.CharEscaperBuilder: int max>;

        $i0 = $i0 + 1;

        $r1 = newarray (char[])[$i0];

        $r2 = r0.<com.google.common.escape.CharEscaperBuilder: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.Character) $r5;

        $c1 = virtualinvoke $r7.<java.lang.Character: char charValue()>();

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.String) $r5;

        $r9 = virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

        $i0 = (int) $c1;

        $r1[$i0] = $r9;

        goto label1;

     label2:
        return $r1;
    }

    public com.google.common.escape.Escaper toEscaper()
    {
        com.google.common.escape.CharEscaperBuilder r0;
        com.google.common.escape.CharEscaperBuilder$CharArrayDecorator $r1;
        char[][] $r2;

        r0 := @this: com.google.common.escape.CharEscaperBuilder;

        $r1 = new com.google.common.escape.CharEscaperBuilder$CharArrayDecorator;

        $r2 = virtualinvoke r0.<com.google.common.escape.CharEscaperBuilder: char[][] toArray()>();

        specialinvoke $r1.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: void <init>(char[][])>($r2);

        return $r1;
    }
}
