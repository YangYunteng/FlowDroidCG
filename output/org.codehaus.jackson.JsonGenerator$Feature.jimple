public final enum class org.codehaus.jackson.JsonGenerator$Feature extends java.lang.Enum
{
    public static final org.codehaus.jackson.JsonGenerator$Feature[] $VALUES;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS;
    public static final enum org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS;
    public final boolean _defaultState;
    public final int _mask;

    static void <clinit>()
    {
        org.codehaus.jackson.JsonGenerator$Feature $r0;
        org.codehaus.jackson.JsonGenerator$Feature[] $r1;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_CLOSE_TARGET", 0, 1);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET> = $r0;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_CLOSE_JSON_CONTENT", 1, 1);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT> = $r0;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("QUOTE_FIELD_NAMES", 2, 1);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES> = $r0;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("QUOTE_NON_NUMERIC_NUMBERS", 3, 1);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS> = $r0;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_NUMBERS_AS_STRINGS", 4, 0);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS> = $r0;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("FLUSH_PASSED_TO_STREAM", 5, 1);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM> = $r0;

        $r0 = new org.codehaus.jackson.JsonGenerator$Feature;

        specialinvoke $r0.<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>("ESCAPE_NON_ASCII", 6, 0);

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII> = $r0;

        $r1 = newarray (org.codehaus.jackson.JsonGenerator$Feature)[7];

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;

        $r1[1] = $r0;

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $r1[2] = $r0;

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $r1[3] = $r0;

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;

        $r1[4] = $r0;

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;

        $r1[5] = $r0;

        $r0 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII>;

        $r1[6] = $r0;

        <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int, boolean)
    {
        org.codehaus.jackson.JsonGenerator$Feature r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.JsonGenerator$Feature;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.codehaus.jackson.JsonGenerator$Feature: boolean _defaultState> = $z0;

        $i0 = virtualinvoke r0.<java.lang.Enum: int ordinal()>();

        $i0 = 1 << $i0;

        r0.<org.codehaus.jackson.JsonGenerator$Feature: int _mask> = $i0;

        return;
    }

    public static int collectDefaults()
    {
        org.codehaus.jackson.JsonGenerator$Feature $r1;
        int $i0, $i1, $i2, $i3;
        org.codehaus.jackson.JsonGenerator$Feature[] $r0;
        boolean $z0;

        $r0 = staticinvoke <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature[] values()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator$Feature: boolean enabledByDefault()>();

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator$Feature: int getMask()>();

        $i2 = $i2 | $i3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    public static org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String)
    {
        org.codehaus.jackson.JsonGenerator$Feature $r2;
        java.lang.String $r1;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/JsonGenerator$Feature;", $r1);

        $r2 = (org.codehaus.jackson.JsonGenerator$Feature) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.JsonGenerator$Feature[] values()
    {
        java.lang.Object $r0;
        org.codehaus.jackson.JsonGenerator$Feature[] $r1;

        $r1 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.JsonGenerator$Feature[]) $r0;

        return $r1;
    }

    public boolean enabledByDefault()
    {
        org.codehaus.jackson.JsonGenerator$Feature r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.JsonGenerator$Feature;

        z0 = r0.<org.codehaus.jackson.JsonGenerator$Feature: boolean _defaultState>;

        return z0;
    }

    public int getMask()
    {
        int i0;
        org.codehaus.jackson.JsonGenerator$Feature r0;

        r0 := @this: org.codehaus.jackson.JsonGenerator$Feature;

        i0 = r0.<org.codehaus.jackson.JsonGenerator$Feature: int _mask>;

        return i0;
    }
}
