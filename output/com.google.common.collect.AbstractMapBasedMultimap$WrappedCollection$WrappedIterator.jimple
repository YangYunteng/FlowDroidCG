public class com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator extends java.lang.Object implements java.util.Iterator
{
    public final java.util.Iterator delegateIterator;
    public final java.util.Collection originalDelegate;
    public final com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)
    {
        java.util.Iterator $r1;
        java.util.Collection $r4;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r2, $r3;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        $r2 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1>;

        $r4 = $r3.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection delegate>;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Collection originalDelegate> = $r4;

        $r4 = $r2.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection delegate>;

        $r1 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator access$100(java.util.Collection)>($r4);

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator> = $r1;

        return;
    }

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection, java.util.Iterator)
    {
        java.util.Iterator $r1;
        java.util.Collection $r3;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        $r2 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        $r1 := @parameter1: java.util.Iterator;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1>;

        $r3 = $r2.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection delegate>;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Collection originalDelegate> = $r3;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator> = $r1;

        return;
    }

    public java.util.Iterator getDelegateIterator()
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        java.util.Iterator r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: void validateIterator()>();

        r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        return r1;
    }

    public boolean hasNext()
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: void validateIterator()>();

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object $r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        java.util.Iterator $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: void validateIterator()>();

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        $r1 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        return $r1;
    }

    public void remove()
    {
        com.google.common.collect.AbstractMapBasedMultimap $r3;
        java.util.Iterator $r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1>;

        $r3 = $r2.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$210(com.google.common.collect.AbstractMapBasedMultimap)>($r3);

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1>;

        virtualinvoke $r2.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void removeIfEmpty()>();

        return;
    }

    public void validateIterator()
    {
        java.util.Collection $r1, $r3;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r2;
        java.util.ConcurrentModificationException $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1>;

        virtualinvoke $r2.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1>;

        $r3 = $r2.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection delegate>;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.util.Collection originalDelegate>;

        if $r3 != $r1 goto label1;

        return;

     label1:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;
    }
}
