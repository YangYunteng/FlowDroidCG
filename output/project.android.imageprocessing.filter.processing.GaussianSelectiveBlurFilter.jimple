public class project.android.imageprocessing.filter.processing.GaussianSelectiveBlurFilter extends project.android.imageprocessing.filter.processing.GaussianBlurPositionFilter
{

    public void <init>(float, float, android.graphics.PointF, float, float)
    {
        project.android.imageprocessing.filter.processing.GaussianSelectiveBlurFilter r0;
        android.graphics.PointF $r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: project.android.imageprocessing.filter.processing.GaussianSelectiveBlurFilter;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: android.graphics.PointF;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        specialinvoke r0.<project.android.imageprocessing.filter.processing.GaussianBlurPositionFilter: void <init>(float,float,android.graphics.PointF,float,float)>($f0, $f1, $r1, $f2, $f3);

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.processing.GaussianSelectiveBlurFilter r0;

        r0 := @this: project.android.imageprocessing.filter.processing.GaussianSelectiveBlurFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nuniform sampler2D u_Texture1;\nvarying vec2 v_TexCoord;\nuniform float u_BlurSize;\nuniform float u_AspectRatio;\nuniform vec2 u_ExcludeCirclePoint;\nuniform float u_ExcludeCircleRadius;\nvoid main(){\n   vec4 sharpImageColor = texture2D(u_Texture0, v_TexCoord);\n   vec4 blurredImageColor = texture2D(u_Texture1, v_TexCoord);\n   vec2 texCoordAfterAspect = vec2(v_TexCoord.x, v_TexCoord.y * u_AspectRatio + 0.5 - 0.5 * u_AspectRatio);\n   float distanceFromCenter = distance(u_ExcludeCirclePoint, texCoordAfterAspect);\n   gl_FragColor = mix(sharpImageColor, blurredImageColor, smoothstep(u_ExcludeCircleRadius - u_BlurSize, u_ExcludeCircleRadius, distanceFromCenter));\n}\n";
    }
}
