public class android.support.v4.media.session.MediaSessionCompat extends java.lang.Object
{
    public static final java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED;
    public static final java.lang.String ACTION_ARGUMENT_EXTRAS;
    public static final java.lang.String ACTION_ARGUMENT_MEDIA_ID;
    public static final java.lang.String ACTION_ARGUMENT_QUERY;
    public static final java.lang.String ACTION_ARGUMENT_RATING;
    public static final java.lang.String ACTION_ARGUMENT_REPEAT_MODE;
    public static final java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE;
    public static final java.lang.String ACTION_ARGUMENT_URI;
    public static final java.lang.String ACTION_FLAG_AS_INAPPROPRIATE;
    public static final java.lang.String ACTION_FOLLOW;
    public static final java.lang.String ACTION_PLAY_FROM_URI;
    public static final java.lang.String ACTION_PREPARE;
    public static final java.lang.String ACTION_PREPARE_FROM_MEDIA_ID;
    public static final java.lang.String ACTION_PREPARE_FROM_SEARCH;
    public static final java.lang.String ACTION_PREPARE_FROM_URI;
    public static final java.lang.String ACTION_SET_CAPTIONING_ENABLED;
    public static final java.lang.String ACTION_SET_RATING;
    public static final java.lang.String ACTION_SET_REPEAT_MODE;
    public static final java.lang.String ACTION_SET_SHUFFLE_MODE;
    public static final java.lang.String ACTION_SKIP_AD;
    public static final java.lang.String ACTION_UNFOLLOW;
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE;
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE;
    public static final java.lang.String DATA_CALLING_PACKAGE;
    public static final java.lang.String DATA_CALLING_PID;
    public static final java.lang.String DATA_CALLING_UID;
    public static final java.lang.String DATA_EXTRAS;
    public static final int FLAG_HANDLES_MEDIA_BUTTONS;
    public static final int FLAG_HANDLES_QUEUE_COMMANDS;
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS;
    public static final java.lang.String KEY_EXTRA_BINDER;
    public static final java.lang.String KEY_SESSION_TOKEN2_BUNDLE;
    public static final java.lang.String KEY_TOKEN;
    public static final int MAX_BITMAP_SIZE_IN_DP;
    public static final int MEDIA_ATTRIBUTE_ALBUM;
    public static final int MEDIA_ATTRIBUTE_ARTIST;
    public static final int MEDIA_ATTRIBUTE_PLAYLIST;
    public static final java.lang.String TAG;
    public static int sMaxBitmapSize;
    public final java.util.ArrayList mActiveListeners;
    public final android.support.v4.media.session.MediaControllerCompat mController;
    public final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl;

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    {
        android.content.Context $r1;
        android.support.v4.media.session.MediaSessionCompat r0;
        java.util.ArrayList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;
        android.support.v4.media.session.MediaSessionCompat$3 $r5;
        int $i0;
        java.lang.Object $r4;
        android.support.v4.media.session.MediaControllerCompat $r6;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners> = $r3;

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r4 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.Object getMediaSession()>();

        $z0 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi21: boolean hasCallback(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new android.support.v4.media.session.MediaSessionCompat$3;

        specialinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$3: void <init>(android.support.v4.media.session.MediaSessionCompat)>(r0);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)>($r5);

     label1:
        $r6 = new android.support.v4.media.session.MediaControllerCompat;

        specialinvoke $r6.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat)>($r1, r0);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat mController> = $r6;

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.String $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)>($r1, $r2, null, null);

        return;
    }

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.content.Context $r1;
        android.content.ComponentName $r3;
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.String $r2;
        android.app.PendingIntent $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.ComponentName;

        $r4 := @parameter3: android.app.PendingIntent;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)>($r1, $r2, $r3, $r4, null);

        return;
    }

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 $r12;
        android.content.Context $r1;
        android.os.Bundle $r5;
        android.content.Intent $r8;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.app.PendingIntent $r4;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r16;
        java.util.ArrayList $r6;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r11;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28 $r9;
        java.lang.String $r2;
        boolean $z0;
        android.content.ComponentName $r3, $r7;
        java.lang.IllegalArgumentException $r20;
        android.util.DisplayMetrics $r19;
        android.support.v4.media.session.MediaSessionCompat$1 $r10;
        android.support.v4.media.session.MediaSessionCompat$2 $r13;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18 $r15;
        float $f0;
        android.support.v4.media.session.MediaControllerCompat $r17;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19 $r14;
        android.content.res.Resources $r18;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.ComponentName;

        $r4 := @parameter3: android.app.PendingIntent;

        $r5 := @parameter4: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners> = $r6;

        if $r1 == null goto label09;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label08;

        if $r3 != null goto label01;

        $r7 = staticinvoke <androidx.media.session.MediaButtonReceiver: android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context)>($r1);

        $r3 = $r7;

        if $r7 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionCompat", "Couldn\'t find a unique registered media button receiver in the given context.");

     label01:
        if $r3 == null goto label02;

        if $r4 != null goto label02;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MEDIA_BUTTON");

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r3);

        $r4 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r1, 0, $r8, 0);

     label02:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label03;

        $r9 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28;

        specialinvoke $r9.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28: void <init>(android.content.Context,java.lang.String,android.os.Bundle)>($r1, $r2, $r5);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r9;

        $r10 = new android.support.v4.media.session.MediaSessionCompat$1;

        specialinvoke $r10.<android.support.v4.media.session.MediaSessionCompat$1: void <init>(android.support.v4.media.session.MediaSessionCompat)>(r0);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)>($r10);

        $r11 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r11.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMediaButtonReceiver(android.app.PendingIntent)>($r4);

        goto label07;

     label03:
        if $i0 < 21 goto label04;

        $r12 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21;

        specialinvoke $r12.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21: void <init>(android.content.Context,java.lang.String,android.os.Bundle)>($r1, $r2, $r5);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r12;

        $r13 = new android.support.v4.media.session.MediaSessionCompat$2;

        specialinvoke $r13.<android.support.v4.media.session.MediaSessionCompat$2: void <init>(android.support.v4.media.session.MediaSessionCompat)>(r0);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)>($r13);

        $r11 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r11.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMediaButtonReceiver(android.app.PendingIntent)>($r4);

        goto label07;

     label04:
        if $i0 < 19 goto label05;

        $r14 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19;

        specialinvoke $r14.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)>($r1, $r2, $r3, $r4);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r14;

        goto label07;

     label05:
        if $i0 < 18 goto label06;

        $r15 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18;

        specialinvoke $r15.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)>($r1, $r2, $r3, $r4);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r15;

        goto label07;

     label06:
        $r16 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        specialinvoke $r16.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)>($r1, $r2, $r3, $r4);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r16;

     label07:
        $r17 = new android.support.v4.media.session.MediaControllerCompat;

        specialinvoke $r17.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat)>($r1, r0);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat mController> = $r17;

        $i0 = <android.support.v4.media.session.MediaSessionCompat: int sMaxBitmapSize>;

        if $i0 != 0 goto label10;

        $r18 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r19 = virtualinvoke $r18.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 320.0F, $r19);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        <android.support.v4.media.session.MediaSessionCompat: int sMaxBitmapSize> = $i0;

        return;

     label08:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("tag must not be null or empty");

        throw $r20;

     label09:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r20;

     label10:
        return;
    }

    public void <init>(android.content.Context, java.lang.String, android.os.Bundle)
    {
        android.content.Context $r1;
        android.os.Bundle $r3;
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.String $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Bundle;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)>($r1, $r2, null, null, $r3);

        return;
    }

    public static void ensureClassLoader(android.os.Bundle)
    {
        java.lang.Class $r2;
        android.os.Bundle $r0;
        java.lang.ClassLoader $r1;

        $r0 := @parameter0: android.os.Bundle;

        if $r0 == null goto label1;

        $r2 = class "Landroid/support/v4/media/session/MediaSessionCompat;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r0.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r1);

     label1:
        return;
    }

    public static android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context, java.lang.Object)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 $r3;
        android.content.Context $r1;
        int $i0;
        java.lang.Object $r0;
        android.support.v4.media.session.MediaSessionCompat $r2;

        $r1 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        if $r0 == null goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = new android.support.v4.media.session.MediaSessionCompat;

        $r3 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21;

        specialinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21: void <init>(java.lang.Object)>($r0);

        specialinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)>($r1, $r3);

        return $r2;

     label1:
        return null;
    }

    public static android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat, android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.PlaybackStateCompat$Builder $r2, $r3;
        long $l0, $l1, $l4, $l5;
        android.support.v4.media.MediaMetadataCompat $r1;
        byte $b2;
        int $i3;
        float $f0, $f1;
        android.support.v4.media.session.PlaybackStateCompat $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r1 := @parameter1: android.support.v4.media.MediaMetadataCompat;

        if $r0 == null goto label7;

        $l0 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $l1 = -1L;

        $b2 = $l0 cmp -1L;

        if $b2 != 0 goto label1;

        return $r0;

     label1:
        $i3 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        if $i3 == 3 goto label2;

        $i3 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        if $i3 == 4 goto label2;

        $i3 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        if $i3 != 5 goto label7;

     label2:
        $l4 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();

        $b2 = $l4 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label7;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $f0 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $l4 = $l0 - $l4;

        $f1 = (float) $l4;

        $f0 = $f0 * $f1;

        $l4 = (long) $f0;

        $l5 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $l4 = $l4 + $l5;

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z0 == 0 goto label3;

        $l1 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: long getLong(java.lang.String)>("android.media.metadata.DURATION");

     label3:
        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label4;

        $b2 = $l4 cmp $l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label4;

        goto label6;

     label4:
        $b2 = $l4 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label5;

        $l1 = 0L;

        goto label6;

     label5:
        $l1 = $l4;

     label6:
        $r3 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke $r3.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>(android.support.v4.media.session.PlaybackStateCompat)>($r0);

        $i3 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $f0 = virtualinvoke $r0.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $r2 = virtualinvoke $r3.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>($i3, $l1, $f0, $l0);

        $r0 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

     label7:
        return $r0;
    }

    public void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener $r1;
        java.lang.IllegalArgumentException $r3;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener may not be null");

        throw $r3;
    }

    public java.lang.String getCallingPackage()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.String $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.String getCallingPackage()>();

        return $r1;
    }

    public android.support.v4.media.session.MediaControllerCompat getController()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaControllerCompat r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat mController>;

        return r1;
    }

    public final b.q.E getCurrentControllerInfo()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;
        b.q.E $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: b.q.E getCurrentControllerInfo()>();

        return $r1;
    }

    public java.lang.Object getMediaSession()
    {
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.Object getMediaSession()>();

        return $r1;
    }

    public java.lang.Object getRemoteControlClient()
    {
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.Object getRemoteControlClient()>();

        return $r1;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r1 = interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        return $r1;
    }

    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: boolean isActive()>();

        return $z0;
    }

    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void release()>();

        return;
    }

    public void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener $r1;
        java.lang.IllegalArgumentException $r3;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener may not be null");

        throw $r3;
    }

    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.os.Bundle $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r3;
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void sendSessionEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event cannot be null or empty");

        throw $r4;
    }

    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener $r5;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setActive(boolean)>($z0);

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) $r4;

        interfaceinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener: void onActiveChanged()>();

        goto label1;

     label2:
        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>($r1, null);

        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        android.os.Handler $r3;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r2 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        $r3 := @parameter1: android.os.Handler;

        if $r2 != null goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>(null, null);

        return;

     label1:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        if $r3 == null goto label2;

        goto label3;

     label2:
        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

     label3:
        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>($r2, $r3);

        return;
    }

    public void setCaptioningEnabled(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setCaptioningEnabled(boolean)>($z0);

        return;
    }

    public void setExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setExtras(android.os.Bundle)>($r1);

        return;
    }

    public void setFlags(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setFlags(int)>($i0);

        return;
    }

    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMediaButtonReceiver(android.app.PendingIntent)>($r1);

        return;
    }

    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        return;
    }

    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;
        android.support.v4.media.session.PlaybackStateCompat $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        return;
    }

    public void setPlaybackToLocal(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackToLocal(int)>($i0);

        return;
    }

    public void setPlaybackToRemote(b.q.I)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;
        android.support.v4.media.session.MediaSessionCompat r0;
        b.q.I $r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: b.q.I;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackToRemote(b.q.I)>($r1);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null!");

        throw $r3;
    }

    public void setQueue(java.util.List)
    {
        java.util.List $r1;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: java.util.List;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setQueue(java.util.List)>($r1);

        return;
    }

    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.CharSequence $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setQueueTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setRatingType(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setRatingType(int)>($i0);

        return;
    }

    public void setRepeatMode(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setRepeatMode(int)>($i0);

        return;
    }

    public void setSessionActivity(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setSessionActivity(android.app.PendingIntent)>($r1);

        return;
    }

    public void setShuffleMode(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setShuffleMode(int)>($i0);

        return;
    }

    public static void <clinit>()
    {
        <android.support.v4.media.session.MediaSessionCompat: java.lang.String TAG> = "MediaSessionCompat";

        <android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_PLAYLIST> = 2;

        <android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_ARTIST> = 0;

        <android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_ALBUM> = 1;

        <android.support.v4.media.session.MediaSessionCompat: int MAX_BITMAP_SIZE_IN_DP> = 320;

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_TOKEN> = "android.support.v4.media.session.TOKEN";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_SESSION_TOKEN2_BUNDLE> = "android.support.v4.media.session.SESSION_TOKEN2_BUNDLE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_EXTRA_BINDER> = "android.support.v4.media.session.EXTRA_BINDER";

        <android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_TRANSPORT_CONTROLS> = 2;

        <android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_QUEUE_COMMANDS> = 4;

        <android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_MEDIA_BUTTONS> = 1;

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String DATA_EXTRAS> = "data_extras";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String DATA_CALLING_UID> = "data_calling_uid";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String DATA_CALLING_PID> = "data_calling_pid";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String DATA_CALLING_PACKAGE> = "data_calling_pkg";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE> = "android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE_VALUE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ARGUMENT_MEDIA_ATTRIBUTE> = "android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_UNFOLLOW> = "android.support.v4.media.session.action.UNFOLLOW";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SKIP_AD> = "android.support.v4.media.session.action.SKIP_AD";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_SHUFFLE_MODE> = "android.support.v4.media.session.action.SET_SHUFFLE_MODE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_REPEAT_MODE> = "android.support.v4.media.session.action.SET_REPEAT_MODE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_RATING> = "android.support.v4.media.session.action.SET_RATING";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_CAPTIONING_ENABLED> = "android.support.v4.media.session.action.SET_CAPTIONING_ENABLED";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_URI> = "android.support.v4.media.session.action.PREPARE_FROM_URI";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_SEARCH> = "android.support.v4.media.session.action.PREPARE_FROM_SEARCH";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_MEDIA_ID> = "android.support.v4.media.session.action.PREPARE_FROM_MEDIA_ID";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE> = "android.support.v4.media.session.action.PREPARE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PLAY_FROM_URI> = "android.support.v4.media.session.action.PLAY_FROM_URI";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_FOLLOW> = "android.support.v4.media.session.action.FOLLOW";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_FLAG_AS_INAPPROPRIATE> = "android.support.v4.media.session.action.FLAG_AS_INAPPROPRIATE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_URI> = "android.support.v4.media.session.action.ARGUMENT_URI";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE> = "android.support.v4.media.session.action.ARGUMENT_SHUFFLE_MODE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_REPEAT_MODE> = "android.support.v4.media.session.action.ARGUMENT_REPEAT_MODE";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_RATING> = "android.support.v4.media.session.action.ARGUMENT_RATING";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_QUERY> = "android.support.v4.media.session.action.ARGUMENT_QUERY";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_MEDIA_ID> = "android.support.v4.media.session.action.ARGUMENT_MEDIA_ID";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_EXTRAS> = "android.support.v4.media.session.action.ARGUMENT_EXTRAS";

        <android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED> = "android.support.v4.media.session.action.ARGUMENT_CAPTIONING_ENABLED";

        return;
    }
}
