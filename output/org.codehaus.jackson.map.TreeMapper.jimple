public class org.codehaus.jackson.map.TreeMapper extends org.codehaus.jackson.node.JsonNodeFactory
{
    public org.codehaus.jackson.map.ObjectMapper _objectMapper;

    public void <init>()
    {
        org.codehaus.jackson.map.TreeMapper r0;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        specialinvoke r0.<org.codehaus.jackson.map.TreeMapper: void <init>(org.codehaus.jackson.map.ObjectMapper)>(null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.ObjectMapper)
    {
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r1;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper;

        specialinvoke r0.<org.codehaus.jackson.node.JsonNodeFactory: void <init>()>();

        r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper _objectMapper> = $r1;

        return;
    }

    public org.codehaus.jackson.JsonFactory getJsonFactory()
    {
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r1;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory getJsonFactory()>();

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectMapper objectMapper()
    {
        java.lang.Throwable $r2;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r1;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        entermonitor r0;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper _objectMapper>;

        if $r1 != null goto label2;

        $r1 = new org.codehaus.jackson.map.ObjectMapper;

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectMapper: void <init>()>();

        r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper _objectMapper> = $r1;

     label2:
        $r1 = r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper _objectMapper>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.File)
    {
        org.codehaus.jackson.node.NullNode r5;
        java.lang.Object $r3;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r2;
        org.codehaus.jackson.JsonNode $r4;
        java.io.File $r1;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,java.lang.Class)>($r1, class "Lorg/codehaus/jackson/JsonNode;");

        $r4 = (org.codehaus.jackson.JsonNode) $r3;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.InputStream)
    {
        org.codehaus.jackson.node.NullNode r5;
        java.lang.Object $r3;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r2;
        org.codehaus.jackson.JsonNode $r4;
        java.io.InputStream $r1;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,java.lang.Class)>($r1, class "Lorg/codehaus/jackson/JsonNode;");

        $r4 = (org.codehaus.jackson.JsonNode) $r3;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.Reader)
    {
        org.codehaus.jackson.node.NullNode r5;
        java.lang.Object $r3;
        java.io.Reader $r1;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r2;
        org.codehaus.jackson.JsonNode $r4;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,java.lang.Class)>($r1, class "Lorg/codehaus/jackson/JsonNode;");

        $r4 = (org.codehaus.jackson.JsonNode) $r3;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.lang.String)
    {
        org.codehaus.jackson.node.NullNode r5;
        java.lang.Object $r3;
        java.lang.String $r1;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r2;
        org.codehaus.jackson.JsonNode $r4;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>($r1, class "Lorg/codehaus/jackson/JsonNode;");

        $r4 = (org.codehaus.jackson.JsonNode) $r3;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.net.URL)
    {
        org.codehaus.jackson.node.NullNode r5;
        java.net.URL $r1;
        java.lang.Object $r3;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r2;
        org.codehaus.jackson.JsonNode $r4;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,java.lang.Class)>($r1, class "Lorg/codehaus/jackson/JsonNode;");

        $r4 = (org.codehaus.jackson.JsonNode) $r3;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)
    {
        org.codehaus.jackson.JsonToken $r2;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r3;
        org.codehaus.jackson.JsonNode $r4;
        org.codehaus.jackson.JsonParser $r1;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        if $r2 != null goto label1;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)>($r1);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(byte[])
    {
        org.codehaus.jackson.node.NullNode r5;
        byte[] $r1;
        int $i0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.map.ObjectMapper $r2;
        org.codehaus.jackson.JsonNode $r4;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        $i0 = lengthof $r1;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,java.lang.Class)>($r1, 0, $i0, class "Lorg/codehaus/jackson/JsonNode;");

        $r4 = (org.codehaus.jackson.JsonNode) $r3;

        if $r4 != null goto label1;

        r5 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        return r5;

     label1:
        return $r4;
    }

    public void writeTree(org.codehaus.jackson.JsonNode, java.io.File)
    {
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.JsonNode $r1;
        org.codehaus.jackson.map.ObjectMapper $r3;
        java.io.File $r2;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r2 := @parameter1: java.io.File;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: void writeValue(java.io.File,java.lang.Object)>($r2, $r1);

        return;
    }

    public void writeTree(org.codehaus.jackson.JsonNode, java.io.OutputStream)
    {
        java.io.OutputStream $r2;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.JsonNode $r1;
        org.codehaus.jackson.map.ObjectMapper $r3;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: void writeValue(java.io.OutputStream,java.lang.Object)>($r2, $r1);

        return;
    }

    public void writeTree(org.codehaus.jackson.JsonNode, java.io.Writer)
    {
        java.io.Writer $r2;
        org.codehaus.jackson.map.TreeMapper r0;
        org.codehaus.jackson.JsonNode $r1;
        org.codehaus.jackson.map.ObjectMapper $r3;

        r0 := @this: org.codehaus.jackson.map.TreeMapper;

        $r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r2 := @parameter1: java.io.Writer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: void writeValue(java.io.Writer,java.lang.Object)>($r2, $r1);

        return;
    }
}
