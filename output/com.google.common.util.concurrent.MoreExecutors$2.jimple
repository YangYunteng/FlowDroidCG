public final class com.google.common.util.concurrent.MoreExecutors$2 extends java.lang.Object implements java.util.concurrent.Executor
{
    public final java.util.concurrent.Executor val$executor;
    public final com.google.common.base.Supplier val$nameSupplier;

    public void <init>(java.util.concurrent.Executor, com.google.common.base.Supplier)
    {
        com.google.common.base.Supplier $r2;
        com.google.common.util.concurrent.MoreExecutors$2 r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$2;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: com.google.common.base.Supplier;

        r0.<com.google.common.util.concurrent.MoreExecutors$2: java.util.concurrent.Executor val$executor> = $r1;

        r0.<com.google.common.util.concurrent.MoreExecutors$2: com.google.common.base.Supplier val$nameSupplier> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Runnable)
    {
        com.google.common.util.concurrent.MoreExecutors$2 r0;
        java.util.concurrent.Executor $r1;
        com.google.common.base.Supplier $r2;
        java.lang.Runnable $r3;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$2;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 = r0.<com.google.common.util.concurrent.MoreExecutors$2: java.util.concurrent.Executor val$executor>;

        $r2 = r0.<com.google.common.util.concurrent.MoreExecutors$2: com.google.common.base.Supplier val$nameSupplier>;

        $r3 = staticinvoke <com.google.common.util.concurrent.Callables: java.lang.Runnable threadRenaming(java.lang.Runnable,com.google.common.base.Supplier)>($r3, $r2);

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }
}
