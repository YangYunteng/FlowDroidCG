public class com.google.common.collect.Lists$Partition extends java.util.AbstractList
{
    public final java.util.List list;
    public final int size;

    public void <init>(java.util.List, int)
    {
        int $i0;
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.google.common.collect.Lists$Partition: java.util.List list> = $r1;

        r0.<com.google.common.collect.Lists$Partition: int size> = $i0;

        return;
    }

    public volatile java.lang.Object get(int)
    {
        int $i0;
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.common.collect.Lists$Partition: java.util.List get(int)>($i0);

        return $r1;
    }

    public java.util.List get(int)
    {
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.google.common.collect.Lists$Partition: int size()>();

        staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int)>($i0, $i1);

        $i1 = r0.<com.google.common.collect.Lists$Partition: int size>;

        $i0 = $i0 * $i1;

        $i1 = $i1 + $i0;

        $r1 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r1 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $r1 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        return $r1;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $r1 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public int size()
    {
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r2;
        int $i0, $i1;
        java.math.RoundingMode $r1;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $r2 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = r0.<com.google.common.collect.Lists$Partition: int size>;

        $r1 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        $i0 = staticinvoke <com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>($i1, $i0, $r1);

        return $i0;
    }
}
