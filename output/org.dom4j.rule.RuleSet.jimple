public class org.dom4j.rule.RuleSet extends java.lang.Object
{
    public org.dom4j.rule.Rule[] ruleArray;
    public java.util.ArrayList rules;

    public void <init>()
    {
        org.dom4j.rule.RuleSet r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.rule.RuleSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules> = $r1;

        return;
    }

    public void addAll(org.dom4j.rule.RuleSet)
    {
        org.dom4j.rule.RuleSet r0, $r2;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r2 := @parameter0: org.dom4j.rule.RuleSet;

        $r1 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $r3 = $r2.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = null;

        return;
    }

    public void addRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r2 := @parameter0: org.dom4j.rule.Rule;

        $r1 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = null;

        return;
    }

    public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)
    {
        org.dom4j.Node $r2;
        int $i0, $i1;
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule $r1;
        org.dom4j.rule.Rule[] $r3;
        boolean $z0;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r2 := @parameter0: org.dom4j.Node;

        $r3 = virtualinvoke r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] getRuleArray()>();

        $i0 = lengthof $r3;

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 >= 0 goto label2;

        return null;

     label2:
        $r1 = $r3[$i0];

        $z0 = virtualinvoke $r1.<org.dom4j.rule.Rule: boolean matches(org.dom4j.Node)>($r2);

        if $z0 == 0 goto label3;

        return $r1;

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;
    }

    public org.dom4j.rule.Rule[] getRuleArray()
    {
        int $i0;
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule[] $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r1 = r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray>;

        if $r1 != null goto label1;

        $r2 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $r2 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r1 = newarray (org.dom4j.rule.Rule)[$i0];

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = $r1;

        $r2 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        $r1 = r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

     label1:
        $r1 = r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray>;

        return $r1;
    }

    public void removeRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.RuleSet r0;
        org.dom4j.rule.Rule $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r2 := @parameter0: org.dom4j.rule.Rule;

        $r1 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        r0.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule[] ruleArray> = null;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r1;
        org.dom4j.rule.RuleSet r0;
        java.lang.String $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.dom4j.rule.RuleSet;

        $r1 = new java.lang.StringBuilder;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [RuleSet: ");

        $r3 = r0.<org.dom4j.rule.RuleSet: java.util.ArrayList rules>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
