public class com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 extends com.google.common.collect.AbstractIterator
{
    public int index;
    public final int maxIndex;
    public final com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0;

    public void <init>(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap)
    {
        com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 r0;
        com.google.common.collect.DenseImmutableTable$ImmutableArrayMap $r1;
        com.google.common.collect.ImmutableMap $r2;
        int $i0;

        r0 := @this: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1;

        $r1 := @parameter0: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap;

        r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.AbstractIterator: void <init>()>();

        $i0 = -1;

        r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int index> = $i0;

        $r1 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap: com.google.common.collect.ImmutableMap keyToIndex()>();

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int maxIndex> = $i0;

        return;
    }

    public volatile java.lang.Object computeNext()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 r0;

        r0 := @this: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1;

        $r1 = virtualinvoke r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: java.util.Map$Entry computeNext()>();

        return $r1;
    }

    public java.util.Map$Entry computeNext()
    {
        java.util.Map$Entry $r4;
        com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 r0;
        com.google.common.collect.DenseImmutableTable$ImmutableArrayMap $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;

        r0 := @this: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1;

        $i0 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int index>;

     label1:
        $i0 = $i0 + 1;

        r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int index> = $i0;

        $i0 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int index>;

        $i1 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int maxIndex>;

        if $i0 >= $i1 goto label3;

        $r1 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap: java.lang.Object getValue(int)>($i0);

        if $r2 == null goto label2;

        $r1 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0>;

        $i0 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int index>;

        $r3 = virtualinvoke $r1.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap: java.lang.Object getKey(int)>($i0);

        $r4 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $r4;

     label2:
        $i0 = r0.<com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1: int index>;

        goto label1;

     label3:
        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()>();

        $r4 = (java.util.Map$Entry) $r2;

        return $r4;
    }
}
