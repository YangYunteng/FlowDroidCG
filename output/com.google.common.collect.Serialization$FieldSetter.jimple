public final class com.google.common.collect.Serialization$FieldSetter extends java.lang.Object
{
    public final java.lang.reflect.Field field;

    public void <init>(java.lang.reflect.Field)
    {
        com.google.common.collect.Serialization$FieldSetter r0;
        java.lang.reflect.Field $r1;

        r0 := @this: com.google.common.collect.Serialization$FieldSetter;

        $r1 := @parameter0: java.lang.reflect.Field;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.Serialization$FieldSetter: java.lang.reflect.Field field> = $r1;

        virtualinvoke $r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        return;
    }

    public void <init>(java.lang.reflect.Field, com.google.common.collect.Serialization$1)
    {
        com.google.common.collect.Serialization$FieldSetter r0;
        com.google.common.collect.Serialization$1 $r2;
        java.lang.reflect.Field $r1;

        r0 := @this: com.google.common.collect.Serialization$FieldSetter;

        $r1 := @parameter0: java.lang.reflect.Field;

        $r2 := @parameter1: com.google.common.collect.Serialization$1;

        specialinvoke r0.<com.google.common.collect.Serialization$FieldSetter: void <init>(java.lang.reflect.Field)>($r1);

        return;
    }

    public void set(java.lang.Object, int)
    {
        com.google.common.collect.Serialization$FieldSetter r0;
        java.lang.IllegalAccessException $r4;
        int $i0;
        java.lang.Object $r3;
        java.lang.AssertionError $r5;
        java.lang.reflect.Field $r1;
        java.lang.Integer $r2;

        r0 := @this: com.google.common.collect.Serialization$FieldSetter;

        $r3 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r1 = r0.<com.google.common.collect.Serialization$FieldSetter: java.lang.reflect.Field field>;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r3, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public void set(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.Serialization$FieldSetter r0;
        java.lang.IllegalAccessException $r4;
        java.lang.Object $r2, $r3;
        java.lang.AssertionError $r5;
        java.lang.reflect.Field $r1;

        r0 := @this: com.google.common.collect.Serialization$FieldSetter;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Serialization$FieldSetter: java.lang.reflect.Field field>;

     label1:
        virtualinvoke $r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r2, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }
}
