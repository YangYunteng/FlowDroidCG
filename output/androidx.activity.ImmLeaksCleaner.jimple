public final class androidx.activity.ImmLeaksCleaner extends java.lang.Object implements androidx.lifecycle.LifecycleEventObserver
{
    public static int a;
    public static java.lang.reflect.Field b;
    public static java.lang.reflect.Field c;
    public static java.lang.reflect.Field d;
    public android.app.Activity e;

    public void <init>(android.app.Activity)
    {
        androidx.activity.ImmLeaksCleaner r0;
        android.app.Activity $r1;

        r0 := @this: androidx.activity.ImmLeaksCleaner;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.activity.ImmLeaksCleaner: android.app.Activity e> = $r1;

        return;
    }

    public static void a()
    {
        java.lang.Class $r1;
        java.lang.NoSuchFieldException $r0;
        java.lang.reflect.Field $r2;

        <androidx.activity.ImmLeaksCleaner: int a> = 2;

        $r1 = class "Landroid/view/inputmethod/InputMethodManager;";

     label01:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mServedView");

     label02:
        <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field c> = $r2;

        $r2 = <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field c>;

     label03:
        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label04:
        $r1 = class "Landroid/view/inputmethod/InputMethodManager;";

     label05:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mNextServedView");

     label06:
        <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field d> = $r2;

        $r2 = <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field d>;

     label07:
        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label08:
        $r1 = class "Landroid/view/inputmethod/InputMethodManager;";

     label09:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mH");

     label10:
        <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field b> = $r2;

        $r2 = <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field b>;

     label11:
        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label12:
        <androidx.activity.ImmLeaksCleaner: int a> = 1;

        return;

     label13:
        $r0 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldException from label01 to label02 with label13;
        catch java.lang.NoSuchFieldException from label03 to label04 with label13;
        catch java.lang.NoSuchFieldException from label05 to label06 with label13;
        catch java.lang.NoSuchFieldException from label07 to label08 with label13;
        catch java.lang.NoSuchFieldException from label09 to label10 with label13;
        catch java.lang.NoSuchFieldException from label11 to label12 with label13;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        java.lang.Throwable $r14;
        androidx.activity.ImmLeaksCleaner r0;
        java.lang.ClassCastException $r3;
        android.view.inputmethod.InputMethodManager $r10;
        androidx.lifecycle.LifecycleOwner $r5;
        int $i0;
        android.view.View $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r1, $r2, $r4;
        java.lang.reflect.Field $r11;
        androidx.lifecycle.Lifecycle$Event $r6, $r7;
        java.lang.Object $r9, $r12;
        android.app.Activity $r8;

        r0 := @this: androidx.activity.ImmLeaksCleaner;

        $r5 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r6 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r7 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if $r6 == $r7 goto label01;

        return;

     label01:
        $i0 = <androidx.activity.ImmLeaksCleaner: int a>;

        if $i0 != 0 goto label02;

        staticinvoke <androidx.activity.ImmLeaksCleaner: void a()>();

     label02:
        $i0 = <androidx.activity.ImmLeaksCleaner: int a>;

        if $i0 != 1 goto label31;

        $r8 = r0.<androidx.activity.ImmLeaksCleaner: android.app.Activity e>;

        $r9 = virtualinvoke $r8.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r10 = (android.view.inputmethod.InputMethodManager) $r9;

        $r11 = <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field b>;

     label03:
        $r9 = virtualinvoke $r11.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r10);

     label04:
        if $r9 != null goto label05;

        return;

     label05:
        entermonitor $r9;

     label06:
        $r11 = <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field c>;

     label07:
        $r12 = virtualinvoke $r11.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r10);

     label08:
        $r13 = (android.view.View) $r12;

     label09:
        if $r13 != null goto label12;

     label10:
        exitmonitor $r9;

     label11:
        return;

     label12:
        $z0 = virtualinvoke $r13.<android.view.View: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label14;

        exitmonitor $r9;

     label13:
        return;

     label14:
        $r11 = <androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field d>;

     label15:
        virtualinvoke $r11.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r10, null);

     label16:
        exitmonitor $r9;

     label17:
        virtualinvoke $r10.<android.view.inputmethod.InputMethodManager: boolean isActive()>();

        return;

     label18:
        exitmonitor $r9;

     label19:
        return;

     label20:
        $r14 := @caughtexception;

        goto label25;

     label21:
        exitmonitor $r9;

     label22:
        return;

     label23:
        exitmonitor $r9;

     label24:
        return;

     label25:
        exitmonitor $r9;

     label26:
        throw $r14;

     label27:
        $r1 := @caughtexception;

        return;

     label28:
        $r2 := @caughtexception;

        goto label23;

     label29:
        $r3 := @caughtexception;

        goto label21;

     label30:
        $r4 := @caughtexception;

        goto label18;

     label31:
        return;

        catch java.lang.IllegalAccessException from label03 to label04 with label27;
        catch java.lang.IllegalAccessException from label07 to label08 with label28;
        catch java.lang.ClassCastException from label07 to label09 with label29;
        catch java.lang.Throwable from label06 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.IllegalAccessException from label15 to label16 with label30;
        catch java.lang.Throwable from label14 to label16 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label22 with label20;
        catch java.lang.Throwable from label23 to label24 with label20;
        catch java.lang.Throwable from label25 to label26 with label20;
    }
}
