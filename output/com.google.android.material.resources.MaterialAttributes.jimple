public class com.google.android.material.resources.MaterialAttributes extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.material.resources.MaterialAttributes r0;

        r0 := @this: com.google.android.material.resources.MaterialAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.util.TypedValue resolve(android.content.Context, int)
    {
        android.content.Context $r1;
        android.util.TypedValue $r0;
        int $i0;
        android.content.res.Resources$Theme $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r0 = new android.util.TypedValue;

        specialinvoke $r0.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, $r0, 1);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        return null;
    }

    public static boolean resolveBoolean(android.content.Context, int, boolean)
    {
        android.content.Context $r1;
        android.util.TypedValue $r0;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: android.util.TypedValue resolve(android.content.Context,int)>($r1, $i0);

        if $r0 == null goto label2;

        $i0 = $r0.<android.util.TypedValue: int type>;

        if $i0 != 18 goto label2;

        $i0 = $r0.<android.util.TypedValue: int data>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return $z0;
    }

    public static boolean resolveBooleanOrThrow(android.content.Context, int, java.lang.String)
    {
        int $i0;
        android.content.Context $r1;
        java.lang.String $r0;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        $i0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>($r1, $i0, $r0);

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int resolveDimension(android.content.Context, int, int)
    {
        android.content.Context $r0;
        android.util.TypedValue $r1;
        int $i0, $i1;
        float $f0;
        android.util.DisplayMetrics $r3;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.content.Context;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = staticinvoke <com.google.android.material.resources.MaterialAttributes: android.util.TypedValue resolve(android.content.Context,int)>($r0, $i1);

        if $r1 == null goto label3;

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 == 5 goto label1;

        goto label3;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke $r1.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r3);

     label2:
        $i1 = (int) $f0;

        return $i1;

     label3:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i0);

        goto label2;
    }

    public static int resolveMinimumAccessibleTouchTarget(android.content.Context)
    {
        int $i0, $i1;
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <com.google.android.material.R$attr: int minTouchTargetSize>;

        $i1 = <com.google.android.material.R$dimen: int mtrl_min_touch_target_size>;

        $i0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveDimension(android.content.Context,int,int)>($r0, $i0, $i1);

        return $i0;
    }

    public static int resolveOrThrow(android.content.Context, int, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Object[] $r4;
        android.util.TypedValue $r2;
        int $i0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r3;
        android.content.res.Resources $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <com.google.android.material.resources.MaterialAttributes: android.util.TypedValue resolve(android.content.Context,int)>($r0, $i0);

        if $r2 == null goto label1;

        $i0 = $r2.<android.util.TypedValue: int data>;

        return $i0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

        $r4[1] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$s requires a value for the %2$s attribute to be set in your app theme. You can either set the attribute in your theme or update your theme to inherit from Theme.MaterialComponents (or a descendant).", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public static int resolveOrThrow(android.view.View, int)
    {
        android.content.Context $r1;
        int $i0;
        android.view.View $r0;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        $i0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>($r1, $i0, $r3);

        return $i0;
    }
}
