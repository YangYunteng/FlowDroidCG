public final class com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig extends com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig
{
    public final int criticalSectionEnterTimeoutMs;
    public final long eventCleanUpAge;
    public final int loadBatchSize;
    public final int maxBlobByteSizePerRow;
    public final long maxStorageSizeInBytes;

    public void <init>(long, int, int, long, int)
    {
        int $i1, $i2, $i4;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        long $l0, $l3;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $l3 := @parameter3: long;

        $i4 := @parameter4: int;

        specialinvoke r0.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void <init>()>();

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long maxStorageSizeInBytes> = $l0;

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int loadBatchSize> = $i1;

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int criticalSectionEnterTimeoutMs> = $i2;

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long eventCleanUpAge> = $l3;

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int maxBlobByteSizePerRow> = $i4;

        return;
    }

    public void <init>(long, int, int, long, int, com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)
    {
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1 $r1;
        int $i1, $i2, $i4;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        long $l0, $l3;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $l3 := @parameter3: long;

        $i4 := @parameter4: int;

        $r1 := @parameter5: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1;

        specialinvoke r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void <init>(long,int,int,long,int)>($l0, $i1, $i2, $l3, $i4);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1;
        byte $b2;
        com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig $r2;
        int $i3, $i4;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig;

        if $z0 == 0 goto label3;

        $r2 = (com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig) $r1;

        $l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long maxStorageSizeInBytes>;

        $l1 = virtualinvoke $r2.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: long getMaxStorageSizeInBytes()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $i3 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int loadBatchSize>;

        $i4 = virtualinvoke $r2.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: int getLoadBatchSize()>();

        if $i3 != $i4 goto label2;

        $i3 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int criticalSectionEnterTimeoutMs>;

        $i4 = virtualinvoke $r2.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: int getCriticalSectionEnterTimeoutMs()>();

        if $i3 != $i4 goto label2;

        $l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long eventCleanUpAge>;

        $l1 = virtualinvoke $r2.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: long getEventCleanUpAge()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $i3 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int maxBlobByteSizePerRow>;

        $i4 = virtualinvoke $r2.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: int getMaxBlobByteSizePerRow()>();

        if $i3 != $i4 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }

    public int getCriticalSectionEnterTimeoutMs()
    {
        int i0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        i0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int criticalSectionEnterTimeoutMs>;

        return i0;
    }

    public long getEventCleanUpAge()
    {
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        long l0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long eventCleanUpAge>;

        return l0;
    }

    public int getLoadBatchSize()
    {
        int i0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        i0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int loadBatchSize>;

        return i0;
    }

    public int getMaxBlobByteSizePerRow()
    {
        int i0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        i0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int maxBlobByteSizePerRow>;

        return i0;
    }

    public long getMaxStorageSizeInBytes()
    {
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        long l0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long maxStorageSizeInBytes>;

        return l0;
    }

    public int hashCode()
    {
        int $i2, $i3;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        long $l0, $l1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        $l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long maxStorageSizeInBytes>;

        $l1 = $l0 >>> 32;

        $l0 = $l0 ^ $l1;

        $i2 = (int) $l0;

        $i2 = $i2 ^ 1000003;

        $i2 = $i2 * 1000003;

        $i3 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int loadBatchSize>;

        $i2 = $i2 ^ $i3;

        $i2 = $i2 * 1000003;

        $i3 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int criticalSectionEnterTimeoutMs>;

        $i2 = $i2 ^ $i3;

        $i2 = $i2 * 1000003;

        $l1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long eventCleanUpAge>;

        $l0 = $l1 >>> 32;

        $l0 = $l1 ^ $l0;

        $i3 = (int) $l0;

        $i2 = $i2 ^ $i3;

        $i2 = $i2 * 1000003;

        $i3 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int maxBlobByteSizePerRow>;

        $i2 = $i3 ^ $i2;

        return $i2;
    }

    public java.lang.String toString()
    {
        int $i1;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig r0;
        java.lang.StringBuilder $r2;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EventStoreConfig{maxStorageSizeInBytes=");

        $l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long maxStorageSizeInBytes>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", loadBatchSize=");

        $i1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int loadBatchSize>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", criticalSectionEnterTimeoutMs=");

        $i1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int criticalSectionEnterTimeoutMs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventCleanUpAge=");

        $l0 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long eventCleanUpAge>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxBlobByteSizePerRow=");

        $i1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int maxBlobByteSizePerRow>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
