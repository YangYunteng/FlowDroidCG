public class l.h extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    public static final char[] a;
    public static final l.h b;
    public final byte[] c;
    public transient int d;
    public transient java.lang.String e;

    static void <clinit>()
    {
        char[] $r1;
        byte[] $r2;
        l.h $r0;

        $r1 = newarray (char)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        <l.h: char[] a> = $r1;

        $r2 = newarray (byte)[0];

        $r0 = staticinvoke <l.h: l.h a(byte[])>($r2);

        <l.h: l.h b> = $r0;

        return;
    }

    public void <init>(byte[])
    {
        byte[] $r1;
        l.h r0;

        r0 := @this: l.h;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<l.h: byte[] c> = $r1;

        return;
    }

    public static int a(char)
    {
        byte $b2;
        int $i1;
        char $c0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r3;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 < 48 goto label1;

        $i1 = (int) $c0;

        if $i1 > 57 goto label1;

        $i1 = (int) $c0;

        $i1 = $i1 - 48;

        return $i1;

     label1:
        $b2 = 97;

        $i1 = (int) $c0;

        if $i1 < 97 goto label3;

        $i1 = (int) $c0;

        if $i1 > 102 goto label3;

     label2:
        $i1 = (int) $c0;

        $i1 = $i1 - $b2;

        $i1 = $i1 + 10;

        return $i1;

     label3:
        $b2 = 65;

        $i1 = (int) $c0;

        if $i1 < 65 goto label4;

        $i1 = (int) $c0;

        if $i1 > 70 goto label4;

        goto label2;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        $r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected hex digit: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        goto label5;

     label5:
        throw $r3;
    }

    public static int a(java.lang.String, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        if $i3 != $i0 goto label2;

        return $i2;

     label2:
        $i4 = virtualinvoke $r0.<java.lang.String: int codePointAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(int)>($i4);

        if $z0 == 0 goto label3;

        if $i4 == 10 goto label3;

        if $i4 != 13 goto label4;

     label3:
        $i5 = 65533;

        if $i4 != $i5 goto label5;

     label4:
        $i0 = -1;

        return $i0;

     label5:
        $i3 = $i3 + 1;

        $i4 = staticinvoke <java.lang.Character: int charCount(int)>($i4);

        $i2 = $i2 + $i4;

        goto label1;

     label6:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        return $i0;
    }

    public static l.h a(java.lang.String)
    {
        byte[] $r1;
        l.h $r2;
        char $c3;
        java.lang.IllegalArgumentException $r3;
        byte $b4;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 % 2;

        if $i0 != 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $i2 = $i0 * 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i1 = staticinvoke <l.h: int a(char)>($c3);

        $i1 = $i1 << 4;

        $i2 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <l.h: int a(char)>($c3);

        $i1 = $i1 + $i2;

        $b4 = (byte) $i1;

        $r1[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <l.h: l.h a(byte[])>($r1);

        return $r2;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected hex string: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("hex == null");

        goto label5;

     label5:
        throw $r3;
    }

    public static transient l.h a(byte[])
    {
        byte[] $r1;
        l.h $r2;
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r3;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label1;

        $r2 = new l.h;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (byte[]) $r0;

        specialinvoke $r2.<l.h: void <init>(byte[])>($r1);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data == null");

        throw $r3;
    }

    public static l.h c(java.lang.String)
    {
        byte[] $r0;
        java.nio.charset.Charset $r3;
        l.h $r2;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r4;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = new l.h;

        $r3 = <l.A: java.nio.charset.Charset a>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        specialinvoke $r2.<l.h: void <init>(byte[])>($r0);

        $r2.<l.h: java.lang.String e> = $r1;

        return $r2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("s == null");

        throw $r4;
    }

    public byte a(int)
    {
        byte[] $r1;
        byte $b1;
        l.h r0;
        int $i0;

        r0 := @this: l.h;

        $i0 := @parameter0: int;

        $r1 = r0.<l.h: byte[] c>;

        $b1 = $r1[$i0];

        return $b1;
    }

    public int a(l.h)
    {
        l.h r0, $r1;
        short $s5, $s6;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i7, $i8;

        r0 := @this: l.h;

        $r1 := @parameter0: l.h;

        $i0 = virtualinvoke r0.<l.h: int e()>();

        $i1 = virtualinvoke $r1.<l.h: int e()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label4;

        $b4 = virtualinvoke r0.<l.h: byte a(int)>($i3);

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $b4 = virtualinvoke $r1.<l.h: byte a(int)>($i3);

        $s6 = (short) $b4;

        $s6 = $s6 & 255;

        $i7 = (int) $s5;

        $i8 = (int) $s6;

        if $i7 != $i8 goto label2;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i0 = (int) $s5;

        $i1 = (int) $s6;

        if $i0 >= $i1 goto label3;

        $i0 = -1;

        return $i0;

     label3:
        return 1;

     label4:
        if $i0 != $i1 goto label5;

        return 0;

     label5:
        if $i0 >= $i1 goto label6;

        $i0 = -1;

        return $i0;

     label6:
        return 1;
    }

    public java.lang.String a()
    {
        byte[] $r2;
        java.lang.String $r1;
        l.h r0;

        r0 := @this: l.h;

        $r2 = r0.<l.h: byte[] c>;

        $r1 = staticinvoke <l.d: java.lang.String a(byte[])>($r2);

        return $r1;
    }

    public l.h a(int, int)
    {
        byte[] $r2, $r3;
        l.h r0;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5;
        java.lang.String $r1;

        r0 := @this: l.h;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label4;

        $r2 = r0.<l.h: byte[] c>;

        $i2 = lengthof $r2;

        if $i1 > $i2 goto label3;

        $i2 = $i1 - $i0;

        if $i2 < 0 goto label2;

        if $i0 != 0 goto label1;

        $i3 = lengthof $r2;

        if $i1 != $i3 goto label1;

        return r0;

     label1:
        $r2 = newarray (byte)[$i2];

        $r3 = r0.<l.h: byte[] c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i0, $r2, 0, $i2);

        r0 = new l.h;

        specialinvoke r0.<l.h: void <init>(byte[])>($r2);

        return r0;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("endIndex < beginIndex");

        throw $r4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endIndex > length(");

        $r2 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r2;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("beginIndex < 0");

        throw $r4;
    }

    public void a(l.e)
    {
        byte[] $r2;
        l.e $r1;
        l.h r0;
        int $i0;

        r0 := @this: l.h;

        $r1 := @parameter0: l.e;

        $r2 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r2;

        virtualinvoke $r1.<l.e: l.e write(byte[],int,int)>($r2, 0, $i0);

        return;
    }

    public boolean a(int, l.h, int, int)
    {
        byte[] $r2;
        l.h r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: l.h;

        $i2 := @parameter0: int;

        $r1 := @parameter1: l.h;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = r0.<l.h: byte[] c>;

        $z0 = virtualinvoke $r1.<l.h: boolean a(int,byte[],int,int)>($i0, $r2, $i2, $i1);

        return $z0;
    }

    public boolean a(int, byte[], int, int)
    {
        byte[] $r1, $r2;
        l.h r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: l.h;

        $i2 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        if $i2 < 0 goto label1;

        $r2 = r0.<l.h: byte[] c>;

        $i3 = lengthof $r2;

        $i3 = $i3 - $i1;

        if $i2 > $i3 goto label1;

        if $i0 < 0 goto label1;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i1;

        if $i0 > $i3 goto label1;

        $z0 = staticinvoke <l.A: boolean a(byte[],int,byte[],int,int)>($r2, $i2, $r1, $i0, $i1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String b()
    {
        byte[] $r2;
        l.h r0;
        char $c6;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5;
        char[] $r1, $r3;
        java.lang.String $r4;

        r0 := @this: l.h;

        $r2 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r2;

        $i0 = $i0 * 2;

        $r3 = newarray (char)[$i0];

        $i0 = lengthof $r2;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $b4 = $r2[$i2];

        $i1 = $i3 + 1;

        $r1 = <l.h: char[] a>;

        $i5 = (int) $b4;

        $i5 = $i5 >> 4;

        $i5 = $i5 & 15;

        $c6 = $r1[$i5];

        $r3[$i3] = $c6;

        $i3 = $i1 + 1;

        $b4 = $b4 & 15;

        $i5 = (int) $b4;

        $c6 = $r1[$i5];

        $r3[$i1] = $c6;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r3);

        return $r4;
    }

    public final l.h b(java.lang.String)
    {
        byte[] $r3;
        java.security.MessageDigest $r2;
        l.h r0;
        java.security.NoSuchAlgorithmException $r4;
        java.lang.String $r1;
        java.lang.AssertionError $r5;

        r0 := @this: l.h;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1);

     label2:
        $r3 = r0.<l.h: byte[] c>;

     label3:
        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        r0 = staticinvoke <l.h: l.h a(byte[])>($r3);

     label4:
        return r0;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    public final boolean b(l.h)
    {
        l.h r0, $r1;
        int $i0;
        boolean $z0;

        r0 := @this: l.h;

        $r1 := @parameter0: l.h;

        $i0 = virtualinvoke $r1.<l.h: int e()>();

        $z0 = virtualinvoke r0.<l.h: boolean a(int,l.h,int,int)>(0, $r1, 0, $i0);

        return $z0;
    }

    public l.h c()
    {
        l.h r0;

        r0 := @this: l.h;

        r0 = virtualinvoke r0.<l.h: l.h b(java.lang.String)>("SHA-1");

        return r0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        l.h r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: l.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (l.h) $r1;

        $i0 = virtualinvoke r0.<l.h: int a(l.h)>($r2);

        return $i0;
    }

    public l.h d()
    {
        l.h r0;

        r0 := @this: l.h;

        r0 = virtualinvoke r0.<l.h: l.h b(java.lang.String)>("SHA-256");

        return r0;
    }

    public int e()
    {
        int $i0;
        byte[] $r1;
        l.h r0;

        r0 := @this: l.h;

        $r1 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r1;
        l.h r0, $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: l.h;

        $r2 := @parameter0: java.lang.Object;

        if $r2 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof l.h;

        if $z0 == 0 goto label2;

        $r3 = (l.h) $r2;

        $i1 = virtualinvoke $r3.<l.h: int e()>();

        $r1 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label2;

        $i0 = lengthof $r1;

        $z0 = virtualinvoke $r3.<l.h: boolean a(int,byte[],int,int)>(0, $r1, 0, $i0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public l.h f()
    {
        byte[] $r2;
        l.h r0, $r3;
        byte $b2;
        int $i0, $i1, $i3;
        java.lang.Object $r1;

        r0 := @this: l.h;

        $i0 = 0;

     label1:
        $r2 = r0.<l.h: byte[] c>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label8;

        $b2 = $r2[$i0];

        $i1 = (int) $b2;

        if $i1 < 65 goto label7;

        $i1 = (int) $b2;

        if $i1 <= 90 goto label2;

        goto label7;

     label2:
        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r1;

        $i1 = $i0 + 1;

        $i3 = (int) $b2;

        $i3 = $i3 + 32;

        $b2 = (byte) $i3;

        $r2[$i0] = $b2;

     label3:
        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label6;

        $b2 = $r2[$i1];

        $i0 = (int) $b2;

        if $i0 < 65 goto label5;

        $i0 = (int) $b2;

        if $i0 <= 90 goto label4;

        goto label5;

     label4:
        $i0 = (int) $b2;

        $i0 = $i0 + 32;

        $b2 = (byte) $i0;

        $r2[$i1] = $b2;

     label5:
        $i1 = $i1 + 1;

        goto label3;

     label6:
        $r3 = new l.h;

        specialinvoke $r3.<l.h: void <init>(byte[])>($r2);

        return $r3;

     label7:
        $i0 = $i0 + 1;

        goto label1;

     label8:
        return r0;
    }

    public byte[] g()
    {
        byte[] $r2;
        java.lang.Object $r1;
        l.h r0;

        r0 := @this: l.h;

        $r2 = r0.<l.h: byte[] c>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r1;

        return $r2;
    }

    public java.lang.String h()
    {
        byte[] $r1;
        java.nio.charset.Charset $r2;
        l.h r0;
        java.lang.String $r3;

        r0 := @this: l.h;

        $r3 = r0.<l.h: java.lang.String e>;

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r3 = new java.lang.String;

        $r1 = r0.<l.h: byte[] c>;

        $r2 = <l.A: java.nio.charset.Charset a>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r1, $r2);

        r0.<l.h: java.lang.String e> = $r3;

        return $r3;
    }

    public int hashCode()
    {
        int $i0;
        byte[] $r1;
        l.h r0;

        r0 := @this: l.h;

        $i0 = r0.<l.h: int d>;

        if $i0 == 0 goto label1;

        return $i0;

     label1:
        $r1 = r0.<l.h: byte[] c>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        r0.<l.h: int d> = $i0;

        return $i0;
    }

    public java.lang.String toString()
    {
        byte[] $r1;
        l.h r0;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r2, $r4;

        r0 := @this: l.h;

        $r1 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return "[size=0]";

     label1:
        $r2 = virtualinvoke r0.<l.h: java.lang.String h()>();

        $i0 = staticinvoke <l.h: int a(java.lang.String,int)>($r2, 64);

        $i1 = -1;

        if $i0 != $i1 goto label3;

        $r1 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r1;

        if $i0 > 64 goto label2;

        $r5 = new java.lang.StringBuilder;

        $r3 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[hex=");

        $r2 = virtualinvoke r0.<l.h: java.lang.String b()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r5 = new java.lang.StringBuilder;

        $r3 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[size=");

        $r1 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hex=");

        r0 = virtualinvoke r0.<l.h: l.h a(int,int)>(0, 64);

        $r2 = virtualinvoke r0.<l.h: java.lang.String b()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u2026]");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "\\\\");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "\\n");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "\\r");

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label4;

        $r5 = new java.lang.StringBuilder;

        $r3 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[size=");

        $r1 = r0.<l.h: byte[] c>;

        $i0 = lengthof $r1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" text=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u2026]");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label4:
        $r5 = new java.lang.StringBuilder;

        $r3 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[text=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
