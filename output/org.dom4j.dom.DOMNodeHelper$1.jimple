public class org.dom4j.dom.DOMNodeHelper$1 extends java.lang.Object implements org.w3c.dom.NodeList
{
    public final java.util.List val$list;

    public void <init>(java.util.List)
    {
        java.util.List $r1;
        org.dom4j.dom.DOMNodeHelper$1 r0;

        r0 := @this: org.dom4j.dom.DOMNodeHelper$1;

        $r1 := @parameter0: java.util.List;

        r0.<org.dom4j.dom.DOMNodeHelper$1: java.util.List val$list> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getLength()
    {
        int $i0;
        java.util.List $r1;
        org.dom4j.dom.DOMNodeHelper$1 r0;

        r0 := @this: org.dom4j.dom.DOMNodeHelper$1;

        $r1 = r0.<org.dom4j.dom.DOMNodeHelper$1: java.util.List val$list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.w3c.dom.Node item(int)
    {
        java.util.List $r1;
        org.dom4j.dom.DOMNodeHelper$1 r0;
        org.dom4j.Node $r3;
        org.w3c.dom.Node $r4;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: org.dom4j.dom.DOMNodeHelper$1;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.dom4j.dom.DOMNodeHelper$1: int getLength()>();

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r1 = r0.<org.dom4j.dom.DOMNodeHelper$1: java.util.List val$list>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.dom4j.Node) $r2;

        $r4 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Node asDOMNode(org.dom4j.Node)>($r3);

        return $r4;
    }
}
