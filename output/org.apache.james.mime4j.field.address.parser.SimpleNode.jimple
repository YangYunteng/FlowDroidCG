public class org.apache.james.mime4j.field.address.parser.SimpleNode extends org.apache.james.mime4j.field.address.parser.BaseNode implements org.apache.james.mime4j.field.address.parser.Node
{
    public org.apache.james.mime4j.field.address.parser.Node[] children;
    public int id;
    public org.apache.james.mime4j.field.address.parser.Node parent;
    public org.apache.james.mime4j.field.address.parser.AddressListParser parser;

    public void <init>(int)
    {
        int $i0;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.james.mime4j.field.address.parser.BaseNode: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: int id> = $i0;

        return;
    }

    public void <init>(org.apache.james.mime4j.field.address.parser.AddressListParser, int)
    {
        int $i0;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.AddressListParser $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.AddressListParser;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: void <init>(int)>($i0);

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.AddressListParser parser> = $r1;

        return;
    }

    public java.lang.Object childrenAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor, java.lang.Object)
    {
        org.apache.james.mime4j.field.address.parser.Node[] $r3;
        org.apache.james.mime4j.field.address.parser.AddressListParserVisitor $r1;
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.Node $r4;
        java.lang.Object $r2;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.AddressListParserVisitor;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r3 == null goto label2;

        $i1 = 0;

     label1:
        $r3 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i0 = lengthof $r3;

        if $i1 >= $i0 goto label2;

        $r4 = $r3[$i1];

        interfaceinvoke $r4.<org.apache.james.mime4j.field.address.parser.Node: java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object)>($r1, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public void dump(java.lang.String)
    {
        java.io.PrintStream $r2;
        org.apache.james.mime4j.field.address.parser.Node[] $r4;
        org.apache.james.mime4j.field.address.parser.Node $r5;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0, $r6;
        int $i0, $i1;
        java.lang.StringBuilder $r7;
        java.lang.String $r1, $r3;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: java.lang.String toString(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r4 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r4 == null goto label3;

        $i0 = 0;

     label1:
        $r4 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

        $r5 = $r4[$i0];

        $r6 = (org.apache.james.mime4j.field.address.parser.SimpleNode) $r5;

        if $r6 == null goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.james.mime4j.field.address.parser.SimpleNode: void dump(java.lang.String)>($r3);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor, java.lang.Object)
    {
        java.lang.Object $r1;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.AddressListParserVisitor $r2;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r2 := @parameter0: org.apache.james.mime4j.field.address.parser.AddressListParserVisitor;

        $r1 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke $r2.<org.apache.james.mime4j.field.address.parser.AddressListParserVisitor: java.lang.Object visit(org.apache.james.mime4j.field.address.parser.SimpleNode,java.lang.Object)>(r0, $r1);

        return $r1;
    }

    public void jjtAddChild(org.apache.james.mime4j.field.address.parser.Node, int)
    {
        org.apache.james.mime4j.field.address.parser.Node[] $r2, $r3;
        org.apache.james.mime4j.field.address.parser.Node $r1;
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        $i0 := @parameter1: int;

        $r2 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r2 != null goto label1;

        $i1 = $i0 + 1;

        $r2 = newarray (org.apache.james.mime4j.field.address.parser.Node)[$i1];

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children> = $r2;

        goto label2;

     label1:
        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        $i1 = $i0 + 1;

        $r3 = newarray (org.apache.james.mime4j.field.address.parser.Node)[$i1];

        $i1 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i1);

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children> = $r3;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r2[$i0] = $r1;

        return;
    }

    public void jjtClose()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        return;
    }

    public org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int)
    {
        org.apache.james.mime4j.field.address.parser.Node[] $r1;
        int $i0;
        org.apache.james.mime4j.field.address.parser.Node $r2;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public int jjtGetNumChildren()
    {
        int $i0;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.Node[] $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = lengthof $r1;

        return $i0;
    }

    public org.apache.james.mime4j.field.address.parser.Node jjtGetParent()
    {
        org.apache.james.mime4j.field.address.parser.Node r1;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node parent>;

        return r1;
    }

    public void jjtOpen()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        return;
    }

    public void jjtSetParent(org.apache.james.mime4j.field.address.parser.Node)
    {
        org.apache.james.mime4j.field.address.parser.Node $r1;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node parent> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 = <org.apache.james.mime4j.field.address.parser.AddressListParserTreeConstants: java.lang.String[] jjtNodeName>;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: int id>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.String toString(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r2 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
