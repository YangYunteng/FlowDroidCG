public final class com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher extends com.google.common.hash.AbstractHasher
{
    public final com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream;
    public final com.google.common.hash.AbstractNonStreamingHashFunction this$0;

    public void <init>(com.google.common.hash.AbstractNonStreamingHashFunction, int)
    {
        com.google.common.hash.AbstractNonStreamingHashFunction $r1;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream $r2;
        int $i0;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $r1 := @parameter0: com.google.common.hash.AbstractNonStreamingHashFunction;

        $i0 := @parameter1: int;

        r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction this$0> = $r1;

        specialinvoke r0.<com.google.common.hash.AbstractHasher: void <init>()>();

        $r2 = new com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream;

        specialinvoke $r2.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: void <init>(int)>($i0);

        r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream> = $r2;

        return;
    }

    public com.google.common.hash.HashCode hash()
    {
        byte[] $r3;
        com.google.common.hash.AbstractNonStreamingHashFunction $r1;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream $r2;
        com.google.common.hash.HashCode $r4;
        int $i0;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $r1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction this$0>;

        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream>;

        $r3 = virtualinvoke $r2.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: byte[] byteArray()>();

        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream>;

        $i0 = virtualinvoke $r2.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int length()>();

        $r4 = virtualinvoke $r1.<com.google.common.hash.AbstractNonStreamingHashFunction: com.google.common.hash.HashCode hashBytes(byte[],int,int)>($r3, 0, $i0);

        return $r4;
    }

    public com.google.common.hash.Hasher putByte(byte)
    {
        byte $b0;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream $r1;
        int $i1;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $b0 := @parameter0: byte;

        $r1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream>;

        $i1 = (int) $b0;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i1);

        return r0;
    }

    public volatile com.google.common.hash.PrimitiveSink putByte(byte)
    {
        com.google.common.hash.Hasher $r1;
        byte $b0;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $b0 := @parameter0: byte;

        $r1 = virtualinvoke r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.Hasher putByte(byte)>($b0);

        return $r1;
    }

    public com.google.common.hash.Hasher putBytes(java.nio.ByteBuffer)
    {
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream $r2;
        java.nio.ByteBuffer $r1;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream>;

        virtualinvoke $r2.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: void write(java.nio.ByteBuffer)>($r1);

        return r0;
    }

    public com.google.common.hash.Hasher putBytes(byte[], int, int)
    {
        byte[] $r1;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream $r2;
        int $i0, $i1;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream stream>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return r0;
    }

    public volatile com.google.common.hash.PrimitiveSink putBytes(java.nio.ByteBuffer)
    {
        com.google.common.hash.Hasher $r1;
        java.nio.ByteBuffer $r2;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $r2 := @parameter0: java.nio.ByteBuffer;

        $r1 = virtualinvoke r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.Hasher putBytes(java.nio.ByteBuffer)>($r2);

        return $r1;
    }

    public volatile com.google.common.hash.PrimitiveSink putBytes(byte[], int, int)
    {
        byte[] $r2;
        int $i0, $i1;
        com.google.common.hash.Hasher $r1;
        com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher;

        $r2 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher: com.google.common.hash.Hasher putBytes(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }
}
