public final class com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream extends java.io.FilterInputStream
{
    public int limit;

    public void <init>(java.io.InputStream, int)
    {
        int $i0;
        com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i0;

        return;
    }

    public int available()
    {
        int $i0, $i1;
        com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;

        r0 := @this: com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $i1 = specialinvoke r0.<java.io.FilterInputStream: int available()>();

        $i0 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        return $i0;
    }

    public int read()
    {
        com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $i0 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        if $i0 > 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        if $i0 < 0 goto label2;

        $i1 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $i2 = -1;

        $i1 = $i1 + $i2;

        r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i1;

     label2:
        return $i0;
    }

    public int read(byte[], int, int)
    {
        byte[] $r1;
        com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        if $i0 > 0 goto label1;

        $i1 = -1;

        return $i1;

     label1:
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        $i1 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>($r1, $i1, $i2);

        if $i1 < 0 goto label2;

        $i2 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $i2 = $i2 - $i1;

        r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i2;

     label2:
        return $i1;
    }

    public long skip(long)
    {
        byte $b1;
        com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream r0;
        int $i0;
        long $l2, $l3;

        r0 := @this: com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream;

        $l2 := @parameter0: long;

        $i0 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $l3 = (long) $i0;

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l3);

        $l2 = specialinvoke r0.<java.io.FilterInputStream: long skip(long)>($l2);

        $b1 = $l2 cmp 0L;

        $i0 = (int) $b1;

        if $i0 < 0 goto label1;

        $i0 = r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit>;

        $l3 = (long) $i0;

        $l3 = $l3 - $l2;

        $i0 = (int) $l3;

        r0.<com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream: int limit> = $i0;

     label1:
        return $l2;
    }
}
