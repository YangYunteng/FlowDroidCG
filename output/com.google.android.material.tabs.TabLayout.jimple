public class com.google.android.material.tabs.TabLayout extends android.widget.HorizontalScrollView
{
    public static final int ANIMATION_DURATION;
    public static final int DEFAULT_GAP_TEXT_ICON;
    public static final int DEFAULT_HEIGHT;
    public static final int DEFAULT_HEIGHT_WITH_TEXT_ICON;
    public static final int DEF_STYLE_RES;
    public static final int FIXED_WRAP_GUTTER_MIN;
    public static final int GRAVITY_CENTER;
    public static final int GRAVITY_FILL;
    public static final int GRAVITY_START;
    public static final int INDICATOR_GRAVITY_BOTTOM;
    public static final int INDICATOR_GRAVITY_CENTER;
    public static final int INDICATOR_GRAVITY_STRETCH;
    public static final int INDICATOR_GRAVITY_TOP;
    public static final int INVALID_WIDTH;
    public static final java.lang.String LOG_TAG;
    public static final int MIN_INDICATOR_WIDTH;
    public static final int MODE_AUTO;
    public static final int MODE_FIXED;
    public static final int MODE_SCROLLABLE;
    public static final int TAB_LABEL_VISIBILITY_LABELED;
    public static final int TAB_LABEL_VISIBILITY_UNLABELED;
    public static final int TAB_MIN_WIDTH_MARGIN;
    public static final b.i.h.e tabPool;
    public com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener;
    public int contentInsetStart;
    public com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener currentVpSelectedListener;
    public boolean inlineLabel;
    public int mode;
    public com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener;
    public b.z.a.a pagerAdapter;
    public android.database.DataSetObserver pagerAdapterObserver;
    public final int requestedTabMaxWidth;
    public final int requestedTabMinWidth;
    public android.animation.ValueAnimator scrollAnimator;
    public final int scrollableTabMinWidth;
    public com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener selectedListener;
    public final java.util.ArrayList selectedListeners;
    public com.google.android.material.tabs.TabLayout$Tab selectedTab;
    public boolean setupViewPagerImplicitly;
    public final com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator;
    public final int tabBackgroundResId;
    public int tabGravity;
    public android.content.res.ColorStateList tabIconTint;
    public android.graphics.PorterDuff$Mode tabIconTintMode;
    public int tabIndicatorAnimationDuration;
    public boolean tabIndicatorFullWidth;
    public int tabIndicatorGravity;
    public int tabMaxWidth;
    public int tabPaddingBottom;
    public int tabPaddingEnd;
    public int tabPaddingStart;
    public int tabPaddingTop;
    public android.content.res.ColorStateList tabRippleColorStateList;
    public android.graphics.drawable.Drawable tabSelectedIndicator;
    public int tabTextAppearance;
    public android.content.res.ColorStateList tabTextColors;
    public float tabTextMultiLineSize;
    public float tabTextSize;
    public final android.graphics.RectF tabViewContentBounds;
    public final b.i.h.e tabViewPool;
    public final java.util.ArrayList tabs;
    public boolean unboundedRipple;
    public androidx.viewpager.widget.ViewPager viewPager;

    static void <clinit>()
    {
        int $i0;
        b.i.h.g $r0;

        <com.google.android.material.tabs.TabLayout: int TAB_MIN_WIDTH_MARGIN> = 56;

        <com.google.android.material.tabs.TabLayout: int TAB_LABEL_VISIBILITY_UNLABELED> = 0;

        <com.google.android.material.tabs.TabLayout: int TAB_LABEL_VISIBILITY_LABELED> = 1;

        <com.google.android.material.tabs.TabLayout: int MODE_SCROLLABLE> = 0;

        <com.google.android.material.tabs.TabLayout: int MODE_FIXED> = 1;

        <com.google.android.material.tabs.TabLayout: int MODE_AUTO> = 2;

        <com.google.android.material.tabs.TabLayout: int MIN_INDICATOR_WIDTH> = 24;

        <com.google.android.material.tabs.TabLayout: java.lang.String LOG_TAG> = "TabLayout";

        <com.google.android.material.tabs.TabLayout: int INVALID_WIDTH> = -1;

        <com.google.android.material.tabs.TabLayout: int INDICATOR_GRAVITY_TOP> = 2;

        <com.google.android.material.tabs.TabLayout: int INDICATOR_GRAVITY_STRETCH> = 3;

        <com.google.android.material.tabs.TabLayout: int INDICATOR_GRAVITY_CENTER> = 1;

        <com.google.android.material.tabs.TabLayout: int INDICATOR_GRAVITY_BOTTOM> = 0;

        <com.google.android.material.tabs.TabLayout: int GRAVITY_START> = 2;

        <com.google.android.material.tabs.TabLayout: int GRAVITY_FILL> = 0;

        <com.google.android.material.tabs.TabLayout: int GRAVITY_CENTER> = 1;

        <com.google.android.material.tabs.TabLayout: int FIXED_WRAP_GUTTER_MIN> = 16;

        <com.google.android.material.tabs.TabLayout: int DEFAULT_HEIGHT_WITH_TEXT_ICON> = 72;

        <com.google.android.material.tabs.TabLayout: int DEFAULT_HEIGHT> = 48;

        <com.google.android.material.tabs.TabLayout: int DEFAULT_GAP_TEXT_ICON> = 8;

        <com.google.android.material.tabs.TabLayout: int ANIMATION_DURATION> = 300;

        $i0 = <com.google.android.material.R$style: int Widget_Design_TabLayout>;

        <com.google.android.material.tabs.TabLayout: int DEF_STYLE_RES> = $i0;

        $r0 = new b.i.h.g;

        specialinvoke $r0.<b.i.h.g: void <init>(int)>(16);

        <com.google.android.material.tabs.TabLayout: b.i.h.e tabPool> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int tabStyle>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r4, $r18;
        java.lang.Throwable $r14;
        android.content.Context $r2;
        android.graphics.drawable.ColorDrawable $r8;
        android.graphics.drawable.Drawable $r7;
        android.content.res.TypedArray $r6, $r11;
        java.util.ArrayList $r15;
        android.content.res.ColorStateList $r10;
        android.util.AttributeSet $r3;
        int[] $r1, $r5;
        int $i0, $i1, $i2;
        android.widget.FrameLayout$LayoutParams $r19;
        boolean $z0;
        android.graphics.RectF $r16;
        com.google.android.material.tabs.TabLayout r0;
        android.graphics.PorterDuff$Mode $r12;
        com.google.android.material.shape.MaterialShapeDrawable $r9, $r20;
        b.i.h.f $r17;
        float $f0;
        android.content.res.Resources $r13;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.tabs.TabLayout: int DEF_STYLE_RES>;

        $r2 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r2, $r3, $i1, $i0);

        specialinvoke r0.<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r3, $i1);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs> = $r15;

        $r16 = new android.graphics.RectF;

        specialinvoke $r16.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout: android.graphics.RectF tabViewContentBounds> = $r16;

        r0.<com.google.android.material.tabs.TabLayout: int tabMaxWidth> = 2147483647;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners> = $r15;

        $r17 = new b.i.h.f;

        specialinvoke $r17.<b.i.h.f: void <init>(int)>(12);

        r0.<com.google.android.material.tabs.TabLayout: b.i.h.e tabViewPool> = $r17;

        $r2 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        virtualinvoke r0.<android.widget.HorizontalScrollView: void setHorizontalScrollBarEnabled(boolean)>(0);

        $r18 = new com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        specialinvoke $r18.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>(r0, $r2);

        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator> = $r18;

        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r19 = new android.widget.FrameLayout$LayoutParams;

        $i0 = -2;

        $i2 = -1;

        specialinvoke $r19.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i0, $i2);

        specialinvoke r0.<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r4, 0, $r19);

        $r5 = <com.google.android.material.R$styleable: int[] TabLayout>;

        $i0 = <com.google.android.material.tabs.TabLayout: int DEF_STYLE_RES>;

        $r1 = newarray (int)[1];

        $i2 = <com.google.android.material.R$styleable: int TabLayout_tabTextAppearance>;

        $r1[0] = $i2;

        $r6 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r2, $r3, $r5, $i1, $i0, $r1);

        $r7 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.graphics.drawable.Drawable getBackground()>();

        $z0 = $r7 instanceof android.graphics.drawable.ColorDrawable;

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.graphics.drawable.Drawable getBackground()>();

        $r8 = (android.graphics.drawable.ColorDrawable) $r7;

        $r20 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r9 = $r20;

        specialinvoke $r20.<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>();

        $i1 = virtualinvoke $r8.<android.graphics.drawable.ColorDrawable: int getColor()>();

        $r10 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i1);

        virtualinvoke $r9.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r10);

        virtualinvoke $r9.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r2);

        $f0 = staticinvoke <b.i.i.y: float l(android.view.View)>(r0);

        virtualinvoke $r9.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>(r0, $r9);

     label1:
        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIndicatorHeight>;

        $i0 = -1;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        virtualinvoke $r4.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setSelectedIndicatorHeight(int)>($i1);

        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIndicatorColor>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        virtualinvoke $r4.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setSelectedIndicatorColor(int)>($i1);

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIndicator>;

        $r7 = staticinvoke <com.google.android.material.resources.MaterialResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int)>($r2, $r6, $i1);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)>($r7);

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIndicatorGravity>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>($i1, 0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorGravity(int)>($i1);

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIndicatorFullWidth>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 1);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setTabIndicatorFullWidth(boolean)>($z0);

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabPadding>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingBottom> = $i1;

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingEnd> = $i1;

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingTop> = $i1;

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingStart> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabPaddingStart>;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabPaddingStart>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingStart> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabPaddingTop>;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabPaddingTop>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingTop> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabPaddingEnd>;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabPaddingEnd>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingEnd> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabPaddingBottom>;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabPaddingBottom>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int tabPaddingBottom> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabTextAppearance>;

        $i0 = <com.google.android.material.R$style: int TextAppearance_Design_Tab>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int tabTextAppearance> = $i1;

        $i1 = r0.<com.google.android.material.tabs.TabLayout: int tabTextAppearance>;

        $r1 = <b.b.j: int[] TextAppearance>;

        $r11 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i1, $r1);

     label2:
        $i1 = <b.b.j: int TextAppearance_android_textSize>;

        $i1 = virtualinvoke $r11.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

     label3:
        $f0 = (float) $i1;

     label4:
        r0.<com.google.android.material.tabs.TabLayout: float tabTextSize> = $f0;

        $i1 = <b.b.j: int TextAppearance_android_textColor>;

        $r10 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r2, $r11, $i1);

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors> = $r10;

     label5:
        virtualinvoke $r11.<android.content.res.TypedArray: void recycle()>();

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabTextColor>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label6;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabTextColor>;

        $r10 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r2, $r6, $i1);

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors> = $r10;

     label6:
        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabSelectedTextColor>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label7;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabSelectedTextColor>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        $r10 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors>;

        $i0 = virtualinvoke $r10.<android.content.res.ColorStateList: int getDefaultColor()>();

        $r10 = staticinvoke <com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList createColorStateList(int,int)>($i0, $i1);

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors> = $r10;

     label7:
        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIconTint>;

        $r10 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r2, $r6, $i1);

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabIconTint> = $r10;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIconTintMode>;

        $i0 = -1;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>($i1, $i0);

        $r12 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i1, null);

        r0.<com.google.android.material.tabs.TabLayout: android.graphics.PorterDuff$Mode tabIconTintMode> = $r12;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabRippleColor>;

        $r10 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r2, $r6, $i1);

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabRippleColorStateList> = $r10;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabIndicatorAnimationDuration>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>($i1, 300);

        r0.<com.google.android.material.tabs.TabLayout: int tabIndicatorAnimationDuration> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabMinWidth>;

        $i0 = -1;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int requestedTabMinWidth> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabMaxWidth>;

        $i0 = -1;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);

        r0.<com.google.android.material.tabs.TabLayout: int requestedTabMaxWidth> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabBackground>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, 0);

        r0.<com.google.android.material.tabs.TabLayout: int tabBackgroundResId> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabContentStart>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        r0.<com.google.android.material.tabs.TabLayout: int contentInsetStart> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabMode>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>($i1, 1);

        r0.<com.google.android.material.tabs.TabLayout: int mode> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabGravity>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>($i1, 0);

        r0.<com.google.android.material.tabs.TabLayout: int tabGravity> = $i1;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabInlineLabel>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.tabs.TabLayout: boolean inlineLabel> = $z0;

        $i1 = <com.google.android.material.R$styleable: int TabLayout_tabUnboundedRipple>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.tabs.TabLayout: boolean unboundedRipple> = $z0;

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r13 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int design_tab_text_size_2line>;

        $i1 = virtualinvoke $r13.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $f0 = (float) $i1;

        r0.<com.google.android.material.tabs.TabLayout: float tabTextMultiLineSize> = $f0;

        $i1 = <com.google.android.material.R$dimen: int design_tab_scrollable_min_width>;

        $i1 = virtualinvoke $r13.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        r0.<com.google.android.material.tabs.TabLayout: int scrollableTabMinWidth> = $i1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void applyModeAndGravity()>();

        return;

     label8:
        $r14 := @caughtexception;

        virtualinvoke $r11.<android.content.res.TypedArray: void recycle()>();

        throw $r14;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }

    public static android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)
    {
        android.graphics.RectF r1;
        com.google.android.material.tabs.TabLayout $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout;

        r1 = $r0.<com.google.android.material.tabs.TabLayout: android.graphics.RectF tabViewContentBounds>;

        return r1;
    }

    private void addTabFromItemView(com.google.android.material.tabs.TabItem)
    {
        com.google.android.material.tabs.TabLayout$Tab $r2;
        java.lang.CharSequence $r3;
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabItem $r1;
        int $i0;
        android.graphics.drawable.Drawable $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabItem;

        $r2 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab newTab()>();

        $r3 = $r1.<com.google.android.material.tabs.TabItem: java.lang.CharSequence text>;

        if $r3 == null goto label1;

        virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence)>($r3);

     label1:
        $r4 = $r1.<com.google.android.material.tabs.TabItem: android.graphics.drawable.Drawable icon>;

        if $r4 == null goto label2;

        virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable)>($r4);

     label2:
        $i0 = $r1.<com.google.android.material.tabs.TabItem: int customLayout>;

        if $i0 == 0 goto label3;

        virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setCustomView(int)>($i0);

     label3:
        $r3 = virtualinvoke $r1.<android.view.View: java.lang.CharSequence getContentDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label4;

        $r3 = virtualinvoke $r1.<android.view.View: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence)>($r3);

     label4:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab)>($r2);

        return;
    }

    private void addTabView(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r3;
        com.google.android.material.tabs.TabLayout$Tab $r2;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        android.widget.LinearLayout$LayoutParams $r4;
        com.google.android.material.tabs.TabLayout$TabView $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r1 = $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$TabView: void setSelected(boolean)>(0);

        virtualinvoke $r1.<android.widget.LinearLayout: void setActivated(boolean)>(0);

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i0 = virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        $r4 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs()>();

        virtualinvoke $r3.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r4);

        return;
    }

    private void addViewInternal(android.view.View)
    {
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabItem $r2;
        android.view.View $r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof com.google.android.material.tabs.TabItem;

        if $z0 == 0 goto label1;

        $r2 = (com.google.android.material.tabs.TabItem) $r1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void addTabFromItemView(com.google.android.material.tabs.TabItem)>($r2);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only TabItem instances can be added to TabLayout");

        throw $r3;
    }

    private void animateToTab(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r3;
        com.google.android.material.tabs.TabLayout r0;
        android.os.IBinder $r2;
        int[] $r4;
        int $i0, $i1, $i2;
        android.animation.ValueAnimator $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.os.IBinder getWindowToken()>();

        if $r2 == null goto label4;

        $z0 = staticinvoke <b.i.i.y: boolean E(android.view.View)>(r0);

        if $z0 == 0 goto label4;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $z0 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: boolean childrenNeedLayout()>();

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $i1 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getScrollX()>();

        $i2 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: int calculateScrollXForTab(int,float)>($i0, 0.0F);

        if $i1 == $i2 goto label3;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void ensureScrollAnimator()>();

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        $r4 = newarray (int)[2];

        $r4[0] = $i1;

        $r4[1] = $i2;

        virtualinvoke $r1.<android.animation.ValueAnimator: void setIntValues(int[])>($r4);

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void start()>();

     label3:
        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = r0.<com.google.android.material.tabs.TabLayout: int tabIndicatorAnimationDuration>;

        virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void animateIndicatorToPosition(int,int)>($i0, $i1);

        return;

     label4:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setScrollPosition(int,float,boolean)>($i0, 0.0F, 1);

        return;
    }

    private void applyGravityForModeScrollable(int)
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        if $i0 == 2 goto label3;

        return;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setGravity(int)>(1);

        return;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TabLayout", "MODE_SCROLLABLE + GRAVITY_FILL is not supported, GRAVITY_START will be used instead");

     label3:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setGravity(int)>(8388611);

        return;
    }

    private void applyModeAndGravity()
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 == 0 goto label2;

        if $i0 != 2 goto label1;

        goto label2;

     label1:
        $i0 = 0;

        goto label3;

     label2:
        $i0 = r0.<com.google.android.material.tabs.TabLayout: int contentInsetStart>;

        $i1 = r0.<com.google.android.material.tabs.TabLayout: int tabPaddingStart>;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

     label3:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        staticinvoke <b.i.i.y: void b(android.view.View,int,int,int,int)>($r1, $i0, 0, 0, 0);

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 == 0 goto label6;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label4;

        goto label7;

     label4:
        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        if $i0 != 2 goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TabLayout", "GRAVITY_START is not supported with the current tab mode, GRAVITY_CENTER will be used instead");

     label5:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setGravity(int)>(1);

        goto label7;

     label6:
        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void applyGravityForModeScrollable(int)>($i0);

     label7:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void updateTabViews(boolean)>(1);

        return;
    }

    private int calculateScrollXForTab(int, float)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.view.View $r2, $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        $i2 = 0;

        if $i1 == 0 goto label2;

        if $i1 != 2 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $i0 = $i0 + 1;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        goto label4;

     label3:
        $r3 = null;

     label4:
        if $r2 == null goto label5;

        $i0 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        goto label6;

     label5:
        $i0 = 0;

     label6:
        if $r3 == null goto label7;

        $i2 = virtualinvoke $r3.<android.view.View: int getWidth()>();

     label7:
        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i3 = $i0 / 2;

        $i1 = $i1 + $i3;

        $i3 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getWidth()>();

        $i3 = $i3 / 2;

        $i1 = $i1 - $i3;

        $i0 = $i0 + $i2;

        $f1 = (float) $i0;

        $f1 = $f1 * 0.5F;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        $i2 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i2 != 0 goto label8;

        $i0 = $i1 + $i0;

        return $i0;

     label8:
        $i0 = $i1 - $i0;

        return $i0;
    }

    private void configureTab(com.google.android.material.tabs.TabLayout$Tab, int)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: void setPosition(int)>($i0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r1);

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label1:
        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r1 = (com.google.android.material.tabs.TabLayout$Tab) $r3;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: void setPosition(int)>($i0);

        goto label1;

     label2:
        return;
    }

    public static android.content.res.ColorStateList createColorStateList(int, int)
    {
        android.content.res.ColorStateList $r3;
        int[][] $r0;
        int[] $r1, $r2;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = newarray (int[])[2];

        $r1 = newarray (int)[2];

        $r2 = <android.widget.HorizontalScrollView: int[] SELECTED_STATE_SET>;

        $r0[0] = $r2;

        $r1[0] = $i1;

        $r2 = <android.widget.HorizontalScrollView: int[] EMPTY_STATE_SET>;

        $r0[1] = $r2;

        $r1[1] = $i0;

        $r3 = new android.content.res.ColorStateList;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r0, $r1);

        return $r3;
    }

    private android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs()
    {
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        android.widget.LinearLayout$LayoutParams $r1, $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        $r1 = $r2;

        $i0 = -2;

        $i1 = -1;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams)>($r1);

        return $r1;
    }

    private com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab)
    {
        android.content.Context $r5;
        java.lang.CharSequence $r6;
        com.google.android.material.tabs.TabLayout r0;
        b.i.h.e $r2;
        com.google.android.material.tabs.TabLayout$Tab $r1;
        int $i0;
        java.lang.Object $r3;
        com.google.android.material.tabs.TabLayout$TabView $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: b.i.h.e tabViewPool>;

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<b.i.h.e: java.lang.Object a()>();

        $r4 = (com.google.android.material.tabs.TabLayout$TabView) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        if $r4 != null goto label3;

        $r4 = new com.google.android.material.tabs.TabLayout$TabView;

        $r5 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        specialinvoke $r4.<com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>(r0, $r5);

     label3:
        virtualinvoke $r4.<com.google.android.material.tabs.TabLayout$TabView: void setTab(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        virtualinvoke $r4.<android.widget.LinearLayout: void setFocusable(boolean)>(1);

        $i0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: int getTabMinWidth()>();

        virtualinvoke $r4.<android.widget.LinearLayout: void setMinimumWidth(int)>($i0);

        $r6 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label4;

        $r6 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        virtualinvoke $r4.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>($r6);

        return $r4;

     label4:
        $r6 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        virtualinvoke $r4.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>($r6);

        return $r4;
    }

    private void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) $r3;

        interfaceinvoke $r4.<com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener: void onTabReselected(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return;
    }

    private void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) $r3;

        interfaceinvoke $r4.<com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener: void onTabSelected(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return;
    }

    private void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) $r3;

        interfaceinvoke $r4.<com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener: void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return;
    }

    private void ensureScrollAnimator()
    {
        android.animation.TimeInterpolator $r2;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        com.google.android.material.tabs.TabLayout$1 $r3;
        long $l1;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        if $r1 != null goto label1;

        $r1 = new android.animation.ValueAnimator;

        specialinvoke $r1.<android.animation.ValueAnimator: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator> = $r1;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        $r2 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r2);

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabIndicatorAnimationDuration>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l1);

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        $r3 = new com.google.android.material.tabs.TabLayout$1;

        specialinvoke $r3.<com.google.android.material.tabs.TabLayout$1: void <init>(com.google.android.material.tabs.TabLayout)>(r0);

        virtualinvoke $r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r3);

     label1:
        return;
    }

    private int getDefaultHeight()
    {
        java.lang.CharSequence $r5;
        com.google.android.material.tabs.TabLayout r0;
        android.graphics.drawable.Drawable $r4;
        java.util.ArrayList $r1;
        com.google.android.material.tabs.TabLayout$Tab $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $z0 = 0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.google.android.material.tabs.TabLayout$Tab) $r2;

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if $z0 == 0 goto label4;

        $z0 = r0.<com.google.android.material.tabs.TabLayout: boolean inlineLabel>;

        if $z0 != 0 goto label4;

        return 72;

     label4:
        return 48;
    }

    private int getTabMinWidth()
    {
        int $i0, $i1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int requestedTabMinWidth>;

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return $i0;

     label1:
        $i0 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 == 0 goto label3;

        if $i0 != 2 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        $i0 = r0.<com.google.android.material.tabs.TabLayout: int scrollableTabMinWidth>;

        return $i0;
    }

    private int getTabScrollRange()
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getWidth()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;
    }

    private void removeTabViewAt(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        b.i.h.e $r4;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        android.view.View $r2;
        com.google.android.material.tabs.TabLayout$TabView $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $r3 = (com.google.android.material.tabs.TabLayout$TabView) $r2;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<android.widget.LinearLayout: void removeViewAt(int)>($i0);

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$TabView: void reset()>();

        $r4 = r0.<com.google.android.material.tabs.TabLayout: b.i.h.e tabViewPool>;

        interfaceinvoke $r4.<b.i.h.e: boolean a(java.lang.Object)>($r3);

     label1:
        virtualinvoke r0.<android.widget.HorizontalScrollView: void requestLayout()>();

        return;
    }

    private void setSelectedTabView(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1, $i2;
        android.view.View $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label6;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i2);

        $z0 = 1;

        if $i2 != $i0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        virtualinvoke $r2.<android.view.View: void setSelected(boolean)>($z1);

        if $i2 != $i0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        virtualinvoke $r2.<android.view.View: void setActivated(boolean)>($z0);

        $i2 = $i2 + 1;

        goto label1;

     label6:
        return;
    }

    private void setupWithViewPager(androidx.viewpager.widget.ViewPager, boolean, boolean)
    {
        com.google.android.material.tabs.TabLayout r0;
        androidx.viewpager.widget.ViewPager $r1, $r2;
        com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener $r3;
        com.google.android.material.tabs.TabLayout$AdapterChangeListener $r4;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r5;
        int $i0;
        b.z.a.a $r7;
        com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: androidx.viewpager.widget.ViewPager;

        $z1 := @parameter1: boolean;

        $z0 := @parameter2: boolean;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: androidx.viewpager.widget.ViewPager viewPager>;

        if $r2 == null goto label2;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener>;

        if $r3 == null goto label1;

        virtualinvoke $r2.<androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$e)>($r3);

     label1:
        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener>;

        if $r4 == null goto label2;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: androidx.viewpager.widget.ViewPager viewPager>;

        virtualinvoke $r2.<androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$d)>($r4);

     label2:
        $r5 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener currentVpSelectedListener>;

        if $r5 == null goto label3;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r5);

        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener currentVpSelectedListener> = null;

     label3:
        if $r1 == null goto label7;

        r0.<com.google.android.material.tabs.TabLayout: androidx.viewpager.widget.ViewPager viewPager> = $r1;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener>;

        if $r3 != null goto label4;

        $r3 = new com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener;

        specialinvoke $r3.<com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener: void <init>(com.google.android.material.tabs.TabLayout)>(r0);

        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener> = $r3;

     label4:
        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener>;

        virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener: void reset()>();

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener>;

        virtualinvoke $r1.<androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$e)>($r3);

        $r6 = new com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener;

        specialinvoke $r6.<com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener: void <init>(androidx.viewpager.widget.ViewPager)>($r1);

        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener currentVpSelectedListener> = $r6;

        $r5 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener currentVpSelectedListener>;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r5);

        $r7 = virtualinvoke $r1.<androidx.viewpager.widget.ViewPager: b.z.a.a getAdapter()>();

        if $r7 == null goto label5;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setPagerAdapter(b.z.a.a,boolean)>($r7, $z1);

     label5:
        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener>;

        if $r4 != null goto label6;

        $r4 = new com.google.android.material.tabs.TabLayout$AdapterChangeListener;

        specialinvoke $r4.<com.google.android.material.tabs.TabLayout$AdapterChangeListener: void <init>(com.google.android.material.tabs.TabLayout)>(r0);

        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener> = $r4;

     label6:
        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener>;

        virtualinvoke $r4.<com.google.android.material.tabs.TabLayout$AdapterChangeListener: void setAutoRefresh(boolean)>($z1);

        $r4 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener>;

        virtualinvoke $r1.<androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$d)>($r4);

        $i0 = virtualinvoke $r1.<androidx.viewpager.widget.ViewPager: int getCurrentItem()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setScrollPosition(int,float,boolean)>($i0, 0.0F, 1);

        goto label8;

     label7:
        r0.<com.google.android.material.tabs.TabLayout: androidx.viewpager.widget.ViewPager viewPager> = null;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setPagerAdapter(b.z.a.a,boolean)>(null, 0);

     label8:
        r0.<com.google.android.material.tabs.TabLayout: boolean setupViewPagerImplicitly> = $z0;

        return;
    }

    private void updateAllTabs()
    {
        com.google.android.material.tabs.TabLayout$Tab $r3;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.google.android.material.tabs.TabLayout$Tab) $r2;

        virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: void updateView()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams)
    {
        int $i0;
        android.widget.LinearLayout$LayoutParams $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.widget.LinearLayout$LayoutParams;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 != 1 goto label1;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        if $i0 != 0 goto label1;

        $r1.<android.widget.LinearLayout$LayoutParams: int width> = 0;

        $r1.<android.widget.LinearLayout$LayoutParams: float weight> = 1.0F;

        return;

     label1:
        $i0 = -2;

        $r1.<android.widget.LinearLayout$LayoutParams: int width> = $i0;

        $r1.<android.widget.LinearLayout$LayoutParams: float weight> = 0.0F;

        return;
    }

    public void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)
    {
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
    {
        com.google.android.material.tabs.TabLayout$OnTabSelectedListener $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$OnTabSelectedListener;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r1);

        return;
    }

    public void addTab(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean)>($r1, $z0);

        return;
    }

    public void addTab(com.google.android.material.tabs.TabLayout$Tab, int)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean)>($r1, $i0, $z0);

        return;
    }

    public void addTab(com.google.android.material.tabs.TabLayout$Tab, int, boolean)
    {
        com.google.android.material.tabs.TabLayout$Tab $r2;
        com.google.android.material.tabs.TabLayout r0, $r1;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r1 != r0 goto label1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void configureTab(com.google.android.material.tabs.TabLayout$Tab,int)>($r2, $i0);

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void addTabView(com.google.android.material.tabs.TabLayout$Tab)>($r2);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: void select()>();

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab belongs to a different TabLayout.");

        throw $r3;

     label2:
        return;
    }

    public void addTab(com.google.android.material.tabs.TabLayout$Tab, boolean)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean)>($r1, $i0, $z0);

        return;
    }

    public void addView(android.view.View)
    {
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void addViewInternal(android.view.View)>($r1);

        return;
    }

    public void addView(android.view.View, int)
    {
        int $i0;
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void addViewInternal(android.view.View)>($r1);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.google.android.material.tabs.TabLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        android.view.View $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void addViewInternal(android.view.View)>($r1);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout r0;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void addViewInternal(android.view.View)>($r1);

        return;
    }

    public void clearOnTabSelectedListeners()
    {
        com.google.android.material.tabs.TabLayout r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public com.google.android.material.tabs.TabLayout$Tab createTabFromPool()
    {
        b.i.h.e $r2;
        com.google.android.material.tabs.TabLayout$Tab $r3;
        com.google.android.material.tabs.TabLayout r0;
        java.lang.Object $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 = <com.google.android.material.tabs.TabLayout: b.i.h.e tabPool>;

        $r1 = interfaceinvoke $r2.<b.i.h.e: java.lang.Object a()>();

        $r3 = (com.google.android.material.tabs.TabLayout$Tab) $r1;

        if $r3 != null goto label1;

        $r3 = new com.google.android.material.tabs.TabLayout$Tab;

        specialinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: void <init>()>();

     label1:
        return $r3;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.util.AttributeSet $r2;
        com.google.android.material.tabs.TabLayout r0;
        android.widget.FrameLayout$LayoutParams $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    public android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.util.AttributeSet $r2;
        com.google.android.material.tabs.TabLayout r0;
        android.widget.FrameLayout$LayoutParams $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    public int getSelectedTabPosition()
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab selectedTab>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public com.google.android.material.tabs.TabLayout$Tab getTabAt(int)
    {
        com.google.android.material.tabs.TabLayout$Tab $r3;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label2;

        $i1 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: int getTabCount()>();

        if $i0 < $i1 goto label1;

        goto label2;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.google.android.material.tabs.TabLayout$Tab) $r2;

        return $r3;

     label2:
        return null;
    }

    public int getTabCount()
    {
        int $i0;
        com.google.android.material.tabs.TabLayout r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public int getTabGravity()
    {
        int i0;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        i0 = r0.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        return i0;
    }

    public android.content.res.ColorStateList getTabIconTint()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        r1 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabIconTint>;

        return r1;
    }

    public int getTabIndicatorGravity()
    {
        int i0;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        i0 = r0.<com.google.android.material.tabs.TabLayout: int tabIndicatorGravity>;

        return i0;
    }

    public int getTabMaxWidth()
    {
        int i0;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        i0 = r0.<com.google.android.material.tabs.TabLayout: int tabMaxWidth>;

        return i0;
    }

    public int getTabMode()
    {
        int i0;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        i0 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        return i0;
    }

    public android.content.res.ColorStateList getTabRippleColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        r1 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabRippleColorStateList>;

        return r1;
    }

    public android.graphics.drawable.Drawable getTabSelectedIndicator()
    {
        com.google.android.material.tabs.TabLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        r1 = r0.<com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable tabSelectedIndicator>;

        return r1;
    }

    public android.content.res.ColorStateList getTabTextColors()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        r1 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors>;

        return r1;
    }

    public boolean hasUnboundedRipple()
    {
        com.google.android.material.tabs.TabLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        z0 = r0.<com.google.android.material.tabs.TabLayout: boolean unboundedRipple>;

        return z0;
    }

    public boolean isInlineLabel()
    {
        com.google.android.material.tabs.TabLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        z0 = r0.<com.google.android.material.tabs.TabLayout: boolean inlineLabel>;

        return z0;
    }

    public boolean isTabIndicatorFullWidth()
    {
        com.google.android.material.tabs.TabLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        z0 = r0.<com.google.android.material.tabs.TabLayout: boolean tabIndicatorFullWidth>;

        return z0;
    }

    public com.google.android.material.tabs.TabLayout$Tab newTab()
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$TabView $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab createTabFromPool()>();

        $r1.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent> = r0;

        $r2 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        $r1.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view> = $r2;

        return $r1;
    }

    public void onAttachedToWindow()
    {
        android.view.ViewParent $r1;
        com.google.android.material.tabs.TabLayout r0;
        androidx.viewpager.widget.ViewPager $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        specialinvoke r0.<android.widget.HorizontalScrollView: void onAttachedToWindow()>();

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View)>(r0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout: androidx.viewpager.widget.ViewPager viewPager>;

        if $r2 != null goto label1;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.view.ViewParent getParent()>();

        $z0 = $r1 instanceof androidx.viewpager.widget.ViewPager;

        if $z0 == 0 goto label1;

        $r2 = (androidx.viewpager.widget.ViewPager) $r1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean)>($r2, 1, 1);

     label1:
        return;
    }

    public void onDetachedFromWindow()
    {
        com.google.android.material.tabs.TabLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        specialinvoke r0.<android.widget.HorizontalScrollView: void onDetachedFromWindow()>();

        $z0 = r0.<com.google.android.material.tabs.TabLayout: boolean setupViewPagerImplicitly>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager)>(null);

        r0.<com.google.android.material.tabs.TabLayout: boolean setupViewPagerImplicitly> = 0;

     label1:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r2;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        android.view.View $r3;
        android.graphics.Canvas $r1;
        com.google.android.material.tabs.TabLayout$TabView $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = 0;

     label1:
        $r2 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r3 = virtualinvoke $r2.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r3 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z0 == 0 goto label2;

        $r4 = (com.google.android.material.tabs.TabLayout$TabView) $r3;

        staticinvoke <com.google.android.material.tabs.TabLayout$TabView: void access$300(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas)>($r4, $r1);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        specialinvoke r0.<android.widget.HorizontalScrollView: void onDraw(android.graphics.Canvas)>($r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        b.i.i.a.b $r2;
        b.i.i.a.b$b $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.HorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r2 = staticinvoke <b.i.i.a.b: b.i.i.a.b a(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $i0 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: int getTabCount()>();

        $r3 = staticinvoke <b.i.i.a.b$b: b.i.i.a.b$b a(int,int,boolean,int)>(1, $i0, 0, 1);

        virtualinvoke $r2.<b.i.i.a.b: void a(java.lang.Object)>($r3);

        return;
    }

    public void onMeasure(int, int)
    {
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout r0;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        $i2 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: int getDefaultHeight()>();

        $f0 = staticinvoke <com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)>($r1, $i2);

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $z0 = 0;

        if $i3 == -2147483648 goto label02;

        if $i3 == 0 goto label01;

        goto label03;

     label01:
        $i1 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getPaddingTop()>();

        $i1 = $i2 + $i1;

        $i2 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getPaddingBottom()>();

        $i1 = $i1 + $i2;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        goto label03;

     label02:
        $i3 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getChildCount()>();

        if $i3 != 1 goto label03;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i3 < $i2 goto label03;

        $r2 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.view.View getChildAt(int)>(0);

        virtualinvoke $r2.<android.view.View: void setMinimumHeight(int)>($i2);

     label03:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        if $i3 == 0 goto label06;

        $i3 = r0.<com.google.android.material.tabs.TabLayout: int requestedTabMaxWidth>;

        if $i3 <= 0 goto label04;

        goto label05;

     label04:
        $f0 = (float) $i2;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        $f1 = staticinvoke <com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)>($r1, 56);

        $f0 = $f0 - $f1;

        $i3 = (int) $f0;

     label05:
        r0.<com.google.android.material.tabs.TabLayout: int tabMaxWidth> = $i3;

     label06:
        specialinvoke r0.<android.widget.HorizontalScrollView: void onMeasure(int,int)>($i0, $i1);

        $i0 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getChildCount()>();

        if $i0 != 1 goto label11;

        $r2 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.view.View getChildAt(int)>(0);

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 == 0 goto label09;

        if $i0 == 1 goto label07;

        if $i0 == 2 goto label09;

        goto label10;

     label07:
        $i0 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i2 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getMeasuredWidth()>();

        if $i0 == $i2 goto label10;

     label08:
        $z0 = 1;

        goto label10;

     label09:
        $i0 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i2 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getMeasuredWidth()>();

        if $i0 >= $i2 goto label10;

        goto label08;

     label10:
        if $z0 == 0 goto label11;

        $i0 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getPaddingBottom()>();

        $i0 = $i0 + $i2;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = staticinvoke <android.widget.HorizontalScrollView: int getChildMeasureSpec(int,int,int)>($i1, $i0, $i2);

        $i1 = virtualinvoke r0.<android.widget.HorizontalScrollView: int getMeasuredWidth()>();

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i1, $i0);

     label11:
        return;
    }

    public void populateFromPagerAdapter()
    {
        com.google.android.material.tabs.TabLayout$Tab $r2;
        java.lang.CharSequence $r3;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        androidx.viewpager.widget.ViewPager $r4;
        b.z.a.a $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void removeAllTabs()>();

        $r1 = r0.<com.google.android.material.tabs.TabLayout: b.z.a.a pagerAdapter>;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<b.z.a.a: int a()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab newTab()>();

        $r1 = r0.<com.google.android.material.tabs.TabLayout: b.z.a.a pagerAdapter>;

        $r3 = virtualinvoke $r1.<b.z.a.a: java.lang.CharSequence a(int)>($i1);

        $r2 = virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence)>($r3);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean)>($r2, 0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.google.android.material.tabs.TabLayout: androidx.viewpager.widget.ViewPager viewPager>;

        if $r4 == null goto label3;

        if $i0 <= 0 goto label3;

        $i0 = virtualinvoke $r4.<androidx.viewpager.widget.ViewPager: int getCurrentItem()>();

        $i1 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()>();

        if $i0 == $i1 goto label3;

        $i1 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: int getTabCount()>();

        if $i0 >= $i1 goto label3;

        $r2 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab getTabAt(int)>($i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void selectTab(com.google.android.material.tabs.TabLayout$Tab)>($r2);

     label3:
        return;
    }

    public boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab)
    {
        b.i.h.e $r1;
        com.google.android.material.tabs.TabLayout$Tab $r2;
        com.google.android.material.tabs.TabLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r1 = <com.google.android.material.tabs.TabLayout: b.i.h.e tabPool>;

        $z0 = interfaceinvoke $r1.<b.i.h.e: boolean a(java.lang.Object)>($r2);

        return $z0;
    }

    public void removeAllTabs()
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        java.util.Iterator $r3;
        com.google.android.material.tabs.TabLayout r0;
        java.util.ArrayList $r2;
        com.google.android.material.tabs.TabLayout$Tab $r5;
        int $i0, $i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void removeTabViewAt(int)>($i0);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.android.material.tabs.TabLayout$Tab) $r4;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        virtualinvoke $r5.<com.google.android.material.tabs.TabLayout$Tab: void reset()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab)>($r5);

        goto label3;

     label4:
        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab selectedTab> = null;

        return;
    }

    public void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)
    {
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList selectedListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
    {
        com.google.android.material.tabs.TabLayout$OnTabSelectedListener $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$OnTabSelectedListener;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r1);

        return;
    }

    public void removeTab(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0, $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = $r1.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r2 != r0 goto label1;

        $i0 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void removeTabAt(int)>($i0);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab does not belong to this TabLayout.");

        throw $r3;
    }

    public void removeTabAt(int)
    {
        com.google.android.material.tabs.TabLayout r0;
        java.util.ArrayList $r2;
        com.google.android.material.tabs.TabLayout$Tab $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab selectedTab>;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void removeTabViewAt(int)>($i0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r1 = (com.google.android.material.tabs.TabLayout$Tab) $r3;

        if $r1 == null goto label3;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: void reset()>();

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab)>($r1);

     label3:
        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i3 = $i0;

     label4:
        if $i3 >= $i2 goto label5;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r1 = (com.google.android.material.tabs.TabLayout$Tab) $r3;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: void setPosition(int)>($i3);

        $i3 = $i3 + 1;

        goto label4;

     label5:
        if $i1 != $i0 goto label8;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r1 = null;

        goto label7;

     label6:
        $r2 = r0.<com.google.android.material.tabs.TabLayout: java.util.ArrayList tabs>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r1 = (com.google.android.material.tabs.TabLayout$Tab) $r3;

     label7:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void selectTab(com.google.android.material.tabs.TabLayout$Tab)>($r1);

     label8:
        return;
    }

    public void selectTab(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean)>($r1, 1);

        return;
    }

    public void selectTab(com.google.android.material.tabs.TabLayout$Tab, boolean)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1, $r2;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab selectedTab>;

        if $r1 != $r2 goto label1;

        if $r1 == null goto label9;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab)>($r2);

        $i0 = virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void animateToTab(int)>($i0);

        return;

     label1:
        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        goto label3;

     label2:
        $i0 = -1;

     label3:
        if $z0 == 0 goto label7;

        if $r1 == null goto label4;

        $i1 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        $i2 = -1;

        if $i1 != $i2 goto label5;

     label4:
        $i1 = -1;

        if $i0 == $i1 goto label5;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setScrollPosition(int,float,boolean)>($i0, 0.0F, 1);

        goto label6;

     label5:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void animateToTab(int)>($i0);

     label6:
        $i1 = -1;

        if $i0 == $i1 goto label7;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>($i0);

     label7:
        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab selectedTab> = $r2;

        if $r1 == null goto label8;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab)>($r1);

     label8:
        if $r2 == null goto label9;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab)>($r2);

     label9:
        return;
    }

    public void setElevation(float)
    {
        float $f0;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.HorizontalScrollView: void setElevation(float)>($f0);

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setElevation(android.view.View,float)>(r0, $f0);

        return;
    }

    public void setInlineLabel(boolean)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        android.view.View $r2;
        com.google.android.material.tabs.TabLayout$TabView $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.tabs.TabLayout: boolean inlineLabel>;

        if $z1 == $z0 goto label4;

        r0.<com.google.android.material.tabs.TabLayout: boolean inlineLabel> = $z0;

        $i0 = 0;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r2 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z0 == 0 goto label2;

        $r3 = (com.google.android.material.tabs.TabLayout$TabView) $r2;

        virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$TabView: void updateOrientation()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void applyModeAndGravity()>();

     label4:
        return;
    }

    public void setInlineLabelResource(int)
    {
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setInlineLabel(boolean)>($z0);

        return;
    }

    public void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)
    {
        com.google.android.material.tabs.TabLayout r0;
        com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener $r1, $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener selectedListener>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r2);

     label1:
        r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener selectedListener> = $r1;

        if $r1 == null goto label2;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r1);

     label2:
        return;
    }

    public void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
    {
        com.google.android.material.tabs.TabLayout$OnTabSelectedListener $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$OnTabSelectedListener;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>($r1);

        return;
    }

    public void setPagerAdapter(b.z.a.a, boolean)
    {
        com.google.android.material.tabs.TabLayout$PagerAdapterObserver $r4;
        com.google.android.material.tabs.TabLayout r0;
        b.z.a.a $r1, $r2;
        android.database.DataSetObserver $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: b.z.a.a;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: b.z.a.a pagerAdapter>;

        if $r2 == null goto label1;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: android.database.DataSetObserver pagerAdapterObserver>;

        if $r3 == null goto label1;

        virtualinvoke $r2.<b.z.a.a: void c(android.database.DataSetObserver)>($r3);

     label1:
        r0.<com.google.android.material.tabs.TabLayout: b.z.a.a pagerAdapter> = $r1;

        if $z0 == 0 goto label3;

        if $r1 == null goto label3;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: android.database.DataSetObserver pagerAdapterObserver>;

        if $r3 != null goto label2;

        $r4 = new com.google.android.material.tabs.TabLayout$PagerAdapterObserver;

        specialinvoke $r4.<com.google.android.material.tabs.TabLayout$PagerAdapterObserver: void <init>(com.google.android.material.tabs.TabLayout)>(r0);

        r0.<com.google.android.material.tabs.TabLayout: android.database.DataSetObserver pagerAdapterObserver> = $r4;

     label2:
        $r3 = r0.<com.google.android.material.tabs.TabLayout: android.database.DataSetObserver pagerAdapterObserver>;

        virtualinvoke $r1.<b.z.a.a: void a(android.database.DataSetObserver)>($r3);

     label3:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void populateFromPagerAdapter()>();

        return;
    }

    public void setScrollAnimatorListener(android.animation.Animator$AnimatorListener)
    {
        android.animation.Animator$AnimatorListener $r1;
        com.google.android.material.tabs.TabLayout r0;
        android.animation.ValueAnimator $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void ensureScrollAnimator()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r1);

        return;
    }

    public void setScrollPosition(int, float, boolean)
    {
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        float $f0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setScrollPosition(int,float,boolean,boolean)>($i0, $f0, $z0, 1);

        return;
    }

    public void setScrollPosition(int, float, boolean, boolean)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1, $i2;
        float $f0, $f1;
        boolean $z0, $z1;
        android.animation.ValueAnimator $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $f1 = (float) $i0;

        $f1 = $f1 + $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f1);

        if $i1 < 0 goto label4;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i2 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        if $i1 < $i2 goto label1;

        return;

     label1:
        if $z1 == 0 goto label2;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setIndicatorPositionFromTabPosition(int,float)>($i0, $f0);

     label2:
        $r2 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        if $r2 == null goto label3;

        $z1 = virtualinvoke $r2.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z1 == 0 goto label3;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: android.animation.ValueAnimator scrollAnimator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void cancel()>();

     label3:
        $i0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: int calculateScrollXForTab(int,float)>($i0, $f0);

        virtualinvoke r0.<android.widget.HorizontalScrollView: void scrollTo(int,int)>($i0, 0);

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>($i1);

     label4:
        return;
    }

    public void setSelectedTabIndicator(int)
    {
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)>($r2);

        return;

     label1:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)>(null);

        return;
    }

    public void setSelectedTabIndicator(android.graphics.drawable.Drawable)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r3;
        com.google.android.material.tabs.TabLayout r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable tabSelectedIndicator>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable tabSelectedIndicator> = $r2;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        staticinvoke <b.i.i.y: void I(android.view.View)>($r3);

     label1:
        return;
    }

    public void setSelectedTabIndicatorColor(int)
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setSelectedIndicatorColor(int)>($i0);

        return;
    }

    public void setSelectedTabIndicatorGravity(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i1 := @parameter0: int;

        $i0 = r0.<com.google.android.material.tabs.TabLayout: int tabIndicatorGravity>;

        if $i0 == $i1 goto label1;

        r0.<com.google.android.material.tabs.TabLayout: int tabIndicatorGravity> = $i1;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        staticinvoke <b.i.i.y: void I(android.view.View)>($r1);

     label1:
        return;
    }

    public void setSelectedTabIndicatorHeight(int)
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setSelectedIndicatorHeight(int)>($i0);

        return;
    }

    public void setTabGravity(int)
    {
        int $i0, $i1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.tabs.TabLayout: int tabGravity> = $i0;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void applyModeAndGravity()>();

     label1:
        return;
    }

    public void setTabIconTint(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabIconTint>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabIconTint> = $r1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void updateAllTabs()>();

     label1:
        return;
    }

    public void setTabIconTintResource(int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setTabIconTint(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setTabIndicatorFullWidth(boolean)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.tabs.TabLayout: boolean tabIndicatorFullWidth> = $z0;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        staticinvoke <b.i.i.y: void I(android.view.View)>($r1);

        return;
    }

    public void setTabMode(int)
    {
        int $i0, $i1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 == $i1 goto label1;

        r0.<com.google.android.material.tabs.TabLayout: int mode> = $i0;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void applyModeAndGravity()>();

     label1:
        return;
    }

    public void setTabRippleColor(android.content.res.ColorStateList)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r3;
        android.content.Context $r6;
        com.google.android.material.tabs.TabLayout r0;
        android.content.res.ColorStateList $r1, $r2;
        int $i0, $i1;
        android.view.View $r4;
        com.google.android.material.tabs.TabLayout$TabView $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabRippleColorStateList>;

        if $r2 == $r1 goto label3;

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabRippleColorStateList> = $r1;

        $i0 = 0;

     label1:
        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r3.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r3 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r4 = virtualinvoke $r3.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r4 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z0 == 0 goto label2;

        $r5 = (com.google.android.material.tabs.TabLayout$TabView) $r4;

        $r6 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        staticinvoke <com.google.android.material.tabs.TabLayout$TabView: void access$000(com.google.android.material.tabs.TabLayout$TabView,android.content.Context)>($r5, $r6);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void setTabRippleColorResource(int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setTabRippleColor(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setTabTextColors(int, int)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList createColorStateList(int,int)>($i1, $i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setTabTextColors(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setTabTextColors(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors> = $r1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void updateAllTabs()>();

     label1:
        return;
    }

    public void setTabsFromPagerAdapter(b.z.a.a)
    {
        b.z.a.a $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: b.z.a.a;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setPagerAdapter(b.z.a.a,boolean)>($r1, 0);

        return;
    }

    public void setUnboundedRipple(boolean)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        android.content.Context $r4;
        com.google.android.material.tabs.TabLayout r0;
        int $i0, $i1;
        android.view.View $r2;
        com.google.android.material.tabs.TabLayout$TabView $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.tabs.TabLayout: boolean unboundedRipple>;

        if $z1 == $z0 goto label3;

        r0.<com.google.android.material.tabs.TabLayout: boolean unboundedRipple> = $z0;

        $i0 = 0;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r2 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z0 == 0 goto label2;

        $r3 = (com.google.android.material.tabs.TabLayout$TabView) $r2;

        $r4 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        staticinvoke <com.google.android.material.tabs.TabLayout$TabView: void access$000(com.google.android.material.tabs.TabLayout$TabView,android.content.Context)>($r3, $r4);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void setUnboundedRippleResource(int)
    {
        com.google.android.material.tabs.TabLayout r0;
        int $i0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.HorizontalScrollView: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setUnboundedRipple(boolean)>($z0);

        return;
    }

    public void setupWithViewPager(androidx.viewpager.widget.ViewPager)
    {
        androidx.viewpager.widget.ViewPager $r1;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: androidx.viewpager.widget.ViewPager;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean)>($r1, 1);

        return;
    }

    public void setupWithViewPager(androidx.viewpager.widget.ViewPager, boolean)
    {
        androidx.viewpager.widget.ViewPager $r1;
        com.google.android.material.tabs.TabLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter0: androidx.viewpager.widget.ViewPager;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean)>($r1, $z0, 0);

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        int $i0;
        com.google.android.material.tabs.TabLayout r0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $i0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: int getTabScrollRange()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void updateTabViews(boolean)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r1;
        com.google.android.material.tabs.TabLayout r0;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1;
        android.view.View $r2;
        android.widget.LinearLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout;

        $z0 := @parameter0: boolean;

        $i0 = 0;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $i1 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $i1 = specialinvoke r0.<com.google.android.material.tabs.TabLayout: int getTabMinWidth()>();

        virtualinvoke $r2.<android.view.View: void setMinimumWidth(int)>($i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout: void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams)>($r4);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<android.view.View: void requestLayout()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }
}
