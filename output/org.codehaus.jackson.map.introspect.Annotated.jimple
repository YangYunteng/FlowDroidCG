public abstract class org.codehaus.jackson.map.introspect.Annotated extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.jackson.map.introspect.Annotated r0;

        r0 := @this: org.codehaus.jackson.map.introspect.Annotated;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.reflect.AnnotatedElement getAnnotated();

    public abstract java.lang.'annotation'.Annotation getAnnotation(java.lang.Class);

    public abstract java.lang.reflect.Type getGenericType();

    public abstract int getModifiers();

    public abstract java.lang.String getName();

    public abstract java.lang.Class getRawType();

    public org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)
    {
        org.codehaus.jackson.map.introspect.Annotated r0;
        java.lang.reflect.Type $r2;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.type.TypeBindings $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter0: org.codehaus.jackson.map.type.TypeBindings;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.Annotated: java.lang.reflect.Type getGenericType()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r2);

        return $r3;
    }

    public final boolean hasAnnotation(java.lang.Class)
    {
        java.lang.'annotation'.Annotation $r1;
        org.codehaus.jackson.map.introspect.Annotated r0;
        java.lang.Class $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.Annotated: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r2);

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isPublic()
    {
        int $i0;
        org.codehaus.jackson.map.introspect.Annotated r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.Annotated;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.Annotated: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        return $z0;
    }
}
