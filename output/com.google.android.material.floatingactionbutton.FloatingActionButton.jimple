public class com.google.android.material.floatingactionbutton.FloatingActionButton extends com.google.android.material.internal.VisibilityAwareImageButton implements b.i.i.t, b.i.j.m, com.google.android.material.expandable.ExpandableTransformationWidget, com.google.android.material.shape.Shapeable, androidx.coordinatorlayout.widget.CoordinatorLayout$a
{
    public static final int AUTO_MINI_LARGEST_SCREEN_WIDTH;
    public static final int DEF_STYLE_RES;
    public static final java.lang.String EXPANDABLE_WIDGET_HELPER_KEY;
    public static final java.lang.String LOG_TAG;
    public static final int NO_CUSTOM_SIZE;
    public static final int SIZE_AUTO;
    public static final int SIZE_MINI;
    public static final int SIZE_NORMAL;
    public android.content.res.ColorStateList backgroundTint;
    public android.graphics.PorterDuff$Mode backgroundTintMode;
    public int borderWidth;
    public boolean compatPadding;
    public int customSize;
    public final com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper;
    public final b.b.f.u imageHelper;
    public android.graphics.PorterDuff$Mode imageMode;
    public int imagePadding;
    public android.content.res.ColorStateList imageTint;
    public com.google.android.material.floatingactionbutton.FloatingActionButtonImpl impl;
    public int maxImageSize;
    public android.content.res.ColorStateList rippleColor;
    public final android.graphics.Rect shadowPadding;
    public int size;
    public final android.graphics.Rect touchArea;

    static void <clinit>()
    {
        int $i0;

        <com.google.android.material.floatingactionbutton.FloatingActionButton: int SIZE_MINI> = 1;

        <com.google.android.material.floatingactionbutton.FloatingActionButton: int SIZE_AUTO> = -1;

        <com.google.android.material.floatingactionbutton.FloatingActionButton: int NO_CUSTOM_SIZE> = 0;

        <com.google.android.material.floatingactionbutton.FloatingActionButton: java.lang.String LOG_TAG> = "FloatingActionButton";

        <com.google.android.material.floatingactionbutton.FloatingActionButton: java.lang.String EXPANDABLE_WIDGET_HELPER_KEY> = "expandableWidgetHelper";

        <com.google.android.material.floatingactionbutton.FloatingActionButton: int AUTO_MINI_LARGEST_SCREEN_WIDTH> = 470;

        $i0 = <com.google.android.material.R$style: int Widget_Design_FloatingActionButton>;

        <com.google.android.material.floatingactionbutton.FloatingActionButton: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int floatingActionButtonStyle>;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.graphics.Rect $r18;
        com.google.android.material.animation.MotionSpec $r9, $r10;
        b.b.f.u $r14, $r19;
        com.google.android.material.expandable.ExpandableWidgetHelper $r20;
        android.content.res.TypedArray $r5;
        android.content.res.ColorStateList $r6, $r16;
        android.util.AttributeSet $r2;
        int[] $r3, $r4;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1, $i2;
        com.google.android.material.shape.CornerSize $r11;
        boolean $z0, $z1;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r15;
        android.widget.ImageView$ScaleType $r17;
        com.google.android.material.shape.ShapeAppearanceModel $r13;
        android.graphics.PorterDuff$Mode $r7;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r12;
        float $f0, $f1, $f2;
        android.content.res.Resources $r8;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 = <com.google.android.material.floatingactionbutton.FloatingActionButton: int DEF_STYLE_RES>;

        $r1 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        specialinvoke r0.<com.google.android.material.internal.VisibilityAwareImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r18 = new android.graphics.Rect;

        specialinvoke $r18.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect shadowPadding> = $r18;

        $r18 = new android.graphics.Rect;

        specialinvoke $r18.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect touchArea> = $r18;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.Context getContext()>();

        $r3 = <com.google.android.material.R$styleable: int[] FloatingActionButton>;

        $i1 = <com.google.android.material.floatingactionbutton.FloatingActionButton: int DEF_STYLE_RES>;

        $r4 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r1, $r2, $r3, $i0, $i1, $r4);

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_backgroundTint>;

        $r6 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r1, $r5, $i1);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList backgroundTint> = $r6;

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_backgroundTintMode>;

        $i2 = -1;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i1, $i2);

        $r7 = staticinvoke <com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i1, null);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode backgroundTintMode> = $r7;

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_rippleColor>;

        $r6 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r1, $r5, $i1);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor> = $r6;

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_fabSize>;

        $i2 = -1;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i1, $i2);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int size> = $i1;

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_fabCustomSize>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize> = $i1;

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_borderWidth>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int borderWidth> = $i1;

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_elevation>;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_hoveredFocusedTranslationZ>;

        $f1 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_pressedTranslationZ>;

        $f2 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i1 = <com.google.android.material.R$styleable: int FloatingActionButton_useCompatPadding>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean compatPadding> = $z0;

        $r8 = virtualinvoke r0.<android.widget.ImageButton: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int mtrl_fab_min_touch_target>;

        $i1 = virtualinvoke $r8.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i2 = <com.google.android.material.R$styleable: int FloatingActionButton_maxImageSize>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, 0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int maxImageSize> = $i2;

        $i2 = <com.google.android.material.R$styleable: int FloatingActionButton_showMotionSpec>;

        $r9 = staticinvoke <com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int)>($r1, $r5, $i2);

        $i2 = <com.google.android.material.R$styleable: int FloatingActionButton_hideMotionSpec>;

        $r10 = staticinvoke <com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int)>($r1, $r5, $i2);

        $i2 = <com.google.android.material.floatingactionbutton.FloatingActionButton: int DEF_STYLE_RES>;

        $r11 = <com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize PILL>;

        $r12 = staticinvoke <com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize)>($r1, $r2, $i0, $i2, $r11);

        $r13 = virtualinvoke $r12.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        $i2 = <com.google.android.material.R$styleable: int FloatingActionButton_ensureMinTouchTargetSize>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 0);

        $i2 = <com.google.android.material.R$styleable: int FloatingActionButton_android_enabled>;

        $z1 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 1);

        virtualinvoke r0.<android.widget.ImageButton: void setEnabled(boolean)>($z1);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r19 = new b.b.f.u;

        specialinvoke $r19.<b.b.f.u: void <init>(android.widget.ImageView)>(r0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: b.b.f.u imageHelper> = $r19;

        $r14 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: b.b.f.u imageHelper>;

        virtualinvoke $r14.<b.b.f.u: void a(android.util.AttributeSet,int)>($r2, $i0);

        $r20 = new com.google.android.material.expandable.ExpandableWidgetHelper;

        specialinvoke $r20.<com.google.android.material.expandable.ExpandableWidgetHelper: void <init>(com.google.android.material.expandable.ExpandableWidget)>(r0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper> = $r20;

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)>($r13);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList backgroundTint>;

        $r7 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode backgroundTintMode>;

        $r16 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor>;

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int borderWidth>;

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>($r6, $r7, $r16, $i0);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setMinTouchTargetSize(int)>($i1);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setElevation(float)>($f0);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHoveredFocusedTranslationZ(float)>($f1);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setPressedTranslationZ(float)>($f2);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int maxImageSize>;

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setMaxImageSize(int)>($i0);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>($r9);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>($r10);

        $r15 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r15.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setEnsureMinTouchTargetSize(boolean)>($z0);

        $r17 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke r0.<android.widget.ImageButton: void setScaleType(android.widget.ImageView$ScaleType)>($r17);

        return;
    }

    public static int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)
    {
        int i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r0;

        $r0 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton;

        i0 = $r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int imagePadding>;

        return i0;
    }

    public static void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r0;

        $r0 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke $r0.<android.widget.ImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    private com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop;

        $r2 = new com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl;

        specialinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)>(r0);

        specialinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate)>(r0, $r2);

        return $r1;

     label1:
        $r3 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 = new com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl;

        specialinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)>(r0);

        specialinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate)>(r0, $r2);

        return $r3;
    }

    private com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl impl>;

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl impl> = $r1;

     label1:
        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl impl>;

        return $r1;
    }

    private int getSizeDimension(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        android.content.res.Configuration $r2;
        int $i0, $i1;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize>;

        if $i1 == 0 goto label1;

        return $i1;

     label1:
        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.res.Resources getResources()>();

        $i1 = -1;

        if $i0 == $i1 goto label3;

        if $i0 == 1 goto label2;

        $i0 = <com.google.android.material.R$dimen: int design_fab_size_normal>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;

     label2:
        $i0 = <com.google.android.material.R$dimen: int design_fab_size_mini>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;

     label3:
        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int screenWidthDp>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r2.<android.content.res.Configuration: int screenHeightDp>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        if $i0 >= 470 goto label4;

        $i0 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension(int)>(1);

        return $i0;

     label4:
        $i0 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension(int)>(0);

        return $i0;
    }

    private void offsetRectWithShadow(android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.Rect;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect shadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int bottom> = $i0;

        return;
    }

    private void onApplySupportImageTint()
    {
        android.content.res.ColorStateList $r2;
        int[] $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        android.graphics.PorterDuffColorFilter $r5;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode $r4;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList imageTint>;

        if $r2 != null goto label2;

        staticinvoke <b.i.c.a.a: void b(android.graphics.drawable.Drawable)>($r1);

        return;

     label2:
        $r3 = virtualinvoke r0.<android.widget.ImageButton: int[] getDrawableState()>();

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r3, 0);

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode imageMode>;

        if $r4 != null goto label3;

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

     label3:
        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r5 = staticinvoke <b.b.f.s: android.graphics.PorterDuffColorFilter a(int,android.graphics.PorterDuff$Mode)>($i0, $r4);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5);

        return;
    }

    public static int resolveAdjustedSize(int, int)
    {
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i2 == -2147483648 goto label2;

        if $i2 == 0 goto label3;

        if $i2 != 1073741824 goto label1;

        return $i1;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

     label3:
        return $i0;
    }

    private com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton$1 $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r2 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = new com.google.android.material.floatingactionbutton.FloatingActionButton$1;

        specialinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButton$1: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>(r0, $r2);

        return $r1;
    }

    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        android.animation.Animator$AnimatorListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)>($r1);

        return;
    }

    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        android.animation.Animator$AnimatorListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)>($r1);

        return;
    }

    public void addTransformationCallback(com.google.android.material.animation.TransformationCallback)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        com.google.android.material.animation.TransformationCallback $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.animation.TransformationCallback;

        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = new com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper;

        specialinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback)>(r0, $r1);

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)>($r2);

        return;
    }

    public void clearCustomSize()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)>(0);

        return;
    }

    public void drawableStateChanged()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        int[] $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        specialinvoke r0.<android.widget.ImageButton: void drawableStateChanged()>();

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke r0.<android.widget.ImageButton: int[] getDrawableState()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onDrawableStateChanged(int[])>($r2);

        return;
    }

    public android.content.res.ColorStateList getBackgroundTintList()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList backgroundTint>;

        return r1;
    }

    public android.graphics.PorterDuff$Mode getBackgroundTintMode()
    {
        android.graphics.PorterDuff$Mode r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode backgroundTintMode>;

        return r1;
    }

    public androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = new com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior;

        specialinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: void <init>()>();

        return $r1;
    }

    public float getCompatElevation()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $f0 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getElevation()>();

        return $f0;
    }

    public float getCompatHoveredFocusedTranslationZ()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $f0 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getHoveredFocusedTranslationZ()>();

        return $f0;
    }

    public float getCompatPressedTranslationZ()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $f0 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getPressedTranslationZ()>();

        return $f0;
    }

    public android.graphics.drawable.Drawable getContentBackground()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable getContentBackground()>();

        return $r2;
    }

    public boolean getContentRect(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 = staticinvoke <b.i.i.y: boolean E(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.widget.ImageButton: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.ImageButton: int getHeight()>();

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void offsetRectWithShadow(android.graphics.Rect)>($r1);

        return 1;

     label1:
        return 0;
    }

    public int getCustomSize()
    {
        int i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize>;

        return i0;
    }

    public int getExpandedComponentIdHint()
    {
        int $i0;
        com.google.android.material.expandable.ExpandableWidgetHelper $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper>;

        $i0 = virtualinvoke $r1.<com.google.android.material.expandable.ExpandableWidgetHelper: int getExpandedComponentIdHint()>();

        return $i0;
    }

    public com.google.android.material.animation.MotionSpec getHideMotionSpec()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.animation.MotionSpec $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getHideMotionSpec()>();

        return $r2;
    }

    public void getMeasuredContentRect(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.Rect;

        $i0 = virtualinvoke r0.<android.widget.ImageButton: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.widget.ImageButton: int getMeasuredHeight()>();

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void offsetRectWithShadow(android.graphics.Rect)>($r1);

        return;
    }

    public int getRippleColor()
    {
        int $i0;
        android.content.res.ColorStateList $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i0;

     label1:
        return 0;
    }

    public android.content.res.ColorStateList getRippleColorStateList()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor>;

        return r1;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()>();

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r2);

        return $r2;
    }

    public com.google.android.material.animation.MotionSpec getShowMotionSpec()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.animation.MotionSpec $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getShowMotionSpec()>();

        return $r2;
    }

    public int getSize()
    {
        int i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int size>;

        return i0;
    }

    public int getSizeDimension()
    {
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int size>;

        $i0 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension(int)>($i0);

        return $i0;
    }

    public android.content.res.ColorStateList getSupportBackgroundTintList()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()>();

        return $r1;
    }

    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    {
        android.graphics.PorterDuff$Mode $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>();

        return $r1;
    }

    public android.content.res.ColorStateList getSupportImageTintList()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList imageTint>;

        return r1;
    }

    public android.graphics.PorterDuff$Mode getSupportImageTintMode()
    {
        android.graphics.PorterDuff$Mode r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode imageMode>;

        return r1;
    }

    public boolean getUseCompatPadding()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        z0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean compatPadding>;

        return z0;
    }

    public void hide()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>(null);

        return;
    }

    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean)>($r1, 1);

        return;
    }

    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener, boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>($r1);

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>($r3, $z0);

        return;
    }

    public boolean isExpanded()
    {
        com.google.android.material.expandable.ExpandableWidgetHelper $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper>;

        $z0 = virtualinvoke $r1.<com.google.android.material.expandable.ExpandableWidgetHelper: boolean isExpanded()>();

        return $z0;
    }

    public boolean isOrWillBeHidden()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $z0 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeHidden()>();

        return $z0;
    }

    public boolean isOrWillBeShown()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $z0 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeShown()>();

        return $z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        specialinvoke r0.<android.widget.ImageButton: void jumpDrawablesToCurrentState()>();

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void jumpDrawableToCurrentState()>();

        return;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        specialinvoke r0.<android.widget.ImageButton: void onAttachedToWindow()>();

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onAttachedToWindow()>();

        return;
    }

    public void onDetachedFromWindow()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        specialinvoke r0.<android.widget.ImageButton: void onDetachedFromWindow()>();

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onDetachedFromWindow()>();

        return;
    }

    public void onMeasure(int, int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        android.graphics.Rect $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()>();

        $i3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int maxImageSize>;

        $i3 = $i2 - $i3;

        $i3 = $i3 / 2;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int imagePadding> = $i3;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updatePadding()>();

        $i0 = staticinvoke <com.google.android.material.floatingactionbutton.FloatingActionButton: int resolveAdjustedSize(int,int)>($i2, $i0);

        $i1 = staticinvoke <com.google.android.material.floatingactionbutton.FloatingActionButton: int resolveAdjustedSize(int,int)>($i2, $i1);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect shadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i1 = $i1 + $i0;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i1 = $i1 + $i2;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + $i2;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i2;

        virtualinvoke r0.<android.widget.ImageButton: void setMeasuredDimension(int,int)>($i1, $i0);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        android.os.Bundle $r6;
        com.google.android.material.stateful.ExtendableSavedState $r2;
        com.google.android.material.expandable.ExpandableWidgetHelper $r3;
        b.f.i $r4;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof com.google.android.material.stateful.ExtendableSavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.ImageButton: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (com.google.android.material.stateful.ExtendableSavedState) $r1;

        $r1 = virtualinvoke $r2.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.ImageButton: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper>;

        $r4 = $r2.<com.google.android.material.stateful.ExtendableSavedState: b.f.i extendableStates>;

        $r5 = virtualinvoke $r4.<b.f.i: java.lang.Object get(java.lang.Object)>("expandableWidgetHelper");

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r5);

        $r6 = (android.os.Bundle) $r5;

        virtualinvoke $r3.<com.google.android.material.expandable.ExpandableWidgetHelper: void onRestoreInstanceState(android.os.Bundle)>($r6);

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.os.Parcelable $r2, $r3;
        android.os.Bundle $r6;
        com.google.android.material.stateful.ExtendableSavedState $r1, $r7;
        com.google.android.material.expandable.ExpandableWidgetHelper $r5;
        b.f.i $r4;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r2 = specialinvoke r0.<android.widget.ImageButton: android.os.Parcelable onSaveInstanceState()>();

        $r3 = $r2;

        if $r2 != null goto label1;

        $r6 = new android.os.Bundle;

        $r3 = $r6;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

     label1:
        $r7 = new com.google.android.material.stateful.ExtendableSavedState;

        $r1 = $r7;

        specialinvoke $r7.<com.google.android.material.stateful.ExtendableSavedState: void <init>(android.os.Parcelable)>($r3);

        $r4 = $r1.<com.google.android.material.stateful.ExtendableSavedState: b.f.i extendableStates>;

        $r5 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper>;

        $r6 = virtualinvoke $r5.<com.google.android.material.expandable.ExpandableWidgetHelper: android.os.Bundle onSaveInstanceState()>();

        virtualinvoke $r4.<b.f.i: java.lang.Object put(java.lang.Object,java.lang.Object)>("expandableWidgetHelper", $r6);

        return $r1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.graphics.Rect $r2;
        android.view.MotionEvent $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;
        float $f0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect touchArea>;

        $z0 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getContentRect(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.Rect touchArea>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<android.widget.ImageButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        android.animation.Animator$AnimatorListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)>($r1);

        return;
    }

    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        android.animation.Animator$AnimatorListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)>($r1);

        return;
    }

    public void removeTransformationCallback(com.google.android.material.animation.TransformationCallback)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        com.google.android.material.animation.TransformationCallback $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.animation.TransformationCallback;

        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = new com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper;

        specialinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback)>(r0, $r1);

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)>($r2);

        return;
    }

    public void setBackgroundColor(int)
    {
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FloatingActionButton", "Setting a custom background is not supported.");

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FloatingActionButton", "Setting a custom background is not supported.");

        return;
    }

    public void setBackgroundResource(int)
    {
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FloatingActionButton", "Setting a custom background is not supported.");

        return;
    }

    public void setBackgroundTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList backgroundTint>;

        if $r3 == $r1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList backgroundTint> = $r1;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundTintList(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        android.graphics.PorterDuff$Mode $r1, $r3;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode backgroundTintMode>;

        if $r3 == $r1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode backgroundTintMode> = $r1;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

     label1:
        return;
    }

    public void setCompatElevation(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setElevation(float)>($f0);

        return;
    }

    public void setCompatElevationResource(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        float $f0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)>($f0);

        return;
    }

    public void setCompatHoveredFocusedTranslationZ(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHoveredFocusedTranslationZ(float)>($f0);

        return;
    }

    public void setCompatHoveredFocusedTranslationZResource(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        float $f0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)>($f0);

        return;
    }

    public void setCompatPressedTranslationZ(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setPressedTranslationZ(float)>($f0);

        return;
    }

    public void setCompatPressedTranslationZResource(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        float $f0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)>($f0);

        return;
    }

    public void setCustomSize(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize>;

        if $i0 == $i1 goto label2;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize> = $i0;

        virtualinvoke r0.<android.widget.ImageButton: void requestLayout()>();

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Custom size must be non-negative");

        throw $r1;

     label2:
        return;
    }

    public void setElevation(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.ImageButton: void setElevation(float)>($f0);

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateShapeElevation(float)>($f0);

        return;
    }

    public void setEnsureMinTouchTargetSize(boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $z1 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean getEnsureMinTouchTargetSize()>();

        if $z0 == $z1 goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setEnsureMinTouchTargetSize(boolean)>($z0);

        virtualinvoke r0.<android.widget.ImageButton: void requestLayout()>();

     label1:
        return;
    }

    public boolean setExpanded(boolean)
    {
        com.google.android.material.expandable.ExpandableWidgetHelper $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper>;

        $z0 = virtualinvoke $r1.<com.google.android.material.expandable.ExpandableWidgetHelper: boolean setExpanded(boolean)>($z0);

        return $z0;
    }

    public void setExpandedComponentIdHint(int)
    {
        int $i0;
        com.google.android.material.expandable.ExpandableWidgetHelper $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper>;

        virtualinvoke $r1.<com.google.android.material.expandable.ExpandableWidgetHelper: void setExpandedComponentIdHint(int)>($i0);

        return;
    }

    public void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.animation.MotionSpec $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.animation.MotionSpec;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>($r1);

        return;
    }

    public void setHideMotionSpecResource(int)
    {
        android.content.Context $r1;
        com.google.android.material.animation.MotionSpec $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.Context getContext()>();

        $r2 = staticinvoke <com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>($r2);

        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r3;
        android.content.res.ColorStateList $r4;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r2 == $r1 goto label1;

        specialinvoke r0.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateImageMatrixScale()>();

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList imageTint>;

        if $r4 == null goto label1;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>();

     label1:
        return;
    }

    public void setImageResource(int)
    {
        int $i0;
        b.b.f.u $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: b.b.f.u imageHelper>;

        virtualinvoke $r1.<b.b.f.u: void a(int)>($i0);

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>();

        return;
    }

    public void setRippleColor(int)
    {
        android.content.res.ColorStateList $r1;
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setRippleColor(android.content.res.ColorStateList)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        android.content.res.ColorStateList $r2, $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r2 := @parameter0: android.content.res.ColorStateList;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor>;

        if $r3 == $r2 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor> = $r2;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList rippleColor>;

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setRippleColor(android.content.res.ColorStateList)>($r2);

     label1:
        return;
    }

    public void setScaleX(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.ImageButton: void setScaleX(float)>($f0);

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onScaleChanged()>();

        return;
    }

    public void setScaleY(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.ImageButton: void setScaleY(float)>($f0);

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onScaleChanged()>();

        return;
    }

    public void setShadowPaddingEnabled(boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShadowPaddingEnabled(boolean)>($z0);

        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        return;
    }

    public void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.animation.MotionSpec $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.animation.MotionSpec;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>($r1);

        return;
    }

    public void setShowMotionSpecResource(int)
    {
        android.content.Context $r1;
        com.google.android.material.animation.MotionSpec $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageButton: android.content.Context getContext()>();

        $r2 = staticinvoke <com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>($r2);

        return;
    }

    public void setSize(int)
    {
        int $i0, $i1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int customSize> = 0;

        $i1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int size>;

        if $i0 == $i1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: int size> = $i0;

        virtualinvoke r0.<android.widget.ImageButton: void requestLayout()>();

     label1:
        return;
    }

    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

        return;
    }

    public void setSupportImageTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1, $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList imageTint>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList imageTint> = $r1;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>();

     label1:
        return;
    }

    public void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r1, $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode imageMode>;

        if $r2 == $r1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode imageMode> = $r1;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>();

     label1:
        return;
    }

    public void setTranslationX(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.ImageButton: void setTranslationX(float)>($f0);

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onTranslationChanged()>();

        return;
    }

    public void setTranslationY(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.ImageButton: void setTranslationY(float)>($f0);

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onTranslationChanged()>();

        return;
    }

    public void setTranslationZ(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        float $f0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.ImageButton: void setTranslationZ(float)>($f0);

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onTranslationChanged()>();

        return;
    }

    public void setUseCompatPadding(boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $z1 := @parameter0: boolean;

        $z0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean compatPadding>;

        if $z0 == $z1 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean compatPadding> = $z1;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onCompatShadowChanged()>();

     label1:
        return;
    }

    public void setVisibility(int)
    {
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)>($i0);

        return;
    }

    public boolean shouldEnsureMinTouchTargetSize()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $z0 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean getEnsureMinTouchTargetSize()>();

        return $z0;
    }

    public void show()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>(null);

        return;
    }

    public void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean)>($r1, 1);

        return;
    }

    public void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener, boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButton r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>();

        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>($r1);

        virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>($r3, $z0);

        return;
    }
}
