public final class k.a.c.f extends java.lang.Object
{
    public static final l.h a;
    public static final l.h b;

    static void <clinit>()
    {
        l.h $r0;

        $r0 = staticinvoke <l.h: l.h c(java.lang.String)>("\"\\");

        <k.a.c.f: l.h a> = $r0;

        $r0 = staticinvoke <l.h: l.h c(java.lang.String)>("\t ,=");

        <k.a.c.f: l.h b> = $r0;

        return;
    }

    public static int a(java.lang.String, int)
    {
        byte $b2;
        int $i1;
        long $l0;
        java.lang.NumberFormatException $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        $b2 = $l0 cmp 2147483647L;

        $i1 = (int) $b2;

        if $i1 <= 0 goto label3;

        return 2147483647;

     label3:
        $b2 = $l0 cmp 0L;

        $i1 = (int) $b2;

        if $i1 >= 0 goto label4;

        return 0;

     label4:
        $i1 = (int) $l0;

        return $i1;

     label5:
        $r0 := @caughtexception;

        return $i1;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
    }

    public static int a(java.lang.String, int, java.lang.String)
    {
        int $i0, $i1, $i3;
        char $c2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i1);

        $i3 = -1;

        if $i1 == $i3 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static long a(java.lang.String)
    {
        long $l0;
        java.lang.NumberFormatException $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long a(k.M)
    {
        long $l0;
        k.M $r0;
        k.y $r1;

        $r0 := @parameter0: k.M;

        $r1 = virtualinvoke $r0.<k.M: k.y m()>();

        $l0 = staticinvoke <k.a.c.f: long a(k.y)>($r1);

        return $l0;
    }

    public static long a(k.y)
    {
        long $l0;
        java.lang.String $r1;
        k.y $r0;

        $r0 := @parameter0: k.y;

        $r1 = virtualinvoke $r0.<k.y: java.lang.String b(java.lang.String)>("Content-Length");

        $l0 = staticinvoke <k.a.c.f: long a(java.lang.String)>($r1);

        return $l0;
    }

    public static void a(k.q, k.z, k.y)
    {
        java.util.List $r4;
        k.z $r1;
        k.y $r2;
        k.q $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: k.q;

        $r1 := @parameter1: k.z;

        $r2 := @parameter2: k.y;

        $r3 = <k.q: k.q a>;

        if $r0 != $r3 goto label1;

        return;

     label1:
        $r4 = staticinvoke <k.o: java.util.List a(k.z,k.y)>($r1, $r2);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        interfaceinvoke $r0.<k.q: void a(k.z,java.util.List)>($r1, $r4);

        return;
    }

    public static int b(java.lang.String, int)
    {
        int $i0, $i1;
        char $c2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 == 32 goto label2;

        $i1 = (int) $c2;

        if $i1 == 9 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static boolean b(k.M)
    {
        k.I $r1;
        long $l1;
        k.M $r0;
        byte $b2;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: k.M;

        $r1 = virtualinvoke $r0.<k.M: k.I q()>();

        $r2 = virtualinvoke $r1.<k.I: java.lang.String e()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<k.M: int k()>();

        if $i0 < 100 goto label2;

        if $i0 < 200 goto label3;

     label2:
        if $i0 == 204 goto label3;

        if $i0 == 304 goto label3;

        return 1;

     label3:
        $l1 = staticinvoke <k.a.c.f: long a(k.M)>($r0);

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label5;

        $r2 = virtualinvoke $r0.<k.M: java.lang.String b(java.lang.String)>("Transfer-Encoding");

        $r3 = "chunked";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        return 1;
    }
}
