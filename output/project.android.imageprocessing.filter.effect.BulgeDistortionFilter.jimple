public class project.android.imageprocessing.filter.effect.BulgeDistortionFilter extends project.android.imageprocessing.filter.BasicFilter
{
    public static final java.lang.String UNIFORM_ASPECT_RATIO;
    public static final java.lang.String UNIFORM_CENTER;
    public static final java.lang.String UNIFORM_DISTORTION_AMOUNT;
    public static final java.lang.String UNIFORM_RADIUS;
    public float aspectRatio;
    public int aspectRatioHandle;
    public android.graphics.PointF center;
    public int centerHandle;
    public float distortionAmount;
    public int distortionAmountHandle;
    public float radius;
    public int radiusHandle;

    public void <init>(android.graphics.PointF, float, float, float)
    {
        android.graphics.PointF $r1;
        float $f0, $f1, $f2;
        project.android.imageprocessing.filter.effect.BulgeDistortionFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.BulgeDistortionFilter;

        $r1 := @parameter0: android.graphics.PointF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        specialinvoke r0.<project.android.imageprocessing.filter.BasicFilter: void <init>()>();

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: android.graphics.PointF center> = $r1;

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: float radius> = $f0;

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: float distortionAmount> = $f1;

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: float aspectRatio> = $f2;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.effect.BulgeDistortionFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.BulgeDistortionFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nvarying vec2 v_TexCoord;\nuniform vec2 u_Center;\nuniform float u_Radius;\nuniform float u_DistortionAmount;\nuniform float u_AspectRatio;\nvoid main(){\n   highp vec2 textureCoordinateToUse = vec2(v_TexCoord.x, (v_TexCoord.y * u_AspectRatio + 0.5 - 0.5 * u_AspectRatio));\n   highp float dist = distance(u_Center, textureCoordinateToUse);\n   textureCoordinateToUse = v_TexCoord;\n   if (dist < u_Radius) {\n     textureCoordinateToUse -= u_Center;\n     highp float percent = 1.0 - (u_Radius - dist) / u_Radius * u_DistortionAmount;\n     percent = percent * percent;\n     textureCoordinateToUse = textureCoordinateToUse * percent;\n     textureCoordinateToUse += u_Center;\n   }\n   gl_FragColor = texture2D(u_Texture0, textureCoordinateToUse);\n}\n";
    }

    public void initShaderHandles()
    {
        int $i0;
        project.android.imageprocessing.filter.effect.BulgeDistortionFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.BulgeDistortionFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void initShaderHandles()>();

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Center");

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int centerHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Radius");

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int radiusHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_DistortionAmount");

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int distortionAmountHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_AspectRatio");

        r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int aspectRatioHandle> = $i0;

        return;
    }

    public void passShaderValues()
    {
        android.graphics.PointF $r1;
        int $i0;
        float $f0, $f1;
        project.android.imageprocessing.filter.effect.BulgeDistortionFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.BulgeDistortionFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void passShaderValues()>();

        $i0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int centerHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: android.graphics.PointF center>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f1 = $r1.<android.graphics.PointF: float y>;

        staticinvoke <android.opengl.GLES20: void glUniform2f(int,float,float)>($i0, $f0, $f1);

        $i0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int radiusHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: float radius>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        $i0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int distortionAmountHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: float distortionAmount>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        $i0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: int aspectRatioHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.effect.BulgeDistortionFilter: float aspectRatio>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        return;
    }

    public static void <clinit>()
    {
        <project.android.imageprocessing.filter.effect.BulgeDistortionFilter: java.lang.String UNIFORM_RADIUS> = "u_Radius";

        <project.android.imageprocessing.filter.effect.BulgeDistortionFilter: java.lang.String UNIFORM_DISTORTION_AMOUNT> = "u_DistortionAmount";

        <project.android.imageprocessing.filter.effect.BulgeDistortionFilter: java.lang.String UNIFORM_CENTER> = "u_Center";

        <project.android.imageprocessing.filter.effect.BulgeDistortionFilter: java.lang.String UNIFORM_ASPECT_RATIO> = "u_AspectRatio";

        return;
    }
}
