public class com.google.common.collect.Synchronized$SynchronizedMultimap extends com.google.common.collect.Synchronized$SynchronizedObject implements com.google.common.collect.Multimap
{
    public static final long serialVersionUID;
    public transient java.util.Map asMap;
    public transient java.util.Collection entries;
    public transient java.util.Set keySet;
    public transient com.google.common.collect.Multiset keys;
    public transient java.util.Collection valuesCollection;

    public void <init>(com.google.common.collect.Multimap, java.lang.Object)
    {
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r2;
        com.google.common.collect.Multimap $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public java.util.Map asMap()
    {
        java.lang.Throwable $r6;
        java.util.Map $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Synchronized$SynchronizedAsMap $r4;
        com.google.common.collect.Multimap $r5;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Map asMap>;

        if $r3 != null goto label2;

        $r4 = new com.google.common.collect.Synchronized$SynchronizedAsMap;

        $r5 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r5.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        specialinvoke $r4.<com.google.common.collect.Synchronized$SynchronizedAsMap: void <init>(java.util.Map,java.lang.Object)>($r3, $r2);

        r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Map asMap> = $r4;

     label2:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Map asMap>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void clear()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        interfaceinvoke $r2.<com.google.common.collect.Multimap: void clear()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Multimap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r4.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean containsValue(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.google.common.collect.Multimap delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object delegate()>();

        $r2 = (com.google.common.collect.Multimap) $r1;

        return $r2;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        com.google.common.collect.Multimap $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        return $r1;
    }

    public java.util.Collection entries()
    {
        java.lang.Throwable $r5;
        java.util.Collection $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r4;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection entries>;

        if $r3 != null goto label2;

        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Collection entries()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.Collection access$400(java.util.Collection,java.lang.Object)>($r3, $r2);

        r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection entries> = $r3;

     label2:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection entries>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r2 := @parameter0: java.lang.Object;

        if $r2 != r0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label2:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean equals(java.lang.Object)>($r2);

        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void forEach(java.util.function.BiConsumer)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.util.function.BiConsumer $r3;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r3 := @parameter0: java.util.function.BiConsumer;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        interfaceinvoke $r2.<com.google.common.collect.Multimap: void forEach(java.util.function.BiConsumer)>($r3);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Collection get(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.Collection $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>($r2);

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Collection access$400(java.util.Collection,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int hashCode()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multimap: int hashCode()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multimap: boolean isEmpty()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Set keySet()
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.util.Set $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r4;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Set keySet>;

        if $r3 != null goto label2;

        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Set keySet()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.Set access$300(java.util.Set,java.lang.Object)>($r3, $r2);

        r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Set keySet> = $r3;

     label2:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Set keySet>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.google.common.collect.Multiset keys()
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Multiset $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r4;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multiset keys>;

        if $r3 != null goto label2;

        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Multimap: com.google.common.collect.Multiset keys()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: com.google.common.collect.Multiset multiset(com.google.common.collect.Multiset,java.lang.Object)>($r3, $r2);

        r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multiset keys> = $r3;

     label2:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multiset keys>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean put(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Multimap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r4.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean putAll(com.google.common.collect.Multimap)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r2 := @parameter0: com.google.common.collect.Multimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean putAll(com.google.common.collect.Multimap)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r2, $r3;
        com.google.common.collect.Multimap $r4;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r4.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean remove(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Multimap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r4.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Collection removeAll(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.Collection $r4;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Multimap: java.util.Collection removeAll(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.lang.Throwable $r6;
        java.util.Collection $r5;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r2, $r3;
        com.google.common.collect.Multimap $r4;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r5 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int size()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.Multimap $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multimap: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Collection values()
    {
        java.lang.Throwable $r5;
        java.util.Collection $r3;
        com.google.common.collect.Synchronized$SynchronizedMultimap r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r4;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedMultimap;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection valuesCollection>;

        if $r3 != null goto label2;

        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: com.google.common.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Collection values()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.Collection access$500(java.util.Collection,java.lang.Object)>($r3, $r2);

        r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection valuesCollection> = $r3;

     label2:
        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection valuesCollection>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
