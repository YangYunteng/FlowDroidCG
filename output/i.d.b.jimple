public final class i.d.b extends java.lang.Object
{
    public static final i.d.a a;

    static void <clinit>()
    {
        java.lang.Throwable $r22;
        kotlin.TypeCastException $r16;
        i.d.a $r14;
        java.lang.ClassCastException $r15, $r19, $r23, $r24;
        int $i0;
        java.lang.String $r21;
        java.lang.ClassNotFoundException $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.Class $r12;
        java.lang.Object $r13;
        java.lang.StringBuilder $r20;
        java.lang.ClassLoader $r17, $r18;

        $i0 = staticinvoke <i.d.b: int a()>();

        if $i0 < 65544 goto label27;

     label01:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("kotlin.internal.jdk8.JDK8PlatformImplementations");

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r13, "Class.forName(\"kotlin.in\u2026entations\").newInstance()");

     label02:
        if $r13 == null goto label06;

     label03:
        $r14 = (i.d.a) $r13;

     label04:
        goto label55;

     label05:
        $r15 := @caughtexception;

        goto label09;

     label06:
        $r16 = new kotlin.TypeCastException;

     label07:
        specialinvoke $r16.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.internal.PlatformImplementations");

     label08:
        throw $r16;

     label09:
        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label10:
        $r12 = class "Li/d/a;";

     label11:
        $r18 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label12:
        $r19 = new java.lang.ClassCastException;

        $r20 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", base type classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.ClassCastException: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r19.<java.lang.ClassCastException: java.lang.Throwable initCause(java.lang.Throwable)>($r15);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r22, "ClassCastException(\"Inst\u2026baseTypeCL\").initCause(e)");

        throw $r22;

     label14:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("kotlin.internal.JRE8PlatformImplementations");

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r13, "Class.forName(\"kotlin.in\u2026entations\").newInstance()");

     label15:
        if $r13 == null goto label19;

     label16:
        $r14 = (i.d.a) $r13;

     label17:
        goto label55;

     label18:
        $r19 := @caughtexception;

        goto label22;

     label19:
        $r16 = new kotlin.TypeCastException;

     label20:
        specialinvoke $r16.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.internal.PlatformImplementations");

     label21:
        throw $r16;

     label22:
        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label23:
        $r12 = class "Li/d/a;";

     label24:
        $r18 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label25:
        $r15 = new java.lang.ClassCastException;

        $r20 = new java.lang.StringBuilder;

     label26:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", base type classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ClassCastException: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r15.<java.lang.ClassCastException: java.lang.Throwable initCause(java.lang.Throwable)>($r19);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r22, "ClassCastException(\"Inst\u2026baseTypeCL\").initCause(e)");

        throw $r22;

     label27:
        if $i0 < 65543 goto label54;

     label28:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("i.d.a.a");

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r13, "Class.forName(\"kotlin.in\u2026entations\").newInstance()");

     label29:
        if $r13 == null goto label33;

     label30:
        $r14 = (i.d.a) $r13;

     label31:
        goto label55;

     label32:
        $r23 := @caughtexception;

        goto label36;

     label33:
        $r16 = new kotlin.TypeCastException;

     label34:
        specialinvoke $r16.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.internal.PlatformImplementations");

     label35:
        throw $r16;

     label36:
        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label37:
        $r12 = class "Li/d/a;";

     label38:
        $r18 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label39:
        $r15 = new java.lang.ClassCastException;

        $r20 = new java.lang.StringBuilder;

     label40:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", base type classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ClassCastException: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r15.<java.lang.ClassCastException: java.lang.Throwable initCause(java.lang.Throwable)>($r23);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r22, "ClassCastException(\"Inst\u2026baseTypeCL\").initCause(e)");

        throw $r22;

     label41:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("kotlin.internal.JRE7PlatformImplementations");

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r13, "Class.forName(\"kotlin.in\u2026entations\").newInstance()");

     label42:
        if $r13 == null goto label46;

     label43:
        $r14 = (i.d.a) $r13;

     label44:
        goto label55;

     label45:
        $r24 := @caughtexception;

        goto label49;

     label46:
        $r16 = new kotlin.TypeCastException;

     label47:
        specialinvoke $r16.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.internal.PlatformImplementations");

     label48:
        throw $r16;

     label49:
        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label50:
        $r12 = class "Li/d/a;";

     label51:
        $r18 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label52:
        $r15 = new java.lang.ClassCastException;

        $r20 = new java.lang.StringBuilder;

     label53:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", base type classloader: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ClassCastException: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r15.<java.lang.ClassCastException: java.lang.Throwable initCause(java.lang.Throwable)>($r24);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r22, "ClassCastException(\"Inst\u2026baseTypeCL\").initCause(e)");

        throw $r22;

     label54:
        $r14 = new i.d.a;

        specialinvoke $r14.<i.d.a: void <init>()>();

     label55:
        <i.d.b: i.d.a a> = $r14;

        return;

     label56:
        $r0 := @caughtexception;

        goto label14;

     label57:
        $r1 := @caughtexception;

        goto label14;

     label58:
        $r2 := @caughtexception;

        goto label14;

     label59:
        $r3 := @caughtexception;

        goto label27;

     label60:
        $r4 := @caughtexception;

        goto label27;

     label61:
        $r5 := @caughtexception;

        goto label27;

     label62:
        $r6 := @caughtexception;

        goto label41;

     label63:
        $r7 := @caughtexception;

        goto label41;

     label64:
        $r8 := @caughtexception;

        goto label41;

     label65:
        $r9 := @caughtexception;

        goto label54;

     label66:
        $r10 := @caughtexception;

        goto label54;

     label67:
        $r11 := @caughtexception;

        goto label54;

        catch java.lang.ClassNotFoundException from label01 to label02 with label56;
        catch java.lang.ClassCastException from label03 to label04 with label05;
        catch java.lang.ClassCastException from label07 to label09 with label05;
        catch java.lang.ClassNotFoundException from label07 to label08 with label57;
        catch java.lang.ClassNotFoundException from label09 to label10 with label58;
        catch java.lang.ClassNotFoundException from label11 to label12 with label58;
        catch java.lang.ClassNotFoundException from label13 to label14 with label58;
        catch java.lang.ClassNotFoundException from label14 to label15 with label59;
        catch java.lang.ClassCastException from label16 to label17 with label18;
        catch java.lang.ClassCastException from label20 to label22 with label18;
        catch java.lang.ClassNotFoundException from label20 to label21 with label60;
        catch java.lang.ClassNotFoundException from label22 to label23 with label61;
        catch java.lang.ClassNotFoundException from label24 to label25 with label61;
        catch java.lang.ClassNotFoundException from label26 to label27 with label61;
        catch java.lang.ClassNotFoundException from label28 to label29 with label62;
        catch java.lang.ClassCastException from label30 to label31 with label32;
        catch java.lang.ClassCastException from label34 to label36 with label32;
        catch java.lang.ClassNotFoundException from label34 to label35 with label63;
        catch java.lang.ClassNotFoundException from label36 to label37 with label64;
        catch java.lang.ClassNotFoundException from label38 to label39 with label64;
        catch java.lang.ClassNotFoundException from label40 to label41 with label64;
        catch java.lang.ClassNotFoundException from label41 to label42 with label65;
        catch java.lang.ClassCastException from label43 to label44 with label45;
        catch java.lang.ClassCastException from label47 to label49 with label45;
        catch java.lang.ClassNotFoundException from label47 to label48 with label66;
        catch java.lang.ClassNotFoundException from label49 to label50 with label67;
        catch java.lang.ClassNotFoundException from label51 to label52 with label67;
        catch java.lang.ClassNotFoundException from label53 to label54 with label67;
    }

    public static final int a()
    {
        java.lang.NumberFormatException $r0, $r1;
        kotlin.TypeCastException $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.specification.version");

        if $r2 == null goto label13;

        $i1 = staticinvoke <i.j.s: int a(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r2, 46, 0, 0, 6, null);

        if $i1 >= 0 goto label03;

     label01:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label02:
        $i0 = $i0 * 65536;

        return $i0;

     label03:
        $i0 = $i1 + 1;

        $i2 = staticinvoke <i.j.s: int a(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r2, 46, $i0, 0, 4, null);

        $i3 = $i2;

        if $i2 >= 0 goto label04;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

     label04:
        if $r2 == null goto label10;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r3, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

        if $r2 == null goto label09;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r2, "(this as java.lang.Strin\u2026ing(startIndex, endIndex)");

     label05:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label06:
        $i0 = $i0 * 65536;

     label07:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label08:
        $i0 = $i0 + $i1;

        return $i0;

     label09:
        $r4 = new kotlin.TypeCastException;

        specialinvoke $r4.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r4;

     label10:
        $r4 = new kotlin.TypeCastException;

        specialinvoke $r4.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r4;

     label11:
        $r0 := @caughtexception;

        return 65542;

     label12:
        $r1 := @caughtexception;

     label13:
        return 65542;

        catch java.lang.NumberFormatException from label01 to label02 with label11;
        catch java.lang.NumberFormatException from label05 to label06 with label12;
        catch java.lang.NumberFormatException from label07 to label08 with label12;
    }
}
