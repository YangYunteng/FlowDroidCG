public abstract class org.apache.james.mime4j.message.Entity extends java.lang.Object implements org.apache.james.mime4j.message.Disposable
{
    public org.apache.james.mime4j.message.Body body;
    public org.apache.james.mime4j.message.Header header;
    public org.apache.james.mime4j.message.Entity parent;

    public void <init>()
    {
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header> = null;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body> = null;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity parent> = null;

        return;
    }

    public void <init>(org.apache.james.mime4j.message.Entity)
    {
        org.apache.james.mime4j.message.Entity r0, $r3;
        org.apache.james.mime4j.message.Header $r1, $r4;
        org.apache.james.mime4j.message.Body $r2;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r3 := @parameter0: org.apache.james.mime4j.message.Entity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header> = null;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body> = null;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity parent> = null;

        $r4 = $r3.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header>;

        if $r4 == null goto label1;

        $r1 = new org.apache.james.mime4j.message.Header;

        specialinvoke $r1.<org.apache.james.mime4j.message.Header: void <init>(org.apache.james.mime4j.message.Header)>($r4);

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header> = $r1;

     label1:
        $r2 = $r3.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body>;

        if $r2 == null goto label2;

        $r2 = staticinvoke <org.apache.james.mime4j.message.BodyCopier: org.apache.james.mime4j.message.Body copy(org.apache.james.mime4j.message.Body)>($r2);

        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>($r2);

     label2:
        return;
    }

    public void dispose()
    {
        org.apache.james.mime4j.message.Body $r1;
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<org.apache.james.mime4j.message.Disposable: void dispose()>();

     label1:
        return;
    }

    public org.apache.james.mime4j.message.Body getBody()
    {
        org.apache.james.mime4j.message.Body r1;
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        r1 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body>;

        return r1;
    }

    public java.lang.String getCharset()
    {
        org.apache.james.mime4j.field.ContentTypeField $r3;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r1;
        java.lang.String $r4;
        org.apache.james.mime4j.parser.Field $r2;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>("Content-Type");

        $r3 = (org.apache.james.mime4j.field.ContentTypeField) $r2;

        $r4 = staticinvoke <org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField)>($r3);

        return $r4;
    }

    public java.lang.String getContentTransferEncoding()
    {
        org.apache.james.mime4j.field.ContentTransferEncodingField $r3;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r1;
        java.lang.String $r4;
        org.apache.james.mime4j.parser.Field $r2;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>("Content-Transfer-Encoding");

        $r3 = (org.apache.james.mime4j.field.ContentTransferEncodingField) $r2;

        $r4 = staticinvoke <org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding(org.apache.james.mime4j.field.ContentTransferEncodingField)>($r3);

        return $r4;
    }

    public java.lang.String getDispositionType()
    {
        org.apache.james.mime4j.message.Entity r0;
        java.lang.String $r3;
        org.apache.james.mime4j.field.ContentDispositionField $r2;
        org.apache.james.mime4j.parser.Field $r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.parser.Field obtainField(java.lang.String)>("Content-Disposition");

        $r2 = (org.apache.james.mime4j.field.ContentDispositionField) $r1;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.ContentDispositionField: java.lang.String getDispositionType()>();

        return $r3;
    }

    public java.lang.String getFilename()
    {
        org.apache.james.mime4j.message.Entity r0;
        java.lang.String $r3;
        org.apache.james.mime4j.field.ContentDispositionField $r2;
        org.apache.james.mime4j.parser.Field $r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.parser.Field obtainField(java.lang.String)>("Content-Disposition");

        $r2 = (org.apache.james.mime4j.field.ContentDispositionField) $r1;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.field.ContentDispositionField: java.lang.String getFilename()>();

        return $r3;
    }

    public org.apache.james.mime4j.message.Header getHeader()
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        r1 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header>;

        return r1;
    }

    public java.lang.String getMimeType()
    {
        org.apache.james.mime4j.field.ContentTypeField $r3, $r5;
        org.apache.james.mime4j.message.Entity r0, $r4;
        org.apache.james.mime4j.message.Header $r1;
        java.lang.String $r6;
        org.apache.james.mime4j.parser.Field $r2;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>("Content-Type");

        $r3 = (org.apache.james.mime4j.field.ContentTypeField) $r2;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity getParent()>();

        if $r4 == null goto label1;

        r0 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity getParent()>();

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>("Content-Type");

        $r5 = (org.apache.james.mime4j.field.ContentTypeField) $r2;

        goto label2;

     label1:
        $r5 = null;

     label2:
        $r6 = staticinvoke <org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField,org.apache.james.mime4j.field.ContentTypeField)>($r3, $r5);

        return $r6;
    }

    public org.apache.james.mime4j.message.Entity getParent()
    {
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        r0 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity parent>;

        return r0;
    }

    public boolean isMimeType(java.lang.String)
    {
        org.apache.james.mime4j.message.Entity r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        return $z0;
    }

    public boolean isMultipart()
    {
        org.apache.james.mime4j.field.ContentTypeField $r3;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r1;
        java.lang.String $r4;
        org.apache.james.mime4j.parser.Field $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>("Content-Type");

        $r3 = (org.apache.james.mime4j.field.ContentTypeField) $r2;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getBoundary()>();

        if $r4 == null goto label1;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.apache.james.mime4j.parser.Field obtainField(java.lang.String)
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r2;
        java.lang.String $r1;
        org.apache.james.mime4j.parser.Field $r3;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>($r1);

        return $r3;
    }

    public org.apache.james.mime4j.message.Header obtainHeader()
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header>;

        if $r1 != null goto label1;

        $r1 = new org.apache.james.mime4j.message.Header;

        specialinvoke $r1.<org.apache.james.mime4j.message.Header: void <init>()>();

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header> = $r1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header>;

        return $r1;
    }

    public org.apache.james.mime4j.message.Body removeBody()
    {
        org.apache.james.mime4j.message.Body $r1;
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body>;

        if $r1 != null goto label1;

        return null;

     label1:
        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body> = null;

        interfaceinvoke $r1.<org.apache.james.mime4j.message.Body: void setParent(org.apache.james.mime4j.message.Entity)>(null);

        return $r1;
    }

    public void setBody(org.apache.james.mime4j.message.Body)
    {
        java.lang.IllegalStateException $r3;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Body $r1, $r2;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Body;

        $r2 = r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body>;

        if $r2 != null goto label1;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body body> = $r1;

        interfaceinvoke $r1.<org.apache.james.mime4j.message.Body: void setParent(org.apache.james.mime4j.message.Entity)>(r0);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("body already set");

        throw $r3;
    }

    public void setBody(org.apache.james.mime4j.message.Body, java.lang.String)
    {
        org.apache.james.mime4j.message.Body $r1;
        java.lang.String $r2;
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Body;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body,java.lang.String,java.util.Map)>($r1, $r2, null);

        return;
    }

    public void setBody(org.apache.james.mime4j.message.Body, java.lang.String, java.util.Map)
    {
        org.apache.james.mime4j.field.ContentTypeField $r5;
        org.apache.james.mime4j.message.Entity r0;
        java.util.Map $r1;
        org.apache.james.mime4j.message.Header $r4;
        org.apache.james.mime4j.message.Body $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r2 := @parameter0: org.apache.james.mime4j.message.Body;

        $r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.util.Map;

        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>($r2);

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentTypeField contentType(java.lang.String,java.util.Map)>($r3, $r1);

        virtualinvoke $r4.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r5);

        return;
    }

    public void setContentDisposition(java.lang.String)
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r2;
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionField $r3;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>($r1, null, -1L, null, null, null);

        virtualinvoke $r2.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r3);

        return;
    }

    public void setContentDisposition(java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r3;
        java.lang.String $r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionField $r4;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>($r2, $r1, -1L, null, null, null);

        virtualinvoke $r3.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r4);

        return;
    }

    public void setContentDisposition(java.lang.String, java.lang.String, long)
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r3;
        long $l0;
        java.lang.String $r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionField $r4;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>($r2, $r1, $l0, null, null, null);

        virtualinvoke $r3.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r4);

        return;
    }

    public void setContentDisposition(java.lang.String, java.lang.String, long, java.util.Date, java.util.Date, java.util.Date)
    {
        java.util.Date $r2, $r3, $r4;
        long $l0;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r6;
        java.lang.String $r1, $r5;
        org.apache.james.mime4j.field.ContentDispositionField $r7;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 := @parameter3: java.util.Date;

        $r3 := @parameter4: java.util.Date;

        $r4 := @parameter5: java.util.Date;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r7 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>($r5, $r1, $l0, $r2, $r3, $r4);

        virtualinvoke $r6.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r7);

        return;
    }

    public void setContentTransferEncoding(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTransferEncodingField $r3;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentTransferEncodingField contentTransferEncoding(java.lang.String)>($r1);

        virtualinvoke $r2.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r3);

        return;
    }

    public void setFilename(java.lang.String)
    {
        java.util.HashMap $r6;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r2;
        java.util.Map $r7;
        java.lang.String $r1, $r5;
        org.apache.james.mime4j.field.ContentDispositionField $r4;
        org.apache.james.mime4j.parser.Field $r3;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header obtainHeader()>();

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.parser.Field getField(java.lang.String)>("Content-Disposition");

        $r4 = (org.apache.james.mime4j.field.ContentDispositionField) $r3;

        if $r4 != null goto label1;

        if $r1 == null goto label4;

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>("attachment", $r1, -1L, null, null, null);

        virtualinvoke $r2.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r4);

        return;

     label1:
        $r5 = virtualinvoke $r4.<org.apache.james.mime4j.field.ContentDispositionField: java.lang.String getDispositionType()>();

        $r6 = new java.util.HashMap;

        $r7 = virtualinvoke $r4.<org.apache.james.mime4j.field.ContentDispositionField: java.util.Map getParameters()>();

        specialinvoke $r6.<java.util.HashMap: void <init>(java.util.Map)>($r7);

        if $r1 != null goto label2;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>("filename");

        goto label3;

     label2:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("filename", $r1);

     label3:
        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.util.Map)>($r5, $r6);

        virtualinvoke $r2.<org.apache.james.mime4j.message.Header: void setField(org.apache.james.mime4j.parser.Field)>($r4);

     label4:
        return;
    }

    public void setHeader(org.apache.james.mime4j.message.Header)
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Header $r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Header;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header header> = $r1;

        return;
    }

    public void setMessage(org.apache.james.mime4j.message.Message)
    {
        org.apache.james.mime4j.message.Message $r1;
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Message;

        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body,java.lang.String,java.util.Map)>($r1, "message/rfc822", null);

        return;
    }

    public void setMultipart(org.apache.james.mime4j.message.Multipart)
    {
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Multipart $r1;
        java.util.Map $r5;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Multipart;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/");

        $r3 = virtualinvoke $r1.<org.apache.james.mime4j.message.Multipart: java.lang.String getSubType()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String createUniqueBoundary()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("boundary", $r4);

        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body,java.lang.String,java.util.Map)>($r1, $r3, $r5);

        return;
    }

    public void setMultipart(org.apache.james.mime4j.message.Multipart, java.util.Map)
    {
        java.util.HashMap $r5;
        org.apache.james.mime4j.message.Entity r0;
        org.apache.james.mime4j.message.Multipart $r1;
        java.util.Map $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Multipart;

        $r2 := @parameter1: java.util.Map;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/");

        $r4 = virtualinvoke $r1.<org.apache.james.mime4j.message.Multipart: java.lang.String getSubType()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("boundary");

        if $z0 != 0 goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r2);

        $r6 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String createUniqueBoundary()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("boundary", $r6);

        $r2 = $r5;

     label1:
        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body,java.lang.String,java.util.Map)>($r1, $r4, $r2);

        return;
    }

    public void setParent(org.apache.james.mime4j.message.Entity)
    {
        org.apache.james.mime4j.message.Entity r0, $r1;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.Entity;

        r0.<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity parent> = $r1;

        return;
    }

    public void setText(org.apache.james.mime4j.message.TextBody)
    {
        org.apache.james.mime4j.message.TextBody $r1;
        org.apache.james.mime4j.message.Entity r0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.TextBody;

        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setText(org.apache.james.mime4j.message.TextBody,java.lang.String)>($r1, "plain");

        return;
    }

    public void setText(org.apache.james.mime4j.message.TextBody, java.lang.String)
    {
        org.apache.james.mime4j.message.TextBody $r1;
        org.apache.james.mime4j.message.Entity r0;
        java.util.Map $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter0: org.apache.james.mime4j.message.TextBody;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<org.apache.james.mime4j.message.TextBody: java.lang.String getMimeCharset()>();

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("us-ascii");

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("charset", $r4);

        goto label2;

     label1:
        $r5 = null;

     label2:
        virtualinvoke r0.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body,java.lang.String,java.util.Map)>($r1, $r2, $r5);

        return;
    }
}
