public class org.codehaus.jackson.map.deser.BeanDeserializerFactory extends org.codehaus.jackson.map.deser.BasicDeserializerFactory
{
    public static final java.lang.Class[] INIT_CAUSE_PARAMS;
    public static final org.codehaus.jackson.map.deser.BeanDeserializerFactory instance;
    public final org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory $r1;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Ljava/lang/Throwable;";

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.lang.Class[] INIT_CAUSE_PARAMS> = $r0;

        $r1 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke $r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(null);

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerFactory instance> = $r1;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)
    {
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl $r2;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializerFactory$Config;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = $r2;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>()>();

     label1:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig> = $r1;

        return;
    }

    public static org.codehaus.jackson.map.Deserializers[] access$000()
    {
        org.codehaus.jackson.map.Deserializers[] r0;

        r0 = <org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS>;

        return r0;
    }

    public void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.CreatorContainer)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r9;
        int $i0, $i1, $i2;
        java.lang.String $r11, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r7;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r10;
        java.lang.IllegalArgumentException $r17;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;
        org.codehaus.jackson.map.deser.CreatorContainer $r5;
        java.util.List $r6;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r3;
        java.lang.Object $r8;
        java.lang.Class $r14, $r15;
        java.lang.StringBuilder $r18;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r12;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r4 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        $r5 := @parameter4: org.codehaus.jackson.map.deser.CreatorContainer;

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getConstructors()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label26;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.codehaus.jackson.map.introspect.AnnotatedConstructor) $r8;

        $i0 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getParameterCount()>();

        if $i0 >= 1 goto label02;

        goto label01;

     label02:
        $z2 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>($r9);

        $z1 = interfaceinvoke $r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r9);

        if $i0 != 1 goto label13;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(0);

        $r11 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r10);

        if $r11 == null goto label04;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 != 0 goto label03;

        goto label04;

     label03:
        $r12 = newarray (org.codehaus.jackson.map.deser.SettableBeanProperty)[1];

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1, $r2, $r11, 0, $r10);

        $r12[0] = $r13;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[])>($r9, $r12);

        goto label01;

     label04:
        $r14 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getParameterClass(int)>(0);

        if $r14 != class "Ljava/lang/String;" goto label06;

        if $z2 != 0 goto label05;

        if $z1 == 0 goto label01;

     label05:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addStringConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r9);

        goto label01;

     label06:
        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r14 == $r15 goto label11;

        if $r14 != class "Ljava/lang/Integer;" goto label07;

        goto label11;

     label07:
        $r15 = <java.lang.Long: java.lang.Class TYPE>;

        if $r14 == $r15 goto label09;

        if $r14 != class "Ljava/lang/Long;" goto label08;

        goto label09;

     label08:
        if $z2 == 0 goto label01;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addDelegatingConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r9);

        goto label01;

     label09:
        if $z2 != 0 goto label10;

        if $z1 == 0 goto label01;

     label10:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addLongConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r9);

        goto label01;

     label11:
        if $z2 != 0 goto label12;

        if $z1 == 0 goto label01;

     label12:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addIntConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r9);

        goto label01;

     label13:
        if $z2 != 0 goto label14;

        if $z1 != 0 goto label14;

        goto label01;

     label14:
        $r12 = newarray (org.codehaus.jackson.map.deser.SettableBeanProperty)[$i0];

        $z1 = 0;

        $z0 = 0;

        $i1 = 0;

     label15:
        if $i1 >= $i0 goto label25;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>($i1);

        if $r10 != null goto label16;

        $r11 = null;

        goto label17;

     label16:
        $r11 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r10);

     label17:
        $r16 = $r11;

        if $r11 == null goto label19;

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i2 != 0 goto label18;

        goto label19;

     label18:
        $z3 = 0;

        goto label20;

     label19:
        $z3 = 1;

     label20:
        $z0 = $z0 | $z3;

        if $z0 != 0 goto label21;

        $z3 = 1;

        goto label22;

     label21:
        $z3 = 0;

     label22:
        $z1 = $z1 | $z3;

        if $z0 == 0 goto label24;

        if $z1 != 0 goto label23;

        if $z2 != 0 goto label23;

        goto label24;

     label23:
        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument #");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of constructor ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator");

        $r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r17;

     label24:
        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1, $r2, $r16, $i1, $r10);

        $r12[$i1] = $r13;

        $i1 = $i1 + 1;

        goto label15;

     label25:
        if $z1 == 0 goto label01;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[])>($r9, $r12);

        goto label01;

     label26:
        return;
    }

    public void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.CreatorContainer)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r15;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        int $i0, $i1, $i2;
        java.lang.String $r11;
        boolean $z0;
        java.util.Iterator $r7;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r9;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r10;
        java.lang.IllegalArgumentException $r16;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;
        org.codehaus.jackson.map.deser.CreatorContainer $r5;
        java.util.List $r6;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r3;
        java.lang.Object $r8;
        java.lang.Class $r12, $r13;
        java.lang.StringBuilder $r17;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r14;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r4 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        $r5 := @parameter4: org.codehaus.jackson.map.deser.CreatorContainer;

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getFactoryMethods()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r8;

        $i0 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        if $i0 >= 1 goto label02;

        goto label01;

     label02:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>($r9);

        $i1 = 0;

        if $i0 != 1 goto label12;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(0);

        $r11 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r10);

        if $r11 == null goto label03;

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i2 != 0 goto label13;

     label03:
        $r12 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        if $r12 != class "Ljava/lang/String;" goto label05;

        if $z0 != 0 goto label04;

        $z0 = interfaceinvoke $r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r9);

        if $z0 == 0 goto label01;

     label04:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addStringFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r9);

        goto label01;

     label05:
        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r12 == $r13 goto label10;

        if $r12 != class "Ljava/lang/Integer;" goto label06;

        goto label10;

     label06:
        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        if $r12 == $r13 goto label08;

        if $r12 != class "Ljava/lang/Long;" goto label07;

        goto label08;

     label07:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>($r9);

        if $z0 == 0 goto label01;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addDelegatingFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r9);

        goto label01;

     label08:
        if $z0 != 0 goto label09;

        $z0 = interfaceinvoke $r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r9);

        if $z0 == 0 goto label01;

     label09:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addLongFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r9);

        goto label01;

     label10:
        if $z0 != 0 goto label11;

        $z0 = interfaceinvoke $r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r9);

        if $z0 == 0 goto label01;

     label11:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addIntFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r9);

        goto label01;

     label12:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>($r9);

        if $z0 != 0 goto label13;

        goto label01;

     label13:
        $r14 = newarray (org.codehaus.jackson.map.deser.SettableBeanProperty)[$i0];

     label14:
        if $i1 >= $i0 goto label16;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>($i1);

        $r11 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r10);

        if $r11 == null goto label15;

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i2 == 0 goto label15;

        $r15 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1, $r2, $r11, $i1, $r10);

        $r14[$i1] = $r15;

        $i1 = $i1 + 1;

        goto label14;

     label15:
        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument #");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of factory method ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no property name annotation; must have when multiple-paramater static method annotated as Creator");

        $r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r16;

     label16:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.deser.SettableBeanProperty[])>($r9, $r14);

        goto label01;

     label17:
        return;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer)
    {
        java.util.Iterator $r9;
        org.codehaus.jackson.map.DeserializerProvider $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.BeanProperty $r3;
        java.lang.Iterable $r8;
        org.codehaus.jackson.map.TypeDeserializer $r4;
        org.codehaus.jackson.map.Deserializers $r11;
        org.codehaus.jackson.map.JsonDeserializer $r5, $r12;
        java.lang.Object $r10;
        org.codehaus.jackson.map.DeserializerFactory$Config $r7;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.type.ArrayType $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r6 := @parameter0: org.codehaus.jackson.map.type.ArrayType;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r3 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r4 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        $r5 := @parameter5: org.codehaus.jackson.map.JsonDeserializer;

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.codehaus.jackson.map.Deserializers) $r10;

        $r12 = interfaceinvoke $r11.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r6, $r1, $r2, $r3, $r4, $r5);

        if $r12 == null goto label1;

        return $r12;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty)
    {
        java.util.Iterator $r8;
        org.codehaus.jackson.map.DeserializerProvider $r2;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.BeanProperty $r4;
        java.lang.Iterable $r7;
        org.codehaus.jackson.map.Deserializers $r10;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Object $r9;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        org.codehaus.jackson.map.DeserializerFactory$Config $r6;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r5 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r3 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.codehaus.jackson.map.Deserializers) $r9;

        $r11 = interfaceinvoke $r10.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>($r5, $r1, $r2, $r3, $r4);

        if $r11 == null goto label1;

        return $r11;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer)
    {
        java.util.Iterator $r10;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.type.CollectionType $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.BeanProperty $r5;
        java.lang.Iterable $r9;
        org.codehaus.jackson.map.TypeDeserializer $r6;
        org.codehaus.jackson.map.Deserializers $r12;
        org.codehaus.jackson.map.JsonDeserializer $r7, $r13;
        java.lang.Object $r11;
        org.codehaus.jackson.map.DeserializerFactory$Config $r8;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.CollectionType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        $r7 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.codehaus.jackson.map.Deserializers) $r11;

        $r13 = interfaceinvoke $r12.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, $r6, $r7);

        if $r13 == null goto label1;

        return $r13;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r1;
        java.util.Iterator $r10;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.BeanProperty $r5;
        java.lang.Iterable $r9;
        org.codehaus.jackson.map.TypeDeserializer $r6;
        org.codehaus.jackson.map.Deserializers $r12;
        org.codehaus.jackson.map.JsonDeserializer $r7, $r13;
        java.lang.Object $r11;
        org.codehaus.jackson.map.DeserializerFactory$Config $r8;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.CollectionLikeType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        $r7 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.codehaus.jackson.map.Deserializers) $r11;

        $r13 = interfaceinvoke $r12.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, $r6, $r7);

        if $r13 == null goto label1;

        return $r13;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty)
    {
        java.util.Iterator $r7;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.BeanProperty $r3;
        java.lang.Iterable $r6;
        org.codehaus.jackson.map.Deserializers $r9;
        java.lang.Class $r4;
        java.lang.Object $r8;
        org.codehaus.jackson.map.JsonDeserializer $r10;
        org.codehaus.jackson.map.DeserializerFactory$Config $r5;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r4 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.codehaus.jackson.map.Deserializers) $r8;

        $r10 = interfaceinvoke $r9.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>($r4, $r1, $r2, $r3);

        if $r10 == null goto label1;

        return $r10;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        java.lang.Iterable $r10;
        org.codehaus.jackson.map.Deserializers $r13;
        org.codehaus.jackson.map.JsonDeserializer $r8, $r14;
        boolean $z0;
        java.util.Iterator $r11;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.BeanProperty $r5;
        org.codehaus.jackson.map.TypeDeserializer $r7;
        org.codehaus.jackson.map.KeyDeserializer $r6;
        org.codehaus.jackson.map.type.MapType $r1;
        java.lang.Object $r12;
        org.codehaus.jackson.map.DeserializerFactory$Config $r9;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.MapType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        $r7 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        $r8 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.codehaus.jackson.map.Deserializers) $r12;

        $r14 = interfaceinvoke $r13.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8);

        if $r14 == null goto label1;

        return $r14;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        java.lang.Iterable $r10;
        org.codehaus.jackson.map.Deserializers $r13;
        org.codehaus.jackson.map.type.MapLikeType $r1;
        org.codehaus.jackson.map.JsonDeserializer $r8, $r14;
        boolean $z0;
        java.util.Iterator $r11;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.BeanProperty $r5;
        org.codehaus.jackson.map.TypeDeserializer $r7;
        org.codehaus.jackson.map.KeyDeserializer $r6;
        java.lang.Object $r12;
        org.codehaus.jackson.map.DeserializerFactory$Config $r9;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.MapLikeType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        $r7 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        $r8 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.codehaus.jackson.map.Deserializers) $r12;

        $r14 = interfaceinvoke $r13.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8);

        if $r14 == null goto label1;

        return $r14;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.BeanProperty)
    {
        java.util.Iterator $r6;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.BeanProperty $r2;
        java.lang.Iterable $r5;
        org.codehaus.jackson.map.Deserializers $r8;
        java.lang.Class $r3;
        java.lang.Object $r7;
        org.codehaus.jackson.map.JsonDeserializer $r9;
        org.codehaus.jackson.map.DeserializerFactory$Config $r4;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r3 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.codehaus.jackson.map.Deserializers) $r7;

        $r9 = interfaceinvoke $r8.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty)>($r3, $r1, $r2);

        if $r9 == null goto label1;

        return $r9;

     label2:
        return null;
    }

    public org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        java.util.Iterator $r6;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        java.lang.Iterable $r5;
        org.codehaus.jackson.map.AbstractTypeResolver $r8;
        org.codehaus.jackson.type.JavaType $r2, $r9;
        java.lang.Class $r3, $r10;
        java.lang.Object $r7;
        org.codehaus.jackson.map.DeserializerFactory$Config $r4;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasAbstractTypeResolvers()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable abstractTypeResolvers()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.codehaus.jackson.map.AbstractTypeResolver) $r7;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, $r2);

        if $r9 == null goto label1;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r10 == $r3 goto label1;

        return $r9;

     label2:
        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver getAbstractTypeResolver()>();

        if $r8 == null goto label3;

        $r2 = virtualinvoke $r8.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, $r2);

        if $r2 == null goto label3;

        $r10 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r10 == $r3 goto label3;

        return $r2;

     label3:
        return null;
    }

    public void addBeanProps(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r25;
        java.lang.String[] $r13;
        java.util.HashMap $r21;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r26;
        java.lang.Iterable $r18;
        java.util.LinkedHashMap $r10;
        java.util.HashSet $r14, $r27;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r3;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r9;
        java.lang.Boolean $r12;
        java.lang.String $r17;
        boolean $z0;
        java.util.Map$Entry $r23;
        java.util.Iterator $r15;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r6;
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility $r7;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r11, $r19;
        java.util.Set $r22;
        org.codehaus.jackson.map.AnnotationIntrospector $r8;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r4, $r5;
        java.lang.Object $r16;
        org.codehaus.jackson.map.introspect.AnnotatedField $r20;
        java.lang.Class $r24, $r28;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r5 = $r4;

        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 != 0 goto label01;

        $r7 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        $r5 = interfaceinvoke $r4.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r7);

     label01:
        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 != 0 goto label02;

        $r7 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        $r5 = interfaceinvoke $r5.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r7);

     label02:
        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r4 = virtualinvoke $r8.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r9, $r5);

        $r10 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r4);

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter()>();

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r12 = virtualinvoke $r8.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r9);

        if $r12 == null goto label03;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setIgnoreUnknownProperties(boolean)>($z0);

     label03:
        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r13 = virtualinvoke $r8.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r9);

        $r14 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r13);

        $r15 = virtualinvoke $r14.<java.util.HashSet: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r17);

        goto label04;

     label05:
        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r18 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable ignoredMemberMethods()>();

        $r15 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r16;

        $r17 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r19);

        if $r17 == null goto label06;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r17);

        goto label06;

     label07:
        $r18 = virtualinvoke $r9.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable ignoredFields()>();

        $r15 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r16;

        $r17 = virtualinvoke $r20.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r17);

        goto label08;

     label09:
        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        $r22 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.util.Map$Entry) $r16;

        $r16 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $z0 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>($r17);

        if $z0 != 0 goto label10;

        $r16 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r16;

        $r24 = virtualinvoke $r19.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>($r1, $r2, $r24, $r21);

        if $z0 == 0 goto label11;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r17);

        goto label10;

     label11:
        $r25 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r17, $r19);

        if $r25 == null goto label10;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r25);

        goto label10;

     label12:
        if $r11 == null goto label13;

        $r26 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r11);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty)>($r26);

     label13:
        $r27 = new java.util.HashSet;

        $r22 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r27.<java.util.HashSet: void <init>(java.util.Collection)>($r22);

        $r10 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>($r4, $r27);

        $r22 = virtualinvoke $r10.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.util.Map$Entry) $r16;

        $r16 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $z0 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>($r17);

        if $z0 != 0 goto label14;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>($r17);

        if $z0 != 0 goto label14;

        $r16 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r16;

        $r24 = virtualinvoke $r20.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getRawType()>();

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>($r1, $r2, $r24, $r21);

        if $z0 == 0 goto label15;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r17);

        goto label14;

     label15:
        $r25 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>($r1, $r2, $r17, $r20);

        if $r25 == null goto label14;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r25);

        virtualinvoke $r27.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

        goto label14;

     label16:
        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 == 0 goto label19;

        $r10 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>($r4, $r27);

        $r22 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.util.Map$Entry) $r16;

        $r16 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r16;

        $r24 = virtualinvoke $r11.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        $r28 = class "Ljava/util/Collection;";

        $z0 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r24);

        if $z0 != 0 goto label18;

        $r28 = class "Ljava/util/Map;";

        $z0 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r24);

        if $z0 != 0 goto label18;

        goto label17;

     label18:
        $r16 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $z0 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>($r17);

        if $z0 != 0 goto label17;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>($r17);

        if $z0 != 0 goto label17;

        $r25 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r17, $r11);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r25);

        virtualinvoke $r27.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

        goto label17;

     label19:
        return;
    }

    public void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r10;
        java.util.Map $r4;
        java.lang.String $r9, $r11;
        boolean $z0;
        java.util.Map$Entry $r8;
        java.util.Iterator $r6;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r12;
        java.util.Set $r5;
        java.lang.Object $r7;
        org.codehaus.jackson.map.introspect.AnnotatedField $r14;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Map findBackReferenceProperties()>();

        if $r4 == null goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (org.codehaus.jackson.map.introspect.AnnotatedMember) $r7;

        $z0 = $r10 instanceof org.codehaus.jackson.map.introspect.AnnotatedMethod;

        if $z0 == 0 goto label2;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.introspect.Annotated: java.lang.String getName()>();

        $r12 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r10;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r11, $r12);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>($r9, $r13);

        goto label1;

     label2:
        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.introspect.Annotated: java.lang.String getName()>();

        $r14 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r10;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>($r1, $r2, $r11, $r14);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>($r9, $r13);

        goto label1;

     label3:
        return;
    }

    public org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerModifier $r12;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        java.lang.Iterable $r9;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r5, $r6;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.JsonDeserializer $r13, $r14;
        boolean $z0;
        java.util.Iterator $r10;
        org.codehaus.jackson.map.BeanProperty $r4;
        org.codehaus.jackson.map.deser.CreatorContainer $r7;
        java.lang.Object $r11;
        org.codehaus.jackson.map.DeserializerFactory$Config $r8;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r2);

        $r6 = $r5;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r1, $r2);

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)>($r7);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r2, $r5);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r2, $r5);

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r11;

        $r6 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r2, $r6);

        goto label1;

     label2:
        $r13 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>($r4);

        $r14 = $r13;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label4;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r11;

        $r14 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r14);

        goto label3;

     label4:
        return $r13;

     label5:
        return $r14;
    }

    public org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerModifier $r15;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r10;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        java.lang.Iterable $r12;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r5, $r6;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.JsonDeserializer $r16, $r17;
        boolean $z0;
        java.util.Iterator $r13;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r9;
        java.lang.Class[] $r8;
        org.codehaus.jackson.map.BeanProperty $r4;
        org.codehaus.jackson.map.deser.BeanDeserializer $r19;
        org.codehaus.jackson.map.deser.ThrowableDeserializer $r18;
        org.codehaus.jackson.map.deser.CreatorContainer $r7;
        java.lang.Object $r14;
        org.codehaus.jackson.map.DeserializerFactory$Config $r11;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r2);

        $r6 = $r5;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r1, $r2);

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)>($r7);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r2, $r5);

        $r8 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.lang.Class[] INIT_CAUSE_PARAMS>;

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>("initCause", $r8);

        if $r9 == null goto label1;

        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, "cause", $r9);

        if $r10 == null goto label1;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r10);

     label1:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("localizedMessage");

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("message");

        $r11 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r11.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label3;

        $r11 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r12 = virtualinvoke $r11.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r13 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r14;

        $r6 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r2, $r6);

        goto label2;

     label3:
        $r16 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>($r4);

        $r17 = $r16;

        $z0 = $r16 instanceof org.codehaus.jackson.map.deser.BeanDeserializer;

        if $z0 == 0 goto label4;

        $r18 = new org.codehaus.jackson.map.deser.ThrowableDeserializer;

        $r19 = (org.codehaus.jackson.map.deser.BeanDeserializer) $r16;

        specialinvoke $r18.<org.codehaus.jackson.map.deser.ThrowableDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>($r19);

        $r17 = $r18;

     label4:
        $r11 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r11.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label6;

        $r11 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r12 = virtualinvoke $r11.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r13 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r14;

        $r17 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r17);

        goto label5;

     label6:
        return $r17;
    }

    public org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r4;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        org.codehaus.jackson.map.type.TypeBindings $r5;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r12;
        org.codehaus.jackson.map.util.Annotations $r10;
        java.lang.reflect.Type $r6;
        org.codehaus.jackson.type.JavaType $r7;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        org.codehaus.jackson.map.BeanProperty$Std $r8;
        java.lang.String $r9;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 := @parameter2: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedMember: void fixAccess()>();

     label1:
        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(1);

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r6);

        $r8 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r10 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r8.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r9, $r7, $r10, $r1);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>($r2, $r3, $r7, $r1, $r8);

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r2, $r1, $r8);

        if $r11 == null goto label2;

        $r12 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType)>($r8, $r1, $r7);

        virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableAnyProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r11);

        return $r12;

     label2:
        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.BeanProperty$Std: java.lang.String getName()>();

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r2, $r1, $r7, $r9);

        $r12 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType)>($r8, $r1, $r7);

        return $r12;
    }

    public org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r2;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r2 = new org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r1);

        return $r2;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedField)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.type.TypeBindings $r6;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r17;
        org.codehaus.jackson.map.util.Annotations $r10;
        org.codehaus.jackson.type.JavaType $r8, $r11;
        org.codehaus.jackson.map.JsonDeserializer $r12;
        java.lang.String $r1;
        boolean $z0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r5;
        org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty $r15;
        org.codehaus.jackson.map.AnnotationIntrospector $r16;
        org.codehaus.jackson.map.TypeDeserializer $r14;
        java.lang.reflect.Type $r7;
        org.codehaus.jackson.map.introspect.AnnotatedField $r2;
        java.lang.Object $r13;
        org.codehaus.jackson.map.BeanProperty$Std $r9;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r4 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r5 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r5);

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedMember: void fixAccess()>();

     label1:
        $r6 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Type getGenericType()>();

        $r8 = virtualinvoke $r6.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r7);

        $r9 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r10 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r9.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r1, $r8, $r10, $r2);

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>($r3, $r4, $r8, $r2, $r9);

        if $r11 == $r8 goto label2;

        $r9 = virtualinvoke $r9.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r11);

     label2:
        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r3, $r2, $r9);

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r3, $r2, $r11, $r1);

        $r13 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r14 = (org.codehaus.jackson.map.TypeDeserializer) $r13;

        $r15 = new org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty;

        $r10 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedField)>($r1, $r8, $r14, $r10, $r2);

        if $r12 == null goto label3;

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r12);

     label3:
        $r16 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r2);

        if $r17 == null goto label4;

        $z0 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>();

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>($r1);

     label4:
        return $r15;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.type.TypeBindings $r6;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r17;
        org.codehaus.jackson.map.util.Annotations $r10;
        org.codehaus.jackson.type.JavaType $r8, $r11;
        org.codehaus.jackson.map.JsonDeserializer $r12;
        java.lang.String $r1;
        boolean $z0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r5;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r16;
        org.codehaus.jackson.map.TypeDeserializer $r14;
        java.lang.reflect.Type $r7;
        org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty $r15;
        java.lang.Object $r13;
        org.codehaus.jackson.map.BeanProperty$Std $r9;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r4 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r5 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r5);

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedMember: void fixAccess()>();

     label1:
        $r6 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(0);

        $r8 = virtualinvoke $r6.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r7);

        $r9 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r10 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r9.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r1, $r8, $r10, $r2);

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>($r3, $r4, $r8, $r2, $r9);

        if $r11 == $r8 goto label2;

        $r9 = virtualinvoke $r9.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r11);

     label2:
        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r3, $r2, $r9);

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r3, $r2, $r11, $r1);

        $r13 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r14 = (org.codehaus.jackson.map.TypeDeserializer) $r13;

        $r15 = new org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty;

        $r10 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r8, $r14, $r10, $r2);

        if $r12 == null goto label3;

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r12);

     label3:
        $r16 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r2);

        if $r17 == null goto label4;

        $z0 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>();

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>($r1);

     label4:
        return $r15;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r5;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3;
        org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty $r13;
        org.codehaus.jackson.map.type.TypeBindings $r6;
        org.codehaus.jackson.map.DeserializationConfig $r4;
        org.codehaus.jackson.map.TypeDeserializer $r12;
        org.codehaus.jackson.map.util.Annotations $r9;
        org.codehaus.jackson.type.JavaType $r7;
        org.codehaus.jackson.map.JsonDeserializer $r10;
        java.lang.Object $r11;
        java.lang.String $r2;
        org.codehaus.jackson.map.BeanProperty$Std $r8;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r4 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r5 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r5);

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMember: void fixAccess()>();

     label1:
        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r7 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)>($r6);

        $r8 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r8.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r2, $r7, $r9, $r3);

        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r4, $r3, $r8);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r4, $r3, $r7, $r2);

        $r11 = virtualinvoke $r7.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r12 = (org.codehaus.jackson.map.TypeDeserializer) $r11;

        $r13 = new org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty;

        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r2, $r7, $r12, $r9, $r3);

        if $r10 == null goto label2;

        virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r10);

     label2:
        return $r13;
    }

    public org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r6;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.BeanProperty $r1;
        org.codehaus.jackson.map.deser.AbstractDeserializer $r12;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r7;
        org.codehaus.jackson.type.JavaType $r4, $r9;
        org.codehaus.jackson.map.JsonDeserializer $r8;
        java.lang.Class $r10, $r11;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.BeanDescription $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter1: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r1 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r2, $r4);

     label1:
        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r4);

        $r6 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r5;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r2, $r7, $r1);

        if $r8 == null goto label2;

        return $r8;

     label2:
        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r2, $r7, $r4, null);

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r11 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r10 == $r11 goto label3;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r9);

        $r6 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r5;

        $r4 = $r9;

     label3:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r4, $r2, $r3, $r6, $r1);

        if $r8 == null goto label4;

        return $r8;

     label4:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isThrowable()>();

        if $z0 == 0 goto label5;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r2, $r4, $r6, $r1);

        return $r8;

     label5:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label6;

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r2, $r6);

        if $r9 == null goto label6;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r9);

        $r6 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r5;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r2, $r9, $r6, $r1);

        return $r8;

     label6:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findStdBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r2, $r3, $r4, $r1);

        if $r8 == null goto label7;

        return $r8;

     label7:
        $r10 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isPotentialBeanType(java.lang.Class)>($r10);

        if $z0 != 0 goto label8;

        return null;

     label8:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label9;

        $r12 = new org.codehaus.jackson.map.deser.AbstractDeserializer;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.AbstractDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>($r4);

        return $r12;

     label9:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r2, $r4, $r6, $r1);

        return $r8;
    }

    public org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty)
    {
        java.util.Iterator $r9;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r7;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.BeanProperty $r2;
        java.lang.Iterable $r8;
        org.codehaus.jackson.map.KeyDeserializer $r12;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r5;
        java.lang.Object $r10;
        org.codehaus.jackson.map.DeserializerFactory$Config $r4;
        org.codehaus.jackson.map.KeyDeserializers $r11;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.BeanDescription $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasKeyDeserializers()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>($r5);

        $r7 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r6;

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r8 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable keyDeserializers()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.codehaus.jackson.map.KeyDeserializers) $r10;

        $r12 = interfaceinvoke $r11.<org.codehaus.jackson.map.KeyDeserializers: org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>($r1, $r3, $r7, $r2);

        if $r12 == null goto label1;

        return $r12;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r4;
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility $r10;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        java.lang.reflect.Constructor $r7;
        org.codehaus.jackson.map.AnnotationIntrospector $r5, $r11;
        org.codehaus.jackson.map.deser.CreatorContainer $r3;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r8, $r9;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r12;
        org.codehaus.jackson.type.JavaType $r6;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        $r3 = new org.codehaus.jackson.map.deser.CreatorContainer;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.CreatorContainer: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription,boolean)>($r2, $z0);

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType getType()>();

        $z1 = virtualinvoke $r6.<org.codehaus.jackson.type.JavaType: boolean isConcrete()>();

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Constructor findDefaultConstructor()>();

        if $r7 == null goto label2;

        if $z0 == 0 goto label1;

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r7);

     label1:
        virtualinvoke $r3.<org.codehaus.jackson.map.deser.CreatorContainer: void setDefaultConstructor(java.lang.reflect.Constructor)>($r7);

     label2:
        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r9 = $r8;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        if $z0 != 0 goto label3;

        $r10 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        $r9 = interfaceinvoke $r8.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r10);

     label3:
        $r11 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r12 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r8 = virtualinvoke $r11.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r12, $r9);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.CreatorContainer)>($r1, $r2, $r8, $r5, $r3);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.CreatorContainer)>($r1, $r2, $r8, $r5, $r3);

        return $r3;
    }

    public final org.codehaus.jackson.map.DeserializerFactory$Config getConfig()
    {
        org.codehaus.jackson.map.DeserializerFactory$Config r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        return r1;
    }

    public boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.Class, java.util.Map)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r8;
        java.util.Map $r2;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r9;
        java.lang.Boolean $r6, $r10;
        java.lang.Class $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.BeanDescription $r7;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r4 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 := @parameter2: java.lang.Class;

        $r2 := @parameter3: java.util.Map;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.lang.Boolean) $r5;

        if $r6 != null goto label1;

        $r7 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>($r1);

        $r4 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r7;

        $r8 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r9 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r10 = virtualinvoke $r8.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r9);

        $r6 = $r10;

        if $r10 != null goto label1;

        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label1:
        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isPotentialBeanType(java.lang.Class)
    {
        java.lang.Class $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.String canBeABeanType(java.lang.Class)>($r1);

        if $r2 != null goto label3;

        $z0 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: boolean isProxyType(java.lang.Class)>($r1);

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.String isLocalType(java.lang.Class)>($r1);

        if $r2 != null goto label1;

        return 1;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Class ");

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as a Bean");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Proxy class ");

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as a Bean");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Class ");

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as a Bean");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        java.lang.IllegalArgumentException $r6;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.type.JavaType $r2, $r3;
        java.lang.Class $r4, $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

     label1:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, $r2);

        if $r3 != null goto label2;

        return $r2;

     label2:
        $r4 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r4 == $r5 goto label3;

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label3;

        $r2 = $r3;

        goto label1;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid abstract type resolution from ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": latter is not a subtype of former");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        goto label4;

     label4:
        throw $r6;
    }

    public org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription)
    {
        java.util.Iterator $r11;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r6;
        java.lang.Iterable $r10;
        org.codehaus.jackson.map.AbstractTypeResolver $r3;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r7;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r8;
        org.codehaus.jackson.type.JavaType $r5, $r9;
        java.lang.Object $r12;
        org.codehaus.jackson.map.DeserializerFactory$Config $r4;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver getAbstractTypeResolver()>();

        if $r3 != null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasAbstractTypeResolvers()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType getType()>();

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r8 = virtualinvoke $r6.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>($r1, $r7, $r5);

        if $r8 == null goto label2;

        return null;

     label2:
        if $r3 == null goto label3;

        $r9 = virtualinvoke $r3.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, $r5);

        if $r9 == null goto label3;

        return $r9;

     label3:
        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r10 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable abstractTypeResolvers()>();

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.codehaus.jackson.map.AbstractTypeResolver) $r12;

        $r9 = virtualinvoke $r3.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, $r5);

        if $r9 == null goto label4;

        return $r9;

     label5:
        return null;
    }

    public org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)
    {
        java.lang.IllegalStateException $r4;
        java.lang.Class $r3;
        java.lang.StringBuilder $r5;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1, $r2;
        java.lang.String $r6;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializerFactory$Config;

        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        if $r2 != $r1 goto label1;

        return r0;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "Lorg/codehaus/jackson/map/deser/BeanDeserializerFactory;" goto label2;

        r0 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>($r1);

        return r0;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtype of BeanDeserializerFactory (");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has not properly overridden method \'withAdditionalDeserializers\': can not instantiate subtype with ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("additional deserializer definitions");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }
}
