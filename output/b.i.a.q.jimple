public final class b.i.a.q extends java.lang.Object
{
    public static final java.lang.Object a;
    public static java.util.Set b;
    public static final java.lang.Object c;
    public final android.content.Context d;
    public final android.app.NotificationManager e;

    static void <clinit>()
    {
        java.util.HashSet $r1;
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <b.i.a.q: java.lang.Object a> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <b.i.a.q: java.util.Set b> = $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <b.i.a.q: java.lang.Object c> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r2;
        android.app.NotificationManager $r3;
        java.lang.Object $r1;
        b.i.a.q r0;

        r0 := @this: b.i.a.q;

        $r2 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<b.i.a.q: android.content.Context d> = $r2;

        $r2 = r0.<b.i.a.q: android.content.Context d>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r3 = (android.app.NotificationManager) $r1;

        r0.<b.i.a.q: android.app.NotificationManager e> = $r3;

        return;
    }

    public static b.i.a.q a(android.content.Context)
    {
        android.content.Context $r0;
        b.i.a.q $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = new b.i.a.q;

        specialinvoke $r1.<b.i.a.q: void <init>(android.content.Context)>($r0);

        return $r1;
    }

    public boolean a()
    {
        android.content.Context $r8;
        android.app.AppOpsManager $r10;
        java.lang.Object[] $r20;
        java.lang.NoSuchMethodException $r2;
        java.lang.Integer $r19;
        java.lang.NoSuchFieldException $r3;
        int $i0, $i1;
        java.lang.String $r12, $r14;
        java.lang.reflect.Method $r17;
        boolean $z0;
        java.lang.IllegalAccessException $r5;
        android.app.NotificationManager $r7;
        java.lang.Class[] $r15;
        java.lang.RuntimeException $r6;
        b.i.a.q r0;
        java.lang.reflect.Field $r18;
        java.lang.reflect.InvocationTargetException $r4;
        java.lang.ClassNotFoundException $r1;
        java.lang.Object $r9;
        java.lang.Class $r13, $r16;
        android.content.pm.ApplicationInfo $r11;

        r0 := @this: b.i.a.q;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label01;

        $r7 = r0.<b.i.a.q: android.app.NotificationManager e>;

        $z0 = virtualinvoke $r7.<android.app.NotificationManager: boolean areNotificationsEnabled()>();

        return $z0;

     label01:
        if $i0 < 19 goto label26;

        $r8 = r0.<b.i.a.q: android.content.Context d>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r10 = (android.app.AppOpsManager) $r9;

        $r8 = r0.<b.i.a.q: android.content.Context d>;

        $r11 = virtualinvoke $r8.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r8 = r0.<b.i.a.q: android.content.Context d>;

        $r8 = virtualinvoke $r8.<android.content.Context: android.content.Context getApplicationContext()>();

        $r12 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $r13 = class "Landroid/app/AppOpsManager;";

     label02:
        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r14);

     label03:
        $r15 = newarray (java.lang.Class)[3];

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

     label04:
        $r15[0] = $r16;

     label05:
        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

     label06:
        $r15[1] = $r16;

        $r15[2] = class "Ljava/lang/String;";

     label07:
        $r17 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("checkOpNoThrow", $r15);

        $r18 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("OP_POST_NOTIFICATION");

        $r9 = virtualinvoke $r18.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Integer;");

     label08:
        $r19 = (java.lang.Integer) $r9;

     label09:
        $i1 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

     label10:
        $r20 = newarray (java.lang.Object)[3];

     label11:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label12:
        $r20[0] = $r19;

     label13:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label14:
        $r20[1] = $r19;

        $r20[2] = $r12;

     label15:
        $r9 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r10, $r20);

     label16:
        $r19 = (java.lang.Integer) $r9;

     label17:
        $i0 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

     label18:
        if $i0 != 0 goto label19;

        return 1;

     label19:
        return 0;

     label20:
        $r1 := @caughtexception;

        return 1;

     label21:
        $r2 := @caughtexception;

        return 1;

     label22:
        $r3 := @caughtexception;

        return 1;

     label23:
        $r4 := @caughtexception;

        return 1;

     label24:
        $r5 := @caughtexception;

        return 1;

     label25:
        $r6 := @caughtexception;

     label26:
        return 1;

        catch java.lang.ClassNotFoundException from label02 to label03 with label20;
        catch java.lang.ClassNotFoundException from label07 to label08 with label20;
        catch java.lang.ClassNotFoundException from label09 to label10 with label20;
        catch java.lang.ClassNotFoundException from label11 to label12 with label20;
        catch java.lang.ClassNotFoundException from label13 to label14 with label20;
        catch java.lang.ClassNotFoundException from label15 to label16 with label20;
        catch java.lang.ClassNotFoundException from label17 to label18 with label20;
        catch java.lang.NoSuchMethodException from label02 to label03 with label21;
        catch java.lang.NoSuchMethodException from label07 to label08 with label21;
        catch java.lang.NoSuchMethodException from label09 to label10 with label21;
        catch java.lang.NoSuchMethodException from label11 to label12 with label21;
        catch java.lang.NoSuchMethodException from label13 to label14 with label21;
        catch java.lang.NoSuchMethodException from label15 to label16 with label21;
        catch java.lang.NoSuchMethodException from label17 to label18 with label21;
        catch java.lang.NoSuchFieldException from label02 to label03 with label22;
        catch java.lang.NoSuchFieldException from label07 to label08 with label22;
        catch java.lang.NoSuchFieldException from label09 to label10 with label22;
        catch java.lang.NoSuchFieldException from label11 to label12 with label22;
        catch java.lang.NoSuchFieldException from label13 to label14 with label22;
        catch java.lang.NoSuchFieldException from label15 to label16 with label22;
        catch java.lang.NoSuchFieldException from label17 to label18 with label22;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label23;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label23;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label23;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label23;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label23;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label23;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label23;
        catch java.lang.IllegalAccessException from label02 to label03 with label24;
        catch java.lang.IllegalAccessException from label07 to label08 with label24;
        catch java.lang.IllegalAccessException from label09 to label10 with label24;
        catch java.lang.IllegalAccessException from label11 to label12 with label24;
        catch java.lang.IllegalAccessException from label13 to label14 with label24;
        catch java.lang.IllegalAccessException from label15 to label16 with label24;
        catch java.lang.IllegalAccessException from label17 to label18 with label24;
        catch java.lang.RuntimeException from label02 to label03 with label25;
        catch java.lang.RuntimeException from label04 to label05 with label25;
        catch java.lang.RuntimeException from label06 to label10 with label25;
        catch java.lang.RuntimeException from label11 to label18 with label25;
    }
}
