public final class org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage extends java.lang.Object implements org.apache.james.mime4j.storage.Storage
{
    public static final java.util.Set filesToDelete;
    public java.io.File file;

    static void <clinit>()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.util.Set filesToDelete> = $r0;

        return;
    }

    public void <init>(java.io.File)
    {
        org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage r0;
        java.io.File $r1;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.io.File file> = $r1;

        return;
    }

    public void delete()
    {
        java.lang.Throwable $r6;
        java.util.Iterator $r4;
        org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage r0;
        java.util.Set $r1, $r3;
        java.io.File $r2;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage;

        $r1 = <org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.util.Set filesToDelete>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.io.File file>;

        if $r2 == null goto label2;

        $r3 = <org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.util.Set filesToDelete>;

        $r2 = r0.<org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.io.File file>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        r0.<org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.io.File file> = null;

     label2:
        $r3 = <org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.util.Set filesToDelete>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.io.File) $r5;

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label3;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label3;

     label4:
        exitmonitor $r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label7:
        goto label8;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.io.InputStream getInputStream()
    {
        java.lang.IllegalStateException $r4;
        java.io.BufferedInputStream $r3;
        org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage r0;
        java.io.FileInputStream $r1;
        java.io.File $r2;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage;

        $r2 = r0.<org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage: java.io.File file>;

        if $r2 == null goto label1;

        $r3 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        return $r3;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("storage has been deleted");

        throw $r4;
    }
}
