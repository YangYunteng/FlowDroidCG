public class org.dom4j.tree.DefaultNamespace extends org.dom4j.Namespace
{
    public org.dom4j.Element parent;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.dom4j.tree.DefaultNamespace r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.dom4j.Namespace: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void <init>(org.dom4j.Element, java.lang.String, java.lang.String)
    {
        org.dom4j.tree.DefaultNamespace r0;
        org.dom4j.Element $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.dom4j.Namespace: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        r0.<org.dom4j.tree.DefaultNamespace: org.dom4j.Element parent> = $r1;

        return;
    }

    public int createHashCode()
    {
        org.dom4j.tree.DefaultNamespace r0;
        int $i0, $i1;
        org.dom4j.Element $r1;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        $i0 = specialinvoke r0.<org.dom4j.Namespace: int createHashCode()>();

        $r1 = r0.<org.dom4j.tree.DefaultNamespace: org.dom4j.Element parent>;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 ^ $i1;

     label1:
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.dom4j.tree.DefaultNamespace r0, $r3;
        org.dom4j.Element $r1, $r4;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof org.dom4j.tree.DefaultNamespace;

        if $z0 == 0 goto label1;

        $r3 = (org.dom4j.tree.DefaultNamespace) $r2;

        $r4 = $r3.<org.dom4j.tree.DefaultNamespace: org.dom4j.Element parent>;

        $r1 = r0.<org.dom4j.tree.DefaultNamespace: org.dom4j.Element parent>;

        if $r4 != $r1 goto label1;

        $z0 = specialinvoke r0.<org.dom4j.Namespace: boolean equals(java.lang.Object)>($r2);

        return $z0;

     label1:
        return 0;
    }

    public org.dom4j.Element getParent()
    {
        org.dom4j.Element r1;
        org.dom4j.tree.DefaultNamespace r0;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        r1 = r0.<org.dom4j.tree.DefaultNamespace: org.dom4j.Element parent>;

        return r1;
    }

    public int hashCode()
    {
        int $i0;
        org.dom4j.tree.DefaultNamespace r0;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        $i0 = specialinvoke r0.<org.dom4j.Namespace: int hashCode()>();

        return $i0;
    }

    public boolean isReadOnly()
    {
        org.dom4j.tree.DefaultNamespace r0;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        return 0;
    }

    public void setParent(org.dom4j.Element)
    {
        org.dom4j.Element $r1;
        org.dom4j.tree.DefaultNamespace r0;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        $r1 := @parameter0: org.dom4j.Element;

        r0.<org.dom4j.tree.DefaultNamespace: org.dom4j.Element parent> = $r1;

        return;
    }

    public boolean supportsParent()
    {
        org.dom4j.tree.DefaultNamespace r0;

        r0 := @this: org.dom4j.tree.DefaultNamespace;

        return 1;
    }
}
