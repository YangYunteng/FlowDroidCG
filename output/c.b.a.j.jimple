public abstract class c.b.a.j extends java.lang.Object implements java.lang.Comparable
{
    public static final java.lang.String DEFAULT_PARAMS_ENCODING;
    public static final long SLOW_REQUEST_THRESHOLD_MS;
    public c.b.a.a$a mCacheEntry;
    public boolean mCanceled;
    public final int mDefaultTrafficStatsTag;
    public final c.b.a.m$a mErrorListener;
    public final c.b.a.p$a mEventLog;
    public final int mMethod;
    public long mRequestBirthTime;
    public c.b.a.l mRequestQueue;
    public boolean mResponseDelivered;
    public c.b.a.o mRetryPolicy;
    public java.lang.Integer mSequence;
    public boolean mShouldCache;
    public java.lang.Object mTag;
    public final java.lang.String mUrl;

    public void <init>(int, java.lang.String, c.b.a.m$a)
    {
        c.b.a.d $r4;
        c.b.a.j r0;
        c.b.a.p$a $r3;
        int $i0;
        c.b.a.m$a $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: c.b.a.j;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: c.b.a.m$a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <c.b.a.p$a: boolean a>;

        if $z0 == 0 goto label1;

        $r3 = new c.b.a.p$a;

        specialinvoke $r3.<c.b.a.p$a: void <init>()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        r0.<c.b.a.j: c.b.a.p$a mEventLog> = $r3;

        r0.<c.b.a.j: boolean mShouldCache> = 1;

        r0.<c.b.a.j: boolean mCanceled> = 0;

        r0.<c.b.a.j: boolean mResponseDelivered> = 0;

        r0.<c.b.a.j: long mRequestBirthTime> = 0L;

        r0.<c.b.a.j: c.b.a.a$a mCacheEntry> = null;

        r0.<c.b.a.j: int mMethod> = $i0;

        r0.<c.b.a.j: java.lang.String mUrl> = $r1;

        r0.<c.b.a.j: c.b.a.m$a mErrorListener> = $r2;

        $r4 = new c.b.a.d;

        specialinvoke $r4.<c.b.a.d: void <init>()>();

        virtualinvoke r0.<c.b.a.j: c.b.a.j setRetryPolicy(c.b.a.o)>($r4);

        $i0 = staticinvoke <c.b.a.j: int findDefaultTrafficStatsTag(java.lang.String)>($r1);

        r0.<c.b.a.j: int mDefaultTrafficStatsTag> = $i0;

        return;
    }

    public void <init>(java.lang.String, c.b.a.m$a)
    {
        c.b.a.j r0;
        int $i0;
        c.b.a.m$a $r2;
        java.lang.String $r1;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: c.b.a.m$a;

        $i0 = -1;

        specialinvoke r0.<c.b.a.j: void <init>(int,java.lang.String,c.b.a.m$a)>($i0, $r1, $r2);

        return;
    }

    public static c.b.a.p$a access$000(c.b.a.j)
    {
        c.b.a.j $r0;
        c.b.a.p$a r1;

        $r0 := @parameter0: c.b.a.j;

        r1 = $r0.<c.b.a.j: c.b.a.p$a mEventLog>;

        return r1;
    }

    private byte[] encodeParameters(java.util.Map, java.lang.String)
    {
        byte[] $r9;
        java.util.Map$Entry $r7;
        java.util.Iterator $r5;
        c.b.a.j r0;
        java.util.Set $r4;
        java.lang.RuntimeException $r11;
        java.util.Map $r1;
        java.lang.StringBuilder $r3;
        java.lang.Object $r6;
        java.lang.String $r2, $r8;
        java.io.UnsupportedEncodingException $r10;
        boolean $z0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label12;

     label04:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label05:
        $r7 = (java.util.Map$Entry) $r6;

     label06:
        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

     label07:
        $r8 = (java.lang.String) $r6;

     label08:
        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, $r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

     label09:
        $r8 = (java.lang.String) $r6;

     label10:
        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, $r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

     label11:
        goto label02;

     label12:
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

     label13:
        return $r9;

     label14:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding not supported: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r10);

        goto label15;

     label15:
        throw $r11;

        catch java.io.UnsupportedEncodingException from label01 to label03 with label14;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label14;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label14;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label14;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label14;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label14;
    }

    public static int findDefaultTrafficStatsTag(java.lang.String)
    {
        android.net.Uri $r1;
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r0);

        if $r1 == null goto label1;

        $r0 = virtualinvoke $r1.<android.net.Uri: java.lang.String getHost()>();

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        return $i0;

     label1:
        return 0;
    }

    public void addMarker(java.lang.String)
    {
        byte $b1;
        c.b.a.j r0;
        c.b.a.p$a $r2;
        java.lang.Thread $r3;
        long $l0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: java.lang.String;

        $z0 = <c.b.a.p$a: boolean a>;

        if $z0 == 0 goto label1;

        $r2 = r0.<c.b.a.j: c.b.a.p$a mEventLog>;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r3.<java.lang.Thread: long getId()>();

        virtualinvoke $r2.<c.b.a.p$a: void a(java.lang.String,long)>($r1, $l0);

        return;

     label1:
        $l0 = r0.<c.b.a.j: long mRequestBirthTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<c.b.a.j: long mRequestBirthTime> = $l0;

     label2:
        return;
    }

    public void cancel()
    {
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r0.<c.b.a.j: boolean mCanceled> = 1;

        return;
    }

    public int compareTo(c.b.a.j)
    {
        c.b.a.j r0, $r1;
        c.b.a.j$a $r2, $r3;
        int $i0, $i1;
        java.lang.Integer $r4;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: c.b.a.j;

        $r2 = virtualinvoke r0.<c.b.a.j: c.b.a.j$a getPriority()>();

        $r3 = virtualinvoke $r1.<c.b.a.j: c.b.a.j$a getPriority()>();

        if $r2 != $r3 goto label1;

        $r4 = r0.<c.b.a.j: java.lang.Integer mSequence>;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r4 = $r1.<c.b.a.j: java.lang.Integer mSequence>;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i1 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $i0 - $i1;

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        c.b.a.j r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (c.b.a.j) $r1;

        $i0 = virtualinvoke r0.<c.b.a.j: int compareTo(c.b.a.j)>($r2);

        return $i0;
    }

    public void deliverError(com.android.volley.VolleyError)
    {
        c.b.a.m$a $r2;
        com.android.volley.VolleyError $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: com.android.volley.VolleyError;

        $r2 = r0.<c.b.a.j: c.b.a.m$a mErrorListener>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<c.b.a.m$a: void onErrorResponse(com.android.volley.VolleyError)>($r1);

     label1:
        return;
    }

    public abstract void deliverResponse(java.lang.Object);

    public void finish(java.lang.String)
    {
        java.lang.Object[] $r7;
        c.b.a.j r0;
        c.b.a.i $r10;
        long $l0, $l1;
        c.b.a.l $r2;
        byte $b2;
        java.lang.Long $r8;
        java.lang.Thread $r3;
        android.os.Looper $r4, $r5;
        android.os.Handler $r9;
        int $i3;
        java.lang.String $r1;
        boolean $z0;
        c.b.a.p$a $r6;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<c.b.a.j: c.b.a.l mRequestQueue>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<c.b.a.l: void b(c.b.a.j)>(r0);

     label1:
        $z0 = <c.b.a.p$a: boolean a>;

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r3.<java.lang.Thread: long getId()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r4 == $r5 goto label2;

        $r9 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r9.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        $r10 = new c.b.a.i;

        specialinvoke $r10.<c.b.a.i: void <init>(c.b.a.j,java.lang.String,long)>(r0, $r1, $l0);

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

        return;

     label2:
        $r6 = r0.<c.b.a.j: c.b.a.p$a mEventLog>;

        virtualinvoke $r6.<c.b.a.p$a: void a(java.lang.String,long)>($r1, $l0);

        $r6 = r0.<c.b.a.j: c.b.a.p$a mEventLog>;

        $r1 = virtualinvoke r0.<c.b.a.j: java.lang.String toString()>();

        virtualinvoke $r6.<c.b.a.p$a: void a(java.lang.String)>($r1);

        return;

     label3:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<c.b.a.j: long mRequestBirthTime>;

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 3000L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label4;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7[0] = $r8;

        $r1 = virtualinvoke r0.<c.b.a.j: java.lang.String toString()>();

        $r7[1] = $r1;

        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("%d ms: %s", $r7);

     label4:
        return;
    }

    public byte[] getBody()
    {
        byte[] $r3;
        c.b.a.j r0;
        java.util.Map $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: c.b.a.j;

        $r1 = virtualinvoke r0.<c.b.a.j: java.util.Map getParams()>();

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r0.<c.b.a.j: java.lang.String getParamsEncoding()>();

        $r3 = specialinvoke r0.<c.b.a.j: byte[] encodeParameters(java.util.Map,java.lang.String)>($r1, $r2);

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getBodyContentType()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("application/x-www-form-urlencoded; charset=");

        $r2 = virtualinvoke r0.<c.b.a.j: java.lang.String getParamsEncoding()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public c.b.a.a$a getCacheEntry()
    {
        c.b.a.a$a r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r1 = r0.<c.b.a.j: c.b.a.a$a mCacheEntry>;

        return r1;
    }

    public java.lang.String getCacheKey()
    {
        java.lang.String $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 = virtualinvoke r0.<c.b.a.j: java.lang.String getUrl()>();

        return $r1;
    }

    public c.b.a.m$a getErrorListener()
    {
        c.b.a.m$a r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r1 = r0.<c.b.a.j: c.b.a.m$a mErrorListener>;

        return r1;
    }

    public java.util.Map getHeaders()
    {
        c.b.a.j r0;
        java.util.Map $r1;

        r0 := @this: c.b.a.j;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r1;
    }

    public int getMethod()
    {
        int i0;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        i0 = r0.<c.b.a.j: int mMethod>;

        return i0;
    }

    public java.util.Map getParams()
    {
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        return null;
    }

    public java.lang.String getParamsEncoding()
    {
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        return "UTF-8";
    }

    public byte[] getPostBody()
    {
        byte[] $r3;
        c.b.a.j r0;
        java.util.Map $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: c.b.a.j;

        $r1 = virtualinvoke r0.<c.b.a.j: java.util.Map getPostParams()>();

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r0.<c.b.a.j: java.lang.String getPostParamsEncoding()>();

        $r3 = specialinvoke r0.<c.b.a.j: byte[] encodeParameters(java.util.Map,java.lang.String)>($r1, $r2);

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getPostBodyContentType()
    {
        java.lang.String $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 = virtualinvoke r0.<c.b.a.j: java.lang.String getBodyContentType()>();

        return $r1;
    }

    public java.util.Map getPostParams()
    {
        c.b.a.j r0;
        java.util.Map $r1;

        r0 := @this: c.b.a.j;

        $r1 = virtualinvoke r0.<c.b.a.j: java.util.Map getParams()>();

        return $r1;
    }

    public java.lang.String getPostParamsEncoding()
    {
        java.lang.String $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 = virtualinvoke r0.<c.b.a.j: java.lang.String getParamsEncoding()>();

        return $r1;
    }

    public c.b.a.j$a getPriority()
    {
        c.b.a.j$a r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r1 = <c.b.a.j$a: c.b.a.j$a b>;

        return r1;
    }

    public c.b.a.o getRetryPolicy()
    {
        c.b.a.o r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r1 = r0.<c.b.a.j: c.b.a.o mRetryPolicy>;

        return r1;
    }

    public final int getSequence()
    {
        java.lang.IllegalStateException $r2;
        c.b.a.j r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: c.b.a.j;

        $r1 = r0.<c.b.a.j: java.lang.Integer mSequence>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getSequence called before setSequence");

        throw $r2;
    }

    public java.lang.Object getTag()
    {
        java.lang.Object r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r1 = r0.<c.b.a.j: java.lang.Object mTag>;

        return r1;
    }

    public final int getTimeoutMs()
    {
        int $i0;
        c.b.a.o $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 = r0.<c.b.a.j: c.b.a.o mRetryPolicy>;

        $i0 = interfaceinvoke $r1.<c.b.a.o: int b()>();

        return $i0;
    }

    public int getTrafficStatsTag()
    {
        int i0;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        i0 = r0.<c.b.a.j: int mDefaultTrafficStatsTag>;

        return i0;
    }

    public java.lang.String getUrl()
    {
        java.lang.String r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r1 = r0.<c.b.a.j: java.lang.String mUrl>;

        return r1;
    }

    public boolean hasHadResponseDelivered()
    {
        c.b.a.j r0;
        boolean z0;

        r0 := @this: c.b.a.j;

        z0 = r0.<c.b.a.j: boolean mResponseDelivered>;

        return z0;
    }

    public boolean isCanceled()
    {
        c.b.a.j r0;
        boolean z0;

        r0 := @this: c.b.a.j;

        z0 = r0.<c.b.a.j: boolean mCanceled>;

        return z0;
    }

    public void markDelivered()
    {
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        r0.<c.b.a.j: boolean mResponseDelivered> = 1;

        return;
    }

    public com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError)
    {
        com.android.volley.VolleyError $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: com.android.volley.VolleyError;

        return $r1;
    }

    public abstract c.b.a.m parseNetworkResponse(c.d.a.a);

    public c.b.a.j setCacheEntry(c.b.a.a$a)
    {
        c.b.a.a$a $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: c.b.a.a$a;

        r0.<c.b.a.j: c.b.a.a$a mCacheEntry> = $r1;

        return r0;
    }

    public c.b.a.j setRequestQueue(c.b.a.l)
    {
        c.b.a.l $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: c.b.a.l;

        r0.<c.b.a.j: c.b.a.l mRequestQueue> = $r1;

        return r0;
    }

    public c.b.a.j setRetryPolicy(c.b.a.o)
    {
        c.b.a.o $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: c.b.a.o;

        r0.<c.b.a.j: c.b.a.o mRetryPolicy> = $r1;

        return r0;
    }

    public final c.b.a.j setSequence(int)
    {
        int $i0;
        c.b.a.j r0;
        java.lang.Integer $r1;

        r0 := @this: c.b.a.j;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<c.b.a.j: java.lang.Integer mSequence> = $r1;

        return r0;
    }

    public final c.b.a.j setShouldCache(boolean)
    {
        c.b.a.j r0;
        boolean $z0;

        r0 := @this: c.b.a.j;

        $z0 := @parameter0: boolean;

        r0.<c.b.a.j: boolean mShouldCache> = $z0;

        return r0;
    }

    public c.b.a.j setTag(java.lang.Object)
    {
        java.lang.Object $r1;
        c.b.a.j r0;

        r0 := @this: c.b.a.j;

        $r1 := @parameter0: java.lang.Object;

        r0.<c.b.a.j: java.lang.Object mTag> = $r1;

        return r0;
    }

    public final boolean shouldCache()
    {
        c.b.a.j r0;
        boolean z0;

        r0 := @this: c.b.a.j;

        z0 = r0.<c.b.a.j: boolean mShouldCache>;

        return z0;
    }

    public java.lang.String toString()
    {
        c.b.a.j r0;
        java.lang.Integer $r5;
        int $i0;
        c.b.a.j$a $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: c.b.a.j;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i0 = virtualinvoke r0.<c.b.a.j: int getTrafficStatsTag()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = r0.<c.b.a.j: boolean mCanceled>;

        if $z0 == 0 goto label1;

        $r3 = "[X] ";

        goto label2;

     label1:
        $r3 = "[ ] ";

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke r0.<c.b.a.j: java.lang.String getUrl()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke r0.<c.b.a.j: c.b.a.j$a getPriority()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r0.<c.b.a.j: java.lang.Integer mSequence>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <c.b.a.j: long SLOW_REQUEST_THRESHOLD_MS> = 3000L;

        <c.b.a.j: java.lang.String DEFAULT_PARAMS_ENCODING> = "UTF-8";

        return;
    }
}
