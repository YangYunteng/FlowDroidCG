public class project.android.imageprocessing.filter.processing.ZoomBlurFilter extends project.android.imageprocessing.filter.BasicFilter
{
    public static final java.lang.String UNIFORM_BLUR_LOCATION;
    public static final java.lang.String UNIFORM_BLUR_SIZE;
    public android.graphics.PointF blurLocation;
    public int blurLocationHandle;
    public float blurSize;
    public int blurSizeHandle;

    public void <init>(float, android.graphics.PointF)
    {
        project.android.imageprocessing.filter.processing.ZoomBlurFilter r0;
        float $f0;
        android.graphics.PointF $r1;

        r0 := @this: project.android.imageprocessing.filter.processing.ZoomBlurFilter;

        $f0 := @parameter0: float;

        $r1 := @parameter1: android.graphics.PointF;

        specialinvoke r0.<project.android.imageprocessing.filter.BasicFilter: void <init>()>();

        r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: float blurSize> = $f0;

        r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: android.graphics.PointF blurLocation> = $r1;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.processing.ZoomBlurFilter r0;

        r0 := @this: project.android.imageprocessing.filter.processing.ZoomBlurFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nuniform sampler2D u_Texture1;\nvarying vec2 v_TexCoord;\nuniform float u_BlurSize;\nuniform vec2 u_BlurLocation;\nvoid main(){\n   vec2 samplingOffset = 1.0/100.0 * (u_BlurLocation - v_TexCoord) * u_BlurSize;\n   vec4 fragColour = texture2D(u_Texture0, v_TexCoord) * 0.18;\n   fragColour += texture2D(u_Texture0, v_TexCoord +  samplingOffset) * 0.15;\n   fragColour += texture2D(u_Texture0, v_TexCoord -  samplingOffset) * 0.15;\n   fragColour += texture2D(u_Texture0, v_TexCoord +  (2.0 * samplingOffset)) * 0.12;\n   fragColour += texture2D(u_Texture0, v_TexCoord -  (2.0 * samplingOffset)) * 0.12;\n   fragColour += texture2D(u_Texture0, v_TexCoord +  (3.0 * samplingOffset)) * 0.09;\n   fragColour += texture2D(u_Texture0, v_TexCoord -  (3.0 * samplingOffset)) * 0.09;\n   fragColour += texture2D(u_Texture0, v_TexCoord +  (4.0 * samplingOffset)) * 0.05;\n   fragColour += texture2D(u_Texture0, v_TexCoord -  (4.0 * samplingOffset)) * 0.05;\n   gl_FragColor = fragColour;\n}\n";
    }

    public void initShaderHandles()
    {
        project.android.imageprocessing.filter.processing.ZoomBlurFilter r0;
        int $i0;

        r0 := @this: project.android.imageprocessing.filter.processing.ZoomBlurFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void initShaderHandles()>();

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_BlurSize");

        r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: int blurSizeHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_BlurLocation");

        r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: int blurLocationHandle> = $i0;

        return;
    }

    public void passShaderValues()
    {
        android.graphics.PointF $r1;
        project.android.imageprocessing.filter.processing.ZoomBlurFilter r0;
        int $i0;
        float $f0, $f1;

        r0 := @this: project.android.imageprocessing.filter.processing.ZoomBlurFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void passShaderValues()>();

        $i0 = r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: int blurSizeHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: float blurSize>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        $i0 = r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: int blurLocationHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.processing.ZoomBlurFilter: android.graphics.PointF blurLocation>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f1 = $r1.<android.graphics.PointF: float y>;

        staticinvoke <android.opengl.GLES20: void glUniform2f(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public static void <clinit>()
    {
        <project.android.imageprocessing.filter.processing.ZoomBlurFilter: java.lang.String UNIFORM_BLUR_SIZE> = "u_BlurSize";

        <project.android.imageprocessing.filter.processing.ZoomBlurFilter: java.lang.String UNIFORM_BLUR_LOCATION> = "u_BlurLocation";

        return;
    }
}
