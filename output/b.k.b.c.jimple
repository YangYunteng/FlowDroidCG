public abstract class b.k.b.c extends b.i.i.a
{
    public static final java.lang.String DEFAULT_CLASS_NAME;
    public static final int HOST_ID;
    public static final int INVALID_ID;
    public static final android.graphics.Rect INVALID_PARENT_BOUNDS;
    public static final b.k.b.d$a NODE_ADAPTER;
    public static final b.k.b.d$b SPARSE_VALUES_ADAPTER;
    public int mAccessibilityFocusedVirtualViewId;
    public final android.view.View mHost;
    public int mHoveredVirtualViewId;
    public int mKeyboardFocusedVirtualViewId;
    public final android.view.accessibility.AccessibilityManager mManager;
    public b.k.b.c$a mNodeProvider;
    public final int[] mTempGlobalRect;
    public final android.graphics.Rect mTempParentRect;
    public final android.graphics.Rect mTempScreenRect;
    public final android.graphics.Rect mTempVisibleRect;

    static void <clinit>()
    {
        android.graphics.Rect $r0;
        b.k.b.b $r2;
        b.k.b.a $r1;

        <b.k.b.c: int INVALID_ID> = -2147483648;

        <b.k.b.c: int HOST_ID> = -1;

        <b.k.b.c: java.lang.String DEFAULT_CLASS_NAME> = "android.view.View";

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>(int,int,int,int)>(2147483647, 2147483647, -2147483648, -2147483648);

        <b.k.b.c: android.graphics.Rect INVALID_PARENT_BOUNDS> = $r0;

        $r1 = new b.k.b.a;

        specialinvoke $r1.<b.k.b.a: void <init>()>();

        <b.k.b.c: b.k.b.d$a NODE_ADAPTER> = $r1;

        $r2 = new b.k.b.b;

        specialinvoke $r2.<b.k.b.b: void <init>()>();

        <b.k.b.c: b.k.b.d$b SPARSE_VALUES_ADAPTER> = $r2;

        return;
    }

    public void <init>(android.view.View)
    {
        android.graphics.Rect $r2;
        android.content.Context $r4;
        java.lang.IllegalArgumentException $r7;
        android.view.accessibility.AccessibilityManager $r6;
        b.k.b.c r0;
        int[] $r3;
        int $i0;
        android.view.View $r1;
        java.lang.Object $r5;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<b.i.i.a: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<b.k.b.c: android.graphics.Rect mTempScreenRect> = $r2;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<b.k.b.c: android.graphics.Rect mTempParentRect> = $r2;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<b.k.b.c: android.graphics.Rect mTempVisibleRect> = $r2;

        $r3 = newarray (int)[2];

        r0.<b.k.b.c: int[] mTempGlobalRect> = $r3;

        r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId> = -2147483648;

        r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId> = -2147483648;

        r0.<b.k.b.c: int mHoveredVirtualViewId> = -2147483648;

        if $r1 == null goto label1;

        r0.<b.k.b.c: android.view.View mHost> = $r1;

        $r4 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r6 = (android.view.accessibility.AccessibilityManager) $r5;

        r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager> = $r6;

        virtualinvoke $r1.<android.view.View: void setFocusable(boolean)>(1);

        $i0 = staticinvoke <b.i.i.y: int n(android.view.View)>($r1);

        if $i0 != 0 goto label2;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r1, 1);

        return;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View may not be null");

        throw $r7;

     label2:
        return;
    }

    private boolean clearAccessibilityFocus(int)
    {
        b.k.b.c r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $i1 = r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId>;

        if $i1 != $i0 goto label1;

        r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId> = -2147483648;

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        virtualinvoke r0.<b.k.b.c: boolean sendEventForVirtualView(int,int)>($i0, 65536);

        return 1;

     label1:
        return 0;
    }

    private boolean clickKeyboardFocusedVirtualView()
    {
        int $i0;
        b.k.b.c r0;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        if $i0 == -2147483648 goto label1;

        $z0 = virtualinvoke r0.<b.k.b.c: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>($i0, 16, null);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.view.accessibility.AccessibilityEvent createEvent(int, int)
    {
        b.k.b.c r0;
        int $i0, $i1, $i2;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: b.k.b.c;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = -1;

        if $i1 == $i2 goto label1;

        $r1 = specialinvoke r0.<b.k.b.c: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>($i1, $i0);

        return $r1;

     label1:
        $r1 = specialinvoke r0.<b.k.b.c: android.view.accessibility.AccessibilityEvent createEventForHost(int)>($i0);

        return $r1;
    }

    private android.view.accessibility.AccessibilityEvent createEventForChild(int, int)
    {
        android.content.Context $r7;
        java.lang.CharSequence $r4;
        java.lang.RuntimeException $r5;
        b.i.i.a.b $r2;
        java.util.List $r3;
        b.k.b.c r0;
        int $i0, $i1;
        android.view.View $r6;
        android.view.accessibility.AccessibilityEvent $r1;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>($i1);

        $r2 = virtualinvoke r0.<b.k.b.c: b.i.i.a.b obtainAccessibilityNodeInfo(int)>($i0);

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r4 = virtualinvoke $r2.<b.i.i.a.b: java.lang.CharSequence j()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r2.<b.i.i.a.b: java.lang.CharSequence f()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r2.<b.i.i.a.b: boolean v()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z0);

        $z0 = virtualinvoke $r2.<b.i.i.a.b: boolean u()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>($z0);

        $z0 = virtualinvoke $r2.<b.i.i.a.b: boolean q()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r2.<b.i.i.a.b: boolean o()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        virtualinvoke r0.<b.k.b.c: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>($i0, $r1);

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>();

        if $r4 == null goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must add text or a content description in populateEventForVirtualViewId()");

        throw $r5;

     label2:
        $r4 = virtualinvoke $r2.<b.i.i.a.b: java.lang.CharSequence e()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        $r6 = r0.<b.k.b.c: android.view.View mHost>;

        staticinvoke <b.i.i.a.d: void a(android.view.accessibility.AccessibilityRecord,android.view.View,int)>($r1, $r6, $i0);

        $r6 = r0.<b.k.b.c: android.view.View mHost>;

        $r7 = virtualinvoke $r6.<android.view.View: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r8);

        return $r1;
    }

    private android.view.accessibility.AccessibilityEvent createEventForHost(int)
    {
        b.k.b.c r0;
        int $i0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>($i0);

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        virtualinvoke $r1.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r2);

        return $r2;
    }

    private b.i.i.a.b createNodeForChild(int)
    {
        android.graphics.Rect $r2, $r5;
        android.content.Context $r6;
        b.i.i.a.b $r1, $r9;
        b.k.b.c r0;
        int[] $r8;
        int $i0, $i1, $i2;
        android.view.View $r3;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.lang.CharSequence $r4;
        java.lang.RuntimeException $r10;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <b.i.i.a.b: b.i.i.a.b z()>();

        virtualinvoke $r1.<b.i.i.a.b: void g(boolean)>(1);

        virtualinvoke $r1.<b.i.i.a.b: void h(boolean)>(1);

        virtualinvoke $r1.<b.i.i.a.b: void b(java.lang.CharSequence)>("android.view.View");

        $r2 = <b.k.b.c: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke $r1.<b.i.i.a.b: void c(android.graphics.Rect)>($r2);

        $r2 = <b.k.b.c: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke $r1.<b.i.i.a.b: void d(android.graphics.Rect)>($r2);

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        virtualinvoke $r1.<b.i.i.a.b: void f(android.view.View)>($r3);

        virtualinvoke r0.<b.k.b.c: void onPopulateNodeForVirtualView(int,b.i.i.a.b)>($i0, $r1);

        $r4 = virtualinvoke $r1.<b.i.i.a.b: java.lang.CharSequence j()>();

        if $r4 != null goto label02;

        $r4 = virtualinvoke $r1.<b.i.i.a.b: java.lang.CharSequence f()>();

        if $r4 == null goto label01;

        goto label02;

     label01:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must add text or a content description in populateNodeForVirtualViewId()");

        throw $r10;

     label02:
        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempParentRect>;

        virtualinvoke $r1.<b.i.i.a.b: void a(android.graphics.Rect)>($r2);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempParentRect>;

        $r5 = <b.k.b.c: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label15;

        $i1 = virtualinvoke $r1.<b.i.i.a.b: int c()>();

        $i2 = $i1 & 64;

        if $i2 != 0 goto label14;

        $i1 = $i1 & 128;

        if $i1 != 0 goto label13;

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $r6 = virtualinvoke $r3.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<b.i.i.a.b: void f(java.lang.CharSequence)>($r7);

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        virtualinvoke $r1.<b.i.i.a.b: void c(android.view.View,int)>($r3, $i0);

        $i1 = r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId>;

        if $i1 != $i0 goto label03;

        virtualinvoke $r1.<b.i.i.a.b: void a(boolean)>(1);

        virtualinvoke $r1.<b.i.i.a.b: void a(int)>(128);

        goto label04;

     label03:
        virtualinvoke $r1.<b.i.i.a.b: void a(boolean)>(0);

        virtualinvoke $r1.<b.i.i.a.b: void a(int)>(64);

     label04:
        $i1 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        if $i1 != $i0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        if $z0 == 0 goto label07;

        virtualinvoke $r1.<b.i.i.a.b: void a(int)>(2);

        goto label08;

     label07:
        $z1 = virtualinvoke $r1.<b.i.i.a.b: boolean r()>();

        if $z1 == 0 goto label08;

        virtualinvoke $r1.<b.i.i.a.b: void a(int)>(1);

     label08:
        virtualinvoke $r1.<b.i.i.a.b: void i(boolean)>($z0);

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $r8 = r0.<b.k.b.c: int[] mTempGlobalRect>;

        virtualinvoke $r3.<android.view.View: void getLocationOnScreen(int[])>($r8);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        virtualinvoke $r1.<b.i.i.a.b: void b(android.graphics.Rect)>($r2);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        $r5 = <b.k.b.c: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label12;

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        virtualinvoke $r1.<b.i.i.a.b: void a(android.graphics.Rect)>($r2);

        $i0 = $r1.<b.i.i.a.b: int c>;

        $i1 = -1;

        if $i0 == $i1 goto label11;

        $r9 = staticinvoke <b.i.i.a.b: b.i.i.a.b z()>();

        $i0 = $r1.<b.i.i.a.b: int c>;

     label09:
        $i1 = -1;

        if $i0 == $i1 goto label10;

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $i1 = -1;

        virtualinvoke $r9.<b.i.i.a.b: void b(android.view.View,int)>($r3, $i1);

        $r2 = <b.k.b.c: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke $r9.<b.i.i.a.b: void c(android.graphics.Rect)>($r2);

        virtualinvoke r0.<b.k.b.c: void onPopulateNodeForVirtualView(int,b.i.i.a.b)>($i0, $r9);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempParentRect>;

        virtualinvoke $r9.<b.i.i.a.b: void a(android.graphics.Rect)>($r2);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        $r5 = r0.<b.k.b.c: android.graphics.Rect mTempParentRect>;

        $i0 = $r5.<android.graphics.Rect: int left>;

        $i1 = $r5.<android.graphics.Rect: int top>;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $i0 = $r9.<b.i.i.a.b: int c>;

        goto label09;

     label10:
        virtualinvoke $r9.<b.i.i.a.b: void A()>();

     label11:
        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        $r8 = r0.<b.k.b.c: int[] mTempGlobalRect>;

        $i0 = $r8[0];

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $i1 = virtualinvoke $r3.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $r8 = r0.<b.k.b.c: int[] mTempGlobalRect>;

        $i1 = $r8[1];

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $i2 = virtualinvoke $r3.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

     label12:
        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempVisibleRect>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label17;

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempVisibleRect>;

        $r8 = r0.<b.k.b.c: int[] mTempGlobalRect>;

        $i0 = $r8[0];

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $i1 = virtualinvoke $r3.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $r8 = r0.<b.k.b.c: int[] mTempGlobalRect>;

        $i1 = $r8[1];

        $r3 = r0.<b.k.b.c: android.view.View mHost>;

        $i2 = virtualinvoke $r3.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        $r5 = r0.<b.k.b.c: android.graphics.Rect mTempVisibleRect>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r5);

        if $z0 == 0 goto label17;

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        virtualinvoke $r1.<b.i.i.a.b: void d(android.graphics.Rect)>($r2);

        $r2 = r0.<b.k.b.c: android.graphics.Rect mTempScreenRect>;

        $z0 = specialinvoke r0.<b.k.b.c: boolean isVisibleToUser(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label17;

        virtualinvoke $r1.<b.i.i.a.b: void p(boolean)>(1);

        return $r1;

     label13:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must not add ACTION_CLEAR_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r10;

     label14:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must not add ACTION_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r10;

     label15:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must set parent bounds in populateNodeForVirtualViewId()");

        goto label16;

     label16:
        throw $r10;

     label17:
        return $r1;
    }

    private b.i.i.a.b createNodeForHost()
    {
        java.lang.RuntimeException $r4;
        b.i.i.a.b $r2;
        java.lang.Integer $r6;
        java.util.ArrayList $r3;
        b.k.b.c r0;
        int $i0, $i1, $i2;
        android.view.View $r1;
        java.lang.Object $r5;

        r0 := @this: b.k.b.c;

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        $r2 = staticinvoke <b.i.i.a.b: b.i.i.a.b d(android.view.View)>($r1);

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a.b)>($r1, $r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<b.k.b.c: void getVisibleVirtualViews(java.util.List)>($r3);

        $i0 = virtualinvoke $r2.<b.i.i.a.b: int d()>();

        if $i0 <= 0 goto label2;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Views cannot have both real and virtual children");

        throw $r4;

     label2:
        $i0 = 0;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label3:
        if $i0 >= $i1 goto label4;

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<b.i.i.a.b: void a(android.view.View,int)>($r1, $i2);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return $r2;
    }

    private b.f.j getAllNodes()
    {
        b.k.b.c r0;
        int $i0, $i1;
        b.i.i.a.b $r3;
        b.f.j $r2;
        java.util.ArrayList $r1;

        r0 := @this: b.k.b.c;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<b.k.b.c: void getVisibleVirtualViews(java.util.List)>($r1);

        $r2 = new b.f.j;

        specialinvoke $r2.<b.f.j: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r3 = specialinvoke r0.<b.k.b.c: b.i.i.a.b createNodeForChild(int)>($i0);

        virtualinvoke $r2.<b.f.j: void c(int,java.lang.Object)>($i0, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private void getBoundsInParent(int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        b.k.b.c r0;
        int $i0;
        b.i.i.a.b $r2;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = virtualinvoke r0.<b.k.b.c: b.i.i.a.b obtainAccessibilityNodeInfo(int)>($i0);

        virtualinvoke $r2.<b.i.i.a.b: void a(android.graphics.Rect)>($r1);

        return;
    }

    public static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View, int, android.graphics.Rect)
    {
        android.graphics.Rect $r0;
        int $i0, $i1, $i2;
        android.view.View $r1;
        java.lang.IllegalArgumentException $r2;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r0 := @parameter2: android.graphics.Rect;

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i0 == 17 goto label4;

        if $i0 == 33 goto label3;

        if $i0 == 66 goto label2;

        if $i0 != 130 goto label1;

        $i0 = -1;

        $i2 = -1;

        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>(0, $i0, $i1, $i2);

        return $r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = -1;

        $i1 = -1;

        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>($i0, 0, $i1, $i2);

        return $r0;

     label3:
        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>(0, $i2, $i1, $i2);

        return $r0;

     label4:
        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>($i1, 0, $i1, $i2);

        return $r0;
    }

    private boolean isVisibleToUser(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.ViewParent $r3;
        b.k.b.c r0;
        byte $b1;
        int $i0;
        android.view.View $r2;
        float $f0;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.graphics.Rect;

        if $r1 == null goto label7;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        $i0 = virtualinvoke $r2.<android.view.View: int getWindowVisibility()>();

        if $i0 == 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

     label3:
        $z0 = $r3 instanceof android.view.View;

        if $z0 == 0 goto label6;

        $r2 = (android.view.View) $r3;

        $f0 = virtualinvoke $r2.<android.view.View: float getAlpha()>();

        $b1 = $f0 cmpg 0.0F;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label5;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 == 0 goto label4;

        return 0;

     label4:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        goto label3;

     label5:
        return 0;

     label6:
        if $r3 == null goto label7;

        return 1;

     label7:
        return 0;
    }

    public static int keyToDirection(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 19 goto label3;

        if $i0 == 21 goto label2;

        if $i0 == 22 goto label1;

        return 130;

     label1:
        return 66;

     label2:
        return 17;

     label3:
        return 33;
    }

    private boolean moveFocus(int, android.graphics.Rect)
    {
        android.graphics.Rect $r2, $r6;
        b.i.i.a.b $r1;
        java.lang.IllegalArgumentException $r5;
        b.f.j $r3;
        b.k.b.c r0;
        int $i0, $i1, $i2;
        android.view.View $r7;
        java.lang.Object $r4;
        b.k.b.d$b $r8;
        b.k.b.d$a $r9;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = specialinvoke r0.<b.k.b.c: b.f.j getAllNodes()>();

        $i1 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        $i2 = -2147483648;

        if $i1 != -2147483648 goto label01;

        $r1 = null;

        goto label02;

     label01:
        $r4 = virtualinvoke $r3.<b.f.j: java.lang.Object a(int)>($i1);

        $r1 = (b.i.i.a.b) $r4;

     label02:
        if $i0 == 1 goto label08;

        if $i0 == 2 goto label08;

        if $i0 == 17 goto label04;

        if $i0 == 33 goto label04;

        if $i0 == 66 goto label04;

        if $i0 != 130 goto label03;

        goto label04;

     label03:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD, FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r5;

     label04:
        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $i1 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        if $i1 == -2147483648 goto label05;

        specialinvoke r0.<b.k.b.c: void getBoundsInParent(int,android.graphics.Rect)>($i1, $r6);

        goto label07;

     label05:
        if $r2 == null goto label06;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        goto label07;

     label06:
        $r7 = r0.<b.k.b.c: android.view.View mHost>;

        staticinvoke <b.k.b.c: android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)>($r7, $i0, $r6);

     label07:
        $r8 = <b.k.b.c: b.k.b.d$b SPARSE_VALUES_ADAPTER>;

        $r9 = <b.k.b.c: b.k.b.d$a NODE_ADAPTER>;

        $r4 = staticinvoke <b.k.b.d: java.lang.Object a(java.lang.Object,b.k.b.d$b,b.k.b.d$a,java.lang.Object,android.graphics.Rect,int)>($r3, $r8, $r9, $r1, $r6, $i0);

        $r1 = (b.i.i.a.b) $r4;

        goto label11;

     label08:
        $r7 = r0.<b.k.b.c: android.view.View mHost>;

        $i1 = staticinvoke <b.i.i.y: int p(android.view.View)>($r7);

        if $i1 != 1 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        $r8 = <b.k.b.c: b.k.b.d$b SPARSE_VALUES_ADAPTER>;

        $r9 = <b.k.b.c: b.k.b.d$a NODE_ADAPTER>;

        $r4 = staticinvoke <b.k.b.d: java.lang.Object a(java.lang.Object,b.k.b.d$b,b.k.b.d$a,java.lang.Object,int,boolean,boolean)>($r3, $r8, $r9, $r1, $i0, $z0, 0);

        $r1 = (b.i.i.a.b) $r4;

     label11:
        if $r1 != null goto label12;

        goto label13;

     label12:
        $i0 = virtualinvoke $r3.<b.f.j: int a(java.lang.Object)>($r1);

        $i2 = virtualinvoke $r3.<b.f.j: int c(int)>($i0);

     label13:
        $z0 = virtualinvoke r0.<b.k.b.c: boolean requestKeyboardFocusForVirtualView(int)>($i2);

        return $z0;
    }

    private boolean performActionForChild(int, int, android.os.Bundle)
    {
        b.k.b.c r0;
        android.os.Bundle $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Bundle;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label3;

        if $i0 == 64 goto label2;

        if $i0 == 128 goto label1;

        $z0 = virtualinvoke r0.<b.k.b.c: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>($i1, $i0, $r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<b.k.b.c: boolean clearAccessibilityFocus(int)>($i1);

        return $z0;

     label2:
        $z0 = specialinvoke r0.<b.k.b.c: boolean requestAccessibilityFocus(int)>($i1);

        return $z0;

     label3:
        $z0 = virtualinvoke r0.<b.k.b.c: boolean clearKeyboardFocusForVirtualView(int)>($i1);

        return $z0;

     label4:
        $z0 = virtualinvoke r0.<b.k.b.c: boolean requestKeyboardFocusForVirtualView(int)>($i1);

        return $z0;
    }

    private boolean performActionForHost(int, android.os.Bundle)
    {
        b.k.b.c r0;
        android.os.Bundle $r1;
        int $i0;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        $z0 = staticinvoke <b.i.i.y: boolean a(android.view.View,int,android.os.Bundle)>($r2, $i0, $r1);

        return $z0;
    }

    private boolean requestAccessibilityFocus(int)
    {
        android.view.accessibility.AccessibilityManager $r1;
        b.k.b.c r0;
        int $i0, $i1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r1 = r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId>;

        if $i1 == $i0 goto label3;

        if $i1 == -2147483648 goto label2;

        specialinvoke r0.<b.k.b.c: boolean clearAccessibilityFocus(int)>($i1);

     label2:
        r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId> = $i0;

        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        virtualinvoke $r2.<android.view.View: void invalidate()>();

        $i1 = 32768;

        virtualinvoke r0.<b.k.b.c: boolean sendEventForVirtualView(int,int)>($i0, $i1);

        return 1;

     label3:
        return 0;
    }

    private void updateHoveredVirtualView(int)
    {
        int $i0, $i1;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        $i1 := @parameter0: int;

        $i0 = r0.<b.k.b.c: int mHoveredVirtualViewId>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<b.k.b.c: int mHoveredVirtualViewId> = $i1;

        virtualinvoke r0.<b.k.b.c: boolean sendEventForVirtualView(int,int)>($i1, 128);

        virtualinvoke r0.<b.k.b.c: boolean sendEventForVirtualView(int,int)>($i0, 256);

        return;
    }

    public final boolean clearKeyboardFocusForVirtualView(int)
    {
        int $i0, $i1;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $i1 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId> = -2147483648;

        virtualinvoke r0.<b.k.b.c: void onVirtualViewKeyboardFocusChanged(int,boolean)>($i0, 0);

        virtualinvoke r0.<b.k.b.c: boolean sendEventForVirtualView(int,int)>($i0, 8);

        return 1;
    }

    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        android.view.accessibility.AccessibilityManager $r2;
        b.k.b.c r0;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 == 7 goto label4;

        if $i0 == 9 goto label4;

        if $i0 == 10 goto label2;

        return 0;

     label2:
        $i0 = r0.<b.k.b.c: int mHoveredVirtualViewId>;

        if $i0 == -2147483648 goto label3;

        specialinvoke r0.<b.k.b.c: void updateHoveredVirtualView(int)>(-2147483648);

        return 1;

     label3:
        return 0;

     label4:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke r0.<b.k.b.c: int getVirtualViewAt(float,float)>($f0, $f1);

        specialinvoke r0.<b.k.b.c: void updateHoveredVirtualView(int)>($i0);

        if $i0 == -2147483648 goto label5;

        return 1;

     label5:
        return 0;
    }

    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        b.k.b.c r0;
        android.view.KeyEvent $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        $i1 = 0;

        if $i0 == 1 goto label8;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 == 61 goto label6;

        if $i0 == 66 goto label5;

        lookupswitch($i0)
        {
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label5;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z0 == 0 goto label8;

        $i0 = staticinvoke <b.k.b.c: int keyToDirection(int)>($i0);

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        $i2 = $i2 + 1;

        $z0 = 0;

     label3:
        if $i1 >= $i2 goto label4;

        $z1 = specialinvoke r0.<b.k.b.c: boolean moveFocus(int,android.graphics.Rect)>($i0, null);

        if $z1 == 0 goto label4;

        $i1 = $i1 + 1;

        $z0 = 1;

        goto label3;

     label4:
        return $z0;

     label5:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z0 == 0 goto label8;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label8;

        specialinvoke r0.<b.k.b.c: boolean clickKeyboardFocusedVirtualView()>();

        return 1;

     label6:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z0 == 0 goto label7;

        $z0 = specialinvoke r0.<b.k.b.c: boolean moveFocus(int,android.graphics.Rect)>(2, null);

        return $z0;

     label7:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z0 == 0 goto label8;

        $z0 = specialinvoke r0.<b.k.b.c: boolean moveFocus(int,android.graphics.Rect)>(1, null);

        return $z0;

     label8:
        return 0;
    }

    public final int getAccessibilityFocusedVirtualViewId()
    {
        int i0;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        i0 = r0.<b.k.b.c: int mAccessibilityFocusedVirtualViewId>;

        return i0;
    }

    public b.i.i.a.c getAccessibilityNodeProvider(android.view.View)
    {
        b.k.b.c$a $r2;
        android.view.View $r1;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<b.k.b.c: b.k.b.c$a mNodeProvider>;

        if $r2 != null goto label1;

        $r2 = new b.k.b.c$a;

        specialinvoke $r2.<b.k.b.c$a: void <init>(b.k.b.c)>(r0);

        r0.<b.k.b.c: b.k.b.c$a mNodeProvider> = $r2;

     label1:
        $r2 = r0.<b.k.b.c: b.k.b.c$a mNodeProvider>;

        return $r2;
    }

    public int getFocusedVirtualView()
    {
        int $i0;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        $i0 = virtualinvoke r0.<b.k.b.c: int getAccessibilityFocusedVirtualViewId()>();

        return $i0;
    }

    public final int getKeyboardFocusedVirtualViewId()
    {
        int i0;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        i0 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        return i0;
    }

    public abstract int getVirtualViewAt(float, float);

    public abstract void getVisibleVirtualViews(java.util.List);

    public final void invalidateRoot()
    {
        int $i0;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        $i0 = -1;

        virtualinvoke r0.<b.k.b.c: void invalidateVirtualView(int,int)>($i0, 1);

        return;
    }

    public final void invalidateVirtualView(int)
    {
        int $i0;
        b.k.b.c r0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        virtualinvoke r0.<b.k.b.c: void invalidateVirtualView(int,int)>($i0, 0);

        return;
    }

    public final void invalidateVirtualView(int, int)
    {
        android.view.ViewParent $r3;
        android.view.accessibility.AccessibilityManager $r1;
        b.k.b.c r0;
        int $i0, $i1;
        android.view.View $r2;
        android.view.accessibility.AccessibilityEvent $r4;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == -2147483648 goto label1;

        $r1 = r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 == null goto label1;

        $r4 = specialinvoke r0.<b.k.b.c: android.view.accessibility.AccessibilityEvent createEvent(int,int)>($i0, 2048);

        staticinvoke <b.i.i.a.a: void a(android.view.accessibility.AccessibilityEvent,int)>($r4, $i1);

        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        staticinvoke <b.i.i.B: boolean a(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)>($r3, $r2, $r4);

     label1:
        return;
    }

    public b.i.i.a.b obtainAccessibilityNodeInfo(int)
    {
        b.k.b.c r0;
        int $i0, $i1;
        b.i.i.a.b $r1;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $r1 = specialinvoke r0.<b.k.b.c: b.i.i.a.b createNodeForHost()>();

        return $r1;

     label1:
        $r1 = specialinvoke r0.<b.k.b.c: b.i.i.a.b createNodeForChild(int)>($i0);

        return $r1;
    }

    public final void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        b.k.b.c r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $i1 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        if $i1 == -2147483648 goto label1;

        virtualinvoke r0.<b.k.b.c: boolean clearKeyboardFocusForVirtualView(int)>($i1);

     label1:
        if $z0 == 0 goto label2;

        specialinvoke r0.<b.k.b.c: boolean moveFocus(int,android.graphics.Rect)>($i0, $r1);

     label2:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View $r1;
        b.k.b.c r0;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<b.i.i.a: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2);

        virtualinvoke r0.<b.k.b.c: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)>($r2);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, b.i.i.a.b)
    {
        android.view.View $r1;
        b.k.b.c r0;
        b.i.i.a.b $r2;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: b.i.i.a.b;

        specialinvoke r0.<b.i.i.a: void onInitializeAccessibilityNodeInfo(android.view.View,b.i.i.a.b)>($r1, $r2);

        virtualinvoke r0.<b.k.b.c: void onPopulateNodeForHost(b.i.i.a.b)>($r2);

        return;
    }

    public abstract boolean onPerformActionForVirtualView(int, int, android.os.Bundle);

    public void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
    {
        b.k.b.c r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return;
    }

    public void onPopulateEventForVirtualView(int, android.view.accessibility.AccessibilityEvent)
    {
        int $i0;
        b.k.b.c r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        return;
    }

    public void onPopulateNodeForHost(b.i.i.a.b)
    {
        b.k.b.c r0;
        b.i.i.a.b $r1;

        r0 := @this: b.k.b.c;

        $r1 := @parameter0: b.i.i.a.b;

        return;
    }

    public abstract void onPopulateNodeForVirtualView(int, b.i.i.a.b);

    public void onVirtualViewKeyboardFocusChanged(int, boolean)
    {
        int $i0;
        b.k.b.c r0;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        return;
    }

    public boolean performAction(int, int, android.os.Bundle)
    {
        b.k.b.c r0;
        android.os.Bundle $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Bundle;

        $i2 = -1;

        if $i1 == $i2 goto label1;

        $z0 = specialinvoke r0.<b.k.b.c: boolean performActionForChild(int,int,android.os.Bundle)>($i1, $i0, $r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<b.k.b.c: boolean performActionForHost(int,android.os.Bundle)>($i0, $r1);

        return $z0;
    }

    public final boolean requestKeyboardFocusForVirtualView(int)
    {
        b.k.b.c r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<b.k.b.c: android.view.View mHost>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId>;

        if $i1 != $i0 goto label2;

        return 0;

     label2:
        if $i1 == -2147483648 goto label3;

        virtualinvoke r0.<b.k.b.c: boolean clearKeyboardFocusForVirtualView(int)>($i1);

     label3:
        r0.<b.k.b.c: int mKeyboardFocusedVirtualViewId> = $i0;

        virtualinvoke r0.<b.k.b.c: void onVirtualViewKeyboardFocusChanged(int,boolean)>($i0, 1);

        virtualinvoke r0.<b.k.b.c: boolean sendEventForVirtualView(int,int)>($i0, 8);

        return 1;
    }

    public final boolean sendEventForVirtualView(int, int)
    {
        android.view.ViewParent $r3;
        android.view.accessibility.AccessibilityManager $r1;
        b.k.b.c r0;
        int $i0, $i1;
        android.view.View $r2;
        android.view.accessibility.AccessibilityEvent $r4;
        boolean $z0;

        r0 := @this: b.k.b.c;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == -2147483648 goto label3;

        $r1 = r0.<b.k.b.c: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = specialinvoke r0.<b.k.b.c: android.view.accessibility.AccessibilityEvent createEvent(int,int)>($i0, $i1);

        $r2 = r0.<b.k.b.c: android.view.View mHost>;

        $z0 = staticinvoke <b.i.i.B: boolean a(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)>($r3, $r2, $r4);

        return $z0;

     label3:
        return 0;
    }
}
