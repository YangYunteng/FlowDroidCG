public class com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder extends java.lang.Object
{
    public boolean enableDeveloperMode;
    public long fetchTimeoutInSeconds;
    public long minimumFetchInterval;

    public void <init>()
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        long $l0;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: boolean enableDeveloperMode> = 0;

        r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long fetchTimeoutInSeconds> = 60L;

        $l0 = <com.google.firebase.remoteconfig.internal.ConfigFetchHandler: long DEFAULT_MINIMUM_FETCH_INTERVAL_IN_SECONDS>;

        r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long minimumFetchInterval> = $l0;

        return;
    }

    public static boolean access$000(com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder)
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder $r0;
        boolean z0;

        $r0 := @parameter0: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        z0 = $r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: boolean enableDeveloperMode>;

        return z0;
    }

    public static long access$100(com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder)
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder $r0;
        long l0;

        $r0 := @parameter0: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        l0 = $r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long fetchTimeoutInSeconds>;

        return l0;
    }

    public static long access$200(com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder)
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder $r0;
        long l0;

        $r0 := @parameter0: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        l0 = $r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long minimumFetchInterval>;

        return l0;
    }

    public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings build()
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings $r1;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        $r1 = new com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings;

        specialinvoke $r1.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings: void <init>(com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder,com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$1)>(r0, null);

        return $r1;
    }

    public long getFetchTimeoutInSeconds()
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        long l0;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        l0 = r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long fetchTimeoutInSeconds>;

        return l0;
    }

    public long getMinimumFetchIntervalInSeconds()
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        long l0;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        l0 = r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long minimumFetchInterval>;

        return l0;
    }

    public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder setDeveloperModeEnabled(boolean)
    {
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        boolean $z0;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        $z0 := @parameter0: boolean;

        r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: boolean enableDeveloperMode> = $z0;

        return r0;
    }

    public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder setFetchTimeoutInSeconds(long)
    {
        java.lang.Object[] $r1;
        long $l0;
        java.lang.IllegalArgumentException $r4;
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        byte $b1;
        java.lang.Long $r2;
        int $i2;
        java.lang.String $r3;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long fetchTimeoutInSeconds> = $l0;

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Fetch connection timeout has to be a non-negative number. %d is an invalid argument", $r1);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder setMinimumFetchIntervalInSeconds(long)
    {
        long $l0;
        java.lang.IllegalArgumentException $r4;
        com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder r0;
        byte $b1;
        int $i2;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        r0 := @this: com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r0.<com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings$Builder: long minimumFetchInterval> = $l0;

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Minimum interval between fetches has to be a non-negative number. ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an invalid argument");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;
    }
}
