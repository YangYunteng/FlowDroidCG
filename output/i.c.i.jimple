public final class i.c.i extends i.f.b.j implements i.f.a.p
{
    public static final i.c.i a;

    static void <clinit>()
    {
        i.c.i $r0;

        $r0 = new i.c.i;

        specialinvoke $r0.<i.c.i: void <init>()>();

        <i.c.i: i.c.i a> = $r0;

        return;
    }

    public void <init>()
    {
        i.c.i r0;

        r0 := @this: i.c.i;

        specialinvoke r0.<i.f.b.j: void <init>(int)>(2);

        return;
    }

    public final i.c.h a(i.c.h, i.c.h$b)
    {
        i.c.h$b $r3, $r7;
        i.c.h$c $r4;
        i.c.f$b $r6;
        i.c.j $r5;
        i.c.h $r2;
        i.c.i r0;
        i.c.f $r8;
        i.c.d $r1, $r9;

        r0 := @this: i.c.i;

        $r2 := @parameter0: i.c.h;

        $r3 := @parameter1: i.c.h$b;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "acc");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r3, "element");

        $r4 = interfaceinvoke $r3.<i.c.h$b: i.c.h$c getKey()>();

        $r2 = interfaceinvoke $r2.<i.c.h: i.c.h minusKey(i.c.h$c)>($r4);

        $r5 = <i.c.j: i.c.j a>;

        if $r2 != $r5 goto label1;

        return $r3;

     label1:
        $r6 = <i.c.f: i.c.f$b c>;

        $r7 = interfaceinvoke $r2.<i.c.h: i.c.h$b get(i.c.h$c)>($r6);

        $r8 = (i.c.f) $r7;

        if $r8 != null goto label2;

        $r1 = new i.c.d;

        specialinvoke $r1.<i.c.d: void <init>(i.c.h,i.c.h$b)>($r2, $r3);

        return $r1;

     label2:
        $r6 = <i.c.f: i.c.f$b c>;

        $r2 = interfaceinvoke $r2.<i.c.h: i.c.h minusKey(i.c.h$c)>($r6);

        $r5 = <i.c.j: i.c.j a>;

        if $r2 != $r5 goto label3;

        $r1 = new i.c.d;

        specialinvoke $r1.<i.c.d: void <init>(i.c.h,i.c.h$b)>($r3, $r8);

        return $r1;

     label3:
        $r9 = new i.c.d;

        $r1 = new i.c.d;

        specialinvoke $r1.<i.c.d: void <init>(i.c.h,i.c.h$b)>($r2, $r3);

        specialinvoke $r9.<i.c.d: void <init>(i.c.h,i.c.h$b)>($r1, $r8);

        return $r9;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        i.c.h$b $r4;
        i.c.h $r1;
        i.c.i r0;
        java.lang.Object $r2, $r3;

        r0 := @this: i.c.i;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r1 = (i.c.h) $r2;

        $r4 = (i.c.h$b) $r3;

        $r1 = virtualinvoke r0.<i.c.i: i.c.h a(i.c.h,i.c.h$b)>($r1, $r4);

        return $r1;
    }
}
