public final class com.google.android.gms.internal.vision.zzjl extends java.lang.Object
{
    public com.google.android.gms.internal.vision.zzfe zzade;
    public int zzadf;
    public final java.nio.ByteBuffer zzsw;

    public void <init>(java.nio.ByteBuffer)
    {
        java.nio.ByteOrder $r1;
        com.google.android.gms.internal.vision.zzjl r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $r2 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw> = $r2;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] $r2;
        com.google.android.gms.internal.vision.zzjl r0;
        int $i0, $i1;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $r2 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r2, $i0, $i1);

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void <init>(java.nio.ByteBuffer)>($r1);

        return;
    }

    public static int zza(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        char $c3;
        long $l7;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label02;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $i4 = (int) $c3;

        if $i4 >= 128 goto label02;

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $i4 = $i0;

     label03:
        if $i2 >= $i0 goto label10;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $i5 = (int) $c3;

        if $i5 >= 2048 goto label04;

        $i5 = (int) $c3;

        $i5 = 127 - $i5;

        $i5 = $i5 >>> 31;

        $i4 = $i4 + $i5;

        $i2 = $i2 + 1;

        goto label03;

     label04:
        $i5 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label05:
        if $i2 >= $i5 goto label09;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $i6 = (int) $c3;

        if $i6 >= 2048 goto label06;

        $i6 = (int) $c3;

        $i6 = 127 - $i6;

        $i6 = $i6 >>> 31;

        $i1 = $i1 + $i6;

        goto label08;

     label06:
        $i1 = $i1 + 2;

        $i6 = 55296;

        $i8 = (int) $c3;

        if $i6 > $i8 goto label08;

        $i6 = (int) $c3;

        $i8 = 57343;

        if $i6 > $i8 goto label08;

        $i6 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r0, $i2);

        if $i6 < 65536 goto label07;

        $i2 = $i2 + 1;

        goto label08;

     label07:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(39);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label08:
        $i2 = $i2 + 1;

        goto label05;

     label09:
        $i4 = $i4 + $i1;

     label10:
        if $i4 < $i0 goto label11;

        return $i4;

     label11:
        $r4 = new java.lang.IllegalArgumentException;

        $l7 = (long) $i4;

        $l7 = $l7 + 4294967296L;

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(54);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 length does not fit in int: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        goto label12;

     label12:
        throw $r4;
    }

    public static int zzav(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 << 3;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzbd(int)>($i0);

        return $i0;
    }

    public static int zzaw(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzbd(int)>($i0);

        return $i0;

     label1:
        return 10;
    }

    public static int zzb(int, com.google.android.gms.internal.vision.zzjt)
    {
        int $i0, $i1, $i2;
        com.google.android.gms.internal.vision.zzjt $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.android.gms.internal.vision.zzjt;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzav(int)>($i0);

        $i1 = virtualinvoke $r0.<com.google.android.gms.internal.vision.zzjt: int zzeq()>();

        $i2 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzbd(int)>($i1);

        $i1 = $i2 + $i1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int zzb(int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzav(int)>($i0);

        $i1 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzn(java.lang.String)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int zzbd(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i1 = -16384;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label2;

        return 2;

     label2:
        $i1 = -2097152 & $i0;

        if $i1 != 0 goto label3;

        return 3;

     label3:
        $i0 = $i0 & -268435456;

        if $i0 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    private final void zzbu(int)
    {
        com.google.android.gms.internal.vision.zzjl r0;
        byte $b1;
        int $i0, $i2;
        com.google.android.gms.internal.vision.zzjm $r2;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

        $b1 = (byte) $i0;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        return;

     label1:
        $r2 = new com.google.android.gms.internal.vision.zzjm;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r2.<com.google.android.gms.internal.vision.zzjm: void <init>(int,int)>($i0, $i2);

        throw $r2;
    }

    public static int zzd(int, long)
    {
        byte $b3;
        int $i0;
        long $l1, $l2;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzav(int)>($i0);

        $l2 = -128L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label01;

        $b3 = 1;

        goto label10;

     label01:
        $l2 = -16384L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label02;

        $b3 = 2;

        goto label10;

     label02:
        $l2 = -2097152L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label03;

        $b3 = 3;

        goto label10;

     label03:
        $l2 = -268435456L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label04;

        $b3 = 4;

        goto label10;

     label04:
        $l2 = -34359738368L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label05;

        $b3 = 5;

        goto label10;

     label05:
        $l2 = -4398046511104L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label06;

        $b3 = 6;

        goto label10;

     label06:
        $l2 = -562949953421312L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label07;

        $b3 = 7;

        goto label10;

     label07:
        $l2 = -72057594037927936L & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label08;

        $b3 = 8;

        goto label10;

     label08:
        $l1 = $l1 & -9223372036854775808L;

        $b3 = $l1 cmp 0L;

        if $b3 != 0 goto label09;

        $b3 = 9;

        goto label10;

     label09:
        $b3 = 10;

     label10:
        $i0 = $i0 + $b3;

        return $i0;
    }

    private final void zzd(int, int)
    {
        int $i0, $i1;
        com.google.android.gms.internal.vision.zzjl r0;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = $i1 << 3;

        $i1 = $i1 | $i0;

        virtualinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbv(int)>($i1);

        return;
    }

    public static void zzd(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        byte[] $r2;
        java.nio.BufferOverflowException $r6, $r10;
        java.nio.ByteBuffer $r1;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i9;
        java.lang.String $r4;
        boolean $z0;
        java.lang.CharSequence $r0;
        char $c5, $c8;
        java.lang.ArrayIndexOutOfBoundsException $r5, $r9;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r3, $r7;
        java.nio.ReadOnlyBufferException $r11;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.nio.ByteBuffer;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean isReadOnly()>();

        if $z0 != 0 goto label67;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasArray()>();

        $i0 = 0;

        if $z0 == 0 goto label57;

     label01:
        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

     label02:
        $i3 = $i1 + $i2;

     label03:
        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label04:
        $i2 = $i2 + $i3;

     label05:
        if $i0 >= $i1 goto label10;

        $i4 = $i0 + $i3;

        if $i4 >= $i2 goto label10;

     label06:
        $c5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label07:
        $i7 = (int) $c5;

        if $i7 >= 128 goto label10;

        $b6 = (byte) $c5;

     label08:
        $r2[$i4] = $b6;

     label09:
        $i0 = $i0 + 1;

        goto label05;

     label10:
        if $i0 != $i1 goto label11;

        $i3 = $i3 + $i1;

        goto label52;

     label11:
        $i3 = $i3 + $i0;

     label12:
        if $i0 >= $i1 goto label52;

     label13:
        $c5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label14:
        $i4 = (int) $c5;

        if $i4 >= 128 goto label17;

        if $i3 >= $i2 goto label17;

        $i4 = $i3 + 1;

        $b6 = (byte) $c5;

     label15:
        $r2[$i3] = $b6;

     label16:
        $i3 = $i4;

        goto label45;

     label17:
        $i4 = (int) $c5;

        if $i4 >= 2048 goto label22;

        $i4 = -2;

        $i4 = $i2 + $i4;

        if $i3 > $i4 goto label22;

        $i4 = $i3 + 1;

        $i7 = (int) $c5;

        $i7 = $i7 >>> 6;

        $i7 = $i7 | 960;

        $b6 = (byte) $i7;

     label18:
        $r2[$i3] = $b6;

     label19:
        $i3 = $i4 + 1;

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        $b6 = (byte) $c5;

     label20:
        $r2[$i4] = $b6;

     label21:
        goto label45;

     label22:
        $i4 = (int) $c5;

        $i7 = 55296;

        if $i4 < $i7 goto label23;

        $i4 = 57343;

        $i7 = (int) $c5;

        if $i4 >= $i7 goto label30;

     label23:
        $i4 = -3;

        $i4 = $i2 + $i4;

        if $i3 > $i4 goto label30;

        $i4 = $i3 + 1;

        $i7 = (int) $c5;

        $i7 = $i7 >>> 12;

        $i7 = $i7 | 480;

        $b6 = (byte) $i7;

     label24:
        $r2[$i3] = $b6;

     label25:
        $i3 = $i4 + 1;

        $i7 = (int) $c5;

        $i7 = $i7 >>> 6;

        $i7 = $i7 & 63;

        $i7 = $i7 | 128;

        $b6 = (byte) $i7;

     label26:
        $r2[$i4] = $b6;

     label27:
        $i4 = $i3 + 1;

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        $b6 = (byte) $c5;

     label28:
        $r2[$i3] = $b6;

     label29:
        goto label16;

     label30:
        $i4 = -4;

        $i4 = $i2 + $i4;

        if $i3 > $i4 goto label50;

        $i4 = $i0 + 1;

     label31:
        $i7 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label32:
        if $i4 == $i7 goto label47;

     label33:
        $c8 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i4);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c5, $c8);

     label34:
        if $z0 == 0 goto label46;

     label35:
        $i0 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c5, $c8);

     label36:
        $i7 = $i3 + 1;

        $i9 = $i0 >>> 18;

        $i9 = $i9 | 240;

        $b6 = (byte) $i9;

     label37:
        $r2[$i3] = $b6;

     label38:
        $i3 = $i7 + 1;

        $i9 = $i0 >>> 12;

        $i9 = $i9 & 63;

        $i9 = $i9 | 128;

        $b6 = (byte) $i9;

     label39:
        $r2[$i7] = $b6;

     label40:
        $i7 = $i3 + 1;

        $i9 = $i0 >>> 6;

        $i9 = $i9 & 63;

        $i9 = $i9 | 128;

        $b6 = (byte) $i9;

     label41:
        $r2[$i3] = $b6;

     label42:
        $i3 = $i7 + 1;

        $i0 = $i0 & 63;

        $i0 = $i0 | 128;

        $b6 = (byte) $i0;

     label43:
        $r2[$i7] = $b6;

     label44:
        $i0 = $i4;

     label45:
        $i0 = $i0 + 1;

        goto label12;

     label46:
        $i0 = $i4;

     label47:
        $r8 = new java.lang.IllegalArgumentException;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label48:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(39);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

     label49:
        throw $r8;

     label50:
        $r9 = new java.lang.ArrayIndexOutOfBoundsException;

        $r5 = $r9;

        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label51:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(37);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label52:
        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int arrayOffset()>();

     label53:
        $i0 = $i3 - $i0;

     label54:
        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

     label55:
        return;

     label56:
        $r5 := @caughtexception;

        $r10 = new java.nio.BufferOverflowException;

        $r6 = $r10;

        specialinvoke $r10.<java.nio.BufferOverflowException: void <init>()>();

        virtualinvoke $r6.<java.nio.BufferOverflowException: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r6;

     label57:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label58:
        if $i0 >= $i1 goto label66;

        $c5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i2 = (int) $c5;

        if $i2 >= 128 goto label59;

        $b6 = (byte) $c5;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        goto label65;

     label59:
        $i2 = (int) $c5;

        if $i2 >= 2048 goto label60;

        $i2 = (int) $c5;

        $i2 = $i2 >>> 6;

        $i2 = $i2 | 960;

        $b6 = (byte) $i2;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        $b6 = (byte) $c5;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        goto label65;

     label60:
        $i2 = (int) $c5;

        $i3 = 55296;

        if $i2 < $i3 goto label64;

        $i2 = 57343;

        $i3 = (int) $c5;

        if $i2 >= $i3 goto label61;

        goto label64;

     label61:
        $i2 = $i0 + 1;

        $i3 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i2 == $i3 goto label63;

        $c8 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c5, $c8);

        if $z0 == 0 goto label62;

        $i0 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c5, $c8);

        $i3 = $i0 >>> 18;

        $i3 = $i3 | 240;

        $b6 = (byte) $i3;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i3 = $i0 >>> 12;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        $b6 = (byte) $i3;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i3 = $i0 >>> 6;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        $b6 = (byte) $i3;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i0 = $i0 & 63;

        $i0 = $i0 | 128;

        $b6 = (byte) $i0;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i0 = $i2;

        goto label65;

     label62:
        $i0 = $i2;

     label63:
        $r8 = new java.lang.IllegalArgumentException;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(39);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label64:
        $i2 = (int) $c5;

        $i2 = $i2 >>> 12;

        $i2 = $i2 | 480;

        $b6 = (byte) $i2;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i2 = (int) $c5;

        $i2 = $i2 >>> 6;

        $i2 = $i2 & 63;

        $i2 = $i2 | 128;

        $b6 = (byte) $i2;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        $b6 = (byte) $c5;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

     label65:
        $i0 = $i0 + 1;

        goto label58;

     label66:
        return;

     label67:
        $r11 = new java.nio.ReadOnlyBufferException;

        specialinvoke $r11.<java.nio.ReadOnlyBufferException: void <init>()>();

        goto label68;

     label68:
        throw $r11;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label06 to label07 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label15 to label16 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label18 to label19 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label20 to label21 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label24 to label25 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label26 to label27 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label28 to label29 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label31 to label32 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label33 to label34 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label35 to label36 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label37 to label38 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label39 to label40 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label41 to label42 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label43 to label44 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label48 to label49 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label51 to label53 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label54 to label55 with label56;
    }

    public static int zzi(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzav(int)>($i0);

        $i1 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzaw(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static com.google.android.gms.internal.vision.zzjl zzk(byte[])
    {
        int $i0;
        byte[] $r1;
        com.google.android.gms.internal.vision.zzjl $r0;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: com.google.android.gms.internal.vision.zzjl zzl(byte[],int,int)>($r1, 0, $i0);

        return $r0;
    }

    public static com.google.android.gms.internal.vision.zzjl zzl(byte[], int, int)
    {
        byte[] $r0;
        com.google.android.gms.internal.vision.zzjl $r1;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = new com.google.android.gms.internal.vision.zzjl;

        specialinvoke $r1.<com.google.android.gms.internal.vision.zzjl: void <init>(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static int zzn(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zza(java.lang.CharSequence)>($r0);

        $i1 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzbd(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    private final void zzq(long)
    {
        com.google.android.gms.internal.vision.zzjl r0;
        byte $b1;
        int $i0;
        long $l2, $l3;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $l2 := @parameter0: long;

     label1:
        $l3 = -128L & $l2;

        $b1 = $l3 cmp 0L;

        if $b1 != 0 goto label2;

        $i0 = (int) $l2;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbu(int)>($i0);

        return;

     label2:
        $i0 = (int) $l2;

        $i0 = $i0 & 127;

        $i0 = $i0 | 128;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbu(int)>($i0);

        $l2 = $l2 >>> 7;

        goto label1;
    }

    public final void zza(int, float)
    {
        com.google.android.gms.internal.vision.zzjl r0;
        int $i0, $i1;
        float $f0;
        com.google.android.gms.internal.vision.zzjm $r2;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzd(int,int)>($i0, 5);

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i1 < 4 goto label1;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        return;

     label1:
        $r2 = new com.google.android.gms.internal.vision.zzjm;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r2.<com.google.android.gms.internal.vision.zzjm: void <init>(int,int)>($i0, $i1);

        throw $r2;
    }

    public final void zza(int, com.google.android.gms.internal.vision.zzjt)
    {
        int $i0;
        com.google.android.gms.internal.vision.zzjl r0;
        com.google.android.gms.internal.vision.zzjt $r1;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.android.gms.internal.vision.zzjt;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzd(int,int)>($i0, 2);

        $i0 = $r1.<com.google.android.gms.internal.vision.zzjt: int zzadp>;

        if $i0 >= 0 goto label1;

        virtualinvoke $r1.<com.google.android.gms.internal.vision.zzjt: int zzeq()>();

     label1:
        $i0 = $r1.<com.google.android.gms.internal.vision.zzjt: int zzadp>;

        virtualinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbv(int)>($i0);

        virtualinvoke $r1.<com.google.android.gms.internal.vision.zzjt: void zza(com.google.android.gms.internal.vision.zzjl)>(r0);

        return;
    }

    public final void zza(int, java.lang.String)
    {
        com.google.android.gms.internal.vision.zzjl r0;
        java.nio.BufferOverflowException $r4;
        java.nio.ByteBuffer $r2;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        com.google.android.gms.internal.vision.zzjm $r3;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i1 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzd(int,int)>($i1, 2);

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzbd(int)>($i1);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label02:
        $i2 = $i2 * 3;

     label03:
        $i2 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zzbd(int)>($i2);

     label04:
        if $i1 != $i2 goto label24;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label05:
        $i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

     label06:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label07:
        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

     label08:
        if $i0 < $i1 goto label21;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = $i2 + $i1;

     label09:
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

     label10:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label11:
        staticinvoke <com.google.android.gms.internal.vision.zzjl: void zzd(java.lang.CharSequence,java.nio.ByteBuffer)>($r1, $r2);

     label12:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label13:
        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

     label14:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label15:
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

     label16:
        $i2 = $i0 - $i2;

        $i1 = $i2 - $i1;

     label17:
        virtualinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbv(int)>($i1);

     label18:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label19:
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

     label20:
        return;

     label21:
        $r3 = new com.google.android.gms.internal.vision.zzjm;

        $i1 = $i2 + $i1;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label22:
        $i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r3.<com.google.android.gms.internal.vision.zzjm: void <init>(int,int)>($i1, $i2);

     label23:
        throw $r3;

     label24:
        $i1 = staticinvoke <com.google.android.gms.internal.vision.zzjl: int zza(java.lang.CharSequence)>($r1);

        virtualinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbv(int)>($i1);

     label25:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

     label26:
        staticinvoke <com.google.android.gms.internal.vision.zzjl: void zzd(java.lang.CharSequence,java.nio.ByteBuffer)>($r1, $r2);

     label27:
        return;

     label28:
        $r4 := @caughtexception;

        $r3 = new com.google.android.gms.internal.vision.zzjm;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r3.<com.google.android.gms.internal.vision.zzjm: void <init>(int,int)>($i1, $i2);

        virtualinvoke $r3.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r4);

        throw $r3;

        catch java.nio.BufferOverflowException from label01 to label02 with label28;
        catch java.nio.BufferOverflowException from label03 to label04 with label28;
        catch java.nio.BufferOverflowException from label05 to label06 with label28;
        catch java.nio.BufferOverflowException from label07 to label08 with label28;
        catch java.nio.BufferOverflowException from label09 to label10 with label28;
        catch java.nio.BufferOverflowException from label11 to label12 with label28;
        catch java.nio.BufferOverflowException from label13 to label14 with label28;
        catch java.nio.BufferOverflowException from label15 to label16 with label28;
        catch java.nio.BufferOverflowException from label17 to label18 with label28;
        catch java.nio.BufferOverflowException from label19 to label20 with label28;
        catch java.nio.BufferOverflowException from label22 to label23 with label28;
        catch java.nio.BufferOverflowException from label24 to label25 with label28;
        catch java.nio.BufferOverflowException from label26 to label27 with label28;
    }

    public final void zzb(int, boolean)
    {
        com.google.android.gms.internal.vision.zzjl r0;
        byte $b1;
        int $i0, $i2;
        com.google.android.gms.internal.vision.zzjm $r2;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzd(int,int)>($i0, 0);

        $b1 = (byte) $z0;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        return;

     label1:
        $r2 = new com.google.android.gms.internal.vision.zzjm;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r2.<com.google.android.gms.internal.vision.zzjm: void <init>(int,int)>($i0, $i2);

        throw $r2;
    }

    public final void zzbv(int)
    {
        int $i0, $i1;
        com.google.android.gms.internal.vision.zzjl r0;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

     label1:
        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label2;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbu(int)>($i0);

        return;

     label2:
        $i1 = $i0 & 127;

        $i1 = $i1 | 128;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbu(int)>($i1);

        $i0 = $i0 >>> 7;

        goto label1;
    }

    public final void zze(int, int)
    {
        com.google.android.gms.internal.vision.zzjl r0;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzd(int,int)>($i1, 0);

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzbv(int)>($i0);

        return;

     label1:
        $l2 = (long) $i0;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzq(long)>($l2);

        return;
    }

    public final void zze(int, com.google.android.gms.internal.vision.zzhf)
    {
        com.google.android.gms.internal.vision.zzfe $r2;
        byte[] $r4;
        com.google.android.gms.internal.vision.zzjl r0;
        com.google.android.gms.internal.vision.zzhf $r1;
        java.nio.ByteBuffer $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.android.gms.internal.vision.zzhf;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: com.google.android.gms.internal.vision.zzfe zzade>;

        if $r2 != null goto label1;

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $r2 = staticinvoke <com.google.android.gms.internal.vision.zzfe: com.google.android.gms.internal.vision.zzfe zza(java.nio.ByteBuffer)>($r3);

        r0.<com.google.android.gms.internal.vision.zzjl: com.google.android.gms.internal.vision.zzfe zzade> = $r2;

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        r0.<com.google.android.gms.internal.vision.zzjl: int zzadf> = $i0;

        goto label2;

     label1:
        $i0 = r0.<com.google.android.gms.internal.vision.zzjl: int zzadf>;

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        if $i0 == $i1 goto label2;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: com.google.android.gms.internal.vision.zzfe zzade>;

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = r0.<com.google.android.gms.internal.vision.zzjl: int zzadf>;

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i2 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i1 = r0.<com.google.android.gms.internal.vision.zzjl: int zzadf>;

        $i1 = $i2 - $i1;

        virtualinvoke $r2.<com.google.android.gms.internal.vision.zzfe: void write(byte[],int,int)>($r4, $i0, $i1);

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        r0.<com.google.android.gms.internal.vision.zzjl: int zzadf> = $i0;

     label2:
        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: com.google.android.gms.internal.vision.zzfe zzade>;

        virtualinvoke $r2.<com.google.android.gms.internal.vision.zzfe: void zza(int,com.google.android.gms.internal.vision.zzhf)>(2, $r1);

        virtualinvoke $r2.<com.google.android.gms.internal.vision.zzfe: void flush()>();

        $r3 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        r0.<com.google.android.gms.internal.vision.zzjl: int zzadf> = $i0;

        return;
    }

    public final void zzea()
    {
        java.lang.IllegalStateException $r2;
        com.google.android.gms.internal.vision.zzjl r0;
        java.lang.Object[] $r3;
        int $i0;
        java.lang.String $r5;
        java.lang.Integer $r4;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = newarray (java.lang.Object)[1];

        $r1 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Did not write as much data as expected, %s bytes remaining.", $r3);

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }

    public final void zzi(int, long)
    {
        int $i0;
        com.google.android.gms.internal.vision.zzjl r0;
        long $l1;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzd(int,int)>($i0, 0);

        specialinvoke r0.<com.google.android.gms.internal.vision.zzjl: void zzq(long)>($l1);

        return;
    }

    public final void zzl(byte[])
    {
        byte[] $r1;
        com.google.android.gms.internal.vision.zzjl r0;
        int $i0, $i1;
        com.google.android.gms.internal.vision.zzjm $r3;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.google.android.gms.internal.vision.zzjl;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i1 < $i0 goto label1;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r1, 0, $i0);

        return;

     label1:
        $r3 = new com.google.android.gms.internal.vision.zzjm;

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r2 = r0.<com.google.android.gms.internal.vision.zzjl: java.nio.ByteBuffer zzsw>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r3.<com.google.android.gms.internal.vision.zzjm: void <init>(int,int)>($i0, $i1);

        throw $r3;
    }
}
