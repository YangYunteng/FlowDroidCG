public final class com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate extends com.google.common.util.concurrent.AbstractService
{
    public volatile java.util.concurrent.ScheduledExecutorService executorService;
    public final java.util.concurrent.locks.ReentrantLock lock;
    public volatile java.util.concurrent.Future runningTask;
    public final java.lang.Runnable task;
    public final com.google.common.util.concurrent.AbstractScheduledService this$0;

    public void <init>(com.google.common.util.concurrent.AbstractScheduledService)
    {
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task $r3;
        java.util.concurrent.locks.ReentrantLock $r2;
        com.google.common.util.concurrent.AbstractScheduledService $r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService;

        r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: com.google.common.util.concurrent.AbstractScheduledService this$0> = $r1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractService: void <init>()>();

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.locks.ReentrantLock lock> = $r2;

        $r3 = new com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task: void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>(r0);

        r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.lang.Runnable task> = $r3;

        return;
    }

    public void <init>(com.google.common.util.concurrent.AbstractScheduledService, com.google.common.util.concurrent.AbstractScheduledService$1)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 $r2;
        com.google.common.util.concurrent.AbstractScheduledService $r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractScheduledService$1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: void <init>(com.google.common.util.concurrent.AbstractScheduledService)>($r1);

        return;
    }

    public static java.util.concurrent.locks.ReentrantLock access$200(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)
    {
        java.util.concurrent.locks.ReentrantLock r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        r1 = $r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.locks.ReentrantLock lock>;

        return r1;
    }

    public static java.util.concurrent.Future access$300(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)
    {
        java.util.concurrent.Future r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        r1 = $r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.Future runningTask>;

        return r1;
    }

    public static java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate, java.util.concurrent.Future)
    {
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        $r1 := @parameter1: java.util.concurrent.Future;

        $r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.Future runningTask> = $r1;

        return $r1;
    }

    public static java.util.concurrent.ScheduledExecutorService access$600(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)
    {
        java.util.concurrent.ScheduledExecutorService r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        r1 = $r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.ScheduledExecutorService executorService>;

        return r1;
    }

    public static java.lang.Runnable access$700(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)
    {
        java.lang.Runnable r1;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        r1 = $r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.lang.Runnable task>;

        return r1;
    }

    public final void doStart()
    {
        com.google.common.util.concurrent.AbstractScheduledService $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1 $r3;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2 $r4;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractScheduledService: java.util.concurrent.ScheduledExecutorService executor()>();

        $r3 = new com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1: void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>(r0);

        $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.ScheduledExecutorService renamingDecorator(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier)>($r2, $r3);

        r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.ScheduledExecutorService executorService> = $r2;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.ScheduledExecutorService executorService>;

        $r4 = new com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2;

        specialinvoke $r4.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>(r0);

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public final void doStop()
    {
        java.util.concurrent.Future $r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3 $r3;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.Future runningTask>;

        interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>(0);

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.ScheduledExecutorService executorService>;

        $r3 = new com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3: void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>(r0);

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.util.concurrent.AbstractScheduledService $r2;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate r0;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        $r2 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractScheduledService: java.lang.String toString()>();

        return $r1;
    }
}
