public final class f.a.a.a.a.b.s extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    public final java.lang.String a;
    public final java.util.concurrent.atomic.AtomicLong b;

    public void <init>(java.lang.String, java.util.concurrent.atomic.AtomicLong)
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        java.lang.String $r1;
        f.a.a.a.a.b.s r0;

        r0 := @this: f.a.a.a.a.b.s;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.concurrent.atomic.AtomicLong;

        r0.<f.a.a.a.a.b.s: java.lang.String a> = $r1;

        r0.<f.a.a.a.a.b.s: java.util.concurrent.atomic.AtomicLong b> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        long $l0;
        f.a.a.a.a.b.s r0;
        java.lang.Runnable $r1;
        f.a.a.a.a.b.r $r3;
        java.util.concurrent.atomic.AtomicLong $r7;
        java.lang.Thread $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.util.concurrent.ThreadFactory $r2;

        r0 := @this: f.a.a.a.a.b.s;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        $r3 = new f.a.a.a.a.b.r;

        specialinvoke $r3.<f.a.a.a.a.b.r: void <init>(f.a.a.a.a.b.s,java.lang.Runnable)>(r0, $r1);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<f.a.a.a.a.b.s: java.lang.String a>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = r0.<f.a.a.a.a.b.s: java.util.concurrent.atomic.AtomicLong b>;

        $l0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>($r6);

        return $r4;
    }
}
