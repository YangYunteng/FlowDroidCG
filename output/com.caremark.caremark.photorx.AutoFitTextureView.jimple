public class com.caremark.caremark.photorx.AutoFitTextureView extends android.view.TextureView
{
    public android.util.DisplayMetrics mMetrics;
    public int mRatioHeight;
    public int mRatioWidth;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.caremark.caremark.photorx.AutoFitTextureView r0;

        r0 := @this: com.caremark.caremark.photorx.AutoFitTextureView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.caremark.caremark.photorx.AutoFitTextureView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.caremark.caremark.photorx.AutoFitTextureView r0;
        android.util.AttributeSet $r2;

        r0 := @this: com.caremark.caremark.photorx.AutoFitTextureView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.caremark.caremark.photorx.AutoFitTextureView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2;
        com.caremark.caremark.photorx.AutoFitTextureView r0;
        android.util.AttributeSet $r1;
        int $i0;
        android.util.DisplayMetrics $r3;

        r0 := @this: com.caremark.caremark.photorx.AutoFitTextureView;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r1, $i0);

        r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioWidth> = 0;

        r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioHeight> = 0;

        $r3 = new android.util.DisplayMetrics;

        specialinvoke $r3.<android.util.DisplayMetrics: void <init>()>();

        r0.<com.caremark.caremark.photorx.AutoFitTextureView: android.util.DisplayMetrics mMetrics> = $r3;

        return;
    }

    public void onMeasure(int, int)
    {
        android.content.Context $r1;
        android.view.WindowManager $r3;
        com.caremark.caremark.photorx.AutoFitTextureView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.Display $r4;
        double $d0, $d1, $d2, $d3;
        android.util.DisplayMetrics $r5;
        java.lang.Object $r2;

        r0 := @this: com.caremark.caremark.photorx.AutoFitTextureView;

        $i2 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.view.TextureView: void onMeasure(int,int)>($i2, $i1);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i2);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i1 = r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioWidth>;

        if $i1 == 0 goto label3;

        $i1 = r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioHeight>;

        if $i1 != 0 goto label1;

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<android.view.TextureView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r5 = r0.<com.caremark.caremark.photorx.AutoFitTextureView: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r5);

        $i4 = r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioWidth>;

        $d0 = (double) $i4;

        $i0 = r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioHeight>;

        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        $d1 = (double) $i0;

        $d2 = (double) $i4;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d2 = $d1 / $d2;

        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d2 = $d2 * $d1;

        $r5 = r0.<com.caremark.caremark.photorx.AutoFitTextureView: android.util.DisplayMetrics mMetrics>;

        $i1 = $r5.<android.util.DisplayMetrics: int heightPixels>;

        $d3 = (double) $i1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d2 = $d3 / $d2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * $d2;

        $d2 = (double) $i3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d0 = $d0 * $d2;

        $i5 = $r5.<android.util.DisplayMetrics: int widthPixels>;

        $d3 = (double) $i5;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d0 = $d3 / $d0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d0 = $d0 * $d2;

        $i3 = $i3 * $i4;

        $i3 = $i3 / $i0;

        if $i2 >= $i3 goto label2;

        $i2 = (int) $d1;

        virtualinvoke r0.<android.view.TextureView: void setMeasuredDimension(int,int)>($i2, $i1);

        return;

     label2:
        $i2 = (int) $d0;

        virtualinvoke r0.<android.view.TextureView: void setMeasuredDimension(int,int)>($i5, $i2);

        return;

     label3:
        virtualinvoke r0.<android.view.TextureView: void setMeasuredDimension(int,int)>($i2, $i3);

        return;
    }

    public void setAspectRatio(int, int)
    {
        com.caremark.caremark.photorx.AutoFitTextureView r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.caremark.caremark.photorx.AutoFitTextureView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        if $i1 < 0 goto label1;

        r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioWidth> = $i0;

        r0.<com.caremark.caremark.photorx.AutoFitTextureView: int mRatioHeight> = $i1;

        virtualinvoke r0.<android.view.TextureView: void requestLayout()>();

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Size cannot be negative.");

        throw $r1;
    }
}
