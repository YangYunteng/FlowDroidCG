public class k.a.d extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    public final java.lang.String a;
    public final boolean b;

    public void <init>(java.lang.String, boolean)
    {
        java.lang.String $r1;
        k.a.d r0;
        boolean $z0;

        r0 := @this: k.a.d;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        r0.<k.a.d: java.lang.String a> = $r1;

        r0.<k.a.d: boolean b> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        java.lang.Thread $r1;
        java.lang.String $r2;
        java.lang.Runnable $r3;
        k.a.d r0;
        boolean $z0;

        r0 := @this: k.a.d;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 = new java.lang.Thread;

        $r2 = r0.<k.a.d: java.lang.String a>;

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r3, $r2);

        $z0 = r0.<k.a.d: boolean b>;

        virtualinvoke $r1.<java.lang.Thread: void setDaemon(boolean)>($z0);

        return $r1;
    }
}
