public class org.dom4j.rule.Rule extends java.lang.Object implements java.lang.Comparable
{
    public org.dom4j.rule.Action action;
    public int appearenceCount;
    public int importPrecedence;
    public java.lang.String mode;
    public org.dom4j.rule.Pattern pattern;
    public double priority;

    public void <init>()
    {
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.rule.Rule: double priority> = 0.5;

        return;
    }

    public void <init>(org.dom4j.rule.Pattern)
    {
        org.dom4j.rule.Rule r0;
        org.dom4j.rule.Pattern $r1;
        double $d0;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: org.dom4j.rule.Pattern;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern> = $r1;

        $d0 = interfaceinvoke $r1.<org.dom4j.rule.Pattern: double getPriority()>();

        r0.<org.dom4j.rule.Rule: double priority> = $d0;

        return;
    }

    public void <init>(org.dom4j.rule.Pattern, org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action $r2;
        org.dom4j.rule.Rule r0;
        org.dom4j.rule.Pattern $r1;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: org.dom4j.rule.Pattern;

        $r2 := @parameter1: org.dom4j.rule.Action;

        specialinvoke r0.<org.dom4j.rule.Rule: void <init>(org.dom4j.rule.Pattern)>($r1);

        r0.<org.dom4j.rule.Rule: org.dom4j.rule.Action action> = $r2;

        return;
    }

    public void <init>(org.dom4j.rule.Rule, org.dom4j.rule.Pattern)
    {
        org.dom4j.rule.Action $r4;
        org.dom4j.rule.Pattern $r1;
        int $i0;
        org.dom4j.rule.Rule r0, $r2;
        java.lang.String $r3;
        double $d0;

        r0 := @this: org.dom4j.rule.Rule;

        $r2 := @parameter0: org.dom4j.rule.Rule;

        $r1 := @parameter1: org.dom4j.rule.Pattern;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = $r2.<org.dom4j.rule.Rule: java.lang.String mode>;

        r0.<org.dom4j.rule.Rule: java.lang.String mode> = $r3;

        $i0 = $r2.<org.dom4j.rule.Rule: int importPrecedence>;

        r0.<org.dom4j.rule.Rule: int importPrecedence> = $i0;

        $d0 = $r2.<org.dom4j.rule.Rule: double priority>;

        r0.<org.dom4j.rule.Rule: double priority> = $d0;

        $i0 = $r2.<org.dom4j.rule.Rule: int appearenceCount>;

        r0.<org.dom4j.rule.Rule: int appearenceCount> = $i0;

        $r4 = $r2.<org.dom4j.rule.Rule: org.dom4j.rule.Action action>;

        r0.<org.dom4j.rule.Rule: org.dom4j.rule.Action action> = $r4;

        r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern> = $r1;

        return;
    }

    public int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        java.lang.Class $r3;
        org.dom4j.rule.Rule r0, $r2;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.dom4j.rule.Rule;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.rule.Rule) $r1;

        $i0 = virtualinvoke r0.<org.dom4j.rule.Rule: int compareTo(org.dom4j.rule.Rule)>($r2);

        return $i0;

     label1:
        $r3 = class "Lorg/dom4j/rule/Rule;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);

        return $i0;
    }

    public int compareTo(org.dom4j.rule.Rule)
    {
        int $i0, $i2;
        long $l1;
        org.dom4j.rule.Rule r0, $r1;
        double $d0, $d1;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: org.dom4j.rule.Rule;

        $i2 = r0.<org.dom4j.rule.Rule: int importPrecedence>;

        $i0 = $r1.<org.dom4j.rule.Rule: int importPrecedence>;

        $i0 = $i2 - $i0;

        if $i0 != 0 goto label1;

        $d1 = r0.<org.dom4j.rule.Rule: double priority>;

        $d0 = $r1.<org.dom4j.rule.Rule: double priority>;

        $d0 = $d1 - $d0;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l1;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.dom4j.rule.Rule: int appearenceCount>;

        $i2 = $r1.<org.dom4j.rule.Rule: int appearenceCount>;

        $i0 = $i0 - $i2;

     label1:
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        org.dom4j.rule.Rule r0, $r2;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.dom4j.rule.Rule;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.rule.Rule) $r1;

        $i0 = virtualinvoke r0.<org.dom4j.rule.Rule: int compareTo(org.dom4j.rule.Rule)>($r2);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.dom4j.rule.Action getAction()
    {
        org.dom4j.rule.Action r1;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        r1 = r0.<org.dom4j.rule.Rule: org.dom4j.rule.Action action>;

        return r1;
    }

    public int getAppearenceCount()
    {
        int i0;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        i0 = r0.<org.dom4j.rule.Rule: int appearenceCount>;

        return i0;
    }

    public int getImportPrecedence()
    {
        int i0;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        i0 = r0.<org.dom4j.rule.Rule: int importPrecedence>;

        return i0;
    }

    public final short getMatchType()
    {
        short $s0;
        org.dom4j.rule.Rule r0;
        org.dom4j.rule.Pattern $r1;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 = r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern>;

        $s0 = interfaceinvoke $r1.<org.dom4j.rule.Pattern: short getMatchType()>();

        return $s0;
    }

    public final java.lang.String getMatchesNodeName()
    {
        org.dom4j.rule.Rule r0;
        java.lang.String $r1;
        org.dom4j.rule.Pattern $r2;

        r0 := @this: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern>;

        $r1 = interfaceinvoke $r2.<org.dom4j.rule.Pattern: java.lang.String getMatchesNodeName()>();

        return $r1;
    }

    public java.lang.String getMode()
    {
        org.dom4j.rule.Rule r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.rule.Rule;

        r1 = r0.<org.dom4j.rule.Rule: java.lang.String mode>;

        return r1;
    }

    public org.dom4j.rule.Pattern getPattern()
    {
        org.dom4j.rule.Rule r0;
        org.dom4j.rule.Pattern r1;

        r0 := @this: org.dom4j.rule.Rule;

        r1 = r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern>;

        return r1;
    }

    public double getPriority()
    {
        org.dom4j.rule.Rule r0;
        double d0;

        r0 := @this: org.dom4j.rule.Rule;

        d0 = r0.<org.dom4j.rule.Rule: double priority>;

        return d0;
    }

    public org.dom4j.rule.Rule[] getUnionRules()
    {
        org.dom4j.rule.Pattern $r3;
        int $i0, $i1;
        org.dom4j.rule.Pattern[] $r4;
        org.dom4j.rule.Rule r0, $r2;
        org.dom4j.rule.Rule[] $r1;

        r0 := @this: org.dom4j.rule.Rule;

        $r3 = r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern>;

        $r4 = interfaceinvoke $r3.<org.dom4j.rule.Pattern: org.dom4j.rule.Pattern[] getUnionPatterns()>();

        if $r4 != null goto label1;

        return null;

     label1:
        $i0 = lengthof $r4;

        $r1 = newarray (org.dom4j.rule.Rule)[$i0];

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        return $r1;

     label3:
        $r2 = new org.dom4j.rule.Rule;

        $r3 = $r4[$i1];

        specialinvoke $r2.<org.dom4j.rule.Rule: void <init>(org.dom4j.rule.Rule,org.dom4j.rule.Pattern)>(r0, $r3);

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label2;
    }

    public int hashCode()
    {
        int $i0, $i1;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        $i1 = r0.<org.dom4j.rule.Rule: int importPrecedence>;

        $i0 = r0.<org.dom4j.rule.Rule: int appearenceCount>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public final boolean matches(org.dom4j.Node)
    {
        org.dom4j.Node $r2;
        org.dom4j.rule.Pattern $r1;
        org.dom4j.rule.Rule r0;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Rule;

        $r2 := @parameter0: org.dom4j.Node;

        $r1 = r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern>;

        $z0 = interfaceinvoke $r1.<org.dom4j.rule.Pattern: boolean matches(org.dom4j.Node)>($r2);

        return $z0;
    }

    public void setAction(org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action $r1;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: org.dom4j.rule.Action;

        r0.<org.dom4j.rule.Rule: org.dom4j.rule.Action action> = $r1;

        return;
    }

    public void setAppearenceCount(int)
    {
        int $i0;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        $i0 := @parameter0: int;

        r0.<org.dom4j.rule.Rule: int appearenceCount> = $i0;

        return;
    }

    public void setImportPrecedence(int)
    {
        int $i0;
        org.dom4j.rule.Rule r0;

        r0 := @this: org.dom4j.rule.Rule;

        $i0 := @parameter0: int;

        r0.<org.dom4j.rule.Rule: int importPrecedence> = $i0;

        return;
    }

    public void setMode(java.lang.String)
    {
        org.dom4j.rule.Rule r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.rule.Rule: java.lang.String mode> = $r1;

        return;
    }

    public void setPattern(org.dom4j.rule.Pattern)
    {
        org.dom4j.rule.Rule r0;
        org.dom4j.rule.Pattern $r1;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 := @parameter0: org.dom4j.rule.Pattern;

        r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern pattern> = $r1;

        return;
    }

    public void setPriority(double)
    {
        org.dom4j.rule.Rule r0;
        double $d0;

        r0 := @this: org.dom4j.rule.Rule;

        $d0 := @parameter0: double;

        r0.<org.dom4j.rule.Rule: double priority> = $d0;

        return;
    }

    public java.lang.String toString()
    {
        org.dom4j.rule.Action $r4;
        org.dom4j.rule.Pattern $r3;
        java.lang.StringBuilder $r1;
        org.dom4j.rule.Rule r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Rule;

        $r1 = new java.lang.StringBuilder;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ pattern: ");

        $r3 = virtualinvoke r0.<org.dom4j.rule.Rule: org.dom4j.rule.Pattern getPattern()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" action: ");

        $r4 = virtualinvoke r0.<org.dom4j.rule.Rule: org.dom4j.rule.Action getAction()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
