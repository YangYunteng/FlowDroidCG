public final class com.google.common.collect.ImmutableTable$MutableCell extends com.google.common.collect.Tables$AbstractCell
{
    public final java.lang.Object column;
    public final java.lang.Object row;
    public java.lang.Object value;

    public void <init>(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableTable$MutableCell r0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: com.google.common.collect.ImmutableTable$MutableCell;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.Tables$AbstractCell: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object row> = $r1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object column> = $r2;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object value> = $r3;

        return;
    }

    public java.lang.Object getColumnKey()
    {
        com.google.common.collect.ImmutableTable$MutableCell r0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableTable$MutableCell;

        r1 = r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object column>;

        return r1;
    }

    public java.lang.Object getRowKey()
    {
        com.google.common.collect.ImmutableTable$MutableCell r0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableTable$MutableCell;

        r1 = r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object row>;

        return r1;
    }

    public java.lang.Object getValue()
    {
        com.google.common.collect.ImmutableTable$MutableCell r0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableTable$MutableCell;

        r1 = r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object value>;

        return r1;
    }

    public void merge(java.lang.Object, java.util.function.BinaryOperator)
    {
        com.google.common.collect.ImmutableTable$MutableCell r0;
        java.lang.Object $r2, $r3;
        java.util.function.BinaryOperator $r1;

        r0 := @this: com.google.common.collect.ImmutableTable$MutableCell;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.function.BinaryOperator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r2 = r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object value>;

        $r3 = interfaceinvoke $r1.<java.util.function.BinaryOperator: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r2, $r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r0.<com.google.common.collect.ImmutableTable$MutableCell: java.lang.Object value> = $r3;

        return;
    }
}
