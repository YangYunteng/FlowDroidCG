public abstract enum class com.google.common.reflect.Types$JavaVersion extends java.lang.Enum
{
    public static final com.google.common.reflect.Types$JavaVersion[] $VALUES;
    public static final com.google.common.reflect.Types$JavaVersion CURRENT;
    public static final enum com.google.common.reflect.Types$JavaVersion JAVA6;
    public static final enum com.google.common.reflect.Types$JavaVersion JAVA7;
    public static final enum com.google.common.reflect.Types$JavaVersion JAVA8;
    public static final enum com.google.common.reflect.Types$JavaVersion JAVA9;

    static void <clinit>()
    {
        com.google.common.reflect.Types$JavaVersion[] $r4;
        com.google.common.reflect.Types$JavaVersion $r5;
        com.google.common.reflect.Types$JavaVersion$3 $r2;
        com.google.common.reflect.Types$JavaVersion$4 $r3;
        com.google.common.reflect.Types$JavaVersion$1 $r0;
        com.google.common.reflect.Types$JavaVersion$2 $r1;
        com.google.common.reflect.Types$JavaVersion$5 $r7;
        com.google.common.reflect.Types$JavaVersion$6 $r10;
        java.lang.reflect.Type $r8;
        java.lang.Class $r6;
        java.lang.String $r9;
        boolean $z0;

        $r0 = new com.google.common.reflect.Types$JavaVersion$1;

        specialinvoke $r0.<com.google.common.reflect.Types$JavaVersion$1: void <init>(java.lang.String,int)>("JAVA6", 0);

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA6> = $r0;

        $r1 = new com.google.common.reflect.Types$JavaVersion$2;

        specialinvoke $r1.<com.google.common.reflect.Types$JavaVersion$2: void <init>(java.lang.String,int)>("JAVA7", 1);

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA7> = $r1;

        $r2 = new com.google.common.reflect.Types$JavaVersion$3;

        specialinvoke $r2.<com.google.common.reflect.Types$JavaVersion$3: void <init>(java.lang.String,int)>("JAVA8", 2);

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA8> = $r2;

        $r3 = new com.google.common.reflect.Types$JavaVersion$4;

        specialinvoke $r3.<com.google.common.reflect.Types$JavaVersion$4: void <init>(java.lang.String,int)>("JAVA9", 3);

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA9> = $r3;

        $r4 = newarray (com.google.common.reflect.Types$JavaVersion)[4];

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA6>;

        $r4[0] = $r5;

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA7>;

        $r4[1] = $r5;

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA8>;

        $r4[2] = $r5;

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA9>;

        $r4[3] = $r5;

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion[] $VALUES> = $r4;

        $r6 = class "Ljava/lang/reflect/AnnotatedElement;";

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/reflect/TypeVariable;");

        if $z0 == 0 goto label2;

        $r7 = new com.google.common.reflect.Types$JavaVersion$5;

        specialinvoke $r7.<com.google.common.reflect.Types$JavaVersion$5: void <init>()>();

        $r8 = virtualinvoke $r7.<com.google.common.reflect.TypeCapture: java.lang.reflect.Type capture()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("java.util.Map.java.util.Map");

        if $z0 == 0 goto label1;

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA8>;

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT> = $r5;

        return;

     label1:
        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA9>;

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT> = $r5;

        return;

     label2:
        $r10 = new com.google.common.reflect.Types$JavaVersion$6;

        specialinvoke $r10.<com.google.common.reflect.Types$JavaVersion$6: void <init>()>();

        $r8 = virtualinvoke $r10.<com.google.common.reflect.TypeCapture: java.lang.reflect.Type capture()>();

        $z0 = $r8 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA7>;

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT> = $r5;

        return;

     label3:
        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA6>;

        <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT> = $r5;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.common.reflect.Types$JavaVersion r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.reflect.Types$JavaVersion;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public void <init>(java.lang.String, int, com.google.common.reflect.Types$1)
    {
        com.google.common.reflect.Types$1 $r2;
        int $i0;
        com.google.common.reflect.Types$JavaVersion r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.reflect.Types$JavaVersion;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.reflect.Types$1;

        specialinvoke r0.<com.google.common.reflect.Types$JavaVersion: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.google.common.reflect.Types$JavaVersion valueOf(java.lang.String)
    {
        com.google.common.reflect.Types$JavaVersion $r2;
        java.lang.String $r1;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/reflect/Types$JavaVersion;", $r1);

        $r2 = (com.google.common.reflect.Types$JavaVersion) $r0;

        return $r2;
    }

    public static com.google.common.reflect.Types$JavaVersion[] values()
    {
        java.lang.Object $r0;
        com.google.common.reflect.Types$JavaVersion[] $r1;

        $r1 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.reflect.Types$JavaVersion[]) $r0;

        return $r1;
    }

    public boolean jdkTypeDuplicatesOwnerName()
    {
        com.google.common.reflect.Types$JavaVersion r0;

        r0 := @this: com.google.common.reflect.Types$JavaVersion;

        return 1;
    }

    public abstract java.lang.reflect.Type newArrayType(java.lang.reflect.Type);

    public java.lang.String typeName(java.lang.reflect.Type)
    {
        com.google.common.reflect.Types$JavaVersion r0;
        java.lang.String $r1;
        java.lang.reflect.Type $r2;

        r0 := @this: com.google.common.reflect.Types$JavaVersion;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r1 = staticinvoke <com.google.common.reflect.Types: java.lang.String toString(java.lang.reflect.Type)>($r2);

        return $r1;
    }

    public final com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[])
    {
        com.google.common.collect.ImmutableList $r4;
        java.lang.reflect.Type $r3;
        int $i0, $i1;
        java.lang.reflect.Type[] $r1;
        com.google.common.reflect.Types$JavaVersion r0;
        com.google.common.collect.ImmutableList$Builder $r2;

        r0 := @this: com.google.common.reflect.Types$JavaVersion;

        $r1 := @parameter0: java.lang.reflect.Type[];

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r1[$i1];

        $r3 = virtualinvoke r0.<com.google.common.reflect.Types$JavaVersion: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)>($r3);

        virtualinvoke $r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r4;
    }

    public abstract java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type);
}
