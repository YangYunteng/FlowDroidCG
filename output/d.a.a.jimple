public final class d.a.a extends java.lang.Object implements h.a.a, d.a
{
    public static final java.lang.Object a;
    public volatile h.a.a b;
    public volatile java.lang.Object c;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <d.a.a: java.lang.Object a> = $r0;

        return;
    }

    public void <init>(h.a.a)
    {
        h.a.a $r1;
        java.lang.Object $r2;
        d.a.a r0;

        r0 := @this: d.a.a;

        $r1 := @parameter0: h.a.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <d.a.a: java.lang.Object a>;

        r0.<d.a.a: java.lang.Object c> = $r2;

        r0.<d.a.a: h.a.a b> = $r1;

        return;
    }

    public static h.a.a a(h.a.a)
    {
        h.a.a $r0;
        d.a.a $r1;
        boolean $z0;

        $r0 := @parameter0: h.a.a;

        staticinvoke <d.a.d: java.lang.Object a(java.lang.Object)>($r0);

        $z0 = $r0 instanceof d.a.a;

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = new d.a.a;

        specialinvoke $r1.<d.a.a: void <init>(h.a.a)>($r0);

        return $r1;
    }

    public static java.lang.Object a(java.lang.Object, java.lang.Object)
    {
        java.lang.IllegalStateException $r5;
        java.lang.Object $r0, $r3, $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r4 = <d.a.a: java.lang.Object a>;

        if $r3 == $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label4;

        if $r3 != $r0 goto label3;

        return $r0;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scoped provider was invoked recursively returning different results: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" & ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". This is likely due to a circular dependency.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label4:
        return $r0;
    }

    public java.lang.Object get()
    {
        java.lang.Throwable $r5;
        h.a.a $r3;
        java.lang.Object $r1, $r2, $r4;
        d.a.a r0;

        r0 := @this: d.a.a;

        $r2 = r0.<d.a.a: java.lang.Object c>;

        $r1 = <d.a.a: java.lang.Object a>;

        if $r2 != $r1 goto label6;

        entermonitor r0;

     label1:
        $r2 = r0.<d.a.a: java.lang.Object c>;

        $r1 = <d.a.a: java.lang.Object a>;

        if $r2 != $r1 goto label2;

        $r3 = r0.<d.a.a: h.a.a b>;

        $r1 = interfaceinvoke $r3.<h.a.a: java.lang.Object get()>();

        $r2 = $r1;

        $r4 = r0.<d.a.a: java.lang.Object c>;

        staticinvoke <d.a.a: java.lang.Object a(java.lang.Object,java.lang.Object)>($r4, $r1);

        r0.<d.a.a: java.lang.Object c> = $r1;

        r0.<d.a.a: h.a.a b> = null;

     label2:
        exitmonitor r0;

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r5;

     label6:
        return $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
