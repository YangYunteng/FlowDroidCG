public abstract class com.google.common.collect.ImmutableMultimap extends com.google.common.collect.AbstractMultimap implements java.io.Serializable
{
    public static final long serialVersionUID;
    public final transient com.google.common.collect.ImmutableMap map;
    public final transient int size;

    public void <init>(com.google.common.collect.ImmutableMap, int)
    {
        int $i0;
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: com.google.common.collect.ImmutableMap;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.common.collect.AbstractMultimap: void <init>()>();

        r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map> = $r1;

        r0.<com.google.common.collect.ImmutableMultimap: int size> = $i0;

        return;
    }

    public static java.util.Map$Entry a(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.util.Map$Entry $r1;

        $r2 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r2, $r0);

        return $r1;
    }

    public static java.util.Spliterator a(java.util.Map$Entry)
    {
        java.util.Map$Entry $r1;
        c.i.b.c.ma $r0;
        java.util.Collection $r4;
        java.lang.Object $r2, $r3;
        java.util.Spliterator $r5;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.Collection) $r3;

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Spliterator spliterator()>();

        $r0 = new c.i.b.c.ma;

        specialinvoke $r0.<c.i.b.c.ma: void <init>(java.lang.Object)>($r2);

        $r5 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r5, $r0);

        return $r5;
    }

    public static void a(java.util.function.BiConsumer, java.lang.Object, java.lang.Object)
    {
        java.util.function.BiConsumer $r0;
        java.lang.Object $r1, $r2;

        $r0 := @parameter0: java.util.function.BiConsumer;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        interfaceinvoke $r0.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public static void a(java.util.function.BiConsumer, java.lang.Object, java.util.Collection)
    {
        c.i.b.c.oa $r3;
        java.util.Collection $r2;
        java.util.function.BiConsumer $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.function.BiConsumer;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.util.Collection;

        $r3 = new c.i.b.c.oa;

        specialinvoke $r3.<c.i.b.c.oa: void <init>(java.util.function.BiConsumer,java.lang.Object)>($r0, $r1);

        interfaceinvoke $r2.<java.util.Collection: void forEach(java.util.function.Consumer)>($r3);

        return;
    }

    public static com.google.common.collect.ImmutableMultimap$Builder builder()
    {
        com.google.common.collect.ImmutableMultimap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableMultimap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableMultimap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap)
    {
        com.google.common.collect.ImmutableListMultimap $r2;
        com.google.common.collect.Multimap $r0;
        com.google.common.collect.ImmutableMultimap $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.Multimap;

        $z0 = $r0 instanceof com.google.common.collect.ImmutableMultimap;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.collect.ImmutableMultimap) $r0;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMultimap: boolean isPartialView()>();

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r2 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap)>($r0);

        return $r2;
    }

    public static com.google.common.collect.ImmutableMultimap copyOf(java.lang.Iterable)
    {
        java.lang.Iterable $r1;
        com.google.common.collect.ImmutableListMultimap $r0;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap copyOf(java.lang.Iterable)>($r1);

        return $r0;
    }

    public static com.google.common.collect.ImmutableMultimap of()
    {
        com.google.common.collect.ImmutableListMultimap $r0;

        $r0 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        com.google.common.collect.ImmutableListMultimap $r1;

        $r2 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object)>($r2, $r0);

        return $r1;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r3;
        java.lang.Object $r0, $r1, $r2, $r4;

        $r4 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r0, $r1, $r2);

        return $r3;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r5;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r6;

        $r6 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 := @parameter4: java.lang.Object;

        $r4 := @parameter5: java.lang.Object;

        $r5 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r0, $r1, $r2, $r3, $r4);

        return $r5;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r7;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;

        $r8 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 := @parameter4: java.lang.Object;

        $r4 := @parameter5: java.lang.Object;

        $r5 := @parameter6: java.lang.Object;

        $r6 := @parameter7: java.lang.Object;

        $r7 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r0, $r1, $r2, $r3, $r4, $r5, $r6);

        return $r7;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r9;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10;

        $r10 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object;

        $r3 := @parameter4: java.lang.Object;

        $r4 := @parameter5: java.lang.Object;

        $r5 := @parameter6: java.lang.Object;

        $r6 := @parameter7: java.lang.Object;

        $r7 := @parameter8: java.lang.Object;

        $r8 := @parameter9: java.lang.Object;

        $r9 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8);

        return $r9;
    }

    public com.google.common.collect.ImmutableMap asMap()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        return r1;
    }

    public volatile java.util.Map asMap()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap asMap()>();

        return $r1;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean containsEntry(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean containsValue(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Map createAsMap()
    {
        java.lang.AssertionError $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("should never be called");

        throw $r1;
    }

    public com.google.common.collect.ImmutableCollection createEntries()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultimap$EntryCollection $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$EntryCollection;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$EntryCollection: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    public volatile java.util.Collection createEntries()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection createEntries()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMultiset createKeys()
    {
        com.google.common.collect.ImmutableMultimap$Keys $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$Keys;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$Keys: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    public volatile com.google.common.collect.Multiset createKeys()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultiset createKeys()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection createValues()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultimap$Values $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$Values;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$Values: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    public volatile java.util.Collection createValues()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection createValues()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection entries()
    {
        com.google.common.collect.ImmutableCollection $r2;
        com.google.common.collect.ImmutableMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.util.Collection entries()>();

        $r2 = (com.google.common.collect.ImmutableCollection) $r1;

        return $r2;
    }

    public volatile java.util.Collection entries()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection entries()>();

        return $r1;
    }

    public com.google.common.collect.UnmodifiableIterator entryIterator()
    {
        com.google.common.collect.ImmutableMultimap$1 $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$1;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$1: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    public volatile java.util.Iterator entryIterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.UnmodifiableIterator entryIterator()>();

        return $r1;
    }

    public java.util.Spliterator entrySpliterator()
    {
        c.i.b.c.la $r1;
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.collect.ImmutableMap $r2;
        long $l2;
        byte $b0;
        int $i1;
        com.google.common.collect.ImmutableMultimap r0;
        java.util.Spliterator $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap asMap()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableCollection: java.util.Spliterator spliterator()>();

        $r1 = <c.i.b.c.la: c.i.b.c.la a>;

        $z0 = r0 instanceof com.google.common.collect.SetMultimap;

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $b0 = $z0 | 64;

        $i1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: int size()>();

        $l2 = (long) $i1;

        $r4 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator flatMap(java.util.Spliterator,java.util.function.Function,int,long)>($r4, $r1, $b0, $l2);

        return $r4;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public void forEach(java.util.function.BiConsumer)
    {
        com.google.common.collect.ImmutableMap $r3;
        c.i.b.c.na $r2;
        java.util.function.BiConsumer $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.util.function.BiConsumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap asMap()>();

        $r2 = new c.i.b.c.na;

        specialinvoke $r2.<c.i.b.c.na: void <init>(java.util.function.BiConsumer)>($r1);

        interfaceinvoke $r3.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r2);

        return;
    }

    public abstract com.google.common.collect.ImmutableCollection get(java.lang.Object);

    public volatile java.util.Collection get(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection $r1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection get(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile int hashCode()
    {
        int $i0;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: int hashCode()>();

        return $i0;
    }

    public abstract com.google.common.collect.ImmutableMultimap inverse();

    public volatile boolean isEmpty()
    {
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean isEmpty()>();

        return $z0;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: boolean isPartialView()>();

        return $z0;
    }

    public com.google.common.collect.ImmutableSet keySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMultiset keys()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.Multiset $r1;
        com.google.common.collect.ImmutableMultiset $r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: com.google.common.collect.Multiset keys()>();

        $r2 = (com.google.common.collect.ImmutableMultiset) $r1;

        return $r2;
    }

    public volatile com.google.common.collect.Multiset keys()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultiset keys()>();

        return $r1;
    }

    public boolean put(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public boolean putAll(com.google.common.collect.Multimap)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.Multimap $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public boolean remove(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public volatile java.util.Collection removeAll(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection $r1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableCollection $r2;
        java.lang.Object $r3;
        com.google.common.collect.ImmutableMultimap r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        i0 = r0.<com.google.common.collect.ImmutableMultimap: int size>;

        return i0;
    }

    public volatile java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.lang.String toString()>();

        return $r1;
    }

    public com.google.common.collect.UnmodifiableIterator valueIterator()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultimap$2 $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$2;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$2: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    public volatile java.util.Iterator valueIterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.UnmodifiableIterator valueIterator()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection values()
    {
        com.google.common.collect.ImmutableCollection $r2;
        com.google.common.collect.ImmutableMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.util.Collection values()>();

        $r2 = (com.google.common.collect.ImmutableCollection) $r1;

        return $r2;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection values()>();

        return $r1;
    }
}
