public final class com.google.common.collect.MapMakerInternalMap$SerializationProxy extends com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy
{
    public static final long serialVersionUID;

    public void <init>(com.google.common.collect.MapMakerInternalMap$Strength, com.google.common.collect.MapMakerInternalMap$Strength, com.google.common.base.Equivalence, com.google.common.base.Equivalence, int, java.util.concurrent.ConcurrentMap)
    {
        com.google.common.collect.MapMakerInternalMap$Strength $r1, $r2;
        com.google.common.base.Equivalence $r3, $r4;
        com.google.common.collect.MapMakerInternalMap$SerializationProxy r0;
        int $i0;
        java.util.concurrent.ConcurrentMap $r5;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$SerializationProxy;

        $r1 := @parameter0: com.google.common.collect.MapMakerInternalMap$Strength;

        $r2 := @parameter1: com.google.common.collect.MapMakerInternalMap$Strength;

        $r3 := @parameter2: com.google.common.base.Equivalence;

        $r4 := @parameter3: com.google.common.base.Equivalence;

        $i0 := @parameter4: int;

        $r5 := @parameter5: java.util.concurrent.ConcurrentMap;

        specialinvoke r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)>($r1, $r2, $r3, $r4, $i0, $r5);

        return;
    }

    private void readObject(java.io.ObjectInputStream)
    {
        com.google.common.collect.MapMakerInternalMap$SerializationProxy r0;
        java.io.ObjectInputStream $r1;
        com.google.common.collect.MapMaker $r2;
        java.util.concurrent.ConcurrentMap $r3;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$SerializationProxy;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream)>($r1);

        $r3 = virtualinvoke $r2.<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>();

        r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate> = $r3;

        virtualinvoke r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void readEntries(java.io.ObjectInputStream)>($r1);

        return;
    }

    private java.lang.Object readResolve()
    {
        com.google.common.collect.MapMakerInternalMap$SerializationProxy r0;
        java.util.concurrent.ConcurrentMap r1;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$SerializationProxy;

        r1 = r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        return r1;
    }

    private void writeObject(java.io.ObjectOutputStream)
    {
        java.io.ObjectOutputStream $r1;
        com.google.common.collect.MapMakerInternalMap$SerializationProxy r0;

        r0 := @this: com.google.common.collect.MapMakerInternalMap$SerializationProxy;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r0.<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void writeMapTo(java.io.ObjectOutputStream)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.MapMakerInternalMap$SerializationProxy: long serialVersionUID> = 3L;

        return;
    }
}
