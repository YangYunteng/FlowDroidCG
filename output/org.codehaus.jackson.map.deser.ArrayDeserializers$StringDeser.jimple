public final class org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser extends org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser r0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser: void <init>(java.lang.Class)>(class "[Ljava/lang/String;");

        return;
    }

    private final java.lang.String[] handleNonArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r1, $r6;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r4;
        java.lang.String[] $r5;
        org.codehaus.jackson.map.DeserializationContext $r3;
        org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser r0;
        org.codehaus.jackson.map.JsonMappingException $r9;
        java.lang.Class $r8;
        java.lang.String $r7;
        org.codehaus.jackson.JsonParser $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        if $z0 == 0 goto label3;

        $r5 = newarray (java.lang.String)[1];

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r1 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r6 != $r1 goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

     label2:
        $r5[0] = $r7;

        return $r5;

     label3:
        $r8 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser r0;
        java.lang.String[] $r2;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser: java.lang.String[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public java.lang.String[] deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        java.lang.Object[] $r5;
        org.codehaus.jackson.JsonToken $r6, $r7;
        java.lang.String[] $r3;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser r0;
        org.codehaus.jackson.map.util.ObjectBuffer $r4;
        int $i0, $i1;
        java.lang.String $r8;
        org.codehaus.jackson.JsonParser $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser: java.lang.String[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r2, $r1);

        return $r3;

     label1:
        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();

        $i0 = 0;

     label2:
        $r6 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r6 == $r7 goto label6;

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r6 != $r7 goto label3;

        $r8 = null;

        goto label4;

     label3:
        $r8 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

     label4:
        $i1 = lengthof $r5;

        if $i0 < $i1 goto label5;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>($r5);

        $i0 = 0;

     label5:
        $r5[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label2;

     label6:
        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)>($r5, $i0, class "Ljava/lang/String;");

        $r3 = (java.lang.String[]) $r5;

        virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer)>($r4);

        return $r3;
    }
}
