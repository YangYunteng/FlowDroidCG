public final class com.google.common.math.PairedStats extends java.lang.Object implements java.io.Serializable
{
    public static final int BYTES;
    public static final long serialVersionUID;
    public final double sumOfProductsOfDeltas;
    public final com.google.common.math.Stats xStats;
    public final com.google.common.math.Stats yStats;

    public void <init>(com.google.common.math.Stats, com.google.common.math.Stats, double)
    {
        com.google.common.math.Stats $r1, $r2;
        com.google.common.math.PairedStats r0;
        double $d0;

        r0 := @this: com.google.common.math.PairedStats;

        $r1 := @parameter0: com.google.common.math.Stats;

        $r2 := @parameter1: com.google.common.math.Stats;

        $d0 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats> = $r1;

        r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats> = $r2;

        r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas> = $d0;

        return;
    }

    public static double ensureInUnitRange(double)
    {
        int $i1;
        byte $b0;
        double $d0;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 1.0;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        return 1.0;

     label1:
        $b0 = $d0 cmpg -1.0;

        $i1 = (int) $b0;

        if $i1 > 0 goto label2;

        return -1.0;

     label2:
        return $d0;
    }

    public static double ensurePositive(double)
    {
        int $i1;
        byte $b0;
        double $d0;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        return $d0;

     label1:
        return 4.9E-324;
    }

    public static com.google.common.math.PairedStats fromByteArray(byte[])
    {
        byte[] $r0;
        java.nio.ByteBuffer $r1;
        java.nio.ByteOrder $r2;
        com.google.common.math.Stats $r3, $r4;
        int $i0;
        com.google.common.math.PairedStats $r5;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = lengthof $r0;

        if $i0 != 88 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i0 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int,int)>($z0, "Expected PairedStats.BYTES = %s, got %s", 88, $i0);

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r0);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r1 = virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        $r3 = staticinvoke <com.google.common.math.Stats: com.google.common.math.Stats readFrom(java.nio.ByteBuffer)>($r1);

        $r4 = staticinvoke <com.google.common.math.Stats: com.google.common.math.Stats readFrom(java.nio.ByteBuffer)>($r1);

        $d0 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        $r5 = new com.google.common.math.PairedStats;

        specialinvoke $r5.<com.google.common.math.PairedStats: void <init>(com.google.common.math.Stats,com.google.common.math.Stats,double)>($r3, $r4, $d0);

        return $r5;
    }

    public long count()
    {
        long $l0;
        com.google.common.math.PairedStats r0;
        com.google.common.math.Stats $r1;

        r0 := @this: com.google.common.math.PairedStats;

        $r1 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $l0 = virtualinvoke $r1.<com.google.common.math.Stats: long count()>();

        return $l0;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1;
        byte $b2;
        com.google.common.math.Stats $r4, $r5;
        java.lang.Object $r1;
        java.lang.Class $r2;
        com.google.common.math.PairedStats r0, $r3;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.common.math.PairedStats;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if class "Lcom/google/common/math/PairedStats;" == $r2 goto label2;

        return 0;

     label2:
        $r3 = (com.google.common.math.PairedStats) $r1;

        $r4 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $r5 = $r3.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $z0 = virtualinvoke $r4.<com.google.common.math.Stats: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r4 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $r5 = $r3.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $z0 = virtualinvoke $r4.<com.google.common.math.Stats: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = $r3.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r1;
        java.lang.Double $r3;
        com.google.common.math.Stats $r2;
        int $i0;
        com.google.common.math.PairedStats r0;
        double $d0;

        r0 := @this: com.google.common.math.PairedStats;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $r1[0] = $r2;

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $r1[1] = $r2;

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1[2] = $r3;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public com.google.common.math.LinearTransformation leastSquaresFit()
    {
        long $l0;
        com.google.common.math.LinearTransformation $r1;
        com.google.common.math.LinearTransformation$LinearTransformationBuilder $r3;
        byte $b1;
        com.google.common.math.Stats $r2;
        int $i2;
        com.google.common.math.PairedStats r0;
        boolean $z0, $z1;
        double $d0, $d1, $d2;

        r0 := @this: com.google.common.math.PairedStats;

        $l0 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $z0 = 1;

        $b1 = $l0 cmp 1L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1);

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 == 0 goto label3;

        $r1 = staticinvoke <com.google.common.math.LinearTransformation: com.google.common.math.LinearTransformation forNaN()>();

        return $r1;

     label3:
        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $d0 = virtualinvoke $r2.<com.google.common.math.Stats: double sumOfSquaresOfDeltas()>();

        $b1 = $d0 cmpl 0.0;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label5;

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $d1 = virtualinvoke $r2.<com.google.common.math.Stats: double sumOfSquaresOfDeltas()>();

        $b1 = $d1 cmpl 0.0;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label4;

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $d1 = virtualinvoke $r2.<com.google.common.math.Stats: double mean()>();

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $d2 = virtualinvoke $r2.<com.google.common.math.Stats: double mean()>();

        $r3 = staticinvoke <com.google.common.math.LinearTransformation: com.google.common.math.LinearTransformation$LinearTransformationBuilder mapping(double,double)>($d1, $d2);

        $d1 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $d0 = $d1 / $d0;

        $r1 = virtualinvoke $r3.<com.google.common.math.LinearTransformation$LinearTransformationBuilder: com.google.common.math.LinearTransformation withSlope(double)>($d0);

        return $r1;

     label4:
        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $d0 = virtualinvoke $r2.<com.google.common.math.Stats: double mean()>();

        $r1 = staticinvoke <com.google.common.math.LinearTransformation: com.google.common.math.LinearTransformation horizontal(double)>($d0);

        return $r1;

     label5:
        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $d0 = virtualinvoke $r2.<com.google.common.math.Stats: double sumOfSquaresOfDeltas()>();

        $b1 = $d0 cmpl 0.0;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label6;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $d0 = virtualinvoke $r2.<com.google.common.math.Stats: double mean()>();

        $r1 = staticinvoke <com.google.common.math.LinearTransformation: com.google.common.math.LinearTransformation vertical(double)>($d0);

        return $r1;
    }

    public double pearsonsCorrelationCoefficient()
    {
        long $l0;
        byte $b1;
        com.google.common.math.Stats $r1;
        int $i2;
        com.google.common.math.PairedStats r0;
        boolean $z0, $z1;
        double $d0, $d1;

        r0 := @this: com.google.common.math.PairedStats;

        $l0 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $z0 = 1;

        $b1 = $l0 cmp 1L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1);

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 == 0 goto label3;

        return #NaN;

     label3:
        $r1 = virtualinvoke r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats()>();

        $d0 = virtualinvoke $r1.<com.google.common.math.Stats: double sumOfSquaresOfDeltas()>();

        $r1 = virtualinvoke r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats()>();

        $d1 = virtualinvoke $r1.<com.google.common.math.Stats: double sumOfSquaresOfDeltas()>();

        $b1 = $d0 cmpl 0.0;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1);

        $b1 = $d1 cmpl 0.0;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label6;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $d0 = $d0 * $d1;

        $d1 = staticinvoke <com.google.common.math.PairedStats: double ensurePositive(double)>($d0);

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        $d0 = $d0 / $d1;

        $d0 = staticinvoke <com.google.common.math.PairedStats: double ensureInUnitRange(double)>($d0);

        return $d0;
    }

    public double populationCovariance()
    {
        byte $b0;
        long $l1;
        com.google.common.math.PairedStats r0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.google.common.math.PairedStats;

        $l1 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $l1 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $d1 = (double) $l1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public double sampleCovariance()
    {
        byte $b1;
        int $i2;
        long $l0;
        com.google.common.math.PairedStats r0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.google.common.math.PairedStats;

        $l0 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $b1 = $l0 cmp 1L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        $l0 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $l0 = $l0 - 1L;

        $d1 = (double) $l0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public double sumOfProductsOfDeltas()
    {
        com.google.common.math.PairedStats r0;
        double d0;

        r0 := @this: com.google.common.math.PairedStats;

        d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        return d0;
    }

    public byte[] toByteArray()
    {
        java.nio.ByteOrder $r2;
        byte[] $r4;
        com.google.common.math.Stats $r3;
        com.google.common.math.PairedStats r0;
        java.nio.ByteBuffer $r1;
        double $d0;

        r0 := @this: com.google.common.math.PairedStats;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(88);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r1 = virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        $r3 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        virtualinvoke $r3.<com.google.common.math.Stats: void writeTo(java.nio.ByteBuffer)>($r1);

        $r3 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        virtualinvoke $r3.<com.google.common.math.Stats: void writeTo(java.nio.ByteBuffer)>($r1);

        $d0 = r0.<com.google.common.math.PairedStats: double sumOfProductsOfDeltas>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        $r4 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        return $r4;
    }

    public java.lang.String toString()
    {
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        long $l1;
        byte $b0;
        com.google.common.math.Stats $r2;
        int $i2;
        java.lang.String $r3;
        com.google.common.math.PairedStats r0;
        double $d0;

        r0 := @this: com.google.common.math.PairedStats;

        $l1 = virtualinvoke r0.<com.google.common.math.PairedStats: long count()>();

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("xStats", $r2);

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("yStats", $r2);

        $d0 = virtualinvoke r0.<com.google.common.math.PairedStats: double populationCovariance()>();

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,double)>("populationCovariance", $d0);

        $r3 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r3;

     label1:
        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("xStats", $r2);

        $r2 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("yStats", $r2);

        $r3 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r3;
    }

    public com.google.common.math.Stats xStats()
    {
        com.google.common.math.PairedStats r0;
        com.google.common.math.Stats r1;

        r0 := @this: com.google.common.math.PairedStats;

        r1 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats xStats>;

        return r1;
    }

    public com.google.common.math.Stats yStats()
    {
        com.google.common.math.PairedStats r0;
        com.google.common.math.Stats r1;

        r0 := @this: com.google.common.math.PairedStats;

        r1 = r0.<com.google.common.math.PairedStats: com.google.common.math.Stats yStats>;

        return r1;
    }

    public static void <clinit>()
    {
        <com.google.common.math.PairedStats: int BYTES> = 88;

        return;
    }
}
