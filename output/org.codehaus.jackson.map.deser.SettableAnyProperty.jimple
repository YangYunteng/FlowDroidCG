public final class org.codehaus.jackson.map.deser.SettableAnyProperty extends java.lang.Object
{
    public final org.codehaus.jackson.map.BeanProperty _property;
    public final java.lang.reflect.Method _setter;
    public final org.codehaus.jackson.type.JavaType _type;
    public org.codehaus.jackson.map.JsonDeserializer _valueDeserializer;

    public void <init>(org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method $r3;
        org.codehaus.jackson.map.BeanProperty $r4;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r4 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 := @parameter2: org.codehaus.jackson.type.JavaType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty _property> = $r4;

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type> = $r2;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter> = $r3;

        return;
    }

    private java.lang.String getClassName()
    {
        java.lang.Class $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public void _throwAsIOE(java.lang.Exception, java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r1, $r9;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.map.JsonMappingException $r13;
        org.codehaus.jackson.type.JavaType $r8;
        java.lang.String $r2, $r4;
        boolean $z0;
        java.io.IOException $r11;
        java.lang.RuntimeException $r10;
        java.lang.Exception $r14;
        java.lang.Object $r3;
        java.lang.Class $r5;
        java.lang.StringBuilder $r6, $r7, $r12;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 := @parameter0: java.lang.Exception;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object;

        $z0 = $r1 instanceof java.lang.IllegalArgumentException;

        if $z0 == 0 goto label05;

        if $r3 != null goto label01;

        $r4 = "[NULL]";

        goto label02;

     label01:
        $r5 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

     label02:
        $r7 = new java.lang.StringBuilder;

        $r6 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Problem deserializing \"any\" property \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = new java.lang.StringBuilder;

        $r7 = $r12;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of class ");

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.String getClassName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (expected type: ");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; actual type: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = (java.lang.Exception) $r1;

        $r2 = virtualinvoke $r14.<java.lang.Exception: java.lang.String getMessage()>();

        if $r2 == null goto label03;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", problem: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label04;

     label03:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (no error message provided)");

     label04:
        $r13 = new org.codehaus.jackson.map.JsonMappingException;

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>($r2, null, $r1);

        throw $r13;

     label05:
        $z0 = $r1 instanceof java.io.IOException;

        if $z0 != 0 goto label09;

        $z0 = $r1 instanceof java.lang.RuntimeException;

        if $z0 != 0 goto label08;

     label06:
        $r9 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r9 == null goto label07;

        $r1 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label06;

     label07:
        $r13 = new org.codehaus.jackson.map.JsonMappingException;

        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r13.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>($r2, null, $r1);

        throw $r13;

     label08:
        $r10 = (java.lang.RuntimeException) $r1;

        throw $r10;

     label09:
        $r11 = (java.io.IOException) $r1;

        goto label10;

     label10:
        throw $r11;
    }

    public final java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r2, $r4;
        org.codehaus.jackson.map.JsonDeserializer $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r4 != $r2 goto label1;

        return null;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r6;
    }

    public final void deserializeAndSet(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object, java.lang.String)
    {
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r5;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r5 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r5, $r1);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void set(java.lang.Object,java.lang.String,java.lang.Object)>($r2, $r3, $r4);

        return;
    }

    public org.codehaus.jackson.map.BeanProperty getProperty()
    {
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty _property>;

        return r1;
    }

    public org.codehaus.jackson.type.JavaType getType()
    {
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type>;

        return r1;
    }

    public boolean hasValueDeserializer()
    {
        org.codehaus.jackson.map.JsonDeserializer $r1;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void set(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r5;
        java.lang.Object $r2, $r4;
        java.lang.String $r1;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method $r3;
        java.lang.Exception $r6;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter>;

     label2:
        $r5 = newarray (java.lang.Object)[2];

     label3:
        $r5[0] = $r1;

        $r5[1] = $r2;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>($r6, $r1, $r2);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)
    {
        java.lang.IllegalStateException $r3;
        org.codehaus.jackson.map.JsonDeserializer $r1, $r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 := @parameter0: org.codehaus.jackson.map.JsonDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        if $r2 != null goto label1;

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = $r1;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already had assigned deserializer for SettableAnyProperty");

        throw $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[any property on class ");

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.String getClassName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
