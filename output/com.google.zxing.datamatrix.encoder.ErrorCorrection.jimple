public final class com.google.zxing.datamatrix.encoder.ErrorCorrection extends java.lang.Object
{
    public static final int[] ALOG;
    public static final int[][] FACTORS;
    public static final int[] FACTOR_SETS;
    public static final int[] LOG;
    public static final int MODULO_VALUE;

    static void <clinit>()
    {
        int[][] $r1;
        int[] $r0;
        int $i0, $i1;

        <com.google.zxing.datamatrix.encoder.ErrorCorrection: int MODULO_VALUE> = 301;

        $r0 = newarray (int)[16];

        $r0[0] = 5;

        $r0[1] = 7;

        $r0[2] = 10;

        $r0[3] = 11;

        $r0[4] = 12;

        $r0[5] = 14;

        $r0[6] = 18;

        $r0[7] = 20;

        $r0[8] = 24;

        $r0[9] = 28;

        $r0[10] = 36;

        $r0[11] = 42;

        $r0[12] = 48;

        $r0[13] = 56;

        $r0[14] = 62;

        $r0[15] = 68;

        <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] FACTOR_SETS> = $r0;

        $r1 = newarray (int[])[16];

        $r0 = newarray (int)[5];

        $r0[0] = 228;

        $r0[1] = 48;

        $r0[2] = 15;

        $r0[3] = 111;

        $r0[4] = 62;

        $i0 = 0;

        $r1[0] = $r0;

        $r0 = newarray (int)[7];

        $r0[0] = 23;

        $r0[1] = 68;

        $r0[2] = 144;

        $r0[3] = 134;

        $r0[4] = 240;

        $r0[5] = 92;

        $r0[6] = 254;

        $r1[1] = $r0;

        $r0 = newarray (int)[10];

        $r0[0] = 28;

        $r0[1] = 24;

        $r0[2] = 185;

        $r0[3] = 166;

        $r0[4] = 223;

        $r0[5] = 248;

        $r0[6] = 116;

        $r0[7] = 255;

        $r0[8] = 110;

        $r0[9] = 61;

        $r1[2] = $r0;

        $r0 = newarray (int)[11];

        $r0[0] = 175;

        $r0[1] = 138;

        $r0[2] = 205;

        $r0[3] = 12;

        $r0[4] = 194;

        $r0[5] = 168;

        $r0[6] = 39;

        $r0[7] = 245;

        $r0[8] = 60;

        $r0[9] = 97;

        $r0[10] = 120;

        $r1[3] = $r0;

        $r0 = newarray (int)[12];

        $r0[0] = 41;

        $r0[1] = 153;

        $r0[2] = 158;

        $r0[3] = 91;

        $r0[4] = 61;

        $r0[5] = 42;

        $r0[6] = 142;

        $r0[7] = 213;

        $r0[8] = 97;

        $r0[9] = 178;

        $r0[10] = 100;

        $r0[11] = 242;

        $r1[4] = $r0;

        $r0 = newarray (int)[14];

        $r0[0] = 156;

        $r0[1] = 97;

        $r0[2] = 192;

        $r0[3] = 252;

        $r0[4] = 95;

        $r0[5] = 9;

        $r0[6] = 157;

        $r0[7] = 119;

        $r0[8] = 138;

        $r0[9] = 45;

        $r0[10] = 18;

        $r0[11] = 186;

        $r0[12] = 83;

        $r0[13] = 185;

        $r1[5] = $r0;

        $r0 = newarray (int)[18];

        $r0[0] = 83;

        $r0[1] = 195;

        $r0[2] = 100;

        $r0[3] = 39;

        $r0[4] = 188;

        $r0[5] = 75;

        $r0[6] = 66;

        $r0[7] = 61;

        $r0[8] = 241;

        $r0[9] = 213;

        $r0[10] = 109;

        $r0[11] = 129;

        $r0[12] = 94;

        $r0[13] = 254;

        $r0[14] = 225;

        $r0[15] = 48;

        $r0[16] = 90;

        $r0[17] = 188;

        $r1[6] = $r0;

        $r0 = newarray (int)[20];

        $r0[0] = 15;

        $r0[1] = 195;

        $r0[2] = 244;

        $r0[3] = 9;

        $r0[4] = 233;

        $r0[5] = 71;

        $r0[6] = 168;

        $r0[7] = 2;

        $r0[8] = 188;

        $r0[9] = 160;

        $r0[10] = 153;

        $r0[11] = 145;

        $r0[12] = 253;

        $r0[13] = 79;

        $r0[14] = 108;

        $r0[15] = 82;

        $r0[16] = 27;

        $r0[17] = 174;

        $r0[18] = 186;

        $r0[19] = 172;

        $r1[7] = $r0;

        $r0 = newarray (int)[24];

        $r0[0] = 52;

        $r0[1] = 190;

        $r0[2] = 88;

        $r0[3] = 205;

        $r0[4] = 109;

        $r0[5] = 39;

        $r0[6] = 176;

        $r0[7] = 21;

        $r0[8] = 155;

        $r0[9] = 197;

        $r0[10] = 251;

        $r0[11] = 223;

        $r0[12] = 155;

        $r0[13] = 21;

        $r0[14] = 5;

        $r0[15] = 172;

        $r0[16] = 254;

        $r0[17] = 124;

        $r0[18] = 12;

        $r0[19] = 181;

        $r0[20] = 184;

        $r0[21] = 96;

        $r0[22] = 50;

        $r0[23] = 193;

        $r1[8] = $r0;

        $r0 = newarray (int)[28];

        $r0[0] = 211;

        $r0[1] = 231;

        $r0[2] = 43;

        $r0[3] = 97;

        $r0[4] = 71;

        $r0[5] = 96;

        $r0[6] = 103;

        $r0[7] = 174;

        $r0[8] = 37;

        $r0[9] = 151;

        $r0[10] = 170;

        $r0[11] = 53;

        $r0[12] = 75;

        $r0[13] = 34;

        $r0[14] = 249;

        $r0[15] = 121;

        $r0[16] = 17;

        $r0[17] = 138;

        $r0[18] = 110;

        $r0[19] = 213;

        $r0[20] = 141;

        $r0[21] = 136;

        $r0[22] = 120;

        $r0[23] = 151;

        $r0[24] = 233;

        $r0[25] = 168;

        $r0[26] = 93;

        $r0[27] = 255;

        $r1[9] = $r0;

        $r0 = newarray (int)[36];

        $r0[0] = 245;

        $r0[1] = 127;

        $r0[2] = 242;

        $r0[3] = 218;

        $r0[4] = 130;

        $r0[5] = 250;

        $r0[6] = 162;

        $r0[7] = 181;

        $r0[8] = 102;

        $r0[9] = 120;

        $r0[10] = 84;

        $r0[11] = 179;

        $r0[12] = 220;

        $r0[13] = 251;

        $r0[14] = 80;

        $r0[15] = 182;

        $r0[16] = 229;

        $r0[17] = 18;

        $r0[18] = 2;

        $r0[19] = 4;

        $r0[20] = 68;

        $r0[21] = 33;

        $r0[22] = 101;

        $r0[23] = 137;

        $r0[24] = 95;

        $r0[25] = 119;

        $r0[26] = 115;

        $r0[27] = 44;

        $r0[28] = 175;

        $r0[29] = 184;

        $r0[30] = 59;

        $r0[31] = 25;

        $r0[32] = 225;

        $r0[33] = 98;

        $r0[34] = 81;

        $r0[35] = 112;

        $r1[10] = $r0;

        $r0 = newarray (int)[42];

        $r0[0] = 77;

        $r0[1] = 193;

        $r0[2] = 137;

        $r0[3] = 31;

        $r0[4] = 19;

        $r0[5] = 38;

        $r0[6] = 22;

        $r0[7] = 153;

        $r0[8] = 247;

        $r0[9] = 105;

        $r0[10] = 122;

        $r0[11] = 2;

        $r0[12] = 245;

        $r0[13] = 133;

        $r0[14] = 242;

        $r0[15] = 8;

        $r0[16] = 175;

        $r0[17] = 95;

        $r0[18] = 100;

        $r0[19] = 9;

        $r0[20] = 167;

        $r0[21] = 105;

        $r0[22] = 214;

        $r0[23] = 111;

        $r0[24] = 57;

        $r0[25] = 121;

        $r0[26] = 21;

        $r0[27] = 1;

        $r0[28] = 253;

        $r0[29] = 57;

        $r0[30] = 54;

        $r0[31] = 101;

        $r0[32] = 248;

        $r0[33] = 202;

        $r0[34] = 69;

        $r0[35] = 50;

        $r0[36] = 150;

        $r0[37] = 177;

        $r0[38] = 226;

        $r0[39] = 5;

        $r0[40] = 9;

        $r0[41] = 5;

        $r1[11] = $r0;

        $r0 = newarray (int)[48];

        $r0[0] = 245;

        $r0[1] = 132;

        $r0[2] = 172;

        $r0[3] = 223;

        $r0[4] = 96;

        $r0[5] = 32;

        $r0[6] = 117;

        $r0[7] = 22;

        $r0[8] = 238;

        $r0[9] = 133;

        $r0[10] = 238;

        $r0[11] = 231;

        $r0[12] = 205;

        $r0[13] = 188;

        $r0[14] = 237;

        $r0[15] = 87;

        $r0[16] = 191;

        $r0[17] = 106;

        $r0[18] = 16;

        $r0[19] = 147;

        $r0[20] = 118;

        $r0[21] = 23;

        $r0[22] = 37;

        $r0[23] = 90;

        $r0[24] = 170;

        $r0[25] = 205;

        $r0[26] = 131;

        $r0[27] = 88;

        $r0[28] = 120;

        $r0[29] = 100;

        $r0[30] = 66;

        $r0[31] = 138;

        $r0[32] = 186;

        $r0[33] = 240;

        $r0[34] = 82;

        $r0[35] = 44;

        $r0[36] = 176;

        $r0[37] = 87;

        $r0[38] = 187;

        $r0[39] = 147;

        $r0[40] = 160;

        $r0[41] = 175;

        $r0[42] = 69;

        $r0[43] = 213;

        $r0[44] = 92;

        $r0[45] = 253;

        $r0[46] = 225;

        $r0[47] = 19;

        $r1[12] = $r0;

        $r0 = newarray (int)[56];

        $r0[0] = 175;

        $r0[1] = 9;

        $r0[2] = 223;

        $r0[3] = 238;

        $r0[4] = 12;

        $r0[5] = 17;

        $r0[6] = 220;

        $r0[7] = 208;

        $r0[8] = 100;

        $r0[9] = 29;

        $r0[10] = 175;

        $r0[11] = 170;

        $r0[12] = 230;

        $r0[13] = 192;

        $r0[14] = 215;

        $r0[15] = 235;

        $r0[16] = 150;

        $r0[17] = 159;

        $r0[18] = 36;

        $r0[19] = 223;

        $r0[20] = 38;

        $r0[21] = 200;

        $r0[22] = 132;

        $r0[23] = 54;

        $r0[24] = 228;

        $r0[25] = 146;

        $r0[26] = 218;

        $r0[27] = 234;

        $r0[28] = 117;

        $r0[29] = 203;

        $r0[30] = 29;

        $r0[31] = 232;

        $r0[32] = 144;

        $r0[33] = 238;

        $r0[34] = 22;

        $r0[35] = 150;

        $r0[36] = 201;

        $r0[37] = 117;

        $r0[38] = 62;

        $r0[39] = 207;

        $r0[40] = 164;

        $r0[41] = 13;

        $r0[42] = 137;

        $r0[43] = 245;

        $r0[44] = 127;

        $r0[45] = 67;

        $r0[46] = 247;

        $r0[47] = 28;

        $r0[48] = 155;

        $r0[49] = 43;

        $r0[50] = 203;

        $r0[51] = 107;

        $r0[52] = 233;

        $r0[53] = 53;

        $r0[54] = 143;

        $r0[55] = 46;

        $r1[13] = $r0;

        $r0 = newarray (int)[62];

        $r0[0] = 242;

        $r0[1] = 93;

        $r0[2] = 169;

        $r0[3] = 50;

        $r0[4] = 144;

        $r0[5] = 210;

        $r0[6] = 39;

        $r0[7] = 118;

        $r0[8] = 202;

        $r0[9] = 188;

        $r0[10] = 201;

        $r0[11] = 189;

        $r0[12] = 143;

        $r0[13] = 108;

        $r0[14] = 196;

        $r0[15] = 37;

        $r0[16] = 185;

        $r0[17] = 112;

        $r0[18] = 134;

        $r0[19] = 230;

        $r0[20] = 245;

        $r0[21] = 63;

        $r0[22] = 197;

        $r0[23] = 190;

        $r0[24] = 250;

        $r0[25] = 106;

        $r0[26] = 185;

        $r0[27] = 221;

        $r0[28] = 175;

        $r0[29] = 64;

        $r0[30] = 114;

        $r0[31] = 71;

        $r0[32] = 161;

        $r0[33] = 44;

        $r0[34] = 147;

        $r0[35] = 6;

        $r0[36] = 27;

        $r0[37] = 218;

        $r0[38] = 51;

        $r0[39] = 63;

        $r0[40] = 87;

        $r0[41] = 10;

        $r0[42] = 40;

        $r0[43] = 130;

        $r0[44] = 188;

        $r0[45] = 17;

        $r0[46] = 163;

        $r0[47] = 31;

        $r0[48] = 176;

        $r0[49] = 170;

        $r0[50] = 4;

        $r0[51] = 107;

        $r0[52] = 232;

        $r0[53] = 7;

        $r0[54] = 94;

        $r0[55] = 166;

        $r0[56] = 224;

        $r0[57] = 124;

        $r0[58] = 86;

        $r0[59] = 47;

        $r0[60] = 11;

        $r0[61] = 204;

        $r1[14] = $r0;

        $r0 = newarray (int)[68];

        $r0[0] = 220;

        $r0[1] = 228;

        $r0[2] = 173;

        $r0[3] = 89;

        $r0[4] = 251;

        $r0[5] = 149;

        $r0[6] = 159;

        $r0[7] = 56;

        $r0[8] = 89;

        $r0[9] = 33;

        $r0[10] = 147;

        $r0[11] = 244;

        $r0[12] = 154;

        $r0[13] = 36;

        $r0[14] = 73;

        $r0[15] = 127;

        $r0[16] = 213;

        $r0[17] = 136;

        $r0[18] = 248;

        $r0[19] = 180;

        $r0[20] = 234;

        $r0[21] = 197;

        $r0[22] = 158;

        $r0[23] = 177;

        $r0[24] = 68;

        $r0[25] = 122;

        $r0[26] = 93;

        $r0[27] = 213;

        $r0[28] = 15;

        $r0[29] = 160;

        $r0[30] = 227;

        $r0[31] = 236;

        $r0[32] = 66;

        $r0[33] = 139;

        $r0[34] = 153;

        $r0[35] = 185;

        $r0[36] = 202;

        $r0[37] = 167;

        $r0[38] = 179;

        $r0[39] = 25;

        $r0[40] = 220;

        $r0[41] = 232;

        $r0[42] = 96;

        $r0[43] = 210;

        $r0[44] = 231;

        $r0[45] = 136;

        $r0[46] = 223;

        $r0[47] = 239;

        $r0[48] = 181;

        $r0[49] = 241;

        $r0[50] = 59;

        $r0[51] = 52;

        $r0[52] = 172;

        $r0[53] = 25;

        $r0[54] = 49;

        $r0[55] = 232;

        $r0[56] = 211;

        $r0[57] = 189;

        $r0[58] = 64;

        $r0[59] = 54;

        $r0[60] = 108;

        $r0[61] = 153;

        $r0[62] = 132;

        $r0[63] = 63;

        $r0[64] = 96;

        $r0[65] = 103;

        $r0[66] = 82;

        $r0[67] = 186;

        $r1[15] = $r0;

        <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[][] FACTORS> = $r1;

        $r0 = newarray (int)[256];

        <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] LOG> = $r0;

        $r0 = newarray (int)[255];

        <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] ALOG> = $r0;

        $i1 = 1;

     label1:
        if $i0 >= 255 goto label3;

        $r0 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] ALOG>;

        $r0[$i0] = $i1;

        $r0 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] LOG>;

        $r0[$i1] = $i0;

        $i1 = $i1 << 1;

        if $i1 < 256 goto label2;

        $i1 = $i1 ^ 301;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void <init>()
    {
        com.google.zxing.datamatrix.encoder.ErrorCorrection r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.ErrorCorrection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String createECCBlock(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r1 = staticinvoke <com.google.zxing.datamatrix.encoder.ErrorCorrection: java.lang.String createECCBlock(java.lang.CharSequence,int,int,int)>($r0, 0, $i1, $i0);

        return $r1;
    }

    public static java.lang.String createECCBlock(java.lang.CharSequence, int, int, int)
    {
        int[][] $r2;
        int[] $r1, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9;
        java.lang.String $r7;
        java.lang.CharSequence $r0;
        char $c7, $c8;
        java.lang.IllegalArgumentException $r10;
        char[] $r3, $r6;
        java.lang.StringBuilder $r8, $r9;

        $r0 := @parameter0: java.lang.CharSequence;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i0 := @parameter3: int;

        $i4 = 0;

        $i5 = 0;

     label01:
        $r1 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] FACTOR_SETS>;

        $i6 = lengthof $r1;

        if $i5 >= $i6 goto label03;

        $i6 = $r1[$i5];

        if $i6 != $i0 goto label02;

        goto label04;

     label02:
        $i5 = $i5 + 1;

        goto label01;

     label03:
        $i5 = -1;

     label04:
        if $i5 < 0 goto label17;

        $r2 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[][] FACTORS>;

        $r1 = $r2[$i5];

        $r3 = newarray (char)[$i0];

        $i5 = 0;

     label05:
        if $i5 >= $i0 goto label06;

        $r3[$i5] = 0;

        $i5 = $i5 + 1;

        goto label05;

     label06:
        $i5 = $i2;

     label07:
        $i6 = $i2 + $i3;

        if $i5 >= $i6 goto label14;

        $i6 = -1;

        $i6 = $i0 + $i6;

        $c7 = $r3[$i6];

        $c8 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i5);

        $c7 = $c7 ^ $c8;

     label08:
        if $i6 <= 0 goto label11;

        if $c7 == 0 goto label09;

        $i9 = $r1[$i6];

        if $i9 == 0 goto label09;

        $i9 = -1;

        $i9 = $i6 + $i9;

        $c8 = $r3[$i9];

        $r4 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] ALOG>;

        $r5 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] LOG>;

        $i9 = (int) $c7;

        $i9 = $r5[$i9];

        $i1 = $r1[$i6];

        $i1 = $r5[$i1];

        $i9 = $i9 + $i1;

        $i9 = $i9 % 255;

        $i9 = $r4[$i9];

        $i1 = (int) $c8;

        $i9 = $i1 ^ $i9;

        $c8 = (char) $i9;

        $r3[$i6] = $c8;

        goto label10;

     label09:
        $i9 = -1;

        $i9 = $i6 + $i9;

        $c8 = $r3[$i9];

        $r3[$i6] = $c8;

     label10:
        $i9 = -1;

        $i6 = $i6 + $i9;

        goto label08;

     label11:
        if $c7 == 0 goto label12;

        $i6 = $r1[0];

        if $i6 == 0 goto label12;

        $r4 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] ALOG>;

        $r5 = <com.google.zxing.datamatrix.encoder.ErrorCorrection: int[] LOG>;

        $i6 = (int) $c7;

        $i6 = $r5[$i6];

        $i9 = $r1[0];

        $i9 = $r5[$i9];

        $i6 = $i6 + $i9;

        $i6 = $i6 % 255;

        $i6 = $r4[$i6];

        $c7 = (char) $i6;

        $r3[0] = $c7;

        goto label13;

     label12:
        $r3[0] = 0;

     label13:
        $i5 = $i5 + 1;

        goto label07;

     label14:
        $r6 = newarray (char)[$i0];

     label15:
        if $i4 >= $i0 goto label16;

        $i2 = $i0 - $i4;

        $i3 = -1;

        $i2 = $i2 + $i3;

        $c7 = $r3[$i2];

        $r6[$i4] = $c7;

        $i4 = $i4 + 1;

        goto label15;

     label16:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        return $r7;

     label17:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        $r8 = $r9;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal number of error correction codewords specified: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        goto label18;

     label18:
        throw $r10;
    }

    public static java.lang.String encodeECC200(java.lang.String, com.google.zxing.datamatrix.encoder.SymbolInfo)
    {
        int[] $r0, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r2;
        java.lang.String $r1, $r7;
        char $c5;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r3, $r6, $r8;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.datamatrix.encoder.SymbolInfo;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        if $i1 != $i2 goto label11;

        $r6 = new java.lang.StringBuilder;

        $r3 = $r6;

        $i1 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        $i2 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getErrorCodewords()>();

        $i1 = $i1 + $i2;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i1 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getInterleavedBlockCount()>();

        if $i1 != 1 goto label01;

        $i1 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getErrorCodewords()>();

        $r1 = staticinvoke <com.google.zxing.datamatrix.encoder.ErrorCorrection: java.lang.String createECCBlock(java.lang.CharSequence,int)>($r1, $i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label10;

     label01:
        $i2 = virtualinvoke $r3.<java.lang.StringBuilder: int capacity()>();

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>($i2);

        $r4 = newarray (int)[$i1];

        $r0 = newarray (int)[$i1];

        $r5 = newarray (int)[$i1];

        $i2 = 0;

     label02:
        if $i2 >= $i1 goto label04;

        $i3 = $i2 + 1;

        $i4 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataLengthForInterleavedBlock(int)>($i3);

        $r4[$i2] = $i4;

        $i4 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getErrorLengthForInterleavedBlock(int)>($i3);

        $r0[$i2] = $i4;

        $r5[$i2] = 0;

        if $i2 <= 0 goto label03;

        $i4 = -1;

        $i4 = $i2 + $i4;

        $i4 = $r5[$i4];

        $i0 = $r4[$i2];

        $i4 = $i4 + $i0;

        $r5[$i2] = $i4;

     label03:
        $i2 = $i3;

        goto label02;

     label04:
        $i2 = 0;

     label05:
        if $i2 >= $i1 goto label10;

        $r8 = new java.lang.StringBuilder;

        $r6 = $r8;

        $i3 = $r4[$i2];

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>($i3);

        $i3 = $i2;

     label06:
        $i4 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        if $i3 >= $i4 goto label07;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i3 = $i3 + $i1;

        goto label06;

     label07:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = $r0[$i2];

        $r7 = staticinvoke <com.google.zxing.datamatrix.encoder.ErrorCorrection: java.lang.String createECCBlock(java.lang.CharSequence,int)>($r7, $i3);

        $i3 = $i2;

        $i4 = 0;

     label08:
        $i0 = $r0[$i2];

        $i0 = $i0 * $i1;

        if $i3 >= $i0 goto label09;

        $i0 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        $i6 = $i0 + $i3;

        $c5 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: void setCharAt(int,char)>($i6, $c5);

        $i3 = $i3 + $i1;

        $i4 = $i4 + 1;

        goto label08;

     label09:
        $i2 = $i2 + 1;

        goto label05;

     label10:
        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label11:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The number of codewords does not match the selected symbol");

        goto label12;

     label12:
        throw $r9;
    }
}
