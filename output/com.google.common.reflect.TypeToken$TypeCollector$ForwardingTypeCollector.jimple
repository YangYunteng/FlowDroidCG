public class com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector extends com.google.common.reflect.TypeToken$TypeCollector
{
    public final com.google.common.reflect.TypeToken$TypeCollector delegate;

    public void <init>(com.google.common.reflect.TypeToken$TypeCollector)
    {
        com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector r0;
        com.google.common.reflect.TypeToken$TypeCollector $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector;

        $r1 := @parameter0: com.google.common.reflect.TypeToken$TypeCollector;

        specialinvoke r0.<com.google.common.reflect.TypeToken$TypeCollector: void <init>(com.google.common.reflect.TypeToken$1)>(null);

        r0.<com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector: com.google.common.reflect.TypeToken$TypeCollector delegate> = $r1;

        return;
    }

    public java.lang.Iterable getInterfaces(java.lang.Object)
    {
        com.google.common.reflect.TypeToken$TypeCollector $r1;
        java.lang.Object $r3;
        com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector r0;
        java.lang.Iterable $r2;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector;

        $r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector: com.google.common.reflect.TypeToken$TypeCollector delegate>;

        $r2 = virtualinvoke $r1.<com.google.common.reflect.TypeToken$TypeCollector: java.lang.Iterable getInterfaces(java.lang.Object)>($r3);

        return $r2;
    }

    public java.lang.Class getRawType(java.lang.Object)
    {
        com.google.common.reflect.TypeToken$TypeCollector $r1;
        java.lang.Class $r2;
        java.lang.Object $r3;
        com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector r0;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector;

        $r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector: com.google.common.reflect.TypeToken$TypeCollector delegate>;

        $r2 = virtualinvoke $r1.<com.google.common.reflect.TypeToken$TypeCollector: java.lang.Class getRawType(java.lang.Object)>($r3);

        return $r2;
    }

    public java.lang.Object getSuperclass(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector r0;
        com.google.common.reflect.TypeToken$TypeCollector $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector: com.google.common.reflect.TypeToken$TypeCollector delegate>;

        $r2 = virtualinvoke $r1.<com.google.common.reflect.TypeToken$TypeCollector: java.lang.Object getSuperclass(java.lang.Object)>($r2);

        return $r2;
    }
}
