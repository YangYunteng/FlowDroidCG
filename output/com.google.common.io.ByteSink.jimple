public abstract class com.google.common.io.ByteSink extends java.lang.Object
{

    public void <init>()
    {
        com.google.common.io.ByteSink r0;

        r0 := @this: com.google.common.io.ByteSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.io.CharSink asCharSink(java.nio.charset.Charset)
    {
        com.google.common.io.ByteSink r0;
        java.nio.charset.Charset $r1;
        com.google.common.io.ByteSink$AsCharSink $r2;

        r0 := @this: com.google.common.io.ByteSink;

        $r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new com.google.common.io.ByteSink$AsCharSink;

        specialinvoke $r2.<com.google.common.io.ByteSink$AsCharSink: void <init>(com.google.common.io.ByteSink,java.nio.charset.Charset,com.google.common.io.ByteSink$1)>(r0, $r1, null);

        return $r2;
    }

    public java.io.OutputStream openBufferedStream()
    {
        com.google.common.io.ByteSink r0;
        java.io.OutputStream $r1;
        boolean $z0;
        java.io.BufferedOutputStream $r2;

        r0 := @this: com.google.common.io.ByteSink;

        $r1 = virtualinvoke r0.<com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $z0 = $r1 instanceof java.io.BufferedOutputStream;

        if $z0 == 0 goto label1;

        $r2 = (java.io.BufferedOutputStream) $r1;

        return $r2;

     label1:
        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

        return $r2;
    }

    public abstract java.io.OutputStream openStream();

    public void write(byte[])
    {
        java.io.OutputStream $r3;
        java.lang.Throwable $r5, $r6;
        byte[] $r1;
        java.lang.RuntimeException $r7;
        com.google.common.io.ByteSink r0;
        com.google.common.io.Closer $r2;
        java.io.Closeable $r4;

        r0 := @this: com.google.common.io.ByteSink;

        $r1 := @parameter0: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r3 = virtualinvoke r0.<com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $r4 = virtualinvoke $r2.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        $r3 = (java.io.OutputStream) $r4;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r1);

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

     label2:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        return;

     label3:
        $r5 := @caughtexception;

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = virtualinvoke $r2.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r6);

        throw $r7;

     label6:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public long writeFrom(java.io.InputStream)
    {
        java.io.OutputStream $r3;
        java.lang.Throwable $r5, $r6;
        long $l0;
        java.lang.RuntimeException $r7;
        com.google.common.io.ByteSink r0;
        com.google.common.io.Closer $r2;
        java.io.Closeable $r4;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.ByteSink;

        $r1 := @parameter0: java.io.InputStream;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r3 = virtualinvoke r0.<com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $r4 = virtualinvoke $r2.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        $r3 = (java.io.OutputStream) $r4;

        $l0 = staticinvoke <com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>($r1, $r3);

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

     label2:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        return $l0;

     label3:
        $r5 := @caughtexception;

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = virtualinvoke $r2.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r6);

        throw $r7;

     label6:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
}
