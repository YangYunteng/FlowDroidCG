public final class com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture extends com.google.common.util.concurrent.AbstractTransformFuture
{

    public void <init>(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.AsyncFunction)
    {
        com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        com.google.common.util.concurrent.AsyncFunction $r2;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r2 := @parameter1: com.google.common.util.concurrent.AsyncFunction;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractTransformFuture: void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object)>($r1, $r2);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture doTransform(com.google.common.util.concurrent.AsyncFunction, java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.AsyncFunction $r2;
        java.lang.Object $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        $r2 := @parameter0: com.google.common.util.concurrent.AsyncFunction;

        $r3 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke $r2.<com.google.common.util.concurrent.AsyncFunction: com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "AsyncFunction.apply returned null instead of a Future. Did you mean to return immediateFuture(null)?");

        return $r1;
    }

    public volatile java.lang.Object doTransform(java.lang.Object, java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r2;
        java.lang.Object $r1, $r3;
        com.google.common.util.concurrent.AsyncFunction $r4;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.util.concurrent.AsyncFunction) $r3;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: com.google.common.util.concurrent.ListenableFuture doTransform(com.google.common.util.concurrent.AsyncFunction,java.lang.Object)>($r4, $r1);

        return $r2;
    }

    public void setResult(com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>($r1);

        return;
    }

    public volatile void setResult(java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        java.lang.Object $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.util.concurrent.ListenableFuture) $r1;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: void setResult(com.google.common.util.concurrent.ListenableFuture)>($r2);

        return;
    }
}
