public final class com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable extends android.graphics.drawable.Drawable
{
    public static final int COMPAT_SHADOW_COLOR;
    public static final float COMPAT_SHADOW_OFFSET_MULTIPLIER;
    public static final int SHADOW_COLOR;
    public final com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable;
    public final android.graphics.Paint containerPaint;
    public float currentElevation;
    public final android.graphics.RectF currentEndBounds;
    public final android.graphics.RectF currentEndBoundsMasked;
    public android.graphics.RectF currentMaskBounds;
    public final android.graphics.RectF currentStartBounds;
    public final android.graphics.RectF currentStartBoundsMasked;
    public final android.graphics.Paint debugPaint;
    public final android.graphics.Path debugPath;
    public final boolean drawDebugEnabled;
    public final boolean elevationShadowEnabled;
    public final android.graphics.RectF endBounds;
    public final android.graphics.Paint endContainerPaint;
    public final float endElevation;
    public final com.google.android.material.shape.ShapeAppearanceModel endShapeAppearanceModel;
    public final android.view.View endView;
    public final boolean entering;
    public final com.google.android.material.transition.platform.FadeModeEvaluator fadeModeEvaluator;
    public com.google.android.material.transition.platform.FadeModeResult fadeModeResult;
    public final com.google.android.material.transition.platform.FitModeEvaluator fitModeEvaluator;
    public com.google.android.material.transition.platform.FitModeResult fitModeResult;
    public final com.google.android.material.transition.platform.MaskEvaluator maskEvaluator;
    public final float motionPathLength;
    public final android.graphics.PathMeasure motionPathMeasure;
    public final float[] motionPathPosition;
    public float progress;
    public final com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds;
    public final android.graphics.Paint scrimPaint;
    public final android.graphics.Paint shadowPaint;
    public final android.graphics.RectF startBounds;
    public final android.graphics.Paint startContainerPaint;
    public final float startElevation;
    public final com.google.android.material.shape.ShapeAppearanceModel startShapeAppearanceModel;
    public final android.view.View startView;

    public void <init>(android.transition.PathMotion, android.view.View, android.graphics.RectF, com.google.android.material.shape.ShapeAppearanceModel, float, android.view.View, android.graphics.RectF, com.google.android.material.shape.ShapeAppearanceModel, float, int, int, int, int, boolean, boolean, com.google.android.material.transition.platform.FadeModeEvaluator, com.google.android.material.transition.platform.FitModeEvaluator, com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup, boolean)
    {
        android.graphics.PointF $r19, $r20;
        android.content.res.ColorStateList $r16;
        com.google.android.material.transition.platform.FadeModeEvaluator $r8;
        android.view.View $r2, $r5;
        android.graphics.Shader $r23;
        boolean $z0, $z1, $z2;
        android.graphics.RectF $r3, $r6, $r17, $r18;
        com.google.android.material.transition.platform.MaskEvaluator $r12;
        com.google.android.material.shape.ShapeAppearanceModel $r4, $r7;
        com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup $r10;
        com.google.android.material.shape.MaterialShapeDrawable $r14;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r11;
        android.graphics.Path $r15;
        android.transition.PathMotion $r1;
        float[] $r13;
        android.graphics.Paint$Style $r22;
        int $i0, $i1, $i2, $i3;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;
        android.graphics.PathMeasure $r21;
        com.google.android.material.transition.platform.FitModeEvaluator $r9;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.transition.PathMotion;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.RectF;

        $r4 := @parameter3: com.google.android.material.shape.ShapeAppearanceModel;

        $f0 := @parameter4: float;

        $r5 := @parameter5: android.view.View;

        $r6 := @parameter6: android.graphics.RectF;

        $r7 := @parameter7: com.google.android.material.shape.ShapeAppearanceModel;

        $f1 := @parameter8: float;

        $i0 := @parameter9: int;

        $i1 := @parameter10: int;

        $i2 := @parameter11: int;

        $i3 := @parameter12: int;

        $z0 := @parameter13: boolean;

        $z1 := @parameter14: boolean;

        $r8 := @parameter15: com.google.android.material.transition.platform.FadeModeEvaluator;

        $r9 := @parameter16: com.google.android.material.transition.platform.FitModeEvaluator;

        $r10 := @parameter17: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup;

        $z2 := @parameter18: boolean;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint containerPaint> = $r11;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint startContainerPaint> = $r11;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint endContainerPaint> = $r11;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint shadowPaint> = $r11;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint scrimPaint> = $r11;

        $r12 = new com.google.android.material.transition.platform.MaskEvaluator;

        specialinvoke $r12.<com.google.android.material.transition.platform.MaskEvaluator: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator> = $r12;

        $r13 = newarray (float)[2];

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float[] motionPathPosition> = $r13;

        $r14 = new com.google.android.material.shape.MaterialShapeDrawable;

        specialinvoke $r14.<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable> = $r14;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint> = $r11;

        $r15 = new android.graphics.Path;

        specialinvoke $r15.<android.graphics.Path: void <init>()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Path debugPath> = $r15;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.view.View startView> = $r2;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF startBounds> = $r3;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.ShapeAppearanceModel startShapeAppearanceModel> = $r4;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float startElevation> = $f0;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.view.View endView> = $r5;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF endBounds> = $r6;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.ShapeAppearanceModel endShapeAppearanceModel> = $r7;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float endElevation> = $f1;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean entering> = $z0;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean elevationShadowEnabled> = $z1;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeEvaluator fadeModeEvaluator> = $r8;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeEvaluator fitModeEvaluator> = $r9;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds> = $r10;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean drawDebugEnabled> = $z2;

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint containerPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i0);

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint startContainerPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i1);

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint endContainerPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i2);

        $r14 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        $r16 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(0);

        virtualinvoke $r14.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r16);

        $r14 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        virtualinvoke $r14.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowCompatibilityMode(int)>(2);

        $r14 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        virtualinvoke $r14.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowBitmapDrawingEnable(boolean)>(0);

        $r14 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        virtualinvoke $r14.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowColor(int)>(-7829368);

        $r17 = new android.graphics.RectF;

        specialinvoke $r17.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r3);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds> = $r17;

        $r17 = new android.graphics.RectF;

        $r18 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        specialinvoke $r17.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r18);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked> = $r17;

        $r17 = new android.graphics.RectF;

        $r18 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        specialinvoke $r17.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r18);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBounds> = $r17;

        $r17 = new android.graphics.RectF;

        $r18 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBounds>;

        specialinvoke $r17.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r18);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked> = $r17;

        $r19 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.PointF getMotionPathPoint(android.graphics.RectF)>($r3);

        $r20 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.PointF getMotionPathPoint(android.graphics.RectF)>($r6);

        $f0 = $r19.<android.graphics.PointF: float x>;

        $f1 = $r19.<android.graphics.PointF: float y>;

        $f2 = $r20.<android.graphics.PointF: float x>;

        $f3 = $r20.<android.graphics.PointF: float y>;

        $r15 = virtualinvoke $r1.<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r21 = new android.graphics.PathMeasure;

        specialinvoke $r21.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r15, 0);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.PathMeasure motionPathMeasure> = $r21;

        $r21 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.PathMeasure motionPathMeasure>;

        $f0 = virtualinvoke $r21.<android.graphics.PathMeasure: float getLength()>();

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float motionPathLength> = $f0;

        $r13 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float[] motionPathPosition>;

        $f0 = virtualinvoke $r3.<android.graphics.RectF: float centerX()>();

        $r13[0] = $f0;

        $r13 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float[] motionPathPosition>;

        $f0 = $r3.<android.graphics.RectF: float top>;

        $r13[1] = $f0;

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint scrimPaint>;

        $r22 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r11.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r22);

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint scrimPaint>;

        $r23 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: android.graphics.Shader createColorShader(int)>($i3);

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r23);

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint>;

        $r22 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r11.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r22);

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeWidth(float)>(10.0F);

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void updateProgress(float)>(0.0F);

        return;
    }

    public void <init>(android.transition.PathMotion, android.view.View, android.graphics.RectF, com.google.android.material.shape.ShapeAppearanceModel, float, android.view.View, android.graphics.RectF, com.google.android.material.shape.ShapeAppearanceModel, float, int, int, int, int, boolean, boolean, com.google.android.material.transition.platform.FadeModeEvaluator, com.google.android.material.transition.platform.FitModeEvaluator, com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup, boolean, com.google.android.material.transition.platform.MaterialContainerTransform$1)
    {
        android.transition.PathMotion $r1;
        com.google.android.material.transition.platform.FadeModeEvaluator $r8;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2, $r5;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;
        boolean $z0, $z1, $z2;
        android.graphics.RectF $r3, $r6;
        com.google.android.material.shape.ShapeAppearanceModel $r4, $r7;
        com.google.android.material.transition.platform.FitModeEvaluator $r9;
        com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup $r10;
        com.google.android.material.transition.platform.MaterialContainerTransform$1 $r11;
        float $f0, $f1;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.transition.PathMotion;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.RectF;

        $r4 := @parameter3: com.google.android.material.shape.ShapeAppearanceModel;

        $f0 := @parameter4: float;

        $r5 := @parameter5: android.view.View;

        $r6 := @parameter6: android.graphics.RectF;

        $r7 := @parameter7: com.google.android.material.shape.ShapeAppearanceModel;

        $f1 := @parameter8: float;

        $i0 := @parameter9: int;

        $i1 := @parameter10: int;

        $i2 := @parameter11: int;

        $i3 := @parameter12: int;

        $z0 := @parameter13: boolean;

        $z1 := @parameter14: boolean;

        $r8 := @parameter15: com.google.android.material.transition.platform.FadeModeEvaluator;

        $r9 := @parameter16: com.google.android.material.transition.platform.FitModeEvaluator;

        $r10 := @parameter17: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup;

        $z2 := @parameter18: boolean;

        $r11 := @parameter19: com.google.android.material.transition.platform.MaterialContainerTransform$1;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void <init>(android.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.platform.FadeModeEvaluator,com.google.android.material.transition.platform.FitModeEvaluator,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup,boolean)>($r1, $r2, $r3, $r4, $f0, $r5, $r6, $r7, $f1, $i0, $i1, $i2, $i3, $z0, $z1, $r8, $r9, $r10, $z2);

        return;
    }

    public static void access$200(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable, float)
    {
        float $f0;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable $r0;

        $r0 := @parameter0: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $f0 := @parameter1: float;

        specialinvoke $r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void setProgress(float)>($f0);

        return;
    }

    public static android.view.View access$800(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable)
    {
        android.view.View r1;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable $r0;

        $r0 := @parameter0: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        r1 = $r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.view.View startView>;

        return r1;
    }

    public static android.view.View access$900(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable)
    {
        android.view.View r1;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable $r0;

        $r0 := @parameter0: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        r1 = $r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.view.View endView>;

        return r1;
    }

    private void drawDebugCumulativePath(android.graphics.Canvas, android.graphics.RectF, android.graphics.Path, int)
    {
        android.graphics.RectF $r4;
        android.graphics.Path $r1;
        android.graphics.PointF $r2;
        byte $b1;
        int $i0;
        float $f0, $f1;
        android.graphics.Canvas $r3;
        android.graphics.Paint $r5;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r3 := @parameter0: android.graphics.Canvas;

        $r4 := @parameter1: android.graphics.RectF;

        $r1 := @parameter2: android.graphics.Path;

        $i0 := @parameter3: int;

        $r2 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.PointF getMotionPathPoint(android.graphics.RectF)>($r4);

        $f0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float progress>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label1;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $f0 = $r2.<android.graphics.PointF: float x>;

        $f1 = $r2.<android.graphics.PointF: float y>;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        return;

     label1:
        $f0 = $r2.<android.graphics.PointF: float x>;

        $f1 = $r2.<android.graphics.PointF: float y>;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r1, $r5);

        return;
    }

    private void drawDebugRect(android.graphics.Canvas, android.graphics.RectF, int)
    {
        android.graphics.RectF $r2;
        int $i0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.RectF;

        $i0 := @parameter2: int;

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint debugPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r2, $r3);

        return;
    }

    private void drawElevationShadow(android.graphics.Canvas)
    {
        android.graphics.Path $r2;
        android.graphics.Region$Op $r4;
        int $i0;
        com.google.android.material.transition.platform.MaskEvaluator $r3;
        android.graphics.Canvas $r1;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator>;

        $r2 = virtualinvoke $r3.<com.google.android.material.transition.platform.MaskEvaluator: android.graphics.Path getPath()>();

        $r4 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>($r2, $r4);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 28 goto label1;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawElevationShadowWithPaintShadowLayer(android.graphics.Canvas)>($r1);

        goto label2;

     label1:
        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawElevationShadowWithMaterialShapeDrawable(android.graphics.Canvas)>($r1);

     label2:
        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    private void drawElevationShadowWithMaterialShapeDrawable(android.graphics.Canvas)
    {
        android.graphics.RectF $r4;
        com.google.android.material.transition.platform.MaskEvaluator $r5;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r3;
        int $i0, $i1, $i2, $i3;
        float $f0;
        android.graphics.Canvas $r1;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentMaskBounds>;

        $f0 = $r4.<android.graphics.RectF: float left>;

        $i0 = (int) $f0;

        $f0 = $r4.<android.graphics.RectF: float top>;

        $i1 = (int) $f0;

        $f0 = $r4.<android.graphics.RectF: float right>;

        $i2 = (int) $f0;

        $f0 = $r4.<android.graphics.RectF: float bottom>;

        $i3 = (int) $f0;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        $f0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float currentElevation>;

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        $f0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float currentElevation>;

        $f0 = $f0 * 0.75F;

        $i0 = (int) $f0;

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowVerticalOffset(int)>($i0);

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator>;

        $r2 = virtualinvoke $r5.<com.google.android.material.transition.platform.MaskEvaluator: com.google.android.material.shape.ShapeAppearanceModel getCurrentShapeAppearanceModel()>();

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r2);

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.MaterialShapeDrawable compatShadowDrawable>;

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    private void drawElevationShadowWithPaintShadowLayer(android.graphics.Canvas)
    {
        android.graphics.RectF $r5;
        android.graphics.Path $r7;
        com.google.android.material.transition.platform.MaskEvaluator $r3;
        com.google.android.material.shape.ShapeAppearanceModel $r4;
        float $f0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.google.android.material.shape.CornerSize $r6;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator>;

        $r4 = virtualinvoke $r3.<com.google.android.material.transition.platform.MaskEvaluator: com.google.android.material.shape.ShapeAppearanceModel getCurrentShapeAppearanceModel()>();

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentMaskBounds>;

        $z0 = virtualinvoke $r4.<com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)>($r5);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke $r4.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentMaskBounds>;

        $f0 = interfaceinvoke $r6.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r5);

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentMaskBounds>;

        $r2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint shadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f0, $f0, $r2);

        return;

     label1:
        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator>;

        $r7 = virtualinvoke $r3.<com.google.android.material.transition.platform.MaskEvaluator: android.graphics.Path getPath()>();

        $r2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint shadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r2);

        return;
    }

    private void drawEndView(android.graphics.Canvas)
    {
        android.graphics.RectF $r5;
        android.graphics.Rect $r3;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$2 $r2;
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r4;
        com.google.android.material.transition.platform.FadeModeResult $r7;
        com.google.android.material.transition.platform.FitModeResult $r6;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint endContainerPaint>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void maybeDrawContainerColor(android.graphics.Canvas,android.graphics.Paint)>($r1, $r4);

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBounds>;

        $f0 = $r5.<android.graphics.RectF: float left>;

        $f1 = $r5.<android.graphics.RectF: float top>;

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult>;

        $f2 = $r6.<com.google.android.material.transition.platform.FitModeResult: float endScale>;

        $r7 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeResult fadeModeResult>;

        $i0 = $r7.<com.google.android.material.transition.platform.FadeModeResult: int endAlpha>;

        $r2 = new com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$2;

        specialinvoke $r2.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$2: void <init>(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable)>(r0);

        staticinvoke <com.google.android.material.transition.platform.TransitionUtils: void transform(android.graphics.Canvas,android.graphics.Rect,float,float,float,int,com.google.android.material.transition.platform.TransitionUtils$CanvasOperation)>($r1, $r3, $f0, $f1, $f2, $i0, $r2);

        return;
    }

    private void drawStartView(android.graphics.Canvas)
    {
        android.graphics.RectF $r5;
        android.graphics.Rect $r3;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$1 $r2;
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r4;
        com.google.android.material.transition.platform.FadeModeResult $r7;
        com.google.android.material.transition.platform.FitModeResult $r6;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint startContainerPaint>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void maybeDrawContainerColor(android.graphics.Canvas,android.graphics.Paint)>($r1, $r4);

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        $f0 = $r5.<android.graphics.RectF: float left>;

        $f1 = $r5.<android.graphics.RectF: float top>;

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult>;

        $f2 = $r6.<com.google.android.material.transition.platform.FitModeResult: float startScale>;

        $r7 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeResult fadeModeResult>;

        $i0 = $r7.<com.google.android.material.transition.platform.FadeModeResult: int startAlpha>;

        $r2 = new com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$1;

        specialinvoke $r2.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$1: void <init>(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable)>(r0);

        staticinvoke <com.google.android.material.transition.platform.TransitionUtils: void transform(android.graphics.Canvas,android.graphics.Rect,float,float,float,int,com.google.android.material.transition.platform.TransitionUtils$CanvasOperation)>($r1, $r3, $f0, $f1, $f2, $i0, $r2);

        return;
    }

    public static android.graphics.PointF getMotionPathPoint(android.graphics.RectF)
    {
        android.graphics.RectF $r1;
        android.graphics.PointF $r0;
        float $f0, $f1;

        $r1 := @parameter0: android.graphics.RectF;

        $r0 = new android.graphics.PointF;

        $f0 = virtualinvoke $r1.<android.graphics.RectF: float centerX()>();

        $f1 = $r1.<android.graphics.RectF: float top>;

        specialinvoke $r0.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r0;
    }

    private void maybeDrawContainerColor(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.Rect $r3;
        int $i0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getColor()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        if $i0 <= 0 goto label1;

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r3, $r2);

     label1:
        return;
    }

    private void setProgress(float)
    {
        byte $b0;
        float $f0, $f1;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float progress>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void updateProgress(float)>($f0);

     label1:
        return;
    }

    private void updateProgress(float)
    {
        java.lang.Float $r6;
        float[] $r3;
        com.google.android.material.transition.platform.FadeModeEvaluator $r15;
        int $i0;
        com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds $r5;
        com.google.android.material.transition.platform.FitModeResult $r9;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;
        boolean $z0;
        android.graphics.RectF $r8, $r10, $r14;
        android.graphics.PathMeasure $r2;
        com.google.android.material.transition.platform.MaskEvaluator $r11;
        com.google.android.material.transition.platform.FitModeEvaluator $r7;
        com.google.android.material.shape.ShapeAppearanceModel $r12, $r13;
        com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.graphics.Paint $r1;
        com.google.android.material.transition.platform.FadeModeResult $r16;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float progress> = $f0;

        $r1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint scrimPaint>;

        $z0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean entering>;

        if $z0 == 0 goto label1;

        $f1 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: float lerp(float,float,float)>(0.0F, 255.0F, $f0);

        goto label2;

     label1:
        $f1 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: float lerp(float,float,float)>(255.0F, 0.0F, $f0);

     label2:
        $i0 = (int) $f1;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        $f1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float startElevation>;

        $f2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float endElevation>;

        $f1 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: float lerp(float,float,float)>($f1, $f2, $f0);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float currentElevation> = $f1;

        $r1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint shadowPaint>;

        $f1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float currentElevation>;

        virtualinvoke $r1.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f1, 0.0F, $f1, 754974720);

        $r2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.PathMeasure motionPathMeasure>;

        $f1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float motionPathLength>;

        $f1 = $f1 * $f0;

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float[] motionPathPosition>;

        virtualinvoke $r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>($f1, $r3, null);

        $r3 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float[] motionPathPosition>;

        $f2 = $r3[0];

        $f1 = $r3[1];

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$500(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        $f3 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds: float access$1000(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($r5);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r6);

        $f3 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$500(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        $f4 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds: float access$1100(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($r5);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r6);

        $f4 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r7 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeEvaluator fitModeEvaluator>;

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF startBounds>;

        $f5 = virtualinvoke $r8.<android.graphics.RectF: float width()>();

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF startBounds>;

        $f6 = virtualinvoke $r8.<android.graphics.RectF: float height()>();

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF endBounds>;

        $f7 = virtualinvoke $r8.<android.graphics.RectF: float width()>();

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF endBounds>;

        $f8 = virtualinvoke $r8.<android.graphics.RectF: float height()>();

        $r9 = interfaceinvoke $r7.<com.google.android.material.transition.platform.FitModeEvaluator: com.google.android.material.transition.platform.FitModeResult evaluate(float,float,float,float,float,float,float)>($f0, $f3, $f4, $f5, $f6, $f7, $f8);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult> = $r9;

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        $r9 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult>;

        $f4 = $r9.<com.google.android.material.transition.platform.FitModeResult: float currentStartWidth>;

        $f3 = $f4 / 2.0F;

        $f3 = $f2 - $f3;

        $f4 = $f4 / 2.0F;

        $f4 = $f4 + $f2;

        $f5 = $r9.<com.google.android.material.transition.platform.FitModeResult: float currentStartHeight>;

        $f5 = $f5 + $f1;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f1, $f4, $f5);

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBounds>;

        $r9 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult>;

        $f4 = $r9.<com.google.android.material.transition.platform.FitModeResult: float currentEndWidth>;

        $f3 = $f4 / 2.0F;

        $f3 = $f2 - $f3;

        $f4 = $f4 / 2.0F;

        $f2 = $f2 + $f4;

        $f4 = $r9.<com.google.android.material.transition.platform.FitModeResult: float currentEndHeight>;

        $f4 = $f4 + $f1;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f1, $f2, $f4);

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        virtualinvoke $r8.<android.graphics.RectF: void set(android.graphics.RectF)>($r10);

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBounds>;

        virtualinvoke $r8.<android.graphics.RectF: void set(android.graphics.RectF)>($r10);

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$600(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        $f1 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds: float access$1000(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($r5);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r6);

        $f1 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$600(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        $f2 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds: float access$1100(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($r5);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r6);

        $f2 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r7 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeEvaluator fitModeEvaluator>;

        $r9 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult>;

        $z0 = interfaceinvoke $r7.<com.google.android.material.transition.platform.FitModeEvaluator: boolean shouldMaskStartBounds(com.google.android.material.transition.platform.FitModeResult)>($r9);

        if $z0 == 0 goto label3;

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        goto label4;

     label3:
        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

     label4:
        $f1 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: float lerp(float,float,float,float,float)>(0.0F, 1.0F, $f1, $f2, $f0);

        $f2 = $f1;

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $f2 = 1.0F - $f1;

     label6:
        $r7 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeEvaluator fitModeEvaluator>;

        $r9 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FitModeResult fitModeResult>;

        interfaceinvoke $r7.<com.google.android.material.transition.platform.FitModeEvaluator: void applyMask(android.graphics.RectF,float,com.google.android.material.transition.platform.FitModeResult)>($r8, $f2, $r9);

        $r8 = new android.graphics.RectF;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $f1 = $r10.<android.graphics.RectF: float left>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        $f2 = $r10.<android.graphics.RectF: float left>;

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f2);

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $f2 = $r10.<android.graphics.RectF: float top>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        $f3 = $r10.<android.graphics.RectF: float top>;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f3);

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $f3 = $r10.<android.graphics.RectF: float right>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        $f4 = $r10.<android.graphics.RectF: float right>;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f3, $f4);

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $f4 = $r10.<android.graphics.RectF: float bottom>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        $f5 = $r10.<android.graphics.RectF: float bottom>;

        $f4 = staticinvoke <java.lang.Math: float max(float,float)>($f4, $f5);

        specialinvoke $r8.<android.graphics.RectF: void <init>(float,float,float,float)>($f1, $f2, $f3, $f4);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentMaskBounds> = $r8;

        $r11 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator>;

        $r12 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.ShapeAppearanceModel startShapeAppearanceModel>;

        $r13 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.shape.ShapeAppearanceModel endShapeAppearanceModel>;

        $r8 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        $r10 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $r14 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$700(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        virtualinvoke $r11.<com.google.android.material.transition.platform.MaskEvaluator: void evaluate(float,com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,android.graphics.RectF,android.graphics.RectF,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($f0, $r12, $r13, $r8, $r10, $r14, $r5);

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$400(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        $f1 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds: float access$1000(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($r5);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r6);

        $f1 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup progressThresholds>;

        $r5 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$400(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup)>($r4);

        $f2 = staticinvoke <com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds: float access$1100(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds)>($r5);

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r6);

        $f2 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r15 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeEvaluator fadeModeEvaluator>;

        $r16 = interfaceinvoke $r15.<com.google.android.material.transition.platform.FadeModeEvaluator: com.google.android.material.transition.platform.FadeModeResult evaluate(float,float,float)>($f0, $f1, $f2);

        r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeResult fadeModeResult> = $r16;

        $r1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint startContainerPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        if $i0 == 0 goto label7;

        $r1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint startContainerPaint>;

        $r16 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeResult fadeModeResult>;

        $i0 = $r16.<com.google.android.material.transition.platform.FadeModeResult: int startAlpha>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

     label7:
        $r1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint endContainerPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        if $i0 == 0 goto label8;

        $r1 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint endContainerPaint>;

        $r16 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeResult fadeModeResult>;

        $i0 = $r16.<com.google.android.material.transition.platform.FadeModeResult: int endAlpha>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

     label8:
        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.RectF $r6;
        android.graphics.Rect $r3;
        android.graphics.Path $r7;
        com.google.android.material.transition.platform.MaskEvaluator $r4;
        byte $b1;
        int $i0, $i2;
        float $f0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.google.android.material.transition.platform.FadeModeResult $r5;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint scrimPaint>;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        if $i0 <= 0 goto label1;

        $r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint scrimPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r3, $r2);

     label1:
        $z0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean drawDebugEnabled>;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        goto label3;

     label2:
        $i0 = -1;

     label3:
        $z0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean elevationShadowEnabled>;

        if $z0 == 0 goto label4;

        $f0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float currentElevation>;

        $b1 = $f0 cmpl 0.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label4;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawElevationShadow(android.graphics.Canvas)>($r1);

     label4:
        $r4 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.MaskEvaluator maskEvaluator>;

        virtualinvoke $r4.<com.google.android.material.transition.platform.MaskEvaluator: void clip(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Paint containerPaint>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void maybeDrawContainerColor(android.graphics.Canvas,android.graphics.Paint)>($r1, $r2);

        $r5 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: com.google.android.material.transition.platform.FadeModeResult fadeModeResult>;

        $z0 = $r5.<com.google.android.material.transition.platform.FadeModeResult: boolean endOnTop>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawStartView(android.graphics.Canvas)>($r1);

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawEndView(android.graphics.Canvas)>($r1);

        goto label6;

     label5:
        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawEndView(android.graphics.Canvas)>($r1);

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawStartView(android.graphics.Canvas)>($r1);

     label6:
        $z0 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: boolean drawDebugEnabled>;

        if $z0 == 0 goto label7;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        $r7 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.Path debugPath>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawDebugCumulativePath(android.graphics.Canvas,android.graphics.RectF,android.graphics.Path,int)>($r1, $r6, $r7, -65281);

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBoundsMasked>;

        $i0 = -256;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawDebugRect(android.graphics.Canvas,android.graphics.RectF,int)>($r1, $r6, $i0);

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentStartBounds>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawDebugRect(android.graphics.Canvas,android.graphics.RectF,int)>($r1, $r6, -16711936);

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBoundsMasked>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawDebugRect(android.graphics.Canvas,android.graphics.RectF,int)>($r1, $r6, -16711681);

        $r6 = r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: android.graphics.RectF currentEndBounds>;

        specialinvoke r0.<com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawDebugRect(android.graphics.Canvas,android.graphics.RectF,int)>($r1, $r6, -16776961);

     label7:
        return;
    }

    public int getOpacity()
    {
        int $i0;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $i0 = -3;

        return $i0;
    }

    public void setAlpha(int)
    {
        int $i0;
        java.lang.UnsupportedOperationException $r1;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting alpha on is not supported");

        throw $r1;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        java.lang.UnsupportedOperationException $r2;
        com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable r0;

        r0 := @this: com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting a color filter is not supported");

        throw $r2;
    }

    public static void <clinit>()
    {
        <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: int SHADOW_COLOR> = 754974720;

        <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: float COMPAT_SHADOW_OFFSET_MULTIPLIER> = 0.75F;

        <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: int COMPAT_SHADOW_COLOR> = -7829368;

        return;
    }
}
