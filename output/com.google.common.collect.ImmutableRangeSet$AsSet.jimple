public final class com.google.common.collect.ImmutableRangeSet$AsSet extends com.google.common.collect.ImmutableSortedSet
{
    public final com.google.common.collect.DiscreteDomain domain;
    public transient java.lang.Integer size;
    public final com.google.common.collect.ImmutableRangeSet this$0;

    public void <init>(com.google.common.collect.ImmutableRangeSet, com.google.common.collect.DiscreteDomain)
    {
        com.google.common.collect.Ordering $r2;
        com.google.common.collect.DiscreteDomain $r1;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.ImmutableRangeSet $r3;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r3 := @parameter0: com.google.common.collect.ImmutableRangeSet;

        $r1 := @parameter1: com.google.common.collect.DiscreteDomain;

        r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0> = $r3;

        $r2 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke r0.<com.google.common.collect.ImmutableSortedSet: void <init>(java.util.Comparator)>($r2);

        r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain> = $r1;

        return;
    }

    public static com.google.common.collect.DiscreteDomain access$100(com.google.common.collect.ImmutableRangeSet$AsSet)
    {
        com.google.common.collect.ImmutableRangeSet$AsSet $r0;
        com.google.common.collect.DiscreteDomain r1;

        $r0 := @parameter0: com.google.common.collect.ImmutableRangeSet$AsSet;

        r1 = $r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain>;

        return r1;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        java.lang.Object $r3;
        java.lang.Comparable $r4;
        com.google.common.collect.ImmutableRangeSet $r1;
        java.lang.ClassCastException $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r3 := @parameter0: java.lang.Object;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = (java.lang.Comparable) $r3;

     label2:
        $r1 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

     label3:
        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableRangeSet: boolean contains(java.lang.Comparable)>($r4);

     label4:
        return $z0;

     label5:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    public com.google.common.collect.ImmutableSortedSet createDescendingSet()
    {
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.DescendingImmutableSortedSet $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = new com.google.common.collect.DescendingImmutableSortedSet;

        specialinvoke $r1.<com.google.common.collect.DescendingImmutableSortedSet: void <init>(com.google.common.collect.ImmutableSortedSet)>(r0);

        return $r1;
    }

    public com.google.common.collect.UnmodifiableIterator descendingIterator()
    {
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.ImmutableRangeSet$AsSet$2 $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = new com.google.common.collect.ImmutableRangeSet$AsSet$2;

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet$AsSet$2: void <init>(com.google.common.collect.ImmutableRangeSet$AsSet)>(r0);

        return $r1;
    }

    public volatile java.util.Iterator descendingIterator()
    {
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.UnmodifiableIterator descendingIterator()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Comparable, boolean)
    {
        com.google.common.collect.ImmutableSortedSet $r4;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.Range $r3;
        java.lang.Comparable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 := @parameter0: java.lang.Comparable;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType)>($r1, $r2);

        $r4 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object, boolean)
    {
        com.google.common.collect.ImmutableSortedSet $r1;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (java.lang.Comparable) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Comparable,boolean)>($r3, $z0);

        return $r1;
    }

    public int indexOf(java.lang.Object)
    {
        com.google.common.collect.ContiguousSet $r8;
        com.google.common.collect.Range $r6;
        long $l0, $l2;
        java.lang.AssertionError $r9;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.DiscreteDomain $r7;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        int $i1;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        com.google.common.collect.ImmutableRangeSet $r3;
        com.google.common.collect.UnmodifiableIterator $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r2 = (java.lang.Comparable) $r1;

        $l0 = 0L;

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

        $r4 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r3);

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.google.common.collect.Range) $r1;

        $z0 = virtualinvoke $r6.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r2);

        if $z0 == 0 goto label2;

        $r7 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain>;

        $r8 = staticinvoke <com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)>($r6, $r7);

        $i1 = virtualinvoke $r8.<com.google.common.collect.ImmutableSortedSet: int indexOf(java.lang.Object)>($r2);

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        $i1 = staticinvoke <com.google.common.primitives.Ints: int saturatedCast(long)>($l0);

        return $i1;

     label2:
        $r7 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain>;

        $r8 = staticinvoke <com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)>($r6, $r7);

        $i1 = virtualinvoke $r8.<java.util.AbstractCollection: int size()>();

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        goto label1;

     label3:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("impossible");

        throw $r9;

     label4:
        $i1 = -1;

        return $i1;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.ImmutableRangeSet $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

        $r2 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r1);

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableCollection: boolean isPartialView()>();

        return $z0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.ImmutableRangeSet$AsSet$1 $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = new com.google.common.collect.ImmutableRangeSet$AsSet$1;

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet$AsSet$1: void <init>(com.google.common.collect.ImmutableRangeSet$AsSet)>(r0);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public int size()
    {
        com.google.common.collect.ContiguousSet $r8;
        com.google.common.collect.Range $r7;
        long $l1, $l3;
        java.lang.Integer $r2, $r9;
        byte $b0;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.DiscreteDomain $r1;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        int $i2;
        java.lang.Object $r6;
        com.google.common.collect.ImmutableRangeSet $r3;
        com.google.common.collect.UnmodifiableIterator $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r2 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: java.lang.Integer size>;

        if $r2 != null goto label3;

        $l1 = 0L;

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

        $r4 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r3);

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.google.common.collect.Range) $r6;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain>;

        $r8 = staticinvoke <com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)>($r7, $r1);

        $i2 = virtualinvoke $r8.<java.util.AbstractCollection: int size()>();

        $l3 = (long) $i2;

        $l1 = $l1 + $l3;

        $b0 = $l1 cmp 2147483647L;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

     label2:
        $i2 = staticinvoke <com.google.common.primitives.Ints: int saturatedCast(long)>($l1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2 = $r9;

        r0.<com.google.common.collect.ImmutableRangeSet$AsSet: java.lang.Integer size> = $r9;

     label3:
        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i2;
    }

    public com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range)
    {
        com.google.common.collect.ImmutableSortedSet $r4;
        com.google.common.collect.DiscreteDomain $r3;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.Range $r1;
        com.google.common.collect.ImmutableRangeSet $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range)>($r1);

        $r3 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableSortedSet asSet(com.google.common.collect.DiscreteDomain)>($r3);

        return $r4;
    }

    public com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Comparable, boolean, java.lang.Comparable, boolean)
    {
        com.google.common.collect.ImmutableSortedSet $r3;
        com.google.common.collect.Range $r6;
        com.google.common.collect.BoundType $r4, $r5;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        int $i0;
        java.lang.Comparable $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r2 := @parameter0: java.lang.Comparable;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Comparable;

        $z1 := @parameter3: boolean;

        if $z0 != 0 goto label1;

        if $z1 != 0 goto label1;

        $i0 = staticinvoke <com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet of()>();

        return $r3;

     label1:
        $r4 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r5 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z1);

        $r6 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)>($r2, $r4, $r1, $r5);

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range)>($r6);

        return $r3;
    }

    public volatile com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        com.google.common.collect.ImmutableSortedSet $r1;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        java.lang.Object $r2, $r3;
        java.lang.Comparable $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 := @parameter2: java.lang.Object;

        $z1 := @parameter3: boolean;

        $r4 = (java.lang.Comparable) $r2;

        $r5 = (java.lang.Comparable) $r3;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean)>($r4, $z0, $r5, $z1);

        return $r1;
    }

    public com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Comparable, boolean)
    {
        com.google.common.collect.ImmutableSortedSet $r4;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.Range $r3;
        java.lang.Comparable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 := @parameter0: java.lang.Comparable;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType)>($r1, $r2);

        $r4 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object, boolean)
    {
        com.google.common.collect.ImmutableSortedSet $r1;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (java.lang.Comparable) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Comparable,boolean)>($r3, $z0);

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.ImmutableRangeSet $r1;
        java.lang.String $r3;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

        $r2 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r1);

        $r3 = virtualinvoke $r2.<java.util.AbstractCollection: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableList $r3;
        com.google.common.collect.DiscreteDomain $r2;
        com.google.common.collect.ImmutableRangeSet$AsSet r0;
        com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm $r1;
        com.google.common.collect.ImmutableRangeSet $r4;

        r0 := @this: com.google.common.collect.ImmutableRangeSet$AsSet;

        $r1 = new com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm;

        $r4 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.ImmutableRangeSet this$0>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet)>($r4);

        $r2 = r0.<com.google.common.collect.ImmutableRangeSet$AsSet: com.google.common.collect.DiscreteDomain domain>;

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm: void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.DiscreteDomain)>($r3, $r2);

        return $r1;
    }
}
