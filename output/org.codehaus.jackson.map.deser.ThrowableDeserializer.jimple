public class org.codehaus.jackson.map.deser.ThrowableDeserializer extends org.codehaus.jackson.map.deser.BeanDeserializer
{
    public static final java.lang.String PROP_NAME_MESSAGE;

    public void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)
    {
        org.codehaus.jackson.map.deser.BeanDeserializer $r1;
        org.codehaus.jackson.map.deser.ThrowableDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.ThrowableDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>($r1);

        return;
    }

    public java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        java.lang.Object[] $r8;
        org.codehaus.jackson.JsonToken $r9, $r10;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r12;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r18;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.map.deser.Creator$Delegating $r5;
        java.util.HashSet $r17;
        org.codehaus.jackson.map.JsonMappingException $r19;
        int $i0, $i1, $i2, $i3;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.String $r11, $r15;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;
        org.codehaus.jackson.map.deser.ThrowableDeserializer r0;
        java.lang.Object $r4, $r14, $r16;
        org.codehaus.jackson.map.deser.Creator$StringBased $r7;
        java.lang.StringBuilder $r20;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r3;

        r0 := @this: org.codehaus.jackson.map.deser.ThrowableDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator>;

        if $r3 == null goto label01;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r4;

     label01:
        $r5 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.Creator$Delegating _delegatingCreator>;

        if $r5 == null goto label02;

        $r4 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.Creator$Delegating: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r4;

     label02:
        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $z0 = virtualinvoke $r6.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 != 0 goto label17;

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.Creator$StringBased _stringCreator>;

        if $r7 == null goto label16;

        $i0 = 0;

        $r4 = null;

        $r8 = null;

        $i1 = 0;

     label03:
        $r9 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r10 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r9 == $r10 goto label13;

        $r11 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r11);

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r13 == null goto label06;

        if $r4 == null goto label04;

        virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>($r1, $r2, $r4);

        goto label12;

     label04:
        if $r8 != null goto label05;

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $i2 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int size()>();

        $i2 = $i2 + $i2;

        $r8 = newarray (java.lang.Object)[$i2];

     label05:
        $i2 = $i1 + 1;

        $r8[$i1] = $r13;

        $i1 = $i2 + 1;

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        $r8[$i2] = $r14;

        goto label12;

     label06:
        $r15 = "message";

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label09;

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.Creator$StringBased _stringCreator>;

        $r11 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r14 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.Creator$StringBased: java.lang.Object construct(java.lang.String)>($r11);

        $r4 = $r14;

        if $r8 == null goto label12;

        $i2 = 0;

     label07:
        if $i2 >= $i1 goto label08;

        $r16 = $r8[$i2];

        $r13 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r16;

        $i3 = $i2 + 1;

        $r16 = $r8[$i3];

        virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: void set(java.lang.Object,java.lang.Object)>($r14, $r16);

        $i2 = $i2 + 2;

        goto label07;

     label08:
        $r8 = null;

        goto label12;

     label09:
        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.HashSet _ignorableProps>;

        if $r17 == null goto label10;

        $z0 = virtualinvoke $r17.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label12;

     label10:
        $r18 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r18 == null goto label11;

        virtualinvoke $r18.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r4, $r11);

        goto label12;

     label11:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r4, $r11);

     label12:
        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label03;

     label13:
        if $r4 != null goto label15;

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.Creator$StringBased _stringCreator>;

        $r4 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.Creator$StringBased: java.lang.Object construct(java.lang.String)>(null);

        if $r8 == null goto label19;

     label14:
        if $i0 >= $i1 goto label19;

        $r14 = $r8[$i0];

        $r13 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r14;

        $i2 = $i0 + 1;

        $r14 = $r8[$i2];

        virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: void set(java.lang.Object,java.lang.Object)>($r4, $r14);

        $i0 = $i0 + 2;

        goto label14;

     label15:
        return $r4;

     label16:
        $r19 = new org.codehaus.jackson.map.JsonMappingException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Throwable of type ");

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without having either single-String-arg constructor; or explicit @JsonCreator");

        $r11 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r11);

        throw $r19;

     label17:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate abstract type ");

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (need to add/enable type information?)");

        $r11 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>($r1, $r11);

        goto label18;

     label18:
        throw $r19;

     label19:
        return $r4;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.map.deser.ThrowableDeserializer: java.lang.String PROP_NAME_MESSAGE> = "message";

        return;
    }
}
