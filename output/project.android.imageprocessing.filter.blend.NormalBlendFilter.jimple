public class project.android.imageprocessing.filter.blend.NormalBlendFilter extends project.android.imageprocessing.filter.MultiInputFilter
{

    public void <init>()
    {
        project.android.imageprocessing.filter.blend.NormalBlendFilter r0;

        r0 := @this: project.android.imageprocessing.filter.blend.NormalBlendFilter;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void <init>(int)>(2);

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.blend.NormalBlendFilter r0;

        r0 := @this: project.android.imageprocessing.filter.blend.NormalBlendFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nuniform sampler2D u_Texture1;\nvarying vec2 v_TexCoord;\nvoid main(){\n   vec4 color2 = texture2D(u_Texture0,v_TexCoord);\n   vec4 color1 = texture2D(u_Texture1,v_TexCoord);\n   vec4 outputColor;\n   float a = color1.a + color2.a * (1.0 - color1.a);\n   outputColor.r = (color1.r * color1.a + color2.r * color2.a * (1.0 - color1.a))/a;\n   outputColor.g = (color1.g * color1.a + color2.g * color2.a * (1.0 - color1.a))/a;\n   outputColor.b = (color1.b * color1.a + color2.b * color2.a * (1.0 - color1.a))/a;\n   outputColor.a = a;\n   gl_FragColor = outputColor;\n}\n";
    }
}
