public class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor extends org.apache.james.mime4j.io.LineReaderInputStream
{
    public final org.apache.james.mime4j.io.LineReaderInputStream bis;
    public boolean eof;
    public final int maxLineLen;
    public boolean used;

    public void <init>(java.io.InputStream)
    {
        int $i0;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r1 := @parameter0: java.io.InputStream;

        $i0 = -1;

        specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: void <init>(java.io.InputStream,int)>($r1, $i0);

        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        int $i0;
        org.apache.james.mime4j.io.LineReaderInputStream $r2;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean used> = 0;

        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean eof> = 0;

        $z0 = $r1 instanceof org.apache.james.mime4j.io.LineReaderInputStream;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.james.mime4j.io.LineReaderInputStream) $r1;

        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: org.apache.james.mime4j.io.LineReaderInputStream bis> = $r2;

        goto label2;

     label1:
        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: org.apache.james.mime4j.io.LineReaderInputStream bis> = null;

     label2:
        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: int maxLineLen> = $i0;

        return;
    }

    private int doReadLine(org.apache.james.mime4j.util.ByteArrayBuffer)
    {
        org.apache.james.mime4j.io.MaxLineLimitException $r3;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        int $i0, $i1, $i2, $i3;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i1 = 0;

     label1:
        $r2 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $i0 = -1;

        if $i2 == $i0 goto label4;

        virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>($i2);

        $i1 = $i1 + 1;

        $i0 = r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: int maxLineLen>;

        if $i0 <= 0 goto label3;

        $i3 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i0 = r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: int maxLineLen>;

        if $i3 >= $i0 goto label2;

        goto label3;

     label2:
        $r3 = new org.apache.james.mime4j.io.MaxLineLimitException;

        specialinvoke $r3.<org.apache.james.mime4j.io.MaxLineLimitException: void <init>(java.lang.String)>("Maximum line length limit exceeded");

        throw $r3;

     label3:
        if $i2 != 10 goto label1;

     label4:
        if $i1 != 0 goto label5;

        $i0 = -1;

        if $i2 != $i0 goto label5;

        $i1 = -1;

     label5:
        return $i1;
    }

    public boolean eof()
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        z0 = r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean eof>;

        return z0;
    }

    public boolean isUsed()
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        z0 = r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean used>;

        return z0;
    }

    public int read()
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        int $i0, $i1;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean eof> = $z0;

        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean used> = 1;

        return $i0;
    }

    public int read(byte[], int, int)
    {
        byte[] $r2;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        int $i0, $i1;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r2 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, $i0, $i1);

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean eof> = $z0;

        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean used> = 1;

        return $i0;
    }

    public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer)
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        int $i0, $i1;
        org.apache.james.mime4j.io.LineReaderInputStream $r2;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r2 = r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: org.apache.james.mime4j.io.LineReaderInputStream bis>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.io.LineReaderInputStream: int readLine(org.apache.james.mime4j.util.ByteArrayBuffer)>($r1);

        goto label2;

     label1:
        $i0 = specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: int doReadLine(org.apache.james.mime4j.util.ByteArrayBuffer)>($r1);

     label2:
        $i1 = -1;

        if $i0 != $i1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean eof> = $z0;

        r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean used> = 1;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r0;
        org.apache.james.mime4j.io.LineReaderInputStream $r3;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[LineReaderInputStreamAdaptor: ");

        $r3 = r0.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: org.apache.james.mime4j.io.LineReaderInputStream bis>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
