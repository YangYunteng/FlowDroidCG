public abstract class com.google.common.reflect.Invokable extends com.google.common.reflect.Element implements java.lang.reflect.GenericDeclaration
{

    public void <init>(java.lang.reflect.AccessibleObject)
    {
        java.lang.reflect.AccessibleObject $r1;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 := @parameter0: java.lang.reflect.AccessibleObject;

        specialinvoke r0.<com.google.common.reflect.Element: void <init>(java.lang.reflect.AccessibleObject)>($r1);

        return;
    }

    public static com.google.common.reflect.Invokable 'from'(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor $r0;
        com.google.common.reflect.Invokable$ConstructorInvokable $r1;

        $r0 := @parameter0: java.lang.reflect.Constructor;

        $r1 = new com.google.common.reflect.Invokable$ConstructorInvokable;

        specialinvoke $r1.<com.google.common.reflect.Invokable$ConstructorInvokable: void <init>(java.lang.reflect.Constructor)>($r0);

        return $r1;
    }

    public static com.google.common.reflect.Invokable 'from'(java.lang.reflect.Method)
    {
        com.google.common.reflect.Invokable$MethodInvokable $r1;
        java.lang.reflect.Method $r0;

        $r0 := @parameter0: java.lang.reflect.Method;

        $r1 = new com.google.common.reflect.Invokable$MethodInvokable;

        specialinvoke $r1.<com.google.common.reflect.Invokable$MethodInvokable: void <init>(java.lang.reflect.Method)>($r0);

        return $r1;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.reflect.Element: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public final java.lang.Class getDeclaringClass()
    {
        java.lang.Class $r1;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = specialinvoke r0.<com.google.common.reflect.Element: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public final com.google.common.collect.ImmutableList getExceptionTypes()
    {
        com.google.common.reflect.TypeToken $r4;
        com.google.common.collect.ImmutableList $r5;
        java.lang.reflect.Type $r3;
        com.google.common.reflect.Invokable r0;
        int $i0, $i1;
        java.lang.reflect.Type[] $r2;
        com.google.common.collect.ImmutableList$Builder $r1;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        $r2 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.reflect.Type[] getGenericExceptionTypes()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r3);

        virtualinvoke $r1.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r1.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r5;
    }

    public abstract java.lang.reflect.Type[] getGenericExceptionTypes();

    public abstract java.lang.reflect.Type[] getGenericParameterTypes();

    public abstract java.lang.reflect.Type getGenericReturnType();

    public com.google.common.reflect.TypeToken getOwnerType()
    {
        java.lang.Class $r1;
        com.google.common.reflect.TypeToken $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Class getDeclaringClass()>();

        $r2 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.Class)>($r1);

        return $r2;
    }

    public abstract java.lang.'annotation'.Annotation[][] getParameterAnnotations();

    public final com.google.common.collect.ImmutableList getParameters()
    {
        java.lang.'annotation'.Annotation[][] $r3;
        com.google.common.reflect.Parameter $r5;
        java.lang.'annotation'.Annotation[] $r1;
        com.google.common.reflect.TypeToken $r7;
        com.google.common.collect.ImmutableList $r8;
        java.lang.reflect.Type $r6;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Type[] $r2;
        int $i0, $i1;
        com.google.common.collect.ImmutableList$Builder $r4;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r3 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r5 = new com.google.common.reflect.Parameter;

        $r6 = $r2[$i0];

        $r7 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r6);

        $r1 = $r3[$i0];

        specialinvoke $r5.<com.google.common.reflect.Parameter: void <init>(com.google.common.reflect.Invokable,int,com.google.common.reflect.TypeToken,java.lang.'annotation'.Annotation[])>(r0, $i0, $r7, $r1);

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r8;
    }

    public final com.google.common.reflect.TypeToken getReturnType()
    {
        com.google.common.reflect.TypeToken $r2;
        java.lang.reflect.Type $r1;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.reflect.Type getGenericReturnType()>();

        $r2 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r1);

        return $r2;
    }

    public volatile int hashCode()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = specialinvoke r0.<com.google.common.reflect.Element: int hashCode()>();

        return $i0;
    }

    public final transient java.lang.Object invoke(java.lang.Object, java.lang.Object[])
    {
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[])>($r1, $r2);

        return $r1;
    }

    public abstract java.lang.Object invokeInternal(java.lang.Object, java.lang.Object[]);

    public abstract boolean isOverridable();

    public abstract boolean isVarArgs();

    public final com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken)
    {
        com.google.common.reflect.Invokable r0;
        java.lang.StringBuilder $r1;
        com.google.common.reflect.TypeToken $r2, $r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 := @parameter0: com.google.common.reflect.TypeToken;

        $r3 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.TypeToken getReturnType()>();

        $z0 = virtualinvoke $r2.<com.google.common.reflect.TypeToken: boolean isSupertypeOf(com.google.common.reflect.TypeToken)>($r3);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invokable is known to return ");

        $r3 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.TypeToken getReturnType()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public final com.google.common.reflect.Invokable returning(java.lang.Class)
    {
        java.lang.Class $r1;
        com.google.common.reflect.TypeToken $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.Class)>($r1);

        r0 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken)>($r2);

        return r0;
    }

    public volatile java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = specialinvoke r0.<com.google.common.reflect.Element: java.lang.String toString()>();

        return $r1;
    }
}
