public class com.google.android.material.internal.ParcelableSparseArray extends android.util.SparseArray implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;

    static void <clinit>()
    {
        com.google.android.material.internal.ParcelableSparseArray$1 $r0;

        $r0 = new com.google.android.material.internal.ParcelableSparseArray$1;

        specialinvoke $r0.<com.google.android.material.internal.ParcelableSparseArray$1: void <init>()>();

        <com.google.android.material.internal.ParcelableSparseArray: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.internal.ParcelableSparseArray r0;

        r0 := @this: com.google.android.material.internal.ParcelableSparseArray;

        specialinvoke r0.<android.util.SparseArray: void <init>()>();

        return;
    }

    public void <init>(android.os.Parcel, java.lang.ClassLoader)
    {
        com.google.android.material.internal.ParcelableSparseArray r0;
        android.os.Parcelable $r2;
        android.os.Parcel $r3;
        android.os.Parcelable[] $r5;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.ClassLoader $r4;

        r0 := @this: com.google.android.material.internal.ParcelableSparseArray;

        $r3 := @parameter0: android.os.Parcel;

        $r4 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<android.util.SparseArray: void <init>()>();

        $i1 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r1 = newarray (int)[$i1];

        virtualinvoke $r3.<android.os.Parcel: void readIntArray(int[])>($r1);

        $r5 = virtualinvoke $r3.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>($r4);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i0 = $r1[$i2];

        $r2 = $r5[$i2];

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r2);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public int describeContents()
    {
        com.google.android.material.internal.ParcelableSparseArray r0;

        r0 := @this: com.google.android.material.internal.ParcelableSparseArray;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.google.android.material.internal.ParcelableSparseArray r0;
        android.os.Parcelable $r5;
        android.os.Parcel $r1;
        android.os.Parcelable[] $r3;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;

        r0 := @this: com.google.android.material.internal.ParcelableSparseArray;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        $r2 = newarray (int)[$i1];

        $r3 = newarray (android.os.Parcelable)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i3 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>($i2);

        $r2[$i2] = $i3;

        $r4 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r5 = (android.os.Parcelable) $r4;

        $r3[$i2] = $r5;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke $r1.<android.os.Parcel: void writeIntArray(int[])>($r2);

        virtualinvoke $r1.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>($r3, $i0);

        return;
    }
}
