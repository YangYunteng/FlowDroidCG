public final class com.google.common.io.Files$FileByteSource extends com.google.common.io.ByteSource
{
    public final java.io.File file;

    public void <init>(java.io.File)
    {
        com.google.common.io.Files$FileByteSource r0;
        java.io.File $r1;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<com.google.common.io.ByteSource: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.io.Files$FileByteSource: java.io.File file> = $r1;

        return;
    }

    public void <init>(java.io.File, com.google.common.io.Files$1)
    {
        com.google.common.io.Files$FileByteSource r0;
        com.google.common.io.Files$1 $r2;
        java.io.File $r1;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: com.google.common.io.Files$1;

        specialinvoke r0.<com.google.common.io.Files$FileByteSource: void <init>(java.io.File)>($r1);

        return;
    }

    public java.io.FileInputStream openStream()
    {
        com.google.common.io.Files$FileByteSource r0;
        java.io.FileInputStream $r1;
        java.io.File $r2;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 = new java.io.FileInputStream;

        $r2 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r1;
    }

    public volatile java.io.InputStream openStream()
    {
        com.google.common.io.Files$FileByteSource r0;
        java.io.FileInputStream $r1;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 = virtualinvoke r0.<com.google.common.io.Files$FileByteSource: java.io.FileInputStream openStream()>();

        return $r1;
    }

    public byte[] read()
    {
        java.lang.Throwable $r6, $r7;
        byte[] $r5;
        long $l0;
        java.io.FileInputStream $r2;
        java.lang.RuntimeException $r8;
        com.google.common.io.Closer $r1;
        java.io.Closeable $r3;
        com.google.common.io.Files$FileByteSource r0;
        java.nio.channels.FileChannel $r4;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.common.io.Files$FileByteSource: java.io.FileInputStream openStream()>();

        $r3 = virtualinvoke $r1.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r2);

        $r2 = (java.io.FileInputStream) $r3;

        $r4 = virtualinvoke $r2.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $l0 = virtualinvoke $r4.<java.nio.channels.FileChannel: long size()>();

        $r5 = staticinvoke <com.google.common.io.Files: byte[] readFile(java.io.InputStream,long)>($r2, $l0);

     label2:
        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        return $r5;

     label3:
        $r6 := @caughtexception;

        goto label6;

     label4:
        $r7 := @caughtexception;

     label5:
        $r8 = virtualinvoke $r1.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r7);

        throw $r8;

     label6:
        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public long size()
    {
        com.google.common.io.Files$FileByteSource r0;
        long $l0;
        java.lang.String $r3;
        java.io.File $r1;
        java.io.FileNotFoundException $r2;
        boolean $z0;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;

     label1:
        $r2 = new java.io.FileNotFoundException;

        $r1 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    public com.google.common.base.Optional sizeIfKnown()
    {
        java.lang.Long $r2;
        com.google.common.base.Optional $r3;
        com.google.common.io.Files$FileByteSource r0;
        long $l0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r1 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r2);

        return $r3;

     label1:
        $r3 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        com.google.common.io.Files$FileByteSource r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        java.io.File $r3;

        r0 := @this: com.google.common.io.Files$FileByteSource;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Files.asByteSource(");

        $r3 = r0.<com.google.common.io.Files$FileByteSource: java.io.File file>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
