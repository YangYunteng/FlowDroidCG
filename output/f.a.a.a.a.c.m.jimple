public abstract class f.a.a.a.a.c.m extends f.a.a.a.a.c.e implements f.a.a.a.a.c.h, f.a.a.a.a.c.p, f.a.a.a.a.c.t, f.a.a.a.a.c.g
{
    public final f.a.a.a.a.c.r o;

    public void <init>()
    {
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.r $r1;

        r0 := @this: f.a.a.a.a.c.m;

        specialinvoke r0.<f.a.a.a.a.c.e: void <init>()>();

        $r1 = new f.a.a.a.a.c.r;

        specialinvoke $r1.<f.a.a.a.a.c.r: void <init>()>();

        r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.r o> = $r1;

        return;
    }

    public void a(f.a.a.a.a.c.t)
    {
        f.a.a.a.a.c.m r0;
        java.lang.IllegalStateException $r6;
        f.a.a.a.a.c.e$d $r1, $r3;
        f.a.a.a.a.c.h $r4;
        f.a.a.a.a.c.t $r2;
        f.a.a.a.a.c.p $r5;

        r0 := @this: f.a.a.a.a.c.m;

        $r2 := @parameter0: f.a.a.a.a.c.t;

        $r3 = virtualinvoke r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d a()>();

        $r1 = <f.a.a.a.a.c.e$d: f.a.a.a.a.c.e$d a>;

        if $r3 != $r1 goto label1;

        $r4 = virtualinvoke r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.h d()>();

        $r5 = (f.a.a.a.a.c.p) $r4;

        $r4 = (f.a.a.a.a.c.h) $r5;

        interfaceinvoke $r4.<f.a.a.a.a.c.h: void addDependency(java.lang.Object)>($r2);

        return;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must not add Dependency after task is running");

        throw $r6;
    }

    public final transient void a(java.util.concurrent.ExecutorService, java.lang.Object[])
    {
        f.a.a.a.a.c.m r0;
        java.lang.Object[] $r2;
        f.a.a.a.a.c.m$a $r3;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 := @parameter0: java.util.concurrent.ExecutorService;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = new f.a.a.a.a.c.m$a;

        specialinvoke $r3.<f.a.a.a.a.c.m$a: void <init>(java.util.concurrent.Executor,f.a.a.a.a.c.m)>($r1, r0);

        specialinvoke r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e a(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

        return;
    }

    public volatile void addDependency(java.lang.Object)
    {
        f.a.a.a.a.c.m r0;
        java.lang.Object $r1;
        f.a.a.a.a.c.t $r2;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (f.a.a.a.a.c.t) $r1;

        virtualinvoke r0.<f.a.a.a.a.c.m: void a(f.a.a.a.a.c.t)>($r2);

        return;
    }

    public boolean areDependenciesMet()
    {
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.p $r2;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.h d()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r1 = (f.a.a.a.a.c.h) $r2;

        $z0 = interfaceinvoke $r1.<f.a.a.a.a.c.h: boolean areDependenciesMet()>();

        return $z0;
    }

    public int compareTo(java.lang.Object)
    {
        int $i0;
        f.a.a.a.a.c.m r0;
        java.lang.Object $r1;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <f.a.a.a.a.c.k: int a(f.a.a.a.a.c.p,java.lang.Object)>(r0, $r1);

        return $i0;
    }

    public f.a.a.a.a.c.h d()
    {
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.r r1;

        r0 := @this: f.a.a.a.a.c.m;

        r1 = r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.r o>;

        return r1;
    }

    public java.util.Collection getDependencies()
    {
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.h $r1;
        java.util.Collection $r3;
        f.a.a.a.a.c.p $r2;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.h d()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r1 = (f.a.a.a.a.c.h) $r2;

        $r3 = interfaceinvoke $r1.<f.a.a.a.a.c.h: java.util.Collection getDependencies()>();

        return $r3;
    }

    public boolean isFinished()
    {
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.t $r3;
        f.a.a.a.a.c.p $r2;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.h d()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r3 = (f.a.a.a.a.c.t) $r2;

        $z0 = interfaceinvoke $r3.<f.a.a.a.a.c.t: boolean isFinished()>();

        return $z0;
    }

    public void setError(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.h $r2;
        f.a.a.a.a.c.t $r4;
        f.a.a.a.a.c.p $r3;

        r0 := @this: f.a.a.a.a.c.m;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.h d()>();

        $r3 = (f.a.a.a.a.c.p) $r2;

        $r4 = (f.a.a.a.a.c.t) $r3;

        interfaceinvoke $r4.<f.a.a.a.a.c.t: void setError(java.lang.Throwable)>($r1);

        return;
    }

    public void setFinished(boolean)
    {
        f.a.a.a.a.c.m r0;
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.t $r3;
        f.a.a.a.a.c.p $r2;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.m;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.m: f.a.a.a.a.c.h d()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r3 = (f.a.a.a.a.c.t) $r2;

        interfaceinvoke $r3.<f.a.a.a.a.c.t: void setFinished(boolean)>($z0);

        return;
    }
}
