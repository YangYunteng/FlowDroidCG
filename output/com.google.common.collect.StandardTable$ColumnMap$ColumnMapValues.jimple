public class com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues extends com.google.common.collect.Maps$Values
{
    public final com.google.common.collect.StandardTable$ColumnMap this$1;

    public void <init>(com.google.common.collect.StandardTable$ColumnMap)
    {
        com.google.common.collect.StandardTable$ColumnMap $r1;
        com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues r0;

        r0 := @this: com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues;

        $r1 := @parameter0: com.google.common.collect.StandardTable$ColumnMap;

        r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1> = $r1;

        specialinvoke r0.<com.google.common.collect.Maps$Values: void <init>(java.util.Map)>($r1);

        return;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues r0;
        java.util.Set $r3;
        com.google.common.collect.StandardTable$ColumnMap $r2;
        com.google.common.collect.StandardTable $r8;
        java.util.Map $r7;
        java.lang.Object $r1, $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.Maps$ViewCachingAbstractMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.util.Map) $r5;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r8 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        $r1 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <com.google.common.collect.StandardTable: java.util.Map access$900(com.google.common.collect.StandardTable,java.lang.Object)>($r8, $r1);

        return 1;

     label2:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Iterator $r5;
        com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues r0;
        java.util.Collection $r1;
        java.util.Set $r4;
        java.util.ArrayList $r6;
        com.google.common.collect.StandardTable$ColumnMap $r2;
        com.google.common.collect.StandardTable $r3;
        java.util.Map $r8;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.StandardTable: java.util.Set columnKeySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r5);

        $r5 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        $r8 = virtualinvoke $r3.<com.google.common.collect.StandardTable: java.util.Map column(java.lang.Object)>($r7);

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z1 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        staticinvoke <com.google.common.collect.StandardTable: java.util.Map access$900(com.google.common.collect.StandardTable,java.lang.Object)>($r3, $r7);

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Iterator $r5;
        com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues r0;
        java.util.Collection $r1;
        java.util.Set $r4;
        java.util.ArrayList $r6;
        com.google.common.collect.StandardTable$ColumnMap $r2;
        com.google.common.collect.StandardTable $r3;
        java.util.Map $r8;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.StandardTable: java.util.Set columnKeySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r5);

        $r5 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        $r8 = virtualinvoke $r3.<com.google.common.collect.StandardTable: java.util.Map column(java.lang.Object)>($r7);

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z1 != 0 goto label1;

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues: com.google.common.collect.StandardTable$ColumnMap this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$ColumnMap: com.google.common.collect.StandardTable this$0>;

        staticinvoke <com.google.common.collect.StandardTable: java.util.Map access$900(com.google.common.collect.StandardTable,java.lang.Object)>($r3, $r7);

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }
}
