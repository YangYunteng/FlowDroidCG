public class com.google.common.collect.Maps$Accumulator extends java.lang.Object
{
    public java.util.EnumMap map;
    public final java.util.function.BinaryOperator mergeFunction;

    public void <init>(java.util.function.BinaryOperator)
    {
        com.google.common.collect.Maps$Accumulator r0;
        java.util.function.BinaryOperator $r1;

        r0 := @this: com.google.common.collect.Maps$Accumulator;

        $r1 := @parameter0: java.util.function.BinaryOperator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map> = null;

        r0.<com.google.common.collect.Maps$Accumulator: java.util.function.BinaryOperator mergeFunction> = $r1;

        return;
    }

    public com.google.common.collect.Maps$Accumulator combine(com.google.common.collect.Maps$Accumulator)
    {
        java.util.EnumMap $r2;
        c.i.b.c._b $r3;
        com.google.common.collect.Maps$Accumulator r0, $r1;

        r0 := @this: com.google.common.collect.Maps$Accumulator;

        $r1 := @parameter0: com.google.common.collect.Maps$Accumulator;

        $r2 = r0.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map>;

        if $r2 != null goto label1;

        return $r1;

     label1:
        $r2 = $r1.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map>;

        if $r2 != null goto label2;

        return r0;

     label2:
        $r3 = new c.i.b.c._b;

        specialinvoke $r3.<c.i.b.c._b: void <init>(com.google.common.collect.Maps$Accumulator)>(r0);

        virtualinvoke $r2.<java.util.EnumMap: void forEach(java.util.function.BiConsumer)>($r3);

        return r0;
    }

    public void put(java.lang.Enum, java.lang.Object)
    {
        java.lang.Enum $r1;
        java.util.EnumMap $r4;
        java.lang.Object $r2;
        java.lang.Class $r3;
        com.google.common.collect.Maps$Accumulator r0;
        java.util.function.BinaryOperator $r5;

        r0 := @this: com.google.common.collect.Maps$Accumulator;

        $r1 := @parameter0: java.lang.Enum;

        $r2 := @parameter1: java.lang.Object;

        $r4 = r0.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map>;

        if $r4 != null goto label1;

        $r4 = new java.util.EnumMap;

        $r3 = virtualinvoke $r1.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        specialinvoke $r4.<java.util.EnumMap: void <init>(java.lang.Class)>($r3);

        r0.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map> = $r4;

     label1:
        $r4 = r0.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map>;

        $r5 = r0.<com.google.common.collect.Maps$Accumulator: java.util.function.BinaryOperator mergeFunction>;

        virtualinvoke $r4.<java.util.EnumMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>($r1, $r2, $r5);

        return;
    }

    public com.google.common.collect.ImmutableMap toImmutableMap()
    {
        com.google.common.collect.Maps$Accumulator r0;
        java.util.EnumMap $r1;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.Maps$Accumulator;

        $r1 = r0.<com.google.common.collect.Maps$Accumulator: java.util.EnumMap map>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r2;

     label1:
        $r2 = staticinvoke <com.google.common.collect.ImmutableEnumMap: com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap)>($r1);

        return $r2;
    }
}
