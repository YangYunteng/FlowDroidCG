public class com.google.common.base.Joiner extends java.lang.Object
{
    public final java.lang.String separator;

    public void <init>(com.google.common.base.Joiner)
    {
        java.lang.String $r2;
        com.google.common.base.Joiner r0, $r1;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: com.google.common.base.Joiner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<com.google.common.base.Joiner: java.lang.String separator>;

        r0.<com.google.common.base.Joiner: java.lang.String separator> = $r2;

        return;
    }

    public void <init>(com.google.common.base.Joiner, com.google.common.base.Joiner$1)
    {
        com.google.common.base.Joiner$1 $r2;
        com.google.common.base.Joiner r0, $r1;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: com.google.common.base.Joiner;

        $r2 := @parameter1: com.google.common.base.Joiner$1;

        specialinvoke r0.<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner)>($r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.base.Joiner: java.lang.String separator> = $r1;

        return;
    }

    public static java.lang.String access$100(com.google.common.base.Joiner)
    {
        java.lang.String r1;
        com.google.common.base.Joiner $r0;

        $r0 := @parameter0: com.google.common.base.Joiner;

        r1 = $r0.<com.google.common.base.Joiner: java.lang.String separator>;

        return r1;
    }

    public static java.lang.Iterable iterable(java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.lang.Object $r0, $r1;
        com.google.common.base.Joiner$3 $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r3 = new com.google.common.base.Joiner$3;

        specialinvoke $r3.<com.google.common.base.Joiner$3: void <init>(java.lang.Object[],java.lang.Object,java.lang.Object)>($r2, $r0, $r1);

        return $r3;
    }

    public static com.google.common.base.Joiner on(char)
    {
        char $c0;
        java.lang.String $r1;
        com.google.common.base.Joiner $r0;

        $c0 := @parameter0: char;

        $r0 = new com.google.common.base.Joiner;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        specialinvoke $r0.<com.google.common.base.Joiner: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    public static com.google.common.base.Joiner on(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.base.Joiner $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.google.common.base.Joiner;

        specialinvoke $r1.<com.google.common.base.Joiner: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.lang.Iterable)
    {
        java.util.Iterator $r3;
        java.lang.Appendable $r1;
        java.lang.Iterable $r2;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>($r1, $r3);

        return $r1;
    }

    public final transient java.lang.Appendable appendTo(java.lang.Appendable, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.lang.Appendable $r3;
        java.lang.Object $r1, $r4;
        java.lang.Iterable $r5;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r3 := @parameter0: java.lang.Appendable;

        $r4 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object[];

        $r5 = staticinvoke <com.google.common.base.Joiner: java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[])>($r4, $r1, $r2);

        $r3 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable)>($r3, $r5);

        return $r3;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Iterator)
    {
        java.util.Iterator $r2;
        java.lang.CharSequence $r4;
        java.lang.Appendable $r1;
        java.lang.Object $r3;
        java.lang.String $r5;
        com.google.common.base.Joiner r0;
        boolean $z0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: java.util.Iterator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.google.common.base.Joiner: java.lang.String separator>;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    public final java.lang.Appendable appendTo(java.lang.Appendable, java.lang.Object[])
    {
        java.util.List $r3;
        java.lang.Object[] $r2;
        java.lang.Appendable $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable)>($r1, $r3);

        return $r1;
    }

    public final java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable)
    {
        java.util.Iterator $r3;
        java.lang.StringBuilder $r1;
        java.lang.Iterable $r2;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>($r1, $r3);

        return $r1;
    }

    public final transient java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.lang.Object $r1, $r4;
        java.lang.StringBuilder $r3;
        java.lang.Iterable $r5;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r3 := @parameter0: java.lang.StringBuilder;

        $r4 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: java.lang.Object[];

        $r5 = staticinvoke <com.google.common.base.Joiner: java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[])>($r4, $r1, $r2);

        $r3 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable)>($r3, $r5);

        return $r3;
    }

    public final java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator)
    {
        java.util.Iterator $r2;
        java.lang.StringBuilder $r1;
        java.io.IOException $r3;
        java.lang.AssertionError $r4;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.util.Iterator;

     label1:
        virtualinvoke r0.<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>($r1, $r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object[])
    {
        java.util.List $r3;
        java.lang.Object[] $r2;
        java.lang.StringBuilder $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable)>($r1, $r3);

        return $r1;
    }

    public final java.lang.String join(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.String $r3;
        java.lang.Iterable $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.String join(java.util.Iterator)>($r2);

        return $r3;
    }

    public final transient java.lang.String join(java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.lang.Object $r1, $r3;
        java.lang.String $r5;
        java.lang.Iterable $r4;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object[];

        $r4 = staticinvoke <com.google.common.base.Joiner: java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[])>($r3, $r1, $r2);

        $r5 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r4);

        return $r5;
    }

    public final java.lang.String join(java.util.Iterator)
    {
        java.util.Iterator $r2;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r2 := @parameter0: java.util.Iterator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>($r1, $r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final java.lang.String join(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r1;
        java.lang.String $r3;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r3 = virtualinvoke r0.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r2);

        return $r3;
    }

    public com.google.common.base.Joiner skipNulls()
    {
        com.google.common.base.Joiner$2 $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 = new com.google.common.base.Joiner$2;

        specialinvoke $r1.<com.google.common.base.Joiner$2: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner)>(r0, r0);

        return $r1;
    }

    public java.lang.CharSequence toString(java.lang.Object)
    {
        java.lang.CharSequence $r3;
        java.lang.Object $r2;
        java.lang.String $r1;
        com.google.common.base.Joiner r0;
        boolean $z0;

        r0 := @this: com.google.common.base.Joiner;

        $r2 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $z0 = $r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public com.google.common.base.Joiner useForNull(java.lang.String)
    {
        com.google.common.base.Joiner$1 $r2;
        java.lang.String $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = new com.google.common.base.Joiner$1;

        specialinvoke $r2.<com.google.common.base.Joiner$1: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner,java.lang.String)>(r0, r0, $r1);

        return $r2;
    }

    public com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(char)
    {
        char $c0;
        com.google.common.base.Joiner$MapJoiner $r2;
        java.lang.String $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r2 = virtualinvoke r0.<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>($r1);

        return $r2;
    }

    public com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)
    {
        com.google.common.base.Joiner$MapJoiner $r2;
        java.lang.String $r1;
        com.google.common.base.Joiner r0;

        r0 := @this: com.google.common.base.Joiner;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.google.common.base.Joiner$MapJoiner;

        specialinvoke $r2.<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String,com.google.common.base.Joiner$1)>(r0, $r1, null);

        return $r2;
    }
}
