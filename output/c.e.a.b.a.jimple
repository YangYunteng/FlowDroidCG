public class c.e.a.b.a extends java.lang.Object
{
    public int a;
    public boolean b;
    public boolean c;

    public void <init>()
    {
        c.e.a.b.a r0;

        r0 := @this: c.e.a.b.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(org.json.JSONObject, java.lang.String)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r1;
        java.lang.Object $r2;
        java.lang.String $r0;
        boolean $z0;

        $r1 := @parameter0: org.json.JSONObject;

        $r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>($r0);

        if $z0 == 0 goto label4;

     label1:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

     label4:
        return "";

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.lang.String a(org.json.JSONObject, java.lang.String, java.lang.String)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r2 := @parameter0: org.json.JSONObject;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

     label1:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $r2 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r1);

        $r0 = staticinvoke <c.e.a.b.a: java.lang.String a(org.json.JSONObject,java.lang.String)>($r2, $r0);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

     label6:
        return "false";

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public static java.lang.String b(org.json.JSONObject, java.lang.String, java.lang.String)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.String;

     label1:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>($r0);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r0);

        $r2 = staticinvoke <c.e.a.b.a: java.lang.String a(org.json.JSONObject,java.lang.String)>($r1, $r2);

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

     label6:
        $r2 = "0";

     label7:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label8;

        return $r2;

     label8:
        return "0";

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public int a()
    {
        int $i0;
        c.e.a.b.a r0;

        r0 := @this: c.e.a.b.a;

        $i0 = r0.<c.e.a.b.a: int a>;

        if $i0 != 0 goto label1;

        r0.<c.e.a.b.a: int a> = 3;

     label1:
        $i0 = r0.<c.e.a.b.a: int a>;

        return $i0;
    }

    public void a(java.lang.String)
    {
        java.lang.Integer $r4;
        java.lang.Exception $r5;
        org.json.JSONException $r6;
        org.json.JSONObject $r2;
        int $i0;
        java.lang.Boolean $r3;
        c.e.a.b.a r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: c.e.a.b.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.json.JSONObject;

     label1:
        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("appsettings");

        $r1 = staticinvoke <c.e.a.b.a: java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String)>($r2, "depExperience", "config");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        r0.<c.e.a.b.a: boolean b> = $z0;

     label3:
        $r1 = staticinvoke <c.e.a.b.a: java.lang.String b(org.json.JSONObject,java.lang.String,java.lang.String)>($r2, "appsettingsThresholdLimit", "config");

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label4:
        r0.<c.e.a.b.a: int a> = $i0;

     label5:
        $r1 = staticinvoke <c.e.a.b.a: java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String)>($r2, "icePrefetchSvcCall", "ice");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label6:
        r0.<c.e.a.b.a: boolean c> = $z0;

     label7:
        return;

     label8:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke $r6.<org.json.JSONException: void printStackTrace()>();

        return;

        catch org.json.JSONException from label1 to label2 with label9;
        catch org.json.JSONException from label3 to label4 with label9;
        catch org.json.JSONException from label5 to label6 with label9;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    public boolean b()
    {
        c.e.a.b.a r0;
        boolean z0;

        r0 := @this: c.e.a.b.a;

        z0 = r0.<c.e.a.b.a: boolean c>;

        return z0;
    }
}
