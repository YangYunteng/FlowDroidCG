public class com.google.common.collect.TreeBasedTable$TreeRow extends com.google.common.collect.StandardTable$Row implements java.util.SortedMap
{
    public final java.lang.Object lowerBound;
    public final com.google.common.collect.TreeBasedTable this$0;
    public final java.lang.Object upperBound;
    public transient java.util.SortedMap wholeRow;

    public void <init>(com.google.common.collect.TreeBasedTable, java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.lang.Object $r2;
        com.google.common.collect.TreeBasedTable $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 := @parameter0: com.google.common.collect.TreeBasedTable;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, null, null);

        return;
    }

    public void <init>(com.google.common.collect.TreeBasedTable, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        int $i0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.TreeBasedTable $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r4 := @parameter0: com.google.common.collect.TreeBasedTable;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0> = $r4;

        specialinvoke r0.<com.google.common.collect.StandardTable$Row: void <init>(com.google.common.collect.StandardTable,java.lang.Object)>($r4, $r1);

        r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object lowerBound> = $r2;

        r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object upperBound> = $r3;

        if $r2 == null goto label2;

        if $r3 == null goto label2;

        $i0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: int compare(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $i0 > 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        return;
    }

    public volatile java.util.Map backingRowMap()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap backingRowMap()>();

        return $r1;
    }

    public java.util.SortedMap backingRowMap()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.SortedMap $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable$Row: java.util.Map backingRowMap()>();

        $r2 = (java.util.SortedMap) $r1;

        return $r2;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.Comparator $r1;
        com.google.common.collect.TreeBasedTable $r2;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.TreeBasedTable: java.util.Comparator columnComparator()>();

        return $r1;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.util.Comparator $r3;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.Comparator comparator()>();

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $i0;
    }

    public volatile java.util.Map computeBackingRowMap()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap computeBackingRowMap()>();

        return $r1;
    }

    public java.util.SortedMap computeBackingRowMap()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.lang.Object $r3;
        java.util.SortedMap $r1, $r2;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow()>();

        $r2 = $r1;

        if $r1 == null goto label2;

        $r3 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object lowerBound>;

        if $r3 == null goto label1;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>($r3);

     label1:
        $r3 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object upperBound>;

        if $r3 == null goto label3;

        $r1 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>($r3);

        return $r1;

     label2:
        return null;

     label3:
        return $r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: boolean rangeContains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<com.google.common.collect.StandardTable$Row: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object firstKey()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap backingRowMap()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap backingRowMap()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object firstKey()>();

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0, $r5;
        java.lang.Object $r1, $r3, $r4;
        com.google.common.collect.TreeBasedTable $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: boolean rangeContains(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r5 = new com.google.common.collect.TreeBasedTable$TreeRow;

        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r3 = r0.<com.google.common.collect.StandardTable$Row: java.lang.Object rowKey>;

        $r4 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object lowerBound>;

        specialinvoke $r5.<com.google.common.collect.TreeBasedTable$TreeRow: void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r1);

        return $r5;
    }

    public volatile java.util.Set keySet()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedSet keySet()>();

        return $r1;
    }

    public java.util.SortedSet keySet()
    {
        com.google.common.collect.Maps$SortedKeySet $r1;
        com.google.common.collect.TreeBasedTable$TreeRow r0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = new com.google.common.collect.Maps$SortedKeySet;

        specialinvoke $r1.<com.google.common.collect.Maps$SortedKeySet: void <init>(java.util.SortedMap)>(r0);

        return $r1;
    }

    public java.lang.Object lastKey()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap backingRowMap()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap backingRowMap()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object lastKey()>();

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public void maintainEmptyInvariant()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.Map $r4;
        java.lang.Object $r1;
        java.util.SortedMap $r2;
        com.google.common.collect.TreeBasedTable $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r2 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow()>();

        if $r2 == null goto label1;

        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow>;

        $z0 = interfaceinvoke $r2.<java.util.SortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r4 = $r3.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r1 = r0.<com.google.common.collect.StandardTable$Row: java.lang.Object rowKey>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow> = null;

        r0.<com.google.common.collect.StandardTable$Row: java.util.Map backingRowMap> = null;

     label1:
        return;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $z0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: boolean rangeContains(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r2 = specialinvoke r0.<com.google.common.collect.StandardTable$Row: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r2;
    }

    public boolean rangeContains(java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label3;

        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object lowerBound>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $i0 > 0 goto label3;

     label1:
        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object upperBound>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $i0 <= 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0, $r5;
        java.lang.Object $r1, $r2, $r4;
        com.google.common.collect.TreeBasedTable $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: boolean rangeContains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $z0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: boolean rangeContains(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r5 = new com.google.common.collect.TreeBasedTable$TreeRow;

        $r3 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r4 = r0.<com.google.common.collect.StandardTable$Row: java.lang.Object rowKey>;

        specialinvoke $r5.<com.google.common.collect.TreeBasedTable$TreeRow: void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r1, $r2);

        return $r5;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0, $r5;
        java.lang.Object $r1, $r3, $r4;
        com.google.common.collect.TreeBasedTable $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = virtualinvoke r0.<com.google.common.collect.TreeBasedTable$TreeRow: boolean rangeContains(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r5 = new com.google.common.collect.TreeBasedTable$TreeRow;

        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r3 = r0.<com.google.common.collect.StandardTable$Row: java.lang.Object rowKey>;

        $r4 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.lang.Object upperBound>;

        specialinvoke $r5.<com.google.common.collect.TreeBasedTable$TreeRow: void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r1, $r4);

        return $r5;
    }

    public java.util.SortedMap wholeRow()
    {
        com.google.common.collect.TreeBasedTable$TreeRow r0;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.util.SortedMap $r1;
        com.google.common.collect.TreeBasedTable $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeBasedTable$TreeRow;

        $r1 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow>;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.SortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = r0.<com.google.common.collect.StandardTable$Row: java.lang.Object rowKey>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: com.google.common.collect.TreeBasedTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = r0.<com.google.common.collect.StandardTable$Row: java.lang.Object rowKey>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r1 = (java.util.SortedMap) $r4;

        r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow> = $r1;

     label2:
        $r1 = r0.<com.google.common.collect.TreeBasedTable$TreeRow: java.util.SortedMap wholeRow>;

        return $r1;
    }
}
