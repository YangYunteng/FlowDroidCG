public class com.google.android.material.switchmaterial.SwitchMaterial extends androidx.appcompat.widget.SwitchCompat
{
    public static final int DEF_STYLE_RES;
    public static final int[][] ENABLED_CHECKED_STATES;
    public final com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider;
    public android.content.res.ColorStateList materialThemeColorsThumbTintList;
    public android.content.res.ColorStateList materialThemeColorsTrackTintList;
    public boolean useMaterialThemeColors;

    static void <clinit>()
    {
        int $i0;
        int[][] $r0;
        int[] $r1;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_CompoundButton_Switch>;

        <com.google.android.material.switchmaterial.SwitchMaterial: int DEF_STYLE_RES> = $i0;

        $r0 = newarray (int[])[4];

        $r1 = newarray (int)[2];

        $r1[0] = 16842910;

        $r1[1] = 16842912;

        $r0[0] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842910;

        $r1[1] = -16842912;

        $r0[1] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = -16842910;

        $r1[1] = 16842912;

        $r0[2] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = -16842910;

        $r1[1] = -16842912;

        $r0[3] = $r1;

        <com.google.android.material.switchmaterial.SwitchMaterial: int[][] ENABLED_CHECKED_STATES> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.switchmaterial.SwitchMaterial r0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.switchmaterial.SwitchMaterial: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        int $i0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int switchStyle>;

        specialinvoke r0.<com.google.android.material.switchmaterial.SwitchMaterial: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r3;
        android.content.res.TypedArray $r6;
        android.util.AttributeSet $r4;
        int[] $r1, $r2;
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        int $i0, $i1;
        com.google.android.material.elevation.ElevationOverlayProvider $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.switchmaterial.SwitchMaterial: int DEF_STYLE_RES>;

        $r3 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r3, $r4, $i1, $i0);

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r4, $i1);

        $r3 = virtualinvoke r0.<android.widget.CompoundButton: android.content.Context getContext()>();

        $r5 = new com.google.android.material.elevation.ElevationOverlayProvider;

        specialinvoke $r5.<com.google.android.material.elevation.ElevationOverlayProvider: void <init>(android.content.Context)>($r3);

        r0.<com.google.android.material.switchmaterial.SwitchMaterial: com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider> = $r5;

        $r1 = <com.google.android.material.R$styleable: int[] SwitchMaterial>;

        $i0 = <com.google.android.material.switchmaterial.SwitchMaterial: int DEF_STYLE_RES>;

        $r2 = newarray (int)[0];

        $r6 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r3, $r4, $r1, $i1, $i0, $r2);

        $i1 = <com.google.android.material.R$styleable: int SwitchMaterial_useMaterialThemeColors>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.switchmaterial.SwitchMaterial: boolean useMaterialThemeColors> = $z0;

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private android.content.res.ColorStateList getMaterialThemeColorsThumbTintList()
    {
        int[][] $r4;
        android.content.res.ColorStateList $r1;
        int[] $r5;
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        int $i0, $i1, $i2, $i3;
        com.google.android.material.elevation.ElevationOverlayProvider $r3;
        float $f0, $f1;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        $r1 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList materialThemeColorsThumbTintList>;

        if $r1 != null goto label2;

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i0);

        $i1 = <com.google.android.material.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i1);

        $r2 = virtualinvoke r0.<android.widget.CompoundButton: android.content.res.Resources getResources()>();

        $i2 = <com.google.android.material.R$dimen: int mtrl_switch_thumb_elevation>;

        $f0 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i2);

        $f1 = $f0;

        $r3 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider>;

        $z0 = virtualinvoke $r3.<com.google.android.material.elevation.ElevationOverlayProvider: boolean isThemeElevationOverlayEnabled()>();

        if $z0 == 0 goto label1;

        $f1 = staticinvoke <com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)>(r0);

        $f1 = $f0 + $f1;

     label1:
        $r3 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider>;

        $i2 = virtualinvoke $r3.<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlayIfNeeded(int,float)>($i0, $f1);

        $r4 = <com.google.android.material.switchmaterial.SwitchMaterial: int[][] ENABLED_CHECKED_STATES>;

        $i3 = lengthof $r4;

        $r5 = newarray (int)[$i3];

        $i3 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i1, 1.0F);

        $r5[0] = $i3;

        $r5[1] = $i2;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i1, 0.38F);

        $r5[2] = $i0;

        $r5[3] = $i2;

        $r1 = new android.content.res.ColorStateList;

        $r4 = <com.google.android.material.switchmaterial.SwitchMaterial: int[][] ENABLED_CHECKED_STATES>;

        specialinvoke $r1.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r4, $r5);

        r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList materialThemeColorsThumbTintList> = $r1;

     label2:
        $r1 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList materialThemeColorsThumbTintList>;

        return $r1;
    }

    private android.content.res.ColorStateList getMaterialThemeColorsTrackTintList()
    {
        int[][] $r2;
        android.content.res.ColorStateList $r1;
        int[] $r3;
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        $r1 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList materialThemeColorsTrackTintList>;

        if $r1 != null goto label1;

        $r2 = <com.google.android.material.switchmaterial.SwitchMaterial: int[][] ENABLED_CHECKED_STATES>;

        $i0 = lengthof $r2;

        $r3 = newarray (int)[$i0];

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i0);

        $i1 = <com.google.android.material.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i1);

        $i2 = <com.google.android.material.R$attr: int colorOnSurface>;

        $i2 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>(r0, $i2);

        $i3 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i1, 0.54F);

        $r3[0] = $i3;

        $i3 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i2, 0.32F);

        $r3[1] = $i3;

        $i1 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i1, 0.12F);

        $r3[2] = $i1;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i2, 0.12F);

        $r3[3] = $i0;

        $r1 = new android.content.res.ColorStateList;

        $r2 = <com.google.android.material.switchmaterial.SwitchMaterial: int[][] ENABLED_CHECKED_STATES>;

        specialinvoke $r1.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r2, $r3);

        r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList materialThemeColorsTrackTintList> = $r1;

     label1:
        $r1 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList materialThemeColorsTrackTintList>;

        return $r1;
    }

    public boolean isUseMaterialThemeColors()
    {
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        boolean z0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        z0 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: boolean useMaterialThemeColors>;

        return z0;
    }

    public void onAttachedToWindow()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        boolean $z0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        specialinvoke r0.<android.widget.CompoundButton: void onAttachedToWindow()>();

        $z0 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: boolean useMaterialThemeColors>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()>();

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList getMaterialThemeColorsThumbTintList()>();

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)>($r1);

     label1:
        $z0 = r0.<com.google.android.material.switchmaterial.SwitchMaterial: boolean useMaterialThemeColors>;

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()>();

        if $r1 != null goto label2;

        $r1 = specialinvoke r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList getMaterialThemeColorsTrackTintList()>();

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)>($r1);

     label2:
        return;
    }

    public void setUseMaterialThemeColors(boolean)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.switchmaterial.SwitchMaterial r0;
        boolean $z0;

        r0 := @this: com.google.android.material.switchmaterial.SwitchMaterial;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.switchmaterial.SwitchMaterial: boolean useMaterialThemeColors> = $z0;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList getMaterialThemeColorsThumbTintList()>();

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)>($r1);

        $r1 = specialinvoke r0.<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList getMaterialThemeColorsTrackTintList()>();

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)>($r1);

        return;

     label1:
        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)>(null);

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)>(null);

        return;
    }
}
