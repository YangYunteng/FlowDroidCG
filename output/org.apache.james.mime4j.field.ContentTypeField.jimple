public class org.apache.james.mime4j.field.ContentTypeField extends org.apache.james.mime4j.field.AbstractField
{
    public static final java.lang.String PARAM_BOUNDARY;
    public static final java.lang.String PARAM_CHARSET;
    public static final org.apache.james.mime4j.field.FieldParser PARSER;
    public static final java.lang.String TYPE_MESSAGE_RFC822;
    public static final java.lang.String TYPE_MULTIPART_DIGEST;
    public static final java.lang.String TYPE_MULTIPART_PREFIX;
    public static final java.lang.String TYPE_TEXT_PLAIN;
    public static org.apache.commons.logging.Log log;
    public java.lang.String mimeType;
    public java.util.Map parameters;
    public org.apache.james.mime4j.field.contenttype.parser.ParseException parseException;
    public boolean parsed;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;
        org.apache.james.mime4j.field.ContentTypeField$1 $r1;

        <org.apache.james.mime4j.field.ContentTypeField: java.lang.String TYPE_TEXT_PLAIN> = "text/plain";

        <org.apache.james.mime4j.field.ContentTypeField: java.lang.String TYPE_MULTIPART_PREFIX> = "multipart/";

        <org.apache.james.mime4j.field.ContentTypeField: java.lang.String TYPE_MULTIPART_DIGEST> = "multipart/digest";

        <org.apache.james.mime4j.field.ContentTypeField: java.lang.String TYPE_MESSAGE_RFC822> = "message/rfc822";

        <org.apache.james.mime4j.field.ContentTypeField: java.lang.String PARAM_CHARSET> = "charset";

        <org.apache.james.mime4j.field.ContentTypeField: java.lang.String PARAM_BOUNDARY> = "boundary";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/james/mime4j/field/ContentTypeField;");

        <org.apache.james.mime4j.field.ContentTypeField: org.apache.commons.logging.Log log> = $r0;

        $r1 = new org.apache.james.mime4j.field.ContentTypeField$1;

        specialinvoke $r1.<org.apache.james.mime4j.field.ContentTypeField$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.FieldParser PARSER> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.james.mime4j.util.ByteSequence)
    {
        org.apache.james.mime4j.field.ContentTypeField r0;
        org.apache.james.mime4j.util.ByteSequence $r2;
        java.util.HashMap $r4;
        java.lang.String $r1, $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.apache.james.mime4j.util.ByteSequence;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence)>($r3, $r1, $r2);

        r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String mimeType> = "";

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentTypeField: java.util.Map parameters> = $r4;

        return;
    }

    public static java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField)
    {
        int $i0;
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeField $r0;

        $r0 := @parameter0: org.apache.james.mime4j.field.ContentTypeField;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return $r1;

     label1:
        return "us-ascii";
    }

    public static java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField, org.apache.james.mime4j.field.ContentTypeField)
    {
        org.apache.james.mime4j.field.ContentTypeField $r0, $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        $r1 := @parameter0: org.apache.james.mime4j.field.ContentTypeField;

        $r0 := @parameter1: org.apache.james.mime4j.field.ContentTypeField;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<org.apache.james.mime4j.field.ContentTypeField: boolean isMultipart()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getBoundary()>();

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType()>();

        return $r2;

     label2:
        if $r0 == null goto label3;

        $z0 = virtualinvoke $r0.<org.apache.james.mime4j.field.ContentTypeField: boolean isMimeType(java.lang.String)>("multipart/digest");

        if $z0 == 0 goto label3;

        return "message/rfc822";

     label3:
        return "text/plain";
    }

    private void parse()
    {
        org.apache.james.mime4j.field.contenttype.parser.TokenMgrError $r4;
        org.apache.james.mime4j.field.contenttype.parser.ParseException $r7;
        java.util.Map $r12;
        int $i0, $i1;
        java.lang.String $r1, $r8;
        boolean $z0;
        org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser $r2;
        org.apache.james.mime4j.field.ContentTypeField r0;
        java.util.List $r9, $r10;
        java.io.StringReader $r3;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuilder $r6;
        java.lang.Object $r11;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String getBody()>();

        $r2 = new org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser;

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: void <init>(java.io.Reader)>($r3);

     label1:
        virtualinvoke $r2.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: void parseAll()>();

     label2:
        goto label7;

     label3:
        $r4 := @caughtexception;

        $r5 = <org.apache.james.mime4j.field.ContentTypeField: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r5 = <org.apache.james.mime4j.field.ContentTypeField: org.apache.commons.logging.Log log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing value \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r1 = virtualinvoke $r4.<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r1);

     label4:
        $r7 = new org.apache.james.mime4j.field.contenttype.parser.ParseException;

        $r1 = virtualinvoke $r4.<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r7.<org.apache.james.mime4j.field.contenttype.parser.ParseException: void <init>(java.lang.String)>($r1);

        r0.<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException parseException> = $r7;

        goto label7;

     label5:
        $r7 := @caughtexception;

        $r5 = <org.apache.james.mime4j.field.ContentTypeField: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label6;

        $r5 = <org.apache.james.mime4j.field.ContentTypeField: org.apache.commons.logging.Log log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing value \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r1 = virtualinvoke $r7.<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r1);

     label6:
        r0.<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException parseException> = $r7;

     label7:
        $r1 = virtualinvoke $r2.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()>();

        $r8 = virtualinvoke $r2.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()>();

        if $r1 == null goto label9;

        if $r8 == null goto label9;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String mimeType> = $r1;

        $r9 = virtualinvoke $r2.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.List getParamNames()>();

        $r10 = virtualinvoke $r2.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.List getParamValues()>();

        if $r9 == null goto label9;

        if $r10 == null goto label9;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label8:
        if $i1 >= $i0 goto label9;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r1 = (java.lang.String) $r11;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (java.lang.String) $r11;

        $r12 = r0.<org.apache.james.mime4j.field.ContentTypeField: java.util.Map parameters>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

        $i1 = $i1 + 1;

        goto label8;

     label9:
        r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed> = 1;

        return;

        catch org.apache.james.mime4j.field.contenttype.parser.ParseException from label1 to label2 with label5;
        catch org.apache.james.mime4j.field.contenttype.parser.TokenMgrError from label1 to label2 with label3;
    }

    public java.lang.String getBoundary()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeField r0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getParameter(java.lang.String)>("boundary");

        return $r1;
    }

    public java.lang.String getCharset()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeField r0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getParameter(java.lang.String)>("charset");

        return $r1;
    }

    public java.lang.String getMimeType()
    {
        java.lang.String r1;
        org.apache.james.mime4j.field.ContentTypeField r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String mimeType>;

        return r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeField r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeField: java.util.Map parameters>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }

    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentTypeField r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeField: java.util.Map parameters>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r1;
    }

    public volatile org.apache.james.mime4j.field.ParseException getParseException()
    {
        org.apache.james.mime4j.field.ContentTypeField r0;
        org.apache.james.mime4j.field.contenttype.parser.ParseException $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()>();

        return $r1;
    }

    public org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()
    {
        org.apache.james.mime4j.field.ContentTypeField r0;
        boolean $z0;
        org.apache.james.mime4j.field.contenttype.parser.ParseException r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException parseException>;

        return r1;
    }

    public boolean isMimeType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeField r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String mimeType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        return $z0;
    }

    public boolean isMultipart()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeField r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeField;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeField: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeField: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String mimeType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        return $z0;
    }
}
