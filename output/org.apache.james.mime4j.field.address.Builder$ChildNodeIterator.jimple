public class org.apache.james.mime4j.field.address.Builder$ChildNodeIterator extends java.lang.Object implements java.util.Iterator
{
    public int index;
    public int len;
    public org.apache.james.mime4j.field.address.parser.SimpleNode simpleNode;

    public void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)
    {
        int $i0;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r0;
        org.apache.james.mime4j.field.address.parser.SimpleNode $r1;

        r0 := @this: org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.parser.SimpleNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.SimpleNode simpleNode> = $r1;

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.field.address.parser.SimpleNode: int jjtGetNumChildren()>();

        r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: int len> = $i0;

        r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: int index> = 0;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        $i1 = r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: int index>;

        $i0 = r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: int len>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile java.lang.Object next()
    {
        org.apache.james.mime4j.field.address.parser.Node $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node next()>();

        return $r1;
    }

    public org.apache.james.mime4j.field.address.parser.Node next()
    {
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r0;
        int $i0, $i1;
        org.apache.james.mime4j.field.address.parser.Node $r1;
        org.apache.james.mime4j.field.address.parser.SimpleNode $r2;

        r0 := @this: org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        $r2 = r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.SimpleNode simpleNode>;

        $i0 = r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: int index>;

        $i1 = $i0 + 1;

        r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: int index> = $i1;

        $r1 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int)>($i0);

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
