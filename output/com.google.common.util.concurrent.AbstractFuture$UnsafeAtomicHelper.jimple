public final class com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper extends com.google.common.util.concurrent.AbstractFuture$AtomicHelper
{
    public static final long LISTENERS_OFFSET;
    public static final sun.misc.Unsafe UNSAFE;
    public static final long VALUE_OFFSET;
    public static final long WAITERS_OFFSET;
    public static final long WAITER_NEXT_OFFSET;
    public static final long WAITER_THREAD_OFFSET;

    static void <clinit>()
    {
        sun.misc.Unsafe $r1;
        java.lang.Throwable $r9;
        java.security.PrivilegedActionException $r8;
        long $l0;
        java.lang.RuntimeException $r7;
        java.lang.reflect.Field $r5;
        java.lang.Exception $r6;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 $r2;
        java.lang.SecurityException $r0;
        java.lang.Object $r3;
        java.lang.Class $r4;

     label01:
        $r1 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>();

     label02:
        goto label06;

     label03:
        $r2 = new com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1;

     label04:
        specialinvoke $r2.<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: void <init>()>();

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r2);

     label05:
        $r1 = (sun.misc.Unsafe) $r3;

     label06:
        $r4 = class "Lcom/google/common/util/concurrent/AbstractFuture;";

     label07:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("waiters");

        $l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);

     label08:
        <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITERS_OFFSET> = $l0;

     label09:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("listeners");

        $l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);

     label10:
        <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long LISTENERS_OFFSET> = $l0;

     label11:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("value");

        $l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);

     label12:
        <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long VALUE_OFFSET> = $l0;

        $r4 = class "Lcom/google/common/util/concurrent/AbstractFuture$Waiter;";

     label13:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("thread");

        $l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);

     label14:
        <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_THREAD_OFFSET> = $l0;

        $r4 = class "Lcom/google/common/util/concurrent/AbstractFuture$Waiter;";

     label15:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("next");

        $l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);

     label16:
        <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_NEXT_OFFSET> = $l0;

        <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE> = $r1;

        return;

     label17:
        $r6 := @caughtexception;

        staticinvoke <com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>($r6);

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label18:
        $r8 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r8.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not initialize intrinsics", $r9);

        throw $r7;

     label19:
        $r0 := @caughtexception;

        goto label03;

        catch java.lang.SecurityException from label01 to label02 with label19;
        catch java.security.PrivilegedActionException from label04 to label05 with label18;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public void <init>()
    {
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>(null);

        return;
    }

    public void <init>(com.google.common.util.concurrent.AbstractFuture$1)
    {
        com.google.common.util.concurrent.AbstractFuture$1 $r1;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void <init>()>();

        return;
    }

    public boolean casListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener)
    {
        sun.misc.Unsafe $r3;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Listener $r1, $r2;
        long $l0;
        com.google.common.util.concurrent.AbstractFuture $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        $r4 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r1 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Listener;

        $r2 := @parameter2: com.google.common.util.concurrent.AbstractFuture$Listener;

        $r3 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long LISTENERS_OFFSET>;

        $z0 = virtualinvoke $r3.<sun.misc.Unsafe: boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object)>($r4, $l0, $r1, $r2);

        return $z0;
    }

    public boolean casValue(com.google.common.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        sun.misc.Unsafe $r3;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        java.lang.Object $r1, $r2;
        long $l0;
        com.google.common.util.concurrent.AbstractFuture $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        $r4 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long VALUE_OFFSET>;

        $z0 = virtualinvoke $r3.<sun.misc.Unsafe: boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object)>($r4, $l0, $r1, $r2);

        return $z0;
    }

    public boolean casWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        sun.misc.Unsafe $r3;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        long $l0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1, $r2;
        com.google.common.util.concurrent.AbstractFuture $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        $r4 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r1 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter2: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r3 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITERS_OFFSET>;

        $z0 = virtualinvoke $r3.<sun.misc.Unsafe: boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object)>($r4, $l0, $r1, $r2);

        return $z0;
    }

    public void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        sun.misc.Unsafe $r3;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        long $l0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1, $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r3 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_NEXT_OFFSET>;

        virtualinvoke $r3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>($r1, $l0, $r2);

        return;
    }

    public void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread)
    {
        sun.misc.Unsafe $r3;
        com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper r0;
        java.lang.Thread $r2;
        long $l0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter1: java.lang.Thread;

        $r3 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE>;

        $l0 = <com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_THREAD_OFFSET>;

        virtualinvoke $r3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>($r1, $l0, $r2);

        return;
    }
}
