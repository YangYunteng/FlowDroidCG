public class com.google.android.material.internal.ViewUtils extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.material.internal.ViewUtils r0;

        r0 := @this: com.google.android.material.internal.ViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void doOnApplyWindowInsets(android.view.View, android.util.AttributeSet, int, int)
    {
        android.util.AttributeSet $r1;
        int $i0, $i1;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <com.google.android.material.internal.ViewUtils: void doOnApplyWindowInsets(android.view.View,android.util.AttributeSet,int,int,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)>($r0, $r1, $i0, $i1, null);

        return;
    }

    public static void doOnApplyWindowInsets(android.view.View, android.util.AttributeSet, int, int, com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    {
        android.content.Context $r3;
        com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener $r1;
        android.content.res.TypedArray $r5;
        com.google.android.material.internal.ViewUtils$2 $r6;
        android.util.AttributeSet $r2;
        int[] $r4;
        int $i0, $i1;
        android.view.View $r0;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: android.view.View;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 := @parameter4: com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r4 = <com.google.android.material.R$styleable: int[] Insets>;

        $r5 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, $i1);

        $i0 = <com.google.android.material.R$styleable: int Insets_paddingBottomSystemWindowInsets>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $i0 = <com.google.android.material.R$styleable: int Insets_paddingLeftSystemWindowInsets>;

        $z1 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $i0 = <com.google.android.material.R$styleable: int Insets_paddingRightSystemWindowInsets>;

        $z2 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r6 = new com.google.android.material.internal.ViewUtils$2;

        specialinvoke $r6.<com.google.android.material.internal.ViewUtils$2: void <init>(boolean,boolean,boolean,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)>($z0, $z1, $z2, $r1);

        staticinvoke <com.google.android.material.internal.ViewUtils: void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)>($r0, $r6);

        return;
    }

    public static void doOnApplyWindowInsets(android.view.View, com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    {
        com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener $r1;
        com.google.android.material.internal.ViewUtils$3 $r3;
        com.google.android.material.internal.ViewUtils$RelativePadding $r2;
        int $i0, $i1, $i2, $i3;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener;

        $r2 = new com.google.android.material.internal.ViewUtils$RelativePadding;

        $i0 = staticinvoke <b.i.i.y: int u(android.view.View)>($r0);

        $i1 = virtualinvoke $r0.<android.view.View: int getPaddingTop()>();

        $i2 = staticinvoke <b.i.i.y: int t(android.view.View)>($r0);

        $i3 = virtualinvoke $r0.<android.view.View: int getPaddingBottom()>();

        specialinvoke $r2.<com.google.android.material.internal.ViewUtils$RelativePadding: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r3 = new com.google.android.material.internal.ViewUtils$3;

        specialinvoke $r3.<com.google.android.material.internal.ViewUtils$3: void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding)>($r1, $r2);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.q)>($r0, $r3);

        staticinvoke <com.google.android.material.internal.ViewUtils: void requestApplyInsetsWhenAttached(android.view.View)>($r0);

        return;
    }

    public static float dpToPx(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $f0 = (float) $i0;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r2);

        return $f0;
    }

    public static android.view.ViewGroup getContentView(android.view.View)
    {
        android.view.View $r0, $r1, $r2;
        android.view.ViewGroup $r3;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.view.View: android.view.View getRootView()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r3 = (android.view.ViewGroup) $r2;

        if $r3 == null goto label2;

        return $r3;

     label2:
        if $r1 == $r0 goto label3;

        $z0 = $r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        $r3 = (android.view.ViewGroup) $r1;

        return $r3;

     label3:
        return null;
    }

    public static com.google.android.material.internal.ViewOverlayImpl getContentViewOverlay(android.view.View)
    {
        com.google.android.material.internal.ViewOverlayImpl $r2;
        android.view.View $r0;
        android.view.ViewGroup $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = staticinvoke <com.google.android.material.internal.ViewUtils: android.view.ViewGroup getContentView(android.view.View)>($r0);

        $r2 = staticinvoke <com.google.android.material.internal.ViewUtils: com.google.android.material.internal.ViewOverlayImpl getOverlay(android.view.View)>($r1);

        return $r2;
    }

    public static com.google.android.material.internal.ViewOverlayImpl getOverlay(android.view.View)
    {
        int $i0;
        com.google.android.material.internal.ViewOverlayApi14 $r0;
        android.view.View $r1;
        com.google.android.material.internal.ViewOverlayApi18 $r2;

        $r1 := @parameter0: android.view.View;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label2;

        $r2 = new com.google.android.material.internal.ViewOverlayApi18;

        specialinvoke $r2.<com.google.android.material.internal.ViewOverlayApi18: void <init>(android.view.View)>($r1);

        return $r2;

     label2:
        $r0 = staticinvoke <com.google.android.material.internal.ViewOverlayApi14: com.google.android.material.internal.ViewOverlayApi14 createFrom(android.view.View)>($r1);

        return $r0;
    }

    public static float getParentAbsoluteElevation(android.view.View)
    {
        android.view.ViewParent $r1;
        android.view.View $r0;
        float $f0, $f1;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewParent getParent()>();

        $f0 = 0.0F;

     label1:
        $z0 = $r1 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r0 = (android.view.View) $r1;

        $f1 = staticinvoke <b.i.i.y: float l(android.view.View)>($r0);

        $f0 = $f0 + $f1;

        $r1 = interfaceinvoke $r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        return $f0;
    }

    public static boolean isLayoutRtl(android.view.View)
    {
        int $i0;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>($r0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static android.graphics.PorterDuff$Mode parseTintMode(int, android.graphics.PorterDuff$Mode)
    {
        int $i0;
        android.graphics.PorterDuff$Mode $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.PorterDuff$Mode;

        if $i0 == 3 goto label7;

        if $i0 == 5 goto label6;

        if $i0 == 9 goto label5;

        lookupswitch($i0)
        {
            case 14: goto label4;
            case 15: goto label3;
            case 16: goto label2;
            default: goto label1;
        };

     label1:
        return $r0;

     label2:
        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode ADD>;

        return $r0;

     label3:
        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SCREEN>;

        return $r0;

     label4:
        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return $r0;

     label5:
        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        return $r0;

     label6:
        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        return $r0;

     label7:
        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER>;

        return $r0;
    }

    public static void requestApplyInsetsWhenAttached(android.view.View)
    {
        android.view.View $r0;
        com.google.android.material.internal.ViewUtils$4 $r1;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = staticinvoke <b.i.i.y: boolean D(android.view.View)>($r0);

        if $z0 == 0 goto label1;

        staticinvoke <b.i.i.y: void J(android.view.View)>($r0);

        return;

     label1:
        $r1 = new com.google.android.material.internal.ViewUtils$4;

        specialinvoke $r1.<com.google.android.material.internal.ViewUtils$4: void <init>()>();

        virtualinvoke $r0.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r1);

        return;
    }

    public static void requestFocusAndShowKeyboard(android.view.View)
    {
        android.view.View $r0;
        com.google.android.material.internal.ViewUtils$1 $r1;

        $r0 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.View: boolean requestFocus()>();

        $r1 = new com.google.android.material.internal.ViewUtils$1;

        specialinvoke $r1.<com.google.android.material.internal.ViewUtils$1: void <init>(android.view.View)>($r0);

        virtualinvoke $r0.<android.view.View: boolean post(java.lang.Runnable)>($r1);

        return;
    }
}
