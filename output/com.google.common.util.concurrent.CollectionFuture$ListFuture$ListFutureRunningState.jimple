public final class com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState extends com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
{
    public final com.google.common.util.concurrent.CollectionFuture$ListFuture this$0;

    public void <init>(com.google.common.util.concurrent.CollectionFuture$ListFuture, com.google.common.collect.ImmutableCollection, boolean)
    {
        com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState r0;
        com.google.common.util.concurrent.CollectionFuture$ListFuture $r1;
        com.google.common.collect.ImmutableCollection $r2;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState;

        $r1 := @parameter0: com.google.common.util.concurrent.CollectionFuture$ListFuture;

        $r2 := @parameter1: com.google.common.collect.ImmutableCollection;

        $z0 := @parameter2: boolean;

        r0.<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: com.google.common.util.concurrent.CollectionFuture$ListFuture this$0> = $r1;

        specialinvoke r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: void <init>(com.google.common.util.concurrent.CollectionFuture,com.google.common.collect.ImmutableCollection,boolean)>($r1, $r2, $z0);

        return;
    }

    public volatile java.lang.Object combine(java.util.List)
    {
        com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState r0;
        java.util.List $r1;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState;

        $r1 := @parameter0: java.util.List;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState: java.util.List combine(java.util.List)>($r1);

        return $r1;
    }

    public java.util.List combine(java.util.List)
    {
        com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState r0;
        java.util.Iterator $r3;
        java.util.ArrayList $r2;
        java.util.List $r1;
        com.google.common.base.Optional $r5;
        int $i0;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState;

        $r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.common.base.Optional) $r4;

        if $r5 == null goto label2;

        $r4 = virtualinvoke $r5.<com.google.common.base.Optional: java.lang.Object orNull()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label4:
        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r1;
    }
}
