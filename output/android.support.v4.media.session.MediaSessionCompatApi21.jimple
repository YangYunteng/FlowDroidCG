public class android.support.v4.media.session.MediaSessionCompatApi21 extends java.lang.Object
{
    public static final java.lang.String TAG;

    public void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy $r1;
        android.support.v4.media.session.MediaSessionCompatApi21$Callback $r0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi21$Callback;

        $r1 = new android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback)>($r0);

        return $r1;
    }

    public static java.lang.Object createSession(android.content.Context, java.lang.String)
    {
        android.media.session.MediaSession $r2;
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = new android.media.session.MediaSession;

        specialinvoke $r2.<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static android.os.Parcelable getSessionToken(java.lang.Object)
    {
        android.media.session.MediaSession $r2;
        java.lang.Object $r1;
        android.media.session.MediaSession$Token $r0;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.media.session.MediaSession) $r1;

        $r0 = virtualinvoke $r2.<android.media.session.MediaSession: android.media.session.MediaSession$Token getSessionToken()>();

        return $r0;
    }

    public static boolean hasCallback(java.lang.Object)
    {
        java.lang.IllegalAccessException $r1;
        java.lang.NoSuchFieldException $r0;
        java.lang.Object $r2;
        java.lang.Class $r3;
        java.lang.reflect.Field $r4;

        $r2 := @parameter0: java.lang.Object;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mCallback");

     label2:
        if $r4 == null goto label8;

     label3:
        virtualinvoke $r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r2 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r2);

     label4:
        if $r2 == null goto label8;

        return 1;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionCompatApi21", "Failed to get mCallback object.");

        return 0;

     label6:
        $r0 := @caughtexception;

        goto label5;

     label7:
        $r1 := @caughtexception;

        goto label5;

     label8:
        return 0;

        catch java.lang.NoSuchFieldException from label1 to label2 with label6;
        catch java.lang.NoSuchFieldException from label3 to label4 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
    }

    public static boolean isActive(java.lang.Object)
    {
        android.media.session.MediaSession $r1;
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) $r0;

        $z0 = virtualinvoke $r1.<android.media.session.MediaSession: boolean isActive()>();

        return $z0;
    }

    public static void release(java.lang.Object)
    {
        android.media.session.MediaSession $r1;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) $r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void release()>();

        return;
    }

    public static void sendSessionEvent(java.lang.Object, java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaSession $r3;
        android.os.Bundle $r1;
        java.lang.Object $r2;
        java.lang.String $r0;

        $r2 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: android.os.Bundle;

        $r3 = (android.media.session.MediaSession) $r2;

        virtualinvoke $r3.<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>($r0, $r1);

        return;
    }

    public static void setActive(java.lang.Object, boolean)
    {
        android.media.session.MediaSession $r1;
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r1 = (android.media.session.MediaSession) $r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void setActive(boolean)>($z0);

        return;
    }

    public static void setCallback(java.lang.Object, java.lang.Object, android.os.Handler)
    {
        android.media.session.MediaSession $r3;
        android.os.Handler $r0;
        java.lang.Object $r1, $r2;
        android.media.session.MediaSession$Callback $r4;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: android.os.Handler;

        $r3 = (android.media.session.MediaSession) $r1;

        $r4 = (android.media.session.MediaSession$Callback) $r2;

        virtualinvoke $r3.<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession$Callback,android.os.Handler)>($r4, $r0);

        return;
    }

    public static void setExtras(java.lang.Object, android.os.Bundle)
    {
        android.media.session.MediaSession $r2;
        java.lang.Object $r1;
        android.os.Bundle $r0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: android.os.Bundle;

        $r2 = (android.media.session.MediaSession) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setExtras(android.os.Bundle)>($r0);

        return;
    }

    public static void setFlags(java.lang.Object, int)
    {
        int $i0;
        android.media.session.MediaSession $r1;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r1 = (android.media.session.MediaSession) $r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void setFlags(int)>($i0);

        return;
    }

    public static void setMediaButtonReceiver(java.lang.Object, android.app.PendingIntent)
    {
        android.media.session.MediaSession $r2;
        java.lang.Object $r1;
        android.app.PendingIntent $r0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: android.app.PendingIntent;

        $r2 = (android.media.session.MediaSession) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>($r0);

        return;
    }

    public static void setMetadata(java.lang.Object, java.lang.Object)
    {
        android.media.session.MediaSession $r2;
        android.media.MediaMetadata $r3;
        java.lang.Object $r0, $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (android.media.session.MediaSession) $r0;

        $r3 = (android.media.MediaMetadata) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>($r3);

        return;
    }

    public static void setPlaybackState(java.lang.Object, java.lang.Object)
    {
        android.media.session.MediaSession $r2;
        android.media.session.PlaybackState $r3;
        java.lang.Object $r0, $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (android.media.session.MediaSession) $r0;

        $r3 = (android.media.session.PlaybackState) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>($r3);

        return;
    }

    public static void setPlaybackToLocal(java.lang.Object, int)
    {
        android.media.session.MediaSession $r3;
        int $i0;
        android.media.AudioAttributes$Builder $r0;
        android.media.AudioAttributes $r1;
        java.lang.Object $r2;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r0 = new android.media.AudioAttributes$Builder;

        specialinvoke $r0.<android.media.AudioAttributes$Builder: void <init>()>();

        virtualinvoke $r0.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setLegacyStreamType(int)>($i0);

        $r3 = (android.media.session.MediaSession) $r2;

        $r1 = virtualinvoke $r0.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        virtualinvoke $r3.<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>($r1);

        return;
    }

    public static void setPlaybackToRemote(java.lang.Object, java.lang.Object)
    {
        android.media.session.MediaSession $r2;
        android.media.VolumeProvider $r3;
        java.lang.Object $r0, $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (android.media.session.MediaSession) $r0;

        $r3 = (android.media.VolumeProvider) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>($r3);

        return;
    }

    public static void setQueue(java.lang.Object, java.util.List)
    {
        java.util.Iterator $r4;
        java.util.ArrayList $r0;
        android.media.session.MediaSession$QueueItem $r6;
        android.media.session.MediaSession $r3;
        java.util.List $r2;
        java.lang.Object $r1, $r5;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.util.List;

        if $r2 != null goto label1;

        $r3 = (android.media.session.MediaSession) $r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setQueue(java.util.List)>(null);

        return;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.media.session.MediaSession$QueueItem) $r5;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r3 = (android.media.session.MediaSession) $r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setQueue(java.util.List)>($r0);

        return;
    }

    public static void setQueueTitle(java.lang.Object, java.lang.CharSequence)
    {
        android.media.session.MediaSession $r2;
        java.lang.Object $r1;
        java.lang.CharSequence $r0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.CharSequence;

        $r2 = (android.media.session.MediaSession) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>($r0);

        return;
    }

    public static void setSessionActivity(java.lang.Object, android.app.PendingIntent)
    {
        android.media.session.MediaSession $r2;
        java.lang.Object $r1;
        android.app.PendingIntent $r0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: android.app.PendingIntent;

        $r2 = (android.media.session.MediaSession) $r1;

        virtualinvoke $r2.<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)>($r0);

        return;
    }

    public static java.lang.Object verifySession(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof android.media.session.MediaSession;

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaSession is not a valid MediaSession object");

        throw $r1;
    }

    public static java.lang.Object verifyToken(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof android.media.session.MediaSession$Token;

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token is not a valid MediaSession.Token object");

        throw $r1;
    }

    public static void <clinit>()
    {
        <android.support.v4.media.session.MediaSessionCompatApi21: java.lang.String TAG> = "MediaSessionCompatApi21";

        return;
    }
}
