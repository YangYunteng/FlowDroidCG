public class com.google.android.material.textview.MaterialTextView extends androidx.appcompat.widget.AppCompatTextView
{

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.textview.MaterialTextView r0;

        r0 := @this: com.google.android.material.textview.MaterialTextView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.google.android.material.textview.MaterialTextView r0;
        android.util.AttributeSet $r2;

        r0 := @this: com.google.android.material.textview.MaterialTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842884);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        com.google.android.material.textview.MaterialTextView r0;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.google.android.material.textview.MaterialTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context $r1;
        com.google.android.material.textview.MaterialTextView r0;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.content.res.Resources$Theme $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.textview.MaterialTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        specialinvoke r0.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $z0 = staticinvoke <com.google.android.material.textview.MaterialTextView: boolean canApplyTextAppearanceLineHeight(android.content.Context)>($r1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = staticinvoke <com.google.android.material.textview.MaterialTextView: boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>($r1, $r3, $r2, $i0, $i1);

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <com.google.android.material.textview.MaterialTextView: int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>($r3, $r2, $i0, $i1);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        specialinvoke r0.<com.google.android.material.textview.MaterialTextView: void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int)>($r3, $i0);

     label1:
        return;
    }

    private void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme, int)
    {
        android.content.Context $r4;
        com.google.android.material.textview.MaterialTextView r0;
        int[] $r2;
        int $i0;
        android.content.res.Resources$Theme $r1;
        android.content.res.TypedArray $r3;

        r0 := @this: com.google.android.material.textview.MaterialTextView;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $i0 := @parameter1: int;

        $r2 = <com.google.android.material.R$styleable: int[] MaterialTextAppearance>;

        $r3 = virtualinvoke $r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r2);

        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = newarray (int)[2];

        $i0 = <com.google.android.material.R$styleable: int MaterialTextAppearance_android_lineHeight>;

        $r2[0] = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialTextAppearance_lineHeight>;

        $r2[1] = $i0;

        $i0 = staticinvoke <com.google.android.material.textview.MaterialTextView: int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[])>($r4, $r3, $r2);

        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        if $i0 < 0 goto label1;

        virtualinvoke r0.<androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)>($i0);

     label1:
        return;
    }

    public static boolean canApplyTextAppearanceLineHeight(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <com.google.android.material.R$attr: int textAppearanceLineHeightEnabled>;

        $z0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: boolean resolveBoolean(android.content.Context,int,boolean)>($r0, $i0, 1);

        return $z0;
    }

    public static int findViewAppearanceResourceId(android.content.res.Resources$Theme, android.util.AttributeSet, int, int)
    {
        android.util.AttributeSet $r2;
        int[] $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;
        android.content.res.TypedArray $r3;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 := @parameter3: int;

        $r0 = <com.google.android.material.R$styleable: int[] MaterialTextView>;

        $r3 = virtualinvoke $r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r0, $i1, $i0);

        $i1 = <com.google.android.material.R$styleable: int MaterialTextView_android_textAppearance>;

        $i0 = -1;

        $i1 = virtualinvoke $r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, $i0);

        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        return $i1;
    }

    public static transient int readFirstAvailableDimension(android.content.Context, android.content.res.TypedArray, int[])
    {
        android.content.Context $r0;
        int[] $r2;
        int $i0, $i1, $i2;
        android.content.res.TypedArray $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.TypedArray;

        $r2 := @parameter2: int[];

        $i1 = 0;

        $i2 = -1;

     label1:
        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label2;

        if $i2 >= 0 goto label2;

        $i0 = $r2[$i1];

        $i2 = -1;

        $i2 = staticinvoke <com.google.android.material.resources.MaterialResources: int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)>($r0, $r1, $i0, $i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static boolean viewAttrsHasLineHeight(android.content.Context, android.content.res.Resources$Theme, android.util.AttributeSet, int, int)
    {
        android.content.Context $r0;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;
        android.content.res.TypedArray $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources$Theme;

        $r2 := @parameter2: android.util.AttributeSet;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 = <com.google.android.material.R$styleable: int[] MaterialTextView>;

        $r4 = virtualinvoke $r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, $i1);

        $r3 = newarray (int)[2];

        $i0 = <com.google.android.material.R$styleable: int MaterialTextView_android_lineHeight>;

        $r3[0] = $i0;

        $i0 = <com.google.android.material.R$styleable: int MaterialTextView_lineHeight>;

        $r3[1] = $i0;

        $i0 = staticinvoke <com.google.android.material.textview.MaterialTextView: int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[])>($r0, $r4, $r3);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setTextAppearance(android.content.Context, int)
    {
        android.content.Context $r1;
        com.google.android.material.textview.MaterialTextView r0;
        int $i0;
        android.content.res.Resources$Theme $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.textview.MaterialTextView;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)>($r1, $i0);

        $z0 = staticinvoke <com.google.android.material.textview.MaterialTextView: boolean canApplyTextAppearanceLineHeight(android.content.Context)>($r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke r0.<com.google.android.material.textview.MaterialTextView: void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int)>($r2, $i0);

     label1:
        return;
    }
}
