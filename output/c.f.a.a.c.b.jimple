public class c.f.a.a.c.b extends android.os.AsyncTask
{
    public static final javax.net.ssl.SSLSocketFactory a;

    static void <clinit>()
    {
        javax.net.ssl.SSLSocketFactory $r0;

        $r0 = staticinvoke <c.f.a.a.c.b: javax.net.ssl.SSLSocketFactory a()>();

        <c.f.a.a.c.b: javax.net.ssl.SSLSocketFactory a> = $r0;

        return;
    }

    public void <init>()
    {
        c.f.a.a.c.b r0;

        r0 := @this: c.f.a.a.c.b;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    public static javax.net.ssl.SSLSocketFactory a()
    {
        java.lang.IllegalStateException $r6;
        javax.net.ssl.SSLContext $r2;
        javax.net.ssl.TrustManager[] $r3;
        javax.net.ssl.X509TrustManager $r4;
        java.security.NoSuchAlgorithmException $r0;
        java.security.KeyManagementException $r1;
        javax.net.ssl.SSLSocketFactory $r5;

     label01:
        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");

     label02:
        if $r2 == null goto label08;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

     label03:
        $r4 = staticinvoke <c.f.a.a.b.f: javax.net.ssl.X509TrustManager a()>();

     label04:
        $r3[0] = $r4;

     label05:
        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, $r3, null);

     label06:
        $r5 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r5;

     label07:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never happen");

        throw $r6;

     label08:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never happen");

        throw $r6;

     label09:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never happen");

        throw $r6;

     label10:
        $r0 := @caughtexception;

        goto label09;

     label11:
        $r1 := @caughtexception;

        goto label07;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.KeyManagementException from label03 to label04 with label11;
        catch java.security.KeyManagementException from label05 to label06 with label11;
    }

    public final transient java.lang.Integer doInBackground(java.lang.Object[])
    {
        java.net.HttpURLConnection $r7;
        java.lang.Throwable $r19;
        byte[] $r11;
        java.lang.Object[] $r1;
        java.net.URL $r5;
        java.lang.Integer $r4, $r17;
        java.io.BufferedOutputStream $r14;
        org.json.JSONObject $r16;
        java.net.URLConnection $r6;
        int $i0, $i1;
        java.lang.String $r8, $r10;
        boolean $z0;
        java.io.OutputStream $r15;
        javax.net.ssl.HttpsURLConnection $r12;
        java.io.IOException $r18;
        c.f.a.a.c.b r0;
        c.f.a.a.c.c $r3;
        javax.net.ssl.SSLSocketFactory $r13;
        java.lang.Object $r2;
        java.lang.StringBuilder $r9;

        r0 := @this: c.f.a.a.c.b;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = $r1[0];

        $r3 = (c.f.a.a.c.c) $r2;

        $r4 = null;

        $i0 = 1;

     label01:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label28;

        $r2 = $r1[$i0];

        $r5 = (java.net.URL) $r2;

     label02:
        $r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        $r2 = staticinvoke <com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object instrument(java.lang.Object)>($r6);

     label03:
        $r6 = (java.net.URLConnection) $r2;

        $r7 = (java.net.HttpURLConnection) $r6;

     label04:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json");

        virtualinvoke $r7.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r7.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        $r8 = virtualinvoke $r5.<java.net.URL: java.lang.String getUserInfo()>();

     label05:
        if $r8 == null goto label10;

     label06:
        $r9 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

     label08:
        $r8 = new java.lang.String;

     label09:
        $r10 = virtualinvoke $r5.<java.net.URL: java.lang.String getUserInfo()>();

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        $r11 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r11, 0);

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Authorization", $r8);

     label10:
        $z0 = $r7 instanceof javax.net.ssl.HttpsURLConnection;

     label11:
        if $z0 == 0 goto label14;

     label12:
        $r12 = (javax.net.ssl.HttpsURLConnection) $r7;

        $r13 = <c.f.a.a.c.b: javax.net.ssl.SSLSocketFactory a>;

     label13:
        virtualinvoke $r12.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r13);

     label14:
        virtualinvoke $r7.<java.net.HttpURLConnection: void connect()>();

     label15:
        $r14 = new java.io.BufferedOutputStream;

     label16:
        $r15 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r14.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r15);

        $r16 = virtualinvoke $r3.<c.f.a.a.c.c: org.json.JSONObject f()>();

        $r8 = virtualinvoke $r16.<org.json.JSONObject: java.lang.String toString()>();

        $r11 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r14.<java.io.FilterOutputStream: void write(byte[])>($r11);

        virtualinvoke $r14.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r14.<java.io.FilterOutputStream: void close()>();

        $i1 = virtualinvoke $r7.<java.net.HttpURLConnection: int getResponseCode()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label17:
        $r4 = $r17;

        if $r7 == null goto label24;

     label18:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

        goto label24;

     label19:
        $r18 := @caughtexception;

        goto label22;

     label20:
        $r19 := @caughtexception;

        $r7 = null;

        goto label26;

     label21:
        $r18 := @caughtexception;

        $r7 = null;

     label22:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background upload - task completed with error:");

        $r8 = virtualinvoke $r18.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <c.f.a.a.d.a: void a(java.lang.String)>($r8);

     label23:
        if $r7 == null goto label24;

        goto label18;

     label24:
        $i0 = $i0 + 1;

        goto label01;

     label25:
        $r19 := @caughtexception;

     label26:
        if $r7 == null goto label27;

        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label27:
        throw $r19;

     label28:
        return $r4;

        catch java.io.IOException from label02 to label03 with label21;
        catch java.lang.Throwable from label02 to label04 with label20;
        catch java.io.IOException from label04 to label05 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label09 to label10 with label19;
        catch java.io.IOException from label13 to label15 with label19;
        catch java.io.IOException from label16 to label17 with label19;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label11 with label25;
        catch java.lang.Throwable from label12 to label17 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
    }

    public volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r2;
        c.f.a.a.c.b r0;
        java.lang.Integer $r1;

        r0 := @this: c.f.a.a.c.b;

        $r2 := @parameter0: java.lang.Object[];

        $r1 = virtualinvoke r0.<c.f.a.a.c.b: java.lang.Integer doInBackground(java.lang.Object[])>($r2);

        return $r1;
    }
}
