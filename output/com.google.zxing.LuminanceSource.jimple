public abstract class com.google.zxing.LuminanceSource extends java.lang.Object
{
    public final int height;
    public final int width;

    public void <init>(int, int)
    {
        int $i0, $i1;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.LuminanceSource: int width> = $i0;

        r0.<com.google.zxing.LuminanceSource: int height> = $i1;

        return;
    }

    public com.google.zxing.LuminanceSource crop(int, int, int, int)
    {
        java.lang.UnsupportedOperationException $r1;
        int $i0, $i1, $i2, $i3;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This luminance source does not support cropping.");

        throw $r1;
    }

    public final int getHeight()
    {
        int i0;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        i0 = r0.<com.google.zxing.LuminanceSource: int height>;

        return i0;
    }

    public abstract byte[] getMatrix();

    public abstract byte[] getRow(int, byte[]);

    public final int getWidth()
    {
        int i0;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        i0 = r0.<com.google.zxing.LuminanceSource: int width>;

        return i0;
    }

    public com.google.zxing.LuminanceSource invert()
    {
        com.google.zxing.InvertedLuminanceSource $r1;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        $r1 = new com.google.zxing.InvertedLuminanceSource;

        specialinvoke $r1.<com.google.zxing.InvertedLuminanceSource: void <init>(com.google.zxing.LuminanceSource)>(r0);

        return $r1;
    }

    public boolean isCropSupported()
    {
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        return 0;
    }

    public boolean isRotateSupported()
    {
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        return 0;
    }

    public com.google.zxing.LuminanceSource rotateCounterClockwise()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This luminance source does not support rotation by 90 degrees.");

        throw $r1;
    }

    public com.google.zxing.LuminanceSource rotateCounterClockwise45()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.zxing.LuminanceSource r0;

        r0 := @this: com.google.zxing.LuminanceSource;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This luminance source does not support rotation by 45 degrees.");

        throw $r1;
    }

    public final java.lang.String toString()
    {
        byte[] $r2, $r3;
        char $c5;
        com.google.zxing.LuminanceSource r0;
        short $s4;
        byte $b3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4;

        r0 := @this: com.google.zxing.LuminanceSource;

        $i0 = r0.<com.google.zxing.LuminanceSource: int width>;

        $r2 = newarray (byte)[$i0];

        $r5 = new java.lang.StringBuilder;

        $r1 = $r5;

        $i1 = r0.<com.google.zxing.LuminanceSource: int height>;

        $i0 = $i0 + 1;

        $i1 = $i1 * $i0;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

     label1:
        $i0 = r0.<com.google.zxing.LuminanceSource: int height>;

        if $i1 >= $i0 goto label8;

        $r3 = virtualinvoke r0.<com.google.zxing.LuminanceSource: byte[] getRow(int,byte[])>($i1, $r2);

        $r2 = $r3;

        $i0 = 0;

     label2:
        $i2 = r0.<com.google.zxing.LuminanceSource: int width>;

        if $i0 >= $i2 goto label7;

        $b3 = $r3[$i0];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i2 = (int) $s4;

        if $i2 >= 64 goto label3;

        $c5 = 35;

        goto label6;

     label3:
        $i2 = (int) $s4;

        if $i2 >= 128 goto label4;

        $c5 = 43;

        goto label6;

     label4:
        $i2 = (int) $s4;

        if $i2 >= 192 goto label5;

        $c5 = 46;

        goto label6;

     label5:
        $c5 = 32;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i0 = $i0 + 1;

        goto label2;

     label7:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $i1 = $i1 + 1;

        goto label1;

     label8:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
