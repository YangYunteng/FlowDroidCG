public abstract class com.google.common.collect.ForwardingSortedSet extends com.google.common.collect.ForwardingSet implements java.util.SortedSet
{

    public void <init>()
    {
        com.google.common.collect.ForwardingSortedSet r0;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        specialinvoke r0.<com.google.common.collect.ForwardingSet: void <init>()>();

        return;
    }

    private int unsafeCompare(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ForwardingSortedSet r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Comparable $r4;
        java.util.Comparator $r3;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.Comparator comparator()>();

        if $r3 != null goto label1;

        $r4 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);

        return $i0;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $i0;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r1;
        java.util.Comparator $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.util.Comparator comparator()>();

        return $r2;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        return $r1;
    }

    public volatile java.util.Collection delegate()
    {
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        return $r1;
    }

    public volatile java.util.Set delegate()
    {
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        return $r1;
    }

    public abstract java.util.SortedSet delegate();

    public java.lang.Object first()
    {
        java.lang.Object $r2;
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object first()>();

        return $r2;
    }

    public java.util.SortedSet headSet(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        $r2 = interfaceinvoke $r2.<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>($r1);

        return $r2;
    }

    public java.lang.Object last()
    {
        java.lang.Object $r2;
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object last()>();

        return $r2;
    }

    public boolean standardContains(java.lang.Object)
    {
        java.util.SortedSet $r5;
        java.lang.ClassCastException $r1;
        java.lang.NullPointerException $r3;
        com.google.common.collect.ForwardingSortedSet r0;
        int $i0;
        java.lang.Object $r4, $r6;
        java.util.NoSuchElementException $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r4 := @parameter0: java.lang.Object;

     label1:
        $r5 = interfaceinvoke r0.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.SortedSet: java.lang.Object first()>();

        $i0 = specialinvoke r0.<com.google.common.collect.ForwardingSortedSet: int unsafeCompare(java.lang.Object,java.lang.Object)>($r6, $r4);

     label2:
        if $i0 != 0 goto label6;

        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

     label4:
        $r2 := @caughtexception;

        return 0;

     label5:
        $r3 := @caughtexception;

     label6:
        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.util.NoSuchElementException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label5;
    }

    public boolean standardRemove(java.lang.Object)
    {
        java.util.SortedSet $r4;
        java.util.Iterator $r5;
        java.lang.ClassCastException $r1;
        java.lang.NullPointerException $r2;
        com.google.common.collect.ForwardingSortedSet r0;
        int $i0;
        java.lang.Object $r3, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r3 := @parameter0: java.lang.Object;

     label01:
        $r4 = interfaceinvoke r0.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.SortedSet: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label02:
        if $z0 == 0 goto label07;

     label03:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $i0 = specialinvoke r0.<com.google.common.collect.ForwardingSortedSet: int unsafeCompare(java.lang.Object,java.lang.Object)>($r6, $r3);

     label04:
        if $i0 != 0 goto label10;

     label05:
        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label06:
        return 1;

     label07:
        return 0;

     label08:
        $r1 := @caughtexception;

        return 0;

     label09:
        $r2 := @caughtexception;

     label10:
        return 0;

        catch java.lang.ClassCastException from label01 to label02 with label08;
        catch java.lang.ClassCastException from label03 to label04 with label08;
        catch java.lang.ClassCastException from label05 to label06 with label08;
        catch java.lang.NullPointerException from label01 to label02 with label09;
        catch java.lang.NullPointerException from label03 to label04 with label09;
        catch java.lang.NullPointerException from label05 to label06 with label09;
    }

    public java.util.SortedSet standardSubSet(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet tailSet(java.lang.Object)>($r2);

        $r3 = interfaceinvoke $r3.<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>($r1);

        return $r3;
    }

    public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        $r3 = interfaceinvoke $r3.<java.util.SortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r3;
    }

    public java.util.SortedSet tailSet(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ForwardingSortedSet r0;
        java.util.SortedSet $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedSet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedSet: java.util.SortedSet delegate()>();

        $r2 = interfaceinvoke $r2.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>($r1);

        return $r2;
    }
}
