public class com.google.common.collect.Maps$FilteredEntryMap extends com.google.common.collect.Maps$AbstractFilteredMap
{
    public final java.util.Set filteredEntrySet;

    public void <init>(java.util.Map, com.google.common.base.Predicate)
    {
        com.google.common.base.Predicate $r2;
        java.util.Map $r1;
        com.google.common.collect.Maps$FilteredEntryMap r0;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.Maps$FilteredEntryMap;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.google.common.base.Predicate;

        specialinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: void <init>(java.util.Map,com.google.common.base.Predicate)>($r1, $r2);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r2 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: com.google.common.base.Predicate predicate>;

        $r3 = staticinvoke <com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>($r3, $r2);

        r0.<com.google.common.collect.Maps$FilteredEntryMap: java.util.Set filteredEntrySet> = $r3;

        return;
    }

    public static boolean removeAllKeys(java.util.Map, com.google.common.base.Predicate, java.util.Collection)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        java.util.Set $r3;
        com.google.common.base.Predicate $r0;
        java.util.Map $r2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        $r2 := @parameter0: java.util.Map;

        $r0 := @parameter1: com.google.common.base.Predicate;

        $r1 := @parameter2: java.util.Collection;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $z1 = interfaceinvoke $r0.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public static boolean retainAllKeys(java.util.Map, com.google.common.base.Predicate, java.util.Collection)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        java.util.Set $r3;
        com.google.common.base.Predicate $r0;
        java.util.Map $r2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        $r2 := @parameter0: java.util.Map;

        $r0 := @parameter1: com.google.common.base.Predicate;

        $r1 := @parameter2: java.util.Collection;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $z1 = interfaceinvoke $r0.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r5);

        if $z1 != 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public java.util.Set createEntrySet()
    {
        com.google.common.collect.Maps$FilteredEntryMap r0;
        com.google.common.collect.Maps$FilteredEntryMap$EntrySet $r1;

        r0 := @this: com.google.common.collect.Maps$FilteredEntryMap;

        $r1 = new com.google.common.collect.Maps$FilteredEntryMap$EntrySet;

        specialinvoke $r1.<com.google.common.collect.Maps$FilteredEntryMap$EntrySet: void <init>(com.google.common.collect.Maps$FilteredEntryMap,com.google.common.collect.Maps$1)>(r0, null);

        return $r1;
    }

    public java.util.Set createKeySet()
    {
        com.google.common.collect.Maps$FilteredEntryMap$KeySet $r1;
        com.google.common.collect.Maps$FilteredEntryMap r0;

        r0 := @this: com.google.common.collect.Maps$FilteredEntryMap;

        $r1 = new com.google.common.collect.Maps$FilteredEntryMap$KeySet;

        specialinvoke $r1.<com.google.common.collect.Maps$FilteredEntryMap$KeySet: void <init>(com.google.common.collect.Maps$FilteredEntryMap)>(r0);

        return $r1;
    }
}
