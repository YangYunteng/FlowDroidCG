public class org.dom4j.bean.BeanElement extends org.dom4j.tree.DefaultElement
{
    public static final org.dom4j.DocumentFactory DOCUMENT_FACTORY;
    public java.lang.Object bean;

    static void <clinit>()
    {
        org.dom4j.DocumentFactory $r0;

        $r0 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object $r1;
        org.dom4j.QName $r3;
        java.lang.String $r4;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object;

        $r2 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r4);

        specialinvoke r0.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r3, $r1);

        return;
    }

    public void <init>(java.lang.String, org.dom4j.Namespace, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.Namespace $r1;
        java.lang.Object $r2;
        org.dom4j.QName $r4;
        java.lang.String $r5;
        org.dom4j.DocumentFactory $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.dom4j.Namespace;

        $r2 := @parameter2: java.lang.Object;

        $r3 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r4 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)>($r5, $r1);

        specialinvoke r0.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r4, $r2);

        return;
    }

    public void <init>(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>($r1);

        return;
    }

    public void <init>(org.dom4j.QName, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r1;
        java.lang.Object $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>($r1);

        r0.<org.dom4j.bean.BeanElement: java.lang.Object bean> = $r2;

        return;
    }

    public org.dom4j.Element addAttribute(java.lang.String, java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.String $r1, $r3;
        org.dom4j.Attribute $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Attribute attribute(java.lang.String)>($r3);

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.dom4j.Attribute: void setValue(java.lang.String)>($r1);

     label1:
        return r0;
    }

    public org.dom4j.Element addAttribute(org.dom4j.QName, java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r3;
        java.lang.String $r1;
        org.dom4j.Attribute $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r3 := @parameter0: org.dom4j.QName;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Attribute attribute(org.dom4j.QName)>($r3);

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.dom4j.Attribute: void setValue(java.lang.String)>($r1);

     label1:
        return r0;
    }

    public org.dom4j.Attribute attribute(java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r2;
        java.lang.String $r1;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.bean.BeanAttributeList getBeanAttributeList()>();

        $r3 = virtualinvoke $r2.<org.dom4j.bean.BeanAttributeList: org.dom4j.Attribute attribute(java.lang.String)>($r1);

        return $r3;
    }

    public org.dom4j.Attribute attribute(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r2;
        org.dom4j.QName $r1;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.bean.BeanAttributeList getBeanAttributeList()>();

        $r3 = virtualinvoke $r2.<org.dom4j.bean.BeanAttributeList: org.dom4j.Attribute attribute(org.dom4j.QName)>($r1);

        return $r3;
    }

    public java.util.List createAttributeList()
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r1.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement)>(r0);

        return $r1;
    }

    public java.util.List createAttributeList(int)
    {
        int $i0;
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $i0 := @parameter0: int;

        $r1 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r1.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement)>(r0);

        return $r1;
    }

    public org.dom4j.bean.BeanAttributeList getBeanAttributeList()
    {
        org.dom4j.bean.BeanElement r0;
        java.util.List $r1;
        org.dom4j.bean.BeanAttributeList $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 = virtualinvoke r0.<org.dom4j.tree.DefaultElement: java.util.List attributeList()>();

        $r2 = (org.dom4j.bean.BeanAttributeList) $r1;

        return $r2;
    }

    public java.lang.Object getData()
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 = r0.<org.dom4j.bean.BeanElement: java.lang.Object bean>;

        return r1;
    }

    public org.dom4j.DocumentFactory getDocumentFactory()
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.DocumentFactory r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        return r1;
    }

    public void setAttributes(java.util.List)
    {
        java.lang.UnsupportedOperationException $r2;
        org.dom4j.bean.BeanElement r0;
        java.util.List $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.util.List;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented yet.");

        throw $r2;
    }

    public void setAttributes(org.xml.sax.Attributes, org.dom4j.tree.NamespaceStack, boolean)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Exception $r9;
        org.dom4j.DocumentFactory $r10;
        org.dom4j.tree.NamespaceStack $r3;
        org.dom4j.bean.BeanDocumentFactory $r11;
        org.xml.sax.Attributes $r2;
        int $i0, $i1;
        java.lang.Class $r5;
        java.lang.Object $r7;
        java.lang.String $r1, $r4, $r8;
        java.lang.ClassLoader $r6;
        boolean $z0;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r2 := @parameter0: org.xml.sax.Attributes;

        $r3 := @parameter1: org.dom4j.tree.NamespaceStack;

        $z0 := @parameter2: boolean;

        $r1 = "class";

        $r4 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        if $r4 == null goto label10;

        $r5 = class "Lorg/dom4j/bean/BeanElement;";

     label01:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r4, 1, $r6);

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        virtualinvoke r0.<org.dom4j.bean.BeanElement: void setData(java.lang.Object)>($r7);

     label02:
        $i0 = 0;

     label03:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

     label04:
        if $i0 < $i1 goto label05;

        return;

     label05:
        $r4 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

     label06:
        if $z0 != 0 goto label08;

     label07:
        $r8 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>($r4, $r8);

     label08:
        $i0 = $i0 + 1;

        goto label03;

     label09:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r11 = (org.dom4j.bean.BeanDocumentFactory) $r10;

        virtualinvoke $r11.<org.dom4j.bean.BeanDocumentFactory: void handleException(java.lang.Exception)>($r9);

        return;

     label10:
        specialinvoke r0.<org.dom4j.tree.AbstractElement: void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)>($r2, $r3, $z0);

        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public void setData(java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.Object;

        r0.<org.dom4j.bean.BeanElement: java.lang.Object bean> = $r1;

        virtualinvoke r0.<org.dom4j.tree.DefaultElement: void setAttributeList(java.util.List)>(null);

        return;
    }
}
