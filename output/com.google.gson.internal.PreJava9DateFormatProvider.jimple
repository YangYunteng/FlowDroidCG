public class com.google.gson.internal.PreJava9DateFormatProvider extends java.lang.Object
{

    public void <init>()
    {
        com.google.gson.internal.PreJava9DateFormatProvider r0;

        r0 := @this: com.google.gson.internal.PreJava9DateFormatProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getDateFormatPattern(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 != 3 goto label1;

        return "M/d/yy";

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown DateFormat style: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        return "MMM d, y";

     label3:
        return "MMMM d, y";

     label4:
        return "EEEE, MMMM d, y";
    }

    public static java.lang.String getDatePartOfDateTimePattern(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 != 3 goto label1;

        return "M/d/yy";

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown DateFormat style: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        return "MMM d, yyyy";

     label3:
        return "MMMM d, yyyy";

     label4:
        return "EEEE, MMMM d, yyyy";
    }

    public static java.lang.String getTimePartOfDateTimePattern(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label3;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 != 3 goto label1;

        return "h:mm a";

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown DateFormat style: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        return "h:mm:ss a";

     label3:
        return "h:mm:ss a z";
    }

    public static java.text.DateFormat getUSDateFormat(int)
    {
        java.util.Locale $r1;
        int $i0;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $r0 = new java.text.SimpleDateFormat;

        $r2 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getDateFormatPattern(int)>($i0);

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r2, $r1);

        return $r0;
    }

    public static java.text.DateFormat getUSDateTimeFormat(int, int)
    {
        java.util.Locale $r3;
        int $i0, $i1;
        java.text.SimpleDateFormat $r2;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getDatePartOfDateTimePattern(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r1 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getTimePartOfDateTimePattern(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.text.SimpleDateFormat;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r1, $r3);

        return $r2;
    }
}
