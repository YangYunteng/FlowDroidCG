public class com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2 extends java.lang.Object implements java.lang.Runnable
{
    public final com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1;

    public void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)
    {
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2 r0;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate;

        r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r10, $r11;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.lang.Runnable $r8;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate $r1, $r4;
        java.util.concurrent.Future $r9;
        com.google.common.util.concurrent.AbstractScheduledService $r3;
        com.google.common.util.concurrent.AbstractService $r6;
        java.util.concurrent.ScheduledExecutorService $r7;
        com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2 r0;
        com.google.common.util.concurrent.AbstractScheduledService$Scheduler $r5;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.locks.ReentrantLock access$200(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r1);

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r3 = $r1.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        virtualinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService: void startUp()>();

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r4 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r3 = $r4.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        $r5 = virtualinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractScheduledService$Scheduler scheduler()>();

        $r4 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r3 = $r4.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        $r6 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService: com.google.common.util.concurrent.AbstractService access$500(com.google.common.util.concurrent.AbstractScheduledService)>($r3);

        $r4 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r7 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.ScheduledExecutorService access$600(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r4);

        $r4 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r8 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.lang.Runnable access$700(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r4);

        $r9 = virtualinvoke $r5.<com.google.common.util.concurrent.AbstractScheduledService$Scheduler: java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable)>($r6, $r7, $r8);

        staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate,java.util.concurrent.Future)>($r1, $r9);

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: void notifyStarted()>();

     label2:
        goto label8;

     label3:
        $r10 := @caughtexception;

        goto label9;

     label4:
        $r11 := @caughtexception;

     label5:
        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>($r11);

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r9 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.Future access$300(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r1);

     label6:
        if $r9 == null goto label8;

     label7:
        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r9 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.Future access$300(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r1);

        interfaceinvoke $r9.<java.util.concurrent.Future: boolean cancel(boolean)>(0);

     label8:
        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.locks.ReentrantLock access$200(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r1);

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label9:
        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2: com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate this$1>;

        $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate: java.util.concurrent.locks.ReentrantLock access$200(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate)>($r1);

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label7 to label8 with label3;
    }
}
