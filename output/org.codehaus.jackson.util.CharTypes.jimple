public final class org.codehaus.jackson.util.CharTypes extends java.lang.Object
{
    public static final byte[] HEX_BYTES;
    public static final char[] HEX_CHARS;
    public static final int[] sHexValues;
    public static final int[] sInputCodes;
    public static final int[] sInputCodesComment;
    public static final int[] sInputCodesJsNames;
    public static final int[] sInputCodesUtf8;
    public static final int[] sInputCodesUtf8JsNames;
    public static final int[] sOutputEscapes128;

    static void <clinit>()
    {
        byte[] $r2;
        char $c3;
        byte $b4;
        int[] $r3, $r4;
        int $i0, $i1, $i2;
        char[] $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 = "0123456789ABCDEF";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.codehaus.jackson.util.CharTypes: char[] HEX_CHARS> = $r1;

        $r1 = <org.codehaus.jackson.util.CharTypes: char[] HEX_CHARS>;

        $i0 = lengthof $r1;

        $r2 = newarray (byte)[$i0];

        <org.codehaus.jackson.util.CharTypes: byte[] HEX_BYTES> = $r2;

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label02;

        $r2 = <org.codehaus.jackson.util.CharTypes: byte[] HEX_BYTES>;

        $r1 = <org.codehaus.jackson.util.CharTypes: char[] HEX_CHARS>;

        $c3 = $r1[$i2];

        $b4 = (byte) $c3;

        $r2[$i2] = $b4;

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $r3 = newarray (int)[256];

        $i0 = 0;

     label03:
        if $i0 >= 32 goto label04;

        $i2 = -1;

        $r3[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label03;

     label04:
        $r3[34] = 1;

        $r3[92] = 1;

        <org.codehaus.jackson.util.CharTypes: int[] sInputCodes> = $r3;

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodes>;

        $i0 = lengthof $r3;

        $r4 = newarray (int)[$i0];

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $i0 = 128;

     label05:
        if $i0 >= 256 goto label10;

        $i2 = $i0 & 224;

        if $i2 != 192 goto label06;

        $b4 = 2;

        goto label09;

     label06:
        $i2 = $i0 & 240;

        if $i2 != 224 goto label07;

        $b4 = 3;

        goto label09;

     label07:
        $i2 = $i0 & 248;

        if $i2 != 240 goto label08;

        $b4 = 4;

        goto label09;

     label08:
        $b4 = -1;

     label09:
        $r4[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label05;

     label10:
        <org.codehaus.jackson.util.CharTypes: int[] sInputCodesUtf8> = $r4;

        $r3 = newarray (int)[256];

        $i0 = -1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, $i0);

        $i0 = 33;

     label11:
        if $i0 >= 256 goto label13;

        $c3 = (char) $i0;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c3);

        if $z0 == 0 goto label12;

        $r3[$i0] = 0;

     label12:
        $i0 = $i0 + 1;

        goto label11;

     label13:
        $r3[64] = 0;

        $r3[35] = 0;

        $r3[42] = 0;

        $r3[45] = 0;

        $r3[43] = 0;

        <org.codehaus.jackson.util.CharTypes: int[] sInputCodesJsNames> = $r3;

        $r3 = newarray (int)[256];

        $r4 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesJsNames>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i0);

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r3, 128, 128, 0);

        <org.codehaus.jackson.util.CharTypes: int[] sInputCodesUtf8JsNames> = $r3;

        $r3 = newarray (int)[256];

        <org.codehaus.jackson.util.CharTypes: int[] sInputCodesComment> = $r3;

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesUtf8>;

        $r4 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesComment>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 128, $r4, 128, 128);

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesComment>;

        $i0 = -1;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r3, 0, 32, $i0);

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesComment>;

        $r3[9] = 0;

        $r3[10] = 10;

        $r3[13] = 13;

        $r3[42] = 42;

        $r3 = newarray (int)[128];

        $i0 = 0;

     label14:
        if $i0 >= 32 goto label15;

        $i2 = -1;

        $r3[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label14;

     label15:
        $r3[34] = 34;

        $r3[92] = 92;

        $r3[8] = 98;

        $r3[9] = 116;

        $r3[12] = 102;

        $r3[10] = 110;

        $r3[13] = 114;

        <org.codehaus.jackson.util.CharTypes: int[] sOutputEscapes128> = $r3;

        $r3 = newarray (int)[128];

        <org.codehaus.jackson.util.CharTypes: int[] sHexValues> = $r3;

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sHexValues>;

        $i0 = -1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, $i0);

        $i0 = 0;

     label16:
        if $i0 >= 10 goto label17;

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sHexValues>;

        $i2 = $i0 + 48;

        $r3[$i2] = $i0;

        $i0 = $i0 + 1;

        goto label16;

     label17:
        if $i1 >= 6 goto label18;

        $r3 = <org.codehaus.jackson.util.CharTypes: int[] sHexValues>;

        $i2 = $i1 + 97;

        $i0 = $i1 + 10;

        $r3[$i2] = $i0;

        $i2 = $i1 + 65;

        $r3[$i2] = $i0;

        $i1 = $i1 + 1;

        goto label17;

     label18:
        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.util.CharTypes r0;

        r0 := @this: org.codehaus.jackson.util.CharTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void appendQuoted(java.lang.StringBuilder, java.lang.String)
    {
        char $c4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i5;
        char[] $r3;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.codehaus.jackson.util.CharTypes: int[] sOutputEscapes128>;

        $i0 = lengthof $r2;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label6;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $i1 = (int) $c4;

        if $i1 >= $i0 goto label4;

        $i1 = (int) $c4;

        $i1 = $r2[$i1];

        if $i1 != 0 goto label2;

        goto label4;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        $i1 = (int) $c4;

        $i1 = $r2[$i1];

        if $i1 >= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(117);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $i1 = $i1 + 1;

        $i5 = neg $i1;

        $r3 = <org.codehaus.jackson.util.CharTypes: char[] HEX_CHARS>;

        $i1 = $i5 >> 4;

        $c4 = $r3[$i1];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r3 = <org.codehaus.jackson.util.CharTypes: char[] HEX_CHARS>;

        $i1 = $i5 & 15;

        $c4 = $r3[$i1];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        goto label5;

     label3:
        $c4 = (char) $i1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        goto label5;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label5:
        $i3 = $i3 + 1;

        goto label1;

     label6:
        return;
    }

    public static int charToHex(int)
    {
        int $i0;
        int[] $r0;

        $i0 := @parameter0: int;

        if $i0 <= 127 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $r0 = <org.codehaus.jackson.util.CharTypes: int[] sHexValues>;

        $i0 = $r0[$i0];

        return $i0;
    }

    public static byte[] copyHexBytes()
    {
        byte[] $r1;
        java.lang.Object $r0;

        $r1 = <org.codehaus.jackson.util.CharTypes: byte[] HEX_BYTES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (byte[]) $r0;

        return $r1;
    }

    public static char[] copyHexChars()
    {
        char[] $r1;
        java.lang.Object $r0;

        $r1 = <org.codehaus.jackson.util.CharTypes: char[] HEX_CHARS>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (char[]) $r0;

        return $r1;
    }

    public static final int[] get7BitOutputEscapes()
    {
        int[] r0;

        r0 = <org.codehaus.jackson.util.CharTypes: int[] sOutputEscapes128>;

        return r0;
    }

    public static final int[] getInputCodeComment()
    {
        int[] r0;

        r0 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesComment>;

        return r0;
    }

    public static final int[] getInputCodeLatin1()
    {
        int[] r0;

        r0 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodes>;

        return r0;
    }

    public static final int[] getInputCodeLatin1JsNames()
    {
        int[] r0;

        r0 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesJsNames>;

        return r0;
    }

    public static final int[] getInputCodeUtf8()
    {
        int[] r0;

        r0 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesUtf8>;

        return r0;
    }

    public static final int[] getInputCodeUtf8JsNames()
    {
        int[] r0;

        r0 = <org.codehaus.jackson.util.CharTypes: int[] sInputCodesUtf8JsNames>;

        return r0;
    }
}
