public final class org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node extends java.lang.Object
{
    public final java.lang.Object _data;
    public final int _dataLength;
    public org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next;

    public void <init>(java.lang.Object, int)
    {
        int $i0;
        java.lang.Object $r1;
        org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node r0;

        r0 := @this: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: java.lang.Object _data> = $r1;

        r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: int _dataLength> = $i0;

        return;
    }

    public int copyData(java.lang.Object, int)
    {
        org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node r0;
        int $i0, $i1;
        java.lang.Object $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node;

        $r2 := @parameter0: java.lang.Object;

        $i1 := @parameter1: int;

        $r1 = r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: java.lang.Object _data>;

        $i0 = r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: int _dataLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i1, $i0);

        $i0 = r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: int _dataLength>;

        $i1 = $i1 + $i0;

        return $i1;
    }

    public java.lang.Object getData()
    {
        java.lang.Object r1;
        org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node r0;

        r0 := @this: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node;

        r1 = r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: java.lang.Object _data>;

        return r1;
    }

    public void linkNext(org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node)
    {
        java.lang.IllegalStateException $r3;
        org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node r0, $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node;

        $r2 := @parameter0: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node;

        $r1 = r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next>;

        if $r1 != null goto label1;

        r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next> = $r2;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;
    }

    public org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node next()
    {
        org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node r0;

        r0 := @this: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node;

        r0 = r0.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next>;

        return r0;
    }
}
