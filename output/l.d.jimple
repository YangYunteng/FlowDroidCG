public final class l.d extends java.lang.Object
{
    public static final byte[] a;
    public static final byte[] b;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <l.d: byte[] a> = $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 45;

        $r0[63] = 95;

        <l.d: byte[] b> = $r0;

        return;
    }

    public static java.lang.String a(byte[])
    {
        byte[] $r0, $r2;
        java.lang.String $r1;

        $r2 := @parameter0: byte[];

        $r0 = <l.d: byte[] a>;

        $r1 = staticinvoke <l.d: java.lang.String a(byte[],byte[])>($r2, $r0);

        return $r1;
    }

    public static java.lang.String a(byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        java.lang.AssertionError $r5;
        short $s5;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8;
        java.lang.String $r4;
        java.io.UnsupportedEncodingException $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        $i0 = $i0 + 2;

        $i0 = $i0 / 3;

        $i0 = $i0 * 4;

        $r2 = newarray (byte)[$i0];

        $i0 = lengthof $r0;

        $i1 = lengthof $r0;

        $i1 = $i1 % 3;

        $i0 = $i0 - $i1;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $i2 + 1;

        $b4 = $r0[$i1];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $i6 >> 2;

        $b4 = $r1[$i6];

        $r2[$i2] = $b4;

        $i2 = $i3 + 1;

        $b4 = $r0[$i1];

        $b4 = $b4 & 3;

        $i6 = (int) $b4;

        $i7 = $i6 << 4;

        $i6 = $i1 + 1;

        $b4 = $r0[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $i8 >> 4;

        $i7 = $i7 | $i8;

        $b4 = $r1[$i7];

        $r2[$i3] = $b4;

        $i3 = $i2 + 1;

        $b4 = $r0[$i6];

        $b4 = $b4 & 15;

        $i6 = (int) $b4;

        $i7 = $i6 << 2;

        $i6 = $i1 + 2;

        $b4 = $r0[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $i8 >> 6;

        $i7 = $i7 | $i8;

        $b4 = $r1[$i7];

        $r2[$i2] = $b4;

        $i2 = $i3 + 1;

        $b4 = $r0[$i6];

        $b4 = $b4 & 63;

        $i6 = (int) $b4;

        $b4 = $r1[$i6];

        $r2[$i3] = $b4;

        $i1 = $i1 + 3;

        goto label1;

     label2:
        $i1 = lengthof $r0;

        $i1 = $i1 % 3;

        if $i1 == 1 goto label4;

        if $i1 == 2 goto label3;

        goto label5;

     label3:
        $i1 = $i2 + 1;

        $b4 = $r0[$i0];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $i3 >> 2;

        $b4 = $r1[$i3];

        $r2[$i2] = $b4;

        $i2 = $i1 + 1;

        $b4 = $r0[$i0];

        $b4 = $b4 & 3;

        $i3 = (int) $b4;

        $i3 = $i3 << 4;

        $i0 = $i0 + 1;

        $b4 = $r0[$i0];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $i6 >> 4;

        $i3 = $i6 | $i3;

        $b4 = $r1[$i3];

        $r2[$i1] = $b4;

        $i1 = $i2 + 1;

        $b4 = $r0[$i0];

        $b4 = $b4 & 15;

        $i0 = (int) $b4;

        $i0 = $i0 << 2;

        $b4 = $r1[$i0];

        $r2[$i2] = $b4;

        $r2[$i1] = 61;

        goto label5;

     label4:
        $i1 = $i2 + 1;

        $b4 = $r0[$i0];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $i3 >> 2;

        $b4 = $r1[$i3];

        $r2[$i2] = $b4;

        $i2 = $i1 + 1;

        $b4 = $r0[$i0];

        $b4 = $b4 & 3;

        $i0 = (int) $b4;

        $i0 = $i0 << 4;

        $b4 = $r1[$i0];

        $r2[$i1] = $b4;

        $i0 = $i2 + 1;

        $r2[$i2] = 61;

        $r2[$i0] = 61;

     label5:
        $r4 = new java.lang.String;

     label6:
        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "US-ASCII");

     label7:
        return $r4;

     label8:
        $r3 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        goto label9;

     label9:
        throw $r5;

        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }
}
