public class org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl extends org.codehaus.jackson.map.SerializerFactory$Config
{
    public static final org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS;
    public static final org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS;
    public final org.codehaus.jackson.map.Serializers[] _additionalKeySerializers;
    public final org.codehaus.jackson.map.Serializers[] _additionalSerializers;
    public final org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers;

    static void <clinit>()
    {
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r1;
        org.codehaus.jackson.map.Serializers[] $r0;

        $r0 = newarray (org.codehaus.jackson.map.Serializers)[0];

        <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.ser.BeanSerializerModifier)[0];

        <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS> = $r1;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>(null, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.Serializers[], org.codehaus.jackson.map.Serializers[], org.codehaus.jackson.map.ser.BeanSerializerModifier[])
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r1, $r2;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 := @parameter0: org.codehaus.jackson.map.Serializers[];

        $r2 := @parameter1: org.codehaus.jackson.map.Serializers[];

        $r3 := @parameter2: org.codehaus.jackson.map.ser.BeanSerializerModifier[];

        specialinvoke r0.<org.codehaus.jackson.map.SerializerFactory$Config: void <init>()>();

        if $r1 != null goto label1;

        $r1 = <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS>;

     label1:
        r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers> = $r1;

        if $r2 != null goto label2;

        $r2 = <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS>;

     label2:
        r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers> = $r2;

        if $r3 != null goto label3;

        $r3 = <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS>;

     label3:
        r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers> = $r3;

        return;
    }

    public boolean hasKeySerializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        int $i0;
        org.codehaus.jackson.map.Serializers[] $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasSerializerModifiers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r1;
        int $i0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasSerializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        int $i0;
        org.codehaus.jackson.map.Serializers[] $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Iterable keySerializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r2;
        java.lang.Iterable $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $r1 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r2);

        return $r1;
    }

    public java.lang.Iterable serializerModifiers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r2;
        java.lang.Iterable $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        $r1 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r2);

        return $r1;
    }

    public java.lang.Iterable serializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r2;
        java.lang.Iterable $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r1 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r2);

        return $r1;
    }

    public org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers)
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0, $r6;
        org.codehaus.jackson.map.Serializers[] $r1, $r5;
        java.lang.Object[] $r3;
        java.lang.IllegalArgumentException $r7;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r2;
        org.codehaus.jackson.map.Serializers $r4;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r4 := @parameter0: org.codehaus.jackson.map.Serializers;

        if $r4 == null goto label1;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r1, $r4);

        $r5 = (org.codehaus.jackson.map.Serializers[]) $r3;

        $r6 = new org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        specialinvoke $r6.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>($r1, $r5, $r2);

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Serializers");

        throw $r7;
    }

    public org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers)
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0, $r6;
        org.codehaus.jackson.map.Serializers[] $r1, $r5;
        java.lang.Object[] $r3;
        java.lang.IllegalArgumentException $r7;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r2;
        org.codehaus.jackson.map.Serializers $r4;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r4 := @parameter0: org.codehaus.jackson.map.Serializers;

        if $r4 == null goto label1;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r1, $r4);

        $r5 = (org.codehaus.jackson.map.Serializers[]) $r3;

        $r6 = new org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        specialinvoke $r6.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>($r5, $r1, $r2);

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Serializers");

        throw $r7;
    }

    public org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0, $r6;
        org.codehaus.jackson.map.Serializers[] $r1, $r2;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.ser.BeanSerializerModifier $r4;
        java.lang.IllegalArgumentException $r7;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r5;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r4 := @parameter0: org.codehaus.jackson.map.ser.BeanSerializerModifier;

        if $r4 == null goto label1;

        $r5 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r5, $r4);

        $r5 = (org.codehaus.jackson.map.ser.BeanSerializerModifier[]) $r3;

        $r6 = new org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        specialinvoke $r6.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>($r1, $r2, $r5);

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null modifier");

        throw $r7;
    }
}
