public class org.codehaus.jackson.map.deser.StdKeyDeserializers extends java.lang.Object
{
    public final java.util.HashMap _keyDeserializers;

    public void <init>()
    {
        org.codehaus.jackson.map.deser.StdKeyDeserializer$ShortKD $r5;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$FloatKD $r8;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$IntKD $r6;
        java.util.HashMap $r1;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$BoolKD $r2;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$DoubleKD $r9;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$LongKD $r7;
        org.codehaus.jackson.map.deser.StdKeyDeserializers r0;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$CharKD $r4;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$ByteKD $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdKeyDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: java.util.HashMap _keyDeserializers> = $r1;

        $r2 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$BoolKD;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.StdKeyDeserializer$BoolKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r2);

        $r3 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$ByteKD;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.StdKeyDeserializer$ByteKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r3);

        $r4 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$CharKD;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.StdKeyDeserializer$CharKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r4);

        $r5 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$ShortKD;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.StdKeyDeserializer$ShortKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r5);

        $r6 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$IntKD;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.StdKeyDeserializer$IntKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r6);

        $r7 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$LongKD;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.StdKeyDeserializer$LongKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r7);

        $r8 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$FloatKD;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.StdKeyDeserializer$FloatKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r8);

        $r9 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$DoubleKD;

        specialinvoke $r9.<org.codehaus.jackson.map.deser.StdKeyDeserializer$DoubleKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>($r9);

        return;
    }

    private void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)
    {
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.map.deser.StdKeyDeserializers r0;
        org.codehaus.jackson.map.deser.StdKeyDeserializer $r1;
        org.codehaus.jackson.type.JavaType $r5;
        java.util.HashMap $r2;
        java.lang.Class $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdKeyDeserializers;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.StdKeyDeserializer;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.StdKeyDeserializer: java.lang.Class getKeyClass()>();

        $r2 = r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: java.util.HashMap _keyDeserializers>;

        $r4 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);

        return;
    }

    public static java.util.HashMap constructAll()
    {
        org.codehaus.jackson.map.deser.StdKeyDeserializers $r0;
        java.util.HashMap r1;

        $r0 = new org.codehaus.jackson.map.deser.StdKeyDeserializers;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: void <init>()>();

        r1 = $r0.<org.codehaus.jackson.map.deser.StdKeyDeserializers: java.util.HashMap _keyDeserializers>;

        return r1;
    }

    public static org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.deser.StdKeyDeserializer$EnumKD $r5;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.DeserializationConfig $r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;
        org.codehaus.jackson.map.deser.EnumResolver $r4;

        $r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r3 = virtualinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = staticinvoke <org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructUnsafe(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>($r2, $r3);

        $r5 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$EnumKD;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.StdKeyDeserializer$EnumKD: void <init>(org.codehaus.jackson.map.deser.EnumResolver)>($r4);

        return $r5;
    }

    public static org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.deser.StdKeyDeserializer$StringCtorKeyDeserializer $r6;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        java.lang.Class[] $r4;
        org.codehaus.jackson.map.deser.StdKeyDeserializer$StringFactoryKeyDeserializer $r8;
        org.codehaus.jackson.map.DeserializationConfig $r0;
        java.lang.reflect.Constructor $r5;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.BeanDescription $r2;
        java.lang.reflect.Method $r7;

        $r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r1);

        $r3 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r2;

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljava/lang/String;";

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[])>($r4);

        if $r5 == null goto label1;

        $r6 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$StringCtorKeyDeserializer;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.StdKeyDeserializer$StringCtorKeyDeserializer: void <init>(java.lang.reflect.Constructor)>($r5);

        return $r6;

     label1:
        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljava/lang/String;";

        $r7 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Method findFactoryMethod(java.lang.Class[])>($r4);

        if $r7 == null goto label2;

        $r8 = new org.codehaus.jackson.map.deser.StdKeyDeserializer$StringFactoryKeyDeserializer;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.StdKeyDeserializer$StringFactoryKeyDeserializer: void <init>(java.lang.reflect.Method)>($r7);

        return $r8;

     label2:
        return null;
    }
}
