public final class com.google.common.collect.RegularContiguousSet extends com.google.common.collect.ContiguousSet
{
    public static final long serialVersionUID;
    public final com.google.common.collect.Range range;

    public void <init>(com.google.common.collect.Range, com.google.common.collect.DiscreteDomain)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.Range $r1;
        com.google.common.collect.DiscreteDomain $r2;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 := @parameter1: com.google.common.collect.DiscreteDomain;

        specialinvoke r0.<com.google.common.collect.ContiguousSet: void <init>(com.google.common.collect.DiscreteDomain)>($r2);

        r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range> = $r1;

        return;
    }

    public static boolean access$000(java.lang.Comparable, java.lang.Comparable)
    {
        java.lang.Comparable $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Comparable;

        $r0 := @parameter1: java.lang.Comparable;

        $z0 = staticinvoke <com.google.common.collect.RegularContiguousSet: boolean equalsOrThrow(java.lang.Comparable,java.lang.Comparable)>($r1, $r0);

        return $z0;
    }

    public static boolean equalsOrThrow(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable $r0, $r1;

        $r1 := @parameter0: java.lang.Comparable;

        $r0 := @parameter1: java.lang.Comparable;

        if $r0 == null goto label1;

        $i0 = staticinvoke <com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>($r1, $r0);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r4;
        com.google.common.collect.DiscreteDomain $r3;
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.EmptyContiguousSet $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r1);

        $r3 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r4 = staticinvoke <com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)>($r1, $r3);

        return $r4;

     label1:
        $r5 = new com.google.common.collect.EmptyContiguousSet;

        $r3 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        specialinvoke $r5.<com.google.common.collect.EmptyContiguousSet: void <init>(com.google.common.collect.DiscreteDomain)>($r3);

        return $r5;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.Range $r1;
        java.lang.Object $r3;
        java.lang.Comparable $r4;
        java.lang.ClassCastException $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r3 := @parameter0: java.lang.Object;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

     label2:
        $r4 = (java.lang.Comparable) $r3;

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r4);

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label2 to label3 with label4;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.google.common.collect.RegularContiguousSet r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <com.google.common.collect.Collections2: boolean containsAllImpl(java.util.Collection,java.util.Collection)>(r0, $r1);

        return $z0;
    }

    public com.google.common.collect.ImmutableList createAsList()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.RegularContiguousSet$3 $r3;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.DiscreteDomain $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $z0 = $r2.<com.google.common.collect.DiscreteDomain: boolean supportsFastOffset>;

        if $z0 == 0 goto label1;

        $r3 = new com.google.common.collect.RegularContiguousSet$3;

        specialinvoke $r3.<com.google.common.collect.RegularContiguousSet$3: void <init>(com.google.common.collect.RegularContiguousSet)>(r0);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList createAsList()>();

        return $r1;
    }

    public com.google.common.collect.UnmodifiableIterator descendingIterator()
    {
        com.google.common.collect.RegularContiguousSet r0;
        java.lang.Comparable $r2;
        com.google.common.collect.RegularContiguousSet$2 $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = new com.google.common.collect.RegularContiguousSet$2;

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable last()>();

        specialinvoke $r1.<com.google.common.collect.RegularContiguousSet$2: void <init>(com.google.common.collect.RegularContiguousSet,java.lang.Comparable)>(r0, $r2);

        return $r1;
    }

    public volatile java.util.Iterator descendingIterator()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.UnmodifiableIterator descendingIterator()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.RegularContiguousSet r0, $r3;
        com.google.common.collect.DiscreteDomain $r1, $r4;
        java.lang.Object $r2;
        java.lang.Comparable $r5, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 := @parameter0: java.lang.Object;

        if $r2 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof com.google.common.collect.RegularContiguousSet;

        if $z0 == 0 goto label3;

        $r3 = (com.google.common.collect.RegularContiguousSet) $r2;

        $r4 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r1 = $r3.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        $r6 = virtualinvoke $r3.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable last()>();

        $r6 = virtualinvoke $r3.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable last()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $z0 = specialinvoke r0.<com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.Comparable first()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.Cut $r4;
        com.google.common.collect.DiscreteDomain $r1;
        com.google.common.collect.Range $r3;
        java.lang.Comparable $r2;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r3 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r1 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r2 = virtualinvoke $r4.<com.google.common.collect.Cut: java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain)>($r1);

        return $r2;
    }

    public volatile java.lang.Object first()
    {
        com.google.common.collect.RegularContiguousSet r0;
        java.lang.Comparable $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        return $r1;
    }

    public int hashCode()
    {
        com.google.common.collect.RegularContiguousSet r0;
        int $i0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $i0 = staticinvoke <com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>(r0);

        return $i0;
    }

    public com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable, boolean)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r4;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        java.lang.Comparable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: java.lang.Comparable;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType)>($r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object, boolean)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r1;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (java.lang.Comparable) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean)>($r3, $z0);

        return $r1;
    }

    public int indexOf(java.lang.Object)
    {
        com.google.common.collect.RegularContiguousSet r0;
        long $l0;
        com.google.common.collect.DiscreteDomain $r2;
        int $i1;
        java.lang.Object $r1;
        java.lang.Comparable $r3, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r3 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        $r4 = (java.lang.Comparable) $r1;

        $l0 = virtualinvoke $r2.<com.google.common.collect.DiscreteDomain: long distance(java.lang.Comparable,java.lang.Comparable)>($r3, $r4);

        $i1 = (int) $l0;

        return $i1;

     label1:
        $i1 = -1;

        return $i1;
    }

    public com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r1;
        com.google.common.collect.Range $r8;
        com.google.common.collect.Ordering $r4;
        com.google.common.collect.DiscreteDomain $r2, $r3;
        int $i0;
        java.lang.Comparable $r5, $r7;
        java.lang.Object $r6;
        com.google.common.collect.EmptyContiguousSet $r9;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: com.google.common.collect.ContiguousSet;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r3 = $r1.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $r4 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        $r6 = virtualinvoke $r1.<com.google.common.collect.ImmutableSortedSet: java.lang.Object first()>();

        $r6 = virtualinvoke $r4.<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = (java.lang.Comparable) $r6;

        $r4 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r7 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable last()>();

        $r6 = virtualinvoke $r1.<com.google.common.collect.ImmutableSortedSet: java.lang.Object last()>();

        $r6 = virtualinvoke $r4.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 > 0 goto label2;

        $r8 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable)>($r5, $r7);

        $r2 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r1 = staticinvoke <com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain)>($r8, $r2);

        return $r1;

     label2:
        $r9 = new com.google.common.collect.EmptyContiguousSet;

        $r2 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        specialinvoke $r9.<com.google.common.collect.EmptyContiguousSet: void <init>(com.google.common.collect.DiscreteDomain)>($r2);

        return $r9;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.RegularContiguousSet r0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        return 0;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.RegularContiguousSet r0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        return 0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.RegularContiguousSet r0;
        java.lang.Comparable $r2;
        com.google.common.collect.RegularContiguousSet$1 $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = new com.google.common.collect.RegularContiguousSet$1;

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        specialinvoke $r1.<com.google.common.collect.RegularContiguousSet$1: void <init>(com.google.common.collect.RegularContiguousSet,java.lang.Comparable)>(r0, $r2);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public java.lang.Comparable last()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.Cut $r4;
        com.google.common.collect.DiscreteDomain $r1;
        com.google.common.collect.Range $r3;
        java.lang.Comparable $r2;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r3 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r1 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r2 = virtualinvoke $r4.<com.google.common.collect.Cut: java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain)>($r1);

        return $r2;
    }

    public volatile java.lang.Object last()
    {
        com.google.common.collect.RegularContiguousSet r0;
        java.lang.Comparable $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable last()>();

        return $r1;
    }

    public com.google.common.collect.Range range()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.Range $r1;
        com.google.common.collect.BoundType $r2;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType)>($r2, $r2);

        return $r1;
    }

    public com.google.common.collect.Range range(com.google.common.collect.BoundType, com.google.common.collect.BoundType)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.Cut $r4, $r6;
        com.google.common.collect.BoundType $r1, $r2;
        com.google.common.collect.DiscreteDomain $r5;
        com.google.common.collect.Range $r3;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: com.google.common.collect.BoundType;

        $r2 := @parameter1: com.google.common.collect.BoundType;

        $r3 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $r4 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r5 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r4 = virtualinvoke $r4.<com.google.common.collect.Cut: com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)>($r1, $r5);

        $r3 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $r6 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r5 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r6 = virtualinvoke $r6.<com.google.common.collect.Cut: com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain)>($r2, $r5);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut)>($r4, $r6);

        return $r3;
    }

    public int size()
    {
        com.google.common.collect.RegularContiguousSet r0;
        byte $b0;
        com.google.common.collect.DiscreteDomain $r1;
        int $i2;
        java.lang.Comparable $r2, $r3;
        long $l1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable first()>();

        $r3 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: java.lang.Comparable last()>();

        $l1 = virtualinvoke $r1.<com.google.common.collect.DiscreteDomain: long distance(java.lang.Comparable,java.lang.Comparable)>($r2, $r3);

        $b0 = $l1 cmp 2147483647L;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        return 2147483647;

     label1:
        $i2 = (int) $l1;

        $i2 = $i2 + 1;

        return $i2;
    }

    public com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable, boolean, java.lang.Comparable, boolean)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r8;
        com.google.common.collect.Range $r7;
        com.google.common.collect.BoundType $r5, $r6;
        com.google.common.collect.DiscreteDomain $r4;
        int $i0;
        java.lang.Comparable $r1, $r2;
        com.google.common.collect.EmptyContiguousSet $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 := @parameter0: java.lang.Comparable;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Comparable;

        $z1 := @parameter3: boolean;

        $i0 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);

        if $i0 != 0 goto label1;

        if $z0 != 0 goto label1;

        if $z1 != 0 goto label1;

        $r3 = new com.google.common.collect.EmptyContiguousSet;

        $r4 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        specialinvoke $r3.<com.google.common.collect.EmptyContiguousSet: void <init>(com.google.common.collect.DiscreteDomain)>($r4);

        return $r3;

     label1:
        $r5 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r6 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z1);

        $r7 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)>($r2, $r5, $r1, $r6);

        $r8 = specialinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range)>($r7);

        return $r8;
    }

    public volatile com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r1;
        java.lang.Object $r2, $r3;
        java.lang.Comparable $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 := @parameter2: java.lang.Object;

        $z1 := @parameter3: boolean;

        $r4 = (java.lang.Comparable) $r2;

        $r5 = (java.lang.Comparable) $r3;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean)>($r4, $z0, $r5, $z1);

        return $r1;
    }

    public com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable, boolean)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r4;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        java.lang.Comparable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 := @parameter0: java.lang.Comparable;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType)>($r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object, boolean)
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.ContiguousSet $r1;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (java.lang.Comparable) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean)>($r3, $z0);

        return $r1;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.RegularContiguousSet r0;
        com.google.common.collect.DiscreteDomain $r3;
        com.google.common.collect.Range $r2;
        com.google.common.collect.RegularContiguousSet$SerializedForm $r1;

        r0 := @this: com.google.common.collect.RegularContiguousSet;

        $r1 = new com.google.common.collect.RegularContiguousSet$SerializedForm;

        $r2 = r0.<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range>;

        $r3 = r0.<com.google.common.collect.ContiguousSet: com.google.common.collect.DiscreteDomain domain>;

        specialinvoke $r1.<com.google.common.collect.RegularContiguousSet$SerializedForm: void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain,com.google.common.collect.RegularContiguousSet$1)>($r2, $r3, null);

        return $r1;
    }
}
