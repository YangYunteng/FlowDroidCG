public final class com.google.common.util.concurrent.Striped$WeakSafeCondition extends com.google.common.util.concurrent.ForwardingCondition
{
    public final java.util.concurrent.locks.Condition delegate;
    public final com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference;

    public void <init>(java.util.concurrent.locks.Condition, com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock)
    {
        com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock $r2;
        java.util.concurrent.locks.Condition $r1;
        com.google.common.util.concurrent.Striped$WeakSafeCondition r0;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeCondition;

        $r1 := @parameter0: java.util.concurrent.locks.Condition;

        $r2 := @parameter1: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock;

        specialinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: void <init>()>();

        r0.<com.google.common.util.concurrent.Striped$WeakSafeCondition: java.util.concurrent.locks.Condition delegate> = $r1;

        r0.<com.google.common.util.concurrent.Striped$WeakSafeCondition: com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference> = $r2;

        return;
    }

    public java.util.concurrent.locks.Condition delegate()
    {
        java.util.concurrent.locks.Condition r1;
        com.google.common.util.concurrent.Striped$WeakSafeCondition r0;

        r0 := @this: com.google.common.util.concurrent.Striped$WeakSafeCondition;

        r1 = r0.<com.google.common.util.concurrent.Striped$WeakSafeCondition: java.util.concurrent.locks.Condition delegate>;

        return r1;
    }
}
