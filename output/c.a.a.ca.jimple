public class c.a.a.Ca extends java.lang.Object implements java.lang.Runnable
{
    public final c.a.a.Da a;

    public void <init>(c.a.a.Da)
    {
        c.a.a.Da $r1;
        c.a.a.Ca r0;

        r0 := @this: c.a.a.Ca;

        $r1 := @parameter0: c.a.a.Da;

        r0.<c.a.a.Ca: c.a.a.Da a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Object[] $r5;
        java.util.concurrent.FutureTask $r1;
        c.a.a.Ba $r2;
        java.lang.String $r6;
        c.a.a.Ca r0;
        java.util.concurrent.ExecutorService $r3;
        java.lang.Exception $r4;

        r0 := @this: c.a.a.Ca;

        $r1 = new java.util.concurrent.FutureTask;

        $r2 = new c.a.a.Ba;

        specialinvoke $r2.<c.a.a.Ba: void <init>(c.a.a.Ca)>(r0);

        specialinvoke $r1.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        $r3 = staticinvoke <com.adobe.mobile.StaticMethods: java.util.concurrent.ExecutorService v()>();

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1);

     label1:
        virtualinvoke $r1.<java.util.concurrent.FutureTask: java.lang.Object get()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r5[0] = $r6;

        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("Pii Callback - Error waiting for callbacks being loaded (%s)", $r5);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
