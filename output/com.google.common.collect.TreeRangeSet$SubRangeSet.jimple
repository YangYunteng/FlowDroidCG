public final class com.google.common.collect.TreeRangeSet$SubRangeSet extends com.google.common.collect.TreeRangeSet
{
    public final com.google.common.collect.Range restriction;
    public final com.google.common.collect.TreeRangeSet this$0;

    public void <init>(com.google.common.collect.TreeRangeSet, com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1, $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound $r2;
        java.util.NavigableMap $r5;
        com.google.common.collect.TreeRangeSet $r4;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r4 := @parameter0: com.google.common.collect.TreeRangeSet;

        $r1 := @parameter1: com.google.common.collect.Range;

        r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.TreeRangeSet this$0> = $r4;

        $r2 = new com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $r5 = $r4.<com.google.common.collect.TreeRangeSet: java.util.NavigableMap rangesByLowerBound>;

        specialinvoke $r2.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1)>($r3, $r1, $r5, null);

        specialinvoke r0.<com.google.common.collect.TreeRangeSet: void <init>(java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1)>($r2, null);

        r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction> = $r1;

        return;
    }

    public void add(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r1);

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)>($z0, "Cannot add range %s to subRangeSet(%s)", $r1, $r2);

        specialinvoke r0.<com.google.common.collect.TreeRangeSet: void add(com.google.common.collect.Range)>($r1);

        return;
    }

    public void clear()
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeSet $r1;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.TreeRangeSet this$0>;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        virtualinvoke $r1.<com.google.common.collect.TreeRangeSet: void remove(com.google.common.collect.Range)>($r2);

        return;
    }

    public boolean contains(java.lang.Comparable)
    {
        com.google.common.collect.Range $r2;
        java.lang.Comparable $r1;
        com.google.common.collect.TreeRangeSet $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.TreeRangeSet this$0>;

        $z0 = virtualinvoke $r3.<com.google.common.collect.TreeRangeSet: boolean contains(java.lang.Comparable)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean encloses(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.TreeRangeSet $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.TreeRangeSet this$0>;

        $r1 = staticinvoke <com.google.common.collect.TreeRangeSet: com.google.common.collect.Range access$600(com.google.common.collect.TreeRangeSet,com.google.common.collect.Range)>($r3, $r1);

        if $r1 == null goto label1;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $r1 = virtualinvoke $r1.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r2);

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.google.common.collect.Range rangeContaining(java.lang.Comparable)
    {
        com.google.common.collect.Range $r2, $r4;
        java.lang.Comparable $r1;
        com.google.common.collect.TreeRangeSet $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.TreeRangeSet this$0>;

        $r2 = virtualinvoke $r3.<com.google.common.collect.TreeRangeSet: com.google.common.collect.Range rangeContaining(java.lang.Comparable)>($r1);

        if $r2 != null goto label2;

        return null;

     label2:
        $r4 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r4);

        return $r2;
    }

    public void remove(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.TreeRangeSet $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.TreeRangeSet this$0>;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r1);

        virtualinvoke $r3.<com.google.common.collect.TreeRangeSet: void remove(com.google.common.collect.Range)>($r2);

     label1:
        return;
    }

    public com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.ImmutableRangeSet $r4;
        com.google.common.collect.TreeRangeSet$SubRangeSet r0, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r1);

        if $z0 == 0 goto label2;

        $r3 = new com.google.common.collect.TreeRangeSet$SubRangeSet;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSet: com.google.common.collect.Range restriction>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r2);

        specialinvoke $r3.<com.google.common.collect.TreeRangeSet$SubRangeSet: void <init>(com.google.common.collect.TreeRangeSet,com.google.common.collect.Range)>(r0, $r2);

        return $r3;

     label2:
        $r4 = staticinvoke <com.google.common.collect.ImmutableRangeSet: com.google.common.collect.ImmutableRangeSet of()>();

        return $r4;
    }
}
