public class org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer extends org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer
{

    public void <init>()
    {
        org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: void <init>(java.lang.Class)>(class "Lorg/joda/time/LocalDateTime;");

        return;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer r0;
        org.joda.time.LocalDateTime $r2;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public org.joda.time.LocalDateTime deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r3, $r4;
        long $l7;
        org.codehaus.jackson.map.DeserializationContext $r2;
        int[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;
        org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer r0;
        org.joda.time.DateTime $r7;
        org.joda.time.LocalDateTime $r5;

        r0 := @this: org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 == 0 goto label4;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $i1 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $i2 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $i3 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $i4 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $i5 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r3 == $r4 goto label1;

        $i6 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label2;

     label1:
        $i6 = 0;

     label2:
        $r3 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r3 == $r4 goto label3;

        virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>($r1, $r4, "after LocalDateTime ints");

     label3:
        $r5 = new org.joda.time.LocalDateTime;

        specialinvoke $r5.<org.joda.time.LocalDateTime: void <init>(int,int,int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4, $i5, $i6);

        return $r5;

     label4:
        $r6 = <org.codehaus.jackson.map.ext.JodaDeserializers$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i0 = $r6[$i0];

        if $i0 == 1 goto label7;

        if $i0 == 2 goto label5;

        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>($r1, $r3, "expected JSON Array or Number");

        return null;

     label5:
        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(org.codehaus.jackson.JsonParser)>($r1);

        if $r7 != null goto label6;

        return null;

     label6:
        $r5 = virtualinvoke $r7.<org.joda.time.DateTime: org.joda.time.LocalDateTime toLocalDateTime()>();

        return $r5;

     label7:
        $r5 = new org.joda.time.LocalDateTime;

        $l7 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: long getLongValue()>();

        specialinvoke $r5.<org.joda.time.LocalDateTime: void <init>(long)>($l7);

        return $r5;
    }
}
