public class com.google.protobuf.ByteString$LiteralByteString extends com.google.protobuf.ByteString$LeafByteString
{
    public static final long serialVersionUID;
    public final byte[] bytes;

    public void <init>(byte[])
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<com.google.protobuf.ByteString$LeafByteString: void <init>()>();

        if $r1 == null goto label1;

        r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes> = $r1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;
    }

    public final java.nio.ByteBuffer asReadOnlyByteBuffer()
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r2 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        return $r2;
    }

    public final java.util.List asReadOnlyByteBufferList()
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        java.util.List $r2;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

    public byte byteAt(int)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        byte $b1;
        int $i0;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[$i0];

        return $b1;
    }

    public final void copyTo(java.nio.ByteBuffer)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r2;
        int $i0, $i1;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    public void copyToInternal(byte[], int, int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        com.google.protobuf.ByteString $r2;
        com.google.protobuf.ByteString$LiteralByteString r0, $r3;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.protobuf.ByteString;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = (com.google.protobuf.ByteString) $r1;

        $i1 = virtualinvoke $r2.<com.google.protobuf.ByteString: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        if $i0 != 0 goto label4;

        return 1;

     label4:
        $z0 = $r1 instanceof com.google.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label6;

        $r3 = (com.google.protobuf.ByteString$LiteralByteString) $r1;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int peekCachedHashCode()>();

        $i1 = virtualinvoke $r3.<com.google.protobuf.ByteString: int peekCachedHashCode()>();

        if $i0 == 0 goto label5;

        if $i1 == 0 goto label5;

        if $i0 == $i1 goto label5;

        return 0;

     label5:
        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $z0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: boolean equalsRange(com.google.protobuf.ByteString,int,int)>($r3, 0, $i0);

        return $z0;

     label6:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public final boolean equalsRange(com.google.protobuf.ByteString, int, int)
    {
        byte[] $r3, $r4;
        byte $b0, $b5;
        int $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r7;
        boolean $z0;
        com.google.protobuf.ByteString$LiteralByteString r0, $r2;
        java.lang.IllegalArgumentException $r9;
        com.google.protobuf.ByteString $r1, $r5;
        java.lang.StringBuilder $r6, $r8;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        if $i2 > $i3 goto label6;

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        if $i3 > $i4 goto label5;

        $z0 = $r1 instanceof com.google.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label4;

        $r2 = (com.google.protobuf.ByteString$LiteralByteString) $r1;

        $r3 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $r4 = $r2.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i2 = $i3 + $i2;

        $i3 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i4 = virtualinvoke $r2.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = $i4 + $i1;

     label1:
        if $i3 >= $i2 goto label3;

        $b5 = $r3[$i3];

        $b0 = $r4[$i1];

        $i4 = (int) $b5;

        $i6 = (int) $b0;

        if $i4 == $i6 goto label2;

        return 0;

     label2:
        $i3 = $i3 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        $r1 = virtualinvoke $r1.<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int,int)>($i1, $i3);

        $r5 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: com.google.protobuf.ByteString substring(int,int)>(0, $i2);

        $z0 = virtualinvoke $r1.<com.google.protobuf.ByteString: boolean equals(java.lang.Object)>($r5);

        return $z0;

     label5:
        $r9 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        $r6 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran off end of other: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r9;

     label6:
        $r9 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        $r6 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length too large: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        goto label7;

     label7:
        throw $r9;
    }

    public int getOffsetIntoBytes()
    {
        com.google.protobuf.ByteString$LiteralByteString r0;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        return 0;
    }

    public byte internalByteAt(int)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        byte $b1;
        int $i0;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[$i0];

        return $b1;
    }

    public final boolean isValidUtf8()
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $i1 = $i1 + $i0;

        $z0 = staticinvoke <com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r1, $i0, $i1);

        return $z0;
    }

    public final com.google.protobuf.CodedInputStream newCodedInput()
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        com.google.protobuf.CodedInputStream $r2;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>($r1, $i0, $i1, 1);

        return $r2;
    }

    public final java.io.InputStream newInput()
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r2;
        java.io.ByteArrayInputStream $r1;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    public final int partialHash(int, int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i3 + $i0;

        $i2 = staticinvoke <com.google.protobuf.Internal: int partialHash(int,byte[],int,int)>($i2, $r1, $i0, $i1);

        return $i2;
    }

    public final int partialIsValidUtf8(int, int, int)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = $i3 + $i1;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = $i2 + $i1;

        $i0 = staticinvoke <com.google.protobuf.Utf8: int partialIsValidUtf8(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        return $i0;
    }

    public int size()
    {
        int $i0;
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final com.google.protobuf.ByteString substring(int, int)
    {
        com.google.protobuf.ByteString r3;
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        com.google.protobuf.ByteString$BoundedByteString $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        $i1 = staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>($i0, $i1, $i2);

        if $i1 != 0 goto label1;

        r3 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        return r3;

     label1:
        $r2 = new com.google.protobuf.ByteString$BoundedByteString;

        $r1 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i2 + $i0;

        specialinvoke $r2.<com.google.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>($r1, $i0, $i1);

        return $r2;
    }

    public final java.lang.String toStringInternal(java.nio.charset.Charset)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r3;
        java.nio.charset.Charset $r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new java.lang.String;

        $r3 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, $i0, $i1, $r1);

        return $r2;
    }

    public final void writeTo(com.google.protobuf.ByteOutput)
    {
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r2;
        int $i0, $i1;
        com.google.protobuf.ByteOutput $r1;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: com.google.protobuf.ByteOutput;

        $r2 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke $r1.<com.google.protobuf.ByteOutput: void writeLazy(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    public final void writeTo(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    public final void writeToInternal(java.io.OutputStream, int, int)
    {
        java.io.OutputStream $r1;
        com.google.protobuf.ByteString$LiteralByteString r0;
        byte[] $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.ByteString$LiteralByteString;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.google.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i2 + $i0;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    public static void <clinit>()
    {
        <com.google.protobuf.ByteString$LiteralByteString: long serialVersionUID> = 1L;

        return;
    }
}
