public final class com.google.zxing.common.detector.MathUtils extends java.lang.Object
{

    public void <init>()
    {
        com.google.zxing.common.detector.MathUtils r0;

        r0 := @this: com.google.zxing.common.detector.MathUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float distance(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        double $d0;

        $f2 := @parameter0: float;

        $f3 := @parameter1: float;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $f2 = $f2 - $f0;

        $f3 = $f3 - $f1;

        $f2 = $f2 * $f2;

        $f3 = $f3 * $f3;

        $f2 = $f2 + $f3;

        $d0 = (double) $f2;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f2 = (float) $d0;

        return $f2;
    }

    public static float distance(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        float $f0;
        double $d0;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = $i2 - $i0;

        $i3 = $i3 - $i1;

        $i2 = $i2 * $i2;

        $i3 = $i3 * $i3;

        $i2 = $i2 + $i3;

        $d0 = (double) $i2;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    public static int round(float)
    {
        int $i0;
        float $f0;

        $f0 := @parameter0: float;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }
}
