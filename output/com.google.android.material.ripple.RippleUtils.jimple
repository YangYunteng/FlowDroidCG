public class com.google.android.material.ripple.RippleUtils extends java.lang.Object
{
    public static final int[] ENABLED_PRESSED_STATE_SET;
    public static final int[] FOCUSED_STATE_SET;
    public static final int[] HOVERED_FOCUSED_STATE_SET;
    public static final int[] HOVERED_STATE_SET;
    public static final java.lang.String LOG_TAG;
    public static final int[] PRESSED_STATE_SET;
    public static final int[] SELECTED_FOCUSED_STATE_SET;
    public static final int[] SELECTED_HOVERED_FOCUSED_STATE_SET;
    public static final int[] SELECTED_HOVERED_STATE_SET;
    public static final int[] SELECTED_PRESSED_STATE_SET;
    public static final int[] SELECTED_STATE_SET;
    public static final java.lang.String TRANSPARENT_DEFAULT_COLOR_WARNING;
    public static final boolean USE_FRAMEWORK_RIPPLE;

    static void <clinit>()
    {
        int[] $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r0;
        boolean $z0;

        <com.google.android.material.ripple.RippleUtils: java.lang.String TRANSPARENT_DEFAULT_COLOR_WARNING> = "Use a non-transparent color for the default color as it will be used to finish ripple animations.";

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE> = $z0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842919;

        <com.google.android.material.ripple.RippleUtils: int[] PRESSED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16843623;

        $r1[1] = 16842908;

        <com.google.android.material.ripple.RippleUtils: int[] HOVERED_FOCUSED_STATE_SET> = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 16842908;

        <com.google.android.material.ripple.RippleUtils: int[] FOCUSED_STATE_SET> = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 16843623;

        <com.google.android.material.ripple.RippleUtils: int[] HOVERED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842913;

        $r1[1] = 16842919;

        <com.google.android.material.ripple.RippleUtils: int[] SELECTED_PRESSED_STATE_SET> = $r1;

        $r1 = newarray (int)[3];

        $r1[0] = 16842913;

        $r1[1] = 16843623;

        $r1[2] = 16842908;

        <com.google.android.material.ripple.RippleUtils: int[] SELECTED_HOVERED_FOCUSED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842913;

        $r1[1] = 16842908;

        <com.google.android.material.ripple.RippleUtils: int[] SELECTED_FOCUSED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842913;

        $r1[1] = 16843623;

        <com.google.android.material.ripple.RippleUtils: int[] SELECTED_HOVERED_STATE_SET> = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 16842913;

        <com.google.android.material.ripple.RippleUtils: int[] SELECTED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842910;

        $r1[1] = 16842919;

        <com.google.android.material.ripple.RippleUtils: int[] ENABLED_PRESSED_STATE_SET> = $r1;

        $r2 = class "Lcom/google/android/material/ripple/RippleUtils;";

        $r0 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.google.android.material.ripple.RippleUtils: java.lang.String LOG_TAG> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.ripple.RippleUtils r0;

        r0 := @this: com.google.android.material.ripple.RippleUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r0;
        int[][] $r1;
        int[] $r2, $r3;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.res.ColorStateList;

        $z0 = <com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>;

        if $z0 == 0 goto label1;

        $r1 = newarray (int[])[2];

        $r2 = newarray (int)[2];

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_STATE_SET>;

        $r1[0] = $r3;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_PRESSED_STATE_SET>;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[0] = $i0;

        $r3 = <android.util.StateSet: int[] NOTHING>;

        $r1[1] = $r3;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] PRESSED_STATE_SET>;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[1] = $i0;

        $r0 = new android.content.res.ColorStateList;

        specialinvoke $r0.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r1, $r2);

        return $r0;

     label1:
        $r1 = newarray (int[])[10];

        $r2 = newarray (int)[10];

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_PRESSED_STATE_SET>;

        $r1[0] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[0] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_HOVERED_FOCUSED_STATE_SET>;

        $r1[1] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[1] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_FOCUSED_STATE_SET>;

        $r1[2] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[2] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_HOVERED_STATE_SET>;

        $r1[3] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[3] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] SELECTED_STATE_SET>;

        $r1[4] = $r3;

        $r2[4] = 0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] PRESSED_STATE_SET>;

        $r1[5] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[5] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] HOVERED_FOCUSED_STATE_SET>;

        $r1[6] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[6] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] FOCUSED_STATE_SET>;

        $r1[7] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[7] = $i0;

        $r3 = <com.google.android.material.ripple.RippleUtils: int[] HOVERED_STATE_SET>;

        $r1[8] = $r3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>($r0, $r3);

        $r2[8] = $i0;

        $r3 = <android.util.StateSet: int[] NOTHING>;

        $r1[9] = $r3;

        $r2[9] = 0;

        $r0 = new android.content.res.ColorStateList;

        specialinvoke $r0.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r1, $r2);

        return $r0;
    }

    public static int doubleAlpha(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i1 = $i1 * 2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 255);

        $i0 = staticinvoke <b.i.c.e: int c(int,int)>($i0, $i1);

        return $i0;
    }

    public static int getColorForState(android.content.res.ColorStateList, int[])
    {
        android.content.res.ColorStateList $r0;
        int[] $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.res.ColorStateList;

        $r1 := @parameter1: int[];

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r1, $i0);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $z0 = <com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>;

        if $z0 == 0 goto label3;

        $i0 = staticinvoke <com.google.android.material.ripple.RippleUtils: int doubleAlpha(int)>($i0);

     label3:
        return $i0;
    }

    public static android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r0;
        int[] $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.res.ColorStateList;

        if $r0 == null goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 22 goto label2;

        if $i0 > 27 goto label2;

        $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        if $i0 != 0 goto label2;

        $r1 = <com.google.android.material.ripple.RippleUtils: int[] ENABLED_PRESSED_STATE_SET>;

        $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r1, 0);

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        if $i0 == 0 goto label2;

        $r2 = <com.google.android.material.ripple.RippleUtils: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Use a non-transparent color for the default color as it will be used to finish ripple animations.");

        return $r0;

     label1:
        $r0 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(0);

     label2:
        return $r0;
    }

    public static boolean shouldDrawRippleCompat(int[])
    {
        int[] $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        $r0 := @parameter0: int[];

        $i0 = lengthof $r0;

        $i2 = 0;

        $z0 = 0;

        $z1 = 0;

     label1:
        if $i2 >= $i0 goto label7;

        $i1 = $r0[$i2];

        if $i1 != 16842910 goto label2;

        $z0 = 1;

        goto label6;

     label2:
        if $i1 != 16842908 goto label4;

     label3:
        $z1 = 1;

        goto label6;

     label4:
        if $i1 != 16842919 goto label5;

        goto label3;

     label5:
        if $i1 != 16843623 goto label6;

        goto label3;

     label6:
        $i2 = $i2 + 1;

        goto label1;

     label7:
        if $z0 == 0 goto label8;

        if $z1 == 0 goto label8;

        return 1;

     label8:
        return 0;
    }
}
