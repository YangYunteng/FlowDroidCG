public final class com.google.common.collect.Tables$TransposeTable$1 extends java.lang.Object implements com.google.common.base.Function
{

    public void <init>()
    {
        com.google.common.collect.Tables$TransposeTable$1 r0;

        r0 := @this: com.google.common.collect.Tables$TransposeTable$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell)
    {
        com.google.common.collect.Tables$TransposeTable$1 r0;
        com.google.common.collect.Table$Cell $r1;
        java.lang.Object $r2, $r3, $r4;

        r0 := @this: com.google.common.collect.Tables$TransposeTable$1;

        $r1 := @parameter0: com.google.common.collect.Table$Cell;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r3 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r4 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        $r1 = staticinvoke <com.google.common.collect.Tables: com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        return $r1;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.common.collect.Tables$TransposeTable$1 r0;
        com.google.common.collect.Table$Cell $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.Tables$TransposeTable$1;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (com.google.common.collect.Table$Cell) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$TransposeTable$1: com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell)>($r1);

        return $r1;
    }
}
