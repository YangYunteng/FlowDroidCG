public class project.android.imageprocessing.filter.effect.MosaicFilter extends project.android.imageprocessing.filter.colour.LookupFilter
{
    public static final java.lang.String UNIFORM_COLOR;
    public static final java.lang.String UNIFORM_DISPLAY_SIZE;
    public static final java.lang.String UNIFORM_INPUT_SIZE;
    public static final java.lang.String UNIFORM_NUM_TILES;
    public boolean color;
    public int colorHandle;
    public android.graphics.PointF displayTileSize;
    public int displayTileSizeHandle;
    public android.graphics.PointF inputTileSize;
    public int inputTileSizeHandle;
    public int numOfTiles;
    public int numOfTilesHandle;

    public void <init>(android.content.Context, int, android.graphics.PointF, android.graphics.PointF, int, boolean)
    {
        android.content.Context $r1;
        android.graphics.PointF $r2, $r3;
        project.android.imageprocessing.filter.effect.MosaicFilter r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.filter.effect.MosaicFilter;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.PointF;

        $r3 := @parameter3: android.graphics.PointF;

        $i1 := @parameter4: int;

        $z0 := @parameter5: boolean;

        specialinvoke r0.<project.android.imageprocessing.filter.colour.LookupFilter: void <init>(android.content.Context,int)>($r1, $i0);

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: android.graphics.PointF inputTileSize> = $r2;

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: android.graphics.PointF displayTileSize> = $r3;

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int numOfTiles> = $i1;

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: boolean color> = $z0;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.effect.MosaicFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.MosaicFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nuniform sampler2D u_Texture1;\nvarying vec2 v_TexCoord;\nuniform vec2 u_InputSize;\nuniform vec2 u_DisplaySize;\nuniform int u_NumTiles;\nuniform int u_Color;\nvoid main(){\n\tvec2 xy = v_TexCoord;\n \txy = xy - mod(xy, u_DisplaySize);\n \tvec4 lumcoeff = vec4(0.299,0.587,0.114,0.0);\n \tvec4 inputColor = texture2D(u_Texture0, xy);\n \tfloat lum = dot(inputColor,lumcoeff);\n \tlum = 1.0 - lum;\n \tfloat stepsize = 1.0 / float(u_NumTiles);\n \tfloat lumStep = (lum - mod(lum, stepsize)) / stepsize;\n \tfloat rowStep = 1.0 / u_InputSize.x;\n \tfloat x = mod(lumStep, rowStep);\n \tfloat y = floor(lumStep / rowStep);\n \tvec2 startCoord = vec2(float(x) *  u_InputSize.x, float(y) * u_InputSize.y);\n \tvec2 finalCoord = startCoord + ((v_TexCoord - xy) * (u_InputSize / u_DisplaySize));\n \tvec4 color = texture2D(u_Texture1, finalCoord);\n \tif (u_Color == 1) {\n \t\tcolor = color * inputColor;\n\t}\n\tgl_FragColor = color;\n}\n";
    }

    public void initShaderHandles()
    {
        int $i0;
        project.android.imageprocessing.filter.effect.MosaicFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.MosaicFilter;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void initShaderHandles()>();

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_InputSize");

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int inputTileSizeHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_DisplaySize");

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int displayTileSizeHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_NumTiles");

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int numOfTilesHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Color");

        r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int colorHandle> = $i0;

        return;
    }

    public void passShaderValues()
    {
        android.graphics.PointF $r1;
        project.android.imageprocessing.filter.effect.MosaicFilter r0;
        int $i0, $i1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.filter.effect.MosaicFilter;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void passShaderValues()>();

        $i0 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int inputTileSizeHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: android.graphics.PointF inputTileSize>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f1 = $r1.<android.graphics.PointF: float y>;

        staticinvoke <android.opengl.GLES20: void glUniform2f(int,float,float)>($i0, $f0, $f1);

        $i0 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int displayTileSizeHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: android.graphics.PointF displayTileSize>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f1 = $r1.<android.graphics.PointF: float y>;

        staticinvoke <android.opengl.GLES20: void glUniform2f(int,float,float)>($i0, $f0, $f1);

        $i0 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int numOfTilesHandle>;

        $i1 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int numOfTiles>;

        staticinvoke <android.opengl.GLES20: void glUniform1i(int,int)>($i0, $i1);

        $z0 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: boolean color>;

        if $z0 == 0 goto label1;

        $i0 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int colorHandle>;

        staticinvoke <android.opengl.GLES20: void glUniform1i(int,int)>($i0, 1);

        return;

     label1:
        $i0 = r0.<project.android.imageprocessing.filter.effect.MosaicFilter: int colorHandle>;

        staticinvoke <android.opengl.GLES20: void glUniform1i(int,int)>($i0, 0);

        return;
    }

    public static void <clinit>()
    {
        <project.android.imageprocessing.filter.effect.MosaicFilter: java.lang.String UNIFORM_NUM_TILES> = "u_NumTiles";

        <project.android.imageprocessing.filter.effect.MosaicFilter: java.lang.String UNIFORM_INPUT_SIZE> = "u_InputSize";

        <project.android.imageprocessing.filter.effect.MosaicFilter: java.lang.String UNIFORM_DISPLAY_SIZE> = "u_DisplaySize";

        <project.android.imageprocessing.filter.effect.MosaicFilter: java.lang.String UNIFORM_COLOR> = "u_Color";

        return;
    }
}
