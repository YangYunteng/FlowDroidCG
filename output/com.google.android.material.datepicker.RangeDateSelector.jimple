public class com.google.android.material.datepicker.RangeDateSelector extends java.lang.Object implements com.google.android.material.datepicker.DateSelector
{
    public static final android.os.Parcelable$Creator CREATOR;
    public final java.lang.String invalidRangeEndError;
    public java.lang.String invalidRangeStartError;
    public java.lang.Long proposedTextEnd;
    public java.lang.Long proposedTextStart;
    public java.lang.Long selectedEndItem;
    public java.lang.Long selectedStartItem;

    static void <clinit>()
    {
        com.google.android.material.datepicker.RangeDateSelector$3 $r0;

        $r0 = new com.google.android.material.datepicker.RangeDateSelector$3;

        specialinvoke $r0.<com.google.android.material.datepicker.RangeDateSelector$3: void <init>()>();

        <com.google.android.material.datepicker.RangeDateSelector: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.String invalidRangeEndError> = " ";

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem> = null;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem> = null;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextStart> = null;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextEnd> = null;

        return;
    }

    public static java.lang.Long access$002(com.google.android.material.datepicker.RangeDateSelector, java.lang.Long)
    {
        com.google.android.material.datepicker.RangeDateSelector $r0;
        java.lang.Long $r1;

        $r0 := @parameter0: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter1: java.lang.Long;

        $r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextStart> = $r1;

        return $r1;
    }

    public static void access$100(com.google.android.material.datepicker.RangeDateSelector, com.google.android.material.textfield.TextInputLayout, com.google.android.material.textfield.TextInputLayout, com.google.android.material.datepicker.OnSelectionChangedListener)
    {
        com.google.android.material.datepicker.OnSelectionChangedListener $r3;
        com.google.android.material.textfield.TextInputLayout $r1, $r2;
        com.google.android.material.datepicker.RangeDateSelector $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter1: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter2: com.google.android.material.textfield.TextInputLayout;

        $r3 := @parameter3: com.google.android.material.datepicker.OnSelectionChangedListener;

        specialinvoke $r0.<com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>($r1, $r2, $r3);

        return;
    }

    public static java.lang.Long access$202(com.google.android.material.datepicker.RangeDateSelector, java.lang.Long)
    {
        com.google.android.material.datepicker.RangeDateSelector $r0;
        java.lang.Long $r1;

        $r0 := @parameter0: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter1: java.lang.Long;

        $r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextEnd> = $r1;

        return $r1;
    }

    public static java.lang.Long access$302(com.google.android.material.datepicker.RangeDateSelector, java.lang.Long)
    {
        com.google.android.material.datepicker.RangeDateSelector $r0;
        java.lang.Long $r1;

        $r0 := @parameter0: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter1: java.lang.Long;

        $r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem> = $r1;

        return $r1;
    }

    public static java.lang.Long access$402(com.google.android.material.datepicker.RangeDateSelector, java.lang.Long)
    {
        com.google.android.material.datepicker.RangeDateSelector $r0;
        java.lang.Long $r1;

        $r0 := @parameter0: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter1: java.lang.Long;

        $r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem> = $r1;

        return $r1;
    }

    private void clearInvalidRange(com.google.android.material.textfield.TextInputLayout, com.google.android.material.textfield.TextInputLayout)
    {
        java.lang.CharSequence $r3;
        com.google.android.material.textfield.TextInputLayout $r1, $r2;
        java.lang.String $r4;
        com.google.android.material.datepicker.RangeDateSelector r0;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r2 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter1: com.google.android.material.textfield.TextInputLayout;

        $r3 = virtualinvoke $r2.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.String invalidRangeStartError>;

        $r3 = virtualinvoke $r2.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>(null);

     label1:
        $r3 = virtualinvoke $r1.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>();

        if $r3 == null goto label2;

        $r3 = virtualinvoke $r1.<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>();

        $r4 = " ";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>(null);

     label2:
        return;
    }

    private boolean isValidRange(long, long)
    {
        byte $b1;
        int $i3;
        long $l0, $l2;
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $b1 = $l2 cmp $l0;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setInvalidRange(com.google.android.material.textfield.TextInputLayout, com.google.android.material.textfield.TextInputLayout)
    {
        com.google.android.material.textfield.TextInputLayout $r1, $r3;
        java.lang.String $r2;
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r3 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter1: com.google.android.material.textfield.TextInputLayout;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.String invalidRangeStartError>;

        virtualinvoke $r3.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>($r2);

        virtualinvoke $r1.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>(" ");

        return;
    }

    private void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout, com.google.android.material.textfield.TextInputLayout, com.google.android.material.datepicker.OnSelectionChangedListener)
    {
        com.google.android.material.datepicker.OnSelectionChangedListener $r2;
        com.google.android.material.textfield.TextInputLayout $r1, $r4;
        long $l0, $l1;
        b.i.h.d $r6;
        java.lang.Long $r3, $r5;
        com.google.android.material.datepicker.RangeDateSelector r0;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r4 := @parameter0: com.google.android.material.textfield.TextInputLayout;

        $r1 := @parameter1: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter2: com.google.android.material.datepicker.OnSelectionChangedListener;

        $r5 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextStart>;

        if $r5 == null goto label3;

        $r3 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextEnd>;

        if $r3 != null goto label1;

        goto label3;

     label1:
        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $r3 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextEnd>;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $z0 = specialinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: boolean isValidRange(long,long)>($l0, $l1);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextStart>;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem> = $r3;

        $r3 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextEnd>;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem> = $r3;

        $r6 = virtualinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: b.i.h.d getSelection()>();

        virtualinvoke $r2.<com.google.android.material.datepicker.OnSelectionChangedListener: void onSelectionChanged(java.lang.Object)>($r6);

        return;

     label2:
        specialinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>($r4, $r1);

        virtualinvoke $r2.<com.google.android.material.datepicker.OnSelectionChangedListener: void onIncompleteSelectionChanged()>();

        return;

     label3:
        specialinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>($r4, $r1);

        virtualinvoke $r2.<com.google.android.material.datepicker.OnSelectionChangedListener: void onIncompleteSelectionChanged()>();

        return;
    }

    public int describeContents()
    {
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        return 0;
    }

    public int getDefaultThemeResId(android.content.Context)
    {
        android.content.Context $r1;
        android.util.DisplayMetrics $r3;
        int $i0, $i1, $i2;
        java.lang.Class $r4;
        java.lang.String $r5;
        com.google.android.material.datepicker.RangeDateSelector r0;
        android.content.res.Resources $r2;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = <com.google.android.material.R$dimen: int mtrl_calendar_maximum_default_fullscreen_minor_axis>;

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $i1 = $r3.<android.util.DisplayMetrics: int widthPixels>;

        $i2 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        if $i1 <= $i0 goto label1;

        $i0 = <com.google.android.material.R$attr: int materialCalendarTheme>;

        goto label2;

     label1:
        $i0 = <com.google.android.material.R$attr: int materialCalendarFullscreenTheme>;

     label2:
        $r4 = class "Lcom/google/android/material/datepicker/MaterialDatePicker;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getCanonicalName()>();

        $i0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>($r1, $i0, $r5);

        return $i0;
    }

    public int getDefaultTitleResId()
    {
        int i0;
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        i0 = <com.google.android.material.R$string: int mtrl_picker_range_header_title>;

        return i0;
    }

    public java.util.Collection getSelectedDays()
    {
        com.google.android.material.datepicker.RangeDateSelector r0;
        java.lang.Long $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r2 == null goto label1;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label1:
        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r2 == null goto label2;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label2:
        return $r1;
    }

    public java.util.Collection getSelectedRanges()
    {
        b.i.h.d $r1;
        java.lang.Long $r2, $r3;
        com.google.android.material.datepicker.RangeDateSelector r0;
        java.util.ArrayList $r4;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r2 == null goto label2;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r1 = new b.i.h.d;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        $r3 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        specialinvoke $r1.<b.i.h.d: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return $r4;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        return $r4;
    }

    public b.i.h.d getSelection()
    {
        b.i.h.d $r1;
        java.lang.Long $r2, $r3;
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 = new b.i.h.d;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        $r3 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        specialinvoke $r1.<b.i.h.d: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r1;
    }

    public volatile java.lang.Object getSelection()
    {
        b.i.h.d $r1;
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 = virtualinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: b.i.h.d getSelection()>();

        return $r1;
    }

    public java.lang.String getSelectionDisplayString(android.content.Context)
    {
        android.content.Context $r2;
        java.lang.Object[] $r6;
        long $l1;
        b.i.h.d $r8;
        java.lang.Long $r4, $r7;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r5;
        com.google.android.material.datepicker.RangeDateSelector r0;
        android.content.res.Resources $r3;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r2 := @parameter0: android.content.Context;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r4 != null goto label1;

        $r4 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r4 != null goto label1;

        $i0 = <com.google.android.material.R$string: int mtrl_picker_range_header_unselected>;

        $r5 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        return $r5;

     label1:
        $r4 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r4 != null goto label2;

        $i0 = <com.google.android.material.R$string: int mtrl_picker_range_header_only_start_selected>;

        $r6 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r5 = staticinvoke <com.google.android.material.datepicker.DateStrings: java.lang.String getDateString(long)>($l1);

        $r6[0] = $r5;

        $r5 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i0, $r6);

        return $r5;

     label2:
        $r7 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r7 != null goto label3;

        $i0 = <com.google.android.material.R$string: int mtrl_picker_range_header_only_end_selected>;

        $r6 = newarray (java.lang.Object)[1];

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r5 = staticinvoke <com.google.android.material.datepicker.DateStrings: java.lang.String getDateString(long)>($l1);

        $r6[0] = $r5;

        $r5 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i0, $r6);

        return $r5;

     label3:
        $r8 = staticinvoke <com.google.android.material.datepicker.DateStrings: b.i.h.d getDateRangeString(java.lang.Long,java.lang.Long)>($r7, $r4);

        $i0 = <com.google.android.material.R$string: int mtrl_picker_range_header_selected>;

        $r6 = newarray (java.lang.Object)[2];

        $r1 = $r8.<b.i.h.d: java.lang.Object a>;

        $r6[0] = $r1;

        $r1 = $r8.<b.i.h.d: java.lang.Object b>;

        $r6[1] = $r1;

        $r5 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i0, $r6);

        return $r5;
    }

    public boolean isSelectionComplete()
    {
        java.lang.Long $r1, $r2;
        long $l0, $l1;
        com.google.android.material.datepicker.RangeDateSelector r0;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r2 == null goto label1;

        $r1 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r1 == null goto label1;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $r1 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $z0 = specialinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: boolean isValidRange(long,long)>($l0, $l1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.view.View onCreateTextInputView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle, com.google.android.material.datepicker.CalendarConstraints, com.google.android.material.datepicker.OnSelectionChangedListener)
    {
        android.os.Bundle $r3;
        com.google.android.material.textfield.TextInputLayout $r8, $r9;
        com.google.android.material.datepicker.CalendarConstraints $r4;
        java.text.SimpleDateFormat $r14;
        java.lang.Long $r15;
        int $i0;
        android.view.View $r6, $r7;
        java.lang.String $r13;
        boolean $z0;
        com.google.android.material.datepicker.OnSelectionChangedListener $r5;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        com.google.android.material.datepicker.RangeDateSelector$1 $r16;
        com.google.android.material.datepicker.RangeDateSelector$2 $r17;
        com.google.android.material.datepicker.RangeDateSelector r0;
        android.widget.EditText $r10, $r11;
        android.content.res.Resources $r12;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.os.Bundle;

        $r4 := @parameter3: com.google.android.material.datepicker.CalendarConstraints;

        $r5 := @parameter4: com.google.android.material.datepicker.OnSelectionChangedListener;

        $i0 = <com.google.android.material.R$layout: int mtrl_picker_text_input_date_range>;

        $r6 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r2, 0);

        $i0 = <com.google.android.material.R$id: int mtrl_picker_text_input_range_start>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>($i0);

        $r8 = (com.google.android.material.textfield.TextInputLayout) $r7;

        $i0 = <com.google.android.material.R$id: int mtrl_picker_text_input_range_end>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (com.google.android.material.textfield.TextInputLayout) $r7;

        $r10 = virtualinvoke $r8.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        $r11 = virtualinvoke $r9.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        $z0 = staticinvoke <com.google.android.material.internal.ManufacturerUtils: boolean isDateInputKeyboardMissingSeparatorCharacters()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r10.<android.widget.EditText: void setInputType(int)>(17);

        virtualinvoke $r11.<android.widget.EditText: void setInputType(int)>(17);

     label1:
        $r12 = virtualinvoke $r6.<android.view.View: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_invalid_range>;

        $r13 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.String invalidRangeStartError> = $r13;

        $r14 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getTextInputFormat()>();

        $r15 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r15 == null goto label2;

        $r13 = virtualinvoke $r14.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r15);

        virtualinvoke $r10.<android.widget.EditText: void setText(java.lang.CharSequence)>($r13);

        $r15 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextStart> = $r15;

     label2:
        $r15 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r15 == null goto label3;

        $r13 = virtualinvoke $r14.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r15);

        virtualinvoke $r11.<android.widget.EditText: void setText(java.lang.CharSequence)>($r13);

        $r15 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long proposedTextEnd> = $r15;

     label3:
        $r12 = virtualinvoke $r6.<android.view.View: android.content.res.Resources getResources()>();

        $r13 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat)>($r12, $r14);

        $r16 = new com.google.android.material.datepicker.RangeDateSelector$1;

        specialinvoke $r16.<com.google.android.material.datepicker.RangeDateSelector$1: void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>(r0, $r13, $r14, $r8, $r4, $r8, $r9, $r5);

        virtualinvoke $r10.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r16);

        $r17 = new com.google.android.material.datepicker.RangeDateSelector$2;

        specialinvoke $r17.<com.google.android.material.datepicker.RangeDateSelector$2: void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>(r0, $r13, $r14, $r9, $r4, $r8, $r9, $r5);

        virtualinvoke $r11.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r17);

        staticinvoke <com.google.android.material.internal.ViewUtils: void requestFocusAndShowKeyboard(android.view.View)>($r10);

        return $r6;
    }

    public void select(long)
    {
        java.lang.Long $r1, $r2;
        long $l0, $l1;
        com.google.android.material.datepicker.RangeDateSelector r0;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $l0 := @parameter0: long;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        if $r2 != null goto label1;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem> = $r1;

        return;

     label1:
        $r1 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        if $r1 != null goto label2;

        $l1 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $z0 = specialinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: boolean isValidRange(long,long)>($l1, $l0);

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem> = $r1;

        return;

     label2:
        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem> = null;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem> = $r1;

        return;
    }

    public void setSelection(b.i.h.d)
    {
        long $l0, $l1;
        b.i.h.d $r1;
        java.lang.Long $r4, $r5;
        java.lang.Object $r2, $r3;
        com.google.android.material.datepicker.RangeDateSelector r0;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter0: b.i.h.d;

        $r2 = $r1.<b.i.h.d: java.lang.Object a>;

        if $r2 == null goto label1;

        $r3 = $r1.<b.i.h.d: java.lang.Object b>;

        if $r3 == null goto label1;

        $r4 = (java.lang.Long) $r2;

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r2 = $r1.<b.i.h.d: java.lang.Object b>;

        $r4 = (java.lang.Long) $r2;

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $z0 = specialinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: boolean isValidRange(long,long)>($l0, $l1);

        staticinvoke <b.i.h.h: void a(boolean)>($z0);

     label1:
        $r2 = $r1.<b.i.h.d: java.lang.Object a>;

        $r4 = null;

        if $r2 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = (java.lang.Long) $r2;

        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $l0 = staticinvoke <com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)>($l0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label3:
        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem> = $r5;

        $r2 = $r1.<b.i.h.d: java.lang.Object b>;

        if $r2 != null goto label4;

        goto label5;

     label4:
        $r4 = (java.lang.Long) $r2;

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $l0 = staticinvoke <com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)>($l0);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label5:
        r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem> = $r4;

        return;
    }

    public volatile void setSelection(java.lang.Object)
    {
        java.lang.Object $r1;
        b.i.h.d $r2;
        com.google.android.material.datepicker.RangeDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (b.i.h.d) $r1;

        virtualinvoke r0.<com.google.android.material.datepicker.RangeDateSelector: void setSelection(b.i.h.d)>($r2);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        java.lang.Long $r2;
        int $i0;
        com.google.android.material.datepicker.RangeDateSelector r0;
        android.os.Parcel $r1;

        r0 := @this: com.google.android.material.datepicker.RangeDateSelector;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedStartItem>;

        virtualinvoke $r1.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        $r2 = r0.<com.google.android.material.datepicker.RangeDateSelector: java.lang.Long selectedEndItem>;

        virtualinvoke $r1.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        return;
    }
}
