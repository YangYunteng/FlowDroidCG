public class com.google.common.collect.Maps$Values extends java.util.AbstractCollection
{
    public final java.util.Map map;

    public void <init>(java.util.Map)
    {
        com.google.common.collect.Maps$Values r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.Maps$Values: java.util.Map map> = $r1;

        return;
    }

    public static void a(java.util.function.Consumer, java.lang.Object, java.lang.Object)
    {
        java.util.function.Consumer $r0;
        java.lang.Object $r1, $r2;

        $r0 := @parameter0: java.util.function.Consumer;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        interfaceinvoke $r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r2);

        return;
    }

    public void clear()
    {
        com.google.common.collect.Maps$Values r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Maps$Values r0;
        java.util.Map $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public void forEach(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.Maps$Values r0;
        c.i.b.c.ab $r3;
        java.util.Map $r2;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 := @parameter0: java.util.function.Consumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.Maps$Values: java.util.Map map>;

        $r3 = new c.i.b.c.ab;

        specialinvoke $r3.<c.i.b.c.ab: void <init>(java.util.function.Consumer)>($r1);

        interfaceinvoke $r2.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r3);

        return;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Maps$Values r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Maps$Values r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.Iterator valueIterator(java.util.Iterator)>($r3);

        return $r3;
    }

    public final java.util.Map map()
    {
        com.google.common.collect.Maps$Values r0;
        java.util.Map r1;

        r0 := @this: com.google.common.collect.Maps$Values;

        r1 = r0.<com.google.common.collect.Maps$Values: java.util.Map map>;

        return r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r1;
        java.util.Map$Entry $r7;
        com.google.common.collect.Maps$Values r0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.Map $r3;
        java.lang.Object $r2, $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r2 := @parameter0: java.lang.Object;

     label1:
        $z0 = specialinvoke r0.<java.util.AbstractCollection: boolean remove(java.lang.Object)>($r2);

     label2:
        return $z0;

     label3:
        $r3 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r6);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r2 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        return 1;

     label5:
        return 0;

     label6:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label6;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r1;
        java.util.Map$Entry $r9;
        com.google.common.collect.Maps$Values r0;
        java.util.Iterator $r7;
        java.util.Collection $r2, $r3;
        java.util.Set $r6;
        java.util.HashSet $r4;
        java.util.Map $r5;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r2 := @parameter0: java.util.Collection;

     label1:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

     label2:
        $r3 = $r2;

     label3:
        $z0 = specialinvoke r0.<java.util.AbstractCollection: boolean removeAll(java.util.Collection)>($r3);

     label4:
        return $z0;

     label5:
        $r4 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label6;

     label7:
        $r5 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean removeAll(java.util.Collection)>($r4);

        return $z0;

     label8:
        $r1 := @caughtexception;

        goto label5;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label8;
        catch java.lang.UnsupportedOperationException from label3 to label4 with label8;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r1;
        java.util.Map$Entry $r9;
        com.google.common.collect.Maps$Values r0;
        java.util.Iterator $r7;
        java.util.Collection $r2, $r3;
        java.util.Set $r6;
        java.util.HashSet $r4;
        java.util.Map $r5;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r2 := @parameter0: java.util.Collection;

     label1:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

     label2:
        $r3 = $r2;

     label3:
        $z0 = specialinvoke r0.<java.util.AbstractCollection: boolean retainAll(java.util.Collection)>($r3);

     label4:
        return $z0;

     label5:
        $r4 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label6;

     label7:
        $r5 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean retainAll(java.util.Collection)>($r4);

        return $z0;

     label8:
        $r1 := @caughtexception;

        goto label5;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label8;
        catch java.lang.UnsupportedOperationException from label3 to label4 with label8;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.Maps$Values r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Maps$Values;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$Values: java.util.Map map()>();

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }
}
