public class com.google.zxing.datamatrix.encoder.DefaultPlacement extends java.lang.Object
{
    public final byte[] bits;
    public final java.lang.CharSequence codewords;
    public final int numcols;
    public final int numrows;

    public void <init>(java.lang.CharSequence, int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        byte[] $r2;
        java.lang.CharSequence $r1;
        int $i0, $i1;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $r1 := @parameter0: java.lang.CharSequence;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: java.lang.CharSequence codewords> = $r1;

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols> = $i1;

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows> = $i0;

        $i1 = $i1 * $i0;

        $r2 = newarray (byte)[$i1];

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits> = $r2;

        $r2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r2, -1);

        return;
    }

    private void corner1(int)
    {
        int $i0, $i1;
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 1, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 2, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(2, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(3, $i1, $i0, 8);

        return;
    }

    private void corner2(int)
    {
        int $i0, $i1;
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 4;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 8);

        return;
    }

    private void corner3(int)
    {
        int $i0, $i1;
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(2, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(3, $i1, $i0, 8);

        return;
    }

    private void corner4(int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 - 1;

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, $i2, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 - 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 8);

        return;
    }

    private void module(int, int, int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        java.lang.CharSequence $r1;
        char $c0;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i4 := @parameter3: int;

        if $i1 >= 0 goto label1;

        $i5 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + $i5;

        $i5 = $i5 + 4;

        $i5 = $i5 % 8;

        $i5 = 4 - $i5;

        $i2 = $i2 + $i5;

     label1:
        if $i2 >= 0 goto label2;

        $i5 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 + $i5;

        $i5 = $i5 + 4;

        $i5 = $i5 % 8;

        $i5 = 4 - $i5;

        $i1 = $i1 + $i5;

     label2:
        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: java.lang.CharSequence codewords>;

        $c0 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        $i3 = 8 - $i4;

        $z0 = 1;

        $i3 = 1 << $i3;

        $i4 = (int) $c0;

        $i3 = $i4 & $i3;

        if $i3 == 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void setBit(int,int,boolean)>($i2, $i1, $z0);

        return;
    }

    private void utah(int, int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = -2;

        $i4 = $i0 + $i3;

        $i3 = -2;

        $i3 = $i1 + $i3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i4, $i3, $i2, 1);

        $i5 = -1;

        $i5 = $i1 + $i5;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i4, $i5, $i2, 2);

        $i4 = -1;

        $i4 = $i0 + $i4;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i4, $i3, $i2, 3);

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i4, $i5, $i2, 4);

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i4, $i1, $i2, 5);

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i0, $i3, $i2, 6);

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i0, $i5, $i2, 7);

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i0, $i1, $i2, 8);

        return;
    }

    public final boolean getBit(int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        byte[] $r1;
        byte $b3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        $i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 * $i0;

        $i1 = $i2 + $i1;

        $b3 = $r1[$i1];

        if $b3 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final byte[] getBits()
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        byte[] r1;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        return r1;
    }

    public final int getNumcols()
    {
        int i0;
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        return i0;
    }

    public final int getNumrows()
    {
        int i0;
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        return i0;
    }

    public final boolean hasBit(int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        byte[] $r1;
        byte $b3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        $i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 * $i0;

        $i1 = $i2 + $i1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void place()
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 = 4;

        $i1 = 0;

        $i2 = 0;

     label01:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if $i0 != $i3 goto label02;

        if $i1 != 0 goto label02;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner1(int)>($i2);

        $i2 = $i2 + 1;

     label02:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 - 2;

        if $i0 != $i3 goto label03;

        if $i1 != 0 goto label03;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i3 = $i3 % 4;

        if $i3 == 0 goto label03;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner2(int)>($i2);

        $i2 = $i2 + 1;

     label03:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 - 2;

        if $i0 != $i3 goto label04;

        if $i1 != 0 goto label04;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i3 = $i3 % 8;

        if $i3 != 4 goto label04;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner3(int)>($i2);

        $i2 = $i2 + 1;

     label04:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 + 4;

        if $i0 != $i3 goto label05;

        if $i1 != 2 goto label05;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i3 = $i3 % 8;

        if $i3 != 0 goto label05;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner4(int)>($i2);

        $i2 = $i2 + 1;

     label05:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if $i0 >= $i3 goto label06;

        if $i1 < 0 goto label06;

        $z0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean hasBit(int,int)>($i1, $i0);

        if $z0 != 0 goto label06;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void utah(int,int,int)>($i0, $i1, $i2);

        $i2 = $i2 + 1;

     label06:
        $i3 = -2;

        $i0 = $i0 + $i3;

        $i1 = $i1 + 2;

        if $i0 < 0 goto label07;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        if $i1 < $i3 goto label05;

     label07:
        $i0 = $i0 + 1;

        $i1 = $i1 + 3;

     label08:
        if $i0 < 0 goto label09;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        if $i1 >= $i3 goto label09;

        $z0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean hasBit(int,int)>($i1, $i0);

        if $z0 != 0 goto label09;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void utah(int,int,int)>($i0, $i1, $i2);

        $i2 = $i2 + 1;

     label09:
        $i0 = $i0 + 2;

        $i3 = -2;

        $i1 = $i1 + $i3;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if $i0 >= $i3 goto label10;

        if $i1 >= 0 goto label08;

     label10:
        $i0 = $i0 + 3;

        $i1 = $i1 + 1;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if $i0 < $i3 goto label01;

        $i4 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        if $i1 < $i4 goto label01;

        $i2 = $i4 - 1;

        $i0 = $i3 - 1;

        $z0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean hasBit(int,int)>($i2, $i0);

        if $z0 != 0 goto label11;

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 - 1;

        $i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i0 = $i0 - 1;

        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void setBit(int,int,boolean)>($i2, $i0, 1);

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 - 2;

        $i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i0 = $i0 - 2;

        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void setBit(int,int,boolean)>($i2, $i0, 1);

     label11:
        return;
    }

    public final void setBit(int, int, boolean)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        byte[] $r1;
        byte $b3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i2 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 * $i1;

        $i0 = $i2 + $i0;

        $b3 = (byte) $z0;

        $r1[$i0] = $b3;

        return;
    }
}
