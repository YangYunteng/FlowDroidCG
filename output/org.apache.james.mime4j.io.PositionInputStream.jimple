public class org.apache.james.mime4j.io.PositionInputStream extends java.io.FilterInputStream
{
    public long markedPosition;
    public long position;

    public void <init>(java.io.InputStream)
    {
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<org.apache.james.mime4j.io.PositionInputStream: long position> = 0L;

        r0.<org.apache.james.mime4j.io.PositionInputStream: long markedPosition> = 0L;

        return;
    }

    public int available()
    {
        int $i0;
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close()
    {
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public long getPosition()
    {
        long l0;
        org.apache.james.mime4j.io.PositionInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        l0 = r0.<org.apache.james.mime4j.io.PositionInputStream: long position>;

        return l0;
    }

    public void mark(int)
    {
        int $i0;
        long $l1;
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>($i0);

        $l1 = r0.<org.apache.james.mime4j.io.PositionInputStream: long position>;

        r0.<org.apache.james.mime4j.io.PositionInputStream: long markedPosition> = $l1;

        return;
    }

    public boolean markSupported()
    {
        org.apache.james.mime4j.io.PositionInputStream r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    public int read()
    {
        int $i0, $i2;
        long $l1;
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i2 = -1;

        if $i0 == $i2 goto label1;

        $l1 = r0.<org.apache.james.mime4j.io.PositionInputStream: long position>;

        $l1 = $l1 + 1L;

        r0.<org.apache.james.mime4j.io.PositionInputStream: long position> = $l1;

     label1:
        return $i0;
    }

    public int read(byte[], int, int)
    {
        byte[] $r1;
        int $i0, $i1;
        long $l2, $l3;
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i0);

        if $i1 <= 0 goto label1;

        $l2 = r0.<org.apache.james.mime4j.io.PositionInputStream: long position>;

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        r0.<org.apache.james.mime4j.io.PositionInputStream: long position> = $l2;

     label1:
        return $i1;
    }

    public void reset()
    {
        long $l0;
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        $l0 = r0.<org.apache.james.mime4j.io.PositionInputStream: long markedPosition>;

        r0.<org.apache.james.mime4j.io.PositionInputStream: long position> = $l0;

        return;
    }

    public long skip(long)
    {
        byte $b0;
        int $i3;
        long $l1, $l2;
        org.apache.james.mime4j.io.PositionInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.PositionInputStream;

        $l1 := @parameter0: long;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l1);

        $b0 = $l1 cmp 0L;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label1;

        $l2 = r0.<org.apache.james.mime4j.io.PositionInputStream: long position>;

        $l2 = $l2 + $l1;

        r0.<org.apache.james.mime4j.io.PositionInputStream: long position> = $l2;

     label1:
        return $l1;
    }
}
