public class com.google.android.material.textfield.CutoutDrawable extends com.google.android.material.shape.MaterialShapeDrawable
{
    public final android.graphics.RectF cutoutBounds;
    public final android.graphics.Paint cutoutPaint;
    public int savedLayer;

    public void <init>()
    {
        com.google.android.material.textfield.CutoutDrawable r0;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>(null);

        return;
    }

    public void <init>(com.google.android.material.shape.ShapeAppearanceModel)
    {
        android.graphics.RectF $r3;
        com.google.android.material.textfield.CutoutDrawable r0;
        android.graphics.Paint $r2;
        com.google.android.material.shape.ShapeAppearanceModel $r1;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        if $r1 == null goto label1;

        goto label2;

     label1:
        $r1 = new com.google.android.material.shape.ShapeAppearanceModel;

        specialinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: void <init>()>();

     label2:
        specialinvoke r0.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.Paint cutoutPaint> = $r2;

        specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void setPaintStyles()>();

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.RectF cutoutBounds> = $r3;

        return;
    }

    private void postDraw(android.graphics.Canvas)
    {
        com.google.android.material.textfield.CutoutDrawable r0;
        android.graphics.drawable.Drawable$Callback $r2;
        int $i0;
        android.graphics.Canvas $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        $z0 = specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)>($r2);

        if $z0 != 0 goto label1;

        $i0 = r0.<com.google.android.material.textfield.CutoutDrawable: int savedLayer>;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label1:
        return;
    }

    private void preDraw(android.graphics.Canvas)
    {
        com.google.android.material.textfield.CutoutDrawable r0;
        android.graphics.drawable.Drawable$Callback $r2;
        int $i0;
        android.view.View $r3;
        android.graphics.Canvas $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        $z0 = specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)>($r2);

        if $z0 == 0 goto label1;

        $r3 = (android.view.View) $r2;

        $i0 = virtualinvoke $r3.<android.view.View: int getLayerType()>();

        if $i0 == 2 goto label2;

        virtualinvoke $r3.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, null);

        return;

     label1:
        specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void saveCanvasLayer(android.graphics.Canvas)>($r1);

     label2:
        return;
    }

    private void saveCanvasLayer(android.graphics.Canvas)
    {
        com.google.android.material.textfield.CutoutDrawable r0;
        int $i0;
        float $f0, $f1;
        android.graphics.Canvas $r1;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getHeight()>();

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f0, $f1, null);

        r0.<com.google.android.material.textfield.CutoutDrawable: int savedLayer> = $i0;

        return;

     label1:
        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getHeight()>();

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>(0.0F, 0.0F, $f0, $f1, null, 31);

        r0.<com.google.android.material.textfield.CutoutDrawable: int savedLayer> = $i0;

        return;
    }

    private void setPaintStyles()
    {
        android.graphics.Paint$Style $r3;
        com.google.android.material.textfield.CutoutDrawable r0;
        android.graphics.PorterDuffXfermode $r4;
        int $i0;
        android.graphics.Paint $r2;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r2 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.Paint cutoutPaint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL_AND_STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        $r2 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.Paint cutoutPaint>;

        $i0 = -1;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.Paint cutoutPaint>;

        $r4 = new android.graphics.PorterDuffXfermode;

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode DST_OUT>;

        specialinvoke $r4.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r1);

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r4);

        return;
    }

    private boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)
    {
        com.google.android.material.textfield.CutoutDrawable r0;
        android.graphics.drawable.Drawable$Callback $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable$Callback;

        $z0 = $r1 instanceof android.view.View;

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.RectF $r2;
        com.google.android.material.textfield.CutoutDrawable r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void preDraw(android.graphics.Canvas)>($r1);

        specialinvoke r0.<com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.RectF cutoutBounds>;

        $r3 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.Paint cutoutPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r2, $r3);

        specialinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void postDraw(android.graphics.Canvas)>($r1);

        return;
    }

    public boolean hasCutout()
    {
        android.graphics.RectF $r1;
        com.google.android.material.textfield.CutoutDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.RectF cutoutBounds>;

        $z0 = virtualinvoke $r1.<android.graphics.RectF: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public void removeCutout()
    {
        com.google.android.material.textfield.CutoutDrawable r0;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        virtualinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void setCutout(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F);

        return;
    }

    public void setCutout(float, float, float, float)
    {
        android.graphics.RectF $r1;
        com.google.android.material.textfield.CutoutDrawable r0;
        byte $b0;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.RectF cutoutBounds>;

        $f4 = $r1.<android.graphics.RectF: float left>;

        $b0 = $f0 cmpl $f4;

        if $b0 != 0 goto label1;

        $f4 = $r1.<android.graphics.RectF: float top>;

        $b0 = $f1 cmpl $f4;

        if $b0 != 0 goto label1;

        $f4 = $r1.<android.graphics.RectF: float right>;

        $b0 = $f2 cmpl $f4;

        if $b0 != 0 goto label1;

        $f4 = $r1.<android.graphics.RectF: float bottom>;

        $b0 = $f3 cmpl $f4;

        if $b0 == 0 goto label2;

     label1:
        $r1 = r0.<com.google.android.material.textfield.CutoutDrawable: android.graphics.RectF cutoutBounds>;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        virtualinvoke r0.<com.google.android.material.shape.MaterialShapeDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public void setCutout(android.graphics.RectF)
    {
        android.graphics.RectF $r1;
        com.google.android.material.textfield.CutoutDrawable r0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.google.android.material.textfield.CutoutDrawable;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 = $r1.<android.graphics.RectF: float left>;

        $f1 = $r1.<android.graphics.RectF: float top>;

        $f2 = $r1.<android.graphics.RectF: float right>;

        $f3 = $r1.<android.graphics.RectF: float bottom>;

        virtualinvoke r0.<com.google.android.material.textfield.CutoutDrawable: void setCutout(float,float,float,float)>($f0, $f1, $f2, $f3);

        return;
    }
}
