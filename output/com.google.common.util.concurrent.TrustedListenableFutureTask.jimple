public class com.google.common.util.concurrent.TrustedListenableFutureTask extends com.google.common.util.concurrent.AbstractFuture$TrustedFuture implements java.util.concurrent.RunnableFuture
{
    public volatile com.google.common.util.concurrent.InterruptibleTask task;

    public void <init>(com.google.common.util.concurrent.AsyncCallable)
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask $r2;
        com.google.common.util.concurrent.TrustedListenableFutureTask r0;
        com.google.common.util.concurrent.AsyncCallable $r1;

        r0 := @this: com.google.common.util.concurrent.TrustedListenableFutureTask;

        $r1 := @parameter0: com.google.common.util.concurrent.AsyncCallable;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>();

        $r2 = new com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask;

        specialinvoke $r2.<com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask: void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,com.google.common.util.concurrent.AsyncCallable)>(r0, $r1);

        r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task> = $r2;

        return;
    }

    public void <init>(java.util.concurrent.Callable)
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask r0;
        java.util.concurrent.Callable $r1;
        com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask $r2;

        r0 := @this: com.google.common.util.concurrent.TrustedListenableFutureTask;

        $r1 := @parameter0: java.util.concurrent.Callable;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void <init>()>();

        $r2 = new com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask;

        specialinvoke $r2.<com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask: void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,java.util.concurrent.Callable)>(r0, $r1);

        r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task> = $r2;

        return;
    }

    public static com.google.common.util.concurrent.TrustedListenableFutureTask create(com.google.common.util.concurrent.AsyncCallable)
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask $r1;
        com.google.common.util.concurrent.AsyncCallable $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AsyncCallable;

        $r1 = new com.google.common.util.concurrent.TrustedListenableFutureTask;

        specialinvoke $r1.<com.google.common.util.concurrent.TrustedListenableFutureTask: void <init>(com.google.common.util.concurrent.AsyncCallable)>($r0);

        return $r1;
    }

    public static com.google.common.util.concurrent.TrustedListenableFutureTask create(java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask $r1;
        java.lang.Object $r0;
        java.util.concurrent.Callable $r2;
        java.lang.Runnable $r3;

        $r3 := @parameter0: java.lang.Runnable;

        $r0 := @parameter1: java.lang.Object;

        $r1 = new com.google.common.util.concurrent.TrustedListenableFutureTask;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object)>($r3, $r0);

        specialinvoke $r1.<com.google.common.util.concurrent.TrustedListenableFutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        return $r1;
    }

    public static com.google.common.util.concurrent.TrustedListenableFutureTask create(java.util.concurrent.Callable)
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask $r1;
        java.util.concurrent.Callable $r0;

        $r0 := @parameter0: java.util.concurrent.Callable;

        $r1 = new com.google.common.util.concurrent.TrustedListenableFutureTask;

        specialinvoke $r1.<com.google.common.util.concurrent.TrustedListenableFutureTask: void <init>(java.util.concurrent.Callable)>($r0);

        return $r1;
    }

    public void afterDone()
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask r0;
        boolean $z0;
        com.google.common.util.concurrent.InterruptibleTask $r1;

        r0 := @this: com.google.common.util.concurrent.TrustedListenableFutureTask;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture: void afterDone()>();

        $z0 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractFuture: boolean wasInterrupted()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.common.util.concurrent.InterruptibleTask: void interruptTask()>();

     label1:
        r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task> = null;

        return;
    }

    public java.lang.String pendingToString()
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.google.common.util.concurrent.InterruptibleTask $r3;

        r0 := @this: com.google.common.util.concurrent.TrustedListenableFutureTask;

        $r3 = r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task>;

        if $r3 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("task=[");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        return null;
    }

    public void run()
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask r0;
        com.google.common.util.concurrent.InterruptibleTask $r1;

        r0 := @this: com.google.common.util.concurrent.TrustedListenableFutureTask;

        $r1 = r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.common.util.concurrent.InterruptibleTask: void run()>();

     label1:
        r0.<com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.InterruptibleTask task> = null;

        return;
    }
}
