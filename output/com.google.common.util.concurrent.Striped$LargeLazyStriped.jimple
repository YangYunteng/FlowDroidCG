public class com.google.common.util.concurrent.Striped$LargeLazyStriped extends com.google.common.util.concurrent.Striped$PowerOfTwoStriped
{
    public final java.util.concurrent.ConcurrentMap locks;
    public final int size;
    public final com.google.common.base.Supplier supplier;

    public void <init>(int, com.google.common.base.Supplier)
    {
        com.google.common.base.Supplier $r1;
        int $i0, $i1;
        com.google.common.collect.MapMaker $r2, $r4;
        com.google.common.util.concurrent.Striped$LargeLazyStriped r0;
        java.util.concurrent.ConcurrentMap $r3;

        r0 := @this: com.google.common.util.concurrent.Striped$LargeLazyStriped;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.common.base.Supplier;

        specialinvoke r0.<com.google.common.util.concurrent.Striped$PowerOfTwoStriped: void <init>(int)>($i0);

        $i0 = r0.<com.google.common.util.concurrent.Striped$PowerOfTwoStriped: int mask>;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $i0 = 2147483647;

        goto label2;

     label1:
        $i0 = $i0 + 1;

     label2:
        r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: int size> = $i0;

        r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: com.google.common.base.Supplier supplier> = $r1;

        $r4 = new com.google.common.collect.MapMaker;

        specialinvoke $r4.<com.google.common.collect.MapMaker: void <init>()>();

        $r2 = virtualinvoke $r4.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker weakValues()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>();

        r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: java.util.concurrent.ConcurrentMap locks> = $r3;

        return;
    }

    public java.lang.Object getAt(int)
    {
        com.google.common.base.Supplier $r4;
        java.lang.Integer $r2;
        com.google.common.util.concurrent.Striped$LargeLazyStriped r0;
        java.util.concurrent.ConcurrentMap $r1;
        int $i0, $i1;
        java.lang.Object $r3, $r5;

        r0 := @this: com.google.common.util.concurrent.Striped$LargeLazyStriped;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: int size>;

        if $i1 == 2147483647 goto label1;

        $i1 = virtualinvoke r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: int size()>();

        staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int)>($i0, $i1);

     label1:
        $r1 = r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: java.util.concurrent.ConcurrentMap locks>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r2);

        if $r3 == null goto label2;

        return $r3;

     label2:
        $r4 = r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: com.google.common.base.Supplier supplier>;

        $r3 = interfaceinvoke $r4.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r1 = r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: java.util.concurrent.ConcurrentMap locks>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r3 = staticinvoke <com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r5, $r3);

        return $r3;
    }

    public int size()
    {
        int i0;
        com.google.common.util.concurrent.Striped$LargeLazyStriped r0;

        r0 := @this: com.google.common.util.concurrent.Striped$LargeLazyStriped;

        i0 = r0.<com.google.common.util.concurrent.Striped$LargeLazyStriped: int size>;

        return i0;
    }
}
