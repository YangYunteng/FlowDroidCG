public final class com.google.common.collect.Collections2$OrderedPermutationCollection extends java.util.AbstractCollection
{
    public final java.util.Comparator comparator;
    public final com.google.common.collect.ImmutableList inputList;
    public final int size;

    public void <init>(java.lang.Iterable, java.util.Comparator)
    {
        com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        com.google.common.collect.ImmutableList $r3;
        int $i0;
        java.util.Comparator $r1;
        java.lang.Iterable $r2;

        r0 := @this: com.google.common.collect.Collections2$OrderedPermutationCollection;

        $r2 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList sortedCopyOf(java.util.Comparator,java.lang.Iterable)>($r1, $r2);

        r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: com.google.common.collect.ImmutableList inputList> = $r3;

        r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: java.util.Comparator comparator> = $r1;

        $r3 = r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: com.google.common.collect.ImmutableList inputList>;

        $i0 = staticinvoke <com.google.common.collect.Collections2$OrderedPermutationCollection: int calculateSize(java.util.List,java.util.Comparator)>($r3, $r1);

        r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: int size> = $i0;

        return;
    }

    public static int calculateSize(java.util.List, java.util.Comparator)
    {
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2, $r3;
        java.util.Comparator $r0;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: java.util.Comparator;

        $i0 = 1;

        $i1 = 1;

        $i2 = 1;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label3;

        $i3 = -1;

        $i3 = $i0 + $i3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $i3 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $i3 >= 0 goto label2;

        $i2 = staticinvoke <com.google.common.math.IntMath: int binomial(int,int)>($i0, $i2);

        $i3 = staticinvoke <com.google.common.math.IntMath: int saturatedMultiply(int,int)>($i1, $i2);

        $i1 = $i3;

        $i2 = 0;

        if $i3 != 2147483647 goto label2;

        return 2147483647;

     label2:
        $i0 = $i0 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label3:
        $i0 = staticinvoke <com.google.common.math.IntMath: int binomial(int,int)>($i0, $i2);

        $i1 = staticinvoke <com.google.common.math.IntMath: int saturatedMultiply(int,int)>($i1, $i0);

        return $i1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List $r2;
        com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        com.google.common.collect.ImmutableList $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Collections2$OrderedPermutationCollection;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r2 = (java.util.List) $r1;

        $r3 = r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: com.google.common.collect.ImmutableList inputList>;

        $z0 = staticinvoke <com.google.common.collect.Collections2: boolean access$000(java.util.List,java.util.List)>($r3, $r2);

        return $z0;

     label1:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Collections2$OrderedPermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$OrderedPermutationCollection;

        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        com.google.common.collect.ImmutableList $r2;
        java.util.Comparator $r3;
        com.google.common.collect.Collections2$OrderedPermutationIterator $r1;

        r0 := @this: com.google.common.collect.Collections2$OrderedPermutationCollection;

        $r1 = new com.google.common.collect.Collections2$OrderedPermutationIterator;

        $r2 = r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: com.google.common.collect.ImmutableList inputList>;

        $r3 = r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: java.util.Comparator comparator>;

        specialinvoke $r1.<com.google.common.collect.Collections2$OrderedPermutationIterator: void <init>(java.util.List,java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.Collections2$OrderedPermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$OrderedPermutationCollection;

        i0 = r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: int size>;

        return i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        com.google.common.collect.ImmutableList $r3;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: com.google.common.collect.Collections2$OrderedPermutationCollection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("orderedPermutationCollection(");

        $r3 = r0.<com.google.common.collect.Collections2$OrderedPermutationCollection: com.google.common.collect.ImmutableList inputList>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
