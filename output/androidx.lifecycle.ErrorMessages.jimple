public final class androidx.lifecycle.ErrorMessages extends java.lang.Object
{
    public static final androidx.lifecycle.ErrorMessages INSTANCE;
    public static final java.lang.String INVALID_ANNOTATED_ELEMENT;
    public static final java.lang.String INVALID_CLASS_MODIFIER;
    public static final java.lang.String INVALID_ENCLOSING_ELEMENT;
    public static final java.lang.String INVALID_FIRST_ARGUMENT;
    public static final java.lang.String INVALID_METHOD_MODIFIER;
    public static final java.lang.String INVALID_SECOND_ARGUMENT;
    public static final java.lang.String INVALID_STATE_OVERRIDE_METHOD;
    public static final java.lang.String TOO_MANY_ARGS;
    public static final java.lang.String TOO_MANY_ARGS_NOT_ON_ANY;

    static void <clinit>()
    {
        androidx.lifecycle.ErrorMessages $r0;

        <androidx.lifecycle.ErrorMessages: java.lang.String TOO_MANY_ARGS_NOT_ON_ANY> = "only callback annotated with ON_ANY can have 2 parameters";

        <androidx.lifecycle.ErrorMessages: java.lang.String TOO_MANY_ARGS> = "callback method cannot have more than 2 parameters";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_STATE_OVERRIDE_METHOD> = "overridden method must handle the same onState changes as original method";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_SECOND_ARGUMENT> = "2nd argument of a callback method must be Lifecycle.Event and represent the current event";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_METHOD_MODIFIER> = "method marked with OnLifecycleEvent annotation can not be private";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_FIRST_ARGUMENT> = "1st argument of a callback method must be a LifecycleOwner which represents the source of the event";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_ENCLOSING_ELEMENT> = "Parent of OnLifecycleEvent should be a class or interface";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_CLASS_MODIFIER> = "class containing OnLifecycleEvent methods can not be private";

        <androidx.lifecycle.ErrorMessages: java.lang.String INVALID_ANNOTATED_ELEMENT> = "OnLifecycleEvent can only be added to methods";

        $r0 = new androidx.lifecycle.ErrorMessages;

        specialinvoke $r0.<androidx.lifecycle.ErrorMessages: void <init>()>();

        <androidx.lifecycle.ErrorMessages: androidx.lifecycle.ErrorMessages INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.lifecycle.ErrorMessages r0;

        r0 := @this: androidx.lifecycle.ErrorMessages;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.String failedToGenerateAdapter(javax.lang.model.element.TypeElement, androidx.lifecycle.model.EventMethod)
    {
        java.lang.CharSequence $r6;
        javax.lang.model.element.ExecutableElement $r4;
        javax.lang.model.element.TypeElement $r1;
        kotlin.TypeCastException $r7;
        androidx.lifecycle.ErrorMessages r0;
        java.lang.StringBuilder $r3;
        androidx.lifecycle.model.EventMethod $r2;
        java.lang.String $r5;

        r0 := @this: androidx.lifecycle.ErrorMessages;

        $r1 := @parameter0: javax.lang.model.element.TypeElement;

        $r2 := @parameter1: androidx.lifecycle.model.EventMethod;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "type");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "failureReason");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n             Failed to generate an Adapter for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because it needs to be able to access to\n             package private method ");

        $r4 = virtualinvoke $r2.<androidx.lifecycle.model.EventMethod: javax.lang.model.element.ExecutableElement getMethod()>();

        $r5 = staticinvoke <androidx.lifecycle.Elements_extKt: java.lang.String name(javax.lang.model.element.ExecutableElement)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r1 = virtualinvoke $r2.<androidx.lifecycle.model.EventMethod: javax.lang.model.element.TypeElement getType()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r5 == null goto label1;

        $r6 = staticinvoke <i.j.s: java.lang.CharSequence f(java.lang.CharSequence)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label1:
        $r7 = new kotlin.TypeCastException;

        specialinvoke $r7.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r7;
    }
}
