public final class com.google.common.collect.TopKSelector extends java.lang.Object
{
    public final java.lang.Object[] buffer;
    public int bufferSize;
    public final java.util.Comparator comparator;
    public final int k;
    public java.lang.Object threshold;

    public void <init>(java.util.Comparator, int)
    {
        java.lang.Object[] $r2;
        int $i0;
        java.util.Comparator $r1;
        com.google.common.collect.TopKSelector r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $r1 := @parameter0: java.util.Comparator;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "comparator");

        r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator> = $r1;

        r0.<com.google.common.collect.TopKSelector: int k> = $i0;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "k must be nonnegative, was %s", $i0);

        $i0 = $i0 * 2;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer> = $r2;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = 0;

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = null;

        return;
    }

    public static com.google.common.collect.TopKSelector greatest(int)
    {
        int $i0;
        com.google.common.collect.Ordering $r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r1 = staticinvoke <com.google.common.collect.TopKSelector: com.google.common.collect.TopKSelector greatest(int,java.util.Comparator)>($i0, $r0);

        return $r1;
    }

    public static com.google.common.collect.TopKSelector greatest(int, java.util.Comparator)
    {
        com.google.common.collect.Ordering $r2;
        int $i0;
        java.util.Comparator $r1;
        com.google.common.collect.TopKSelector $r0;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.Comparator;

        $r0 = new com.google.common.collect.TopKSelector;

        $r2 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r1);

        $r2 = virtualinvoke $r2.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        specialinvoke $r0.<com.google.common.collect.TopKSelector: void <init>(java.util.Comparator,int)>($r2, $i0);

        return $r0;
    }

    public static com.google.common.collect.TopKSelector least(int)
    {
        int $i0;
        com.google.common.collect.Ordering $r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r1 = staticinvoke <com.google.common.collect.TopKSelector: com.google.common.collect.TopKSelector least(int,java.util.Comparator)>($i0, $r0);

        return $r1;
    }

    public static com.google.common.collect.TopKSelector least(int, java.util.Comparator)
    {
        int $i0;
        java.util.Comparator $r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.Comparator;

        $r1 = new com.google.common.collect.TopKSelector;

        specialinvoke $r1.<com.google.common.collect.TopKSelector: void <init>(java.util.Comparator,int)>($r0, $i0);

        return $r1;
    }

    private int partition(int, int, int)
    {
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1, $r3;
        java.util.Comparator $r4;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r1 = $r2[$i1];

        $r3 = $r2[$i0];

        $r2[$i1] = $r3;

        $i3 = $i2;

     label1:
        if $i2 >= $i0 goto label3;

        $r4 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r3 = $r2[$i2];

        $i1 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r1);

        if $i1 >= 0 goto label2;

        specialinvoke r0.<com.google.common.collect.TopKSelector: void swap(int,int)>($i3, $i2);

        $i3 = $i3 + 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r3 = $r2[$i3];

        $r2[$i0] = $r3;

        $r2[$i3] = $r1;

        return $i3;
    }

    private void swap(int, int)
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r2 = $r1[$i0];

        $r3 = $r1[$i1];

        $r1[$i0] = $r3;

        $r1[$i1] = $r2;

        return;
    }

    private void trim()
    {
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r4, $r5;
        java.util.Comparator $r3;
        com.google.common.collect.TopKSelector r0;
        java.math.RoundingMode $r1;

        r0 := @this: com.google.common.collect.TopKSelector;

        $i1 = r0.<com.google.common.collect.TopKSelector: int k>;

        $i1 = $i1 * 2;

        $i2 = -1;

        $i2 = $i1 + $i2;

        $i1 = $i2;

        $r1 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        $i1 = staticinvoke <com.google.common.math.IntMath: int log2(int,java.math.RoundingMode)>($i1, $r1);

        $i3 = $i1 * 3;

        $i4 = 0;

        $i5 = 0;

        $i1 = 0;

     label1:
        if $i4 >= $i2 goto label4;

        $i6 = $i4 + $i2;

        $i6 = $i6 + 1;

        $i6 = $i6 >>> 1;

        $i6 = specialinvoke r0.<com.google.common.collect.TopKSelector: int partition(int,int,int)>($i4, $i2, $i6);

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i6 <= $i0 goto label2;

        $i2 = -1;

        $i2 = $i6 + $i2;

        goto label3;

     label2:
        if $i6 >= $i0 goto label4;

        $i1 = $i4 + 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i1);

        $i1 = $i6;

     label3:
        $i5 = $i5 + 1;

        if $i5 < $i3 goto label1;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r3 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>($r2, $i4, $i2, $r3);

     label4:
        $i2 = r0.<com.google.common.collect.TopKSelector: int k>;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i2;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r4 = $r2[$i1];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = $r4;

     label5:
        $i1 = $i1 + 1;

        $i2 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i1 >= $i2 goto label6;

        $r3 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r4 = $r2[$i1];

        $r5 = r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold>;

        $i2 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i2 <= 0 goto label5;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r4 = $r2[$i1];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = $r4;

        goto label5;

     label6:
        return;
    }

    public com.google.common.collect.TopKSelector combine(com.google.common.collect.TopKSelector)
    {
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.google.common.collect.TopKSelector r0, $r1;

        r0 := @this: com.google.common.collect.TopKSelector;

        $r1 := @parameter0: com.google.common.collect.TopKSelector;

        $i0 = 0;

     label1:
        $i1 = $r1.<com.google.common.collect.TopKSelector: int bufferSize>;

        if $i0 >= $i1 goto label2;

        $r2 = $r1.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r3 = $r2[$i0];

        virtualinvoke r0.<com.google.common.collect.TopKSelector: void offer(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    public void offer(java.lang.Object)
    {
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r1, $r4;
        java.util.Comparator $r3;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        if $i1 != 0 goto label2;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r2[0] = $r1;

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = $r1;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = 1;

        return;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = $i1 + 1;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i0;

        $r2[$i1] = $r1;

        $r3 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        $r4 = r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold>;

        $i1 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $i1 <= 0 goto label4;

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = $r1;

        return;

     label3:
        $r3 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        $r4 = r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold>;

        $i1 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $i1 >= 0 goto label4;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i1 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i0 = $i1 + 1;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i0;

        $r2[$i1] = $r1;

        $i1 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        $i0 = $i0 * 2;

        if $i1 != $i0 goto label4;

        specialinvoke r0.<com.google.common.collect.TopKSelector: void trim()>();

     label4:
        return;
    }

    public void offerAll(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        com.google.common.collect.TopKSelector r0;
        java.lang.Iterable $r2;

        r0 := @this: com.google.common.collect.TopKSelector;

        $r2 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        virtualinvoke r0.<com.google.common.collect.TopKSelector: void offerAll(java.util.Iterator)>($r1);

        return;
    }

    public void offerAll(java.util.Iterator)
    {
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.google.common.collect.TopKSelector r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $r1 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.google.common.collect.TopKSelector: void offer(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public java.util.List topK()
    {
        java.util.List $r4;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.Comparator $r2;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>($r1, 0, $i0, $r2);

        $i1 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i1 <= $i0 goto label1;

        $r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i1 = lengthof $r1;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r1, $i0, $i1, null);

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i0;

        $r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r3 = $r1[$i0];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = $r3;

     label1:
        $r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        return $r4;
    }
}
