public final class org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser extends org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser r0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser: void <init>(java.lang.Class)>(class "[J");

        return;
    }

    private final long[] handleNonArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r3;
        long $l0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser r0;
        org.codehaus.jackson.map.JsonMappingException $r6;
        long[] $r4;
        java.lang.Class $r5;
        org.codehaus.jackson.JsonParser $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r3);

        if $z0 == 0 goto label1;

        $r4 = newarray (long)[1];

        $l0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer: long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r2, $r1);

        $r4[0] = $l0;

        return $r4;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r5);

        throw $r6;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser r0;
        long[] $r2;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser: long[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public long[] deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r2, $r8;
        org.codehaus.jackson.map.util.ArrayBuilders $r5;
        long $l1;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser r0;
        org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder $r6;
        long[] $r4;
        int $i0, $i2;
        java.lang.Object $r7;
        org.codehaus.jackson.JsonParser $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser: long[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r4;

     label1:
        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders()>();

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder()>();

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: java.lang.Object resetAndStart()>();

        $r4 = (long[]) $r7;

        $i0 = 0;

     label2:
        $r8 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r8 == $r2 goto label4;

        $l1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer: long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        $i2 = lengthof $r4;

        if $i0 < $i2 goto label3;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>($r4, $i0);

        $r4 = (long[]) $r7;

        $i0 = 0;

     label3:
        $r4[$i0] = $l1;

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>($r4, $i0);

        $r4 = (long[]) $r7;

        return $r4;
    }
}
