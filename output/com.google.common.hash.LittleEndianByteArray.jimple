public final class com.google.common.hash.LittleEndianByteArray extends java.lang.Object
{
    public static final boolean $assertionsDisabled;
    public static final com.google.common.hash.LittleEndianByteArray$LittleEndianBytes byteArray;

    static void <clinit>()
    {
        java.lang.Throwable $r0;
        java.nio.ByteOrder $r4, $r5;
        com.google.common.hash.LittleEndianByteArray$LittleEndianBytes $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r1 = <com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes INSTANCE>;

     label01:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.arch");

     label02:
        $r3 = "amd64";

     label03:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label04:
        if $z0 != 0 goto label07;

        $r3 = "aarch64";

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label06:
        if $z0 == 0 goto label12;

     label07:
        $r4 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

     label08:
        if $z0 == 0 goto label11;

     label09:
        $r1 = <com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray UNSAFE_LITTLE_ENDIAN>;

     label10:
        goto label12;

     label11:
        $r1 = <com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray UNSAFE_BIG_ENDIAN>;

     label12:
        <com.google.common.hash.LittleEndianByteArray: com.google.common.hash.LittleEndianByteArray$LittleEndianBytes byteArray> = $r1;

        return;

     label13:
        $r0 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void <init>()
    {
        com.google.common.hash.LittleEndianByteArray r0;

        r0 := @this: com.google.common.hash.LittleEndianByteArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int load32(byte[], int)
    {
        byte[] $r0;
        short $s2, $s4;
        byte $b1;
        int $i0, $i3, $i5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $b1 = $r0[$i0];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i3 = $i0 + 1;

        $b1 = $r0[$i3];

        $s4 = (short) $b1;

        $s4 = $s4 & 255;

        $i3 = (int) $s4;

        $i3 = $i3 << 8;

        $i5 = (int) $s2;

        $i3 = $i5 | $i3;

        $i5 = $i0 + 2;

        $b1 = $r0[$i5];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 16;

        $i3 = $i3 | $i5;

        $i0 = $i0 + 3;

        $b1 = $r0[$i0];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i0 = (int) $s2;

        $i0 = $i0 << 24;

        $i0 = $i0 | $i3;

        return $i0;
    }

    public static long load64(byte[], int)
    {
        byte[] $r1;
        int $i0;
        com.google.common.hash.LittleEndianByteArray$LittleEndianBytes $r0;
        long $l1;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r0 = <com.google.common.hash.LittleEndianByteArray: com.google.common.hash.LittleEndianByteArray$LittleEndianBytes byteArray>;

        $l1 = interfaceinvoke $r0.<com.google.common.hash.LittleEndianByteArray$LittleEndianBytes: long getLongLittleEndian(byte[],int)>($r1, $i0);

        return $l1;
    }

    public static long load64Safely(byte[], int, int)
    {
        byte[] $r0;
        long $l2, $l6;
        byte $b5;
        int $i0, $i1, $i3, $i4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 8);

        $l2 = 0L;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label2;

        $i4 = $i0 + $i3;

        $b5 = $r0[$i4];

        $l6 = (long) $b5;

        $l6 = $l6 & 255L;

        $i4 = $i3 * 8;

        $l6 = $l6 << $i4;

        $l2 = $l2 | $l6;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $l2;
    }

    public static void store64(byte[], int, long)
    {
        byte[] $r0;
        int $i0;
        long $l1;
        com.google.common.hash.LittleEndianByteArray$LittleEndianBytes $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $r1 = <com.google.common.hash.LittleEndianByteArray: com.google.common.hash.LittleEndianByteArray$LittleEndianBytes byteArray>;

        interfaceinvoke $r1.<com.google.common.hash.LittleEndianByteArray$LittleEndianBytes: void putLongLittleEndian(byte[],int,long)>($r0, $i0, $l1);

        return;
    }

    public static boolean usingUnsafe()
    {
        com.google.common.hash.LittleEndianByteArray$LittleEndianBytes $r0;
        boolean $z0;

        $r0 = <com.google.common.hash.LittleEndianByteArray: com.google.common.hash.LittleEndianByteArray$LittleEndianBytes byteArray>;

        $z0 = $r0 instanceof com.google.common.hash.LittleEndianByteArray$UnsafeByteArray;

        return $z0;
    }
}
