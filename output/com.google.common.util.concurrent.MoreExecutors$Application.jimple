public class com.google.common.util.concurrent.MoreExecutors$Application extends java.lang.Object
{

    public void <init>()
    {
        com.google.common.util.concurrent.MoreExecutors$Application r0;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void addDelayedShutdownHook(java.util.concurrent.ExecutorService, long, java.util.concurrent.TimeUnit)
    {
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.MoreExecutors$Application r0;
        com.google.common.util.concurrent.MoreExecutors$Application$1 $r2;
        java.lang.Thread $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        $r3 := @parameter0: java.util.concurrent.ExecutorService;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DelayedShutdownHook-for-");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new com.google.common.util.concurrent.MoreExecutors$Application$1;

        specialinvoke $r2.<com.google.common.util.concurrent.MoreExecutors$Application$1: void <init>(com.google.common.util.concurrent.MoreExecutors$Application,java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)>(r0, $r3, $l0, $r1);

        $r6 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.lang.Thread newThread(java.lang.String,java.lang.Runnable)>($r5, $r2);

        virtualinvoke r0.<com.google.common.util.concurrent.MoreExecutors$Application: void addShutdownHook(java.lang.Thread)>($r6);

        return;
    }

    public void addShutdownHook(java.lang.Thread)
    {
        com.google.common.util.concurrent.MoreExecutors$Application r0;
        java.lang.Thread $r1;
        java.lang.Runtime $r2;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        $r1 := @parameter0: java.lang.Thread;

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r1);

        return;
    }

    public final java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.MoreExecutors$Application r0;
        java.util.concurrent.ThreadPoolExecutor $r3;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        $r3 := @parameter0: java.util.concurrent.ThreadPoolExecutor;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.MoreExecutors$Application: java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit)>($r3, 120L, $r1);

        return $r2;
    }

    public final java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2;
        com.google.common.util.concurrent.MoreExecutors$Application r0;
        java.util.concurrent.ThreadPoolExecutor $r1;
        long $l0;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        $r1 := @parameter0: java.util.concurrent.ThreadPoolExecutor;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.util.concurrent.MoreExecutors: void access$000(java.util.concurrent.ThreadPoolExecutor)>($r1);

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)>($r1);

        virtualinvoke r0.<com.google.common.util.concurrent.MoreExecutors$Application: void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)>($r1, $l0, $r2);

        return $r3;
    }

    public final java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.MoreExecutors$Application r0;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.util.concurrent.ScheduledThreadPoolExecutor $r3;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        $r3 := @parameter0: java.util.concurrent.ScheduledThreadPoolExecutor;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.MoreExecutors$Application: java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit)>($r3, 120L, $r1);

        return $r2;
    }

    public final java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2;
        com.google.common.util.concurrent.MoreExecutors$Application r0;
        java.util.concurrent.ScheduledExecutorService $r3;
        java.util.concurrent.ScheduledThreadPoolExecutor $r1;
        long $l0;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$Application;

        $r1 := @parameter0: java.util.concurrent.ScheduledThreadPoolExecutor;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.util.concurrent.MoreExecutors: void access$000(java.util.concurrent.ThreadPoolExecutor)>($r1);

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)>($r1);

        virtualinvoke r0.<com.google.common.util.concurrent.MoreExecutors$Application: void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)>($r1, $l0, $r2);

        return $r3;
    }
}
