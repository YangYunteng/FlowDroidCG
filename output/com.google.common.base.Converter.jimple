public abstract class com.google.common.base.Converter extends java.lang.Object implements com.google.common.base.Function
{
    public final boolean handleNullAutomatically;
    public transient com.google.common.base.Converter reverse;

    public void <init>()
    {
        com.google.common.base.Converter r0;

        r0 := @this: com.google.common.base.Converter;

        specialinvoke r0.<com.google.common.base.Converter: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        com.google.common.base.Converter r0;
        boolean $z0;

        r0 := @this: com.google.common.base.Converter;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.base.Converter: boolean handleNullAutomatically> = $z0;

        return;
    }

    public static com.google.common.base.Converter 'from'(com.google.common.base.Function, com.google.common.base.Function)
    {
        com.google.common.base.Function $r0, $r1;
        com.google.common.base.Converter$FunctionBasedConverter $r2;

        $r0 := @parameter0: com.google.common.base.Function;

        $r1 := @parameter1: com.google.common.base.Function;

        $r2 = new com.google.common.base.Converter$FunctionBasedConverter;

        specialinvoke $r2.<com.google.common.base.Converter$FunctionBasedConverter: void <init>(com.google.common.base.Function,com.google.common.base.Function,com.google.common.base.Converter$1)>($r0, $r1, null);

        return $r2;
    }

    public static com.google.common.base.Converter identity()
    {
        com.google.common.base.Converter$IdentityConverter r0;

        r0 = <com.google.common.base.Converter$IdentityConverter: com.google.common.base.Converter$IdentityConverter INSTANCE>;

        return r0;
    }

    public final com.google.common.base.Converter andThen(com.google.common.base.Converter)
    {
        com.google.common.base.Converter r0, $r1;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: com.google.common.base.Converter;

        r0 = virtualinvoke r0.<com.google.common.base.Converter: com.google.common.base.Converter doAndThen(com.google.common.base.Converter)>($r1);

        return r0;
    }

    public final java.lang.Object apply(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Converter r0;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.base.Converter: java.lang.Object convert(java.lang.Object)>($r1);

        return $r1;
    }

    public final java.lang.Object convert(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Converter r0;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.base.Converter: java.lang.Object correctedDoForward(java.lang.Object)>($r1);

        return $r1;
    }

    public java.lang.Iterable convertAll(java.lang.Iterable)
    {
        com.google.common.base.Converter$1 $r2;
        java.lang.Iterable $r1;
        com.google.common.base.Converter r0;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: java.lang.Iterable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "fromIterable");

        $r2 = new com.google.common.base.Converter$1;

        specialinvoke $r2.<com.google.common.base.Converter$1: void <init>(com.google.common.base.Converter,java.lang.Iterable)>(r0, $r1);

        return $r2;
    }

    public java.lang.Object correctedDoBackward(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Converter r0;
        boolean $z0;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: java.lang.Object;

        $z0 = r0.<com.google.common.base.Converter: boolean handleNullAutomatically>;

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<com.google.common.base.Converter: java.lang.Object doBackward(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return $r1;

     label2:
        $r1 = virtualinvoke r0.<com.google.common.base.Converter: java.lang.Object doBackward(java.lang.Object)>($r1);

        return $r1;
    }

    public java.lang.Object correctedDoForward(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Converter r0;
        boolean $z0;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: java.lang.Object;

        $z0 = r0.<com.google.common.base.Converter: boolean handleNullAutomatically>;

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<com.google.common.base.Converter: java.lang.Object doForward(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return $r1;

     label2:
        $r1 = virtualinvoke r0.<com.google.common.base.Converter: java.lang.Object doForward(java.lang.Object)>($r1);

        return $r1;
    }

    public com.google.common.base.Converter doAndThen(com.google.common.base.Converter)
    {
        com.google.common.base.Converter$ConverterComposition $r1;
        com.google.common.base.Converter r0, $r2;

        r0 := @this: com.google.common.base.Converter;

        $r2 := @parameter0: com.google.common.base.Converter;

        $r1 = new com.google.common.base.Converter$ConverterComposition;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        specialinvoke $r1.<com.google.common.base.Converter$ConverterComposition: void <init>(com.google.common.base.Converter,com.google.common.base.Converter)>(r0, $r2);

        return $r1;
    }

    public abstract java.lang.Object doBackward(java.lang.Object);

    public abstract java.lang.Object doForward(java.lang.Object);

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Converter r0;
        boolean $z0;

        r0 := @this: com.google.common.base.Converter;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public com.google.common.base.Converter reverse()
    {
        com.google.common.base.Converter$ReverseConverter $r2;
        com.google.common.base.Converter r0, $r1;

        r0 := @this: com.google.common.base.Converter;

        $r1 = r0.<com.google.common.base.Converter: com.google.common.base.Converter reverse>;

        if $r1 != null goto label1;

        $r2 = new com.google.common.base.Converter$ReverseConverter;

        specialinvoke $r2.<com.google.common.base.Converter$ReverseConverter: void <init>(com.google.common.base.Converter)>(r0);

        r0.<com.google.common.base.Converter: com.google.common.base.Converter reverse> = $r2;

        return $r2;

     label1:
        return $r1;
    }
}
