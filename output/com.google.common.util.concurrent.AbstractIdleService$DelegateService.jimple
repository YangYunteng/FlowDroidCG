public final class com.google.common.util.concurrent.AbstractIdleService$DelegateService extends com.google.common.util.concurrent.AbstractService
{
    public final com.google.common.util.concurrent.AbstractIdleService this$0;

    public void <init>(com.google.common.util.concurrent.AbstractIdleService)
    {
        com.google.common.util.concurrent.AbstractIdleService$DelegateService r0;
        com.google.common.util.concurrent.AbstractIdleService $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$DelegateService;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractIdleService;

        r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: com.google.common.util.concurrent.AbstractIdleService this$0> = $r1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractService: void <init>()>();

        return;
    }

    public void <init>(com.google.common.util.concurrent.AbstractIdleService, com.google.common.util.concurrent.AbstractIdleService$1)
    {
        com.google.common.util.concurrent.AbstractIdleService$DelegateService r0;
        com.google.common.util.concurrent.AbstractIdleService$1 $r2;
        com.google.common.util.concurrent.AbstractIdleService $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$DelegateService;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractIdleService;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractIdleService$1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: void <init>(com.google.common.util.concurrent.AbstractIdleService)>($r1);

        return;
    }

    public final void doStart()
    {
        com.google.common.util.concurrent.AbstractIdleService$DelegateService r0;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AbstractIdleService $r1;
        com.google.common.base.Supplier $r3;
        com.google.common.util.concurrent.AbstractIdleService$DelegateService$1 $r4;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$DelegateService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: com.google.common.util.concurrent.AbstractIdleService this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractIdleService: java.util.concurrent.Executor executor()>();

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: com.google.common.util.concurrent.AbstractIdleService this$0>;

        $r3 = staticinvoke <com.google.common.util.concurrent.AbstractIdleService: com.google.common.base.Supplier access$200(com.google.common.util.concurrent.AbstractIdleService)>($r1);

        $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier)>($r2, $r3);

        $r4 = new com.google.common.util.concurrent.AbstractIdleService$DelegateService$1;

        specialinvoke $r4.<com.google.common.util.concurrent.AbstractIdleService$DelegateService$1: void <init>(com.google.common.util.concurrent.AbstractIdleService$DelegateService)>(r0);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public final void doStop()
    {
        com.google.common.util.concurrent.AbstractIdleService$DelegateService r0;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AbstractIdleService $r1;
        com.google.common.base.Supplier $r3;
        com.google.common.util.concurrent.AbstractIdleService$DelegateService$2 $r4;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$DelegateService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: com.google.common.util.concurrent.AbstractIdleService this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractIdleService: java.util.concurrent.Executor executor()>();

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: com.google.common.util.concurrent.AbstractIdleService this$0>;

        $r3 = staticinvoke <com.google.common.util.concurrent.AbstractIdleService: com.google.common.base.Supplier access$200(com.google.common.util.concurrent.AbstractIdleService)>($r1);

        $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier)>($r2, $r3);

        $r4 = new com.google.common.util.concurrent.AbstractIdleService$DelegateService$2;

        specialinvoke $r4.<com.google.common.util.concurrent.AbstractIdleService$DelegateService$2: void <init>(com.google.common.util.concurrent.AbstractIdleService$DelegateService)>(r0);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.AbstractIdleService$DelegateService r0;
        java.lang.String $r1;
        com.google.common.util.concurrent.AbstractIdleService $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$DelegateService;

        $r2 = r0.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: com.google.common.util.concurrent.AbstractIdleService this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractIdleService: java.lang.String toString()>();

        return $r1;
    }
}
