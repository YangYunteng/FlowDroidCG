public abstract class androidx.recyclerview.widget.RecyclerView$i extends java.lang.Object
{
    public boolean mAutoMeasure;
    public b.s.a.b mChildHelper;
    public int mHeight;
    public int mHeightMode;
    public b.s.a.U mHorizontalBoundCheck;
    public final b.s.a.U$b mHorizontalBoundCheckCallback;
    public boolean mIsAttachedToWindow;
    public boolean mItemPrefetchEnabled;
    public boolean mMeasurementCacheEnabled;
    public int mPrefetchMaxCountObserved;
    public boolean mPrefetchMaxObservedInInitialPrefetch;
    public androidx.recyclerview.widget.RecyclerView mRecyclerView;
    public boolean mRequestedSimpleAnimations;
    public androidx.recyclerview.widget.RecyclerView$r mSmoothScroller;
    public b.s.a.U mVerticalBoundCheck;
    public final b.s.a.U$b mVerticalBoundCheckCallback;
    public int mWidth;
    public int mWidthMode;

    public void <init>()
    {
        b.s.a.H $r1;
        b.s.a.I $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        b.s.a.U $r3;
        b.s.a.U$b $r4;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new b.s.a.H;

        specialinvoke $r1.<b.s.a.H: void <init>(androidx.recyclerview.widget.RecyclerView$i)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U$b mHorizontalBoundCheckCallback> = $r1;

        $r2 = new b.s.a.I;

        specialinvoke $r2.<b.s.a.I: void <init>(androidx.recyclerview.widget.RecyclerView$i)>(r0);

        r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U$b mVerticalBoundCheckCallback> = $r2;

        $r3 = new b.s.a.U;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U$b mHorizontalBoundCheckCallback>;

        specialinvoke $r3.<b.s.a.U: void <init>(b.s.a.U$b)>($r4);

        r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U mHorizontalBoundCheck> = $r3;

        $r3 = new b.s.a.U;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U$b mVerticalBoundCheckCallback>;

        specialinvoke $r3.<b.s.a.U: void <init>(b.s.a.U$b)>($r4);

        r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U mVerticalBoundCheck> = $r3;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mRequestedSimpleAnimations> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mIsAttachedToWindow> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mAutoMeasure> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mMeasurementCacheEnabled> = 1;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mItemPrefetchEnabled> = 1;

        return;
    }

    private void addViewInt(android.view.View, int, boolean)
    {
        java.lang.IllegalStateException $r13;
        android.view.ViewParent $r7;
        b.s.a.b $r8;
        androidx.recyclerview.widget.RecyclerView$r $r11;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r6;
        androidx.recyclerview.widget.RecyclerView$v $r2;
        b.s.a.V $r4;
        int $i0, $i1, $i2;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r3;
        java.lang.String $r10;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r5;
        java.lang.StringBuilder $r9, $r12;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 == 0 goto label01;

        goto label02;

     label01:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r4.<b.s.a.V: void g(androidx.recyclerview.widget.RecyclerView$v)>($r2);

        goto label03;

     label02:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r4.<b.s.a.V: void a(androidx.recyclerview.widget.RecyclerView$v)>($r2);

     label03:
        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r5;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean wasReturnedFromScrap()>();

        if $z0 != 0 goto label08;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean isScrap()>();

        if $z0 == 0 goto label04;

        goto label08;

     label04:
        $r7 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r7 != $r3 goto label07;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $i1 = virtualinvoke $r8.<b.s.a.b: int c(android.view.View)>($r1);

        $i2 = -1;

        if $i0 != $i2 goto label05;

        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r8.<b.s.a.b: int a()>();

     label05:
        $i2 = -1;

        if $i1 == $i2 goto label06;

        if $i1 == $i0 goto label11;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        r0 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$i mLayout>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void moveView(int,int)>($i1, $i0);

        goto label11;

     label06:
        $r13 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        $r9 = $r12;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added View has RecyclerView as parent but view is not a real child. Unfiltered index:");

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r10 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r13;

     label07:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        virtualinvoke $r8.<b.s.a.b: void a(android.view.View,int,boolean)>($r1, $i0, 0);

        $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        if $r11 == null goto label11;

        $z0 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$r: boolean isRunning()>();

        if $z0 == 0 goto label11;

        $r11 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$r: void onChildAttachedToWindow(android.view.View)>($r1);

        goto label11;

     label08:
        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean isScrap()>();

        if $z0 == 0 goto label09;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: void unScrap()>();

        goto label10;

     label09:
        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: void clearReturnedFromScrapFlag()>();

     label10:
        $r8 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r8.<b.s.a.b: void a(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r5, 0);

     label11:
        $z0 = $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate>;

        if $z0 == 0 goto label12;

        $r1 = $r2.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

     label12:
        return;
    }

    public static int chooseSize(int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i3 == -2147483648 goto label1;

        if $i3 == 1073741824 goto label2;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i0);

        return $i1;

     label1:
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i0);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

     label2:
        return $i1;
    }

    private void detachViewInternal(int, android.view.View)
    {
        b.s.a.b $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        virtualinvoke $r2.<b.s.a.b: void a(int)>($i0);

        return;
    }

    public static int getChildMeasureSpec(int, int, int, int, boolean)
    {
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $i2 = $i0 - $i2;

        $i0 = 0;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i2 = $i4;

        if $z0 == 0 goto label05;

        if $i3 < 0 goto label01;

        goto label06;

     label01:
        $i2 = -1;

        if $i3 != $i2 goto label10;

        if $i1 == -2147483648 goto label03;

        if $i1 == 0 goto label02;

        if $i1 == 1073741824 goto label03;

     label02:
        $i1 = 0;

        $i2 = 0;

        goto label04;

     label03:
        $i2 = $i4;

     label04:
        $i0 = $i1;

        goto label11;

     label05:
        if $i3 < 0 goto label07;

     label06:
        $i2 = $i3;

        $i0 = 1073741824;

        goto label11;

     label07:
        $i4 = -1;

        if $i3 != $i4 goto label08;

        $i0 = $i1;

        goto label11;

     label08:
        $i4 = -2;

        if $i3 != $i4 goto label10;

        if $i1 == -2147483648 goto label09;

        if $i1 != 1073741824 goto label11;

     label09:
        $i0 = -2147483648;

        goto label11;

     label10:
        $i2 = 0;

     label11:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, $i0);

        return $i0;
    }

    public static int getChildMeasureSpec(int, int, int, boolean)
    {
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 = $i1 - $i2;

        $i1 = 0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        if $z0 == 0 goto label2;

        if $i0 < 0 goto label1;

        goto label3;

     label1:
        $i2 = 0;

        goto label7;

     label2:
        if $i0 < 0 goto label5;

     label3:
        $i2 = $i0;

     label4:
        $i1 = 1073741824;

        goto label7;

     label5:
        $i3 = -1;

        if $i0 != $i3 goto label6;

        goto label4;

     label6:
        $i3 = -2;

        if $i0 != $i3 goto label1;

        $i1 = -2147483648;

     label7:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, $i1);

        return $i1;
    }

    private int[] getChildRectangleOnScreenScrollAmount(android.view.View, android.graphics.Rect)
    {
        android.graphics.Rect $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = newarray (int)[2];

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i3 = $i2 - $i3;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i2 = $i2 - $i4;

        $i4 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i5 = $r2.<android.graphics.Rect: int left>;

        $i4 = $i4 + $i5;

        $i5 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i6 = $r2.<android.graphics.Rect: int top>;

        $i5 = $i5 + $i6;

        $i6 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i6 = $i5 - $i6;

        $i5 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $i7 = $i5 + $i4;

        $i5 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i8 = $i5 + $i6;

        $i0 = $i4 - $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i0);

        $i5 = $i4;

        $i1 = $i6 - $i1;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i1);

        $i9 = $i6;

        $i7 = $i7 - $i3;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $i3 = $i10;

        $i2 = $i8 - $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getLayoutDirection()>();

        if $i8 != 1 goto label2;

        if $i10 == 0 goto label1;

        goto label5;

     label1:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i7);

        goto label5;

     label2:
        if $i4 == 0 goto label3;

        goto label4;

     label3:
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i10);

     label4:
        $i3 = $i5;

     label5:
        if $i6 == 0 goto label6;

        goto label7;

     label6:
        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

     label7:
        $r3[0] = $i3;

        $r3[1] = $i9;

        return $r3;
    }

    public static androidx.recyclerview.widget.RecyclerView$i$b getProperties(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context $r2;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r3;
        int[] $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$i$b $r0;
        boolean $z0;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 := @parameter3: int;

        $r0 = new androidx.recyclerview.widget.RecyclerView$i$b;

        specialinvoke $r0.<androidx.recyclerview.widget.RecyclerView$i$b: void <init>()>();

        $r1 = <b.s.c: int[] RecyclerView>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r3, $r1, $i1, $i0);

        $i1 = <b.s.c: int RecyclerView_android_orientation>;

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i1, 1);

        $r0.<androidx.recyclerview.widget.RecyclerView$i$b: int a> = $i1;

        $i1 = <b.s.c: int RecyclerView_spanCount>;

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i1, 1);

        $r0.<androidx.recyclerview.widget.RecyclerView$i$b: int b> = $i1;

        $i1 = <b.s.c: int RecyclerView_reverseLayout>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        $r0.<androidx.recyclerview.widget.RecyclerView$i$b: boolean c> = $z0;

        $i1 = <b.s.c: int RecyclerView_stackFromEnd>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        $r0.<androidx.recyclerview.widget.RecyclerView$i$b: boolean d> = $z0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return $r0;
    }

    private boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        android.graphics.Rect $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i5 = $i4 - $i5;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i4 = $i4 - $i6;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r1.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>($r2, $r3);

        $i6 = $r3.<android.graphics.Rect: int left>;

        $i6 = $i6 - $i0;

        if $i6 >= $i5 goto label3;

        $i5 = $r3.<android.graphics.Rect: int right>;

        $i0 = $i5 - $i0;

        if $i0 <= $i2 goto label3;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        if $i0 >= $i4 goto label3;

        $i0 = $r3.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        if $i0 > $i3 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static boolean isMeasurementUpToDate(int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i2 <= 0 goto label1;

        if $i0 == $i2 goto label1;

        return 0;

     label1:
        if $i3 == -2147483648 goto label4;

        if $i3 == 0 goto label3;

        if $i3 == 1073741824 goto label2;

        return 0;

     label2:
        if $i1 != $i0 goto label5;

        return 1;

     label3:
        return 1;

     label4:
        if $i1 < $i0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$o, int, android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$o $r2;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        b.s.a.V $r6;
        androidx.recyclerview.widget.RecyclerView$a $r5;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.view.View;

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isInvalid()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $z0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$a: boolean hasStableIds()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void removeViewAt(int)>($i0);

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: void d(androidx.recyclerview.widget.RecyclerView$v)>($r3);

        return;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void detachViewAt(int)>($i0);

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: void c(android.view.View)>($r1);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r6 = $r4.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r6.<b.s.a.V: void d(androidx.recyclerview.widget.RecyclerView$v)>($r3);

        return;
    }

    public void addDisappearingView(android.view.View)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = -1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void addDisappearingView(android.view.View,int)>($r1, $i0);

        return;
    }

    public void addDisappearingView(android.view.View, int)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void addViewInt(android.view.View,int,boolean)>($r1, $i0, 1);

        return;
    }

    public void addView(android.view.View)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = -1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void addView(android.view.View,int)>($r1, $i0);

        return;
    }

    public void addView(android.view.View, int)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void addViewInt(android.view.View,int,boolean)>($r1, $i0, 0);

        return;
    }

    public void assertInLayoutOrScroll(java.lang.String)
    {
        java.lang.String $r1;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)>($r1);

     label1:
        return;
    }

    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        java.lang.String $r1;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>($r1);

     label1:
        return;
    }

    public void attachView(android.view.View)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = -1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void attachView(android.view.View,int)>($r1, $i0);

        return;
    }

    public void attachView(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r1, $i0, $r3);

        return;
    }

    public void attachView(android.view.View, int, androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        b.s.a.b $r6;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        b.s.a.V $r5;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r5.<b.s.a.V: void a(androidx.recyclerview.widget.RecyclerView$v)>($r3);

        goto label2;

     label1:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r5.<b.s.a.V: void g(androidx.recyclerview.widget.RecyclerView$v)>($r3);

     label2:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        virtualinvoke $r6.<b.s.a.b: void a(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r2, $z0);

        return;
    }

    public void calculateItemDecorationsForChild(android.view.View, android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r3;
        android.view.View $r4;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r4 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 != null goto label1;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label1:
        $r3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>($r4);

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return;
    }

    public boolean canScrollHorizontally()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        return 0;
    }

    public boolean canScrollVertically()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        return 0;
    }

    public boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void collectAdjacentPrefetchPositions(int, int, androidx.recyclerview.widget.RecyclerView$s, androidx.recyclerview.widget.RecyclerView$i$a)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$i$a $r2;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: androidx.recyclerview.widget.RecyclerView$s;

        $r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$i$a;

        return;
    }

    public void collectInitialPrefetchPositions(int, androidx.recyclerview.widget.RecyclerView$i$a)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView$i$a $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$i$a;

        return;
    }

    public int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0, $i1;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getChildCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$o,int,android.view.View)>($r1, $i0, $r2);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return;
    }

    public void detachAndScrapView(android.view.View, androidx.recyclerview.widget.RecyclerView$o)
    {
        b.s.a.b $r3;
        androidx.recyclerview.widget.RecyclerView$o $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r3.<b.s.a.b: int c(android.view.View)>($r1);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$o,int,android.view.View)>($r2, $i0, $r1);

        return;
    }

    public void detachAndScrapViewAt(int, androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$o,int,android.view.View)>($r1, $i0, $r2);

        return;
    }

    public void detachView(android.view.View)
    {
        b.s.a.b $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $i0 = virtualinvoke $r2.<b.s.a.b: int c(android.view.View)>($r1);

        if $i0 < 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void detachViewInternal(int,android.view.View)>($i0, $r1);

     label1:
        return;
    }

    public void detachViewAt(int)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void detachViewInternal(int,android.view.View)>($i0, $r1);

        return;
    }

    public void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mIsAttachedToWindow> = 1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)>($r1);

        return;
    }

    public void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mIsAttachedToWindow> = 0;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$o)>($r1, $r2);

        return;
    }

    public void endAnimation(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r1;
        androidx.recyclerview.widget.RecyclerView$f $r4;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r4 == null goto label1;

        $r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$f: void d(androidx.recyclerview.widget.RecyclerView$v)>($r1);

     label1:
        return;
    }

    public android.view.View findContainingItemView(android.view.View)
    {
        b.s.a.b $r3;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r1 != null goto label2;

        return null;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $z0 = virtualinvoke $r3.<b.s.a.b: boolean d(android.view.View)>($r1);

        if $z0 == 0 goto label3;

        return null;

     label3:
        return $r1;
    }

    public android.view.View findViewByPosition(int)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i2);

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $r2 != null goto label2;

        goto label3;

     label2:
        $i3 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: int getLayoutPosition()>();

        if $i3 != $i0 goto label3;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$s: boolean d()>();

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label3;

        return $r1;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return null;

     label5:
        return $r1;
    }

    public abstract androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams();

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return $r3;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r2, $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r2;

     label2:
        $r2 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke $r2.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public int getBaseline()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 = -1;

        return $i0;
    }

    public int getBottomDecorationHeight(android.view.View)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int bottom>;

        return i0;
    }

    public android.view.View getChildAt(int)
    {
        b.s.a.b $r1;
        int $i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<b.s.a.b: android.view.View c(int)>($i0);

        return $r2;

     label1:
        return null;
    }

    public int getChildCount()
    {
        int $i0;
        b.s.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<b.s.a.b: int a()>();

        return $i0;

     label1:
        return 0;
    }

    public boolean getClipToPadding()
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $z0 = $r1.<androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$a $r4;
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r3 == null goto label2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r4 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        return $i0;

     label2:
        return 1;
    }

    public int getDecoratedBottom(android.view.View)
    {
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getBottomDecorationHeight(android.view.View)>($r1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        android.view.View $r1;
        android.graphics.Rect $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>($r1, $r2);

        return;
    }

    public int getDecoratedLeft(android.view.View)
    {
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getLeftDecorationWidth(android.view.View)>($r1);

        $i0 = $i0 - $i1;

        return $i0;
    }

    public int getDecoratedMeasuredHeight(android.view.View)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i0 = $r4.<android.graphics.Rect: int top>;

        $i0 = $i1 + $i0;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getDecoratedMeasuredWidth(android.view.View)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i0 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i1 + $i0;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getDecoratedRight(android.view.View)
    {
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getRightDecorationWidth(android.view.View)>($r1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getDecoratedTop(android.view.View)
    {
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getTopDecorationHeight(android.view.View)>($r1);

        $i0 = $i0 - $i1;

        return $i0;
    }

    public android.view.View getFocusedChild()
    {
        b.s.a.b $r3;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        if $r2 == null goto label3;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $z0 = virtualinvoke $r3.<b.s.a.b: boolean d(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        return null;

     label2:
        return $r2;

     label3:
        return null;
    }

    public int getHeight()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeight>;

        return i0;
    }

    public int getHeightMode()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeightMode>;

        return i0;
    }

    public int getItemCount()
    {
        androidx.recyclerview.widget.RecyclerView$a $r2;
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a getAdapter()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        return $i0;

     label3:
        return 0;
    }

    public int getItemViewType(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$v: int getItemViewType()>();

        return $i0;
    }

    public int getLayoutDirection()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>($r1);

        return $i0;
    }

    public int getLeftDecorationWidth(android.view.View)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int left>;

        return i0;
    }

    public int getMinimumHeight()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <b.i.i.y: int q(android.view.View)>($r1);

        return $i0;
    }

    public int getMinimumWidth()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <b.i.i.y: int r(android.view.View)>($r1);

        return $i0;
    }

    public int getPaddingBottom()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingBottom()>();

        return $i0;

     label1:
        return 0;
    }

    public int getPaddingEnd()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $i0 = staticinvoke <b.i.i.y: int t(android.view.View)>($r1);

        return $i0;

     label1:
        return 0;
    }

    public int getPaddingLeft()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingLeft()>();

        return $i0;

     label1:
        return 0;
    }

    public int getPaddingRight()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingRight()>();

        return $i0;

     label1:
        return 0;
    }

    public int getPaddingStart()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $i0 = staticinvoke <b.i.i.y: int u(android.view.View)>($r1);

        return $i0;

     label1:
        return 0;
    }

    public int getPaddingTop()
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingTop()>();

        return $i0;

     label1:
        return 0;
    }

    public int getPosition(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        return $i0;
    }

    public int getRightDecorationWidth(android.view.View)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int right>;

        return i0;
    }

    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$a $r4;
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r3 == null goto label2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r4 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        $i0 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        return $i0;

     label2:
        return 1;
    }

    public int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public int getTopDecorationHeight(android.view.View)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r1;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int top>;

        return i0;
    }

    public void getTransformedBoundingBox(android.view.View, boolean, android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r5;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r6;
        android.graphics.Matrix $r7;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;
        double $d0;
        android.graphics.RectF $r8;
        android.view.ViewGroup$LayoutParams $r3;
        float $f0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: android.graphics.Rect;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r5.<android.graphics.Rect: int left>;

        $i0 = neg $i0;

        $i1 = $r5.<android.graphics.Rect: int top>;

        $i1 = neg $i1;

        $i2 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i3 = $r5.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i4 = $r5.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + $i4;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        goto label2;

     label1:
        $i0 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r6 == null goto label3;

        $r7 = virtualinvoke $r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        if $r7 == null goto label3;

        $z0 = virtualinvoke $r7.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r8 = $r6.<androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF>;

        virtualinvoke $r8.<android.graphics.RectF: void set(android.graphics.Rect)>($r1);

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r8);

        $f0 = $r8.<android.graphics.RectF: float left>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d0;

        $f0 = $r8.<android.graphics.RectF: float top>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i1 = (int) $d0;

        $f0 = $r8.<android.graphics.RectF: float right>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d0;

        $f0 = $r8.<android.graphics.RectF: float bottom>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i3 = (int) $d0;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label3:
        $i0 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        return;
    }

    public int getWidth()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidth>;

        return i0;
    }

    public int getWidthMode()
    {
        int i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        i0 = r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidthMode>;

        return i0;
    }

    public boolean hasFlexibleChildInBothOrientations()
    {
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i2);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 >= 0 goto label2;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i0 >= 0 goto label2;

        return 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean hasFocus()
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void ignoreView(android.view.View)
    {
        android.view.ViewParent $r2;
        androidx.recyclerview.widget.RecyclerView$v $r4;
        java.lang.IllegalArgumentException $r9;
        b.s.a.V $r5;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.StringBuilder $r6, $r8;
        androidx.recyclerview.widget.RecyclerView $r3;
        java.lang.String $r7;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 != $r3 goto label1;

        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r1);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $r4 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$v: void addFlags(int)>(128);

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r3.<androidx.recyclerview.widget.RecyclerView: b.s.a.V mViewInfoStore>;

        virtualinvoke $r5.<b.s.a.V: void h(androidx.recyclerview.widget.RecyclerView$v)>($r4);

        return;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        $r6 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View should be fully attached to be ignored");

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r7 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r9;
    }

    public boolean isAttachedToWindow()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mIsAttachedToWindow>;

        return z0;
    }

    public boolean isAutoMeasureEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mAutoMeasure>;

        return z0;
    }

    public boolean isFocused()
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean isFocused()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isItemPrefetchEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mItemPrefetchEnabled>;

        return z0;
    }

    public boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public boolean isMeasurementCacheEnabled()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mMeasurementCacheEnabled>;

        return z0;
    }

    public boolean isSmoothScrolling()
    {
        androidx.recyclerview.widget.RecyclerView$r $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$r: boolean isRunning()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isViewPartiallyVisible(android.view.View, boolean, boolean)
    {
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        b.s.a.U $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U mHorizontalBoundCheck>;

        $z1 = virtualinvoke $r2.<b.s.a.U: boolean a(android.view.View,int)>($r1, 24579);

        if $z1 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.U mVerticalBoundCheck>;

        $z1 = virtualinvoke $r2.<b.s.a.U: boolean a(android.view.View,int)>($r1, 24579);

        if $z1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $z1;

     label3:
        $z0 = $z1 ^ 1;

        return $z0;
    }

    public void layoutDecorated(android.view.View, int, int, int, int)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i4;

        $i4 = $r4.<android.graphics.Rect: int top>;

        $i1 = $i1 + $i4;

        $i4 = $r4.<android.graphics.Rect: int right>;

        $i2 = $i2 - $i4;

        $i4 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void layoutDecoratedWithMargins(android.view.View, int, int, int, int)
    {
        android.graphics.Rect $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i0 = $i0 + $i4;

        $i4 = $r4.<android.graphics.Rect: int top>;

        $i1 = $i1 + $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i1 + $i4;

        $i4 = $r4.<android.graphics.Rect: int right>;

        $i2 = $i2 - $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i2 = $i2 - $i4;

        $i4 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i3 = $i3 - $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void measureChild(android.view.View, int, int)
    {
        android.graphics.Rect $r5;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>($r1);

        $i2 = $r5.<android.graphics.Rect: int left>;

        $i3 = $r5.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i2 = $i0 + $i2;

        $i0 = $r5.<android.graphics.Rect: int top>;

        $i3 = $r5.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i3;

        $i0 = $i1 + $i0;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidthMode()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i4 = $i4 + $i5;

        $i2 = $i4 + $i2;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int getChildMeasureSpec(int,int,int,int,boolean)>($i1, $i3, $i2, $i4, $z0);

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeightMode()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i4 = $i4 + $i5;

        $i0 = $i4 + $i0;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        $i0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int getChildMeasureSpec(int,int,int,int,boolean)>($i2, $i3, $i0, $i4, $z0);

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r1, $i1, $i0, $r3);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i0);

     label1:
        return;
    }

    public void measureChildWithMargins(android.view.View, int, int)
    {
        android.graphics.Rect $r5;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r2;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>($r1);

        $i2 = $r5.<android.graphics.Rect: int left>;

        $i3 = $r5.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i2 = $i0 + $i2;

        $i0 = $r5.<android.graphics.Rect: int top>;

        $i3 = $r5.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i3;

        $i0 = $i1 + $i0;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidthMode()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i4 = $i4 + $i5;

        $i2 = $i4 + $i2;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        $i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int getChildMeasureSpec(int,int,int,int,boolean)>($i1, $i3, $i2, $i4, $z0);

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeightMode()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i0 = $i4 + $i0;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        $i0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int getChildMeasureSpec(int,int,int,int,boolean)>($i2, $i3, $i0, $i4, $z0);

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r1, $i1, $i0, $r3);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i0);

     label1:
        return;
    }

    public void moveView(int, int)
    {
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.StringBuilder $r3;
        androidx.recyclerview.widget.RecyclerView $r4;
        java.lang.String $r5;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        if $r1 == null goto label1;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void detachViewAt(int)>($i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void attachView(android.view.View,int)>($r1, $i1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move a child from non-existing index:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }

    public void offsetChildrenHorizontal(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)>($i0);

     label1:
        return;
    }

    public void offsetChildrenVertical(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)>($i0);

     label1:
        return;
    }

    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$a, androidx.recyclerview.widget.RecyclerView$a)
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$a $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$a;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$a;

        return;
    }

    public boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView, java.util.ArrayList, int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter1: java.util.ArrayList;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        return 0;
    }

    public void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)>($r1);

        return;
    }

    public android.view.View onFocusSearchFailed(android.view.View, int, androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        android.view.View $r3;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r3 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: androidx.recyclerview.widget.RecyclerView$o;

        $r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$s;

        return null;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView$o $r2;
        android.view.accessibility.AccessibilityEvent $r1;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r2 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,android.view.accessibility.AccessibilityEvent)>($r2, $r4, $r1);

        return;
    }

    public void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s, android.view.accessibility.AccessibilityEvent)
    {
        androidx.recyclerview.widget.RecyclerView$o $r2;
        androidx.recyclerview.widget.RecyclerView$s $r3;
        androidx.recyclerview.widget.RecyclerView$a $r5;
        int $i0;
        android.view.accessibility.AccessibilityEvent $r1;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r3 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r1 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r4 == null goto label4;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = 1;

        $z1 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollVertically(int)>(1);

        if $z1 != 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = -1;

        $z1 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollVertically(int)>($i0);

        if $z1 != 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = -1;

        $z1 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollHorizontally(int)>($i0);

        if $z1 != 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z0);

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$a mAdapter>;

        if $r5 == null goto label4;

        $i0 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$a: int getItemCount()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i0);

     label4:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s, b.i.i.a.b)
    {
        androidx.recyclerview.widget.RecyclerView$o $r3;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        b.i.i.a.b $r2;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        b.i.i.a.b$b $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r3 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r2 := @parameter2: b.i.i.a.b;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = -1;

        $z0 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollVertically(int)>($i0);

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i0 = -1;

        $z0 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollHorizontally(int)>($i0);

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke $r2.<b.i.i.a.b: void a(int)>(8192);

        virtualinvoke $r2.<b.i.i.a.b: void m(boolean)>(1);

     label2:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollVertically(int)>(1);

        if $z0 != 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.view.ViewGroup: boolean canScrollHorizontally(int)>(1);

        if $z0 == 0 goto label4;

     label3:
        virtualinvoke $r2.<b.i.i.a.b: void a(int)>(4096);

        virtualinvoke $r2.<b.i.i.a.b: void m(boolean)>(1);

     label4:
        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r3, $r1);

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r3, $r1);

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r3, $r1);

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s)>($r3, $r1);

        $r5 = staticinvoke <b.i.i.a.b$b: b.i.i.a.b$b a(int,int,boolean,int)>($i0, $i1, $z0, $i2);

        virtualinvoke $r2.<b.i.i.a.b: void a(java.lang.Object)>($r5);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(b.i.i.a.b)
    {
        androidx.recyclerview.widget.RecyclerView$o $r2;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        b.i.i.a.b $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: b.i.i.a.b;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r2 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,b.i.i.a.b)>($r2, $r4, $r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(android.view.View, b.i.i.a.b)
    {
        b.s.a.b $r4;
        androidx.recyclerview.widget.RecyclerView$o $r7;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        androidx.recyclerview.widget.RecyclerView$s $r8;
        b.i.i.a.b $r2;
        android.view.View $r1, $r5;
        androidx.recyclerview.widget.RecyclerView $r6;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: b.i.i.a.b;

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r1);

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        $r5 = $r3.<androidx.recyclerview.widget.RecyclerView$v: android.view.View itemView>;

        $z0 = virtualinvoke $r4.<b.s.a.b: boolean d(android.view.View)>($r5);

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r7 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r8 = $r6.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,android.view.View,b.i.i.a.b)>($r7, $r8, $r1, $r2);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s, android.view.View, b.i.i.a.b)
    {
        androidx.recyclerview.widget.RecyclerView$o $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        b.i.i.a.b $r2;
        int $i0, $i1;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        b.i.i.a.b$c $r5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r3 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r4 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r1 := @parameter2: android.view.View;

        $r2 := @parameter3: b.i.i.a.b;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollVertically()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPosition(android.view.View)>($r1);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPosition(android.view.View)>($r1);

        goto label4;

     label3:
        $i1 = 0;

     label4:
        $r5 = staticinvoke <b.i.i.a.b$c: b.i.i.a.b$c a(int,int,int,int,boolean,boolean)>($i0, 1, $i1, 1, 0, 0);

        virtualinvoke $r2.<b.i.i.a.b: void b(java.lang.Object)>($r5);

        return;
    }

    public android.view.View onInterceptFocusSearch(android.view.View, int)
    {
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return null;
    }

    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        return;
    }

    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView, int, int, int)
    {
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView, int, int, java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.Object;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)>($r1, $i0, $i1);

        return;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$o $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override onLayoutChildren(Recycler recycler, State state) ");

        return;
    }

    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$s;

        return;
    }

    public void onMeasure(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s, int, int)
    {
        androidx.recyclerview.widget.RecyclerView$o $r2;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)>($i0, $i1);

        return;
    }

    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView, android.view.View, android.view.View)
    {
        android.view.View $r1, $r3;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r3 := @parameter1: android.view.View;

        $r1 := @parameter2: android.view.View;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean isSmoothScrolling()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$s, android.view.View, android.view.View)
    {
        android.view.View $r2, $r3;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r4 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r2 := @parameter2: android.view.View;

        $r3 := @parameter3: android.view.View;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)>($r4, $r2, $r3);

        return $z0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.os.Parcelable;

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        return null;
    }

    public void onScrollStateChanged(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        return;
    }

    public void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$r)
    {
        androidx.recyclerview.widget.RecyclerView$r $r1, $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$r;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        if $r1 != $r2 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller> = null;

     label1:
        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.recyclerview.widget.RecyclerView$o $r2;
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r2 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r4 = $r3.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,int,android.os.Bundle)>($r2, $r4, $i0, $r1);

        return $z0;
    }

    public boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s, int, android.os.Bundle)
    {
        android.os.Bundle $r4;
        androidx.recyclerview.widget.RecyclerView$o $r2;
        androidx.recyclerview.widget.RecyclerView$s $r3;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r3 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $i0 := @parameter2: int;

        $r4 := @parameter3: android.os.Bundle;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 != null goto label01;

        return 0;

     label01:
        if $i0 == 4096 goto label05;

        if $i0 == 8192 goto label02;

        $i1 = 0;

        $i0 = 0;

        goto label10;

     label02:
        $i0 = -1;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean canScrollVertically(int)>($i0);

        if $z0 == 0 goto label03;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        goto label04;

     label03:
        $i0 = 0;

     label04:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $i1 = -1;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean canScrollHorizontally(int)>($i1);

        if $z0 == 0 goto label09;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        $i1 = neg $i1;

        goto label08;

     label05:
        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean canScrollVertically(int)>(1);

        if $z0 == 0 goto label06;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getHeight()>();

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        goto label07;

     label06:
        $i0 = 0;

     label07:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean canScrollHorizontally(int)>(1);

        if $z0 == 0 goto label09;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getWidth()>();

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i1 = $i1 - $i2;

     label08:
        goto label10;

     label09:
        $i1 = 0;

     label10:
        if $i0 != 0 goto label11;

        if $i1 != 0 goto label11;

        return 0;

     label11:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>($i1, $i0, null, -2147483648, 1);

        return 1;
    }

    public boolean performAccessibilityActionForItem(android.view.View, int, android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.recyclerview.widget.RecyclerView$o $r3;
        androidx.recyclerview.widget.RecyclerView$s $r4;
        int $i0;
        android.view.View $r5;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r5 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Bundle;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        $r4 = $r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s mState>;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$o,androidx.recyclerview.widget.RecyclerView$s,android.view.View,int,android.os.Bundle)>($r3, $r4, $r5, $i0, $r1);

        return $z0;
    }

    public boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s, android.view.View, int, android.os.Bundle)
    {
        android.os.Bundle $r3;
        androidx.recyclerview.widget.RecyclerView$o $r4;
        int $i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$s $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r4 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $r3 := @parameter4: android.os.Bundle;

        return 0;
    }

    public void postOnAnimation(java.lang.Runnable)
    {
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        java.lang.Runnable $r1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        staticinvoke <b.i.i.y: void a(android.view.View,java.lang.Runnable)>($r2, $r1);

     label1:
        return;
    }

    public void removeAllViews()
    {
        b.s.a.b $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getChildCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        virtualinvoke $r1.<b.s.a.b: void f(int)>($i0);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return;
    }

    public void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getChildCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$o)>($i0, $r1);

     label2:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label3:
        return;
    }

    public void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        androidx.recyclerview.widget.RecyclerView$v $r3;
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$f $r5;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r4;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$o;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$o: int e()>();

        $i1 = -1;

        $i1 = $i0 + $i1;

     label1:
        if $i1 < 0 goto label6;

        $r2 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$o: android.view.View c(int)>($i1);

        $r3 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean shouldIgnore()>();

        if $z0 == 0 goto label2;

        goto label5;

     label2:
        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void setIsRecyclable(boolean)>(0);

        $z0 = virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: boolean isTmpDetached()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r2, 0);

     label3:
        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$f mItemAnimator>;

        if $r5 == null goto label4;

        virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$f: void d(androidx.recyclerview.widget.RecyclerView$v)>($r3);

     label4:
        virtualinvoke $r3.<androidx.recyclerview.widget.RecyclerView$v: void setIsRecyclable(boolean)>(1);

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$o: void a(android.view.View)>($r2);

     label5:
        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label1;

     label6:
        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$o: void c()>();

        if $i0 <= 0 goto label7;

        $r4 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<android.view.ViewGroup: void invalidate()>();

     label7:
        return;
    }

    public void removeAndRecycleView(android.view.View, androidx.recyclerview.widget.RecyclerView$o)
    {
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        androidx.recyclerview.widget.RecyclerView$o $r2;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void removeView(android.view.View)>($r1);

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: void b(android.view.View)>($r1);

        return;
    }

    public void removeAndRecycleViewAt(int, androidx.recyclerview.widget.RecyclerView$o)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void removeViewAt(int)>($i0);

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$o: void b(android.view.View)>($r2);

        return;
    }

    public boolean removeCallbacks(java.lang.Runnable)
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        java.lang.Runnable $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: java.lang.Runnable;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r2);

        return $z0;

     label1:
        return 0;
    }

    public void removeDetachedView(android.view.View)
    {
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r1, 0);

        return;
    }

    public void removeView(android.view.View)
    {
        android.view.View $r1;
        b.s.a.b $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        virtualinvoke $r2.<b.s.a.b: void e(android.view.View)>($r1);

        return;
    }

    public void removeViewAt(int)
    {
        b.s.a.b $r2;
        int $i0;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i0);

        if $r1 == null goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper>;

        virtualinvoke $r2.<b.s.a.b: void f(int)>($i0);

     label1:
        return;
    }

    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        android.graphics.Rect $r2;
        android.view.View $r1;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r3 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.graphics.Rect;

        $z0 := @parameter3: boolean;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>($r3, $r1, $r2, $z0, 0);

        return $z0;
    }

    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean, boolean)
    {
        android.graphics.Rect $r3;
        int[] $r4;
        int $i0, $i1;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.Rect;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $r4 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)>($r2, $r3);

        $i0 = $r4[0];

        $i1 = $r4[1];

        if $z1 == 0 goto label1;

        $z1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)>($r1, $i0, $i1);

        if $z1 == 0 goto label2;

     label1:
        if $i0 != 0 goto label3;

        if $i1 == 0 goto label5;

        goto label3;

     label2:
        return 0;

     label3:
        if $z0 == 0 goto label4;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>($i0, $i1);

        return 1;

     label4:
        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>($i0, $i1);

        return 1;

     label5:
        return 0;
    }

    public void requestLayout()
    {
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void requestLayout()>();

     label1:
        return;
    }

    public void requestSimpleAnimationsInNextLayout()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mRequestedSimpleAnimations> = 1;

        return;
    }

    public int scrollHorizontallyBy(int, androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public void scrollToPosition(int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        return;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$o, androidx.recyclerview.widget.RecyclerView$s)
    {
        androidx.recyclerview.widget.RecyclerView$o $r1;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$o;

        $r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$s;

        return 0;
    }

    public void setAutoMeasureEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mAutoMeasure> = $z0;

        return;
    }

    public void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        $i1 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void setMeasureSpecs(int,int)>($i0, $i1);

        return;
    }

    public final void setItemPrefetchEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$o $r2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $z1 := @parameter0: boolean;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mItemPrefetchEnabled>;

        if $z1 == $z0 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mItemPrefetchEnabled> = $z1;

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mPrefetchMaxCountObserved> = 0;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$o mRecycler>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$o: void j()>();

     label1:
        return;
    }

    public void setMeasureSpecs(int, int)
    {
        int $i0, $i1, $i2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidth> = $i2;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidthMode> = $i1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidthMode>;

        if $i1 != 0 goto label1;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z0 != 0 goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidth> = 0;

     label1:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeight> = $i1;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeightMode> = $i1;

        $i1 = r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeightMode>;

        if $i1 != 0 goto label2;

        $z0 = <androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z0 != 0 goto label2;

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeight> = 0;

     label2:
        return;
    }

    public void setMeasuredDimension(int, int)
    {
        int $i0, $i1;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        staticinvoke <androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)>($r1, $i0, $i1);

        return;
    }

    public void setMeasuredDimension(android.graphics.Rect, int, int)
    {
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: android.graphics.Rect;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingLeft()>();

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingTop()>();

        $i3 = $i3 + $i4;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getPaddingBottom()>();

        $i3 = $i3 + $i4;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getMinimumWidth()>();

        $i1 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int chooseSize(int,int,int)>($i1, $i2, $i4);

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getMinimumHeight()>();

        $i0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: int chooseSize(int,int,int)>($i0, $i3, $i2);

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void setMeasuredDimension(int,int)>($i1, $i0);

        return;
    }

    public void setMeasuredDimensionFromChildren(int, int)
    {
        android.graphics.Rect $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: int getChildCount()>();

        if $i2 != 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)>($i0, $i1);

        return;

     label1:
        $i3 = 0;

        $i4 = 2147483647;

        $i5 = 2147483647;

        $i6 = -2147483648;

        $i7 = -2147483648;

     label2:
        if $i3 >= $i2 goto label7;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: android.view.View getChildAt(int)>($i3);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r1.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>($r2, $r3);

        $i8 = $r3.<android.graphics.Rect: int left>;

        if $i8 >= $i4 goto label3;

        $i4 = $i8;

     label3:
        $i8 = $r3.<android.graphics.Rect: int right>;

        if $i8 <= $i6 goto label4;

        $i6 = $i8;

     label4:
        $i8 = $r3.<android.graphics.Rect: int top>;

        if $i8 >= $i5 goto label5;

        $i5 = $i8;

     label5:
        $i8 = $r3.<android.graphics.Rect: int bottom>;

        if $i8 <= $i7 goto label6;

        $i7 = $i8;

     label6:
        $i3 = $i3 + 1;

        goto label2;

     label7:
        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r1.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i5, $i6, $i7);

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        $r3 = $r1.<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$i: void setMeasuredDimension(android.graphics.Rect,int,int)>($r3, $i0, $i1);

        return;
    }

    public void setMeasurementCacheEnabled(boolean)
    {
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mMeasurementCacheEnabled> = $z0;

        return;
    }

    public void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
    {
        b.s.a.b $r2;
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        if $r1 != null goto label1;

        r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper> = null;

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidth> = 0;

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeight> = 0;

        goto label2;

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView> = $r1;

        $r2 = $r1.<androidx.recyclerview.widget.RecyclerView: b.s.a.b mChildHelper>;

        r0.<androidx.recyclerview.widget.RecyclerView$i: b.s.a.b mChildHelper> = $r2;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeight> = $i0;

     label2:
        r0.<androidx.recyclerview.widget.RecyclerView$i: int mWidthMode> = 1073741824;

        r0.<androidx.recyclerview.widget.RecyclerView$i: int mHeightMode> = 1073741824;

        return;
    }

    public boolean shouldMeasureChild(android.view.View, int, int, androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $z0 = virtualinvoke $r2.<android.view.View: boolean isLayoutRequested()>();

        if $z0 != 0 goto label2;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mMeasurementCacheEnabled>;

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i1 = $r1.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $z0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: boolean isMeasurementUpToDate(int,int,int)>($i3, $i2, $i1);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i1 = $r1.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $z0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: boolean isMeasurementUpToDate(int,int,int)>($i2, $i0, $i1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean shouldMeasureTwice()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        return 0;
    }

    public boolean shouldReMeasureChild(android.view.View, int, int, androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $z0 = r0.<androidx.recyclerview.widget.RecyclerView$i: boolean mMeasurementCacheEnabled>;

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i1 = $r1.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $z0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: boolean isMeasurementUpToDate(int,int,int)>($i3, $i2, $i1);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();

        $i1 = $r1.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $z0 = staticinvoke <androidx.recyclerview.widget.RecyclerView$i: boolean isMeasurementUpToDate(int,int,int)>($i2, $i0, $i1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$s, int)
    {
        int $i0;
        androidx.recyclerview.widget.RecyclerView $r1;
        androidx.recyclerview.widget.RecyclerView$s $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$s;

        $i0 := @parameter2: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override smoothScrollToPosition to support smooth scrolling");

        return;
    }

    public void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$r)
    {
        androidx.recyclerview.widget.RecyclerView$r $r1, $r2;
        androidx.recyclerview.widget.RecyclerView $r3;
        androidx.recyclerview.widget.RecyclerView$i r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$r;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        if $r2 == null goto label1;

        if $r1 == $r2 goto label1;

        $z0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$r: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$r: void stop()>();

     label1:
        r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller> = $r1;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        $r3 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$r: void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$i)>($r3, r0);

        return;
    }

    public void stopIgnoringView(android.view.View)
    {
        androidx.recyclerview.widget.RecyclerView$v $r1;
        android.view.View $r2;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r2 := @parameter0: android.view.View;

        $r1 = staticinvoke <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getChildViewHolderInt(android.view.View)>($r2);

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: void stopIgnoring()>();

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: void resetInternal()>();

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$v: void addFlags(int)>(4);

        return;
    }

    public void stopSmoothScroller()
    {
        androidx.recyclerview.widget.RecyclerView$r $r1;
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        $r1 = r0.<androidx.recyclerview.widget.RecyclerView$i: androidx.recyclerview.widget.RecyclerView$r mSmoothScroller>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$r: void stop()>();

     label1:
        return;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        androidx.recyclerview.widget.RecyclerView$i r0;

        r0 := @this: androidx.recyclerview.widget.RecyclerView$i;

        return 0;
    }
}
