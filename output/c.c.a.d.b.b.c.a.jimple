public final class c.c.a.d.b.b.c.a extends java.lang.Object
{

    public static void a(java.lang.String, c.c.a.d.b.b.c.c, int)
    {
        c.c.a.d.b.b.c.b $r0;
        c.c.a.d.b.b.c.c $r2;
        java.lang.AssertionError $r5;
        java.lang.Exception $r6, $r7;
        int $i0;
        java.lang.Boolean $r3;
        java.lang.String $r1;
        com.caremark.caremark.core.drug.pill.service.WSException $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: c.c.a.d.b.b.c.c;

        $i0 := @parameter2: int;

     label1:
        $r0 = new c.c.a.d.b.b.c.b;

     label2:
        specialinvoke $r0.<c.c.a.d.b.b.c.b: void <init>(c.c.a.d.b.b.c.c,int)>($r2, $i0);

        staticinvoke <android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>($r1, $r0);

        $r3 = virtualinvoke $r0.<c.c.a.d.b.b.c.b: java.lang.Boolean a()>();

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        if $z0 != 0 goto label4;

        return;

     label4:
        $r4 = new com.caremark.caremark.core.drug.pill.service.WSException;

     label5:
        specialinvoke $r4.<com.caremark.caremark.core.drug.pill.service.WSException: void <init>()>();

     label6:
        throw $r4;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.Exception;

        specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unable to parse content.", $r5);

        throw $r6;

     label8:
        $r6 := @caughtexception;

        $r7 = new java.lang.Exception;

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unable to parse content.", $r6);

        throw $r7;

     label9:
        $r4 := @caughtexception;

        throw $r4;

        catch com.caremark.caremark.core.drug.pill.service.WSException from label2 to label3 with label9;
        catch com.caremark.caremark.core.drug.pill.service.WSException from label5 to label7 with label9;
        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label5 to label7 with label8;
        catch java.lang.AssertionError from label1 to label3 with label7;
        catch java.lang.AssertionError from label4 to label6 with label7;
    }
}
