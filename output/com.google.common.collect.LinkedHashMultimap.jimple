public final class com.google.common.collect.LinkedHashMultimap extends com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies
{
    public static final int DEFAULT_KEY_CAPACITY;
    public static final int DEFAULT_VALUE_SET_CAPACITY;
    public static final double VALUE_SET_LOAD_FACTOR;
    public static final long serialVersionUID;
    public transient com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry;
    public transient int valueSetCapacity;

    public void <init>(int, int)
    {
        java.util.LinkedHashMap $r1;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r2;
        int $i0, $i1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int)>($i0);

        specialinvoke r0.<com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies: void <init>(java.util.Map)>($r1);

        r0.<com.google.common.collect.LinkedHashMultimap: int valueSetCapacity> = 2;

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i1, "expectedValuesPerKey");

        r0.<com.google.common.collect.LinkedHashMultimap: int valueSetCapacity> = $i1;

        $r2 = new com.google.common.collect.LinkedHashMultimap$ValueEntry;

        specialinvoke $r2.<com.google.common.collect.LinkedHashMultimap$ValueEntry: void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry)>(null, null, 0, null);

        r0.<com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry> = $r2;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry>;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r2, $r2);

        return;
    }

    public static void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink, com.google.common.collect.LinkedHashMultimap$ValueSetLink)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        $r1 := @parameter1: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r0, $r1);

        return;
    }

    public static com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry r1;
        com.google.common.collect.LinkedHashMultimap $r0;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap;

        r1 = $r0.<com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry>;

        return r1;
    }

    public static void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry, com.google.common.collect.LinkedHashMultimap$ValueEntry)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueEntry;

        $r1 := @parameter1: com.google.common.collect.LinkedHashMultimap$ValueEntry;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r0, $r1);

        return;
    }

    public static void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r0;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r0);

        return;
    }

    public static void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r0;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueEntry;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r0);

        return;
    }

    public static com.google.common.collect.LinkedHashMultimap create()
    {
        com.google.common.collect.LinkedHashMultimap $r0;

        $r0 = new com.google.common.collect.LinkedHashMultimap;

        specialinvoke $r0.<com.google.common.collect.LinkedHashMultimap: void <init>(int,int)>(16, 2);

        return $r0;
    }

    public static com.google.common.collect.LinkedHashMultimap create(int, int)
    {
        int $i0, $i1;
        com.google.common.collect.LinkedHashMultimap $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new com.google.common.collect.LinkedHashMultimap;

        $i0 = staticinvoke <com.google.common.collect.Maps: int capacity(int)>($i0);

        $i1 = staticinvoke <com.google.common.collect.Maps: int capacity(int)>($i1);

        specialinvoke $r0.<com.google.common.collect.LinkedHashMultimap: void <init>(int,int)>($i0, $i1);

        return $r0;
    }

    public static com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap)
    {
        int $i0;
        java.util.Set $r1;
        com.google.common.collect.Multimap $r0;
        com.google.common.collect.LinkedHashMultimap $r2;

        $r0 := @parameter0: com.google.common.collect.Multimap;

        $r1 = interfaceinvoke $r0.<com.google.common.collect.Multimap: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        $r2 = staticinvoke <com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap create(int,int)>($i0, 2);

        virtualinvoke $r2.<com.google.common.collect.LinkedHashMultimap: boolean putAll(com.google.common.collect.Multimap)>($r0);

        return $r2;
    }

    public static void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueEntry;

        $r1 = virtualinvoke $r0.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap()>();

        $r0 = virtualinvoke $r0.<com.google.common.collect.LinkedHashMultimap$ValueEntry: com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap()>();

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r1, $r0);

        return;
    }

    public static void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        $r1 = interfaceinvoke $r0.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet()>();

        $r0 = interfaceinvoke $r0.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet()>();

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r1, $r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream)
    {
        java.util.Collection $r5;
        java.io.ObjectInputStream $r1;
        java.util.LinkedHashMap $r3;
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r4, $r6;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new com.google.common.collect.LinkedHashMultimap$ValueEntry;

        $i0 = 0;

        specialinvoke $r2.<com.google.common.collect.LinkedHashMultimap$ValueEntry: void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry)>(null, null, 0, null);

        r0.<com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry> = $r2;

        $r2 = r0.<com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry>;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r2, $r2);

        r0.<com.google.common.collect.LinkedHashMultimap: int valueSetCapacity> = 2;

        $i1 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r4 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Collection createCollection(java.lang.Object)>($r4);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

     label3:
        if $i0 >= $i1 goto label4;

        $r6 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r5 = (java.util.Collection) $r6;

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: void setMap(java.util.Map)>($r3);

        return;
    }

    public static void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry, com.google.common.collect.LinkedHashMultimap$ValueEntry)
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueEntry;

        $r1 := @parameter1: com.google.common.collect.LinkedHashMultimap$ValueEntry;

        virtualinvoke $r0.<com.google.common.collect.LinkedHashMultimap$ValueEntry: void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r1);

        virtualinvoke $r1.<com.google.common.collect.LinkedHashMultimap$ValueEntry: void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r0);

        return;
    }

    public static void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink, com.google.common.collect.LinkedHashMultimap$ValueSetLink)
    {
        com.google.common.collect.LinkedHashMultimap$ValueSetLink $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        $r1 := @parameter1: com.google.common.collect.LinkedHashMultimap$ValueSetLink;

        interfaceinvoke $r0.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r1);

        interfaceinvoke $r1.<com.google.common.collect.LinkedHashMultimap$ValueSetLink: void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink)>($r0);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        int $i0;
        java.io.ObjectOutputStream $r1;
        java.lang.Object $r4;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        goto label1;

     label2:
        $i0 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: int size()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set entries()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        goto label3;

     label4:
        return;
    }

    public volatile java.util.Map asMap()
    {
        com.google.common.collect.LinkedHashMultimap r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Map asMap()>();

        return $r1;
    }

    public void clear()
    {
        com.google.common.collect.LinkedHashMultimap$ValueEntry $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: void clear()>();

        $r1 = r0.<com.google.common.collect.LinkedHashMultimap: com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry>;

        staticinvoke <com.google.common.collect.LinkedHashMultimap: void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry)>($r1, $r1);

        return;
    }

    public volatile boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean containsEntry(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public volatile boolean containsKey(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile boolean containsValue(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile java.util.Collection createCollection()
    {
        java.util.Set $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set createCollection()>();

        return $r1;
    }

    public java.util.Collection createCollection(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.LinkedHashMultimap$ValueSet $r2;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new com.google.common.collect.LinkedHashMultimap$ValueSet;

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap: int valueSetCapacity>;

        specialinvoke $r2.<com.google.common.collect.LinkedHashMultimap$ValueSet: void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int)>(r0, $r1, $i0);

        return $r2;
    }

    public java.util.Set createCollection()
    {
        int $i0;
        com.google.common.collect.LinkedHashMultimap r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = new java.util.LinkedHashSet;

        $i0 = r0.<com.google.common.collect.LinkedHashMultimap: int valueSetCapacity>;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(int)>($i0);

        return $r1;
    }

    public volatile java.util.Collection entries()
    {
        java.util.Set $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set entries()>();

        return $r1;
    }

    public java.util.Set entries()
    {
        java.util.Set $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set entries()>();

        return $r1;
    }

    public java.util.Iterator entryIterator()
    {
        com.google.common.collect.LinkedHashMultimap$1 $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = new com.google.common.collect.LinkedHashMultimap$1;

        specialinvoke $r1.<com.google.common.collect.LinkedHashMultimap$1: void <init>(com.google.common.collect.LinkedHashMultimap)>(r0);

        return $r1;
    }

    public java.util.Spliterator entrySpliterator()
    {
        java.util.Set $r1;
        java.util.Spliterator $r2;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set entries()>();

        $r2 = staticinvoke <java.util.Spliterators: java.util.Spliterator spliterator(java.util.Collection,int)>($r1, 17);

        return $r2;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile void forEach(java.util.function.BiConsumer)
    {
        java.util.function.BiConsumer $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: java.util.function.BiConsumer;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: void forEach(java.util.function.BiConsumer)>($r1);

        return;
    }

    public volatile java.util.Set get(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set get(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile int hashCode()
    {
        int $i0;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: int hashCode()>();

        return $i0;
    }

    public volatile boolean isEmpty()
    {
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile com.google.common.collect.Multiset keys()
    {
        com.google.common.collect.LinkedHashMultimap r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: com.google.common.collect.Multiset keys()>();

        return $r1;
    }

    public volatile boolean put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public volatile boolean putAll(com.google.common.collect.Multimap)
    {
        com.google.common.collect.Multimap $r1;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean putAll(com.google.common.collect.Multimap)>($r1);

        return $z0;
    }

    public volatile boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        java.lang.Object $r2;
        com.google.common.collect.LinkedHashMultimap r0;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean putAll(java.lang.Object,java.lang.Iterable)>($r2, $r1);

        return $z0;
    }

    public volatile boolean remove(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.LinkedHashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: boolean remove(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public volatile java.util.Set removeAll(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.util.Set $r2;
        java.lang.Object $r3;
        com.google.common.collect.LinkedHashMultimap r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Set replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.util.Set $r2;
        java.lang.Object $r3;
        com.google.common.collect.LinkedHashMultimap r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public volatile int size()
    {
        int $i0;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: int size()>();

        return $i0;
    }

    public volatile java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.lang.String toString()>();

        return $r1;
    }

    public java.util.Iterator valueIterator()
    {
        java.util.Iterator $r1;
        com.google.common.collect.LinkedHashMultimap r0;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Iterator entryIterator()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.Iterator valueIterator(java.util.Iterator)>($r1);

        return $r1;
    }

    public java.util.Spliterator valueSpliterator()
    {
        java.util.Spliterator $r2;
        com.google.common.collect.LinkedHashMultimap r0;
        c.i.b.c.i $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r2 = virtualinvoke r0.<com.google.common.collect.LinkedHashMultimap: java.util.Spliterator entrySpliterator()>();

        $r1 = <c.i.b.c.i: c.i.b.c.i a>;

        $r2 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r2, $r1);

        return $r2;
    }

    public java.util.Collection values()
    {
        com.google.common.collect.LinkedHashMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection values()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.LinkedHashMultimap: long serialVersionUID> = 1L;

        <com.google.common.collect.LinkedHashMultimap: double VALUE_SET_LOAD_FACTOR> = 1.0;

        <com.google.common.collect.LinkedHashMultimap: int DEFAULT_VALUE_SET_CAPACITY> = 2;

        <com.google.common.collect.LinkedHashMultimap: int DEFAULT_KEY_CAPACITY> = 16;

        return;
    }
}
