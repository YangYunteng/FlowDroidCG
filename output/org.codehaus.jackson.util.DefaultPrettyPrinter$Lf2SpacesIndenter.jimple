public class org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter extends java.lang.Object implements org.codehaus.jackson.impl.Indenter
{
    public static final char[] SPACES;
    public static final int SPACE_COUNT;
    public static final java.lang.String SYSTEM_LINE_SEPARATOR;

    static void <clinit>()
    {
        java.lang.Throwable $r1;
        char[] $r2;
        java.lang.String $r0;

        <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: int SPACE_COUNT> = 64;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

     label2:
        goto label4;

     label3:
        $r0 = null;

     label4:
        if $r0 != null goto label5;

        $r0 = "\n";

     label5:
        <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: java.lang.String SYSTEM_LINE_SEPARATOR> = $r0;

        $r2 = newarray (char)[64];

        <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES> = $r2;

        $r2 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r2, 32);

        return;

     label6:
        $r1 := @caughtexception;

        goto label3;

        return;

        catch java.lang.Throwable from label1 to label2 with label6;
    }

    public void <init>()
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter r0;

        r0 := @this: org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isInline()
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter r0;

        r0 := @this: org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter;

        return 0;
    }

    public void writeIndentation(org.codehaus.jackson.JsonGenerator, int)
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter r0;
        org.codehaus.jackson.JsonGenerator $r1;
        int $i0, $i1;
        char[] $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $i0 := @parameter1: int;

        $r3 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: java.lang.String SYSTEM_LINE_SEPARATOR>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(java.lang.String)>($r3);

        $i0 = $i0 + $i0;

     label1:
        if $i0 <= 64 goto label2;

        $r2 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char[],int,int)>($r2, 0, 64);

        $r2 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        $i1 = lengthof $r2;

        $i0 = $i0 - $i1;

        goto label1;

     label2:
        $r2 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char[],int,int)>($r2, 0, $i0);

        return;
    }
}
