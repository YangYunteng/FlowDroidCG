public class com.google.common.util.concurrent.WrappingExecutorService$1 extends java.lang.Object implements java.lang.Runnable
{
    public final com.google.common.util.concurrent.WrappingExecutorService this$0;
    public final java.util.concurrent.Callable val$wrapped;

    public void <init>(com.google.common.util.concurrent.WrappingExecutorService, java.util.concurrent.Callable)
    {
        com.google.common.util.concurrent.WrappingExecutorService$1 r0;
        java.util.concurrent.Callable $r2;
        com.google.common.util.concurrent.WrappingExecutorService $r1;

        r0 := @this: com.google.common.util.concurrent.WrappingExecutorService$1;

        $r1 := @parameter0: com.google.common.util.concurrent.WrappingExecutorService;

        $r2 := @parameter1: java.util.concurrent.Callable;

        r0.<com.google.common.util.concurrent.WrappingExecutorService$1: com.google.common.util.concurrent.WrappingExecutorService this$0> = $r1;

        r0.<com.google.common.util.concurrent.WrappingExecutorService$1: java.util.concurrent.Callable val$wrapped> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.WrappingExecutorService$1 r0;
        java.util.concurrent.Callable $r2;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r3;

        r0 := @this: com.google.common.util.concurrent.WrappingExecutorService$1;

     label1:
        $r2 = r0.<com.google.common.util.concurrent.WrappingExecutorService$1: java.util.concurrent.Callable val$wrapped>;

        interfaceinvoke $r2.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>($r3);

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
