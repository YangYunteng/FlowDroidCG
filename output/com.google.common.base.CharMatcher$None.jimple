public final class com.google.common.base.CharMatcher$None extends com.google.common.base.CharMatcher$NamedFastMatcher
{
    public static final com.google.common.base.CharMatcher$None INSTANCE;

    static void <clinit>()
    {
        com.google.common.base.CharMatcher$None $r0;

        $r0 = new com.google.common.base.CharMatcher$None;

        specialinvoke $r0.<com.google.common.base.CharMatcher$None: void <init>()>();

        <com.google.common.base.CharMatcher$None: com.google.common.base.CharMatcher$None INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.common.base.CharMatcher$None r0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        specialinvoke r0.<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>("CharMatcher.none()");

        return;
    }

    public com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)
    {
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CharMatcher$None r0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: com.google.common.base.CharMatcher;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return r0;
    }

    public java.lang.String collapseFrom(java.lang.CharSequence, char)
    {
        java.lang.CharSequence $r2;
        com.google.common.base.CharMatcher$None r0;
        char $c0;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r2 := @parameter0: java.lang.CharSequence;

        $c0 := @parameter1: char;

        $r1 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public int countIn(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$None r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return 0;
    }

    public int indexIn(java.lang.CharSequence)
    {
        int $i0;
        com.google.common.base.CharMatcher$None r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = -1;

        return $i0;
    }

    public int indexIn(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r1;
        int $i0, $i1;
        com.google.common.base.CharMatcher$None r0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        staticinvoke <com.google.common.base.Preconditions: int checkPositionIndex(int,int)>($i0, $i1);

        $i0 = -1;

        return $i0;
    }

    public int lastIndexIn(java.lang.CharSequence)
    {
        int $i0;
        com.google.common.base.CharMatcher$None r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = -1;

        return $i0;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$None r0;
        char $c0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $c0 := @parameter0: char;

        return 0;
    }

    public boolean matchesAllOf(java.lang.CharSequence)
    {
        int $i0;
        com.google.common.base.CharMatcher$None r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean matchesNoneOf(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$None r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return 1;
    }

    public com.google.common.base.CharMatcher negate()
    {
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CharMatcher$None r0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher any()>();

        return $r1;
    }

    public volatile java.util.function.Predicate negate()
    {
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CharMatcher$None r0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 = virtualinvoke r0.<com.google.common.base.CharMatcher$None: com.google.common.base.CharMatcher negate()>();

        return $r1;
    }

    public com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)
    {
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CharMatcher$None r0;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r1 := @parameter0: com.google.common.base.CharMatcher;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public java.lang.String removeFrom(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$None r0;
        java.lang.String $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r2 := @parameter0: java.lang.CharSequence;

        $r1 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, char)
    {
        java.lang.CharSequence $r2;
        com.google.common.base.CharMatcher$None r0;
        char $c0;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r2 := @parameter0: java.lang.CharSequence;

        $c0 := @parameter1: char;

        $r1 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence $r1, $r3;
        com.google.common.base.CharMatcher$None r0;
        java.lang.String $r2;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r3 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String trimFrom(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$None r0;
        java.lang.String $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r2 := @parameter0: java.lang.CharSequence;

        $r1 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String trimLeadingFrom(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$None r0;
        java.lang.String $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r2 := @parameter0: java.lang.CharSequence;

        $r1 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String trimTrailingFrom(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$None r0;
        java.lang.String $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.google.common.base.CharMatcher$None;

        $r2 := @parameter0: java.lang.CharSequence;

        $r1 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }
}
