public final class com.google.common.util.concurrent.AbstractFuture$Listener extends java.lang.Object
{
    public static final com.google.common.util.concurrent.AbstractFuture$Listener TOMBSTONE;
    public final java.util.concurrent.Executor executor;
    public com.google.common.util.concurrent.AbstractFuture$Listener next;
    public final java.lang.Runnable task;

    static void <clinit>()
    {
        com.google.common.util.concurrent.AbstractFuture$Listener $r0;

        $r0 = new com.google.common.util.concurrent.AbstractFuture$Listener;

        specialinvoke $r0.<com.google.common.util.concurrent.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>(null, null);

        <com.google.common.util.concurrent.AbstractFuture$Listener: com.google.common.util.concurrent.AbstractFuture$Listener TOMBSTONE> = $r0;

        return;
    }

    public void <init>(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AbstractFuture$Listener r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$Listener;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractFuture$Listener: java.lang.Runnable task> = $r1;

        r0.<com.google.common.util.concurrent.AbstractFuture$Listener: java.util.concurrent.Executor executor> = $r2;

        return;
    }
}
