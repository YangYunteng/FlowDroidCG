public final class com.google.common.util.concurrent.ServiceManager extends java.lang.Object
{
    public static final com.google.common.util.concurrent.ListenerCallQueue$Event HEALTHY_EVENT;
    public static final com.google.common.util.concurrent.ListenerCallQueue$Event STOPPED_EVENT;
    public static final java.util.logging.Logger logger;
    public final com.google.common.collect.ImmutableList services;
    public final com.google.common.util.concurrent.ServiceManager$ServiceManagerState state;

    static void <clinit>()
    {
        com.google.common.util.concurrent.ServiceManager$1 $r3;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        com.google.common.util.concurrent.ServiceManager$2 $r4;

        $r0 = class "Lcom/google/common/util/concurrent/ServiceManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.util.concurrent.ServiceManager: java.util.logging.Logger logger> = $r2;

        $r3 = new com.google.common.util.concurrent.ServiceManager$1;

        specialinvoke $r3.<com.google.common.util.concurrent.ServiceManager$1: void <init>()>();

        <com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ListenerCallQueue$Event HEALTHY_EVENT> = $r3;

        $r4 = new com.google.common.util.concurrent.ServiceManager$2;

        specialinvoke $r4.<com.google.common.util.concurrent.ServiceManager$2: void <init>()>();

        <com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ListenerCallQueue$Event STOPPED_EVENT> = $r4;

        return;
    }

    public void <init>(java.lang.Iterable)
    {
        com.google.common.util.concurrent.ServiceManager r0;
        java.lang.Iterable $r1;
        java.util.logging.Level $r5;
        com.google.common.util.concurrent.ServiceManager$NoOpService $r7;
        com.google.common.util.concurrent.Service$State $r15, $r16;
        com.google.common.collect.ImmutableList $r2, $r3;
        com.google.common.util.concurrent.ServiceManager$ServiceListener $r13;
        java.lang.ref.WeakReference $r9;
        boolean $z0;
        java.util.concurrent.Executor $r14;
        java.util.logging.Logger $r4;
        com.google.common.util.concurrent.Service $r12;
        com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning $r6;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r8;
        java.lang.Object $r11;
        com.google.common.collect.UnmodifiableIterator $r10;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r1);

        $r3 = $r2;

        $z0 = virtualinvoke $r2.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = <com.google.common.util.concurrent.ServiceManager: java.util.logging.Logger logger>;

        $r5 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r6 = new com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning;

        specialinvoke $r6.<com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning: void <init>(com.google.common.util.concurrent.ServiceManager$1)>(null);

        virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r5, "ServiceManager configured with no services.  Is your application configured properly?", $r6);

        $r7 = new com.google.common.util.concurrent.ServiceManager$NoOpService;

        specialinvoke $r7.<com.google.common.util.concurrent.ServiceManager$NoOpService: void <init>(com.google.common.util.concurrent.ServiceManager$1)>(null);

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r7);

     label1:
        $r8 = new com.google.common.util.concurrent.ServiceManager$ServiceManagerState;

        specialinvoke $r8.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void <init>(com.google.common.collect.ImmutableCollection)>($r3);

        r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state> = $r8;

        r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.collect.ImmutableList services> = $r3;

        $r9 = new java.lang.ref.WeakReference;

        $r8 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (com.google.common.util.concurrent.Service) $r11;

        $r13 = new com.google.common.util.concurrent.ServiceManager$ServiceListener;

        specialinvoke $r13.<com.google.common.util.concurrent.ServiceManager$ServiceListener: void <init>(com.google.common.util.concurrent.Service,java.lang.ref.WeakReference)>($r12, $r9);

        $r14 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke $r12.<com.google.common.util.concurrent.Service: void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)>($r13, $r14);

        $r15 = interfaceinvoke $r12.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service$State state()>();

        $r16 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r15 != $r16 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Can only manage NEW services, %s", $r12);

        goto label2;

     label5:
        $r8 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        virtualinvoke $r8.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void markReady()>();

        return;
    }

    public static java.util.logging.Logger access$200()
    {
        java.util.logging.Logger r0;

        r0 = <com.google.common.util.concurrent.ServiceManager: java.util.logging.Logger logger>;

        return r0;
    }

    public static com.google.common.util.concurrent.ListenerCallQueue$Event access$300()
    {
        com.google.common.util.concurrent.ListenerCallQueue$Event r0;

        r0 = <com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ListenerCallQueue$Event STOPPED_EVENT>;

        return r0;
    }

    public static com.google.common.util.concurrent.ListenerCallQueue$Event access$400()
    {
        com.google.common.util.concurrent.ListenerCallQueue$Event r0;

        r0 = <com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ListenerCallQueue$Event HEALTHY_EVENT>;

        return r0;
    }

    public void addListener(com.google.common.util.concurrent.ServiceManager$Listener)
    {
        java.util.concurrent.Executor $r3;
        com.google.common.util.concurrent.ServiceManager r0;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r2;
        com.google.common.util.concurrent.ServiceManager$Listener $r1;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 := @parameter0: com.google.common.util.concurrent.ServiceManager$Listener;

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        virtualinvoke $r2.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor)>($r1, $r3);

        return;
    }

    public void addListener(com.google.common.util.concurrent.ServiceManager$Listener, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ServiceManager r0;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r3;
        com.google.common.util.concurrent.ServiceManager$Listener $r1;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 := @parameter0: com.google.common.util.concurrent.ServiceManager$Listener;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        virtualinvoke $r3.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    public void awaitHealthy()
    {
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r1;
        com.google.common.util.concurrent.ServiceManager r0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        virtualinvoke $r1.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void awaitHealthy()>();

        return;
    }

    public void awaitHealthy(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ServiceManager r0;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r2;
        long $l0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        virtualinvoke $r2.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void awaitHealthy(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    public void awaitStopped()
    {
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r1;
        com.google.common.util.concurrent.ServiceManager r0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        virtualinvoke $r1.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void awaitStopped()>();

        return;
    }

    public void awaitStopped(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ServiceManager r0;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r2;
        long $l0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        virtualinvoke $r2.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void awaitStopped(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    public boolean isHealthy()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.util.concurrent.ServiceManager r0;
        java.lang.Object $r3;
        com.google.common.collect.UnmodifiableIterator $r2;
        boolean $z0;
        com.google.common.util.concurrent.Service $r4;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.collect.ImmutableList services>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.util.concurrent.Service) $r3;

        $z0 = interfaceinvoke $r4.<com.google.common.util.concurrent.Service: boolean isRunning()>();

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public com.google.common.collect.ImmutableMultimap servicesByState()
    {
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r2;
        com.google.common.collect.ImmutableMultimap $r1;
        com.google.common.util.concurrent.ServiceManager r0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        $r1 = virtualinvoke $r2.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: com.google.common.collect.ImmutableMultimap servicesByState()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ServiceManager startAsync()
    {
        java.lang.IllegalStateException $r9;
        com.google.common.util.concurrent.ServiceManager r0;
        java.util.logging.Logger $r10;
        com.google.common.util.concurrent.Service $r5;
        java.util.logging.Level $r11;
        com.google.common.util.concurrent.Service$State $r6, $r7;
        com.google.common.collect.ImmutableList $r2;
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r8;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        com.google.common.collect.UnmodifiableIterator $r3;
        java.lang.String $r12;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.collect.ImmutableList services>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.common.util.concurrent.Service) $r4;

        $r6 = interfaceinvoke $r5.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service$State state()>();

        $r7 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r6 != $r7 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object)>($z0, "Service %s is %s, cannot start it.", $r5, $r6);

        goto label1;

     label4:
        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.collect.ImmutableList services>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.common.util.concurrent.Service) $r4;

        $r8 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

     label6:
        virtualinvoke $r8.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: void tryStartTiming(com.google.common.util.concurrent.Service)>($r5);

        interfaceinvoke $r5.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service startAsync()>();

     label7:
        goto label5;

     label8:
        $r9 := @caughtexception;

        $r10 = <com.google.common.util.concurrent.ServiceManager: java.util.logging.Logger logger>;

        $r11 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start Service ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r12 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r11, $r12, $r9);

        goto label5;

     label9:
        return r0;

        catch java.lang.IllegalStateException from label6 to label7 with label8;
    }

    public com.google.common.collect.ImmutableMap startupTimes()
    {
        com.google.common.util.concurrent.ServiceManager$ServiceManagerState $r2;
        com.google.common.collect.ImmutableMap $r1;
        com.google.common.util.concurrent.ServiceManager r0;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.util.concurrent.ServiceManager$ServiceManagerState state>;

        $r1 = virtualinvoke $r2.<com.google.common.util.concurrent.ServiceManager$ServiceManagerState: com.google.common.collect.ImmutableMap startupTimes()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ServiceManager stopAsync()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.util.concurrent.ServiceManager r0;
        java.lang.Object $r3;
        com.google.common.collect.UnmodifiableIterator $r2;
        boolean $z0;
        com.google.common.util.concurrent.Service $r4;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.collect.ImmutableList services>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.util.concurrent.Service) $r3;

        interfaceinvoke $r4.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service stopAsync()>();

        goto label1;

     label2:
        return r0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.base.Predicate $r3;
        com.google.common.util.concurrent.ServiceManager r0;
        java.util.Collection $r4;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        java.lang.String $r5;

        r0 := @this: com.google.common.util.concurrent.ServiceManager;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class)>(class "Lcom/google/common/util/concurrent/ServiceManager;");

        $r2 = r0.<com.google.common.util.concurrent.ServiceManager: com.google.common.collect.ImmutableList services>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate instanceOf(java.lang.Class)>(class "Lcom/google/common/util/concurrent/ServiceManager$NoOpService;");

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate not(com.google.common.base.Predicate)>($r3);

        $r4 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>($r2, $r3);

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("services", $r4);

        $r5 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r5;
    }
}
