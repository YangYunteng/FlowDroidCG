public abstract class org.dom4j.tree.FilterIterator extends java.lang.Object implements java.util.Iterator
{
    public boolean first;
    public java.lang.Object next;
    public java.util.Iterator proxy;

    public void <init>(java.util.Iterator)
    {
        java.util.Iterator $r1;
        org.dom4j.tree.FilterIterator r0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.tree.FilterIterator: boolean first> = 1;

        r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy> = $r1;

        return;
    }

    public java.lang.Object findNext()
    {
        java.util.Iterator $r1;
        java.lang.Object $r2;
        org.dom4j.tree.FilterIterator r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $r1 = r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy>;

        if $r1 == null goto label3;

     label1:
        $r1 = r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy> = null;

        return null;

     label2:
        $r1 = r0.<org.dom4j.tree.FilterIterator: java.util.Iterator proxy>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: boolean matches(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return $r2;

     label3:
        return null;
    }

    public boolean hasNext()
    {
        java.lang.Object $r1;
        org.dom4j.tree.FilterIterator r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $z0 = r0.<org.dom4j.tree.FilterIterator: boolean first>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: java.lang.Object findNext()>();

        r0.<org.dom4j.tree.FilterIterator: java.lang.Object next> = $r1;

        r0.<org.dom4j.tree.FilterIterator: boolean first> = 0;

     label1:
        $r1 = r0.<org.dom4j.tree.FilterIterator: java.lang.Object next>;

        if $r1 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    public abstract boolean matches(java.lang.Object);

    public java.lang.Object next()
    {
        java.lang.Object $r1, r3;
        java.util.NoSuchElementException $r2;
        org.dom4j.tree.FilterIterator r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $z0 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r3 = r0.<org.dom4j.tree.FilterIterator: java.lang.Object next>;

        $r1 = virtualinvoke r0.<org.dom4j.tree.FilterIterator: java.lang.Object findNext()>();

        r0.<org.dom4j.tree.FilterIterator: java.lang.Object next> = $r1;

        return r3;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        org.dom4j.tree.FilterIterator r0;

        r0 := @this: org.dom4j.tree.FilterIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
