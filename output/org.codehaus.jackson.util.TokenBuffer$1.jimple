public class org.codehaus.jackson.util.TokenBuffer$1 extends java.lang.Object
{
    public static final int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType;
    public static final int[] $SwitchMap$org$codehaus$jackson$JsonToken;

    static void <clinit>()
    {
        org.codehaus.jackson.JsonToken $r21;
        java.lang.NoSuchFieldError $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.codehaus.jackson.JsonParser$NumberType[] $r17;
        org.codehaus.jackson.JsonToken[] $r20;
        int[] $r18;
        int $i0;
        org.codehaus.jackson.JsonParser$NumberType $r19;

        $r17 = staticinvoke <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType[] values()>();

        $i0 = lengthof $r17;

        $r18 = newarray (int)[$i0];

        <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType> = $r18;

     label01:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r19 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType INT>;

        $i0 = virtualinvoke $r19.<java.lang.Enum: int ordinal()>();

     label02:
        $r18[$i0] = 1;

     label03:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r19 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER>;

        $i0 = virtualinvoke $r19.<java.lang.Enum: int ordinal()>();

     label04:
        $r18[$i0] = 2;

     label05:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r19 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL>;

        $i0 = virtualinvoke $r19.<java.lang.Enum: int ordinal()>();

     label06:
        $r18[$i0] = 3;

     label07:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r19 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType FLOAT>;

        $i0 = virtualinvoke $r19.<java.lang.Enum: int ordinal()>();

     label08:
        $r18[$i0] = 4;

     label09:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r19 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType LONG>;

        $i0 = virtualinvoke $r19.<java.lang.Enum: int ordinal()>();

     label10:
        $r18[$i0] = 5;

     label11:
        $r20 = staticinvoke <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken[] values()>();

        $i0 = lengthof $r20;

        $r18 = newarray (int)[$i0];

        <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken> = $r18;

     label12:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label13:
        $r18[$i0] = 1;

     label14:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label15:
        $r18[$i0] = 2;

     label16:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label17:
        $r18[$i0] = 3;

     label18:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label19:
        $r18[$i0] = 4;

     label20:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label21:
        $r18[$i0] = 5;

     label22:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label23:
        $r18[$i0] = 6;

     label24:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label25:
        $r18[$i0] = 7;

     label26:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label27:
        $r18[$i0] = 8;

     label28:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_TRUE>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label29:
        $r18[$i0] = 9;

     label30:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_FALSE>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label31:
        $r18[$i0] = 10;

     label32:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label33:
        $r18[$i0] = 11;

     label34:
        $r18 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT>;

        $i0 = virtualinvoke $r21.<java.lang.Enum: int ordinal()>();

     label35:
        $r18[$i0] = 12;

        return;

     label36:
        $r0 := @caughtexception;

        goto label03;

     label37:
        $r1 := @caughtexception;

        goto label05;

     label38:
        $r2 := @caughtexception;

        goto label07;

     label39:
        $r3 := @caughtexception;

        goto label09;

     label40:
        $r4 := @caughtexception;

        goto label11;

     label41:
        $r5 := @caughtexception;

        goto label14;

     label42:
        $r6 := @caughtexception;

        goto label16;

     label43:
        $r7 := @caughtexception;

        goto label18;

     label44:
        $r8 := @caughtexception;

        goto label20;

     label45:
        $r9 := @caughtexception;

        goto label22;

     label46:
        $r10 := @caughtexception;

        goto label24;

     label47:
        $r11 := @caughtexception;

        goto label26;

     label48:
        $r12 := @caughtexception;

        goto label28;

     label49:
        $r13 := @caughtexception;

        goto label30;

     label50:
        $r14 := @caughtexception;

        goto label32;

     label51:
        $r15 := @caughtexception;

        goto label34;

     label52:
        $r16 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label36;
        catch java.lang.NoSuchFieldError from label03 to label04 with label37;
        catch java.lang.NoSuchFieldError from label05 to label06 with label38;
        catch java.lang.NoSuchFieldError from label07 to label08 with label39;
        catch java.lang.NoSuchFieldError from label09 to label10 with label40;
        catch java.lang.NoSuchFieldError from label12 to label13 with label41;
        catch java.lang.NoSuchFieldError from label14 to label15 with label42;
        catch java.lang.NoSuchFieldError from label16 to label17 with label43;
        catch java.lang.NoSuchFieldError from label18 to label19 with label44;
        catch java.lang.NoSuchFieldError from label20 to label21 with label45;
        catch java.lang.NoSuchFieldError from label22 to label23 with label46;
        catch java.lang.NoSuchFieldError from label24 to label25 with label47;
        catch java.lang.NoSuchFieldError from label26 to label27 with label48;
        catch java.lang.NoSuchFieldError from label28 to label29 with label49;
        catch java.lang.NoSuchFieldError from label30 to label31 with label50;
        catch java.lang.NoSuchFieldError from label32 to label33 with label51;
        catch java.lang.NoSuchFieldError from label34 to label35 with label52;
    }
}
