public final class com.google.common.util.concurrent.AbstractFuture$Failure extends java.lang.Object
{
    public static final com.google.common.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE;
    public final java.lang.Throwable exception;

    static void <clinit>()
    {
        com.google.common.util.concurrent.AbstractFuture$Failure$1 $r1;
        com.google.common.util.concurrent.AbstractFuture$Failure $r0;

        $r0 = new com.google.common.util.concurrent.AbstractFuture$Failure;

        $r1 = new com.google.common.util.concurrent.AbstractFuture$Failure$1;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$Failure$1: void <init>(java.lang.String)>("Failure occurred while trying to finish a future.");

        specialinvoke $r0.<com.google.common.util.concurrent.AbstractFuture$Failure: void <init>(java.lang.Throwable)>($r1);

        <com.google.common.util.concurrent.AbstractFuture$Failure: com.google.common.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE> = $r0;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        com.google.common.util.concurrent.AbstractFuture$Failure r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$Failure;

        $r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.util.concurrent.AbstractFuture$Failure: java.lang.Throwable exception> = $r1;

        return;
    }
}
