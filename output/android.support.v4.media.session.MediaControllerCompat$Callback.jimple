public abstract class android.support.v4.media.session.MediaControllerCompat$Callback extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    public final java.lang.Object mCallbackObj;
    public android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler;
    public android.support.v4.media.session.IMediaControllerCallback mIControllerCallback;

    public void <init>()
    {
        android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat $r3;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;
        int $i0;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = new android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21;

        specialinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void <init>(android.support.v4.media.session.MediaControllerCompat$Callback)>(r0);

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)>($r2);

        r0.<android.support.v4.media.session.MediaControllerCompat$Callback: java.lang.Object mCallbackObj> = $r1;

        return;

     label1:
        $r3 = new android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat;

        specialinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void <init>(android.support.v4.media.session.MediaControllerCompat$Callback)>(r0);

        r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback> = $r3;

        r0.<android.support.v4.media.session.MediaControllerCompat$Callback: java.lang.Object mCallbackObj> = $r3;

        return;
    }

    public void binderDied()
    {
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$Callback: void postToHandler(int,java.lang.Object,android.os.Bundle)>(8, null, null);

        return;
    }

    public android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
    {
        android.support.v4.media.session.IMediaControllerCallback r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        r1 = r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback>;

        return r1;
    }

    public void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
    {
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo;

        return;
    }

    public void onCaptioningEnabledChanged(boolean)
    {
        android.support.v4.media.session.MediaControllerCompat$Callback r0;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $z0 := @parameter0: boolean;

        return;
    }

    public void onExtrasChanged(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        return;
    }

    public void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        return;
    }

    public void onQueueChanged(java.util.List)
    {
        java.util.List $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: java.util.List;

        return;
    }

    public void onQueueTitleChanged(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    public void onRepeatModeChanged(int)
    {
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $i0 := @parameter0: int;

        return;
    }

    public void onSessionDestroyed()
    {
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        return;
    }

    public void onSessionEvent(java.lang.String, android.os.Bundle)
    {
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onSessionReady()
    {
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        return;
    }

    public void onShuffleModeChanged(int)
    {
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $i0 := @parameter0: int;

        return;
    }

    public void postToHandler(int, java.lang.Object, android.os.Bundle)
    {
        android.os.Bundle $r2;
        android.os.Message $r4;
        android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler $r3;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($i0, $r1);

        virtualinvoke $r4.<android.os.Message: void setData(android.os.Bundle)>($r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void setHandler(android.os.Handler)
    {
        android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler $r3;
        android.support.v4.media.session.MediaControllerCompat$Callback r0;
        android.os.Looper $r1;
        android.os.Handler $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r2 := @parameter0: android.os.Handler;

        if $r2 != null goto label1;

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler>;

        if $r3 == null goto label2;

        $r3.<android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler: boolean mRegistered> = 0;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler> = null;

        return;

     label1:
        $r3 = new android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler;

        $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler: void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper)>(r0, $r1);

        r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler> = $r3;

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler>;

        $r3.<android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler: boolean mRegistered> = 1;

     label2:
        return;
    }
}
