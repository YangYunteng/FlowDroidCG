public class com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver extends android.content.BroadcastReceiver
{

    public void <init>()
    {
        com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public static void lambda$onReceive$0()
    {
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.content.Context $r1;
        byte[] $r11;
        android.os.Bundle $r8;
        com.google.android.datatransport.runtime.TransportContext$Builder $r9;
        com.google.android.datatransport.runtime.TransportRuntime $r12;
        android.net.Uri $r3;
        android.content.Intent $r2;
        java.lang.Integer $r7;
        java.lang.Runnable $r15;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver r0;
        com.google.android.datatransport.runtime.TransportContext $r14;
        int $i0, $i1;
        java.lang.String $r4, $r5, $r6;
        com.google.android.datatransport.Priority $r10;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader $r13;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = virtualinvoke $r2.<android.content.Intent: android.net.Uri getData()>();

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("backendName");

        $r3 = virtualinvoke $r2.<android.content.Intent: android.net.Uri getData()>();

        $r5 = virtualinvoke $r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("extras");

        $r3 = virtualinvoke $r2.<android.content.Intent: android.net.Uri getData()>();

        $r6 = virtualinvoke $r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("priority");

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r6);

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = virtualinvoke $r2.<android.content.Intent: android.os.Bundle getExtras()>();

        $i1 = virtualinvoke $r8.<android.os.Bundle: int getInt(java.lang.String)>("attemptNumber");

        staticinvoke <com.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)>($r1);

        $r9 = staticinvoke <com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()>();

        $r9 = virtualinvoke $r9.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)>($r4);

        $r10 = staticinvoke <com.google.android.datatransport.runtime.util.PriorityMapping: com.google.android.datatransport.Priority valueOf(int)>($i0);

        $r9 = virtualinvoke $r9.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setPriority(com.google.android.datatransport.Priority)>($r10);

        if $r5 == null goto label1;

        $r11 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r5, 0);

        virtualinvoke $r9.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setExtras(byte[])>($r11);

     label1:
        $r12 = staticinvoke <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntime getInstance()>();

        $r13 = virtualinvoke $r12.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader getUploader()>();

        $r14 = virtualinvoke $r9.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()>();

        $r15 = staticinvoke <com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver$$Lambda$1: java.lang.Runnable lambdaFactory$()>();

        virtualinvoke $r13.<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void upload(com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>($r14, $i1, $r15);

        return;
    }
}
