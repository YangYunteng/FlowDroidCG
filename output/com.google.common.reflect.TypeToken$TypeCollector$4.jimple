public final class com.google.common.reflect.TypeToken$TypeCollector$4 extends com.google.common.collect.Ordering
{
    public final java.util.Map val$map;
    public final java.util.Comparator val$valueComparator;

    public void <init>(java.util.Comparator, java.util.Map)
    {
        com.google.common.reflect.TypeToken$TypeCollector$4 r0;
        java.util.Comparator $r1;
        java.util.Map $r2;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$4;

        $r1 := @parameter0: java.util.Comparator;

        $r2 := @parameter1: java.util.Map;

        r0.<com.google.common.reflect.TypeToken$TypeCollector$4: java.util.Comparator val$valueComparator> = $r1;

        r0.<com.google.common.reflect.TypeToken$TypeCollector$4: java.util.Map val$map> = $r2;

        specialinvoke r0.<com.google.common.collect.Ordering: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r2, $r3;
        com.google.common.reflect.TypeToken$TypeCollector$4 r0;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$4;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.common.reflect.TypeToken$TypeCollector$4: java.util.Comparator val$valueComparator>;

        $r4 = r0.<com.google.common.reflect.TypeToken$TypeCollector$4: java.util.Map val$map>;

        $r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = r0.<com.google.common.reflect.TypeToken$TypeCollector$4: java.util.Map val$map>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $i0;
    }
}
