public class com.google.common.collect.HashBasedTable extends com.google.common.collect.StandardTable
{
    public static final long serialVersionUID;

    public void <init>(java.util.Map, com.google.common.collect.HashBasedTable$Factory)
    {
        com.google.common.collect.HashBasedTable$Factory $r2;
        com.google.common.collect.HashBasedTable r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.google.common.collect.HashBasedTable$Factory;

        specialinvoke r0.<com.google.common.collect.StandardTable: void <init>(java.util.Map,com.google.common.base.Supplier)>($r1, $r2);

        return;
    }

    public static com.google.common.collect.HashBasedTable create()
    {
        java.util.LinkedHashMap $r1;
        com.google.common.collect.HashBasedTable$Factory $r2;
        com.google.common.collect.HashBasedTable $r0;

        $r0 = new com.google.common.collect.HashBasedTable;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = new com.google.common.collect.HashBasedTable$Factory;

        specialinvoke $r2.<com.google.common.collect.HashBasedTable$Factory: void <init>(int)>(0);

        specialinvoke $r0.<com.google.common.collect.HashBasedTable: void <init>(java.util.Map,com.google.common.collect.HashBasedTable$Factory)>($r1, $r2);

        return $r0;
    }

    public static com.google.common.collect.HashBasedTable create(int, int)
    {
        com.google.common.collect.HashBasedTable$Factory $r0;
        java.util.LinkedHashMap $r1;
        int $i0, $i1;
        com.google.common.collect.HashBasedTable $r2;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "expectedCellsPerRow");

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMapWithExpectedSize(int)>($i1);

        $r2 = new com.google.common.collect.HashBasedTable;

        $r0 = new com.google.common.collect.HashBasedTable$Factory;

        specialinvoke $r0.<com.google.common.collect.HashBasedTable$Factory: void <init>(int)>($i0);

        specialinvoke $r2.<com.google.common.collect.HashBasedTable: void <init>(java.util.Map,com.google.common.collect.HashBasedTable$Factory)>($r1, $r0);

        return $r2;
    }

    public static com.google.common.collect.HashBasedTable create(com.google.common.collect.Table)
    {
        com.google.common.collect.HashBasedTable $r1;
        com.google.common.collect.Table $r0;

        $r0 := @parameter0: com.google.common.collect.Table;

        $r1 = staticinvoke <com.google.common.collect.HashBasedTable: com.google.common.collect.HashBasedTable create()>();

        virtualinvoke $r1.<com.google.common.collect.HashBasedTable: void putAll(com.google.common.collect.Table)>($r0);

        return $r1;
    }

    public volatile java.util.Set cellSet()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBasedTable r0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Set cellSet()>();

        return $r1;
    }

    public volatile void clear()
    {
        com.google.common.collect.HashBasedTable r0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        specialinvoke r0.<com.google.common.collect.StandardTable: void clear()>();

        return;
    }

    public volatile java.util.Map column(java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Map column(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Set columnKeySet()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBasedTable r0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Set columnKeySet()>();

        return $r1;
    }

    public volatile java.util.Map columnMap()
    {
        com.google.common.collect.HashBasedTable r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Map columnMap()>();

        return $r1;
    }

    public boolean contains(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.StandardTable: boolean contains(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public boolean containsColumn(java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.StandardTable: boolean containsColumn(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsRow(java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.StandardTable: boolean containsRow(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.StandardTable: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractTable: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.collect.StandardTable: java.lang.Object get(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r2;
    }

    public volatile int hashCode()
    {
        int $i0;
        com.google.common.collect.HashBasedTable r0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractTable: int hashCode()>();

        return $i0;
    }

    public volatile boolean isEmpty()
    {
        com.google.common.collect.HashBasedTable r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $z0 = specialinvoke r0.<com.google.common.collect.StandardTable: boolean isEmpty()>();

        return $z0;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = specialinvoke r0.<com.google.common.collect.StandardTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r1, $r2);

        return $r3;
    }

    public volatile void putAll(com.google.common.collect.Table)
    {
        com.google.common.collect.HashBasedTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 := @parameter0: com.google.common.collect.Table;

        specialinvoke r0.<com.google.common.collect.AbstractTable: void putAll(com.google.common.collect.Table)>($r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.collect.StandardTable: java.lang.Object remove(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r2;
    }

    public volatile java.util.Map row(java.lang.Object)
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.Object $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Map row(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Set rowKeySet()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBasedTable r0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Set rowKeySet()>();

        return $r1;
    }

    public volatile java.util.Map rowMap()
    {
        com.google.common.collect.HashBasedTable r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Map rowMap()>();

        return $r1;
    }

    public volatile int size()
    {
        int $i0;
        com.google.common.collect.HashBasedTable r0;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $i0 = specialinvoke r0.<com.google.common.collect.StandardTable: int size()>();

        return $i0;
    }

    public volatile java.lang.String toString()
    {
        com.google.common.collect.HashBasedTable r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractTable: java.lang.String toString()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.HashBasedTable r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.HashBasedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.StandardTable: java.util.Collection values()>();

        return $r1;
    }
}
