public final enum class org.codehaus.jackson.JsonParser$NumberType extends java.lang.Enum
{
    public static final org.codehaus.jackson.JsonParser$NumberType[] $VALUES;
    public static final enum org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL;
    public static final enum org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER;
    public static final enum org.codehaus.jackson.JsonParser$NumberType DOUBLE;
    public static final enum org.codehaus.jackson.JsonParser$NumberType FLOAT;
    public static final enum org.codehaus.jackson.JsonParser$NumberType INT;
    public static final enum org.codehaus.jackson.JsonParser$NumberType LONG;

    static void <clinit>()
    {
        org.codehaus.jackson.JsonParser$NumberType[] $r1;
        org.codehaus.jackson.JsonParser$NumberType $r0;

        $r0 = new org.codehaus.jackson.JsonParser$NumberType;

        specialinvoke $r0.<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>("INT", 0);

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType INT> = $r0;

        $r0 = new org.codehaus.jackson.JsonParser$NumberType;

        specialinvoke $r0.<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>("LONG", 1);

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType LONG> = $r0;

        $r0 = new org.codehaus.jackson.JsonParser$NumberType;

        specialinvoke $r0.<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>("BIG_INTEGER", 2);

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER> = $r0;

        $r0 = new org.codehaus.jackson.JsonParser$NumberType;

        specialinvoke $r0.<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>("FLOAT", 3);

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType FLOAT> = $r0;

        $r0 = new org.codehaus.jackson.JsonParser$NumberType;

        specialinvoke $r0.<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>("DOUBLE", 4);

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType DOUBLE> = $r0;

        $r0 = new org.codehaus.jackson.JsonParser$NumberType;

        specialinvoke $r0.<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>("BIG_DECIMAL", 5);

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL> = $r0;

        $r1 = newarray (org.codehaus.jackson.JsonParser$NumberType)[6];

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType INT>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType LONG>;

        $r1[1] = $r0;

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER>;

        $r1[2] = $r0;

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType FLOAT>;

        $r1[3] = $r0;

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType DOUBLE>;

        $r1[4] = $r0;

        $r0 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL>;

        $r1[5] = $r0;

        <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.codehaus.jackson.JsonParser$NumberType r0;

        r0 := @this: org.codehaus.jackson.JsonParser$NumberType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        org.codehaus.jackson.JsonParser$NumberType $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/JsonParser$NumberType;", $r1);

        $r2 = (org.codehaus.jackson.JsonParser$NumberType) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.JsonParser$NumberType[] values()
    {
        org.codehaus.jackson.JsonParser$NumberType[] $r1;
        java.lang.Object $r0;

        $r1 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.JsonParser$NumberType[]) $r0;

        return $r1;
    }
}
