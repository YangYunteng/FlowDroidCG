public class f.a.a.a.a.c.o extends java.util.concurrent.FutureTask implements f.a.a.a.a.c.h, f.a.a.a.a.c.p, f.a.a.a.a.c.t, f.a.a.a.a.c.g
{
    public final java.lang.Object a;

    public void <init>(java.lang.Runnable, java.lang.Object)
    {
        f.a.a.a.a.c.h $r2;
        java.lang.Object $r1;
        java.lang.Runnable $r3;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>($r3, $r1);

        $r2 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a(java.lang.Object)>($r3);

        r0.<f.a.a.a.a.c.o: java.lang.Object a> = $r2;

        return;
    }

    public void <init>(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable $r2;
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r2 := @parameter0: java.util.concurrent.Callable;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a(java.lang.Object)>($r2);

        r0.<f.a.a.a.a.c.o: java.lang.Object a> = $r1;

        return;
    }

    public f.a.a.a.a.c.h a()
    {
        java.lang.Object $r1;
        f.a.a.a.a.c.h $r2;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 = r0.<f.a.a.a.a.c.o: java.lang.Object a>;

        $r2 = (f.a.a.a.a.c.h) $r1;

        return $r2;
    }

    public f.a.a.a.a.c.h a(java.lang.Object)
    {
        f.a.a.a.a.c.h $r2;
        java.lang.Object $r1;
        f.a.a.a.a.c.r $r3;
        f.a.a.a.a.c.o r0;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <f.a.a.a.a.c.r: boolean isProperDelegate(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = (f.a.a.a.a.c.h) $r1;

        return $r2;

     label1:
        $r3 = new f.a.a.a.a.c.r;

        specialinvoke $r3.<f.a.a.a.a.c.r: void <init>()>();

        return $r3;
    }

    public void a(f.a.a.a.a.c.t)
    {
        f.a.a.a.a.c.h $r2;
        f.a.a.a.a.c.t $r1;
        f.a.a.a.a.c.p $r3;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 := @parameter0: f.a.a.a.a.c.t;

        $r2 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r3 = (f.a.a.a.a.c.p) $r2;

        $r2 = (f.a.a.a.a.c.h) $r3;

        interfaceinvoke $r2.<f.a.a.a.a.c.h: void addDependency(java.lang.Object)>($r1);

        return;
    }

    public volatile void addDependency(java.lang.Object)
    {
        java.lang.Object $r1;
        f.a.a.a.a.c.t $r2;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (f.a.a.a.a.c.t) $r1;

        virtualinvoke r0.<f.a.a.a.a.c.o: void a(f.a.a.a.a.c.t)>($r2);

        return;
    }

    public boolean areDependenciesMet()
    {
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.p $r2;
        f.a.a.a.a.c.o r0;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r1 = (f.a.a.a.a.c.h) $r2;

        $z0 = interfaceinvoke $r1.<f.a.a.a.a.c.h: boolean areDependenciesMet()>();

        return $z0;
    }

    public int compareTo(java.lang.Object)
    {
        f.a.a.a.a.c.h $r2;
        int $i0;
        java.lang.Object $r1;
        f.a.a.a.a.c.p $r3;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r3 = (f.a.a.a.a.c.p) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);

        return $i0;
    }

    public java.util.Collection getDependencies()
    {
        f.a.a.a.a.c.h $r1;
        java.util.Collection $r3;
        f.a.a.a.a.c.p $r2;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r1 = (f.a.a.a.a.c.h) $r2;

        $r3 = interfaceinvoke $r1.<f.a.a.a.a.c.h: java.util.Collection getDependencies()>();

        return $r3;
    }

    public f.a.a.a.a.c.k getPriority()
    {
        f.a.a.a.a.c.k $r3;
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.p $r2;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r3 = interfaceinvoke $r2.<f.a.a.a.a.c.p: f.a.a.a.a.c.k getPriority()>();

        return $r3;
    }

    public boolean isFinished()
    {
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.t $r3;
        f.a.a.a.a.c.p $r2;
        f.a.a.a.a.c.o r0;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r3 = (f.a.a.a.a.c.t) $r2;

        $z0 = interfaceinvoke $r3.<f.a.a.a.a.c.t: boolean isFinished()>();

        return $z0;
    }

    public void setError(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        f.a.a.a.a.c.h $r2;
        f.a.a.a.a.c.t $r4;
        f.a.a.a.a.c.p $r3;
        f.a.a.a.a.c.o r0;

        r0 := @this: f.a.a.a.a.c.o;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r3 = (f.a.a.a.a.c.p) $r2;

        $r4 = (f.a.a.a.a.c.t) $r3;

        interfaceinvoke $r4.<f.a.a.a.a.c.t: void setError(java.lang.Throwable)>($r1);

        return;
    }

    public void setFinished(boolean)
    {
        f.a.a.a.a.c.h $r1;
        f.a.a.a.a.c.t $r3;
        f.a.a.a.a.c.p $r2;
        f.a.a.a.a.c.o r0;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.o;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<f.a.a.a.a.c.o: f.a.a.a.a.c.h a()>();

        $r2 = (f.a.a.a.a.c.p) $r1;

        $r3 = (f.a.a.a.a.c.t) $r2;

        interfaceinvoke $r3.<f.a.a.a.a.c.t: void setFinished(boolean)>($z0);

        return;
    }
}
