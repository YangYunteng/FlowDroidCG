public final class com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder extends com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder
{
    public java.lang.Integer criticalSectionEnterTimeoutMs;
    public java.lang.Long eventCleanUpAge;
    public java.lang.Integer loadBatchSize;
    public java.lang.Integer maxBlobByteSizePerRow;
    public java.lang.Long maxStorageSizeInBytes;

    public void <init>()
    {
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        specialinvoke r0.<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: void <init>()>();

        return;
    }

    public com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig build()
    {
        java.lang.IllegalStateException $r6;
        long $l0, $l3;
        java.lang.Integer $r4;
        java.lang.Long $r1;
        int $i1, $i2, $i4;
        java.lang.StringBuilder $r3;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig $r5;
        java.lang.String $r2;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;
        boolean $z0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        $r1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long maxStorageSizeInBytes>;

        $r2 = "";

        if $r1 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxStorageSizeInBytes");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer loadBatchSize>;

        if $r4 != null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" loadBatchSize");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r4 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer criticalSectionEnterTimeoutMs>;

        if $r4 != null goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" criticalSectionEnterTimeoutMs");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long eventCleanUpAge>;

        if $r1 != null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" eventCleanUpAge");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r4 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer maxBlobByteSizePerRow>;

        if $r4 != null goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxBlobByteSizePerRow");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r5 = new com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig;

        $r1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long maxStorageSizeInBytes>;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r4 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer loadBatchSize>;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r4 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer criticalSectionEnterTimeoutMs>;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r1 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long eventCleanUpAge>;

        $l3 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r4 = r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer maxBlobByteSizePerRow>;

        $i4 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        specialinvoke $r5.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void <init>(long,int,int,long,int,com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)>($l0, $i1, $i2, $l3, $i4, null);

        return $r5;

     label6:
        $r6 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required properties:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r6;
    }

    public com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setCriticalSectionEnterTimeoutMs(int)
    {
        int $i0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;
        java.lang.Integer $r1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer criticalSectionEnterTimeoutMs> = $r1;

        return r0;
    }

    public com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setEventCleanUpAge(long)
    {
        long $l0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long eventCleanUpAge> = $r1;

        return r0;
    }

    public com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setLoadBatchSize(int)
    {
        int $i0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;
        java.lang.Integer $r1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer loadBatchSize> = $r1;

        return r0;
    }

    public com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxBlobByteSizePerRow(int)
    {
        int $i0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;
        java.lang.Integer $r1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer maxBlobByteSizePerRow> = $r1;

        return r0;
    }

    public com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxStorageSizeInBytes(long)
    {
        long $l0;
        com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder r0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long maxStorageSizeInBytes> = $r1;

        return r0;
    }
}
