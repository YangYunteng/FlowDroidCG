public class org.apache.james.mime4j.util.ContentUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.james.mime4j.util.ContentUtil r0;

        r0 := @this: org.apache.james.mime4j.util.ContentUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String decode(java.nio.charset.Charset, org.apache.james.mime4j.util.ByteSequence)
    {
        java.nio.charset.Charset $r1;
        org.apache.james.mime4j.util.ByteSequence $r0;
        int $i0;
        java.lang.String $r2;

        $r1 := @parameter0: java.nio.charset.Charset;

        $r0 := @parameter1: org.apache.james.mime4j.util.ByteSequence;

        $i0 = interfaceinvoke $r0.<org.apache.james.mime4j.util.ByteSequence: int length()>();

        $r2 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(java.nio.charset.Charset,org.apache.james.mime4j.util.ByteSequence,int,int)>($r1, $r0, 0, $i0);

        return $r2;
    }

    public static java.lang.String decode(java.nio.charset.Charset, org.apache.james.mime4j.util.ByteSequence, int, int)
    {
        byte[] $r3;
        org.apache.james.mime4j.util.ByteSequence $r1;
        java.nio.charset.Charset $r0;
        int $i0, $i1;
        java.lang.String $r4;
        org.apache.james.mime4j.util.ByteArrayBuffer $r2;
        boolean $z0;

        $r0 := @parameter0: java.nio.charset.Charset;

        $r1 := @parameter1: org.apache.james.mime4j.util.ByteSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = $r1 instanceof org.apache.james.mime4j.util.ByteArrayBuffer;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.james.mime4j.util.ByteArrayBuffer) $r1;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        $r4 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(java.nio.charset.Charset,byte[],int,int)>($r0, $r3, $i0, $i1);

        return $r4;

     label1:
        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte[] toByteArray()>();

        $r4 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(java.nio.charset.Charset,byte[],int,int)>($r0, $r3, $i0, $i1);

        return $r4;
    }

    public static java.lang.String decode(java.nio.charset.Charset, byte[], int, int)
    {
        byte[] $r1;
        java.nio.charset.Charset $r0;
        java.nio.CharBuffer $r3;
        int $i0, $i1;
        java.lang.String $r4;
        java.nio.ByteBuffer $r2;

        $r0 := @parameter0: java.nio.charset.Charset;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r0.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r2);

        $r4 = virtualinvoke $r3.<java.nio.CharBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String decode(org.apache.james.mime4j.util.ByteSequence)
    {
        java.nio.charset.Charset $r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        int $i0;
        java.lang.String $r2;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r0 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;

        $i0 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: int length()>();

        $r2 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(java.nio.charset.Charset,org.apache.james.mime4j.util.ByteSequence,int,int)>($r0, $r1, 0, $i0);

        return $r2;
    }

    public static java.lang.String decode(org.apache.james.mime4j.util.ByteSequence, int, int)
    {
        java.nio.charset.Charset $r0;
        org.apache.james.mime4j.util.ByteSequence $r2;
        int $i0, $i1;
        java.lang.String $r1;

        $r2 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;

        $r1 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(java.nio.charset.Charset,org.apache.james.mime4j.util.ByteSequence,int,int)>($r0, $r2, $i0, $i1);

        return $r1;
    }

    public static org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)
    {
        java.lang.String $r2;
        java.nio.charset.Charset $r0;
        org.apache.james.mime4j.util.ByteSequence $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;

        $r1 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.nio.charset.Charset,java.lang.String)>($r0, $r2);

        return $r1;
    }

    public static org.apache.james.mime4j.util.ByteSequence encode(java.nio.charset.Charset, java.lang.String)
    {
        byte[] $r5;
        java.nio.CharBuffer $r2;
        java.nio.ByteBuffer $r3;
        java.nio.charset.Charset $r0;
        int $i0, $i1;
        java.lang.String $r1;
        org.apache.james.mime4j.util.ByteArrayBuffer $r4;

        $r0 := @parameter0: java.nio.charset.Charset;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>($r1);

        $r3 = virtualinvoke $r0.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r2);

        $r4 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();

        specialinvoke $r4.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(int)>($i0);

        $r5 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();

        virtualinvoke $r4.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r5, $i0, $i1);

        return $r4;
    }
}
