public class org.dom4j.tree.DefaultProcessingInstruction extends org.dom4j.tree.FlyweightProcessingInstruction
{
    public org.dom4j.Element parent;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        org.dom4j.tree.DefaultProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        java.lang.String $r1;
        org.dom4j.tree.DefaultProcessingInstruction r0;
        java.util.Map $r2;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: void <init>(java.lang.String,java.util.Map)>($r1, $r2);

        return;
    }

    public void <init>(org.dom4j.Element, java.lang.String, java.lang.String)
    {
        org.dom4j.tree.DefaultProcessingInstruction r0;
        org.dom4j.Element $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        r0.<org.dom4j.tree.DefaultProcessingInstruction: org.dom4j.Element parent> = $r1;

        return;
    }

    public org.dom4j.Element getParent()
    {
        org.dom4j.Element r1;
        org.dom4j.tree.DefaultProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        r1 = r0.<org.dom4j.tree.DefaultProcessingInstruction: org.dom4j.Element parent>;

        return r1;
    }

    public boolean isReadOnly()
    {
        org.dom4j.tree.DefaultProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        return 0;
    }

    public void setParent(org.dom4j.Element)
    {
        org.dom4j.Element $r1;
        org.dom4j.tree.DefaultProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r1 := @parameter0: org.dom4j.Element;

        r0.<org.dom4j.tree.DefaultProcessingInstruction: org.dom4j.Element parent> = $r1;

        return;
    }

    public void setTarget(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.tree.DefaultProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String target> = $r1;

        return;
    }

    public void setText(java.lang.String)
    {
        java.lang.String $r2;
        org.dom4j.tree.DefaultProcessingInstruction r0;
        java.util.Map $r1;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r2 := @parameter0: java.lang.String;

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String text> = $r2;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractProcessingInstruction: java.util.Map parseValues(java.lang.String)>($r2);

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values> = $r1;

        return;
    }

    public void setValue(java.lang.String, java.lang.String)
    {
        org.dom4j.tree.DefaultProcessingInstruction r0;
        java.util.Map $r3;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void setValues(java.util.Map)
    {
        java.lang.String $r1;
        org.dom4j.tree.DefaultProcessingInstruction r0;
        java.util.Map $r2;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        $r2 := @parameter0: java.util.Map;

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values> = $r2;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractProcessingInstruction: java.lang.String toString(java.util.Map)>($r2);

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String text> = $r1;

        return;
    }

    public boolean supportsParent()
    {
        org.dom4j.tree.DefaultProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.DefaultProcessingInstruction;

        return 1;
    }
}
