public class c.c.a.e.b extends java.lang.Object
{
    public static final java.lang.String a;
    public static byte[] b;
    public static byte[] c;
    public static javax.crypto.SecretKey d;
    public javax.crypto.Cipher e;
    public java.lang.String f;

    static void <clinit>()
    {
        byte[] $r0;

        <c.c.a.e.b: java.lang.String a> = "c.c.a.e.b";

        $r0 = newarray (byte)[16];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 0;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 0;

        $r0[12] = 0;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 0;

        <c.c.a.e.b: byte[] b> = $r0;

        $r0 = newarray (byte)[12];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 0;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 0;

        <c.c.a.e.b: byte[] c> = $r0;

        <c.c.a.e.b: javax.crypto.SecretKey d> = null;

        return;
    }

    public void <init>()
    {
        int $i0;
        c.c.a.e.b r0;
        javax.crypto.Cipher $r1;

        r0 := @this: c.c.a.e.b;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = virtualinvoke r0.<c.c.a.e.b: javax.crypto.Cipher b()>();

        r0.<c.c.a.e.b: javax.crypto.Cipher e> = $r1;

        return;

     label1:
        $r1 = virtualinvoke r0.<c.c.a.e.b: javax.crypto.Cipher c()>();

        r0.<c.c.a.e.b: javax.crypto.Cipher e> = $r1;

        return;
    }

    public static javax.crypto.SecretKey a()
    {
        javax.crypto.SecretKey r0;

        r0 = <c.c.a.e.b: javax.crypto.SecretKey d>;

        return r0;
    }

    public static void a(java.security.Key)
    {
        java.security.Key $r0;
        javax.crypto.SecretKey $r1;

        $r0 := @parameter0: java.security.Key;

        $r1 = (javax.crypto.SecretKey) $r0;

        <c.c.a.e.b: javax.crypto.SecretKey d> = $r1;

        return;
    }

    public static java.lang.String e(java.lang.String, java.lang.String)
    {
        byte[] $r0, $r3, $r4;
        java.lang.String $r1, $r2;
        java.lang.Exception $r5;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label02:
        $r0 = <c.c.a.e.b: byte[] b>;

     label03:
        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r0 = staticinvoke <c.c.a.e.a: byte[] a(byte[],byte[],byte[])>($r0, $r3, $r4);

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r0, 0);

     label04:
        return $r1;

     label05:
        $r5 := @caughtexception;

        goto label12;

     label06:
        $r5 := @caughtexception;

        goto label12;

     label07:
        $r5 := @caughtexception;

        goto label12;

     label08:
        $r5 := @caughtexception;

        goto label12;

     label09:
        $r5 := @caughtexception;

        goto label12;

     label10:
        $r5 := @caughtexception;

        goto label12;

     label11:
        $r5 := @caughtexception;

     label12:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.security.InvalidKeyException from label01 to label02 with label11;
        catch java.security.InvalidKeyException from label03 to label04 with label11;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label10;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label08;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label08;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label07;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label07;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label06;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label06;
        catch javax.crypto.BadPaddingException from label01 to label02 with label05;
        catch javax.crypto.BadPaddingException from label03 to label04 with label05;
    }

    public java.lang.String a(java.lang.String, java.lang.String)
    {
        byte[] $r5;
        javax.crypto.Cipher $r6;
        java.lang.Exception $r7;
        c.c.a.e.b r0;
        java.lang.String $r1, $r2;
        javax.crypto.SecretKey $r3;
        javax.crypto.spec.GCMParameterSpec $r4;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r3 = staticinvoke <c.c.a.e.b: javax.crypto.SecretKey a()>();

     label2:
        if $r3 != null goto label4;

     label3:
        $r2 = r0.<c.c.a.e.b: java.lang.String f>;

        virtualinvoke r0.<c.c.a.e.b: void a(java.lang.String)>($r2);

     label4:
        $r4 = new javax.crypto.spec.GCMParameterSpec;

        $r5 = <c.c.a.e.b: byte[] c>;

     label5:
        specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r5);

        $r6 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        $r3 = staticinvoke <c.c.a.e.b: javax.crypto.SecretKey a()>();

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r3, $r4);

        $r6 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, 0);

        $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label6:
        $r1 = new java.lang.String;

     label7:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r5);

     label8:
        return $r1;

     label9:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public java.lang.String a(byte[], java.lang.String)
    {
        byte[] $r1, $r5;
        c.c.a.e.b r0;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.String $r2;
        javax.crypto.Cipher $r3;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        if $r3 != null goto label1;

        $r2 = <c.c.a.e.b: java.lang.String a>;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r2, "Cipher not initialized!");

        return null;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 16);

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "AES");

        $r3 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r4);

        $r2 = new java.lang.String;

        $r3 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

        return $r2;
    }

    public void a(java.lang.String)
    {
        android.security.keystore.KeyGenParameterSpec$Builder $r6;
        java.security.KeyStore $r3;
        java.lang.String[] $r7;
        javax.crypto.KeyGenerator $r5;
        java.lang.Exception $r9;
        android.security.keystore.KeyGenParameterSpec $r8;
        java.security.Key $r4;
        c.c.a.e.b r0;
        java.lang.String $r1;
        javax.crypto.SecretKey $r2;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: java.lang.String;

        r0.<c.c.a.e.b: java.lang.String f> = $r1;

        $r2 = staticinvoke <c.c.a.e.b: javax.crypto.SecretKey a()>();

        if $r2 != null goto label12;

     label01:
        $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("AndroidKeyStore");

        virtualinvoke $r3.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(null);

        $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, null);

        $r2 = (javax.crypto.SecretKey) $r4;

        staticinvoke <c.c.a.e.b: void a(java.security.Key)>($r2);

        $r2 = staticinvoke <c.c.a.e.b: javax.crypto.SecretKey a()>();

     label02:
        if $r2 != null goto label12;

     label03:
        $r5 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>("AES", "AndroidKeyStore");

     label04:
        $r6 = new android.security.keystore.KeyGenParameterSpec$Builder;

     label05:
        specialinvoke $r6.<android.security.keystore.KeyGenParameterSpec$Builder: void <init>(java.lang.String,int)>($r1, 3);

     label06:
        $r7 = newarray (java.lang.String)[1];

     label07:
        $r7[0] = "GCM";

        $r6 = virtualinvoke $r6.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setBlockModes(java.lang.String[])>($r7);

     label08:
        $r7 = newarray (java.lang.String)[1];

     label09:
        $r7[0] = "NoPadding";

        $r6 = virtualinvoke $r6.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setEncryptionPaddings(java.lang.String[])>($r7);

        $r6 = virtualinvoke $r6.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setRandomizedEncryptionRequired(boolean)>(0);

        $r8 = virtualinvoke $r6.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec build()>();

        virtualinvoke $r5.<javax.crypto.KeyGenerator: void init(java.security.spec.AlgorithmParameterSpec)>($r8);

        $r2 = virtualinvoke $r5.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        staticinvoke <c.c.a.e.b: void a(java.security.Key)>($r2);

     label10:
        return;

     label11:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public java.lang.String b(java.lang.String, java.lang.String)
    {
        byte[] $r3;
        c.c.a.e.b r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: c.c.a.e.b;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r2 = virtualinvoke r0.<c.c.a.e.b: java.lang.String a(java.lang.String,java.lang.String)>($r2, $r1);

        return $r2;

     label1:
        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, 2);

        $r2 = virtualinvoke r0.<c.c.a.e.b: java.lang.String a(byte[],java.lang.String)>($r3, $r1);

        return $r2;
    }

    public javax.crypto.Cipher b()
    {
        c.c.a.e.b r0;
        javax.crypto.NoSuchPaddingException $r2;
        java.security.NoSuchAlgorithmException $r4;
        java.lang.String $r3;
        javax.crypto.Cipher $r1;

        r0 := @this: c.c.a.e.b;

     label1:
        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/GCM/NoPadding");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = <c.c.a.e.b: java.lang.String a>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Cant find padding spec");

        virtualinvoke $r2.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label5;

     label4:
        $r4 := @caughtexception;

        $r3 = <c.c.a.e.b: java.lang.String a>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Cant find algorithm");

        virtualinvoke $r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label5:
        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
    }

    public byte[] b(byte[], java.lang.String)
    {
        byte[] $r1, $r5;
        c.c.a.e.b r0;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.String $r2;
        javax.crypto.Cipher $r3;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        if $r3 != null goto label1;

        $r2 = <c.c.a.e.b: java.lang.String a>;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r2, "Cipher not initialized!");

        return null;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 16);

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "AES");

        $r3 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r4);

        $r3 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public java.lang.String c(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        c.c.a.e.b r0;

        r0 := @this: c.c.a.e.b;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        $r2 = virtualinvoke r0.<c.c.a.e.b: java.lang.String b(java.lang.String,java.lang.String)>($r2, $r1);

        return $r2;
    }

    public javax.crypto.Cipher c()
    {
        c.c.a.e.b r0;
        javax.crypto.NoSuchPaddingException $r2;
        java.security.NoSuchAlgorithmException $r4;
        java.lang.String $r3;
        javax.crypto.Cipher $r1;

        r0 := @this: c.c.a.e.b;

     label1:
        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = <c.c.a.e.b: java.lang.String a>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Cant find padding spec");

        virtualinvoke $r2.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label5;

     label4:
        $r4 := @caughtexception;

        $r3 = <c.c.a.e.b: java.lang.String a>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Cant find algorithm");

        virtualinvoke $r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label5:
        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
    }

    public java.lang.String d(java.lang.String, java.lang.String)
    {
        byte[] $r5;
        javax.crypto.Cipher $r6;
        java.lang.Exception $r7;
        c.c.a.e.b r0;
        java.lang.String $r1, $r2;
        javax.crypto.SecretKey $r3;
        javax.crypto.spec.GCMParameterSpec $r4;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r3 = staticinvoke <c.c.a.e.b: javax.crypto.SecretKey a()>();

     label2:
        if $r3 != null goto label4;

     label3:
        $r2 = r0.<c.c.a.e.b: java.lang.String f>;

        virtualinvoke r0.<c.c.a.e.b: void a(java.lang.String)>($r2);

     label4:
        $r4 = new javax.crypto.spec.GCMParameterSpec;

        $r5 = <c.c.a.e.b: byte[] c>;

     label5:
        specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r5);

        $r6 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        $r3 = staticinvoke <c.c.a.e.b: javax.crypto.SecretKey a()>();

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r3, $r4);

        $r6 = r0.<c.c.a.e.b: javax.crypto.Cipher e>;

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, 0);

     label6:
        return $r1;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public byte[] f(java.lang.String, java.lang.String)
    {
        byte[] $r3;
        c.c.a.e.b r0;
        java.lang.String $r1, $r2;

        r0 := @this: c.c.a.e.b;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = virtualinvoke r0.<c.c.a.e.b: byte[] b(byte[],java.lang.String)>($r3, $r1);

        return $r3;
    }

    public java.lang.String g(java.lang.String, java.lang.String)
    {
        byte[] $r3;
        c.c.a.e.b r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = virtualinvoke r0.<c.c.a.e.b: java.lang.String d(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;

     label1:
        $r3 = virtualinvoke r0.<c.c.a.e.b: byte[] f(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, 2);

        return $r1;
    }

    public java.lang.String h(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        c.c.a.e.b r0;

        r0 := @this: c.c.a.e.b;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<c.c.a.e.b: java.lang.String g(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        return $r1;
    }
}
