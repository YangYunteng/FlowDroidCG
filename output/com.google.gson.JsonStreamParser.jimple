public final class com.google.gson.JsonStreamParser extends java.lang.Object implements java.util.Iterator
{
    public final java.lang.Object lock;
    public final com.google.gson.stream.JsonReader parser;

    public void <init>(java.io.Reader)
    {
        java.lang.Object $r3;
        java.io.Reader $r1;
        com.google.gson.JsonStreamParser r0;
        com.google.gson.stream.JsonReader $r2;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.google.gson.stream.JsonReader;

        specialinvoke $r2.<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>($r1);

        r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser> = $r2;

        $r2 = r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

        virtualinvoke $r2.<com.google.gson.stream.JsonReader: void setLenient(boolean)>(1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.JsonStreamParser: java.lang.Object lock> = $r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        java.io.StringReader $r2;
        com.google.gson.JsonStreamParser r0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<com.google.gson.JsonStreamParser: void <init>(java.io.Reader)>($r2);

        return;
    }

    public boolean hasNext()
    {
        java.lang.Throwable $r5;
        com.google.gson.JsonSyntaxException $r9;
        java.io.IOException $r6;
        com.google.gson.stream.JsonReader $r3;
        com.google.gson.stream.MalformedJsonException $r8;
        com.google.gson.stream.JsonToken $r2, $r4;
        com.google.gson.JsonIOException $r7;
        java.lang.Object $r1;
        com.google.gson.JsonStreamParser r0;
        boolean $z0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = r0.<com.google.gson.JsonStreamParser: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $r3 = r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

     label02:
        $r2 = virtualinvoke $r3.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

     label03:
        $r4 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT>;

     label04:
        if $r2 == $r4 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        exitmonitor $r1;

     label07:
        return $z0;

     label08:
        $r5 := @caughtexception;

        goto label11;

     label09:
        $r6 := @caughtexception;

        $r7 = new com.google.gson.JsonIOException;

        specialinvoke $r7.<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label10:
        $r8 := @caughtexception;

        $r9 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r9.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label11:
        exitmonitor $r1;

     label12:
        throw $r5;

        catch com.google.gson.stream.MalformedJsonException from label02 to label03 with label10;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label12 with label08;
    }

    public com.google.gson.JsonElement next()
    {
        java.lang.Throwable $r4;
        com.google.gson.JsonParseException $r8;
        java.lang.StackOverflowError $r6;
        java.lang.RuntimeException $r3;
        com.google.gson.stream.JsonReader $r1;
        com.google.gson.JsonElement $r2;
        java.util.NoSuchElementException $r7, $r9;
        com.google.gson.JsonStreamParser r0;
        java.lang.OutOfMemoryError $r5;
        boolean $z0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $z0 = virtualinvoke r0.<com.google.gson.JsonStreamParser: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r1 = r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

     label1:
        $r2 = staticinvoke <com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $z0 = $r4 instanceof java.io.EOFException;

        if $z0 == 0 goto label4;

        $r7 = new java.util.NoSuchElementException;

        $r3 = $r7;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

     label4:
        throw $r3;

     label5:
        $r5 := @caughtexception;

        $r8 = new com.google.gson.JsonParseException;

        specialinvoke $r8.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>("Failed parsing JSON source to Json", $r5);

        throw $r8;

     label6:
        $r6 := @caughtexception;

        $r8 = new com.google.gson.JsonParseException;

        specialinvoke $r8.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>("Failed parsing JSON source to Json", $r6);

        throw $r8;

     label7:
        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        throw $r9;

        catch java.lang.StackOverflowError from label1 to label2 with label6;
        catch java.lang.OutOfMemoryError from label1 to label2 with label5;
        catch com.google.gson.JsonParseException from label1 to label2 with label3;
    }

    public volatile java.lang.Object next()
    {
        com.google.gson.JsonElement $r1;
        com.google.gson.JsonStreamParser r0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = virtualinvoke r0.<com.google.gson.JsonStreamParser: com.google.gson.JsonElement next()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.gson.JsonStreamParser r0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
