public abstract class com.google.common.collect.ForwardingSortedMultiset extends com.google.common.collect.ForwardingMultiset implements com.google.common.collect.SortedMultiset
{

    public void <init>()
    {
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        specialinvoke r0.<com.google.common.collect.ForwardingMultiset: void <init>()>();

        return;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.SortedMultiset $r1;
        java.util.Comparator $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: java.util.Comparator comparator()>();

        return $r2;
    }

    public volatile com.google.common.collect.Multiset delegate()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        return $r1;
    }

    public abstract com.google.common.collect.SortedMultiset delegate();

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        return $r1;
    }

    public volatile java.util.Collection delegate()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        return $r1;
    }

    public com.google.common.collect.SortedMultiset descendingMultiset()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r1 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: com.google.common.collect.SortedMultiset descendingMultiset()>();

        return $r1;
    }

    public java.util.NavigableSet elementSet()
    {
        com.google.common.collect.SortedMultiset $r1;
        java.util.NavigableSet $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: java.util.NavigableSet elementSet()>();

        return $r2;
    }

    public volatile java.util.Set elementSet()
    {
        java.util.NavigableSet $r1;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: java.util.NavigableSet elementSet()>();

        return $r1;
    }

    public volatile java.util.SortedSet elementSet()
    {
        java.util.NavigableSet $r1;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: java.util.NavigableSet elementSet()>();

        return $r1;
    }

    public com.google.common.collect.Multiset$Entry firstEntry()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.Multiset$Entry $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: com.google.common.collect.Multiset$Entry firstEntry()>();

        return $r2;
    }

    public com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)
    {
        com.google.common.collect.SortedMultiset $r3;
        com.google.common.collect.BoundType $r1;
        java.lang.Object $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.common.collect.BoundType;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r3 = interfaceinvoke $r3.<com.google.common.collect.SortedMultiset: com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType)>($r2, $r1);

        return $r3;
    }

    public com.google.common.collect.Multiset$Entry lastEntry()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.Multiset$Entry $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: com.google.common.collect.Multiset$Entry lastEntry()>();

        return $r2;
    }

    public com.google.common.collect.Multiset$Entry pollFirstEntry()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.Multiset$Entry $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: com.google.common.collect.Multiset$Entry pollFirstEntry()>();

        return $r2;
    }

    public com.google.common.collect.Multiset$Entry pollLastEntry()
    {
        com.google.common.collect.SortedMultiset $r1;
        com.google.common.collect.Multiset$Entry $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: com.google.common.collect.Multiset$Entry pollLastEntry()>();

        return $r2;
    }

    public com.google.common.collect.Multiset$Entry standardFirstEntry()
    {
        java.util.Iterator $r2;
        int $i0;
        java.util.Set $r1;
        java.lang.Object $r3;
        com.google.common.collect.Multiset$Entry $r4;
        com.google.common.collect.ForwardingSortedMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.collect.Multiset$Entry) $r3;

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r4.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $r4 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r3, $i0);

        return $r4;
    }

    public com.google.common.collect.Multiset$Entry standardLastEntry()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.common.collect.Multiset$Entry $r5;
        com.google.common.collect.SortedMultiset $r1;
        int $i0;
        java.lang.Object $r4;
        com.google.common.collect.ForwardingSortedMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset descendingMultiset()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.common.collect.Multiset$Entry) $r4;

        $r4 = interfaceinvoke $r5.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r5.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $r5 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r4, $i0);

        return $r5;
    }

    public com.google.common.collect.Multiset$Entry standardPollFirstEntry()
    {
        java.util.Iterator $r2;
        int $i0;
        java.util.Set $r1;
        java.lang.Object $r3;
        com.google.common.collect.Multiset$Entry $r4;
        com.google.common.collect.ForwardingSortedMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.collect.Multiset$Entry) $r3;

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r4.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $r4 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r3, $i0);

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        return $r4;
    }

    public com.google.common.collect.Multiset$Entry standardPollLastEntry()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.common.collect.Multiset$Entry $r5;
        com.google.common.collect.SortedMultiset $r1;
        int $i0;
        java.lang.Object $r4;
        com.google.common.collect.ForwardingSortedMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset descendingMultiset()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.SortedMultiset: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.common.collect.Multiset$Entry) $r4;

        $r4 = interfaceinvoke $r5.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r5.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $r5 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r4, $i0);

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        return $r5;
    }

    public com.google.common.collect.SortedMultiset standardSubMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)
    {
        com.google.common.collect.SortedMultiset $r5;
        com.google.common.collect.BoundType $r1, $r3;
        java.lang.Object $r2, $r4;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.common.collect.BoundType;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: com.google.common.collect.BoundType;

        $r5 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType)>($r4, $r1);

        $r5 = interfaceinvoke $r5.<com.google.common.collect.SortedMultiset: com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType)>($r2, $r3);

        return $r5;
    }

    public com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)
    {
        com.google.common.collect.SortedMultiset $r5;
        com.google.common.collect.BoundType $r1, $r3;
        java.lang.Object $r2, $r4;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.common.collect.BoundType;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: com.google.common.collect.BoundType;

        $r5 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r5 = interfaceinvoke $r5.<com.google.common.collect.SortedMultiset: com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)>($r4, $r1, $r2, $r3);

        return $r5;
    }

    public com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)
    {
        com.google.common.collect.SortedMultiset $r3;
        com.google.common.collect.BoundType $r1;
        java.lang.Object $r2;
        com.google.common.collect.ForwardingSortedMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMultiset;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.common.collect.BoundType;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMultiset: com.google.common.collect.SortedMultiset delegate()>();

        $r3 = interfaceinvoke $r3.<com.google.common.collect.SortedMultiset: com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType)>($r2, $r1);

        return $r3;
    }
}
