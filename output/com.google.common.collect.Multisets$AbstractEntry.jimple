public abstract class com.google.common.collect.Multisets$AbstractEntry extends java.lang.Object implements com.google.common.collect.Multiset$Entry
{

    public void <init>()
    {
        com.google.common.collect.Multisets$AbstractEntry r0;

        r0 := @this: com.google.common.collect.Multisets$AbstractEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        com.google.common.collect.Multisets$AbstractEntry r0;
        java.lang.Object $r1, $r3;
        com.google.common.collect.Multiset$Entry $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$AbstractEntry;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.collect.Multiset$Entry) $r1;

        $i0 = interfaceinvoke r0.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 != $i1 goto label1;

        $r1 = interfaceinvoke r0.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        int $i0, $i1;
        com.google.common.collect.Multisets$AbstractEntry r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Multisets$AbstractEntry;

        $r1 = interfaceinvoke r0.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label2:
        $i1 = interfaceinvoke r0.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        int $i0;
        com.google.common.collect.Multisets$AbstractEntry r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r0 := @this: com.google.common.collect.Multisets$AbstractEntry;

        $r1 = interfaceinvoke r0.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $i0 = interfaceinvoke r0.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 != 1 goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
