public final class l.n extends java.lang.Object implements l.w
{
    public final l.z a;
    public final java.io.OutputStream b;

    public void <init>(l.z, java.io.OutputStream)
    {
        java.io.OutputStream $r2;
        l.z $r1;
        l.n r0;

        r0 := @this: l.n;

        $r1 := @parameter0: l.z;

        $r2 := @parameter1: java.io.OutputStream;

        r0.<l.n: l.z a> = $r1;

        r0.<l.n: java.io.OutputStream b> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void a(l.e, long)
    {
        java.io.OutputStream $r4;
        byte[] $r5;
        l.e $r1;
        long $l0, $l1, $l5;
        l.n r0;
        l.t $r3, $r6;
        byte $b2;
        int $i3, $i4;
        l.z $r2;

        r0 := @this: l.n;

        $r1 := @parameter0: l.e;

        $l0 := @parameter1: long;

        $l1 = $r1.<l.e: long c>;

        staticinvoke <l.A: void a(long,long,long)>($l1, 0L, $l0);

     label1:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label2;

        $r2 = r0.<l.n: l.z a>;

        virtualinvoke $r2.<l.z: void e()>();

        $r3 = $r1.<l.e: l.t b>;

        $i3 = $r3.<l.t: int c>;

        $i4 = $r3.<l.t: int b>;

        $i3 = $i3 - $i4;

        $l1 = (long) $i3;

        $l1 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l1);

        $i3 = (int) $l1;

        $r4 = r0.<l.n: java.io.OutputStream b>;

        $r5 = $r3.<l.t: byte[] a>;

        $i4 = $r3.<l.t: int b>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r5, $i4, $i3);

        $i4 = $r3.<l.t: int b>;

        $i4 = $i4 + $i3;

        $r3.<l.t: int b> = $i4;

        $l1 = (long) $i3;

        $l0 = $l0 - $l1;

        $l5 = $r1.<l.e: long c>;

        $l1 = $l5 - $l1;

        $r1.<l.e: long c> = $l1;

        $i3 = $r3.<l.t: int b>;

        $i4 = $r3.<l.t: int c>;

        if $i3 != $i4 goto label1;

        $r6 = virtualinvoke $r3.<l.t: l.t b()>();

        $r1.<l.e: l.t b> = $r6;

        staticinvoke <l.u: void a(l.t)>($r3);

        goto label1;

     label2:
        return;
    }

    public l.z b()
    {
        l.z r1;
        l.n r0;

        r0 := @this: l.n;

        r1 = r0.<l.n: l.z a>;

        return r1;
    }

    public void close()
    {
        java.io.OutputStream $r1;
        l.n r0;

        r0 := @this: l.n;

        $r1 = r0.<l.n: java.io.OutputStream b>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public void flush()
    {
        java.io.OutputStream $r1;
        l.n r0;

        r0 := @this: l.n;

        $r1 = r0.<l.n: java.io.OutputStream b>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public java.lang.String toString()
    {
        java.io.OutputStream $r3;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        l.n r0;

        r0 := @this: l.n;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sink(");

        $r3 = r0.<l.n: java.io.OutputStream b>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
