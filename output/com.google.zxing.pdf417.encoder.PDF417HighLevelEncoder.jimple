public final class com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder extends java.lang.Object
{
    public static final int BYTE_COMPACTION;
    public static final int LATCH_TO_BYTE;
    public static final int LATCH_TO_BYTE_PADDED;
    public static final int LATCH_TO_NUMERIC;
    public static final int LATCH_TO_TEXT;
    public static final byte[] MIXED;
    public static final int NUMERIC_COMPACTION;
    public static final byte[] PUNCTUATION;
    public static final int SHIFT_TO_BYTE;
    public static final int SUBMODE_ALPHA;
    public static final int SUBMODE_LOWER;
    public static final int SUBMODE_MIXED;
    public static final int SUBMODE_PUNCTUATION;
    public static final int TEXT_COMPACTION;
    public static final byte[] TEXT_MIXED_RAW;
    public static final byte[] TEXT_PUNCTUATION_RAW;

    static void <clinit>()
    {
        byte[] $r0;
        byte $b0, $b1, $b3;
        int $i2;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int SUBMODE_PUNCTUATION> = 3;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int SUBMODE_MIXED> = 2;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int SUBMODE_LOWER> = 1;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int SUBMODE_ALPHA> = 0;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int SHIFT_TO_BYTE> = 913;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int NUMERIC_COMPACTION> = 2;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int LATCH_TO_TEXT> = 900;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int LATCH_TO_NUMERIC> = 902;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int LATCH_TO_BYTE_PADDED> = 901;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int LATCH_TO_BYTE> = 924;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int BYTE_COMPACTION> = 1;

        $r0 = newarray (byte)[30];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 38;

        $r0[11] = 13;

        $r0[12] = 9;

        $r0[13] = 44;

        $r0[14] = 58;

        $r0[15] = 35;

        $r0[16] = 45;

        $r0[17] = 46;

        $r0[18] = 36;

        $r0[19] = 47;

        $r0[20] = 43;

        $r0[21] = 37;

        $r0[22] = 42;

        $r0[23] = 61;

        $r0[24] = 94;

        $r0[25] = 0;

        $r0[26] = 32;

        $r0[27] = 0;

        $r0[28] = 0;

        $r0[29] = 0;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_MIXED_RAW> = $r0;

        $r0 = newarray (byte)[30];

        $r0[0] = 59;

        $r0[1] = 60;

        $r0[2] = 62;

        $r0[3] = 64;

        $r0[4] = 91;

        $r0[5] = 92;

        $r0[6] = 93;

        $r0[7] = 95;

        $r0[8] = 96;

        $r0[9] = 126;

        $r0[10] = 33;

        $r0[11] = 13;

        $r0[12] = 9;

        $r0[13] = 44;

        $r0[14] = 58;

        $r0[15] = 10;

        $r0[16] = 45;

        $r0[17] = 46;

        $r0[18] = 36;

        $r0[19] = 47;

        $r0[20] = 34;

        $r0[21] = 124;

        $r0[22] = 42;

        $r0[23] = 40;

        $r0[24] = 41;

        $r0[25] = 63;

        $r0[26] = 123;

        $r0[27] = 125;

        $r0[28] = 39;

        $r0[29] = 0;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_PUNCTUATION_RAW> = $r0;

        $r0 = newarray (byte)[128];

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED> = $r0;

        $r0 = newarray (byte)[128];

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION> = $r0;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r0, -1);

        $b0 = 0;

        $b1 = 0;

     label1:
        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_MIXED_RAW>;

        $i2 = lengthof $r0;

        if $b1 >= $i2 goto label3;

        $b3 = $r0[$b1];

        $i2 = (int) $b3;

        if $i2 <= 0 goto label2;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        $i2 = (int) $b3;

        $r0[$i2] = $b1;

     label2:
        $i2 = $b1 + 1;

        $b1 = (byte) $i2;

        goto label1;

     label3:
        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r0, -1);

     label4:
        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_PUNCTUATION_RAW>;

        $i2 = lengthof $r0;

        if $b0 >= $i2 goto label6;

        $b1 = $r0[$b0];

        $i2 = (int) $b1;

        if $i2 <= 0 goto label5;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $i2 = (int) $b1;

        $r0[$i2] = $b0;

     label5:
        $i2 = $b0 + 1;

        $b0 = (byte) $i2;

        goto label4;

     label6:
        return;
    }

    public void <init>()
    {
        com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder r0;

        r0 := @this: com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int determineConsecutiveBinaryCount(java.lang.CharSequence, byte[], int)
    {
        byte[] $r1;
        java.lang.CharSequence $r0;
        char $c3;
        com.google.zxing.WriterException $r5;
        byte $b7;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i2 = $i0;

     label01:
        if $i2 >= $i1 goto label11;

        $i4 = 0;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $i5 = 0;

     label02:
        if $i5 >= 13 goto label04;

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isDigit(char)>($c3);

        if $z0 == 0 goto label04;

        $i5 = $i5 + 1;

        $i6 = $i2 + $i5;

        if $i6 < $i1 goto label03;

        goto label04;

     label03:
        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i6);

        goto label02;

     label04:
        if $i5 < 13 goto label05;

        $i0 = $i2 - $i0;

        return $i0;

     label05:
        if $i4 >= 5 goto label07;

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isText(char)>($c3);

        if $z0 == 0 goto label07;

        $i4 = $i4 + 1;

        $i5 = $i2 + $i4;

        if $i5 < $i1 goto label06;

        goto label07;

     label06:
        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i5);

        goto label05;

     label07:
        if $i4 < 5 goto label08;

        $i0 = $i2 - $i0;

        return $i0;

     label08:
        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $b7 = $r1[$i2];

        $i4 = (int) $b7;

        if $i4 != 63 goto label10;

        $i4 = (int) $c3;

        if $i4 != 63 goto label09;

        goto label10;

     label09:
        $r5 = new com.google.zxing.WriterException;

        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-encodable character detected: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Unicode: ");

        $i0 = (int) $c3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.zxing.WriterException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label10:
        $i2 = $i2 + 1;

        goto label01;

     label11:
        $i0 = $i2 - $i0;

        return $i0;
    }

    public static int determineConsecutiveDigitCount(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2;
        char $c3;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i2 = 0;

        if $i0 >= $i1 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label1:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isDigit(char)>($c3);

        if $z0 == 0 goto label3;

        if $i0 >= $i1 goto label3;

        $i2 = $i2 + 1;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        goto label1;

     label2:
        return 0;

     label3:
        return $i2;
    }

    public static int determineConsecutiveTextCount(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, $i4;
        char $c3;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i2 = $i0;

     label1:
        if $i2 >= $i1 goto label7;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $i4 = 0;

     label2:
        if $i4 >= 13 goto label3;

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isDigit(char)>($c3);

        if $z0 == 0 goto label3;

        if $i2 >= $i1 goto label3;

        $i4 = $i4 + 1;

        $i2 = $i2 + 1;

        if $i2 >= $i1 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        goto label2;

     label3:
        if $i4 < 13 goto label4;

        $i0 = $i2 - $i0;

        $i0 = $i0 - $i4;

        return $i0;

     label4:
        if $i4 <= 0 goto label5;

        goto label1;

     label5:
        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isText(char)>($c3);

        if $z0 != 0 goto label6;

        goto label7;

     label6:
        $i2 = $i2 + 1;

        goto label1;

     label7:
        $i0 = $i2 - $i0;

        return $i0;
    }

    public static void encodeBinary(byte[], int, int, int, java.lang.StringBuilder)
    {
        byte[] $r0;
        long $l4, $l8;
        char $c9;
        short $s7;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i5;
        char[] $r2;
        java.lang.StringBuilder $r1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.StringBuilder;

        if $i1 != 1 goto label01;

        if $i2 != 0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(913);

        goto label05;

     label01:
        $i2 = $i1 % 6;

        if $i2 != 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        if $z0 == 0 goto label04;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(924);

        goto label05;

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(901);

     label05:
        if $i1 < 6 goto label13;

        $r2 = newarray (char)[5];

        $i2 = $i0;

     label06:
        $i3 = $i0 + $i1;

        $i3 = $i3 - $i2;

        if $i3 < 6 goto label14;

        $l4 = 0L;

        $i3 = 0;

     label07:
        if $i3 >= 6 goto label08;

        $l4 = $l4 << 8;

        $i5 = $i2 + $i3;

        $b6 = $r0[$i5];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        $l8 = (long) $s7;

        $l4 = $l4 + $l8;

        $i3 = $i3 + 1;

        goto label07;

     label08:
        $i5 = 0;

     label09:
        if $i5 >= 5 goto label10;

        $l8 = $l4 % 900L;

        $i3 = (int) $l8;

        $c9 = (char) $i3;

        $r2[$i5] = $c9;

        $l4 = $l4 / 900L;

        $i5 = $i5 + 1;

        goto label09;

     label10:
        $i3 = lengthof $r2;

        $i3 = $i3 - 1;

     label11:
        if $i3 < 0 goto label12;

        $c9 = $r2[$i3];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        $i5 = -1;

        $i3 = $i3 + $i5;

        goto label11;

     label12:
        $i2 = $i2 + 6;

        goto label06;

     label13:
        $i2 = $i0;

     label14:
        $i3 = $i0 + $i1;

        if $i2 >= $i3 goto label15;

        $b6 = $r0[$i2];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        $c9 = (char) $s7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        $i2 = $i2 + 1;

        goto label14;

     label15:
        return;
    }

    public static java.lang.String encodeHighLevel(java.lang.String, com.google.zxing.pdf417.encoder.Compaction)
    {
        byte[] $r4;
        byte $b3;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        com.google.zxing.pdf417.encoder.Compaction $r2, $r3;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.pdf417.encoder.Compaction;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r3 = <com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction TEXT>;

        if $r2 != $r3 goto label01;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int)>($r1, 0, $i0, $r0, 0);

        goto label13;

     label01:
        $r3 = <com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction BYTE>;

        if $r2 != $r3 goto label02;

        $r4 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] getBytesForMessage(java.lang.String)>($r1);

        $i0 = lengthof $r4;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeBinary(byte[],int,int,int,java.lang.StringBuilder)>($r4, 0, $i0, 1, $r0);

        goto label13;

     label02:
        $r3 = <com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction NUMERIC>;

        if $r2 != $r3 goto label03;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(902);

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder)>($r1, 0, $i0, $r0);

        goto label13;

     label03:
        $r4 = null;

        $i1 = 0;

        $i2 = 0;

        $b3 = 0;

     label04:
        if $i1 >= $i0 goto label13;

        $i4 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int determineConsecutiveDigitCount(java.lang.CharSequence,int)>($r1, $i1);

        if $i4 < 13 goto label05;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(902);

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder)>($r1, $i1, $i4, $r0);

        $i1 = $i1 + $i4;

        $i2 = 0;

        $b3 = 2;

        goto label04;

     label05:
        $i5 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int determineConsecutiveTextCount(java.lang.CharSequence,int)>($r1, $i1);

        if $i5 >= 5 goto label11;

        if $i4 != $i0 goto label06;

        goto label11;

     label06:
        if $r4 != null goto label07;

        $r4 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] getBytesForMessage(java.lang.String)>($r1);

     label07:
        $i5 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int)>($r1, $r4, $i1);

        $i4 = $i5;

        if $i5 != 0 goto label08;

        $i4 = 1;

     label08:
        if $i4 != 1 goto label09;

        if $b3 != 0 goto label09;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeBinary(byte[],int,int,int,java.lang.StringBuilder)>($r4, $i1, 1, 0, $r0);

        goto label10;

     label09:
        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeBinary(byte[],int,int,int,java.lang.StringBuilder)>($r4, $i1, $i4, $b3, $r0);

        $i2 = 0;

        $b3 = 1;

     label10:
        $i1 = $i1 + $i4;

        goto label04;

     label11:
        if $b3 == 0 goto label12;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(900);

        $i2 = 0;

        $b3 = 0;

     label12:
        $i2 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int)>($r1, $i1, $i5, $r0, $i2);

        $i1 = $i1 + $i5;

        goto label04;

     label13:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static void encodeNumeric(java.lang.String, int, int, java.lang.StringBuilder)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.math.BigInteger $r3, $r4, $r7, $r8;
        java.lang.String $r0, $r6;
        boolean $z0;
        char $c6;
        java.lang.StringBuilder $r1, $r2, $r5, $r9;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.StringBuilder;

        $r5 = new java.lang.StringBuilder;

        $r2 = $r5;

        $i3 = $i1 / 3;

        $i3 = $i3 + 1;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(900L);

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        $i3 = 0;

     label1:
        $i4 = -1;

        $i4 = $i1 + $i4;

        if $i3 >= $i4 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $i4 = $i1 - $i3;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(44, $i4);

        $r9 = new java.lang.StringBuilder;

        $r5 = $r9;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(49);

        $i5 = $i0 + $i3;

        $i2 = $i5 + $i4;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i5, $i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.math.BigInteger;

        $r7 = $r8;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

     label2:
        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r3);

        $i2 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        $c6 = (char) $i2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r3);

        $r7 = $r8;

        $z0 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i5 = -1;

        $i2 = $i2 + $i5;

     label3:
        if $i2 < 0 goto label4;

        $c6 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $i5 = -1;

        $i2 = $i2 + $i5;

        goto label3;

     label4:
        $i3 = $i3 + $i4;

        goto label1;

     label5:
        return;
    }

    public static int encodeText(java.lang.CharSequence, int, int, java.lang.StringBuilder, int)
    {
        byte[] $r3;
        java.lang.CharSequence $r0;
        char $c5, $c7;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i8;
        java.lang.StringBuilder $r1, $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.StringBuilder;

        $i2 := @parameter4: int;

        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i3 = 0;

     label01:
        $i4 = $i0 + $i3;

        $c5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i4);

        if $i2 == 0 goto label14;

        if $i2 == 1 goto label09;

        if $i2 == 2 goto label04;

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isPunctuation(char)>($c5);

        if $z0 == 0 goto label02;

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $i4 = (int) $c5;

        $b6 = $r3[$i4];

        $c5 = (char) $b6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label02:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

     label03:
        $i2 = 0;

        goto label01;

     label04:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isMixed(char)>($c5);

        if $z0 == 0 goto label05;

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        $i4 = (int) $c5;

        $b6 = $r3[$i4];

        $c5 = (char) $b6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label05:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaUpper(char)>($c5);

        if $z0 == 0 goto label06;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(28);

        goto label03;

     label06:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaLower(char)>($c5);

        if $z0 == 0 goto label07;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(27);

        goto label17;

     label07:
        $i4 = $i4 + 1;

        if $i4 >= $i1 goto label08;

        $c7 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i4);

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isPunctuation(char)>($c7);

        if $z0 == 0 goto label08;

        $i2 = 3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(25);

        goto label01;

     label08:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $i4 = (int) $c5;

        $b6 = $r3[$i4];

        $c5 = (char) $b6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label09:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaLower(char)>($c5);

        if $z0 == 0 goto label11;

        $i4 = (int) $c5;

        if $i4 != 32 goto label10;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(26);

        goto label21;

     label10:
        $i4 = (int) $c5;

        $i8 = -97;

        $i4 = $i4 + $i8;

        $c5 = (char) $i4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label11:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaUpper(char)>($c5);

        if $z0 == 0 goto label12;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(27);

        $i4 = (int) $c5;

        $i8 = -65;

        $i4 = $i4 + $i8;

        $c5 = (char) $i4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label12:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isMixed(char)>($c5);

        if $z0 == 0 goto label13;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(28);

        goto label19;

     label13:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $i4 = (int) $c5;

        $b6 = $r3[$i4];

        $c5 = (char) $b6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label14:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaUpper(char)>($c5);

        if $z0 == 0 goto label16;

        $i4 = (int) $c5;

        if $i4 != 32 goto label15;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(26);

        goto label21;

     label15:
        $i4 = (int) $c5;

        $i8 = -65;

        $i4 = $i4 + $i8;

        $c5 = (char) $i4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label21;

     label16:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaLower(char)>($c5);

        if $z0 == 0 goto label18;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(27);

     label17:
        $i2 = 1;

        goto label01;

     label18:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isMixed(char)>($c5);

        if $z0 == 0 goto label20;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(28);

     label19:
        $i2 = 2;

        goto label01;

     label20:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $i4 = (int) $c5;

        $b6 = $r3[$i4];

        $c5 = (char) $b6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

     label21:
        $i3 = $i3 + 1;

        if $i3 < $i1 goto label01;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i1 = 0;

        $c5 = 0;

     label22:
        if $i1 >= $i0 goto label27;

        $i3 = $i1 % 2;

        if $i3 == 0 goto label23;

        $z0 = 1;

        goto label24;

     label23:
        $z0 = 0;

     label24:
        if $z0 == 0 goto label25;

        $i3 = $c5 * 30;

        $c5 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i1);

        $i4 = (int) $c5;

        $i3 = $i3 + $i4;

        $c5 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label26;

     label25:
        $c5 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i1);

     label26:
        $i1 = $i1 + 1;

        goto label22;

     label27:
        $i0 = $i0 % 2;

        if $i0 == 0 goto label28;

        $i0 = $c5 * 30;

        $i0 = $i0 + 29;

        $c5 = (char) $i0;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

     label28:
        return $i2;
    }

    public static byte[] getBytesForMessage(java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        return $r0;
    }

    public static boolean isAlphaLower(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 == 32 goto label2;

        $i1 = (int) $c0;

        if $i1 < 97 goto label1;

        $i1 = (int) $c0;

        if $i1 > 122 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isAlphaUpper(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 == 32 goto label2;

        $i1 = (int) $c0;

        if $i1 < 65 goto label1;

        $i1 = (int) $c0;

        if $i1 > 90 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isDigit(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 < 48 goto label1;

        $i1 = (int) $c0;

        if $i1 > 57 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isMixed(char)
    {
        byte[] $r0;
        byte $b1;
        int $i2, $i3;
        char $c0;

        $c0 := @parameter0: char;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        $i2 = (int) $c0;

        $b1 = $r0[$i2];

        $i2 = (int) $b1;

        $i3 = -1;

        if $i2 == $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isPunctuation(char)
    {
        byte[] $r0;
        byte $b1;
        int $i2, $i3;
        char $c0;

        $c0 := @parameter0: char;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $i2 = (int) $c0;

        $b1 = $r0[$i2];

        $i2 = (int) $b1;

        $i3 = -1;

        if $i2 == $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isText(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 == 9 goto label2;

        $i1 = (int) $c0;

        if $i1 == 10 goto label2;

        $i1 = (int) $c0;

        if $i1 == 13 goto label2;

        $i1 = (int) $c0;

        if $i1 < 32 goto label1;

        $i1 = (int) $c0;

        if $i1 > 126 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
