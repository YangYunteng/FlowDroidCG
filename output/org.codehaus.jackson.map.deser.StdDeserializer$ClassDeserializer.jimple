public final class org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer extends org.codehaus.jackson.map.deser.StdScalarDeserializer
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Class;");

        return;
    }

    public java.lang.Class deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r2, $r4;
        org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.JsonMappingException $r8;
        java.lang.Class $r6;
        java.lang.ClassNotFoundException $r7;
        java.lang.String $r5;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r4 != $r2 goto label4;

     label1:
        $r5 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r6 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>($r6, $r7);

        throw $r8;

     label4:
        $r6 = r0.<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class _valueClass>;

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r6);

        throw $r8;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer r0;
        java.lang.Class $r2;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer: java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }
}
