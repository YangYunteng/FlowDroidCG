public abstract class com.google.common.collect.ImmutableBiMap extends com.google.common.collect.ImmutableBiMapFauxverideShim implements com.google.common.collect.BiMap
{

    public void <init>()
    {
        com.google.common.collect.ImmutableBiMap r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        specialinvoke r0.<com.google.common.collect.ImmutableBiMapFauxverideShim: void <init>()>();

        return;
    }

    public static com.google.common.collect.ImmutableBiMap$Builder builder()
    {
        com.google.common.collect.ImmutableBiMap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableBiMap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableBiMap$Builder builderWithExpectedSize(int)
    {
        int $i0;
        com.google.common.collect.ImmutableBiMap$Builder $r0;

        $i0 := @parameter0: int;

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "expectedSize");

        $r0 = new com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableBiMap$Builder: void <init>(int)>($i0);

        return $r0;
    }

    public static com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable)
    {
        java.util.Map$Entry $r4;
        java.lang.Object[] $r2;
        com.google.common.collect.RegularImmutableBiMap $r3;
        java.lang.Iterable $r0;
        com.google.common.collect.ImmutableBiMap $r7;
        int $i0;
        java.lang.Object $r5, $r6;
        java.util.Map$Entry[] $r1;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 = <com.google.common.collect.ImmutableMap: java.util.Map$Entry[] EMPTY_ENTRY_ARRAY>;

        $r2 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable,java.lang.Object[])>($r0, $r1);

        $r1 = (java.util.Map$Entry[]) $r2;

        $i0 = lengthof $r1;

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        $r3 = staticinvoke <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap fromEntries(java.util.Map$Entry[])>($r1);

        return $r3;

     label1:
        $r4 = $r1[0];

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $r7;

     label2:
        $r7 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap of()>();

        return $r7;
    }

    public static com.google.common.collect.ImmutableBiMap copyOf(java.util.Map)
    {
        com.google.common.collect.ImmutableBiMap $r1;
        java.util.Map $r0;
        java.util.Set $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $z0 = $r0 instanceof com.google.common.collect.ImmutableBiMap;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.collect.ImmutableBiMap) $r0;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: boolean isPartialView()>();

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r1 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable)>($r2);

        return $r1;
    }

    public static com.google.common.collect.ImmutableBiMap of()
    {
        com.google.common.collect.RegularImmutableBiMap r0;

        r0 = <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap EMPTY>;

        return r0;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        com.google.common.collect.SingletonImmutableBiMap $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new com.google.common.collect.SingletonImmutableBiMap;

        specialinvoke $r2.<com.google.common.collect.SingletonImmutableBiMap: void <init>(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $r2;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.util.Map$Entry $r5;
        com.google.common.collect.RegularImmutableBiMap $r6;
        java.lang.Object $r0, $r1, $r2, $r3;
        java.util.Map$Entry[] $r4;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.lang.Object;

        $r4 = newarray (java.util.Map$Entry)[2];

        $r5 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4[0] = $r5;

        $r5 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r0, $r1);

        $r4[1] = $r5;

        $r6 = staticinvoke <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap fromEntries(java.util.Map$Entry[])>($r4);

        return $r6;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.util.Map$Entry $r7;
        com.google.common.collect.RegularImmutableBiMap $r8;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5;
        java.util.Map$Entry[] $r6;

        $r4 := @parameter0: java.lang.Object;

        $r5 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.lang.Object;

        $r2 := @parameter4: java.lang.Object;

        $r3 := @parameter5: java.lang.Object;

        $r6 = newarray (java.util.Map$Entry)[3];

        $r7 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r6[0] = $r7;

        $r7 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r0, $r1);

        $r6[1] = $r7;

        $r7 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r6[2] = $r7;

        $r8 = staticinvoke <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap fromEntries(java.util.Map$Entry[])>($r6);

        return $r8;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.util.Map$Entry $r9;
        com.google.common.collect.RegularImmutableBiMap $r10;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.util.Map$Entry[] $r8;

        $r6 := @parameter0: java.lang.Object;

        $r7 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.lang.Object;

        $r2 := @parameter4: java.lang.Object;

        $r3 := @parameter5: java.lang.Object;

        $r4 := @parameter6: java.lang.Object;

        $r5 := @parameter7: java.lang.Object;

        $r8 = newarray (java.util.Map$Entry)[4];

        $r9 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8[0] = $r9;

        $r9 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r0, $r1);

        $r8[1] = $r9;

        $r9 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r8[2] = $r9;

        $r9 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r8[3] = $r9;

        $r10 = staticinvoke <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap fromEntries(java.util.Map$Entry[])>($r8);

        return $r10;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.util.Map$Entry $r11;
        com.google.common.collect.RegularImmutableBiMap $r12;
        java.lang.Object $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.util.Map$Entry[] $r10;

        $r8 := @parameter0: java.lang.Object;

        $r9 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.lang.Object;

        $r2 := @parameter4: java.lang.Object;

        $r3 := @parameter5: java.lang.Object;

        $r4 := @parameter6: java.lang.Object;

        $r5 := @parameter7: java.lang.Object;

        $r6 := @parameter8: java.lang.Object;

        $r7 := @parameter9: java.lang.Object;

        $r10 = newarray (java.util.Map$Entry)[5];

        $r11 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10[0] = $r11;

        $r11 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r0, $r1);

        $r10[1] = $r11;

        $r11 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r10[2] = $r11;

        $r11 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r10[3] = $r11;

        $r11 = staticinvoke <com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r10[4] = $r11;

        $r12 = staticinvoke <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap fromEntries(java.util.Map$Entry[])>($r10);

        return $r12;
    }

    public static java.util.stream.Collector toImmutableBiMap(java.util.function.Function, java.util.function.Function)
    {
        java.util.stream.Collector $r1;
        java.util.function.Function $r0, $r2;

        $r2 := @parameter0: java.util.function.Function;

        $r0 := @parameter1: java.util.function.Function;

        $r1 = staticinvoke <com.google.common.collect.CollectCollectors: java.util.stream.Collector toImmutableBiMap(java.util.function.Function,java.util.function.Function)>($r2, $r0);

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection createValues()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet createValues()>();

        return $r1;
    }

    public final com.google.common.collect.ImmutableSet createValues()
    {
        com.google.common.collect.ImmutableBiMap r0;
        java.lang.AssertionError $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("should never be called");

        throw $r1;
    }

    public java.lang.Object forcePut(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableBiMap r0;
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile com.google.common.collect.BiMap inverse()
    {
        com.google.common.collect.ImmutableBiMap r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        return r0;
    }

    public abstract com.google.common.collect.ImmutableBiMap inverse();

    public volatile com.google.common.collect.ImmutableCollection values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet values()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet values()>();

        return $r1;
    }

    public volatile java.util.Set values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet values()>();

        return $r1;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableBiMap$SerializedForm $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = new com.google.common.collect.ImmutableBiMap$SerializedForm;

        specialinvoke $r1.<com.google.common.collect.ImmutableBiMap$SerializedForm: void <init>(com.google.common.collect.ImmutableBiMap)>(r0);

        return $r1;
    }
}
