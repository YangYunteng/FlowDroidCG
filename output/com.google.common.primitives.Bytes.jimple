public final class com.google.common.primitives.Bytes extends java.lang.Object
{

    public void <init>()
    {
        com.google.common.primitives.Bytes r0;

        r0 := @this: com.google.common.primitives.Bytes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int access$000(byte[], byte, int, int)
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i1 = staticinvoke <com.google.common.primitives.Bytes: int indexOf(byte[],byte,int,int)>($r0, $b0, $i1, $i2);

        return $i1;
    }

    public static int access$100(byte[], byte, int, int)
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i1 = staticinvoke <com.google.common.primitives.Bytes: int lastIndexOf(byte[],byte,int,int)>($r0, $b0, $i1, $i2);

        return $i1;
    }

    public static transient java.util.List asList(byte[])
    {
        byte[] $r1;
        java.util.List $r0;
        int $i0;
        com.google.common.primitives.Bytes$ByteArrayAsList $r2;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;

     label1:
        $r2 = new com.google.common.primitives.Bytes$ByteArrayAsList;

        specialinvoke $r2.<com.google.common.primitives.Bytes$ByteArrayAsList: void <init>(byte[])>($r1);

        return $r2;
    }

    public static transient byte[] concat(byte[][])
    {
        byte[] $r1, $r2;
        byte[][] $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: byte[][];

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $i0 = lengthof $r1;

        $i3 = $i3 + $i0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r1 = newarray (byte)[$i3];

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $r2 = $r0[$i2];

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i3, $i0);

        $i0 = lengthof $r2;

        $i3 = $i3 + $i0;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        return $r1;
    }

    public static boolean contains(byte[], byte)
    {
        byte[] $r0;
        byte $b0, $b2;
        int $i1, $i3, $i4, $i5;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i1 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label3;

        $b2 = $r0[$i3];

        $i4 = (int) $b2;

        $i5 = (int) $b0;

        if $i4 != $i5 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static byte[] ensureCapacity(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $z0 = 1;

        if $i1 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z1, "Invalid minLength: %s", $i1);

        if $i0 < 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "Invalid padding: %s", $i0);

        $i2 = lengthof $r0;

        if $i2 >= $i1 goto label5;

        $i1 = $i1 + $i0;

        $r0 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r0, $i1);

     label5:
        return $r0;
    }

    public static int hashCode(byte)
    {
        int $i1;
        byte $b0;

        $b0 := @parameter0: byte;

        $i1 = (int) $b0;

        return $i1;
    }

    public static int indexOf(byte[], byte)
    {
        int $i1;
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i1 = lengthof $r0;

        $i1 = staticinvoke <com.google.common.primitives.Bytes: int indexOf(byte[],byte,int,int)>($r0, $b0, 0, $i1);

        return $i1;
    }

    public static int indexOf(byte[], byte, int, int)
    {
        byte[] $r0;
        byte $b0, $b2;
        int $i1, $i3, $i4, $i5;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i3 := @parameter2: int;

        $i1 := @parameter3: int;

     label1:
        if $i3 >= $i1 goto label3;

        $b2 = $r0[$i3];

        $i4 = (int) $b2;

        $i5 = (int) $b0;

        if $i4 != $i5 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        $i3 = -1;

        return $i3;
    }

    public static int indexOf(byte[], byte[])
    {
        byte[] $r0, $r1;
        byte $b0, $b4;
        int $i1, $i2, $i3, $i5;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "array");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "target");

        $i1 = lengthof $r0;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i1 = 0;

     label2:
        $i2 = lengthof $r1;

        $i3 = lengthof $r0;

        $i2 = $i2 - $i3;

        $i2 = $i2 + 1;

        if $i1 >= $i2 goto label6;

        $i2 = 0;

     label3:
        $i3 = lengthof $r0;

        if $i2 >= $i3 goto label5;

        $i3 = $i1 + $i2;

        $b4 = $r1[$i3];

        $b0 = $r0[$i2];

        $i3 = (int) $b4;

        $i5 = (int) $b0;

        if $i3 == $i5 goto label4;

        $i1 = $i1 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        return $i1;

     label6:
        $i1 = -1;

        return $i1;
    }

    public static int lastIndexOf(byte[], byte)
    {
        int $i1;
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i1 = lengthof $r0;

        $i1 = staticinvoke <com.google.common.primitives.Bytes: int lastIndexOf(byte[],byte,int,int)>($r0, $b0, 0, $i1);

        return $i1;
    }

    public static int lastIndexOf(byte[], byte, int, int)
    {
        byte[] $r0;
        byte $b0, $b2;
        int $i1, $i3, $i4, $i5;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i1 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = -1;

        $i3 = $i3 + $i4;

     label1:
        if $i3 < $i1 goto label3;

        $b2 = $r0[$i3];

        $i4 = (int) $b2;

        $i5 = (int) $b0;

        if $i4 != $i5 goto label2;

        return $i3;

     label2:
        $i4 = -1;

        $i3 = $i3 + $i4;

        goto label1;

     label3:
        $i1 = -1;

        return $i1;
    }

    public static void reverse(byte[])
    {
        int $i0;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = lengthof $r0;

        staticinvoke <com.google.common.primitives.Bytes: void reverse(byte[],int,int)>($r0, 0, $i0);

        return;
    }

    public static void reverse(byte[], int, int)
    {
        byte[] $r0;
        byte $b0, $b4;
        int $i1, $i2, $i3;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i3 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i1, $i2, $i3);

        $i3 = -1;

        $i2 = $i2 + $i3;

     label1:
        if $i1 >= $i2 goto label2;

        $b4 = $r0[$i1];

        $b0 = $r0[$i2];

        $r0[$i1] = $b0;

        $r0[$i2] = $b4;

        $i1 = $i1 + 1;

        $i3 = -1;

        $i2 = $i2 + $i3;

        goto label1;

     label2:
        return;
    }

    public static byte[] toArray(java.util.Collection)
    {
        byte[] $r0;
        java.lang.Object[] $r3;
        java.util.Collection $r1;
        com.google.common.primitives.Bytes$ByteArrayAsList $r2;
        byte $b2;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.Number $r5;
        boolean $z0;

        $r1 := @parameter0: java.util.Collection;

        $z0 = $r1 instanceof com.google.common.primitives.Bytes$ByteArrayAsList;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.primitives.Bytes$ByteArrayAsList) $r1;

        $r0 = virtualinvoke $r2.<com.google.common.primitives.Bytes$ByteArrayAsList: byte[] toByteArray()>();

        return $r0;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray()>();

        $i0 = lengthof $r3;

        $r0 = newarray (byte)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r4 = $r3[$i1];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r5 = (java.lang.Number) $r4;

        $b2 = virtualinvoke $r5.<java.lang.Number: byte byteValue()>();

        $r0[$i1] = $b2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r0;
    }
}
