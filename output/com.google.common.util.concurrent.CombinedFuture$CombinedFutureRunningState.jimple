public final class com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState extends com.google.common.util.concurrent.AggregateFuture$RunningState
{
    public com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask task;
    public final com.google.common.util.concurrent.CombinedFuture this$0;

    public void <init>(com.google.common.util.concurrent.CombinedFuture, com.google.common.collect.ImmutableCollection, boolean, com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask)
    {
        com.google.common.util.concurrent.CombinedFuture $r1;
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask $r3;
        com.google.common.collect.ImmutableCollection $r2;
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState;

        $r1 := @parameter0: com.google.common.util.concurrent.CombinedFuture;

        $r2 := @parameter1: com.google.common.collect.ImmutableCollection;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask;

        r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState: com.google.common.util.concurrent.CombinedFuture this$0> = $r1;

        specialinvoke r0.<com.google.common.util.concurrent.AggregateFuture$RunningState: void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection,boolean,boolean)>($r1, $r2, $z0, 0);

        r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState: com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask task> = $r3;

        return;
    }

    public void collectOneValue(boolean, int, java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        return;
    }

    public void handleAllCompleted()
    {
        com.google.common.util.concurrent.CombinedFuture $r2;
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask $r1;
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState;

        $r1 = r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState: com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask task>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask: void execute()>();

        return;

     label1:
        $r2 = r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState: com.google.common.util.concurrent.CombinedFuture this$0>;

        $z0 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        return;
    }

    public void interruptTask()
    {
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask $r1;
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState r0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState;

        $r1 = r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState: com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask task>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.common.util.concurrent.InterruptibleTask: void interruptTask()>();

     label1:
        return;
    }

    public void releaseResourcesAfterFailure()
    {
        com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState r0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState;

        specialinvoke r0.<com.google.common.util.concurrent.AggregateFuture$RunningState: void releaseResourcesAfterFailure()>();

        r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState: com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask task> = null;

        return;
    }
}
