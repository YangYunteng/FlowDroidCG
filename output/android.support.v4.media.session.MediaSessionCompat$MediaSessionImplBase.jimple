public class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase extends java.lang.Object implements android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
{
    public static final int RCC_PLAYSTATE_NONE;
    public final android.media.AudioManager mAudioManager;
    public volatile android.support.v4.media.session.MediaSessionCompat$Callback mCallback;
    public boolean mCaptioningEnabled;
    public final android.content.Context mContext;
    public final android.os.RemoteCallbackList mControllerCallbacks;
    public boolean mDestroyed;
    public android.os.Bundle mExtras;
    public int mFlags;
    public android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler;
    public boolean mIsActive;
    public boolean mIsMbrRegistered;
    public boolean mIsRccRegistered;
    public int mLocalStream;
    public final java.lang.Object mLock;
    public final android.content.ComponentName mMediaButtonReceiverComponentName;
    public final android.app.PendingIntent mMediaButtonReceiverIntent;
    public android.support.v4.media.MediaMetadataCompat mMetadata;
    public final java.lang.String mPackageName;
    public java.util.List mQueue;
    public java.lang.CharSequence mQueueTitle;
    public int mRatingType;
    public final android.media.RemoteControlClient mRcc;
    public b.q.E mRemoteUserInfo;
    public int mRepeatMode;
    public android.app.PendingIntent mSessionActivity;
    public int mShuffleMode;
    public android.support.v4.media.session.PlaybackStateCompat mState;
    public final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub;
    public final java.lang.String mTag;
    public final android.support.v4.media.session.MediaSessionCompat$Token mToken;
    public b.q.I$a mVolumeCallback;
    public b.q.I mVolumeProvider;
    public int mVolumeType;

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.content.Context $r3;
        android.content.ComponentName $r1;
        android.os.RemoteCallbackList $r6;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r7;
        android.app.PendingIntent $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Token $r11;
        java.lang.IllegalArgumentException $r13;
        android.media.AudioManager $r9;
        android.media.RemoteControlClient $r12;
        java.lang.Object $r5;
        java.lang.String $r4, $r8;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub $r10;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $r1 := @parameter2: android.content.ComponentName;

        $r2 := @parameter3: android.app.PendingIntent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock> = $r5;

        $r6 = new android.os.RemoteCallbackList;

        specialinvoke $r6.<android.os.RemoteCallbackList: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks> = $r6;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        $r7 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;

        specialinvoke $r7.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>(r0);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I$a mVolumeCallback> = $r7;

        if $r1 == null goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext> = $r3;

        $r8 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName> = $r8;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r9 = (android.media.AudioManager) $r5;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager> = $r9;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag> = $r4;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName> = $r1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent> = $r2;

        $r10 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub;

        specialinvoke $r10.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>(r0);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub> = $r10;

        $r11 = new android.support.v4.media.session.MediaSessionCompat$Token;

        $r10 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub>;

        specialinvoke $r11.<android.support.v4.media.session.MediaSessionCompat$Token: void <init>(java.lang.Object)>($r10);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r11;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream> = 3;

        $r12 = new android.media.RemoteControlClient;

        specialinvoke $r12.<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>($r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc> = $r12;

        return;

     label1:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MediaButtonReceiver component may not be null.");

        throw $r13;
    }

    private void sendCaptioningEnabled(boolean)
    {
        android.os.IInterface $r3;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onCaptioningEnabledChanged(boolean)>($z0);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendEvent(java.lang.String, android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.IInterface $r5;
        android.os.RemoteException $r2;
        android.os.RemoteCallbackList $r4;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r6;
        java.lang.String $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r5 = virtualinvoke $r4.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r6 = (android.support.v4.media.session.IMediaControllerCallback) $r5;

     label2:
        interfaceinvoke $r6.<android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>($r3, $r1);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendExtras(android.os.Bundle)
    {
        android.os.Bundle $r2;
        android.os.IInterface $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.os.Bundle;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onExtrasChanged(android.os.Bundle)>($r2);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.os.IInterface $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.MediaMetadataCompat $r2;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>($r2);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendQueue(java.util.List)
    {
        android.os.IInterface $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.util.List $r2;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: java.util.List;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)>($r2);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendQueueTitle(java.lang.CharSequence)
    {
        java.lang.CharSequence $r2;
        android.os.IInterface $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>($r2);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendRepeatMode(int)
    {
        android.os.IInterface $r3;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2;
        android.support.v4.media.session.IMediaControllerCallback $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i1 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

     label1:
        if $i1 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i1);

        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onRepeatModeChanged(int)>($i0);

     label3:
        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendSessionDestroyed()
    {
        android.os.IInterface $r3;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()>();

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void kill()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendShuffleMode(int)
    {
        android.os.IInterface $r3;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2;
        android.support.v4.media.session.IMediaControllerCallback $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i1 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

     label1:
        if $i1 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i1);

        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChanged(int)>($i0);

     label3:
        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.os.IInterface $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r5;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>($r2);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void adjustVolume(int, int)
    {
        int $i0, $i1, $i2;
        b.q.I $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.media.AudioManager $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<b.q.I: void a(int)>($i0);

        return;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        virtualinvoke $r2.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, $i0, $i1);

     label2:
        return;
    }

    public android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.Parcelable $r4;
        android.media.RemoteControlClient$MetadataEditor $r3;
        long $l0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.graphics.Bitmap$Config $r6;
        android.media.RemoteControlClient $r2;
        android.graphics.Bitmap $r5;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        $r3 = virtualinvoke $r2.<android.media.RemoteControlClient: android.media.RemoteControlClient$MetadataEditor editMetadata(boolean)>(1);

        if $r1 != null goto label01;

        return $r3;

     label01:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ART");

        if $z0 == 0 goto label03;

        $r4 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.media.metadata.ART");

        $r5 = (android.graphics.Bitmap) $r4;

        if $r5 == null goto label02;

        $r6 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r5 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r6, 0);

     label02:
        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putBitmap(int,android.graphics.Bitmap)>(100, $r5);

        goto label05;

     label03:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ALBUM_ART");

        if $z0 == 0 goto label05;

        $r4 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.media.metadata.ALBUM_ART");

        $r5 = (android.graphics.Bitmap) $r4;

        if $r5 == null goto label04;

        $r6 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r5 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r6, 0);

     label04:
        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putBitmap(int,android.graphics.Bitmap)>(100, $r5);

     label05:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ALBUM");

        if $z0 == 0 goto label06;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.ALBUM");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(1, $r7);

     label06:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ALBUM_ARTIST");

        if $z0 == 0 goto label07;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.ALBUM_ARTIST");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(13, $r7);

     label07:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ARTIST");

        if $z0 == 0 goto label08;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.ARTIST");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(2, $r7);

     label08:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.AUTHOR");

        if $z0 == 0 goto label09;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.AUTHOR");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(3, $r7);

     label09:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.COMPILATION");

        if $z0 == 0 goto label10;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.COMPILATION");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(15, $r7);

     label10:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.COMPOSER");

        if $z0 == 0 goto label11;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.COMPOSER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(4, $r7);

     label11:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.DATE");

        if $z0 == 0 goto label12;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.DATE");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(5, $r7);

     label12:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.DISC_NUMBER");

        if $z0 == 0 goto label13;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("android.media.metadata.DISC_NUMBER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>(14, $l0);

     label13:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z0 == 0 goto label14;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("android.media.metadata.DURATION");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>(9, $l0);

     label14:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.GENRE");

        if $z0 == 0 goto label15;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.GENRE");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(6, $r7);

     label15:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.TITLE");

        if $z0 == 0 goto label16;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.TITLE");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(7, $r7);

     label16:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.TRACK_NUMBER");

        if $z0 == 0 goto label17;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("android.media.metadata.TRACK_NUMBER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>(0, $l0);

     label17:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.WRITER");

        if $z0 == 0 goto label18;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.WRITER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(11, $r7);

     label18:
        return $r3;
    }

    public java.lang.String getCallingPackage()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }

    public b.q.E getCurrentControllerInfo()
    {
        java.lang.Throwable $r2;
        b.q.E r3;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.E mRemoteUserInfo>;

        exitmonitor $r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }

    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    {
        java.lang.Throwable $r2;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        exitmonitor $r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getRccStateFromState(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label11;
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label05;
            case 9: goto label03;
            case 10: goto label02;
            case 11: goto label02;
            default: goto label01;
        };

     label01:
        $i0 = -1;

        return $i0;

     label02:
        return 6;

     label03:
        return 7;

     label04:
        return 9;

     label05:
        return 8;

     label06:
        return 5;

     label07:
        return 4;

     label08:
        return 3;

     label09:
        return 2;

     label10:
        return 1;

     label11:
        return 0;
    }

    public int getRccTransportControlFlagsFromActions(long)
    {
        short $s3;
        byte $b2;
        long $l0, $l1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $l0 := @parameter0: long;

        $l1 = 1L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $s3 = 32;

        goto label2;

     label1:
        $s3 = 0;

     label2:
        $l1 = 2L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $s3 = $s3 | 16;

     label3:
        $l1 = 4L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label4;

        $s3 = $s3 | 4;

     label4:
        $l1 = 8L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        $s3 = $s3 | 2;

     label5:
        $l1 = 16L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label6;

        $s3 = $s3 | 1;

     label6:
        $l1 = 32L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label7;

        $s3 = $s3 | 128;

     label7:
        $l1 = 64L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label8;

        $s3 = $s3 | 64;

     label8:
        $l0 = $l0 & 512L;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label9;

        $s3 = $s3 | 8;

     label9:
        return $s3;
    }

    public java.lang.Object getRemoteControlClient()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return r1;
    }

    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        return z0;
    }

    public void postToHandler(int, int, int, java.lang.Object, android.os.Bundle)
    {
        java.lang.Throwable $r7;
        android.os.Bundle $r1, $r6;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r4;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.Message $r5;
        int $i0, $i1, $i2;
        java.lang.Object $r2, $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r3 := @parameter3: java.lang.Object;

        $r1 := @parameter4: android.os.Bundle;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        if $r4 == null goto label3;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>($i0, $i1, $i2, $r3);

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("data_calling_pkg", "android.media.session.MediaController");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("data_calling_pid", $i0);

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("data_calling_uid", $i0);

        if $r1 == null goto label2;

        virtualinvoke $r6.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("data_extras", $r1);

     label2:
        virtualinvoke $r5.<android.os.Message: void setData(android.os.Bundle)>($r6);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label3:
        exitmonitor $r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void registerMediaButtonEventReceiver(android.app.PendingIntent, android.content.ComponentName)
    {
        android.content.ComponentName $r1;
        android.app.PendingIntent $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.app.PendingIntent;

        $r1 := @parameter1: android.content.ComponentName;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        virtualinvoke $r3.<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>($r1);

        return;
    }

    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 1;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendSessionDestroyed()>();

        return;
    }

    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

        return;
    }

    public void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r2;
        android.os.IInterface $r4;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r2);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void setActive(boolean)
    {
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z1 := @parameter0: boolean;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = $z1;

        $z1 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        if $z1 == 0 goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r2);

     label2:
        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        java.lang.Throwable $r6;
        android.os.Looper $r1;
        android.os.Handler $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r5;
        java.lang.Object $r4;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        $r3 := @parameter1: android.os.Handler;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback> = $r2;

        if $r2 == null goto label7;

        if $r3 != null goto label1;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

     label1:
        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r4;

     label2:
        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        if $r5 == null goto label3;

        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label3:
        $r5 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler;

        $r1 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper)>(r0, $r1);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler> = $r5;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;

        virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$Callback: void setSessionImpl(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler)>(r0, $r3);

        exitmonitor $r4;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r6;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setCaptioningEnabled(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mCaptioningEnabled>;

        if $z1 == $z0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mCaptioningEnabled> = $z0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendCaptioningEnabled(boolean)>($z0);

     label1:
        return;
    }

    public void setCurrentControllerInfo(b.q.E)
    {
        java.lang.Throwable $r3;
        b.q.E $r2;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: b.q.E;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.E mRemoteUserInfo> = $r2;

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setExtras(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras> = $r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendExtras(android.os.Bundle)>($r1);

        return;
    }

    public void setFlags(int)
    {
        java.lang.Throwable $r2;
        int $i0;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags> = $i0;

        exitmonitor $r1;

     label2:
        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor $r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        return;
    }

    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        java.lang.Throwable $r6;
        android.os.Bundle $r4;
        android.media.RemoteControlClient$MetadataEditor $r5;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.MediaMetadataCompat$Builder $r2;
        android.support.v4.media.MediaMetadataCompat $r1;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        if $r1 == null goto label1;

        $r2 = new android.support.v4.media.MediaMetadataCompat$Builder;

        $i0 = <android.support.v4.media.session.MediaSessionCompat: int sMaxBitmapSize>;

        specialinvoke $r2.<android.support.v4.media.MediaMetadataCompat$Builder: void <init>(android.support.v4.media.MediaMetadataCompat,int)>($r1, $i0);

        $r1 = virtualinvoke $r2.<android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat build()>();

     label1:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label2:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata> = $r1;

        exitmonitor $r3;

     label3:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label4;

        return;

     label4:
        if $r1 != null goto label5;

        $r4 = null;

        goto label6;

     label5:
        $r4 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();

     label6:
        $r5 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle)>($r4);

        virtualinvoke $r5.<android.media.RemoteControlClient$MetadataEditor: void apply()>();

        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor $r3;

     label9:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        java.lang.Throwable $r4;
        long $l0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.media.RemoteControlClient $r3;
        int $i1;
        java.lang.Object $r2;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState> = $r1;

        exitmonitor $r2;

     label2:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label3;

        return;

     label3:
        if $r1 != null goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.RemoteControlClient: void setPlaybackState(int)>(0);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.RemoteControlClient: void setTransportControlFlags(int)>(0);

        return;

     label4:
        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setRccState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        $l0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        $i1 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int getRccTransportControlFlagsFromActions(long)>($l0);

        virtualinvoke $r3.<android.media.RemoteControlClient: void setTransportControlFlags(int)>($i1);

        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor $r2;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.media.AudioManager $r3;
        int $i0, $i1, $i2, $i3;
        b.q.I $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<b.q.I: void a(b.q.I$a)>(null);

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream> = $i0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        $r2 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>($i0);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i3 = virtualinvoke $r3.<android.media.AudioManager: int getStreamVolume(int)>($i3);

        specialinvoke $r2.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i1, $i0, 2, $i2, $i3);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r2);

        return;
    }

    public void setPlaybackToRemote(b.q.I)
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.IllegalArgumentException $r5;
        b.q.I$a $r4;
        int $i0, $i1, $i2, $i3, $i4;
        b.q.I $r1, $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: b.q.I;

        if $r1 == null goto label2;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<b.q.I: void a(b.q.I$a)>(null);

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 2;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider> = $r1;

        $r3 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        $i2 = virtualinvoke $r2.<b.q.I: int c()>();

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        $i3 = virtualinvoke $r2.<b.q.I: int b()>();

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        $i4 = virtualinvoke $r2.<b.q.I: int a()>();

        specialinvoke $r3.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r3);

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I$a mVolumeCallback>;

        virtualinvoke $r1.<b.q.I: void a(b.q.I$a)>($r4);

        return;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null");

        throw $r5;
    }

    public void setQueue(java.util.List)
    {
        java.util.List $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.util.List;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue> = $r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueue(java.util.List)>($r1);

        return;
    }

    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle> = $r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueueTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setRatingType(int)
    {
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = $i0;

        return;
    }

    public void setRccState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.media.RemoteControlClient $r1;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        $i0 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $i0 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int getRccStateFromState(int)>($i0);

        virtualinvoke $r1.<android.media.RemoteControlClient: void setPlaybackState(int)>($i0);

        return;
    }

    public void setRepeatMode(int)
    {
        int $i0, $i1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRepeatMode>;

        if $i1 == $i0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRepeatMode> = $i0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendRepeatMode(int)>($i0);

     label1:
        return;
    }

    public void setSessionActivity(android.app.PendingIntent)
    {
        java.lang.Throwable $r3;
        java.lang.Object $r1;
        android.app.PendingIntent $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.app.PendingIntent;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity> = $r2;

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setShuffleMode(int)
    {
        int $i0, $i1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mShuffleMode>;

        if $i1 == $i0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mShuffleMode> = $i0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendShuffleMode(int)>($i0);

     label1:
        return;
    }

    public void setVolumeTo(int, int)
    {
        int $i0, $i1, $i2;
        b.q.I $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.media.AudioManager $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: b.q.I mVolumeProvider>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<b.q.I: void b(int)>($i0);

        return;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        virtualinvoke $r2.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i2, $i0, $i1);

     label2:
        return;
    }

    public void unregisterMediaButtonEventReceiver(android.app.PendingIntent, android.content.ComponentName)
    {
        android.content.ComponentName $r1;
        android.app.PendingIntent $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 := @parameter0: android.app.PendingIntent;

        $r1 := @parameter1: android.content.ComponentName;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>($r1);

        return;
    }

    public boolean update()
    {
        android.media.RemoteControlClient $r4;
        android.content.ComponentName $r2;
        int $i0;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 == 0 goto label4;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 != 0 goto label1;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void registerMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 1;

        goto label2;

     label1:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 == 0 goto label2;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

     label2:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 != 0 goto label3;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label3;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 1;

        return 1;

     label3:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 == 0 goto label6;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label6;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r4.<android.media.RemoteControlClient: void setPlaybackState(int)>(0);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        goto label6;

     label4:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

     label5:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 == 0 goto label6;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r4.<android.media.RemoteControlClient: void setPlaybackState(int)>(0);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

     label6:
        return 0;
    }
}
