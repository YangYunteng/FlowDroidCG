public class com.caremark.caremark.util.flexbox.FlexboxHelper$Order extends java.lang.Object implements java.lang.Comparable
{
    public int index;
    public int order;

    public void <init>()
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$Order r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxHelper$Order;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(com.caremark.caremark.util.flexbox.FlexboxHelper$1)
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$1 $r1;
        com.caremark.caremark.util.flexbox.FlexboxHelper$Order r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxHelper$Order;

        $r1 := @parameter0: com.caremark.caremark.util.flexbox.FlexboxHelper$1;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: void <init>()>();

        return;
    }

    public int compareTo(com.caremark.caremark.util.flexbox.FlexboxHelper$Order)
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$Order r0, $r1;
        int $i0, $i1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxHelper$Order;

        $r1 := @parameter0: com.caremark.caremark.util.flexbox.FlexboxHelper$Order;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int order>;

        $i0 = $r1.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int order>;

        if $i1 == $i0 goto label1;

        $i0 = $i1 - $i0;

        return $i0;

     label1:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int index>;

        $i1 = $r1.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int index>;

        $i0 = $i0 - $i1;

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$Order r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxHelper$Order;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.caremark.caremark.util.flexbox.FlexboxHelper$Order) $r1;

        $i0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int compareTo(com.caremark.caremark.util.flexbox.FlexboxHelper$Order)>($r2);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$Order r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxHelper$Order;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Order{order=");

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int order>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", index=");

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxHelper$Order: int index>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
