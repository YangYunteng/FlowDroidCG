public abstract class com.google.android.gms.internal.clearcut.zzfg extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.gms.internal.clearcut.zzfg r0;

        r0 := @this: com.google.android.gms.internal.clearcut.zzfg;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void zzc(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        java.lang.IndexOutOfBoundsException $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.nio.ByteBuffer $r10;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i5, $i8;
        java.lang.String $r12;
        boolean $z0;
        java.lang.CharSequence $r9;
        char $c4, $c7;
        java.lang.ArrayIndexOutOfBoundsException $r15;
        com.google.android.gms.internal.clearcut.zzfi $r13;
        java.lang.StringBuilder $r11, $r14;

        $r9 := @parameter0: java.lang.CharSequence;

        $r10 := @parameter1: java.nio.ByteBuffer;

        $i0 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        $i1 = virtualinvoke $r10.<java.nio.ByteBuffer: int position()>();

        $i2 = $i1;

        $i3 = 0;

     label01:
        if $i3 >= $i0 goto label06;

     label02:
        $c4 = interfaceinvoke $r9.<java.lang.CharSequence: char charAt(int)>($i3);

     label03:
        $i5 = (int) $c4;

        if $i5 >= 128 goto label06;

        $i5 = $i1 + $i3;

        $b6 = (byte) $c4;

     label04:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i5, $b6);

     label05:
        $i3 = $i3 + 1;

        goto label01;

     label06:
        if $i3 != $i0 goto label09;

        $i0 = $i1 + $i3;

     label07:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

     label08:
        return;

     label09:
        $i2 = $i1 + $i3;

     label10:
        if $i3 >= $i0 goto label48;

     label11:
        $c4 = interfaceinvoke $r9.<java.lang.CharSequence: char charAt(int)>($i3);

     label12:
        $i1 = (int) $c4;

        if $i1 >= 128 goto label15;

        $b6 = (byte) $c4;

     label13:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i2, $b6);

     label14:
        goto label47;

     label15:
        $i1 = (int) $c4;

        if $i1 >= 2048 goto label21;

        $i1 = $i2 + 1;

        $i5 = (int) $c4;

        $i5 = $i5 >>> 6;

        $i5 = $i5 | 192;

        $b6 = (byte) $i5;

     label16:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i2, $b6);

     label17:
        $c4 = $c4 & 63;

        $c4 = $c4 | 128;

        $b6 = (byte) $c4;

     label18:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i1, $b6);

     label19:
        $i2 = $i1;

        goto label47;

     label20:
        $i2 = $i1;

        goto label50;

     label21:
        $i1 = (int) $c4;

        $i5 = 55296;

        if $i1 < $i5 goto label41;

        $i1 = 57343;

        $i5 = (int) $c4;

        if $i1 >= $i5 goto label22;

        goto label41;

     label22:
        $i1 = $i3 + 1;

        if $i1 == $i0 goto label38;

     label23:
        $c7 = interfaceinvoke $r9.<java.lang.CharSequence: char charAt(int)>($i1);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c4, $c7);

     label24:
        if $z0 == 0 goto label36;

     label25:
        $i5 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c4, $c7);

     label26:
        $i3 = $i2 + 1;

        $i8 = $i5 >>> 18;

        $i8 = $i8 | 240;

        $b6 = (byte) $i8;

     label27:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i2, $b6);

     label28:
        $i2 = $i3 + 1;

        $i8 = $i5 >>> 12;

        $i8 = $i8 & 63;

        $i8 = $i8 | 128;

        $b6 = (byte) $i8;

     label29:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i3, $b6);

     label30:
        $i3 = $i2 + 1;

        $i8 = $i5 >>> 6;

        $i8 = $i8 & 63;

        $i8 = $i8 | 128;

        $b6 = (byte) $i8;

     label31:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i2, $b6);

     label32:
        $i2 = $i5 & 63;

        $i2 = $i2 | 128;

        $b6 = (byte) $i2;

     label33:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i3, $b6);

     label34:
        $i2 = $i3;

        $i3 = $i1;

        goto label47;

     label35:
        $i2 = $i3;

        goto label37;

     label36:
        $i3 = $i1;

        goto label38;

     label37:
        $i3 = $i1;

        goto label50;

     label38:
        $r13 = new com.google.android.gms.internal.clearcut.zzfi;

     label39:
        specialinvoke $r13.<com.google.android.gms.internal.clearcut.zzfi: void <init>(int,int)>($i3, $i0);

     label40:
        throw $r13;

     label41:
        $i1 = $i2 + 1;

        $i5 = (int) $c4;

        $i5 = $i5 >>> 12;

        $i5 = $i5 | 224;

        $b6 = (byte) $i5;

     label42:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i2, $b6);

     label43:
        $i2 = $i1 + 1;

        $i5 = (int) $c4;

        $i5 = $i5 >>> 6;

        $i5 = $i5 & 63;

        $i5 = $i5 | 128;

        $b6 = (byte) $i5;

     label44:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i1, $b6);

     label45:
        $c4 = $c4 & 63;

        $c4 = $c4 | 128;

        $b6 = (byte) $c4;

     label46:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i2, $b6);

     label47:
        $i3 = $i3 + 1;

        $i2 = $i2 + 1;

        goto label10;

     label48:
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

     label49:
        return;

     label50:
        $i0 = virtualinvoke $r10.<java.nio.ByteBuffer: int position()>();

        $i1 = virtualinvoke $r10.<java.nio.ByteBuffer: int position()>();

        $i2 = $i2 - $i1;

        $i2 = $i2 + 1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i2);

        $i2 = $i0 + $i2;

        $r15 = new java.lang.ArrayIndexOutOfBoundsException;

        $c4 = interfaceinvoke $r9.<java.lang.CharSequence: char charAt(int)>($i3);

        $r14 = new java.lang.StringBuilder;

        $r11 = $r14;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(37);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        goto label51;

     label51:
        throw $r15;

     label52:
        $r0 := @caughtexception;

        goto label50;

     label53:
        $r1 := @caughtexception;

        goto label20;

     label54:
        $r2 := @caughtexception;

        goto label37;

     label55:
        $r3 := @caughtexception;

        goto label35;

     label56:
        $r4 := @caughtexception;

        goto label37;

     label57:
        $r5 := @caughtexception;

        goto label35;

     label58:
        $r6 := @caughtexception;

        goto label50;

     label59:
        $r7 := @caughtexception;

        goto label20;

     label60:
        $r8 := @caughtexception;

        goto label50;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label52;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label52;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label52;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label52;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label52;
        catch java.lang.IndexOutOfBoundsException from label16 to label17 with label53;
        catch java.lang.IndexOutOfBoundsException from label18 to label19 with label53;
        catch java.lang.IndexOutOfBoundsException from label23 to label24 with label54;
        catch java.lang.IndexOutOfBoundsException from label25 to label26 with label54;
        catch java.lang.IndexOutOfBoundsException from label27 to label28 with label55;
        catch java.lang.IndexOutOfBoundsException from label29 to label30 with label56;
        catch java.lang.IndexOutOfBoundsException from label31 to label32 with label57;
        catch java.lang.IndexOutOfBoundsException from label33 to label34 with label57;
        catch java.lang.IndexOutOfBoundsException from label39 to label40 with label58;
        catch java.lang.IndexOutOfBoundsException from label42 to label43 with label59;
        catch java.lang.IndexOutOfBoundsException from label44 to label45 with label60;
        catch java.lang.IndexOutOfBoundsException from label46 to label47 with label60;
        catch java.lang.IndexOutOfBoundsException from label48 to label49 with label60;
    }

    public abstract int zzb(int, byte[], int, int);

    public abstract int zzb(java.lang.CharSequence, byte[], int, int);

    public abstract void zzb(java.lang.CharSequence, java.nio.ByteBuffer);

    public final boolean zze(byte[], int, int)
    {
        com.google.android.gms.internal.clearcut.zzfg r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.android.gms.internal.clearcut.zzfg;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<com.google.android.gms.internal.clearcut.zzfg: int zzb(int,byte[],int,int)>(0, $r1, $i0, $i1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
