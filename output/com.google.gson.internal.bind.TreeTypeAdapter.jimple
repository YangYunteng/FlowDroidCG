public final class com.google.gson.internal.bind.TreeTypeAdapter extends com.google.gson.TypeAdapter
{
    public final com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context;
    public com.google.gson.TypeAdapter delegate;
    public final com.google.gson.JsonDeserializer deserializer;
    public final com.google.gson.Gson gson;
    public final com.google.gson.JsonSerializer serializer;
    public final com.google.gson.TypeAdapterFactory skipPast;
    public final com.google.gson.reflect.TypeToken typeToken;

    public void <init>(com.google.gson.JsonSerializer, com.google.gson.JsonDeserializer, com.google.gson.Gson, com.google.gson.reflect.TypeToken, com.google.gson.TypeAdapterFactory)
    {
        com.google.gson.reflect.TypeToken $r4;
        com.google.gson.Gson $r3;
        com.google.gson.JsonDeserializer $r2;
        com.google.gson.internal.bind.TreeTypeAdapter r0;
        com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl $r6;
        com.google.gson.JsonSerializer $r1;
        com.google.gson.TypeAdapterFactory $r5;

        r0 := @this: com.google.gson.internal.bind.TreeTypeAdapter;

        $r1 := @parameter0: com.google.gson.JsonSerializer;

        $r2 := @parameter1: com.google.gson.JsonDeserializer;

        $r3 := @parameter2: com.google.gson.Gson;

        $r4 := @parameter3: com.google.gson.reflect.TypeToken;

        $r5 := @parameter4: com.google.gson.TypeAdapterFactory;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r6 = new com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl;

        specialinvoke $r6.<com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1)>(r0, null);

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context> = $r6;

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonSerializer serializer> = $r1;

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonDeserializer deserializer> = $r2;

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.Gson gson> = $r3;

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.reflect.TypeToken typeToken> = $r4;

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory skipPast> = $r5;

        return;
    }

    private com.google.gson.TypeAdapter delegate()
    {
        com.google.gson.reflect.TypeToken $r2;
        com.google.gson.Gson $r4;
        com.google.gson.internal.bind.TreeTypeAdapter r0;
        com.google.gson.TypeAdapterFactory $r1;
        com.google.gson.TypeAdapter $r3;

        r0 := @this: com.google.gson.internal.bind.TreeTypeAdapter;

        $r3 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate>;

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.Gson gson>;

        $r1 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory skipPast>;

        $r2 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.reflect.TypeToken typeToken>;

        $r3 = virtualinvoke $r4.<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>($r1, $r2);

        r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate> = $r3;

        return $r3;
    }

    public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken, java.lang.Object)
    {
        com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory $r2;
        java.lang.Object $r1;
        com.google.gson.reflect.TypeToken $r0;

        $r0 := @parameter0: com.google.gson.reflect.TypeToken;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory;

        specialinvoke $r2.<com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>($r1, $r0, 0, null);

        return $r2;
    }

    public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken, java.lang.Object)
    {
        com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory $r4;
        com.google.gson.reflect.TypeToken $r0;
        java.lang.reflect.Type $r2;
        java.lang.Object $r1;
        java.lang.Class $r3;
        boolean $z0;

        $r0 := @parameter0: com.google.gson.reflect.TypeToken;

        $r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke $r0.<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r3 = virtualinvoke $r0.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>();

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = new com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory;

        specialinvoke $r4.<com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>($r1, $r0, $z0, null);

        return $r4;
    }

    public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class, java.lang.Object)
    {
        com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory $r2;
        java.lang.Class $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory;

        specialinvoke $r2.<com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>($r1, null, 0, $r0);

        return $r2;
    }

    public java.lang.Object read(com.google.gson.stream.JsonReader)
    {
        com.google.gson.reflect.TypeToken $r7;
        com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl $r1;
        com.google.gson.stream.JsonReader $r2;
        com.google.gson.TypeAdapter $r4;
        com.google.gson.JsonElement $r6;
        java.lang.reflect.Type $r8;
        com.google.gson.JsonDeserializer $r3;
        com.google.gson.internal.bind.TreeTypeAdapter r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.gson.internal.bind.TreeTypeAdapter;

        $r2 := @parameter0: com.google.gson.stream.JsonReader;

        $r3 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonDeserializer deserializer>;

        if $r3 != null goto label1;

        $r4 = specialinvoke r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>();

        $r5 = virtualinvoke $r4.<com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>($r2);

        return $r5;

     label1:
        $r6 = staticinvoke <com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>($r2);

        $z0 = virtualinvoke $r6.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r3 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonDeserializer deserializer>;

        $r7 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.reflect.TypeToken typeToken>;

        $r8 = virtualinvoke $r7.<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r1 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context>;

        $r5 = interfaceinvoke $r3.<com.google.gson.JsonDeserializer: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>($r6, $r8, $r1);

        return $r5;
    }

    public void write(com.google.gson.stream.JsonWriter, java.lang.Object)
    {
        com.google.gson.reflect.TypeToken $r6;
        com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl $r2;
        com.google.gson.JsonSerializer $r4;
        com.google.gson.TypeAdapter $r5;
        com.google.gson.JsonElement $r8;
        java.lang.reflect.Type $r7;
        com.google.gson.internal.bind.TreeTypeAdapter r0;
        java.lang.Object $r3;
        com.google.gson.stream.JsonWriter $r1;

        r0 := @this: com.google.gson.internal.bind.TreeTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonWriter;

        $r3 := @parameter1: java.lang.Object;

        $r4 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonSerializer serializer>;

        if $r4 != null goto label1;

        $r5 = specialinvoke r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>();

        virtualinvoke $r5.<com.google.gson.TypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>($r1, $r3);

        return;

     label1:
        if $r3 != null goto label2;

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return;

     label2:
        $r6 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.reflect.TypeToken typeToken>;

        $r7 = virtualinvoke $r6.<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r2 = r0.<com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context>;

        $r8 = interfaceinvoke $r4.<com.google.gson.JsonSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>($r3, $r7, $r2);

        staticinvoke <com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)>($r8, $r1);

        return;
    }
}
