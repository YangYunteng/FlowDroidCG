public class com.google.android.material.behavior.HideBottomViewOnScrollBehavior extends androidx.coordinatorlayout.widget.CoordinatorLayout$b
{
    public static final int ENTER_ANIMATION_DURATION;
    public static final int EXIT_ANIMATION_DURATION;
    public static final int STATE_SCROLLED_DOWN;
    public static final int STATE_SCROLLED_UP;
    public int additionalHiddenOffsetY;
    public android.view.ViewPropertyAnimator currentAnimator;
    public int currentState;
    public int height;

    public void <init>()
    {
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void <init>()>();

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int height> = 0;

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState> = 2;

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int additionalHiddenOffsetY> = 0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int height> = 0;

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState> = 2;

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int additionalHiddenOffsetY> = 0;

        return;
    }

    public static android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior, android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator $r1;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior $r0;

        $r0 := @parameter0: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r1 := @parameter1: android.view.ViewPropertyAnimator;

        $r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator currentAnimator> = $r1;

        return $r1;
    }

    private void animateChildTo(android.view.View, int, long, android.animation.TimeInterpolator)
    {
        android.animation.TimeInterpolator $r1;
        long $l0;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 $r4;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        int $i1;
        android.view.View $r2;
        float $f0;
        android.view.ViewPropertyAnimator $r3;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r2 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $l0 := @parameter2: long;

        $r1 := @parameter3: android.animation.TimeInterpolator;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $f0 = (float) $i1;

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>($f0);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r1);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l0);

        $r4 = new com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1;

        specialinvoke $r4.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1: void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior)>(r0);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>($r4);

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator currentAnimator> = $r3;

        return;
    }

    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        android.view.ViewGroup$MarginLayoutParams $r4;
        int $i0, $i1, $i2;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $r4.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i2;

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int height> = $i1;

        $z0 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>($r2, $r1, $i0);

        return $z0;
    }

    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int, int, int, int, int, int[])
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        int[] $r4;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r2, $r3;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $i4 := @parameter7: int;

        $r4 := @parameter8: int[];

        if $i1 <= 0 goto label1;

        virtualinvoke r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void slideDown(android.view.View)>($r2);

        return;

     label1:
        if $i1 >= 0 goto label2;

        virtualinvoke r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void slideUp(android.view.View)>($r2);

     label2:
        return;
    }

    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r4;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        int $i0, $i1;
        android.view.View $r1, $r2, $r3;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r4 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $r3 := @parameter3: android.view.View;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setAdditionalHiddenOffsetY(android.view.View, int)
    {
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        int $i0, $i1;
        android.view.View $r1;
        float $f0;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int additionalHiddenOffsetY> = $i0;

        $i0 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState>;

        if $i0 != 1 goto label1;

        $i0 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int height>;

        $i1 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int additionalHiddenOffsetY>;

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.view.View: void setTranslationY(float)>($f0);

     label1:
        return;
    }

    public void slideDown(android.view.View)
    {
        android.animation.TimeInterpolator $r2;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.ViewPropertyAnimator $r3;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState>;

        if $i0 != 1 goto label1;

        return;

     label1:
        $r3 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator currentAnimator>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

     label2:
        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState> = 1;

        $i0 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int height>;

        $i1 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int additionalHiddenOffsetY>;

        $i0 = $i0 + $i1;

        $r2 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        specialinvoke r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator)>($r1, $i0, 175L, $r2);

        return;
    }

    public void slideUp(android.view.View)
    {
        android.animation.TimeInterpolator $r2;
        com.google.android.material.behavior.HideBottomViewOnScrollBehavior r0;
        int $i0;
        android.view.View $r1;
        android.view.ViewPropertyAnimator $r3;

        r0 := @this: com.google.android.material.behavior.HideBottomViewOnScrollBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState>;

        if $i0 != 2 goto label1;

        return;

     label1:
        $r3 = r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator currentAnimator>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

     label2:
        r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int currentState> = 2;

        $r2 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        specialinvoke r0.<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator)>($r1, 0, 225L, $r2);

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int STATE_SCROLLED_UP> = 2;

        <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int STATE_SCROLLED_DOWN> = 1;

        <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int EXIT_ANIMATION_DURATION> = 175;

        <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: int ENTER_ANIMATION_DURATION> = 225;

        return;
    }
}
