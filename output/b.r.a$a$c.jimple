public class b.r.a$a$c extends java.lang.Object implements b.r.a$a$a
{
    public final java.lang.reflect.Constructor a;

    public void <init>(java.lang.Class)
    {
        b.r.a$a$c r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.reflect.Constructor $r1;

        r0 := @this: b.r.a$a$c;

        $r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (java.lang.Class)[3];

        $r3[0] = class "Ljava/io/File;";

        $r3[1] = class "Ljava/io/File;";

        $r3[2] = class "Ldalvik/system/DexFile;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        r0.<b.r.a$a$c: java.lang.reflect.Constructor a> = $r1;

        $r1 = r0.<b.r.a$a$c: java.lang.reflect.Constructor a>;

        virtualinvoke $r1.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        return;
    }

    public java.lang.Object a(java.io.File, dalvik.system.DexFile)
    {
        b.r.a$a$c r0;
        java.lang.Object[] $r5;
        dalvik.system.DexFile $r1;
        java.lang.Object $r3;
        java.lang.reflect.Constructor $r2;
        java.io.File $r4;

        r0 := @this: b.r.a$a$c;

        $r4 := @parameter0: java.io.File;

        $r1 := @parameter1: dalvik.system.DexFile;

        $r2 = r0.<b.r.a$a$c: java.lang.reflect.Constructor a>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = $r4;

        $r5[1] = $r4;

        $r5[2] = $r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        return $r3;
    }
}
