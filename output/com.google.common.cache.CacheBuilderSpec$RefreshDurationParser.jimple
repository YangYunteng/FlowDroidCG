public class com.google.common.cache.CacheBuilderSpec$RefreshDurationParser extends com.google.common.cache.CacheBuilderSpec$DurationParser
{

    public void <init>()
    {
        com.google.common.cache.CacheBuilderSpec$RefreshDurationParser r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$RefreshDurationParser;

        specialinvoke r0.<com.google.common.cache.CacheBuilderSpec$DurationParser: void <init>()>();

        return;
    }

    public void parseDuration(com.google.common.cache.CacheBuilderSpec, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2, $r3;
        com.google.common.cache.CacheBuilderSpec$RefreshDurationParser r0;
        long $l0;
        com.google.common.cache.CacheBuilderSpec $r1;
        boolean $z0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$RefreshDurationParser;

        $r1 := @parameter0: com.google.common.cache.CacheBuilderSpec;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        $r3 = $r1.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit refreshTimeUnit>;

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "refreshAfterWrite already set");

        $r1.<com.google.common.cache.CacheBuilderSpec: long refreshDuration> = $l0;

        $r1.<com.google.common.cache.CacheBuilderSpec: java.util.concurrent.TimeUnit refreshTimeUnit> = $r2;

        return;
    }
}
