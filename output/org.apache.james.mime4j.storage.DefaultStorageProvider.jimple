public class org.apache.james.mime4j.storage.DefaultStorageProvider extends java.lang.Object
{
    public static final java.lang.String DEFAULT_STORAGE_PROVIDER_PROPERTY;
    public static volatile org.apache.james.mime4j.storage.StorageProvider instance;
    public static org.apache.commons.logging.Log log;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.james.mime4j.storage.DefaultStorageProvider: java.lang.String DEFAULT_STORAGE_PROVIDER_PROPERTY> = "org.apache.james.mime4j.defaultStorageProvider";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/james/mime4j/storage/DefaultStorageProvider;");

        <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.commons.logging.Log log> = $r0;

        <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance> = null;

        staticinvoke <org.apache.james.mime4j.storage.DefaultStorageProvider: void initialize()>();

        return;
    }

    public void <init>()
    {
        org.apache.james.mime4j.storage.DefaultStorageProvider r0;

        r0 := @this: org.apache.james.mime4j.storage.DefaultStorageProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.james.mime4j.storage.StorageProvider getInstance()
    {
        org.apache.james.mime4j.storage.StorageProvider r0;

        r0 = <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance>;

        return r0;
    }

    public static void initialize()
    {
        org.apache.james.mime4j.storage.StorageProvider $r4;
        java.lang.Exception $r5;
        org.apache.james.mime4j.storage.TempFileStorageProvider $r7;
        org.apache.james.mime4j.storage.ThresholdStorageProvider $r8;
        java.lang.StringBuilder $r0;
        java.lang.Class $r2;
        java.lang.Object $r3;
        org.apache.commons.logging.Log $r6;
        java.lang.String $r1;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.james.mime4j.defaultStorageProvider");

        if $r1 == null goto label4;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = (org.apache.james.mime4j.storage.StorageProvider) $r3;

     label2:
        <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance> = $r4;

        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.commons.logging.Log log>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create or instantiate StorageProvider class \'");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'. Using default instead.");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r1, $r5);

     label4:
        $r4 = <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance>;

        if $r4 != null goto label5;

        $r7 = new org.apache.james.mime4j.storage.TempFileStorageProvider;

        specialinvoke $r7.<org.apache.james.mime4j.storage.TempFileStorageProvider: void <init>()>();

        $r8 = new org.apache.james.mime4j.storage.ThresholdStorageProvider;

        specialinvoke $r8.<org.apache.james.mime4j.storage.ThresholdStorageProvider: void <init>(org.apache.james.mime4j.storage.StorageProvider,int)>($r7, 1024);

        <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance> = $r8;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void reset()
    {
        <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance> = null;

        staticinvoke <org.apache.james.mime4j.storage.DefaultStorageProvider: void initialize()>();

        return;
    }

    public static void setInstance(org.apache.james.mime4j.storage.StorageProvider)
    {
        org.apache.james.mime4j.storage.StorageProvider $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: org.apache.james.mime4j.storage.StorageProvider;

        if $r0 == null goto label1;

        <org.apache.james.mime4j.storage.DefaultStorageProvider: org.apache.james.mime4j.storage.StorageProvider instance> = $r0;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }
}
