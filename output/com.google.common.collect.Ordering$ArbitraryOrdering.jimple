public class com.google.common.collect.Ordering$ArbitraryOrdering extends com.google.common.collect.Ordering
{
    public final java.util.concurrent.atomic.AtomicInteger counter;
    public final java.util.concurrent.ConcurrentMap uids;

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        com.google.common.collect.MapMaker $r2;
        com.google.common.collect.Ordering$ArbitraryOrdering r0;
        java.util.concurrent.ConcurrentMap $r3;

        r0 := @this: com.google.common.collect.Ordering$ArbitraryOrdering;

        specialinvoke r0.<com.google.common.collect.Ordering: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.util.concurrent.atomic.AtomicInteger counter> = $r1;

        $r2 = new com.google.common.collect.MapMaker;

        specialinvoke $r2.<com.google.common.collect.MapMaker: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.Platform: com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker)>($r2);

        $r3 = virtualinvoke $r2.<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>();

        r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.util.concurrent.ConcurrentMap uids> = $r3;

        return;
    }

    private java.lang.Integer getUid(java.lang.Object)
    {
        java.lang.Integer $r4, $r6;
        java.util.concurrent.ConcurrentMap $r1;
        java.util.concurrent.atomic.AtomicInteger $r5;
        int $i0;
        java.lang.Object $r2, $r3;
        com.google.common.collect.Ordering$ArbitraryOrdering r0;

        r0 := @this: com.google.common.collect.Ordering$ArbitraryOrdering;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.util.concurrent.ConcurrentMap uids>;

        $r3 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        if $r4 != null goto label1;

        $r5 = r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.util.concurrent.atomic.AtomicInteger counter>;

        $i0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.util.concurrent.ConcurrentMap uids>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r6 = (java.lang.Integer) $r2;

        if $r6 == null goto label1;

        return $r6;

     label1:
        return $r4;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.AssertionError $r5;
        java.lang.Integer $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Ordering$ArbitraryOrdering r0;

        r0 := @this: com.google.common.collect.Ordering$ArbitraryOrdering;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 != $r2 goto label1;

        return 0;

     label1:
        if $r1 != null goto label2;

        $i0 = -1;

        return $i0;

     label2:
        if $r2 != null goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke r0.<com.google.common.collect.Ordering$ArbitraryOrdering: int identityHashCode(java.lang.Object)>($r1);

        $i1 = virtualinvoke r0.<com.google.common.collect.Ordering$ArbitraryOrdering: int identityHashCode(java.lang.Object)>($r2);

        if $i0 == $i1 goto label5;

        if $i0 >= $i1 goto label4;

        $i0 = -1;

        return $i0;

     label4:
        return 1;

     label5:
        $r3 = specialinvoke r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.lang.Integer getUid(java.lang.Object)>($r1);

        $r4 = specialinvoke r0.<com.google.common.collect.Ordering$ArbitraryOrdering: java.lang.Integer getUid(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int compareTo(java.lang.Integer)>($r4);

        if $i0 == 0 goto label6;

        return $i0;

     label6:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;
    }

    public int identityHashCode(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.Ordering$ArbitraryOrdering r0;

        r0 := @this: com.google.common.collect.Ordering$ArbitraryOrdering;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.Ordering$ArbitraryOrdering r0;

        r0 := @this: com.google.common.collect.Ordering$ArbitraryOrdering;

        return "Ordering.arbitrary()";
    }
}
