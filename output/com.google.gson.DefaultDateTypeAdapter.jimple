public final class com.google.gson.DefaultDateTypeAdapter extends com.google.gson.TypeAdapter
{
    public static final java.lang.String SIMPLE_NAME;
    public final java.util.List dateFormats;
    public final java.lang.Class dateType;

    public void <init>(int, int)
    {
        int $i0, $i1;
        com.google.gson.DefaultDateTypeAdapter r0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<com.google.gson.DefaultDateTypeAdapter: void <init>(java.lang.Class,int,int)>(class "Ljava/util/Date;", $i0, $i1);

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.util.Locale $r4, $r6;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Class $r1;
        java.text.DateFormat $r5;
        boolean $z0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats> = $r2;

        staticinvoke <com.google.gson.DefaultDateTypeAdapter: java.lang.Class verifyDateType(java.lang.Class)>($r1);

        r0.<com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType> = $r1;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(2, 2, $r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = <java.util.Locale: java.util.Locale US>;

        $z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(2, 2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $z0 = staticinvoke <com.google.gson.internal.JavaVersion: boolean isJava9OrLater()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateTimeFormat(int,int)>(2, 2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        return;
    }

    public void <init>(java.lang.Class, int)
    {
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.util.Locale $r4, $r6;
        int $i0;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Class $r1;
        java.text.DateFormat $r5;
        boolean $z0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r1 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats> = $r2;

        staticinvoke <com.google.gson.DefaultDateTypeAdapter: java.lang.Class verifyDateType(java.lang.Class)>($r1);

        r0.<com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType> = $r1;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i0, $r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = <java.util.Locale: java.util.Locale US>;

        $z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>($i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $z0 = staticinvoke <com.google.gson.internal.JavaVersion: boolean isJava9OrLater()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateFormat(int)>($i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        return;
    }

    public void <init>(java.lang.Class, int, int)
    {
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.util.Locale $r4, $r6;
        int $i0, $i1;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Class $r1;
        java.text.DateFormat $r5;
        boolean $z0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r1 := @parameter0: java.lang.Class;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats> = $r2;

        staticinvoke <com.google.gson.DefaultDateTypeAdapter: java.lang.Class verifyDateType(java.lang.Class)>($r1);

        r0.<com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType> = $r1;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>($i1, $i0, $r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = <java.util.Locale: java.util.Locale US>;

        $z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>($i1, $i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $z0 = staticinvoke <com.google.gson.internal.JavaVersion: boolean isJava9OrLater()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateTimeFormat(int,int)>($i1, $i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        return;
    }

    public void <init>(java.lang.Class, java.lang.String)
    {
        java.text.SimpleDateFormat $r6;
        java.util.ArrayList $r4;
        java.util.List $r5;
        java.util.Locale $r2, $r7;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Class $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r3 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats> = $r4;

        staticinvoke <com.google.gson.DefaultDateTypeAdapter: java.lang.Class verifyDateType(java.lang.Class)>($r3);

        r0.<com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType> = $r3;

        $r5 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r6 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r1, $r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r7 = <java.util.Locale: java.util.Locale US>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        $r5 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r6 = new java.text.SimpleDateFormat;

        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label1:
        return;
    }

    private java.util.Date deserializeToDate(java.lang.String)
    {
        java.lang.Throwable $r12;
        java.util.Iterator $r5;
        com.google.gson.JsonSyntaxException $r11;
        java.util.Date $r8;
        java.text.ParsePosition $r9;
        java.util.List $r1, $r4;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Object $r6;
        java.lang.String $r3;
        java.text.ParseException $r2, $r10;
        java.text.DateFormat $r7;
        boolean $z0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        entermonitor $r1;

     label01:
        $r4 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.text.DateFormat) $r6;

     label03:
        $r8 = virtualinvoke $r7.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r3);

     label04:
        exitmonitor $r1;

     label05:
        return $r8;

     label06:
        $r9 = new java.text.ParsePosition;

     label07:
        specialinvoke $r9.<java.text.ParsePosition: void <init>(int)>(0);

        $r8 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r3, $r9);

     label08:
        exitmonitor $r1;

     label09:
        return $r8;

     label10:
        $r10 := @caughtexception;

        $r11 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r11.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r10);

        throw $r11;

     label11:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r12;

     label13:
        $r2 := @caughtexception;

        goto label02;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.text.ParseException from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.text.ParseException from label07 to label08 with label10;
        catch java.lang.Throwable from label06 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    public static java.lang.Class verifyDateType(java.lang.Class)
    {
        java.lang.StringBuilder $r0;
        java.lang.Class $r2;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r3;

        $r2 := @parameter0: java.lang.Class;

        if $r2 == class "Ljava/util/Date;" goto label2;

        if $r2 == class "Ljava/sql/Date;" goto label2;

        if $r2 != class "Ljava/sql/Timestamp;" goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date type must be one of ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(class "Ljava/util/Date;");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(class "Ljava/sql/Timestamp;");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(class "Ljava/sql/Date;");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label2:
        return $r2;
    }

    public volatile java.lang.Object read(com.google.gson.stream.JsonReader)
    {
        com.google.gson.DefaultDateTypeAdapter r0;
        java.util.Date $r1;
        com.google.gson.stream.JsonReader $r2;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r2 := @parameter0: com.google.gson.stream.JsonReader;

        $r1 = virtualinvoke r0.<com.google.gson.DefaultDateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)>($r2);

        return $r1;
    }

    public java.util.Date read(com.google.gson.stream.JsonReader)
    {
        java.util.Date $r5;
        java.sql.Timestamp $r7;
        long $l0;
        java.lang.AssertionError $r9;
        com.google.gson.stream.JsonReader $r1;
        java.sql.Date $r8;
        com.google.gson.stream.JsonToken $r2, $r3;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Class $r6;
        java.lang.String $r4;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonReader;

        $r2 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>;

        if $r2 != $r3 goto label1;

        virtualinvoke $r1.<com.google.gson.stream.JsonReader: void nextNull()>();

        return null;

     label1:
        $r4 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();

        $r5 = specialinvoke r0.<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)>($r4);

        $r6 = r0.<com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType>;

        if $r6 != class "Ljava/util/Date;" goto label2;

        return $r5;

     label2:
        if $r6 != class "Ljava/sql/Timestamp;" goto label3;

        $r7 = new java.sql.Timestamp;

        $l0 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        specialinvoke $r7.<java.sql.Timestamp: void <init>(long)>($l0);

        return $r7;

     label3:
        if $r6 != class "Ljava/sql/Date;" goto label4;

        $r8 = new java.sql.Date;

        $l0 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        specialinvoke $r8.<java.sql.Date: void <init>(long)>($l0);

        return $r8;

     label4:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;
    }

    public java.lang.String toString()
    {
        java.text.SimpleDateFormat $r5;
        java.util.List $r1;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.Class $r7;
        java.lang.String $r6;
        java.text.DateFormat $r3;
        boolean $z0;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r1 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.text.DateFormat) $r2;

        $z0 = $r3 instanceof java.text.SimpleDateFormat;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DefaultDateTypeAdapter(");

        $r5 = (java.text.SimpleDateFormat) $r3;

        $r6 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DefaultDateTypeAdapter(");

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile void write(com.google.gson.stream.JsonWriter, java.lang.Object)
    {
        java.util.Date $r3;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Object $r2;
        com.google.gson.stream.JsonWriter $r1;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Date) $r2;

        virtualinvoke r0.<com.google.gson.DefaultDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)>($r1, $r3);

        return;
    }

    public void write(com.google.gson.stream.JsonWriter, java.util.Date)
    {
        java.lang.Throwable $r8;
        java.util.Date $r3;
        java.util.List $r1, $r4;
        com.google.gson.DefaultDateTypeAdapter r0;
        java.lang.Object $r5;
        java.lang.String $r7;
        com.google.gson.stream.JsonWriter $r2;
        java.text.DateFormat $r6;

        r0 := @this: com.google.gson.DefaultDateTypeAdapter;

        $r2 := @parameter0: com.google.gson.stream.JsonWriter;

        $r3 := @parameter1: java.util.Date;

        if $r3 != null goto label1;

        virtualinvoke $r2.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return;

     label1:
        $r1 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        entermonitor $r1;

     label2:
        $r4 = r0.<com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.text.DateFormat) $r5;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r3);

        virtualinvoke $r2.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r7);

        exitmonitor $r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void <clinit>()
    {
        <com.google.gson.DefaultDateTypeAdapter: java.lang.String SIMPLE_NAME> = "DefaultDateTypeAdapter";

        return;
    }
}
