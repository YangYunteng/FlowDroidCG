public final enum class org.codehaus.jackson.map.DeserializationConfig$Feature extends java.lang.Enum
{
    public static final org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_ROOT_VALUE;
    public final boolean _defaultState;

    static void <clinit>()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r1;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_ANNOTATIONS", 0, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_SETTERS", 1, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_CREATORS", 2, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_FIELDS", 3, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_GETTERS_AS_SETTERS", 4, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("CAN_OVERRIDE_ACCESS_MODIFIERS", 5, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_BIG_DECIMAL_FOR_FLOATS", 6, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_BIG_INTEGER_FOR_INTS", 7, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("READ_ENUMS_USING_TO_STRING", 8, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_UNKNOWN_PROPERTIES", 9, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_NULL_FOR_PRIMITIVES", 10, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_NUMBERS_FOR_ENUMS", 11, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRAP_EXCEPTIONS", 12, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRAP_ROOT_VALUE", 13, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_ROOT_VALUE> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("ACCEPT_EMPTY_STRING_AS_NULL_OBJECT", 14, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT> = $r0;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("ACCEPT_SINGLE_VALUE_AS_ARRAY", 15, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.DeserializationConfig$Feature)[16];

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS>;

        $r1[1] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS>;

        $r1[2] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS>;

        $r1[3] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS>;

        $r1[4] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $r1[5] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS>;

        $r1[6] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS>;

        $r1[7] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING>;

        $r1[8] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES>;

        $r1[9] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES>;

        $r1[10] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS>;

        $r1[11] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS>;

        $r1[12] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_ROOT_VALUE>;

        $r1[13] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT>;

        $r1[14] = $r0;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY>;

        $r1[15] = $r0;

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: boolean _defaultState> = $z0;

        return;
    }

    public static int collectDefaults()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        int $i0, $i1, $i2, $i3;
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r0;
        boolean $z0;

        $r0 = staticinvoke <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature[] values()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: boolean enabledByDefault()>();

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i2 = $i2 | $i3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    public static org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/map/DeserializationConfig$Feature;", $r1);

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.map.DeserializationConfig$Feature[] values()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r1;
        java.lang.Object $r0;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.map.DeserializationConfig$Feature[]) $r0;

        return $r1;
    }

    public boolean enabledByDefault()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig$Feature;

        z0 = r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: boolean _defaultState>;

        return z0;
    }

    public int getMask()
    {
        int $i0;
        org.codehaus.jackson.map.DeserializationConfig$Feature r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = virtualinvoke r0.<java.lang.Enum: int ordinal()>();

        $i0 = 1 << $i0;

        return $i0;
    }
}
