public final class com.google.common.graph.ConfigurableMutableValueGraph extends com.google.common.graph.ConfigurableValueGraph implements com.google.common.graph.MutableValueGraph
{

    public void <init>(com.google.common.graph.AbstractGraphBuilder)
    {
        com.google.common.graph.AbstractGraphBuilder $r1;
        com.google.common.graph.ConfigurableMutableValueGraph r0;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $r1 := @parameter0: com.google.common.graph.AbstractGraphBuilder;

        specialinvoke r0.<com.google.common.graph.ConfigurableValueGraph: void <init>(com.google.common.graph.AbstractGraphBuilder)>($r1);

        return;
    }

    private com.google.common.graph.GraphConnections addNodeInternal(java.lang.Object)
    {
        com.google.common.graph.ConfigurableMutableValueGraph r0;
        java.lang.Object $r2;
        com.google.common.graph.MapIteratorCache $r1;
        com.google.common.graph.GraphConnections $r3;
        boolean $z0;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r3 = specialinvoke r0.<com.google.common.graph.ConfigurableMutableValueGraph: com.google.common.graph.GraphConnections newConnections()>();

        $r1 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r2 = virtualinvoke $r1.<com.google.common.graph.MapIteratorCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        return $r3;
    }

    private com.google.common.graph.GraphConnections newConnections()
    {
        com.google.common.graph.ConfigurableMutableValueGraph r0;
        com.google.common.graph.UndirectedGraphConnections $r2;
        com.google.common.graph.DirectedGraphConnections $r1;
        boolean $z0;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $z0 = virtualinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean isDirected()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.common.graph.DirectedGraphConnections: com.google.common.graph.DirectedGraphConnections of()>();

        return $r1;

     label1:
        $r2 = staticinvoke <com.google.common.graph.UndirectedGraphConnections: com.google.common.graph.UndirectedGraphConnections of()>();

        return $r2;
    }

    public boolean addNode(java.lang.Object)
    {
        com.google.common.graph.ConfigurableMutableValueGraph r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "node");

        $z0 = virtualinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean containsNode(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.google.common.graph.ConfigurableMutableValueGraph: com.google.common.graph.GraphConnections addNodeInternal(java.lang.Object)>($r1);

        return 1;
    }

    public java.lang.Object putEdgeValue(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        long $l0;
        com.google.common.graph.MapIteratorCache $r4;
        com.google.common.graph.ConfigurableMutableValueGraph r0;
        java.lang.Object $r1, $r2, $r3, $r5, $r7;
        boolean $z0;
        com.google.common.graph.GraphConnections $r6;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "nodeU");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "nodeV");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "value");

        $z0 = virtualinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean allowsSelfLoops()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        $z0 = $z0 ^ 1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Cannot add self-loop edge on node %s, as self-loops are not allowed. To construct a graph that allows self-loops, call allowsSelfLoops(true) on the Builder.", $r3);

     label1:
        $r4 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r5 = virtualinvoke $r4.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (com.google.common.graph.GraphConnections) $r5;

        if $r6 != null goto label2;

        $r6 = specialinvoke r0.<com.google.common.graph.ConfigurableMutableValueGraph: com.google.common.graph.GraphConnections addNodeInternal(java.lang.Object)>($r3);

     label2:
        $r5 = interfaceinvoke $r6.<com.google.common.graph.GraphConnections: java.lang.Object addSuccessor(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r4 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r7 = virtualinvoke $r4.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.google.common.graph.GraphConnections) $r7;

        if $r6 != null goto label3;

        $r6 = specialinvoke r0.<com.google.common.graph.ConfigurableMutableValueGraph: com.google.common.graph.GraphConnections addNodeInternal(java.lang.Object)>($r1);

     label3:
        interfaceinvoke $r6.<com.google.common.graph.GraphConnections: void addPredecessor(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $r5 != null goto label4;

        $l0 = r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount>;

        $l0 = $l0 + 1L;

        r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount> = $l0;

        staticinvoke <com.google.common.graph.Graphs: long checkPositive(long)>($l0);

     label4:
        return $r5;
    }

    public java.lang.Object removeEdge(java.lang.Object, java.lang.Object)
    {
        long $l0;
        com.google.common.graph.MapIteratorCache $r3;
        com.google.common.graph.ConfigurableMutableValueGraph r0;
        java.lang.Object $r1, $r2, $r4;
        com.google.common.graph.GraphConnections $r5, $r6;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "nodeU");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "nodeV");

        $r3 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r4 = virtualinvoke $r3.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.google.common.graph.GraphConnections) $r4;

        $r3 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r4 = virtualinvoke $r3.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (com.google.common.graph.GraphConnections) $r4;

        if $r5 == null goto label2;

        if $r6 != null goto label1;

        goto label2;

     label1:
        $r2 = interfaceinvoke $r5.<com.google.common.graph.GraphConnections: java.lang.Object removeSuccessor(java.lang.Object)>($r2);

        if $r2 == null goto label3;

        interfaceinvoke $r6.<com.google.common.graph.GraphConnections: void removePredecessor(java.lang.Object)>($r1);

        $l0 = r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount>;

        $l0 = $l0 - 1L;

        r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount> = $l0;

        staticinvoke <com.google.common.graph.Graphs: long checkNonNegative(long)>($l0);

        return $r2;

     label2:
        return null;

     label3:
        return $r2;
    }

    public boolean removeNode(java.lang.Object)
    {
        java.util.Iterator $r6;
        java.util.Set $r5;
        long $l0;
        com.google.common.graph.MapIteratorCache $r2;
        com.google.common.graph.ConfigurableMutableValueGraph r0;
        java.lang.Object $r1, $r3;
        com.google.common.graph.GraphConnections $r4, $r7;
        boolean $z0;

        r0 := @this: com.google.common.graph.ConfigurableMutableValueGraph;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "node");

        $r2 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r3 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.common.graph.GraphConnections) $r3;

        if $r4 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean allowsSelfLoops()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r4.<com.google.common.graph.GraphConnections: java.lang.Object removeSuccessor(java.lang.Object)>($r1);

        if $r3 == null goto label2;

        interfaceinvoke $r4.<com.google.common.graph.GraphConnections: void removePredecessor(java.lang.Object)>($r1);

        $l0 = r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount>;

        $l0 = $l0 - 1L;

        r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount> = $l0;

     label2:
        $r5 = interfaceinvoke $r4.<com.google.common.graph.GraphConnections: java.util.Set successors()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r3 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.lang.Object getWithoutCaching(java.lang.Object)>($r3);

        $r7 = (com.google.common.graph.GraphConnections) $r3;

        interfaceinvoke $r7.<com.google.common.graph.GraphConnections: void removePredecessor(java.lang.Object)>($r1);

        $l0 = r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount>;

        $l0 = $l0 - 1L;

        r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount> = $l0;

        goto label3;

     label4:
        $z0 = virtualinvoke r0.<com.google.common.graph.ConfigurableValueGraph: boolean isDirected()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<com.google.common.graph.GraphConnections: java.util.Set predecessors()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r3 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r3 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.lang.Object getWithoutCaching(java.lang.Object)>($r3);

        $r4 = (com.google.common.graph.GraphConnections) $r3;

        $r3 = interfaceinvoke $r4.<com.google.common.graph.GraphConnections: java.lang.Object removeSuccessor(java.lang.Object)>($r1);

        if $r3 == null goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $l0 = r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount>;

        $l0 = $l0 - 1L;

        r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount> = $l0;

        goto label5;

     label8:
        $r2 = r0.<com.google.common.graph.ConfigurableValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.lang.Object remove(java.lang.Object)>($r1);

        $l0 = r0.<com.google.common.graph.ConfigurableValueGraph: long edgeCount>;

        staticinvoke <com.google.common.graph.Graphs: long checkNonNegative(long)>($l0);

        return 1;
    }
}
