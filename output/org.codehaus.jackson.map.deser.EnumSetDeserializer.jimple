public final class org.codehaus.jackson.map.deser.EnumSetDeserializer extends org.codehaus.jackson.map.deser.StdDeserializer
{
    public final java.lang.Class _enumClass;
    public final org.codehaus.jackson.map.deser.EnumDeserializer _enumDeserializer;

    public void <init>(org.codehaus.jackson.map.deser.EnumResolver)
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        java.lang.Class $r1;
        org.codehaus.jackson.map.deser.EnumResolver $r2;
        org.codehaus.jackson.map.deser.EnumDeserializer $r3;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r2 := @parameter0: org.codehaus.jackson.map.deser.EnumResolver;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/EnumSet;");

        $r3 = new org.codehaus.jackson.map.deser.EnumDeserializer;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.EnumDeserializer: void <init>(org.codehaus.jackson.map.deser.EnumResolver)>($r2);

        r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: org.codehaus.jackson.map.deser.EnumDeserializer _enumDeserializer> = $r3;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Class getEnumClass()>();

        r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Class _enumClass> = $r1;

        return;
    }

    private java.util.EnumSet constructSet()
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        java.lang.Class $r2;
        java.util.EnumSet $r1;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Class _enumClass>;

        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>($r2);

        return $r1;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        java.util.EnumSet $r2;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.JsonToken $r4, $r5;
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.JsonMappingException $r9;
        java.lang.Enum $r7;
        java.lang.Class $r8;
        org.codehaus.jackson.JsonParser $r2;
        java.util.EnumSet $r3;
        org.codehaus.jackson.map.deser.EnumDeserializer $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.util.EnumSet constructSet()>();

     label1:
        $r4 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r4 == $r5 goto label5;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r4 == $r5 goto label2;

        $r6 = r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: org.codehaus.jackson.map.deser.EnumDeserializer _enumDeserializer>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.deser.EnumDeserializer: java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r2, $r1);

        virtualinvoke $r3.<java.util.EnumSet: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r8 = r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Class _enumClass>;

        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

     label3:
        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>(class "Ljava/util/EnumSet;");

        goto label4;

     label4:
        throw $r9;

     label5:
        return $r3;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r2;
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r4, $r1);

        return $r3;
    }
}
