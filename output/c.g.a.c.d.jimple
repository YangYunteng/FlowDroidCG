public final class c.g.a.c.d extends java.lang.Object implements c.g.a.g.f
{
    public static final byte[] a;
    public static int b;
    public static int c;
    public final c.g.a.g.s d;

    static void <clinit>()
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3;

        <c.g.a.c.d: int b> = 0;

        $r0 = newarray (byte)[0];

        <c.g.a.c.d: byte[] a> = $r0;

        $i0 = <c.g.a.c.d: int b>;

        $i1 = $i0 ^ 45;

        $i2 = $i0 & 45;

        $i1 = $i1 | $i2;

        $i1 = $i1 << 1;

        $i2 = -46;

        $i2 = $i0 & $i2;

        $i3 = -1;

        $i0 = $i0 ^ $i3;

        $i0 = $i0 & 45;

        $i0 = $i0 | $i2;

        $i0 = neg $i0;

        $i2 = $i1 | $i0;

        $i2 = $i2 << 1;

        $i1 = $i0 ^ $i1;

        $i1 = $i2 - $i1;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int c> = $i1;

        return;
    }

    public void <init>(c.g.a.g.s)
    {
        c.g.a.c.d r0;
        c.g.a.g.s $r1;

        r0 := @this: c.g.a.c.d;

        $r1 := @parameter0: c.g.a.g.s;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.g.a.c.d: c.g.a.g.s d> = $r1;

        return;
    }

    public static c.g.a.g.f a(c.g.a.g.s)
    {
        java.lang.Throwable $r2;
        c.g.a.c.d $r0, $r4;
        java.lang.NullPointerException r3, $r5;
        c.g.a.g.s $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        $r1 := @parameter0: c.g.a.g.s;

        $r4 = new c.g.a.c.d;

        $r0 = $r4;

        specialinvoke $r4.<c.g.a.c.d: void <init>(c.g.a.g.s)>($r1);

        $i0 = <c.g.a.c.d: int c>;

        $i0 = $i0 + 46;

        $i1 = -1;

        $i1 = $i0 | $i1;

        $i1 = $i1 << 1;

        $i2 = -1;

        $i0 = $i0 ^ $i2;

        $i0 = $i1 - $i0;

        $i1 = $i0 % 128;

        <c.g.a.c.d: int b> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 1 goto label7;

     label3:
        $r5 = new java.lang.NullPointerException;

     label4:
        r3 = $r5;

     label5:
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r3;

     label6:
        $r2 := @caughtexception;

        throw $r2;

     label7:
        return $r0;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public static byte[] a(c.g.a.j.p)
    {
        byte[] $r6;
        java.lang.String[] $r2;
        java.lang.Iterable $r4;
        java.util.ArrayList $r5;
        c.g.a.j.p $r0;
        int $i0, $i1, $i2, $i3;
        c.g.a.g.f $r1;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: c.g.a.j.p;

        $i0 = <c.g.a.c.d: int b>;

        $i1 = $i0 ^ 67;

        $i2 = $i0 & 67;

        $i1 = $i1 | $i2;

        $i1 = $i1 << 1;

        $i2 = -68;

        $i2 = $i0 & $i2;

        $i3 = -1;

        $i0 = $i0 ^ $i3;

        $i0 = $i0 & 67;

        $i0 = $i0 | $i2;

        $i0 = neg $i0;

        $i2 = $i1 | $i0;

        $i2 = $i2 << 1;

        $i1 = $i0 ^ $i1;

        $i1 = $i2 - $i1;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int c> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label4;

        $r1 = staticinvoke <c.g.a.c.i: c.g.a.g.f a()>();

        $r2 = newarray (java.lang.String)[4];

        $r3 = virtualinvoke $r0.<c.g.a.j.p: java.lang.String a()>();

        $r2[1] = $r3;

        $r3 = virtualinvoke $r0.<c.g.a.j.p: java.lang.String b()>();

        $r2[0] = $r3;

        $r3 = virtualinvoke $r0.<c.g.a.j.p: java.lang.String c()>();

        $r2[5] = $r3;

        $i1 = virtualinvoke $r0.<c.g.a.j.p: int d()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r2[2] = $r3;

        $r4 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Object[])>($r1, $r2);

     label3:
        $r5 = staticinvoke <c.g.a.b.b: java.util.ArrayList a(java.lang.Iterable)>($r4);

        $r6 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r5);

        return $r6;

     label4:
        $r1 = staticinvoke <c.g.a.c.i: c.g.a.g.f a()>();

        $r2 = newarray (java.lang.String)[4];

        $r3 = virtualinvoke $r0.<c.g.a.j.p: java.lang.String a()>();

        $r2[0] = $r3;

        $r3 = virtualinvoke $r0.<c.g.a.j.p: java.lang.String b()>();

        $r2[1] = $r3;

        $r3 = virtualinvoke $r0.<c.g.a.j.p: java.lang.String c()>();

        $r2[2] = $r3;

        $i1 = virtualinvoke $r0.<c.g.a.j.p: int d()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r2[3] = $r3;

        $r4 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Object[])>($r1, $r2);

        goto label3;
    }

    public static byte[] a(c.g.a.j.s)
    {
        byte[] $r6;
        java.util.Collection $r4;
        c.g.a.j.s $r0;
        java.lang.Iterable $r5;
        java.lang.Iterable[] $r2;
        c.g.a.g.p $r3;
        byte $b2;
        int $i0, $i1;
        c.g.a.g.f $r1;

        $r0 := @parameter0: c.g.a.j.s;

        $i0 = <c.g.a.c.d: int c>;

        $i0 = $i0 + 36;

        $i0 = $i0 - 1;

        $i1 = $i0 % 128;

        <c.g.a.c.d: int b> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label1;

        $b2 = 85;

        goto label2;

     label1:
        $b2 = 70;

     label2:
        if $b2 == 85 goto label4;

        $r1 = staticinvoke <c.g.a.c.o: c.g.a.g.f a()>();

        $r2 = newarray (java.lang.Iterable)[2];

        $r3 = virtualinvoke $r0.<c.g.a.j.s: c.g.a.g.p a()>();

        $r2[0] = $r3;

        $r4 = virtualinvoke $r0.<c.g.a.j.s: java.util.Collection c()>();

        $r2[1] = $r4;

        $r5 = staticinvoke <c.g.a.g.l: java.lang.Iterable a(java.lang.Iterable[])>($r2);

     label3:
        $r5 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Iterable)>($r1, $r5);

        $r6 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r5);

        return $r6;

     label4:
        $r1 = staticinvoke <c.g.a.c.o: c.g.a.g.f a()>();

        $r2 = newarray (java.lang.Iterable)[4];

        $r3 = virtualinvoke $r0.<c.g.a.j.s: c.g.a.g.p a()>();

        $r2[1] = $r3;

        $r4 = virtualinvoke $r0.<c.g.a.j.s: java.util.Collection c()>();

        $r2[1] = $r4;

        $r5 = staticinvoke <c.g.a.g.l: java.lang.Iterable a(java.lang.Iterable[])>($r2);

        goto label3;
    }

    public static byte[] a(c.g.a.l.a)
    {
        byte[] $r3;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2;
        c.g.a.l.a $r0;
        java.lang.String $r1;

        $r0 := @parameter0: c.g.a.l.a;

        $i0 = <c.g.a.c.d: int b>;

        $i1 = $i0 & 5;

        $i0 = $i0 ^ 5;

        $i0 = $i0 | $i1;

        $i0 = neg $i0;

        $i2 = neg $i0;

        $i0 = $i1 ^ $i2;

        $i1 = $i2 & $i1;

        $i1 = $i1 << 1;

        $i1 = $i0 + $i1;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int c> = $i1;

        $r1 = virtualinvoke $r0.<c.g.a.l.e: java.lang.String a()>();

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 | 17;

        $i1 = $i1 << 1;

        $i0 = $i0 ^ 17;

        $i0 = neg $i0;

        $i2 = -1;

        $i0 = $i0 ^ $i2;

        $i1 = $i1 - $i0;

        $i0 = -1;

        $i1 = $i1 + $i0;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        return $r3;
    }

    public static byte[] a(java.lang.Integer)
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        java.lang.Integer $r0;
        java.lang.NullPointerException r5;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Integer;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 ^ 11;

        $i0 = $i0 & 11;

        $z0 = 1;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        $i1 = virtualinvoke $r0.<java.lang.Integer: int intValue()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 ^ 1;

        $i2 = $i0 & 1;

        $i1 = $i1 | $i2;

        $i1 = $i1 << 1;

        $i2 = -2;

        $i2 = $i0 & $i2;

        $i3 = -1;

        $i0 = $i0 ^ $i3;

        $i0 = $i0 & 1;

        $i0 = $i0 | $i2;

        $i0 = neg $i0;

        $i2 = -1;

        $i0 = $i0 ^ $i2;

        $i1 = $i1 - $i0;

        $i1 = $i1 - 1;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label5;

     label3:
        r5 = new java.lang.NullPointerException;

        specialinvoke r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: specialinvoke $u0#32.<java.lang.Object: int hashCode()>()");

        throw r5;

     label4:
        $r4 := @caughtexception;

        throw $r4;

     label5:
        return $r3;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public static byte[] a(java.lang.Iterable)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        java.lang.Iterable $r0;
        byte $b3;
        int $i0, $i1, $i2, $i4;
        c.g.a.g.f $r1;

        $r0 := @parameter0: java.lang.Iterable;

        $i1 = <c.g.a.c.d: int b>;

        $i2 = $i1 | 15;

        $i2 = $i2 << 1;

        $i0 = -16;

        $i0 = $i1 & $i0;

        $i4 = -1;

        $i1 = $i1 ^ $i4;

        $i1 = $i1 & 15;

        $i0 = $i1 | $i0;

        $i0 = neg $i0;

        $i1 = $i2 | $i0;

        $i1 = $i1 << 1;

        $i2 = $i0 ^ $i2;

        $i2 = $i1 - $i2;

        $i0 = $i2 % 128;

        <c.g.a.c.d: int c> = $i0;

        $i2 = $i2 % 2;

        if $i2 != 0 goto label1;

        $b3 = 97;

        goto label2;

     label1:
        $b3 = 68;

     label2:
        if $b3 == 68 goto label6;

        $r1 = staticinvoke <c.g.a.c.n: c.g.a.g.f a()>();

        $r0 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Iterable)>($r1, $r0);

        $r2 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r0);

     label3:
        $i2 = 50 / 0;

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        throw $r3;

     label6:
        $r1 = staticinvoke <c.g.a.c.n: c.g.a.g.f a()>();

        $r0 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Iterable)>($r1, $r0);

        $r2 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r0);

        return $r2;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static byte[] a(java.lang.Long)
    {
        byte[] $r3;
        long $l2;
        java.nio.charset.Charset $r2;
        java.lang.Long $r0;
        int $i0, $i1, $i3;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Long;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 & 105;

        $i0 = $i0 | 105;

        $i1 = $i1 + $i0;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        $l2 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 & 125;

        $i0 = $i0 | 125;

        $i3 = -1;

        $i0 = $i0 ^ $i3;

        $i1 = $i1 - $i0;

        $i0 = -1;

        $i1 = $i1 + $i0;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        return $r3;
    }

    public static byte[] a(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r0;
        java.lang.NullPointerException r4;
        java.nio.charset.Charset $r2;
        byte $b3;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 & 9;

        $i0 = $i0 ^ 9;

        $i2 = $i0 | $i1;

        $i0 = $i1 ^ $i2;

        $i1 = $i2 & $i1;

        $i1 = $i1 << 1;

        $i1 = $i0 + $i1;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = <c.g.a.c.d: int c>;

        $i1 = -44;

        $i1 = $i0 & $i1;

        $i2 = -1;

        $i2 = $i0 ^ $i2;

        $i2 = $i2 & 43;

        $i1 = $i1 | $i2;

        $i0 = $i0 & 43;

        $i0 = $i0 << 1;

        $i0 = neg $i0;

        $i0 = neg $i0;

        $i2 = $i1 | $i0;

        $i2 = $i2 << 1;

        $i1 = $i0 ^ $i1;

        $i1 = $i2 - $i1;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $b3 = 68;

        goto label2;

     label1:
        $b3 = 94;

     label2:
        if $b3 == 94 goto label5;

     label3:
        r4 = new java.lang.NullPointerException;

        specialinvoke r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: specialinvoke $u0#32.<java.lang.Object: int hashCode()>()");

        throw r4;

     label4:
        $r3 := @caughtexception;

        throw $r3;

     label5:
        return $r0;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public static byte[] a(java.util.Collection)
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        java.util.Collection $r0;
        java.lang.Iterable $r2;
        java.util.ArrayList $r3;
        byte $b3;
        int $i0, $i1, $i2;
        c.g.a.g.f $r1;

        $r0 := @parameter0: java.util.Collection;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = -18;

        $i1 = $i0 & $i1;

        $i2 = -1;

        $i2 = $i0 ^ $i2;

        $i2 = $i2 & 17;

        $i1 = $i1 | $i2;

        $i0 = $i0 & 17;

        $i0 = $i0 << 1;

        $i0 = neg $i0;

        $i0 = neg $i0;

        $i2 = -1;

        $i0 = $i0 ^ $i2;

        $i1 = $i1 - $i0;

        $i0 = -1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $b3 = 0;

        goto label2;

     label1:
        $b3 = 8;

     label2:
        if $b3 == 0 goto label3;

        $r1 = staticinvoke <c.g.a.c.h: c.g.a.g.f a()>();

        $r2 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Iterable)>($r1, $r0);

        $r3 = staticinvoke <c.g.a.b.b: java.util.ArrayList a(java.lang.Iterable)>($r2);

        $r4 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r3);

        return $r4;

     label3:
        $r1 = staticinvoke <c.g.a.c.h: c.g.a.g.f a()>();

        $r2 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Iterable)>($r1, $r0);

        $r3 = staticinvoke <c.g.a.b.b: java.util.ArrayList a(java.lang.Iterable)>($r2);

        $r4 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r3);

     label4:
        $i1 = 32 / 0;

     label5:
        return $r4;

     label6:
        $r5 := @caughtexception;

        throw $r5;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static byte[] b(java.lang.Long)
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        long $l4;
        java.lang.NullPointerException r5;
        byte $b3;
        java.nio.charset.Charset $r2;
        java.lang.Long $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Long;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 ^ 123;

        $i0 = $i0 & 123;

        $i0 = $i0 | $i1;

        $i0 = $i0 << 1;

        $i2 = neg $i1;

        $i1 = $i0 ^ $i2;

        $i0 = $i0 & $i2;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $b3 = 28;

        goto label2;

     label1:
        $b3 = 23;

     label2:
        if $b3 == 23 goto label5;

        $l4 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

     label3:
        r5 = new java.lang.NullPointerException;

        specialinvoke r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r5;

     label4:
        $r4 := @caughtexception;

        throw $r4;

     label5:
        $l4 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        return $r3;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public static byte[] b(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r0;
        java.lang.NullPointerException r4;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int b>;

        $i0 = $i0 + 116;

        $i0 = $i0 - 1;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int c> = $i0;

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i1 = <c.g.a.c.d: int b>;

        $i0 = $i1 & 121;

        $i1 = $i1 ^ 121;

        $i2 = $i1 | $i0;

        $i1 = $i0 & $i2;

        $i0 = $i2 | $i0;

        $i0 = $i1 + $i0;

        $i1 = $i0 % 128;

        <c.g.a.c.d: int c> = $i1;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 1 goto label5;

     label3:
        r4 = new java.lang.NullPointerException;

        specialinvoke r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: specialinvoke $u0#19.<java.lang.Object: int hashCode()>()");

        throw r4;

     label4:
        $r3 := @caughtexception;

        throw $r3;

     label5:
        return $r0;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public static byte[] c(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r0;
        java.nio.charset.Charset $r2;
        byte $b3;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 & 37;

        $i2 = $i0 | 37;

        $i0 = $i1 & $i2;

        $i1 = $i2 | $i1;

        $i1 = $i0 + $i1;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i1 = <c.g.a.c.d: int b>;

        $i1 = $i1 + 2;

        $i0 = -1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int c> = $i0;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label1;

        $b3 = 13;

        goto label2;

     label1:
        $b3 = 23;

     label2:
        if $b3 == 13 goto label3;

        return $r0;

     label3:
        $i1 = 4 / 0;

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        throw $r3;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static byte[] d(java.lang.String)
    {
        byte[] $r0;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 ^ 123;

        $i2 = $i0 & 123;

        $i1 = $i1 | $i2;

        $i1 = $i1 << 1;

        $i3 = -1;

        $i2 = $i2 ^ $i3;

        $i0 = $i0 | 123;

        $i0 = $i0 & $i2;

        $i0 = $i1 - $i0;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int b> = $i0;

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i1 = <c.g.a.c.d: int c>;

        $i0 = $i1 ^ 21;

        $i2 = $i1 & 21;

        $i0 = $i0 | $i2;

        $i0 = $i0 << 1;

        $i2 = -22;

        $i2 = $i1 & $i2;

        $i3 = -1;

        $i1 = $i1 ^ $i3;

        $i1 = $i1 & 21;

        $i1 = $i1 | $i2;

        $i1 = neg $i1;

        $i2 = -1;

        $i1 = $i1 ^ $i2;

        $i0 = $i0 - $i1;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int b> = $i0;

        return $r0;
    }

    public static byte[] e(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        java.nio.charset.Charset $r1;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 ^ 95;

        $i0 = $i0 & 95;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 1 goto label3;

        $r1 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        goto label5;

     label3:
        $r1 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

     label4:
        $i1 = 69 / 0;

     label5:
        $i1 = <c.g.a.c.d: int c>;

        $i1 = $i1 + 7;

        $i1 = $i1 % 128;

        <c.g.a.c.d: int b> = $i1;

        return $r2;

     label6:
        $r3 := @caughtexception;

        throw $r3;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static byte[] f(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        java.lang.NullPointerException r4, $r5;
        byte $b3;
        java.nio.charset.Charset $r1;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int c>;

        $i1 = $i0 ^ 51;

        $i2 = $i0 & 51;

        $i1 = $i1 | $i2;

        $i1 = $i1 << 1;

        $i2 = -52;

        $i2 = $i0 & $i2;

        $i4 = -1;

        $i0 = $i0 ^ $i4;

        $i0 = $i0 & 51;

        $i0 = $i0 | $i2;

        $i0 = $i1 - $i0;

        $i1 = $i0 % 128;

        <c.g.a.c.d: int b> = $i1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label1;

        $b3 = 62;

        goto label2;

     label1:
        $b3 = 83;

     label2:
        if $b3 == 62 goto label3;

        $r1 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        goto label7;

     label3:
        $r1 = <c.g.a.i.d: java.nio.charset.Charset a>;

        virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

     label4:
        $r5 = new java.lang.NullPointerException;

     label5:
        r4 = $r5;

     label6:
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r4;

     label7:
        $i0 = <c.g.a.c.d: int c>;

        $i0 = $i0 + 114;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int b> = $i0;

        return $r2;

     label8:
        $r3 := @caughtexception;

        throw $r3;

        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public static byte[] g(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r0;
        java.lang.NullPointerException r4;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $i0 = <c.g.a.c.d: int b>;

        $i1 = $i0 | 102;

        $z0 = 1;

        $i1 = $i1 << 1;

        $i0 = $i0 ^ 102;

        $i0 = $i1 - $i0;

        $i0 = $i0 - 1;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int c> = $i0;

        $r2 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = <c.g.a.c.d: int b>;

        $i1 = -114;

        $i1 = $i0 & $i1;

        $i2 = -1;

        $i2 = $i0 ^ $i2;

        $i2 = $i2 & 113;

        $i1 = $i1 | $i2;

        $i0 = $i0 & 113;

        $i0 = $i0 << 1;

        $i0 = $i1 + $i0;

        $i1 = $i0 % 128;

        <c.g.a.c.d: int c> = $i1;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label1;

        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        return $r0;

     label2:
        r4 = new java.lang.NullPointerException;

        specialinvoke r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: specialinvoke $u0#24.<java.lang.Object: int hashCode()>()");

        throw r4;

     label3:
        $r3 := @caughtexception;

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public static byte[] h(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        java.lang.NullPointerException r4;
        java.nio.charset.Charset $r1;
        int $i0, $i1, $i2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i1 = <c.g.a.c.d: int c>;

        $i0 = $i1 & 1;

        $i2 = $i1 | 1;

        $i1 = $i0 ^ $i2;

        $i0 = $i2 & $i0;

        $i0 = $i0 << 1;

        $i1 = $i1 + $i0;

        $i0 = $i1 % 128;

        <c.g.a.c.d: int b> = $i0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 1 goto label5;

        $r1 = <c.g.a.i.d: java.nio.charset.Charset a>;

        virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

     label3:
        r4 = new java.lang.NullPointerException;

        specialinvoke r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid array reference replaced by Soot");

        throw r4;

     label4:
        $r3 := @caughtexception;

        throw $r3;

     label5:
        $r1 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        return $r2;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public final java.lang.Object a(java.lang.Object)
    {
        byte[] $r10;
        n.a.b.b $r24;
        byte $b3, $b7, $b8;
        java.util.Locale $r20;
        java.util.Map $r15;
        boolean $z0;
        java.util.Collection $r16;
        c.g.a.g.p $r13;
        byte[][] $r2;
        java.util.List $r21;
        c.g.a.g.s $r4;
        c.g.a.g.f $r14;
        c.g.a.c.d r0;
        c.g.a.i.c $r6, $r11;
        c.g.a.i.b $r22, $r23;
        c.g.a.i.a $r7, $r12;
        java.lang.Iterable $r17;
        java.util.ArrayList $r19;
        short $s4, $s5;
        java.nio.charset.Charset $r9;
        int $i0, $i1, $i2, $i6, $i9, $i10, $i11;
        java.lang.String $r8, $r25;
        c.g.a.j.p[] $r18;
        c.g.a.l.k $r3;
        c.g.a.l.c $r26;
        java.lang.Object $r1;
        c.g.a.l.h $r5;

        r0 := @this: c.g.a.c.d;

        $r1 := @parameter0: java.lang.Object;

        $i0 = <c.g.a.c.d: int b>;

        $i1 = $i0 & 37;

        $i2 = -1;

        $i2 = $i1 ^ $i2;

        $i0 = $i0 | 37;

        $i0 = $i0 & $i2;

        $i1 = $i1 << 1;

        $i1 = neg $i1;

        $i1 = neg $i1;

        $i2 = $i0 | $i1;

        $i2 = $i2 << 1;

        $i0 = $i0 ^ $i1;

        $i0 = $i2 - $i0;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int c> = $i0;

        $r3 = (c.g.a.l.k) $r1;

        $r4 = r0.<c.g.a.c.d: c.g.a.g.s d>;

        $r1 = interfaceinvoke $r4.<c.g.a.g.s: java.lang.Object a()>();

        $r5 = (c.g.a.l.h) $r1;

        $r6 = virtualinvoke $r5.<c.g.a.l.h: c.g.a.i.c b()>();

        $r7 = virtualinvoke $r5.<c.g.a.l.h: c.g.a.i.a a()>();

        $r2 = newarray (byte[])[16];

        $r8 = virtualinvoke $r3.<c.g.a.l.e: java.lang.String a()>();

        $r9 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        $r11 = virtualinvoke $r5.<c.g.a.l.h: c.g.a.i.c b()>();

        $r12 = virtualinvoke $r5.<c.g.a.l.h: c.g.a.i.a a()>();

        $i1 = <c.g.a.c.d: int b>;

        $i0 = $i1 & 13;

        $i1 = $i1 | 13;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int c> = $i0;

        $i0 = 0;

     label01:
        $i1 = lengthof $r10;

        if $i0 >= $i1 goto label02;

        $b3 = 36;

        goto label03;

     label02:
        $b3 = 78;

     label03:
        if $b3 == 78 goto label51;

        $i2 = <c.g.a.c.d: int b>;

        $i1 = $i2 ^ 19;

        $i2 = $i2 & 19;

        $i2 = $i2 << 1;

        $i6 = -1;

        $i2 = $i2 ^ $i6;

        $i1 = $i1 - $i2;

        $i1 = $i1 - 1;

        $i2 = $i1 % 128;

        <c.g.a.c.d: int c> = $i2;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label04;

        $b3 = 28;

        goto label05;

     label04:
        $b3 = 7;

     label05:
        if $b3 == 28 goto label08;

        $b3 = $r10[$i0];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i1 = virtualinvoke $r11.<c.g.a.i.c: int c()>();

        $i1 = neg $i1;

        $i1 = neg $i1;

        $i2 = -1;

        $i2 = $i1 ^ $i2;

        $i6 = (int) $s4;

        $i2 = $i2 & $i6;

        $s5 = (short) -1;

        $s5 = $s4 ^ $s5;

        $i6 = (int) $s5;

        $i6 = $i1 & $i6;

        $i2 = $i2 | $i6;

        $i6 = (int) $s4;

        $i1 = $i6 & $i1;

        $i1 = $i1 << 1;

        $i1 = neg $i1;

        $i1 = neg $i1;

        $i6 = -1;

        $i1 = $i1 ^ $i6;

        $i1 = $i2 - $i1;

        $i1 = $i1 - 1;

        $i2 = virtualinvoke $r11.<c.g.a.i.c: int f()>();

        $i2 = neg $i2;

        $i6 = neg $i2;

        $i2 = $i1 ^ $i6;

        $i1 = $i6 & $i1;

        $i1 = $i1 << 1;

        $i1 = $i2 + $i1;

        $z0 = virtualinvoke $r11.<c.g.a.i.c: boolean e()>();

        if $z0 == 0 goto label06;

        $b3 = 65;

        goto label07;

     label06:
        $b3 = 64;

     label07:
        if $b3 == 65 goto label11;

        goto label12;

     label08:
        $b7 = $r10[$i0];

        $b3 = $b7 & 29;

        $b8 = $b3 ^ -1;

        $b7 = $b7 | 29;

        $b7 = $b8 & $b7;

        $b8 = $b7 ^ $b3;

        $b3 = $b7 & $b3;

        $b3 = $b8 | $b3;

        $i1 = virtualinvoke $r11.<c.g.a.i.c: int c()>();

        $i2 = neg $i1;

        $i1 = (int) $b3;

        $i1 = $i1 & $i2;

        $i6 = (int) $b3;

        $i2 = $i6 | $i2;

        $i2 = neg $i2;

        $i6 = neg $i2;

        $i2 = $i1 ^ $i6;

        $i1 = $i1 & $i6;

        $i1 = $i1 << 1;

        $i1 = $i2 + $i1;

        $i2 = virtualinvoke $r11.<c.g.a.i.c: int f()>();

        $i2 = neg $i2;

        $i2 = neg $i2;

        $i6 = -1;

        $i2 = $i2 ^ $i6;

        $i1 = $i1 - $i2;

        $i2 = -1;

        $i1 = $i1 + $i2;

        $z0 = virtualinvoke $r11.<c.g.a.i.c: boolean e()>();

        if $z0 == 0 goto label09;

        $b3 = 50;

        goto label10;

     label09:
        $b3 = 15;

     label10:
        if $b3 == 15 goto label12;

     label11:
        $i2 = <c.g.a.c.d: int c>;

        $i2 = $i2 + 96;

        $i2 = $i2 - 1;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $z0 = 1;

        goto label14;

     label12:
        $i2 = <c.g.a.c.d: int b>;

        $i6 = -122;

        $i6 = $i2 & $i6;

        $i9 = -1;

        $i9 = $i2 ^ $i9;

        $i9 = $i9 & 121;

        $i6 = $i6 | $i9;

        $i2 = $i2 & 121;

        $i9 = $i2 << 1;

        $i2 = $i6 & $i9;

        $i6 = $i9 | $i6;

        $i2 = $i2 + $i6;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int c> = $i6;

        $i2 = $i2 % 2;

        if $i2 != 0 goto label13;

        goto label13;

     label13:
        $z0 = 0;

     label14:
        $i1 = $i1 + $z0;

        $z0 = virtualinvoke $r11.<c.g.a.i.c: boolean g()>();

        if $z0 == 0 goto label15;

        $b3 = 56;

        goto label16;

     label15:
        $b3 = 34;

     label16:
        if $b3 == 56 goto label17;

        $i2 = <c.g.a.c.d: int c>;

        $i2 = $i2 + 98;

        $i6 = -1;

        $i6 = $i2 | $i6;

        $i6 = $i6 << 1;

        $i9 = -1;

        $i2 = $i2 ^ $i9;

        $i2 = $i6 - $i2;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $z0 = 0;

        goto label18;

     label17:
        $i6 = <c.g.a.c.d: int c>;

        $i2 = $i6 ^ 16;

        $i6 = $i6 & 16;

        $i6 = $i6 << 1;

        $i2 = $i2 + $i6;

        $i2 = $i2 - 1;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $i2 = <c.g.a.c.d: int c>;

        $i2 = $i2 + 23;

        $i2 = $i2 - 1;

        $i2 = $i2 - 1;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $z0 = 1;

     label18:
        $i2 = $i1 & $z0;

        $i1 = $z0 | $i1;

        $i1 = $i2 + $i1;

        $z0 = virtualinvoke $r12.<c.g.a.i.a: boolean m()>();

        if $z0 == 0 goto label19;

        $b3 = 62;

        goto label20;

     label19:
        $b3 = 84;

     label20:
        if $b3 == 62 goto label22;

        $i2 = <c.g.a.c.d: int c>;

        $i2 = $i2 + 80;

        $i2 = $i2 - 1;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int b> = $i6;

        $i2 = $i2 % 2;

        if $i2 == 0 goto label21;

        goto label21;

     label21:
        $z0 = 0;

        goto label25;

     label22:
        $i6 = <c.g.a.c.d: int c>;

        $i2 = $i6 & 33;

        $i6 = $i6 ^ 33;

        $i6 = $i6 | $i2;

        $i6 = neg $i6;

        $i6 = neg $i6;

        $i9 = $i2 | $i6;

        $i9 = $i9 << 1;

        $i2 = $i6 ^ $i2;

        $i2 = $i9 - $i2;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int b> = $i6;

        $i2 = $i2 % 2;

        if $i2 == 0 goto label23;

        goto label23;

     label23:
        $i2 = <c.g.a.c.d: int c>;

        $i2 = $i2 + 35;

        $i2 = $i2 - 1;

        $i2 = $i2 - 1;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int b> = $i6;

        $i2 = $i2 % 2;

        if $i2 == 0 goto label24;

        goto label24;

     label24:
        $z0 = 1;

     label25:
        $b3 = $z0 & -1;

        $b3 = $b3 ^ -1;

        $b8 = $z0 | -1;

        $b3 = $b8 & $b3;

        $i2 = (int) $b3;

        $i2 = neg $i2;

        $i6 = $i1 | $i2;

        $i6 = $i6 << 1;

        $i1 = $i2 ^ $i1;

        $i1 = $i6 - $i1;

        $i1 = $i1 - 1;

        $z0 = virtualinvoke $r12.<c.g.a.i.a: boolean e()>();

        if $z0 == 0 goto label26;

        $b3 = 53;

        goto label27;

     label26:
        $b3 = 71;

     label27:
        if $b3 == 71 goto label29;

        $i6 = <c.g.a.c.d: int c>;

        $i2 = $i6 & 83;

        $i6 = $i6 ^ 83;

        $i6 = $i6 | $i2;

        $i6 = neg $i6;

        $i6 = neg $i6;

        $i9 = -1;

        $i6 = $i6 ^ $i9;

        $i2 = $i2 - $i6;

        $i2 = $i2 - 1;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int b> = $i6;

        $i2 = $i2 % 2;

        if $i2 == 0 goto label28;

        goto label28;

     label28:
        $z0 = 1;

        goto label31;

     label29:
        $i6 = <c.g.a.c.d: int b>;

        $i2 = $i6 ^ 67;

        $i9 = $i6 & 67;

        $i2 = $i2 | $i9;

        $i2 = $i2 << 1;

        $i10 = -1;

        $i9 = $i9 ^ $i10;

        $i6 = $i6 | 67;

        $i6 = $i9 & $i6;

        $i9 = neg $i6;

        $i6 = $i2 ^ $i9;

        $i2 = $i9 & $i2;

        $i2 = $i2 << 1;

        $i2 = $i6 + $i2;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int c> = $i6;

        $i2 = $i2 % 2;

        if $i2 != 0 goto label30;

        goto label30;

     label30:
        $z0 = 0;

     label31:
        $i2 = $i1 & $z0;

        $i1 = $z0 ^ $i1;

        $i1 = $i1 | $i2;

        $i1 = neg $i1;

        $i1 = neg $i1;

        $i6 = -1;

        $i1 = $i1 ^ $i6;

        $i1 = $i2 - $i1;

        $i1 = $i1 - 1;

        $z0 = virtualinvoke $r12.<c.g.a.i.a: boolean g()>();

        if $z0 == 0 goto label32;

        $z0 = 0;

        goto label33;

     label32:
        $z0 = 1;

     label33:
        if $z0 == 0 goto label34;

        $i2 = <c.g.a.c.d: int c>;

        $i2 = $i2 + 63;

        $i2 = $i2 - 1;

        $i6 = -1;

        $i6 = $i2 & $i6;

        $i9 = -1;

        $i2 = $i2 | $i9;

        $i2 = $i6 + $i2;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $z0 = 0;

        goto label35;

     label34:
        $i2 = <c.g.a.c.d: int c>;

        $i6 = -60;

        $i6 = $i2 & $i6;

        $i9 = -1;

        $i9 = $i2 ^ $i9;

        $i9 = 59 & $i9;

        $i6 = $i6 | $i9;

        $i2 = $i2 & 59;

        $i2 = $i2 << 1;

        $i2 = neg $i2;

        $i9 = neg $i2;

        $i2 = $i6 ^ $i9;

        $i6 = $i6 & $i9;

        $i6 = $i6 << 1;

        $i2 = $i2 + $i6;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $i6 = <c.g.a.c.d: int c>;

        $i2 = $i6 ^ 91;

        $i6 = $i6 & 91;

        $i6 = $i6 << 1;

        $i2 = $i2 + $i6;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int b> = $i2;

        $z0 = 1;

     label35:
        $i1 = $i1 + $z0;

        $z0 = virtualinvoke $r12.<c.g.a.i.a: boolean j()>();

        if $z0 == 0 goto label36;

        $b3 = 29;

        goto label37;

     label36:
        $b3 = 34;

     label37:
        if $b3 == 34 goto label43;

        $i2 = <c.g.a.c.d: int b>;

        $i6 = $i2 | 89;

        $i6 = $i6 << 1;

        $i2 = $i2 ^ 89;

        $i2 = $i6 - $i2;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int c> = $i6;

        $i2 = $i2 % 2;

        if $i2 != 0 goto label38;

        $b3 = 27;

        goto label39;

     label38:
        $b3 = 38;

     label39:
        if $b3 == 27 goto label40;

        $z0 = 1;

        goto label41;

     label40:
        $z0 = 0;

     label41:
        $i2 = <c.g.a.c.d: int c>;

        $i6 = -48;

        $i6 = $i2 & $i6;

        $i9 = -1;

        $i9 = $i2 ^ $i9;

        $i9 = 47 & $i9;

        $i6 = $i6 | $i9;

        $i2 = $i2 & 47;

        $i2 = $i2 << 1;

        $i2 = $i6 + $i2;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int b> = $i6;

        $i2 = $i2 % 2;

        if $i2 == 0 goto label42;

        goto label42;

     label42:
        goto label45;

     label43:
        $i6 = <c.g.a.c.d: int c>;

        $i2 = $i6 ^ 121;

        $i6 = $i6 & 121;

        $i6 = $i6 | $i2;

        $i6 = $i6 << 1;

        $i2 = neg $i2;

        $i9 = -1;

        $i2 = $i2 ^ $i9;

        $i2 = $i6 - $i2;

        $i2 = $i2 - 1;

        $i6 = $i2 % 128;

        <c.g.a.c.d: int b> = $i6;

        $i2 = $i2 % 2;

        if $i2 == 0 goto label44;

        goto label44;

     label44:
        $z0 = 0;

     label45:
        $b3 = $z0 & -1;

        $b3 = $b3 ^ -1;

        $b8 = $z0 | -1;

        $b3 = $b3 & $b8;

        $i2 = (int) $b3;

        $i6 = neg $i2;

        $i2 = $i1 ^ $i6;

        $i1 = $i6 & $i1;

        $i1 = $i1 << 1;

        $i1 = $i2 + $i1;

        $i6 = $i1 - 1;

        $i2 = virtualinvoke $r12.<c.g.a.i.a: int c()>();

        $i1 = $i6 ^ $i2;

        $i9 = $i6 & $i2;

        $i1 = $i1 | $i9;

        $i1 = $i1 << 1;

        $i9 = -1;

        $i9 = $i2 ^ $i9;

        $i9 = $i9 & $i6;

        $i10 = -1;

        $i6 = $i6 ^ $i10;

        $i2 = $i2 & $i6;

        $i2 = $i2 | $i9;

        $i2 = neg $i2;

        $i6 = $i1 | $i2;

        $i6 = $i6 << 1;

        $i1 = $i2 ^ $i1;

        $i1 = $i6 - $i1;

        $i2 = <c.g.a.c.d: int b>;

        $i6 = -70;

        $i6 = $i2 & $i6;

        $i9 = -1;

        $i9 = $i2 ^ $i9;

        $i9 = $i9 & 69;

        $i6 = $i6 | $i9;

        $i2 = $i2 & 69;

        $i2 = $i2 << 1;

        $i9 = $i6 | $i2;

        $i9 = $i9 << 1;

        $i2 = $i2 ^ $i6;

        $i2 = $i9 - $i2;

        $i2 = $i2 % 128;

        <c.g.a.c.d: int c> = $i2;

        $i2 = 1;

     label46:
        if $i1 == 0 goto label47;

        $b3 = 76;

        goto label48;

     label47:
        $b3 = 73;

     label48:
        if $b3 == 73 goto label49;

        $i9 = <c.g.a.c.d: int b>;

        $i6 = $i9 & 9;

        $i9 = $i9 ^ 9;

        $i9 = $i9 | $i6;

        $i9 = neg $i9;

        $i10 = neg $i9;

        $i9 = $i6 ^ $i10;

        $i6 = $i10 & $i6;

        $i6 = $i6 << 1;

        $i6 = $i9 + $i6;

        $i6 = $i6 % 128;

        <c.g.a.c.d: int c> = $i6;

        $i6 = $i0 | $i2;

        $i6 = $i6 << 1;

        $i9 = $i0 ^ $i2;

        $i6 = $i6 - $i9;

        $i9 = lengthof $r10;

        $i6 = $i6 % $i9;

        $b3 = $r10[$i6];

        $b8 = (byte) $i1;

        $i9 = (int) $b8;

        $i9 = neg $i9;

        $i10 = neg $i9;

        $i9 = $i10 & 0;

        $i11 = -1;

        $i10 = $i10 ^ $i11;

        $i11 = -1;

        $i10 = $i10 & $i11;

        $i9 = $i9 | $i10;

        $i9 = neg $i9;

        $i10 = (int) $b3;

        $i10 = $i10 | $i9;

        $i10 = $i10 << 1;

        $i11 = (int) $b3;

        $i9 = $i9 ^ $i11;

        $i9 = $i10 - $i9;

        $i10 = -1;

        $i10 = $i9 & $i10;

        $i11 = -1;

        $i9 = $i9 | $i11;

        $i9 = $i10 + $i9;

        $b3 = (byte) $i9;

        $r10[$i6] = $b3;

        $i1 = $i1 / 4;

        $i6 = $i2 & 1;

        $i2 = $i2 ^ 1;

        $i9 = $i2 | $i6;

        $i2 = $i6 & $i9;

        $i6 = $i9 | $i6;

        $i2 = $i6 + $i2;

        $i9 = <c.g.a.c.d: int c>;

        $i6 = $i9 & 51;

        $i9 = $i9 ^ 51;

        $i9 = $i9 | $i6;

        $i10 = -1;

        $i9 = $i9 ^ $i10;

        $i6 = $i6 - $i9;

        $i6 = $i6 - 1;

        $i6 = $i6 % 128;

        <c.g.a.c.d: int b> = $i6;

        goto label46;

     label49:
        $i1 = $i0 | 9;

        $i1 = $i1 << 1;

        $i0 = $i0 ^ 9;

        $i0 = $i1 - $i0;

        $i1 = -8;

        $i1 = $i0 & $i1;

        $i2 = -8;

        $i0 = $i0 | $i2;

        $i0 = $i1 + $i0;

        $i1 = <c.g.a.c.d: int b>;

        $i2 = -116;

        $i2 = $i1 & $i2;

        $i6 = -1;

        $i6 = $i1 ^ $i6;

        $i6 = $i6 & 115;

        $i2 = $i2 | $i6;

        $i1 = $i1 & 115;

        $i6 = $i1 << 1;

        $i1 = $i2 ^ $i6;

        $i2 = $i6 & $i2;

        $i2 = $i2 << 1;

        $i1 = $i1 + $i2;

        $i2 = $i1 % 128;

        <c.g.a.c.d: int c> = $i2;

        $i1 = $i1 % 2;

        if $i1 != 0 goto label50;

        goto label50;

     label50:
        goto label01;

     label51:
        $r2[0] = $r10;

        $r8 = virtualinvoke $r6.<c.g.a.i.c: java.lang.String i()>();

        $r9 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        $r2[1] = $r10;

        $r13 = virtualinvoke $r6.<c.g.a.i.c: c.g.a.g.p h()>();

        $r14 = staticinvoke <c.g.a.c.j: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r13);

        $r2[2] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p o()>();

        $r14 = staticinvoke <c.g.a.c.q: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[3] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p p()>();

        $r14 = staticinvoke <c.g.a.c.a: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[4] = $r10;

        $r8 = virtualinvoke $r6.<c.g.a.i.c: java.lang.String a()>();

        $r9 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        $r2[5] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p a()>();

        $r14 = staticinvoke <c.g.a.c.b: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[6] = $r10;

        $r13 = virtualinvoke $r6.<c.g.a.i.c: c.g.a.g.p d()>();

        $r14 = staticinvoke <c.g.a.c.f: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[7] = $r10;

        $r14 = staticinvoke <c.g.a.c.p: c.g.a.g.f a()>();

        $r15 = virtualinvoke $r6.<c.g.a.i.c: java.util.Map b()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>();

        $r17 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Iterable)>($r14, $r16);

        $r10 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r17);

        $r2[8] = $r10;

        $r14 = staticinvoke <c.g.a.c.m: c.g.a.g.f a()>();

        $r18 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.j.p[] d()>();

        $r17 = staticinvoke <c.g.a.g.q: java.lang.Iterable a(c.g.a.g.f,java.lang.Object[])>($r14, $r18);

        $r19 = staticinvoke <c.g.a.b.b: java.util.ArrayList a(java.lang.Iterable)>($r17);

        $r10 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r19);

        $r2[9] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p f()>();

        $r14 = staticinvoke <c.g.a.c.e: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[10] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p k()>();

        $r14 = staticinvoke <c.g.a.c.k: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[11] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p h()>();

        $r14 = staticinvoke <c.g.a.c.l: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[12] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p n()>();

        $r14 = staticinvoke <c.g.a.c.c: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[13] = $r10;

        $r13 = virtualinvoke $r7.<c.g.a.i.a: c.g.a.g.p l()>();

        $r14 = staticinvoke <c.g.a.c.g: c.g.a.g.f a()>();

        $r13 = virtualinvoke $r13.<c.g.a.g.p: c.g.a.g.p a(c.g.a.g.f)>($r14);

        $r10 = <c.g.a.c.d: byte[] a>;

        $r1 = virtualinvoke $r13.<c.g.a.g.p: java.lang.Object c(java.lang.Object)>($r10);

        $r10 = (byte[]) $r1;

        $r2[14] = $r10;

        $r20 = virtualinvoke $r7.<c.g.a.i.a: java.util.Locale b()>();

        $r8 = virtualinvoke $r20.<java.util.Locale: java.lang.String toString()>();

        $r9 = <c.g.a.i.d: java.nio.charset.Charset a>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        $r2[15] = $r10;

        $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r10 = staticinvoke <c.g.a.i.b: byte[] b(java.lang.Iterable)>($r21);

        $r26 = new c.g.a.l.c;

        $r22 = staticinvoke <c.g.a.i.b: c.g.a.i.b b()>();

        $r25 = new java.lang.String;

        $r10 = staticinvoke <n.a.a.a.a.a.c: byte[] d(byte[])>($r10);

        specialinvoke $r25.<java.lang.String: void <init>(byte[])>($r10);

        virtualinvoke $r22.<c.g.a.i.b: c.g.a.i.b a(java.lang.String)>($r25);

        $r23 = staticinvoke <c.g.a.i.b: c.g.a.i.b b()>();

        $r7 = virtualinvoke $r5.<c.g.a.l.h: c.g.a.i.a a()>();

        $r24 = staticinvoke <c.g.a.j.s: n.a.b.b a(c.g.a.i.a)>($r7);

        virtualinvoke $r23.<c.g.a.i.b: c.g.a.i.b a(n.a.b.b)>($r24);

        $r6 = virtualinvoke $r5.<c.g.a.l.h: c.g.a.i.c b()>();

        $r24 = staticinvoke <c.g.a.j.p: n.a.b.b a(c.g.a.i.c)>($r6);

        virtualinvoke $r23.<c.g.a.i.b: c.g.a.i.b a(n.a.b.b)>($r24);

        $r24 = virtualinvoke $r23.<c.g.a.i.b: n.a.b.b a()>();

        virtualinvoke $r22.<c.g.a.i.b: c.g.a.i.b a(n.a.b.b)>($r24);

        $r24 = virtualinvoke $r22.<c.g.a.i.b: n.a.b.b a()>();

        $r8 = virtualinvoke $r24.<n.a.b.b: java.lang.String toString()>();

        specialinvoke $r26.<c.g.a.l.c: void <init>(java.lang.String)>($r8);

        $i1 = <c.g.a.c.d: int c>;

        $i0 = $i1 ^ 87;

        $i1 = $i1 & 87;

        $i1 = $i1 | $i0;

        $i1 = $i1 << 1;

        $i2 = neg $i0;

        $i0 = $i1 ^ $i2;

        $i1 = $i1 & $i2;

        $i1 = $i1 << 1;

        $i0 = $i0 + $i1;

        $i0 = $i0 % 128;

        <c.g.a.c.d: int b> = $i0;

        return $r26;
    }
}
