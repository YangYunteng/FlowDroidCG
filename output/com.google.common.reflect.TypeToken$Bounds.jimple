public class com.google.common.reflect.TypeToken$Bounds extends java.lang.Object
{
    public final java.lang.reflect.Type[] bounds;
    public final boolean target;

    public void <init>(java.lang.reflect.Type[], boolean)
    {
        com.google.common.reflect.TypeToken$Bounds r0;
        java.lang.reflect.Type[] $r1;
        boolean $z0;

        r0 := @this: com.google.common.reflect.TypeToken$Bounds;

        $r1 := @parameter0: java.lang.reflect.Type[];

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.reflect.TypeToken$Bounds: java.lang.reflect.Type[] bounds> = $r1;

        r0.<com.google.common.reflect.TypeToken$Bounds: boolean target> = $z0;

        return;
    }

    public boolean isSubtypeOf(java.lang.reflect.Type)
    {
        com.google.common.reflect.TypeToken$Bounds r0;
        com.google.common.reflect.TypeToken $r4;
        java.lang.reflect.Type $r2, $r3;
        java.lang.reflect.Type[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.google.common.reflect.TypeToken$Bounds;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r1 = r0.<com.google.common.reflect.TypeToken$Bounds: java.lang.reflect.Type[] bounds>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r1[$i1];

        $r4 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r3);

        $z1 = virtualinvoke $r4.<com.google.common.reflect.TypeToken: boolean isSubtypeOf(java.lang.reflect.Type)>($r2);

        $z0 = r0.<com.google.common.reflect.TypeToken$Bounds: boolean target>;

        if $z1 != $z0 goto label2;

        return $z0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = r0.<com.google.common.reflect.TypeToken$Bounds: boolean target>;

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public boolean isSupertypeOf(java.lang.reflect.Type)
    {
        com.google.common.reflect.TypeToken$Bounds r0;
        com.google.common.reflect.TypeToken $r3;
        java.lang.reflect.Type $r2;
        java.lang.reflect.Type[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.google.common.reflect.TypeToken$Bounds;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r3 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r2);

        $r1 = r0.<com.google.common.reflect.TypeToken$Bounds: java.lang.reflect.Type[] bounds>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $z1 = virtualinvoke $r3.<com.google.common.reflect.TypeToken: boolean isSubtypeOf(java.lang.reflect.Type)>($r2);

        $z0 = r0.<com.google.common.reflect.TypeToken$Bounds: boolean target>;

        if $z1 != $z0 goto label2;

        return $z0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = r0.<com.google.common.reflect.TypeToken$Bounds: boolean target>;

        $z0 = $z0 ^ 1;

        return $z0;
    }
}
