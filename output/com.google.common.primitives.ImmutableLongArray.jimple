public final class com.google.common.primitives.ImmutableLongArray extends java.lang.Object implements java.io.Serializable
{
    public static final com.google.common.primitives.ImmutableLongArray EMPTY;
    public final long[] array;
    public final int end;
    public final transient int start;

    static void <clinit>()
    {
        com.google.common.primitives.ImmutableLongArray $r0;
        long[] $r1;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[0];

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY> = $r0;

        return;
    }

    public void <init>(long[])
    {
        int $i0;
        com.google.common.primitives.ImmutableLongArray r0;
        long[] $r1;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 := @parameter0: long[];

        $i0 = lengthof $r1;

        specialinvoke r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[],int,int)>($r1, 0, $i0);

        return;
    }

    public void <init>(long[], int, int)
    {
        long[] $r1;
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.primitives.ImmutableLongArray: long[] array> = $r1;

        r0.<com.google.common.primitives.ImmutableLongArray: int start> = $i0;

        r0.<com.google.common.primitives.ImmutableLongArray: int end> = $i1;

        return;
    }

    public void <init>(long[], int, int, com.google.common.primitives.ImmutableLongArray$1)
    {
        long[] $r1;
        com.google.common.primitives.ImmutableLongArray$1 $r2;
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: com.google.common.primitives.ImmutableLongArray$1;

        specialinvoke r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[],int,int)>($r1, $i0, $i1);

        return;
    }

    public static long[] access$000(com.google.common.primitives.ImmutableLongArray)
    {
        com.google.common.primitives.ImmutableLongArray $r0;
        long[] r1;

        $r0 := @parameter0: com.google.common.primitives.ImmutableLongArray;

        r1 = $r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        return r1;
    }

    public static int access$100(com.google.common.primitives.ImmutableLongArray)
    {
        int i0;
        com.google.common.primitives.ImmutableLongArray $r0;

        $r0 := @parameter0: com.google.common.primitives.ImmutableLongArray;

        i0 = $r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        return i0;
    }

    public static com.google.common.primitives.ImmutableLongArray access$200()
    {
        com.google.common.primitives.ImmutableLongArray r0;

        r0 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

        return r0;
    }

    public static java.util.Spliterator$OfLong access$500(com.google.common.primitives.ImmutableLongArray)
    {
        com.google.common.primitives.ImmutableLongArray $r1;
        java.util.Spliterator$OfLong $r0;

        $r1 := @parameter0: com.google.common.primitives.ImmutableLongArray;

        $r0 = specialinvoke $r1.<com.google.common.primitives.ImmutableLongArray: java.util.Spliterator$OfLong spliterator()>();

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray$Builder builder()
    {
        com.google.common.primitives.ImmutableLongArray$Builder $r0;

        $r0 = new com.google.common.primitives.ImmutableLongArray$Builder;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray$Builder: void <init>(int)>(10);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray$Builder builder(int)
    {
        int $i0;
        com.google.common.primitives.ImmutableLongArray$Builder $r0;
        boolean $z0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "Invalid initialCapacity: %s", $i0);

        $r0 = new com.google.common.primitives.ImmutableLongArray$Builder;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray$Builder: void <init>(int)>($i0);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray copyOf(java.lang.Iterable)
    {
        java.util.Collection $r1;
        com.google.common.primitives.ImmutableLongArray $r2;
        java.lang.Iterable $r0;
        com.google.common.primitives.ImmutableLongArray$Builder $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        $r2 = staticinvoke <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray copyOf(java.util.Collection)>($r1);

        return $r2;

     label1:
        $r3 = staticinvoke <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray$Builder builder()>();

        $r3 = virtualinvoke $r3.<com.google.common.primitives.ImmutableLongArray$Builder: com.google.common.primitives.ImmutableLongArray$Builder addAll(java.lang.Iterable)>($r0);

        $r2 = virtualinvoke $r3.<com.google.common.primitives.ImmutableLongArray$Builder: com.google.common.primitives.ImmutableLongArray build()>();

        return $r2;
    }

    public static com.google.common.primitives.ImmutableLongArray copyOf(java.util.Collection)
    {
        long[] $r2;
        java.util.Collection $r0;
        com.google.common.primitives.ImmutableLongArray $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

        return $r1;

     label1:
        $r1 = new com.google.common.primitives.ImmutableLongArray;

        $r2 = staticinvoke <com.google.common.primitives.Longs: long[] toArray(java.util.Collection)>($r0);

        specialinvoke $r1.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r2);

        return $r1;
    }

    public static com.google.common.primitives.ImmutableLongArray copyOf(java.util.stream.LongStream)
    {
        long[] $r0;
        java.util.stream.LongStream $r1;
        int $i0;
        com.google.common.primitives.ImmutableLongArray $r2;

        $r1 := @parameter0: java.util.stream.LongStream;

        $r0 = interfaceinvoke $r1.<java.util.stream.LongStream: long[] toArray()>();

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $r2 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

        return $r2;

     label1:
        $r2 = new com.google.common.primitives.ImmutableLongArray;

        specialinvoke $r2.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r0);

        return $r2;
    }

    public static com.google.common.primitives.ImmutableLongArray copyOf(long[])
    {
        int $i0;
        long[] $r0;
        com.google.common.primitives.ImmutableLongArray $r1;

        $r0 := @parameter0: long[];

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $r1 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

        return $r1;

     label1:
        $r1 = new com.google.common.primitives.ImmutableLongArray;

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($r0, $i0);

        specialinvoke $r1.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r0);

        return $r1;
    }

    private boolean isPartialView()
    {
        long[] $r1;
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        if $i0 > 0 goto label2;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static com.google.common.primitives.ImmutableLongArray of()
    {
        com.google.common.primitives.ImmutableLongArray r0;

        r0 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

        return r0;
    }

    public static com.google.common.primitives.ImmutableLongArray of(long)
    {
        long $l0;
        com.google.common.primitives.ImmutableLongArray $r0;
        long[] $r1;

        $l0 := @parameter0: long;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[1];

        $r1[0] = $l0;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray of(long, long)
    {
        long[] $r1;
        long $l0, $l1;
        com.google.common.primitives.ImmutableLongArray $r0;

        $l1 := @parameter0: long;

        $l0 := @parameter1: long;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[2];

        $r1[0] = $l1;

        $r1[1] = $l0;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray of(long, long, long)
    {
        long[] $r1;
        long $l0, $l1, $l2;
        com.google.common.primitives.ImmutableLongArray $r0;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[3];

        $r1[0] = $l2;

        $r1[1] = $l0;

        $r1[2] = $l1;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray of(long, long, long, long)
    {
        long[] $r1;
        long $l0, $l1, $l2, $l3;
        com.google.common.primitives.ImmutableLongArray $r0;

        $l3 := @parameter0: long;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $l2 := @parameter3: long;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[4];

        $r1[0] = $l3;

        $r1[1] = $l0;

        $r1[2] = $l1;

        $r1[3] = $l2;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray of(long, long, long, long, long)
    {
        long[] $r1;
        long $l0, $l1, $l2, $l3, $l4;
        com.google.common.primitives.ImmutableLongArray $r0;

        $l4 := @parameter0: long;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $l2 := @parameter3: long;

        $l3 := @parameter4: long;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[5];

        $r1[0] = $l4;

        $r1[1] = $l0;

        $r1[2] = $l1;

        $r1[3] = $l2;

        $r1[4] = $l3;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r0;
    }

    public static com.google.common.primitives.ImmutableLongArray of(long, long, long, long, long, long)
    {
        long $l0, $l1, $l2, $l3, $l4, $l5;
        long[] $r1;
        com.google.common.primitives.ImmutableLongArray $r0;

        $l5 := @parameter0: long;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $l2 := @parameter3: long;

        $l3 := @parameter4: long;

        $l4 := @parameter5: long;

        $r0 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = newarray (long)[6];

        $r1[0] = $l5;

        $r1[1] = $l0;

        $r1[2] = $l1;

        $r1[3] = $l2;

        $r1[4] = $l3;

        $r1[5] = $l4;

        specialinvoke $r0.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r0;
    }

    public static transient com.google.common.primitives.ImmutableLongArray of(long, long[])
    {
        long[] $r0, $r1;
        int $i1;
        long $l0;
        com.google.common.primitives.ImmutableLongArray $r2;

        $l0 := @parameter0: long;

        $r0 := @parameter1: long[];

        $i1 = lengthof $r0;

        $i1 = $i1 + 1;

        $r1 = newarray (long)[$i1];

        $r1[0] = $l0;

        $i1 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 1, $i1);

        $r2 = new com.google.common.primitives.ImmutableLongArray;

        specialinvoke $r2.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r1);

        return $r2;
    }

    private java.util.Spliterator$OfLong spliterator()
    {
        long[] $r2;
        java.util.Spliterator$OfLong $r1;
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r2 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $r1 = staticinvoke <java.util.Spliterators: java.util.Spliterator$OfLong spliterator(long[],int,int,int)>($r2, $i0, $i1, 1040);

        return $r1;
    }

    public java.util.List asList()
    {
        com.google.common.primitives.ImmutableLongArray r0;
        com.google.common.primitives.ImmutableLongArray$AsList $r1;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 = new com.google.common.primitives.ImmutableLongArray$AsList;

        specialinvoke $r1.<com.google.common.primitives.ImmutableLongArray$AsList: void <init>(com.google.common.primitives.ImmutableLongArray,com.google.common.primitives.ImmutableLongArray$1)>(r0, null);

        return $r1;
    }

    public boolean contains(long)
    {
        int $i0;
        long $l1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $l1 := @parameter0: long;

        $i0 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: int indexOf(long)>($l1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        long $l3, $l4;
        byte $b0;
        int $i1, $i2;
        java.lang.Object $r1;
        com.google.common.primitives.ImmutableLongArray r0, $r2;
        boolean $z0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.common.primitives.ImmutableLongArray;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.common.primitives.ImmutableLongArray) $r1;

        $i1 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: int length()>();

        $i2 = virtualinvoke $r2.<com.google.common.primitives.ImmutableLongArray: int length()>();

        if $i1 == $i2 goto label3;

        return 0;

     label3:
        $i1 = 0;

     label4:
        $i2 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: int length()>();

        if $i1 >= $i2 goto label6;

        $l3 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: long get(int)>($i1);

        $l4 = virtualinvoke $r2.<com.google.common.primitives.ImmutableLongArray: long get(int)>($i1);

        $b0 = $l3 cmp $l4;

        if $b0 == 0 goto label5;

        return 0;

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        return 1;
    }

    public void forEach(java.util.function.LongConsumer)
    {
        long[] $r2;
        int $i1, $i2;
        long $l0;
        com.google.common.primitives.ImmutableLongArray r0;
        java.util.function.LongConsumer $r1;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 := @parameter0: java.util.function.LongConsumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

     label1:
        $i2 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        if $i1 >= $i2 goto label2;

        $r2 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $l0 = $r2[$i1];

        interfaceinvoke $r1.<java.util.function.LongConsumer: void accept(long)>($l0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public long get(int)
    {
        long[] $r1;
        int $i0, $i1;
        long $l2;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: int length()>();

        staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int)>($i0, $i1);

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i0 = $i1 + $i0;

        $l2 = $r1[$i0];

        return $l2;
    }

    public int hashCode()
    {
        long[] $r1;
        int $i1, $i2, $i3;
        long $l0;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $i2 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i1 = 1;

     label1:
        $i3 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        if $i2 >= $i3 goto label2;

        $i3 = $i1 * 31;

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $l0 = $r1[$i2];

        $i1 = staticinvoke <com.google.common.primitives.Longs: int hashCode(long)>($l0);

        $i1 = $i3 + $i1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public int indexOf(long)
    {
        long[] $r1;
        byte $b4;
        int $i2, $i3;
        long $l0, $l1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $l1 := @parameter0: long;

        $i2 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

     label1:
        $i3 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        if $i2 >= $i3 goto label3;

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $l0 = $r1[$i2];

        $b4 = $l0 cmp $l1;

        if $b4 != 0 goto label2;

        $i3 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i2 = $i2 - $i3;

        return $i2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $i2 = -1;

        return $i2;
    }

    public boolean isEmpty()
    {
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int lastIndexOf(long)
    {
        long[] $r1;
        byte $b4;
        int $i0, $i3;
        long $l1, $l2;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $l2 := @parameter0: long;

        $i3 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $i0 = -1;

        $i3 = $i3 + $i0;

     label1:
        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        if $i3 < $i0 goto label3;

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $l1 = $r1[$i3];

        $b4 = $l1 cmp $l2;

        if $b4 != 0 goto label2;

        $i3 = $i3 - $i0;

        return $i3;

     label2:
        $i0 = -1;

        $i3 = $i3 + $i0;

        goto label1;

     label3:
        $i3 = -1;

        return $i3;
    }

    public int length()
    {
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public java.lang.Object readResolve()
    {
        com.google.common.primitives.ImmutableLongArray r0;
        boolean $z0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $z0 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r0 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

     label1:
        return r0;
    }

    public java.util.stream.LongStream stream()
    {
        java.util.stream.LongStream $r1;
        long[] $r2;
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r2 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $r1 = staticinvoke <java.util.Arrays: java.util.stream.LongStream stream(long[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    public com.google.common.primitives.ImmutableLongArray subArray(int, int)
    {
        long[] $r1;
        int $i0, $i1, $i2;
        com.google.common.primitives.ImmutableLongArray r0, $r2;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: int length()>();

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i2, $i0, $i1);

        if $i2 != $i0 goto label1;

        r0 = <com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray EMPTY>;

        return r0;

     label1:
        $r2 = new com.google.common.primitives.ImmutableLongArray;

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i2 = $i2 + $i1;

        $i0 = $i1 + $i0;

        specialinvoke $r2.<com.google.common.primitives.ImmutableLongArray: void <init>(long[],int,int)>($r1, $i2, $i0);

        return $r2;
    }

    public long[] toArray()
    {
        long[] $r1;
        int $i0, $i1;
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $r1 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i0 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        $r1 = staticinvoke <java.util.Arrays: long[] copyOfRange(long[],int,int)>($r1, $i0, $i1);

        return $r1;
    }

    public java.lang.String toString()
    {
        long $l0;
        long[] $r2;
        int $i1, $i2;
        java.lang.StringBuilder $r1;
        com.google.common.primitives.ImmutableLongArray r0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $z0 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "[]";

     label1:
        $r1 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: int length()>();

        $i1 = $i1 * 5;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r2 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

        $l0 = $r2[$i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $i1 = r0.<com.google.common.primitives.ImmutableLongArray: int start>;

     label2:
        $i1 = $i1 + 1;

        $i2 = r0.<com.google.common.primitives.ImmutableLongArray: int end>;

        if $i1 >= $i2 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = r0.<com.google.common.primitives.ImmutableLongArray: long[] array>;

        $l0 = $r2[$i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        goto label2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public com.google.common.primitives.ImmutableLongArray trimmed()
    {
        long[] $r2;
        com.google.common.primitives.ImmutableLongArray r0, $r1;
        boolean $z0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        $z0 = specialinvoke r0.<com.google.common.primitives.ImmutableLongArray: boolean isPartialView()>();

        if $z0 == 0 goto label1;

        $r1 = new com.google.common.primitives.ImmutableLongArray;

        $r2 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: long[] toArray()>();

        specialinvoke $r1.<com.google.common.primitives.ImmutableLongArray: void <init>(long[])>($r2);

        return $r1;

     label1:
        return r0;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.primitives.ImmutableLongArray r0;

        r0 := @this: com.google.common.primitives.ImmutableLongArray;

        r0 = virtualinvoke r0.<com.google.common.primitives.ImmutableLongArray: com.google.common.primitives.ImmutableLongArray trimmed()>();

        return r0;
    }
}
