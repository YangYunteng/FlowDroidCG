public final class com.google.common.reflect.ImmutableTypeToInstanceMap$Builder extends java.lang.Object
{
    public final com.google.common.collect.ImmutableMap$Builder mapBuilder;

    public void <init>()
    {
        com.google.common.reflect.ImmutableTypeToInstanceMap$Builder r0;
        com.google.common.collect.ImmutableMap$Builder $r1;

        r0 := @this: com.google.common.reflect.ImmutableTypeToInstanceMap$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        r0.<com.google.common.reflect.ImmutableTypeToInstanceMap$Builder: com.google.common.collect.ImmutableMap$Builder mapBuilder> = $r1;

        return;
    }

    public void <init>(com.google.common.reflect.ImmutableTypeToInstanceMap$1)
    {
        com.google.common.reflect.ImmutableTypeToInstanceMap$Builder r0;
        com.google.common.reflect.ImmutableTypeToInstanceMap$1 $r1;

        r0 := @this: com.google.common.reflect.ImmutableTypeToInstanceMap$Builder;

        $r1 := @parameter0: com.google.common.reflect.ImmutableTypeToInstanceMap$1;

        specialinvoke r0.<com.google.common.reflect.ImmutableTypeToInstanceMap$Builder: void <init>()>();

        return;
    }

    public com.google.common.reflect.ImmutableTypeToInstanceMap build()
    {
        com.google.common.reflect.ImmutableTypeToInstanceMap $r1;
        com.google.common.reflect.ImmutableTypeToInstanceMap$Builder r0;
        com.google.common.collect.ImmutableMap $r2;
        com.google.common.collect.ImmutableMap$Builder $r3;

        r0 := @this: com.google.common.reflect.ImmutableTypeToInstanceMap$Builder;

        $r1 = new com.google.common.reflect.ImmutableTypeToInstanceMap;

        $r3 = r0.<com.google.common.reflect.ImmutableTypeToInstanceMap$Builder: com.google.common.collect.ImmutableMap$Builder mapBuilder>;

        $r2 = virtualinvoke $r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r1.<com.google.common.reflect.ImmutableTypeToInstanceMap: void <init>(com.google.common.collect.ImmutableMap,com.google.common.reflect.ImmutableTypeToInstanceMap$1)>($r2, null);

        return $r1;
    }

    public com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(com.google.common.reflect.TypeToken, java.lang.Object)
    {
        com.google.common.reflect.ImmutableTypeToInstanceMap$Builder r0;
        java.lang.Object $r1;
        com.google.common.reflect.TypeToken $r3;
        com.google.common.collect.ImmutableMap$Builder $r2;

        r0 := @this: com.google.common.reflect.ImmutableTypeToInstanceMap$Builder;

        $r3 := @parameter0: com.google.common.reflect.TypeToken;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.reflect.ImmutableTypeToInstanceMap$Builder: com.google.common.collect.ImmutableMap$Builder mapBuilder>;

        $r3 = virtualinvoke $r3.<com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken rejectTypeVariables()>();

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r1);

        return r0;
    }

    public com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(java.lang.Class, java.lang.Object)
    {
        com.google.common.reflect.ImmutableTypeToInstanceMap$Builder r0;
        java.lang.Object $r1;
        java.lang.Class $r4;
        com.google.common.reflect.TypeToken $r3;
        com.google.common.collect.ImmutableMap$Builder $r2;

        r0 := @this: com.google.common.reflect.ImmutableTypeToInstanceMap$Builder;

        $r4 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.reflect.ImmutableTypeToInstanceMap$Builder: com.google.common.collect.ImmutableMap$Builder mapBuilder>;

        $r3 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.Class)>($r4);

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r1);

        return r0;
    }
}
