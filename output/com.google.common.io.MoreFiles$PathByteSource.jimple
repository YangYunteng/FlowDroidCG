public final class com.google.common.io.MoreFiles$PathByteSource extends com.google.common.io.ByteSource
{
    public static final java.nio.file.LinkOption[] FOLLOW_LINKS;
    public final boolean followLinks;
    public final java.nio.file.OpenOption[] options;
    public final java.nio.file.Path path;

    static void <clinit>()
    {
        java.nio.file.LinkOption[] $r0;

        $r0 = newarray (java.nio.file.LinkOption)[0];

        <com.google.common.io.MoreFiles$PathByteSource: java.nio.file.LinkOption[] FOLLOW_LINKS> = $r0;

        return;
    }

    public transient void <init>(java.nio.file.Path, java.nio.file.OpenOption[])
    {
        java.nio.file.OpenOption[] $r1;
        com.google.common.io.MoreFiles$PathByteSource r0;
        java.lang.Object $r3;
        java.nio.file.Path $r2;
        boolean $z0;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r2 := @parameter0: java.nio.file.Path;

        $r1 := @parameter1: java.nio.file.OpenOption[];

        specialinvoke r0.<com.google.common.io.ByteSource: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.Path path> = $r2;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (java.nio.file.OpenOption[]) $r3;

        r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.OpenOption[] options> = $r1;

        $r1 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.OpenOption[] options>;

        $z0 = staticinvoke <com.google.common.io.MoreFiles$PathByteSource: boolean followLinks(java.nio.file.OpenOption[])>($r1);

        r0.<com.google.common.io.MoreFiles$PathByteSource: boolean followLinks> = $z0;

        return;
    }

    public void <init>(java.nio.file.Path, java.nio.file.OpenOption[], com.google.common.io.MoreFiles$1)
    {
        java.nio.file.OpenOption[] $r2;
        com.google.common.io.MoreFiles$PathByteSource r0;
        com.google.common.io.MoreFiles$1 $r3;
        java.nio.file.Path $r1;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r1 := @parameter0: java.nio.file.Path;

        $r2 := @parameter1: java.nio.file.OpenOption[];

        $r3 := @parameter2: com.google.common.io.MoreFiles$1;

        specialinvoke r0.<com.google.common.io.MoreFiles$PathByteSource: void <init>(java.nio.file.Path,java.nio.file.OpenOption[])>($r1, $r2);

        return;
    }

    public static java.nio.file.Path access$100(com.google.common.io.MoreFiles$PathByteSource)
    {
        com.google.common.io.MoreFiles$PathByteSource $r0;
        java.nio.file.Path r1;

        $r0 := @parameter0: com.google.common.io.MoreFiles$PathByteSource;

        r1 = $r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.Path path>;

        return r1;
    }

    public static boolean followLinks(java.nio.file.OpenOption[])
    {
        java.nio.file.LinkOption $r1;
        java.nio.file.OpenOption $r0;
        java.nio.file.OpenOption[] $r2;
        int $i0, $i1;

        $r2 := @parameter0: java.nio.file.OpenOption[];

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r0 = $r2[$i1];

        $r1 = <java.nio.file.LinkOption: java.nio.file.LinkOption NOFOLLOW_LINKS>;

        if $r0 != $r1 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    private java.nio.file.attribute.BasicFileAttributes readAttributes()
    {
        java.nio.file.LinkOption $r1;
        java.nio.file.LinkOption[] $r4;
        com.google.common.io.MoreFiles$PathByteSource r0;
        java.nio.file.attribute.BasicFileAttributes $r2;
        java.nio.file.Path $r3;
        boolean $z0;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r3 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.Path path>;

        $z0 = r0.<com.google.common.io.MoreFiles$PathByteSource: boolean followLinks>;

        if $z0 == 0 goto label1;

        $r4 = <com.google.common.io.MoreFiles$PathByteSource: java.nio.file.LinkOption[] FOLLOW_LINKS>;

        goto label2;

     label1:
        $r4 = newarray (java.nio.file.LinkOption)[1];

        $r1 = <java.nio.file.LinkOption: java.nio.file.LinkOption NOFOLLOW_LINKS>;

        $r4[0] = $r1;

     label2:
        $r2 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>($r3, class "Ljava/nio/file/attribute/BasicFileAttributes;", $r4);

        return $r2;
    }

    public com.google.common.io.CharSource asCharSource(java.nio.charset.Charset)
    {
        java.nio.charset.Charset $r2;
        java.nio.file.OpenOption[] $r3;
        com.google.common.io.MoreFiles$PathByteSource r0;
        int $i0;
        com.google.common.io.CharSource $r1;
        com.google.common.io.MoreFiles$PathByteSource$1 $r4;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r2 := @parameter0: java.nio.charset.Charset;

        $r3 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.OpenOption[] options>;

        $i0 = lengthof $r3;

        if $i0 != 0 goto label1;

        $r4 = new com.google.common.io.MoreFiles$PathByteSource$1;

        specialinvoke $r4.<com.google.common.io.MoreFiles$PathByteSource$1: void <init>(com.google.common.io.MoreFiles$PathByteSource,java.nio.charset.Charset)>(r0, $r2);

        return $r4;

     label1:
        $r1 = specialinvoke r0.<com.google.common.io.ByteSource: com.google.common.io.CharSource asCharSource(java.nio.charset.Charset)>($r2);

        return $r1;
    }

    public java.io.InputStream openStream()
    {
        java.nio.file.OpenOption[] $r1;
        com.google.common.io.MoreFiles$PathByteSource r0;
        java.nio.file.Path $r3;
        java.io.InputStream $r2;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r3 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.Path path>;

        $r1 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.OpenOption[] options>;

        $r2 = staticinvoke <java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>($r3, $r1);

        return $r2;
    }

    public byte[] read()
    {
        java.lang.Throwable $r6, $r7, $r8;
        byte[] $r5;
        long $l0;
        java.nio.channels.SeekableByteChannel $r3;
        java.nio.file.OpenOption[] $r2;
        com.google.common.io.MoreFiles$PathByteSource r0;
        java.nio.file.Path $r1;
        java.io.InputStream $r4;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r1 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.Path path>;

        $r2 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.OpenOption[] options>;

        $r3 = staticinvoke <java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.nio.file.OpenOption[])>($r1, $r2);

     label01:
        $r4 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>($r3);

        $l0 = interfaceinvoke $r3.<java.nio.channels.SeekableByteChannel: long size()>();

        $r5 = staticinvoke <com.google.common.io.Files: byte[] readFile(java.io.InputStream,long)>($r4, $l0);

     label02:
        if $r3 == null goto label12;

        interfaceinvoke $r3.<java.nio.channels.SeekableByteChannel: void close()>();

        return $r5;

     label03:
        $r6 := @caughtexception;

        goto label06;

     label04:
        $r7 := @caughtexception;

     label05:
        throw $r7;

     label06:
        if $r3 == null goto label11;

        if $r7 == null goto label10;

     label07:
        interfaceinvoke $r3.<java.nio.channels.SeekableByteChannel: void close()>();

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

        goto label11;

     label10:
        interfaceinvoke $r3.<java.nio.channels.SeekableByteChannel: void close()>();

     label11:
        throw $r6;

     label12:
        return $r5;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public long size()
    {
        com.google.common.io.MoreFiles$PathByteSource r0;
        long $l0;
        java.io.IOException $r2;
        java.nio.file.attribute.BasicFileAttributes $r1;
        boolean $z0;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r1 = specialinvoke r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.attribute.BasicFileAttributes readAttributes()>();

        $z0 = interfaceinvoke $r1.<java.nio.file.attribute.BasicFileAttributes: boolean isDirectory()>();

        if $z0 != 0 goto label2;

        $z0 = interfaceinvoke $r1.<java.nio.file.attribute.BasicFileAttributes: boolean isSymbolicLink()>();

        if $z0 != 0 goto label1;

        $l0 = interfaceinvoke $r1.<java.nio.file.attribute.BasicFileAttributes: long size()>();

        return $l0;

     label1:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("can\'t read: is a symbolic link");

        throw $r2;

     label2:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("can\'t read: is a directory");

        throw $r2;
    }

    public com.google.common.base.Optional sizeIfKnown()
    {
        java.lang.Long $r3;
        com.google.common.base.Optional $r4;
        com.google.common.io.MoreFiles$PathByteSource r0;
        java.io.IOException $r1;
        long $l0;
        java.nio.file.attribute.BasicFileAttributes $r2;
        boolean $z0;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

     label1:
        $r2 = specialinvoke r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.attribute.BasicFileAttributes readAttributes()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.nio.file.attribute.BasicFileAttributes: boolean isDirectory()>();

        if $z0 != 0 goto label4;

        $z0 = interfaceinvoke $r2.<java.nio.file.attribute.BasicFileAttributes: boolean isSymbolicLink()>();

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $l0 = interfaceinvoke $r2.<java.nio.file.attribute.BasicFileAttributes: long size()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r3);

        return $r4;

     label4:
        $r4 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r4;

     label5:
        $r4 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r4;

     label6:
        $r1 := @caughtexception;

        goto label5;

        catch java.io.IOException from label1 to label2 with label6;
    }

    public java.lang.String toString()
    {
        java.nio.file.OpenOption[] $r3;
        com.google.common.io.MoreFiles$PathByteSource r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        java.nio.file.Path $r2;

        r0 := @this: com.google.common.io.MoreFiles$PathByteSource;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MoreFiles.asByteSource(");

        $r2 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.Path path>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = r0.<com.google.common.io.MoreFiles$PathByteSource: java.nio.file.OpenOption[] options>;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
