public final class com.google.protobuf.BinaryReader$SafeHeapReader extends com.google.protobuf.BinaryReader
{
    public final byte[] buffer;
    public final boolean bufferIsImmutable;
    public int endGroupTag;
    public final int initialPos;
    public int limit;
    public int pos;
    public int tag;

    public void <init>(java.nio.ByteBuffer, boolean)
    {
        byte[] $r2;
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<com.google.protobuf.BinaryReader: void <init>(com.google.protobuf.BinaryReader$1)>(null);

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean bufferIsImmutable> = $z0;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer> = $r2;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $i0 = $i0 + $i1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int initialPos> = $i0;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        $i0 = $i0 + $i1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i0;

        return;
    }

    private boolean isAtEnd()
    {
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private byte readByte()
    {
        com.google.protobuf.InvalidProtocolBufferException $r1;
        byte[] $r2;
        byte $b2;
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i1 == $i0 goto label1;

        $r2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i0 = $i1 + 1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        $b2 = $r2[$i1];

        return $b2;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;
    }

    private java.lang.Object readField(com.google.protobuf.WireFormat$FieldType, java.lang.Class, com.google.protobuf.ExtensionRegistryLite)
    {
        java.lang.Float $r10;
        java.lang.Double $r11;
        long $l1;
        java.lang.Integer $r7;
        int[] $r2;
        java.lang.Long $r6;
        com.google.protobuf.ExtensionRegistryLite $r1;
        int $i0;
        java.lang.Boolean $r13;
        com.google.protobuf.WireFormat$FieldType $r3;
        java.lang.String $r8;
        double $d0;
        boolean $z0;
        java.lang.RuntimeException $r5;
        com.google.protobuf.ByteString $r12;
        float $f0;
        java.lang.Class $r4;
        java.lang.Object $r9;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r3 := @parameter0: com.google.protobuf.WireFormat$FieldType;

        $r4 := @parameter1: java.lang.Class;

        $r1 := @parameter2: com.google.protobuf.ExtensionRegistryLite;

        $r2 = <com.google.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label18;
            case 2: goto label17;
            case 3: goto label16;
            case 4: goto label15;
            case 5: goto label14;
            case 6: goto label13;
            case 7: goto label12;
            case 8: goto label11;
            case 9: goto label10;
            case 10: goto label09;
            case 11: goto label08;
            case 12: goto label07;
            case 13: goto label06;
            case 14: goto label05;
            case 15: goto label04;
            case 16: goto label03;
            case 17: goto label02;
            default: goto label01;
        };

     label01:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("unsupported field type.");

        throw $r5;

     label02:
        $l1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readUInt64()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label03:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readUInt32()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r7;

     label04:
        $r8 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringRequireUtf8()>();

        return $r8;

     label05:
        $l1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readSInt64()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label06:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readSInt32()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r7;

     label07:
        $l1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label08:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r7;

     label09:
        $r9 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(java.lang.Class,com.google.protobuf.ExtensionRegistryLite)>($r4, $r1);

        return $r9;

     label10:
        $l1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readInt64()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label11:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readInt32()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r7;

     label12:
        $f0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: float readFloat()>();

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r10;

     label13:
        $l1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readFixed64()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label14:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readFixed32()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r7;

     label15:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readEnum()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r7;

     label16:
        $d0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: double readDouble()>();

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r11;

     label17:
        $r12 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: com.google.protobuf.ByteString readBytes()>();

        return $r12;

     label18:
        $z0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean readBool()>();

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r13;
    }

    private java.lang.Object readGroup(com.google.protobuf.Schema, com.google.protobuf.ExtensionRegistryLite)
    {
        java.lang.Throwable $r5;
        com.google.protobuf.InvalidProtocolBufferException $r4;
        com.google.protobuf.Schema $r1;
        com.google.protobuf.ExtensionRegistryLite $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: com.google.protobuf.Schema;

        $r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i1, 4);

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i1;

     label1:
        $r3 = interfaceinvoke $r1.<com.google.protobuf.Schema: java.lang.Object newInstance()>();

        interfaceinvoke $r1.<com.google.protobuf.Schema: void mergeFrom(java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)>($r3, r0, $r2);

        interfaceinvoke $r1.<com.google.protobuf.Schema: void makeImmutable(java.lang.Object)>($r3);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

     label2:
        if $i1 != $i2 goto label3;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i0;

        return $r3;

     label3:
        $r4 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException parseFailure()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    private int readLittleEndian32()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(4);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        return $i0;
    }

    private int readLittleEndian32_NoCheck()
    {
        byte[] $r1;
        short $s3, $s4;
        byte $b2;
        int $i0, $i1, $i5;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = $i0 + 4;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        $b2 = $r1[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = $i0 + 1;

        $b2 = $r1[$i1];

        $s4 = (short) $b2;

        $s4 = $s4 & 255;

        $i1 = (int) $s4;

        $i1 = $i1 << 8;

        $i5 = (int) $s3;

        $i1 = $i5 | $i1;

        $i5 = $i0 + 2;

        $b2 = $r1[$i5];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i5 = (int) $s3;

        $i5 = $i5 << 16;

        $i1 = $i1 | $i5;

        $i0 = $i0 + 3;

        $b2 = $r1[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i0 = (int) $s3;

        $i0 = $i0 << 24;

        $i0 = $i0 | $i1;

        return $i0;
    }

    private long readLittleEndian64()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(8);

        $l0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        return $l0;
    }

    private long readLittleEndian64_NoCheck()
    {
        byte[] $r1;
        byte $b2;
        int $i0, $i1;
        long $l3, $l4;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = $i0 + 8;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        $b2 = $r1[$i0];

        $l3 = (long) $b2;

        $l3 = $l3 & 255L;

        $i1 = $i0 + 1;

        $b2 = $r1[$i1];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 8;

        $l3 = $l3 | $l4;

        $i1 = $i0 + 2;

        $b2 = $r1[$i1];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 16;

        $l3 = $l3 | $l4;

        $i1 = $i0 + 3;

        $b2 = $r1[$i1];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 24;

        $l3 = $l3 | $l4;

        $i1 = $i0 + 4;

        $b2 = $r1[$i1];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 32;

        $l3 = $l3 | $l4;

        $i1 = $i0 + 5;

        $b2 = $r1[$i1];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 40;

        $l3 = $l3 | $l4;

        $i1 = $i0 + 6;

        $b2 = $r1[$i1];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 48;

        $l3 = $l3 | $l4;

        $i0 = $i0 + 7;

        $b2 = $r1[$i0];

        $l4 = (long) $b2;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 56;

        $l3 = $l4 | $l3;

        return $l3;
    }

    private java.lang.Object readMessage(com.google.protobuf.Schema, com.google.protobuf.ExtensionRegistryLite)
    {
        java.lang.Throwable $r5;
        com.google.protobuf.InvalidProtocolBufferException $r4;
        com.google.protobuf.Schema $r2;
        com.google.protobuf.ExtensionRegistryLite $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r2 := @parameter0: com.google.protobuf.Schema;

        $r1 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i1);

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = $i2 + $i1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i1;

     label1:
        $r3 = interfaceinvoke $r2.<com.google.protobuf.Schema: java.lang.Object newInstance()>();

        interfaceinvoke $r2.<com.google.protobuf.Schema: void mergeFrom(java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)>($r3, r0, $r1);

        interfaceinvoke $r2.<com.google.protobuf.Schema: void makeImmutable(java.lang.Object)>($r3);

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

     label2:
        if $i2 != $i1 goto label3;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i0;

        return $r3;

     label3:
        $r4 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException parseFailure()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    private int readVarint32()
    {
        byte[] $r1;
        com.google.protobuf.InvalidProtocolBufferException $r2;
        long $l4;
        byte $b3, $b5;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i1 == $i0 goto label09;

        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i2 = $i0 + 1;

        $b3 = $r1[$i0];

        $i0 = (int) $b3;

        if $i0 < 0 goto label01;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i2;

        $i1 = (int) $b3;

        return $i1;

     label01:
        $i1 = $i1 - $i2;

        if $i1 >= 9 goto label02;

        $l4 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64SlowPath()>();

        $i1 = (int) $l4;

        return $i1;

     label02:
        $i1 = $i2 + 1;

        $b5 = $r1[$i2];

        $i2 = (int) $b5;

        $i2 = $i2 << 7;

        $i0 = (int) $b3;

        $i0 = $i0 ^ $i2;

        if $i0 >= 0 goto label03;

        $i2 = -128;

        $i0 = $i0 ^ $i2;

        goto label08;

     label03:
        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        $i1 = $i1 << 14;

        $i0 = $i0 ^ $i1;

        if $i0 < 0 goto label05;

        $i0 = $i0 ^ 16256;

     label04:
        $i1 = $i2;

        goto label08;

     label05:
        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $i2 = (int) $b3;

        $i2 = $i2 << 21;

        $i0 = $i0 ^ $i2;

        if $i0 >= 0 goto label06;

        $i0 = $i0 ^ -2080896;

        goto label08;

     label06:
        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        $i1 = $i1 << 28;

        $i1 = $i0 ^ $i1;

        $i0 = $i1 ^ 266354560;

        $i1 = (int) $b3;

        if $i1 >= 0 goto label04;

        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $i2 = (int) $b3;

        if $i2 >= 0 goto label08;

        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        if $i1 >= 0 goto label04;

        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $i2 = (int) $b3;

        if $i2 >= 0 goto label08;

        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        if $i1 >= 0 goto label04;

        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $i2 = (int) $b3;

        if $i2 < 0 goto label07;

        goto label08;

     label07:
        $r2 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>();

        throw $r2;

     label08:
        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        return $i0;

     label09:
        $r2 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        goto label10;

     label10:
        throw $r2;
    }

    private long readVarint64SlowPath()
    {
        com.google.protobuf.InvalidProtocolBufferException $r1;
        long $l0, $l4;
        short $s5;
        byte $b2, $b3;
        int $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $l0 = 0L;

        $i1 = 0;

     label1:
        if $i1 >= 64 goto label3;

        $b2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte readByte()>();

        $b3 = $b2 & 127;

        $l4 = (long) $b3;

        $l4 = $l4 << $i1;

        $l0 = $l0 | $l4;

        $s5 = (short) $b2;

        $s5 = $s5 & 128;

        if $s5 != 0 goto label2;

        return $l0;

     label2:
        $i1 = $i1 + 7;

        goto label1;

     label3:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>();

        goto label4;

     label4:
        throw $r1;
    }

    private void requireBytes(int)
    {
        com.google.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i1 := @parameter0: int;

        if $i1 < 0 goto label1;

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i2 - $i0;

        if $i1 > $i0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;
    }

    private void requirePosition(int)
    {
        com.google.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i1 := @parameter0: int;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;
    }

    private void requireWireType(int)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i1);

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r1;
    }

    private void skipBytes(int)
    {
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;
    }

    private void skipGroup()
    {
        com.google.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i1, 4);

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i1;

     label1:
        $i1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int getFieldNumber()>();

        if $i1 == 2147483647 goto label2;

        $z0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean skipField()>();

        if $z0 != 0 goto label1;

     label2:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        if $i1 != $i2 goto label3;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i0;

        return;

     label3:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException parseFailure()>();

        goto label4;

     label4:
        throw $r1;
    }

    private void skipVarint()
    {
        byte[] $r1;
        byte $b3;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i0 - $i1;

        if $i0 < 10 goto label3;

        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i2 = 0;

     label1:
        if $i2 >= 10 goto label3;

        $i0 = $i1 + 1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        if $i1 < 0 goto label2;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label2:
        $i2 = $i2 + 1;

        $i1 = $i0;

        goto label1;

     label3:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void skipVarintSlowPath()>();

        return;
    }

    private void skipVarintSlowPath()
    {
        com.google.protobuf.InvalidProtocolBufferException $r1;
        byte $b1;
        int $i0, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = 0;

     label1:
        if $i0 >= 10 goto label3;

        $b1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte readByte()>();

        $i2 = (int) $b1;

        if $i2 < 0 goto label2;

        return;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>();

        goto label4;

     label4:
        throw $r1;
    }

    private void verifyPackedFixed32Length(int)
    {
        int $i0;
        com.google.protobuf.InvalidProtocolBufferException $r1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i0);

        $i0 = $i0 & 3;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException parseFailure()>();

        throw $r1;
    }

    private void verifyPackedFixed64Length(int)
    {
        int $i0;
        com.google.protobuf.InvalidProtocolBufferException $r1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i0);

        $i0 = $i0 & 7;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException parseFailure()>();

        throw $r1;
    }

    public int getFieldNumber()
    {
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label1;

        return 2147483647;

     label1:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag> = $i0;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        if $i1 != $i0 goto label2;

        return 2147483647;

     label2:
        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        return $i0;
    }

    public int getTag()
    {
        int i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        return i0;
    }

    public int getTotalBytesRead()
    {
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int initialPos>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public boolean readBool()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void readBoolList(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        com.google.protobuf.BooleanArrayList $r2;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Boolean $r4;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.BooleanArrayList;

        if $z0 == 0 goto label08;

        $r2 = (com.google.protobuf.BooleanArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label06;

        if $i0 != 2 goto label05;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label04;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i1 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        virtualinvoke $r2.<com.google.protobuf.BooleanArrayList: void addBoolean(boolean)>($z0);

        goto label01;

     label04:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label05:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label06:
        $z0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean readBool()>();

        virtualinvoke $r2.<com.google.protobuf.BooleanArrayList: void addBoolean(boolean)>($z0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label07;

        return;

     label07:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label06;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label08:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label14;

        if $i0 != 2 goto label13;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label09:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i1 == 0 goto label10;

        $z0 = 1;

        goto label11;

     label10:
        $z0 = 0;

     label11:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label09;

     label12:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label13:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label14:
        $z0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean readBool()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label15;

        return;

     label15:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label14;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;
    }

    public com.google.protobuf.ByteString readBytes()
    {
        com.google.protobuf.ByteString $r2;
        byte[] $r1;
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i0 != 0 goto label1;

        $r2 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        return $r2;

     label1:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i0);

        $z0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean bufferIsImmutable>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $r2 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString wrap(byte[],int,int)>($r1, $i1, $i0);

        goto label3;

     label2:
        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $r2 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>($r1, $i1, $i0);

     label3:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return $r2;
    }

    public void readBytesList(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        com.google.protobuf.ByteString $r2;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 != 2 goto label3;

     label1:
        $r2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: com.google.protobuf.ByteString readBytes()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i2 == $i0 goto label1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        return;

     label3:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        goto label4;

     label4:
        throw $r3;
    }

    public double readDouble()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        double $d0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(1);

        $l0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public void readDoubleList(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Double $r4;
        long $l2;
        java.util.List $r1;
        com.google.protobuf.DoubleArrayList $r2;
        int $i0, $i1, $i3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.DoubleArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.DoubleArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 1 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $l2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l2);

        virtualinvoke $r2.<com.google.protobuf.DoubleArrayList: void addDouble(double)>($d0);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $d0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: double readDouble()>();

        virtualinvoke $r2.<com.google.protobuf.DoubleArrayList: void addDouble(double)>($d0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 1 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $l2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $d0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: double readDouble()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public int readEnum()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        return $i0;
    }

    public void readEnumList(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        com.google.protobuf.IntArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.IntArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.IntArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i1);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readEnum()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readEnum()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public int readFixed32()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(5);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()>();

        return $i0;
    }

    public void readFixed32List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        com.google.protobuf.IntArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        $r2 = (com.google.protobuf.IntArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 2 goto label04;

        if $i0 != 5 goto label03;

     label01:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readFixed32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label01;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label03:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label04:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label05:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i1);

        goto label05;

     label06:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 2 goto label10;

        if $i0 != 5 goto label09;

     label07:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readFixed32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label08;

        return;

     label08:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label07;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label10:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label11:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label11;

     label12:
        return;
    }

    public long readFixed64()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(1);

        $l0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()>();

        return $l0;
    }

    public void readFixed64List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        long $l2;
        java.util.List $r1;
        java.lang.Long $r4;
        com.google.protobuf.LongArrayList $r2;
        int $i0, $i1, $i3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.LongArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.LongArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 1 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $l2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readFixed64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 1 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $l2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readFixed64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public float readFloat()
    {
        int $i0;
        float $f0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(5);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public void readFloatList(java.util.List)
    {
        java.lang.Float $r4;
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.util.List $r1;
        com.google.protobuf.FloatArrayList $r2;
        int $i0, $i1, $i2;
        float $f0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.FloatArrayList;

        if $z0 == 0 goto label06;

        $r2 = (com.google.protobuf.FloatArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 2 goto label04;

        if $i0 != 5 goto label03;

     label01:
        $f0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: float readFloat()>();

        virtualinvoke $r2.<com.google.protobuf.FloatArrayList: void addFloat(float)>($f0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label01;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label03:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label04:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label05:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        virtualinvoke $r2.<com.google.protobuf.FloatArrayList: void addFloat(float)>($f0);

        goto label05;

     label06:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 2 goto label10;

        if $i0 != 5 goto label09;

     label07:
        $f0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: float readFloat()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label08;

        return;

     label08:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label07;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label10:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label11:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label11;

     label12:
        return;
    }

    public java.lang.Object readGroup(java.lang.Class, com.google.protobuf.ExtensionRegistryLite)
    {
        com.google.protobuf.Protobuf $r3;
        com.google.protobuf.Schema $r4;
        com.google.protobuf.ExtensionRegistryLite $r1;
        java.lang.Class $r2;
        java.lang.Object $r5;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(3);

        $r3 = staticinvoke <com.google.protobuf.Protobuf: com.google.protobuf.Protobuf getInstance()>();

        $r4 = virtualinvoke $r3.<com.google.protobuf.Protobuf: com.google.protobuf.Schema schemaFor(java.lang.Class)>($r2);

        $r5 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readGroupBySchemaWithCheck(com.google.protobuf.Schema, com.google.protobuf.ExtensionRegistryLite)
    {
        com.google.protobuf.Schema $r3;
        com.google.protobuf.ExtensionRegistryLite $r1;
        java.lang.Object $r2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r3 := @parameter0: com.google.protobuf.Schema;

        $r1 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(3);

        $r2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r3, $r1);

        return $r2;
    }

    public void readGroupList(java.util.List, com.google.protobuf.Schema, com.google.protobuf.ExtensionRegistryLite)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r5;
        java.util.List $r3;
        com.google.protobuf.Schema $r1;
        com.google.protobuf.ExtensionRegistryLite $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r3 := @parameter0: java.util.List;

        $r1 := @parameter1: com.google.protobuf.Schema;

        $r2 := @parameter2: com.google.protobuf.ExtensionRegistryLite;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 != 3 goto label3;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

     label1:
        $r4 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r1, $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i2 == $i0 goto label1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        return;

     label3:
        $r5 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        goto label4;

     label4:
        throw $r5;
    }

    public void readGroupList(java.util.List, java.lang.Class, com.google.protobuf.ExtensionRegistryLite)
    {
        java.util.List $r1;
        com.google.protobuf.Protobuf $r4;
        com.google.protobuf.Schema $r5;
        com.google.protobuf.ExtensionRegistryLite $r2;
        java.lang.Class $r3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $r3 := @parameter1: java.lang.Class;

        $r2 := @parameter2: com.google.protobuf.ExtensionRegistryLite;

        $r4 = staticinvoke <com.google.protobuf.Protobuf: com.google.protobuf.Protobuf getInstance()>();

        $r5 = virtualinvoke $r4.<com.google.protobuf.Protobuf: com.google.protobuf.Schema schemaFor(java.lang.Class)>($r3);

        virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void readGroupList(java.util.List,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r1, $r5, $r2);

        return;
    }

    public int readInt32()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        return $i0;
    }

    public void readInt32List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        com.google.protobuf.IntArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        $r2 = (com.google.protobuf.IntArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label04;

        if $i0 != 2 goto label03;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label02;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i1);

        goto label01;

     label02:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label03:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label04:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readInt32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label05;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label04;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label06:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label10;

        if $i0 != 2 goto label09;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label07:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label08;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label07;

     label08:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label10:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readInt32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label11;

        return;

     label11:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label10;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;
    }

    public long readInt64()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $l0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        return $l0;
    }

    public void readInt64List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        long $l2;
        java.util.List $r1;
        java.lang.Long $r4;
        com.google.protobuf.LongArrayList $r2;
        int $i0, $i1, $i3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        $r2 = (com.google.protobuf.LongArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label04;

        if $i0 != 2 goto label03;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label02;

        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        goto label01;

     label02:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label03:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label04:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readInt64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label05;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label04;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label06:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label10;

        if $i0 != 2 goto label09;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label07:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label08;

        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label07;

     label08:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label10:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readInt64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label11;

        return;

     label11:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label10;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;
    }

    public void readMap(java.util.Map, com.google.protobuf.MapEntryLite$Metadata, com.google.protobuf.ExtensionRegistryLite)
    {
        java.lang.Throwable $r11;
        com.google.protobuf.ExtensionRegistryLite $r2;
        java.util.Map $r4;
        int $i0, $i1, $i2;
        com.google.protobuf.WireFormat$FieldType $r8;
        com.google.protobuf.MapEntryLite$Metadata $r1;
        boolean $z0;
        com.google.protobuf.InvalidProtocolBufferException $r7;
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Object $r5, $r6, $r9;
        java.lang.Class $r10;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r4 := @parameter0: java.util.Map;

        $r1 := @parameter1: com.google.protobuf.MapEntryLite$Metadata;

        $r2 := @parameter2: com.google.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i1);

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = $i2 + $i1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i1;

     label01:
        $r5 = $r1.<com.google.protobuf.MapEntryLite$Metadata: java.lang.Object defaultKey>;

        $r6 = $r1.<com.google.protobuf.MapEntryLite$Metadata: java.lang.Object defaultValue>;

     label02:
        $i1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int getFieldNumber()>();

     label03:
        if $i1 != 2147483647 goto label06;

     label04:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label05:
        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i0;

        return;

     label06:
        if $i1 == 1 goto label14;

        if $i1 == 2 goto label11;

     label07:
        $z0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean skipField()>();

     label08:
        if $z0 == 0 goto label09;

        goto label02;

     label09:
        $r7 = new com.google.protobuf.InvalidProtocolBufferException;

     label10:
        specialinvoke $r7.<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Unable to parse map entry.");

        throw $r7;

     label11:
        $r8 = $r1.<com.google.protobuf.MapEntryLite$Metadata: com.google.protobuf.WireFormat$FieldType valueType>;

        $r9 = $r1.<com.google.protobuf.MapEntryLite$Metadata: java.lang.Object defaultValue>;

     label12:
        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readField(com.google.protobuf.WireFormat$FieldType,java.lang.Class,com.google.protobuf.ExtensionRegistryLite)>($r8, $r10, $r2);

     label13:
        $r6 = $r9;

        goto label02;

     label14:
        $r8 = $r1.<com.google.protobuf.MapEntryLite$Metadata: com.google.protobuf.WireFormat$FieldType keyType>;

     label15:
        $r9 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readField(com.google.protobuf.WireFormat$FieldType,java.lang.Class,com.google.protobuf.ExtensionRegistryLite)>($r8, null, null);

     label16:
        $r5 = $r9;

        goto label02;

     label17:
        $z0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean skipField()>();

     label18:
        if $z0 == 0 goto label19;

        goto label02;

     label19:
        $r7 = new com.google.protobuf.InvalidProtocolBufferException;

        specialinvoke $r7.<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Unable to parse map entry.");

        throw $r7;

     label20:
        $r11 := @caughtexception;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit> = $i0;

        goto label21;

     label21:
        throw $r11;

     label22:
        $r3 := @caughtexception;

        goto label17;

        catch java.lang.Throwable from label01 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException from label07 to label08 with label22;
        catch com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException from label10 to label11 with label22;
        catch com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException from label12 to label13 with label22;
        catch com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException from label15 to label16 with label22;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label13 with label20;
        catch java.lang.Throwable from label14 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    public java.lang.Object readMessage(java.lang.Class, com.google.protobuf.ExtensionRegistryLite)
    {
        com.google.protobuf.Protobuf $r3;
        com.google.protobuf.Schema $r4;
        com.google.protobuf.ExtensionRegistryLite $r1;
        java.lang.Class $r2;
        java.lang.Object $r5;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $r3 = staticinvoke <com.google.protobuf.Protobuf: com.google.protobuf.Protobuf getInstance()>();

        $r4 = virtualinvoke $r3.<com.google.protobuf.Protobuf: com.google.protobuf.Schema schemaFor(java.lang.Class)>($r2);

        $r5 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r4, $r1);

        return $r5;
    }

    public java.lang.Object readMessageBySchemaWithCheck(com.google.protobuf.Schema, com.google.protobuf.ExtensionRegistryLite)
    {
        com.google.protobuf.Schema $r3;
        com.google.protobuf.ExtensionRegistryLite $r1;
        java.lang.Object $r2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r3 := @parameter0: com.google.protobuf.Schema;

        $r1 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $r2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r3, $r1);

        return $r2;
    }

    public void readMessageList(java.util.List, com.google.protobuf.Schema, com.google.protobuf.ExtensionRegistryLite)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r5;
        java.util.List $r3;
        com.google.protobuf.Schema $r1;
        com.google.protobuf.ExtensionRegistryLite $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r3 := @parameter0: java.util.List;

        $r1 := @parameter1: com.google.protobuf.Schema;

        $r2 := @parameter2: com.google.protobuf.ExtensionRegistryLite;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 != 2 goto label3;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

     label1:
        $r4 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r1, $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i2 == $i0 goto label1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        return;

     label3:
        $r5 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        goto label4;

     label4:
        throw $r5;
    }

    public void readMessageList(java.util.List, java.lang.Class, com.google.protobuf.ExtensionRegistryLite)
    {
        java.util.List $r1;
        com.google.protobuf.Protobuf $r4;
        com.google.protobuf.Schema $r5;
        com.google.protobuf.ExtensionRegistryLite $r2;
        java.lang.Class $r3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $r3 := @parameter1: java.lang.Class;

        $r2 := @parameter2: com.google.protobuf.ExtensionRegistryLite;

        $r4 = staticinvoke <com.google.protobuf.Protobuf: com.google.protobuf.Protobuf getInstance()>();

        $r5 = virtualinvoke $r4.<com.google.protobuf.Protobuf: com.google.protobuf.Schema schemaFor(java.lang.Class)>($r3);

        virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void readMessageList(java.util.List,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)>($r1, $r5, $r2);

        return;
    }

    public int readSFixed32()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(5);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()>();

        return $i0;
    }

    public void readSFixed32List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        com.google.protobuf.IntArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        $r2 = (com.google.protobuf.IntArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 2 goto label04;

        if $i0 != 5 goto label03;

     label01:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label01;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label03:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label04:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label05:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i1);

        goto label05;

     label06:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 2 goto label10;

        if $i0 != 5 goto label09;

     label07:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label08;

        return;

     label08:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label07;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label10:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label11:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label12;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label11;

     label12:
        return;
    }

    public long readSFixed64()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(1);

        $l0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()>();

        return $l0;
    }

    public void readSFixed64List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        long $l2;
        java.util.List $r1;
        java.lang.Long $r4;
        com.google.protobuf.LongArrayList $r2;
        int $i0, $i1, $i3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.LongArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.LongArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 1 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $l2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 1 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>($i0);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $l2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public int readSInt32()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i0 = staticinvoke <com.google.protobuf.CodedInputStream: int decodeZigZag32(int)>($i0);

        return $i0;
    }

    public void readSInt32List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        com.google.protobuf.IntArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.IntArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.IntArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = staticinvoke <com.google.protobuf.CodedInputStream: int decodeZigZag32(int)>($i1);

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i1);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readSInt32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = staticinvoke <com.google.protobuf.CodedInputStream: int decodeZigZag32(int)>($i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readSInt32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public long readSInt64()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $l0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $l0 = staticinvoke <com.google.protobuf.CodedInputStream: long decodeZigZag64(long)>($l0);

        return $l0;
    }

    public void readSInt64List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        long $l2;
        java.util.List $r1;
        java.lang.Long $r4;
        com.google.protobuf.LongArrayList $r2;
        int $i0, $i1, $i3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.LongArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.LongArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $l2 = staticinvoke <com.google.protobuf.CodedInputStream: long decodeZigZag64(long)>($l2);

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readSInt64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $l2 = staticinvoke <com.google.protobuf.CodedInputStream: long decodeZigZag64(long)>($l2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readSInt64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public java.lang.String readString()
    {
        java.lang.String $r1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)>(0);

        return $r1;
    }

    public java.lang.String readStringInternal(boolean)
    {
        byte[] $r2;
        com.google.protobuf.InvalidProtocolBufferException $r3;
        java.nio.charset.Charset $r1;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = $i1 + $i0;

        $z0 = staticinvoke <com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r2, $i1, $i2);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        throw $r3;

     label3:
        $r4 = new java.lang.String;

        $r2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $r1 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r2, $i1, $i0, $r1);

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return $r4;
    }

    public void readStringList(java.util.List)
    {
        java.util.List $r1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void readStringListInternal(java.util.List,boolean)>($r1, 0);

        return;
    }

    public void readStringListInternal(java.util.List, boolean)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r5;
        com.google.protobuf.ByteString $r3;
        java.util.List $r1;
        com.google.protobuf.LazyStringList $r2;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z1;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 != 2 goto label5;

        $z1 = $r1 instanceof com.google.protobuf.LazyStringList;

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label3;

        $r2 = (com.google.protobuf.LazyStringList) $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: com.google.protobuf.ByteString readBytes()>();

        interfaceinvoke $r2.<com.google.protobuf.LazyStringList: void add(com.google.protobuf.ByteString)>($r3);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label1;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label3:
        $r4 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)>($z0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z1 == 0 goto label4;

        return;

     label4:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i2 == $i0 goto label3;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        return;

     label5:
        $r5 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        goto label6;

     label6:
        throw $r5;
    }

    public void readStringListRequireUtf8(java.util.List)
    {
        java.util.List $r1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void readStringListInternal(java.util.List,boolean)>($r1, 1);

        return;
    }

    public java.lang.String readStringRequireUtf8()
    {
        java.lang.String $r1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)>(1);

        return $r1;
    }

    public int readUInt32()
    {
        int $i0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        return $i0;
    }

    public void readUInt32List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        com.google.protobuf.IntArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.IntArrayList;

        if $z0 == 0 goto label05;

        $r2 = (com.google.protobuf.IntArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label03;

        if $i0 != 2 goto label02;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label07;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i1);

        goto label01;

     label02:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label03:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readUInt32()>();

        virtualinvoke $r2.<com.google.protobuf.IntArrayList: void addInt(int)>($i0);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label04;

        return;

     label04:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label03;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label09;

        if $i0 != 2 goto label08;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label06:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label11;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label06;

     label07:
        return;

     label08:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label09:
        $i0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readUInt32()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i2 goto label09;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

     label11:
        return;
    }

    public long readUInt64()
    {
        long $l0;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $l0 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        return $l0;
    }

    public void readUInt64List(java.util.List)
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3;
        long $l2;
        java.util.List $r1;
        java.lang.Long $r4;
        com.google.protobuf.LongArrayList $r2;
        int $i0, $i1, $i3;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $r1 := @parameter0: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        $r2 = (com.google.protobuf.LongArrayList) $r1;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label04;

        if $i0 != 2 goto label03;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label01:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label02;

        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        goto label01;

     label02:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label03:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label04:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readUInt64()>();

        virtualinvoke $r2.<com.google.protobuf.LongArrayList: void addLong(long)>($l2);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label05;

        return;

     label05:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label04;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;

     label06:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label10;

        if $i0 != 2 goto label09;

        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = $i1 + $i0;

     label07:
        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 >= $i0 goto label08;

        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label07;

     label08:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>($i0);

        return;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r3;

     label10:
        $l2 = virtualinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readUInt64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label11;

        return;

     label11:
        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i1 == $i3 goto label10;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i0;

        return;
    }

    public long readVarint64()
    {
        byte[] $r1;
        com.google.protobuf.InvalidProtocolBufferException $r2;
        long $l4, $l6;
        byte $b3, $b5;
        int $i0, $i1, $i2;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i1 == $i0 goto label16;

        $r1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i2 = $i0 + 1;

        $b3 = $r1[$i0];

        $i0 = (int) $b3;

        if $i0 < 0 goto label01;

        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i2;

        $l4 = (long) $b3;

        return $l4;

     label01:
        $i1 = $i1 - $i2;

        if $i1 >= 9 goto label02;

        $l4 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64SlowPath()>();

        return $l4;

     label02:
        $i1 = $i2 + 1;

        $b5 = $r1[$i2];

        $i2 = (int) $b5;

        $i2 = $i2 << 7;

        $i0 = (int) $b3;

        $i0 = $i0 ^ $i2;

        if $i0 >= 0 goto label04;

        $i2 = -128;

        $i2 = $i0 ^ $i2;

     label03:
        $l4 = (long) $i2;

        goto label15;

     label04:
        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $i1 = (int) $b3;

        $i1 = $i1 << 14;

        $i0 = $i0 ^ $i1;

        if $i0 < 0 goto label05;

        $i1 = $i0 ^ 16256;

        $l4 = (long) $i1;

        $i1 = $i2;

        goto label15;

     label05:
        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $i2 = (int) $b3;

        $i2 = $i2 << 21;

        $i2 = $i0 ^ $i2;

        if $i2 >= 0 goto label06;

        $i2 = $i2 ^ -2080896;

        goto label03;

     label06:
        $l4 = (long) $i2;

        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $l6 = (long) $b3;

        $l6 = $l6 << 28;

        $l4 = $l4 ^ $l6;

        $b3 = $l4 cmp 0L;

        $i1 = (int) $b3;

        if $i1 < 0 goto label09;

        $l6 = 266354560L;

     label07:
        $l4 = $l6 ^ $l4;

     label08:
        $i1 = $i2;

        goto label15;

     label09:
        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $l6 = (long) $b3;

        $l6 = $l6 << 35;

        $l4 = $l4 ^ $l6;

        $b3 = $l4 cmp 0L;

        $i2 = (int) $b3;

        if $i2 >= 0 goto label11;

        $l6 = -34093383808L;

     label10:
        $l4 = $l4 ^ $l6;

        goto label15;

     label11:
        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $l6 = (long) $b3;

        $l6 = $l6 << 42;

        $l4 = $l4 ^ $l6;

        $b3 = $l4 cmp 0L;

        $i1 = (int) $b3;

        if $i1 < 0 goto label12;

        $l6 = 4363953127296L;

        goto label07;

     label12:
        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $l6 = (long) $b3;

        $l6 = $l6 << 49;

        $l4 = $l4 ^ $l6;

        $b3 = $l4 cmp 0L;

        $i2 = (int) $b3;

        if $i2 >= 0 goto label13;

        $l6 = -558586000294016L;

        goto label10;

     label13:
        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        $l6 = (long) $b3;

        $l6 = $l6 << 56;

        $l4 = $l4 ^ $l6;

        $l4 = $l4 ^ 71499008037633920L;

        $b3 = $l4 cmp 0L;

        $i1 = (int) $b3;

        if $i1 >= 0 goto label08;

        $i1 = $i2 + 1;

        $b3 = $r1[$i2];

        $l6 = (long) $b3;

        $b3 = $l6 cmp 0L;

        $i2 = (int) $b3;

        if $i2 < 0 goto label14;

        goto label15;

     label14:
        $r2 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>();

        throw $r2;

     label15:
        r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        return $l4;

     label16:
        $r2 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        goto label17;

     label17:
        throw $r2;
    }

    public boolean skipField()
    {
        com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        int $i0, $i1;
        com.google.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;

        r0 := @this: com.google.protobuf.BinaryReader$SafeHeapReader;

        $z0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 != 0 goto label7;

        $i0 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        if $i0 != $i1 goto label1;

        goto label7;

     label1:
        $i0 = staticinvoke <com.google.protobuf.WireFormat: int getTagWireType(int)>($i0);

        if $i0 == 0 goto label6;

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 != 5 goto label2;

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)>(4);

        return 1;

     label2:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        throw $r1;

     label3:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void skipGroup()>();

        return 1;

     label4:
        $i0 = specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)>($i0);

        return 1;

     label5:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)>(8);

        return 1;

     label6:
        specialinvoke r0.<com.google.protobuf.BinaryReader$SafeHeapReader: void skipVarint()>();

        return 1;

     label7:
        return 0;
    }
}
