public class com.google.gson.stream.JsonWriter extends java.lang.Object implements java.io.Closeable, java.io.Flushable
{
    public static final java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS;
    public static final java.lang.String[] REPLACEMENT_CHARS;
    public java.lang.String deferredName;
    public boolean htmlSafe;
    public java.lang.String indent;
    public boolean lenient;
    public final java.io.Writer out;
    public java.lang.String separator;
    public boolean serializeNulls;
    public int[] stack;
    public int stackSize;

    static void <clinit>()
    {
        java.lang.Object[] $r1;
        int $i0;
        java.lang.String[] $r0;
        java.lang.Object $r4;
        java.lang.String $r3;
        java.lang.Integer $r2;

        $r0 = newarray (java.lang.String)[128];

        <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS> = $r0;

        $i0 = 0;

     label1:
        if $i0 > 31 goto label2;

        $r0 = <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS>;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", $r1);

        $r0[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r0 = <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS>;

        $r0[34] = "\\\"";

        $r0[92] = "\\\\";

        $r0[9] = "\\t";

        $r0[8] = "\\b";

        $r0[10] = "\\n";

        $r0[13] = "\\r";

        $r0[12] = "\\f";

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (java.lang.String[]) $r4;

        <com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS> = $r0;

        $r0 = <com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS>;

        $r0[60] = "\\u003c";

        $r0[62] = "\\u003e";

        $r0[38] = "\\u0026";

        $r0[61] = "\\u003d";

        $r0[39] = "\\u0027";

        return;
    }

    public void <init>(java.io.Writer)
    {
        int[] $r2;
        java.io.Writer $r1;
        com.google.gson.stream.JsonWriter r0;
        java.lang.NullPointerException $r3;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (int)[32];

        r0.<com.google.gson.stream.JsonWriter: int[] stack> = $r2;

        r0.<com.google.gson.stream.JsonWriter: int stackSize> = 0;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void push(int)>(6);

        r0.<com.google.gson.stream.JsonWriter: java.lang.String separator> = ":";

        r0.<com.google.gson.stream.JsonWriter: boolean serializeNulls> = 1;

        if $r1 == null goto label1;

        r0.<com.google.gson.stream.JsonWriter: java.io.Writer out> = $r1;

        return;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r3;
    }

    private void beforeName()
    {
        java.lang.IllegalStateException $r2;
        int $i0;
        java.io.Writer $r1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 = specialinvoke r0.<com.google.gson.stream.JsonWriter: int peek()>();

        if $i0 != 5 goto label1;

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(44);

        goto label2;

     label1:
        if $i0 != 3 goto label3;

     label2:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void newline()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void replaceTop(int)>(4);

        return;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nesting problem.");

        throw $r2;
    }

    private void beforeValue()
    {
        java.lang.IllegalStateException $r1;
        int $i0;
        java.io.Writer $r2;
        java.lang.String $r3;
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 = specialinvoke r0.<com.google.gson.stream.JsonWriter: int peek()>();

        if $i0 == 1 goto label6;

        if $i0 == 2 goto label5;

        if $i0 == 4 goto label4;

        if $i0 == 6 goto label3;

        if $i0 != 7 goto label2;

        $z0 = r0.<com.google.gson.stream.JsonWriter: boolean lenient>;

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JSON must have only one top-level value.");

        throw $r1;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nesting problem.");

        throw $r1;

     label3:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void replaceTop(int)>(7);

        return;

     label4:
        $r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $r3 = r0.<com.google.gson.stream.JsonWriter: java.lang.String separator>;

        virtualinvoke $r2.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r3);

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void replaceTop(int)>(5);

        return;

     label5:
        $r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: java.io.Writer append(char)>(44);

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void newline()>();

        return;

     label6:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void replaceTop(int)>(2);

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void newline()>();

        return;
    }

    private com.google.gson.stream.JsonWriter close(int, int, java.lang.String)
    {
        java.lang.IllegalStateException $r5;
        int $i0, $i1, $i2, $i3;
        java.io.Writer $r3;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r1, $r2;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $i2 = specialinvoke r0.<com.google.gson.stream.JsonWriter: int peek()>();

        if $i2 == $i1 goto label2;

        if $i2 != $i0 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nesting problem.");

        throw $r5;

     label2:
        $r2 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>;

        if $r2 != null goto label4;

        $i0 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        $i3 = -1;

        $i0 = $i0 + $i3;

        r0.<com.google.gson.stream.JsonWriter: int stackSize> = $i0;

        if $i2 != $i1 goto label3;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void newline()>();

     label3:
        $r3 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r1);

        return r0;

     label4:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        $r4 = $r6;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dangling name: ");

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r5;
    }

    private void newline()
    {
        java.io.Writer $r1;
        int $i0, $i1;
        java.lang.String $r2;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r2 = r0.<com.google.gson.stream.JsonWriter: java.lang.String indent>;

        if $r2 != null goto label1;

        return;

     label1:
        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("\n");

        $i0 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        $i1 = 1;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $r2 = r0.<com.google.gson.stream.JsonWriter: java.lang.String indent>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    private com.google.gson.stream.JsonWriter open(int, java.lang.String)
    {
        int $i0;
        java.io.Writer $r2;
        java.lang.String $r1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void push(int)>($i0);

        $r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        return r0;
    }

    private int peek()
    {
        java.lang.IllegalStateException $r2;
        int[] $r1;
        int $i0, $i1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        if $i0 == 0 goto label1;

        $r1 = r0.<com.google.gson.stream.JsonWriter: int[] stack>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonWriter is closed.");

        throw $r2;
    }

    private void push(int)
    {
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        $r1 = r0.<com.google.gson.stream.JsonWriter: int[] stack>;

        $i2 = lengthof $r1;

        if $i1 != $i2 goto label1;

        $i2 = $i1 * 2;

        $r2 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i1);

        r0.<com.google.gson.stream.JsonWriter: int[] stack> = $r2;

     label1:
        $r1 = r0.<com.google.gson.stream.JsonWriter: int[] stack>;

        $i1 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        $i2 = $i1 + 1;

        r0.<com.google.gson.stream.JsonWriter: int stackSize> = $i2;

        $r1[$i1] = $i0;

        return;
    }

    private void replaceTop(int)
    {
        int[] $r1;
        int $i0, $i1, $i2;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.gson.stream.JsonWriter: int[] stack>;

        $i1 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        $i2 = -1;

        $i1 = $i1 + $i2;

        $r1[$i1] = $i0;

        return;
    }

    private void string(java.lang.String)
    {
        java.lang.String[] $r2;
        char $c4;
        int $i0, $i1, $i2, $i3;
        java.io.Writer $r3;
        java.lang.String $r1, $r4;
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.google.gson.stream.JsonWriter: boolean htmlSafe>;

        if $z0 == 0 goto label01;

        $r2 = <com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS>;

        goto label02;

     label01:
        $r2 = <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS>;

     label02:
        $r3 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("\"");

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = 0;

        $i3 = 0;

     label03:
        if $i2 >= $i1 goto label09;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i0 = (int) $c4;

        if $i0 >= 128 goto label04;

        $i0 = (int) $c4;

        $r4 = $r2[$i0];

        if $r4 != null goto label06;

        goto label08;

     label04:
        $i0 = (int) $c4;

        if $i0 != 8232 goto label05;

        $r4 = "\\u2028";

        goto label06;

     label05:
        $i0 = (int) $c4;

        if $i0 != 8233 goto label08;

        $r4 = "\\u2029";

     label06:
        if $i3 >= $i2 goto label07;

        $r3 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $i0 = $i2 - $i3;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String,int,int)>($r1, $i3, $i0);

     label07:
        $r3 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r4);

        $i3 = $i2 + 1;

     label08:
        $i2 = $i2 + 1;

        goto label03;

     label09:
        if $i3 >= $i1 goto label10;

        $r3 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $i1 = $i1 - $i3;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String,int,int)>($r1, $i3, $i1);

     label10:
        $r3 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("\"");

        return;
    }

    private void writeDeferredName()
    {
        java.lang.String $r1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeName()>();

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void string(java.lang.String)>($r1);

        r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName> = null;

     label1:
        return;
    }

    public com.google.gson.stream.JsonWriter beginArray()
    {
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,java.lang.String)>(1, "[");

        return r0;
    }

    public com.google.gson.stream.JsonWriter beginObject()
    {
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,java.lang.String)>(3, "{");

        return r0;
    }

    public void close()
    {
        int[] $r1;
        java.io.Writer $r2;
        int $i0;
        java.io.IOException $r3;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void close()>();

        $i0 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        if $i0 > 1 goto label2;

        if $i0 != 1 goto label1;

        $r1 = r0.<com.google.gson.stream.JsonWriter: int[] stack>;

        $i0 = $i0 - 1;

        $i0 = $r1[$i0];

        if $i0 != 7 goto label2;

     label1:
        r0.<com.google.gson.stream.JsonWriter: int stackSize> = 0;

        return;

     label2:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Incomplete document");

        throw $r3;
    }

    public com.google.gson.stream.JsonWriter endArray()
    {
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)>(1, 2, "]");

        return r0;
    }

    public com.google.gson.stream.JsonWriter endObject()
    {
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)>(3, 5, "}");

        return r0;
    }

    public void flush()
    {
        java.lang.IllegalStateException $r2;
        int $i0;
        java.io.Writer $r1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $i0 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        if $i0 == 0 goto label1;

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonWriter is closed.");

        throw $r2;
    }

    public final boolean getSerializeNulls()
    {
        com.google.gson.stream.JsonWriter r0;
        boolean z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        z0 = r0.<com.google.gson.stream.JsonWriter: boolean serializeNulls>;

        return z0;
    }

    public final boolean isHtmlSafe()
    {
        com.google.gson.stream.JsonWriter r0;
        boolean z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        z0 = r0.<com.google.gson.stream.JsonWriter: boolean htmlSafe>;

        return z0;
    }

    public boolean isLenient()
    {
        com.google.gson.stream.JsonWriter r0;
        boolean z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        z0 = r0.<com.google.gson.stream.JsonWriter: boolean lenient>;

        return z0;
    }

    public com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label1;

        r0 = virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return r0;

     label1:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r2);

        return r0;
    }

    public com.google.gson.stream.JsonWriter name(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        int $i0;
        java.lang.String $r1, $r2;
        com.google.gson.stream.JsonWriter r0;
        java.lang.NullPointerException $r4;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label3;

        $r2 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>;

        if $r2 != null goto label2;

        $i0 = r0.<com.google.gson.stream.JsonWriter: int stackSize>;

        if $i0 == 0 goto label1;

        r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName> = $r1;

        return r0;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonWriter is closed.");

        throw $r3;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label3:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r4;
    }

    public com.google.gson.stream.JsonWriter nullValue()
    {
        java.io.Writer $r2;
        java.lang.String $r1;
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>;

        if $r1 == null goto label2;

        $z0 = r0.<com.google.gson.stream.JsonWriter: boolean serializeNulls>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        goto label2;

     label1:
        r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName> = null;

        return r0;

     label2:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("null");

        return r0;
    }

    public final void setHtmlSafe(boolean)
    {
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        r0.<com.google.gson.stream.JsonWriter: boolean htmlSafe> = $z0;

        return;
    }

    public final void setIndent(java.lang.String)
    {
        int $i0;
        java.lang.String $r1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r0.<com.google.gson.stream.JsonWriter: java.lang.String indent> = null;

        r0.<com.google.gson.stream.JsonWriter: java.lang.String separator> = ":";

        return;

     label1:
        r0.<com.google.gson.stream.JsonWriter: java.lang.String indent> = $r1;

        r0.<com.google.gson.stream.JsonWriter: java.lang.String separator> = ": ";

        return;
    }

    public final void setLenient(boolean)
    {
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        r0.<com.google.gson.stream.JsonWriter: boolean lenient> = $z0;

        return;
    }

    public final void setSerializeNulls(boolean)
    {
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        r0.<com.google.gson.stream.JsonWriter: boolean serializeNulls> = $z0;

        return;
    }

    public com.google.gson.stream.JsonWriter value(double)
    {
        java.io.Writer $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r2;
        com.google.gson.stream.JsonWriter r0;
        double $d0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $d0 := @parameter0: double;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        $z0 = r0.<com.google.gson.stream.JsonWriter: boolean lenient>;

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Numeric values must be finite, but was ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r4 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $r3 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r4.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r3);

        return r0;
    }

    public com.google.gson.stream.JsonWriter value(long)
    {
        java.io.Writer $r1;
        long $l0;
        java.lang.String $r2;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return r0;
    }

    public com.google.gson.stream.JsonWriter value(java.lang.Boolean)
    {
        java.io.Writer $r1;
        java.lang.Boolean $r2;
        java.lang.String $r3;
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r2 := @parameter0: java.lang.Boolean;

        if $r2 != null goto label1;

        r0 = virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return r0;

     label1:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = "true";

        goto label3;

     label2:
        $r3 = "false";

     label3:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r3);

        return r0;
    }

    public com.google.gson.stream.JsonWriter value(java.lang.Number)
    {
        java.io.Writer $r5;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        java.lang.Number $r1;
        java.lang.IllegalArgumentException $r3;
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.Number;

        if $r1 != null goto label1;

        r0 = virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return r0;

     label1:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = r0.<com.google.gson.stream.JsonWriter: boolean lenient>;

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-Infinity");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Infinity");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("NaN");

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Numeric values must be finite, but was ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label3:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r5 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r2);

        return r0;
    }

    public com.google.gson.stream.JsonWriter value(java.lang.String)
    {
        java.lang.String $r1;
        com.google.gson.stream.JsonWriter r0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        r0 = virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return r0;

     label1:
        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void string(java.lang.String)>($r1);

        return r0;
    }

    public com.google.gson.stream.JsonWriter value(boolean)
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        com.google.gson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.gson.stream.JsonWriter: void beforeValue()>();

        $r1 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>;

        if $z0 == 0 goto label1;

        $r2 = "true";

        goto label2;

     label1:
        $r2 = "false";

     label2:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return r0;
    }
}
