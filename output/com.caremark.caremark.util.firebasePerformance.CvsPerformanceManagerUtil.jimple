public class com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil extends java.lang.Object
{
    public static final java.lang.String HttpGetMethod;
    public static final java.lang.String HttpPostMethod;
    public static final java.lang.String HttpPutMethod;
    public static com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil instance;
    public final java.lang.String TAG;
    public java.util.HashMap metrics;
    public java.util.HashMap traces;

    static void <clinit>()
    {
        <com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String HttpPutMethod> = "PUT";

        <com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String HttpPostMethod> = "POST";

        <com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String HttpGetMethod> = "GET";

        return;
    }

    public void <init>()
    {
        java.lang.Class $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = class "Lcom/caremark/caremark/util/firebasePerformance/CvsPerformanceManagerUtil;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG> = $r1;

        r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces> = null;

        r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics> = null;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces> = $r3;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics> = $r3;

        return;
    }

    public static com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil getInstance()
    {
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil $r0;

        $r0 = <com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil instance>;

        if $r0 != null goto label1;

        $r0 = new com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        specialinvoke $r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: void <init>()>();

        <com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil instance> = $r0;

     label1:
        $r0 = <com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil instance>;

        return $r0;
    }

    public static void initFirebasePerformanceMonitoring()
    {
        return;
    }

    private boolean isMetricActive(java.lang.String)
    {
        java.util.HashMap $r1;
        java.lang.String $r2;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.google.firebase.perf.metrics.HttpMetric getMetric(java.lang.String)
    {
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.google.firebase.perf.metrics.HttpMetric $r4;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: boolean isMetricActive(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.firebase.perf.metrics.HttpMetric) $r3;

        return $r4;

     label2:
        return null;
    }

    public com.google.firebase.perf.metrics.Trace getNewTrace(java.lang.String)
    {
        com.google.firebase.perf.metrics.Trace $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.google.firebase.perf.FirebasePerformance $r5;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.firebase.perf.metrics.Trace) $r3;

        return $r4;

     label2:
        $r5 = staticinvoke <com.google.firebase.perf.FirebasePerformance: com.google.firebase.perf.FirebasePerformance getInstance()>();

        $r4 = virtualinvoke $r5.<com.google.firebase.perf.FirebasePerformance: com.google.firebase.perf.metrics.Trace newTrace(java.lang.String)>($r1);

        return $r4;
    }

    public com.google.firebase.perf.metrics.Trace getTrace(java.lang.String)
    {
        com.google.firebase.perf.metrics.Trace $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: boolean isTraceActive(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.firebase.perf.metrics.Trace) $r3;

        return $r4;

     label2:
        return null;
    }

    public boolean isAttributeExist(java.lang.String, java.lang.String)
    {
        java.util.Map $r4;
        com.google.firebase.perf.metrics.Trace $r3;
        java.lang.String $r1, $r2;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.google.firebase.perf.metrics.Trace getTrace(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<com.google.firebase.perf.metrics.Trace: java.util.Map getAttributes()>();

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isTraceActive(java.lang.String)
    {
        java.util.HashMap $r1;
        java.lang.String $r2;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        com.google.firebase.perf.metrics.Trace $r4;
        java.lang.String $r1, $r2, $r3;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.google.firebase.perf.metrics.Trace getTrace(java.lang.String)>($r3);

        virtualinvoke $r4.<com.google.firebase.perf.metrics.Trace: void putAttribute(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void startMetric(java.lang.String, java.lang.String)
    {
        java.util.HashMap $r5;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r3, $r6;
        com.google.firebase.perf.metrics.HttpMetric $r7;
        com.google.firebase.perf.FirebasePerformance $r8;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: boolean isMetricActive(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is currently running, stopping metric!");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r6);

        $r7 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.google.firebase.perf.metrics.HttpMetric getMetric(java.lang.String)>($r1);

        virtualinvoke $r7.<com.google.firebase.perf.metrics.HttpMetric: void stop()>();

     label2:
        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STARTING metric: \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r6);

        $r8 = staticinvoke <com.google.firebase.perf.FirebasePerformance: com.google.firebase.perf.FirebasePerformance getInstance()>();

        $r7 = virtualinvoke $r8.<com.google.firebase.perf.FirebasePerformance: com.google.firebase.perf.metrics.HttpMetric newHttpMetric(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r7.<com.google.firebase.perf.metrics.HttpMetric: void start()>();

        $r5 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

        return;
    }

    public void startTrace(com.google.firebase.perf.metrics.Trace, java.lang.String)
    {
        com.google.firebase.perf.metrics.Trace $r1;
        java.util.HashMap $r7;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        java.util.Map $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: com.google.firebase.perf.metrics.Trace;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: boolean isTraceActive(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is currently running, restarting trace!");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r5);

        virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: void stopTrace(java.lang.String)>($r2);

     label2:
        $r6 = virtualinvoke $r1.<com.google.firebase.perf.metrics.Trace: java.util.Map getAttributes()>();

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trace is set with attributes: ");

        $r6 = virtualinvoke $r1.<com.google.firebase.perf.metrics.Trace: java.util.Map getAttributes()>();

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r5);

     label3:
        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STARTING trace: \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r5);

        virtualinvoke $r1.<com.google.firebase.perf.metrics.Trace: void start()>();

        $r7 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

     label4:
        return;
    }

    public void startTrace(java.lang.String)
    {
        com.google.firebase.perf.metrics.Trace $r6;
        java.util.HashMap $r5;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: boolean isTraceActive(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is currently running, restarting trace!");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: void stopTrace(java.lang.String)>($r1);

     label2:
        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STARTING trace: \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        $r6 = staticinvoke <com.google.firebase.perf.FirebasePerformance: com.google.firebase.perf.metrics.Trace startTrace(java.lang.String)>($r1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        return;
    }

    public void stopMetric(java.lang.String, com.google.firebase.perf.metrics.HttpMetric)
    {
        java.util.HashMap $r6;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r3, $r5;
        com.google.firebase.perf.metrics.HttpMetric $r2;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.firebase.perf.metrics.HttpMetric;

        virtualinvoke $r2.<com.google.firebase.perf.metrics.HttpMetric: void stop()>();

        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STOPPING metric: \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r5);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: com.google.firebase.perf.metrics.HttpMetric getMetric(java.lang.String)>($r1);

        if $r2 == null goto label2;

        $r3 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removing metric: \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r5);

        $r6 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap metrics>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        return;
    }

    public void stopTrace(java.lang.String)
    {
        com.google.firebase.perf.metrics.Trace $r7;
        java.util.HashMap $r5;
        com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil r0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r6;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: boolean isTraceActive(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STOPPING trace: \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.util.HashMap traces>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r7 = (com.google.firebase.perf.metrics.Trace) $r6;

        virtualinvoke $r7.<com.google.firebase.perf.metrics.Trace: void stop()>();

        return;

     label2:
        $r2 = r0.<com.caremark.caremark.util.firebasePerformance.CvsPerformanceManagerUtil: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not running, unable to stop trace!");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r1);

        return;
    }
}
