public final class com.google.android.material.transition.platform.ScaleProvider extends java.lang.Object implements com.google.android.material.transition.platform.VisibilityAnimatorProvider
{
    public boolean growing;
    public float incomingEndScale;
    public float incomingStartScale;
    public float outgoingEndScale;
    public float outgoingStartScale;
    public boolean scaleOnDisappear;

    public void <init>()
    {
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        specialinvoke r0.<com.google.android.material.transition.platform.ScaleProvider: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingStartScale> = 1.0F;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingEndScale> = 1.1F;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingStartScale> = 0.8F;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingEndScale> = 1.0F;

        r0.<com.google.android.material.transition.platform.ScaleProvider: boolean scaleOnDisappear> = 1;

        r0.<com.google.android.material.transition.platform.ScaleProvider: boolean growing> = $z0;

        return;
    }

    public static android.animation.Animator createScaleAnimator(android.view.View, float, float)
    {
        android.animation.PropertyValuesHolder[] $r0;
        android.animation.ObjectAnimator $r5;
        float[] $r1;
        android.util.Property $r3;
        android.animation.PropertyValuesHolder $r4;
        float $f0, $f1;
        android.view.View $r2;

        $r2 := @parameter0: android.view.View;

        $f1 := @parameter1: float;

        $f0 := @parameter2: float;

        $r0 = newarray (android.animation.PropertyValuesHolder)[2];

        $r3 = <android.view.View: android.util.Property SCALE_X>;

        $r1 = newarray (float)[2];

        $r1[0] = $f1;

        $r1[1] = $f0;

        $r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>($r3, $r1);

        $r0[0] = $r4;

        $r3 = <android.view.View: android.util.Property SCALE_Y>;

        $r1 = newarray (float)[2];

        $r1[0] = $f1;

        $r1[1] = $f0;

        $r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>($r3, $r1);

        $r0[1] = $r4;

        $r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>($r2, $r0);

        return $r5;
    }

    public android.animation.Animator createAppear(android.view.ViewGroup, android.view.View)
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        android.view.View $r1;
        float $f0, $f1;
        android.animation.Animator $r3;
        android.view.ViewGroup $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $r2 := @parameter0: android.view.ViewGroup;

        $r1 := @parameter1: android.view.View;

        $z0 = r0.<com.google.android.material.transition.platform.ScaleProvider: boolean growing>;

        if $z0 == 0 goto label1;

        $f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingStartScale>;

        $f1 = r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingEndScale>;

        $r3 = staticinvoke <com.google.android.material.transition.platform.ScaleProvider: android.animation.Animator createScaleAnimator(android.view.View,float,float)>($r1, $f0, $f1);

        return $r3;

     label1:
        $f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingEndScale>;

        $f1 = r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingStartScale>;

        $r3 = staticinvoke <com.google.android.material.transition.platform.ScaleProvider: android.animation.Animator createScaleAnimator(android.view.View,float,float)>($r1, $f0, $f1);

        return $r3;
    }

    public android.animation.Animator createDisappear(android.view.ViewGroup, android.view.View)
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        android.view.View $r1;
        float $f0, $f1;
        android.animation.Animator $r3;
        android.view.ViewGroup $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $r2 := @parameter0: android.view.ViewGroup;

        $r1 := @parameter1: android.view.View;

        $z0 = r0.<com.google.android.material.transition.platform.ScaleProvider: boolean scaleOnDisappear>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z0 = r0.<com.google.android.material.transition.platform.ScaleProvider: boolean growing>;

        if $z0 == 0 goto label2;

        $f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingStartScale>;

        $f1 = r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingEndScale>;

        $r3 = staticinvoke <com.google.android.material.transition.platform.ScaleProvider: android.animation.Animator createScaleAnimator(android.view.View,float,float)>($r1, $f0, $f1);

        return $r3;

     label2:
        $f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingEndScale>;

        $f1 = r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingStartScale>;

        $r3 = staticinvoke <com.google.android.material.transition.platform.ScaleProvider: android.animation.Animator createScaleAnimator(android.view.View,float,float)>($r1, $f0, $f1);

        return $r3;
    }

    public float getIncomingEndScale()
    {
        float f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingEndScale>;

        return f0;
    }

    public float getIncomingStartScale()
    {
        float f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingStartScale>;

        return f0;
    }

    public float getOutgoingEndScale()
    {
        float f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingEndScale>;

        return f0;
    }

    public float getOutgoingStartScale()
    {
        float f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        f0 = r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingStartScale>;

        return f0;
    }

    public boolean isGrowing()
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        boolean z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        z0 = r0.<com.google.android.material.transition.platform.ScaleProvider: boolean growing>;

        return z0;
    }

    public boolean isScaleOnDisappear()
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        boolean z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        z0 = r0.<com.google.android.material.transition.platform.ScaleProvider: boolean scaleOnDisappear>;

        return z0;
    }

    public void setGrowing(boolean)
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.transition.platform.ScaleProvider: boolean growing> = $z0;

        return;
    }

    public void setIncomingEndScale(float)
    {
        float $f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingEndScale> = $f0;

        return;
    }

    public void setIncomingStartScale(float)
    {
        float $f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float incomingStartScale> = $f0;

        return;
    }

    public void setOutgoingEndScale(float)
    {
        float $f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingEndScale> = $f0;

        return;
    }

    public void setOutgoingStartScale(float)
    {
        float $f0;
        com.google.android.material.transition.platform.ScaleProvider r0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.transition.platform.ScaleProvider: float outgoingStartScale> = $f0;

        return;
    }

    public void setScaleOnDisappear(boolean)
    {
        com.google.android.material.transition.platform.ScaleProvider r0;
        boolean $z0;

        r0 := @this: com.google.android.material.transition.platform.ScaleProvider;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.transition.platform.ScaleProvider: boolean scaleOnDisappear> = $z0;

        return;
    }
}
