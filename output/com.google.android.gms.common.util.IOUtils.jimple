public final class com.google.android.gms.common.util.IOUtils extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.gms.common.util.IOUtils r0;

        r0 := @this: com.google.android.gms.common.util.IOUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void closeQuietly(android.os.ParcelFileDescriptor)
    {
        java.io.IOException $r1;
        android.os.ParcelFileDescriptor $r0;

        $r0 := @parameter0: android.os.ParcelFileDescriptor;

        if $r0 == null goto label4;

     label1:
        virtualinvoke $r0.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.io.Closeable)
    {
        java.io.IOException $r1;
        java.io.Closeable $r0;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label4;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static long copyStream(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r0;
        long $l0;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r0 := @parameter1: java.io.OutputStream;

        $l0 = staticinvoke <com.google.android.gms.common.util.IOUtils: long zza(java.io.InputStream,java.io.OutputStream,boolean)>($r1, $r0, 0);

        return $l0;
    }

    public static long copyStream(java.io.InputStream, java.io.OutputStream, boolean, int)
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r3;
        byte[] $r2;
        long $l2, $l3;
        int $i0, $i1, $i4;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $z0 := @parameter2: boolean;

        $i1 := @parameter3: int;

        $r2 = newarray (byte)[$i1];

        $l2 = 0L;

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1);

     label2:
        $i4 = -1;

        if $i0 == $i4 goto label5;

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

     label3:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label4:
        goto label1;

     label5:
        if $z0 == 0 goto label9;

        staticinvoke <com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)>($r0);

        staticinvoke <com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)>($r1);

        return $l2;

     label6:
        $r3 := @caughtexception;

        if $z0 == 0 goto label7;

        staticinvoke <com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)>($r0);

        staticinvoke <com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)>($r1);

     label7:
        goto label8;

     label8:
        throw $r3;

     label9:
        return $l2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public static boolean isGzipByteBuffer(byte[])
    {
        byte[] $r0;
        short $s2, $s3;
        byte $b1;
        int $i0, $i4;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        $b1 = $r0[0];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $b1 = $r0[1];

        $s3 = (short) $b1;

        $s3 = $s3 & 255;

        $i0 = (int) $s3;

        $i0 = $i0 << 8;

        $i4 = (int) $s2;

        $i0 = $i0 | $i4;

        $i4 = 35615;

        if $i0 != $i4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static byte[] readInputStreamFully(java.io.InputStream)
    {
        byte[] $r0;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <com.google.android.gms.common.util.IOUtils: byte[] readInputStreamFully(java.io.InputStream,boolean)>($r1, 1);

        return $r0;
    }

    public static byte[] readInputStreamFully(java.io.InputStream, boolean)
    {
        byte[] $r1;
        java.io.ByteArrayOutputStream $r0;
        boolean $z0;
        java.io.InputStream $r2;

        $r2 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <com.google.android.gms.common.util.IOUtils: long zza(java.io.InputStream,java.io.OutputStream,boolean)>($r2, $r0, $z0);

        $r1 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r1;
    }

    public static byte[] toByteArray(java.io.InputStream)
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r0, $r3;
        int $i0, $i1;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = new java.io.ByteArrayOutputStream;

        $r0 = $r3;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        staticinvoke <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $r2 = newarray (byte)[4096];

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2);

        $i1 = -1;

        if $i0 == $i1 goto label2;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static long zza(java.io.InputStream, java.io.OutputStream, boolean)
    {
        java.io.OutputStream $r0;
        long $l0;
        boolean $z0;
        java.io.InputStream $r1;

        $r1 := @parameter0: java.io.InputStream;

        $r0 := @parameter1: java.io.OutputStream;

        $z0 := @parameter2: boolean;

        $l0 = staticinvoke <com.google.android.gms.common.util.IOUtils: long copyStream(java.io.InputStream,java.io.OutputStream,boolean,int)>($r1, $r0, $z0, 1024);

        return $l0;
    }
}
