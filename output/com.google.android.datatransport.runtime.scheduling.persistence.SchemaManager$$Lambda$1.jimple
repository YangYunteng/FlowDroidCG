public final class com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 extends java.lang.Object implements com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration
{
    public static final com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 instance;

    static void <clinit>()
    {
        com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 $r0;

        $r0 = new com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1;

        specialinvoke $r0.<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void <init>()>();

        <com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 instance> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()
    {
        com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 r0;

        r0 = <com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 instance>;

        return r0;
    }

    public void upgrade(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1 r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        staticinvoke <com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void lambda$static$0(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }
}
