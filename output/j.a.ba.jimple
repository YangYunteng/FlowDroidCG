public abstract class j.a.ba extends j.a.n implements j.a.I, j.a.S
{
    public final j.a.W d;

    public void <init>(j.a.W)
    {
        j.a.W $r1;
        j.a.ba r0;

        r0 := @this: j.a.ba;

        $r1 := @parameter0: j.a.W;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "job");

        specialinvoke r0.<j.a.n: void <init>()>();

        r0.<j.a.ba: j.a.W d> = $r1;

        return;
    }

    public j.a.ha b()
    {
        j.a.ba r0;

        r0 := @this: j.a.ba;

        return null;
    }

    public void dispose()
    {
        j.a.ba r0;
        j.a.ca $r2;
        j.a.W $r1;
        kotlin.TypeCastException $r3;

        r0 := @this: j.a.ba;

        $r1 = r0.<j.a.ba: j.a.W d>;

        if $r1 == null goto label1;

        $r2 = (j.a.ca) $r1;

        virtualinvoke $r2.<j.a.ca: void b(j.a.ba)>(r0);

        return;

     label1:
        $r3 = new kotlin.TypeCastException;

        specialinvoke $r3.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.JobSupport");

        throw $r3;
    }

    public boolean isActive()
    {
        j.a.ba r0;

        r0 := @this: j.a.ba;

        return 1;
    }
}
