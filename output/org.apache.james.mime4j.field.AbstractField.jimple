public abstract class org.apache.james.mime4j.field.AbstractField extends java.lang.Object implements org.apache.james.mime4j.field.ParsedField
{
    public static final java.util.regex.Pattern FIELD_NAME_PATTERN;
    public static final org.apache.james.mime4j.field.DefaultFieldParser parser;
    public final java.lang.String body;
    public final java.lang.String name;
    public final org.apache.james.mime4j.util.ByteSequence raw;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        org.apache.james.mime4j.field.DefaultFieldParser $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([\\x21-\\x39\\x3b-\\x7e]+):");

        <org.apache.james.mime4j.field.AbstractField: java.util.regex.Pattern FIELD_NAME_PATTERN> = $r0;

        $r1 = new org.apache.james.mime4j.field.DefaultFieldParser;

        specialinvoke $r1.<org.apache.james.mime4j.field.DefaultFieldParser: void <init>()>();

        <org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.DefaultFieldParser parser> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.james.mime4j.util.ByteSequence)
    {
        org.apache.james.mime4j.field.AbstractField r0;
        org.apache.james.mime4j.util.ByteSequence $r3;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.james.mime4j.util.ByteSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String name> = $r1;

        r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String body> = $r2;

        r0.<org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.util.ByteSequence raw> = $r3;

        return;
    }

    public static org.apache.james.mime4j.field.DefaultFieldParser getParser()
    {
        org.apache.james.mime4j.field.DefaultFieldParser r0;

        r0 = <org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.DefaultFieldParser parser>;

        return r0;
    }

    public static org.apache.james.mime4j.field.ParsedField parse(java.lang.String)
    {
        org.apache.james.mime4j.field.ParsedField $r2;
        java.lang.String $r0;
        org.apache.james.mime4j.util.ByteSequence $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence,java.lang.String)>($r1, $r0);

        return $r2;
    }

    public static org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence)
    {
        org.apache.james.mime4j.field.ParsedField $r2;
        java.lang.String $r1;
        org.apache.james.mime4j.util.ByteSequence $r0;

        $r0 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r1 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(org.apache.james.mime4j.util.ByteSequence)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence, java.lang.String)
    {
        org.apache.james.mime4j.util.ByteSequence $r0;
        org.apache.james.mime4j.MimeException $r8;
        char $c1;
        org.apache.james.mime4j.field.ParsedField $r7;
        java.util.regex.Matcher $r4;
        int $i0;
        java.lang.String $r1, $r2, $r5;
        java.util.regex.Pattern $r3;
        org.apache.james.mime4j.field.DefaultFieldParser $r6;
        boolean $z0;

        $r0 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String unfold(java.lang.String)>($r1);

        $r3 = <org.apache.james.mime4j.field.AbstractField: java.util.regex.Pattern FIELD_NAME_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if $i0 != 32 goto label1;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $r6 = <org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.DefaultFieldParser parser>;

        $r7 = virtualinvoke $r6.<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence)>($r1, $r5, $r0);

        return $r7;

     label2:
        $r8 = new org.apache.james.mime4j.MimeException;

        specialinvoke $r8.<org.apache.james.mime4j.MimeException: void <init>(java.lang.String)>("Invalid field in string");

        throw $r8;
    }

    public java.lang.String getBody()
    {
        org.apache.james.mime4j.field.AbstractField r0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        r1 = r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String body>;

        return r1;
    }

    public java.lang.String getName()
    {
        org.apache.james.mime4j.field.AbstractField r0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        r1 = r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String name>;

        return r1;
    }

    public org.apache.james.mime4j.field.ParseException getParseException()
    {
        org.apache.james.mime4j.field.AbstractField r0;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        return null;
    }

    public org.apache.james.mime4j.util.ByteSequence getRaw()
    {
        org.apache.james.mime4j.field.AbstractField r0;
        org.apache.james.mime4j.util.ByteSequence r1;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        r1 = r0.<org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.util.ByteSequence raw>;

        return r1;
    }

    public boolean isValidField()
    {
        org.apache.james.mime4j.field.AbstractField r0;
        org.apache.james.mime4j.field.ParseException $r1;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.ParseException getParseException()>();

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r2;
        org.apache.james.mime4j.field.AbstractField r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.AbstractField;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = r0.<org.apache.james.mime4j.field.AbstractField: java.lang.String body>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
