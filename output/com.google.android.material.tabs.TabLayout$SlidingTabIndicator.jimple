public class com.google.android.material.tabs.TabLayout$SlidingTabIndicator extends android.widget.LinearLayout
{
    public int animationStartLeft;
    public int animationStartRight;
    public final android.graphics.drawable.GradientDrawable defaultSelectionIndicator;
    public android.animation.ValueAnimator indicatorAnimator;
    public int indicatorLeft;
    public int indicatorRight;
    public int layoutDirection;
    public int selectedIndicatorHeight;
    public final android.graphics.Paint selectedIndicatorPaint;
    public int selectedPosition;
    public float selectionOffset;
    public final com.google.android.material.tabs.TabLayout this$0;

    public void <init>(com.google.android.material.tabs.TabLayout, android.content.Context)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout $r2;
        android.graphics.drawable.GradientDrawable $r4;
        int $i0;
        android.graphics.Paint $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $r2 := @parameter0: com.google.android.material.tabs.TabLayout;

        $r1 := @parameter1: android.content.Context;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0> = $r2;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>($r1);

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int layoutDirection> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorLeft> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorRight> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int animationStartLeft> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int animationStartRight> = $i0;

        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>(0);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.graphics.Paint selectedIndicatorPaint> = $r3;

        $r4 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r4.<android.graphics.drawable.GradientDrawable: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.graphics.drawable.GradientDrawable defaultSelectionIndicator> = $r4;

        return;
    }

    public static int access$1200(com.google.android.material.tabs.TabLayout$SlidingTabIndicator)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r0;
        int i0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        i0 = $r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int animationStartLeft>;

        return i0;
    }

    public static int access$1300(com.google.android.material.tabs.TabLayout$SlidingTabIndicator)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator $r0;
        int i0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        i0 = $r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int animationStartRight>;

        return i0;
    }

    private void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView, android.graphics.RectF)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        android.graphics.RectF $r1;
        android.content.Context $r3;
        int $i0, $i1, $i2;
        float $f0, $f1;
        com.google.android.material.tabs.TabLayout$TabView $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $r2 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter1: android.graphics.RectF;

        $i0 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: int access$1400(com.google.android.material.tabs.TabLayout$TabView)>($r2);

        $i1 = $i0;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $f0 = staticinvoke <com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)>($r3, 24);

        $i2 = (int) $f0;

        if $i0 >= $i2 goto label1;

        $i1 = $i2;

     label1:
        $i0 = virtualinvoke $r2.<android.widget.LinearLayout: int getLeft()>();

        $i2 = virtualinvoke $r2.<android.widget.LinearLayout: int getRight()>();

        $i0 = $i0 + $i2;

        $i0 = $i0 / 2;

        $i2 = $i1 / 2;

        $i1 = $i0 - $i2;

        $i0 = $i0 + $i2;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>($f0, 0.0F, $f1, 0.0F);

        return;
    }

    private void updateIndicatorPosition()
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        byte $b2;
        int $i0, $i1, $i3, $i4, $i5;
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView $r3;
        boolean $z0;
        android.graphics.RectF $r4;
        com.google.android.material.tabs.TabLayout $r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition>;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        if $i0 <= 0 goto label3;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $z0 = $r2.<com.google.android.material.tabs.TabLayout: boolean tabIndicatorFullWidth>;

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z0 == 0 goto label1;

        $r3 = (com.google.android.material.tabs.TabLayout$TabView) $r1;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF)>($r3, $r4);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        $f0 = $r4.<android.graphics.RectF: float left>;

        $i0 = (int) $f0;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        $f0 = $r4.<android.graphics.RectF: float right>;

        $i1 = (int) $f0;

     label1:
        $f0 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: float selectionOffset>;

        $b2 = $f0 cmpl 0.0F;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label4;

        $i3 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition>;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i5 = -1;

        $i4 = $i4 + $i5;

        if $i3 >= $i4 goto label4;

        $i3 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition>;

        $i3 = $i3 + 1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i3);

        $i3 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i4 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $z0 = $r2.<com.google.android.material.tabs.TabLayout: boolean tabIndicatorFullWidth>;

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z0 == 0 goto label2;

        $r3 = (com.google.android.material.tabs.TabLayout$TabView) $r1;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF)>($r3, $r4);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        $f0 = $r4.<android.graphics.RectF: float left>;

        $i3 = (int) $f0;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        $f0 = $r4.<android.graphics.RectF: float right>;

        $i4 = (int) $f0;

     label2:
        $f0 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: float selectionOffset>;

        $f1 = (float) $i3;

        $f1 = $f1 * $f0;

        $f2 = 1.0F - $f0;

        $f3 = (float) $i0;

        $f2 = $f2 * $f3;

        $f1 = $f1 + $f2;

        $i0 = (int) $f1;

        $f1 = (float) $i4;

        $f1 = $f1 * $f0;

        $f0 = 1.0F - $f0;

        $f2 = (float) $i1;

        $f0 = $f0 * $f2;

        $f0 = $f1 + $f0;

        $i1 = (int) $f0;

        goto label4;

     label3:
        $i0 = -1;

        $i1 = -1;

     label4:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setIndicatorPosition(int,int)>($i0, $i1);

        return;
    }

    private void updateOrRecreateIndicatorAnimation(boolean, int, int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        android.animation.TimeInterpolator $r7;
        long $l6;
        float[] $r8;
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2 $r9;
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1 $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView $r3;
        boolean $z0, $z1;
        android.graphics.RectF $r4;
        com.google.android.material.tabs.TabLayout $r2;
        float $f0;
        android.animation.ValueAnimator $r6;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        if $r1 != null goto label1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void updateIndicatorPosition()>();

        return;

     label1:
        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $z1 = $r2.<com.google.android.material.tabs.TabLayout: boolean tabIndicatorFullWidth>;

        if $z1 != 0 goto label2;

        $z1 = $r1 instanceof com.google.android.material.tabs.TabLayout$TabView;

        if $z1 == 0 goto label2;

        $r3 = (com.google.android.material.tabs.TabLayout$TabView) $r1;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF)>($r3, $r4);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        $f0 = $r4.<android.graphics.RectF: float left>;

        $i2 = (int) $f0;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout: android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)>($r2);

        $f0 = $r4.<android.graphics.RectF: float right>;

        $i3 = (int) $f0;

     label2:
        $i4 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorLeft>;

        $i5 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorRight>;

        if $i4 != $i2 goto label3;

        if $i5 != $i3 goto label3;

        return;

     label3:
        if $z0 == 0 goto label4;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int animationStartLeft> = $i4;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int animationStartRight> = $i5;

     label4:
        $r5 = new com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1;

        specialinvoke $r5.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1: void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int,int)>(r0, $i2, $i3);

        if $z0 == 0 goto label5;

        $r6 = new android.animation.ValueAnimator;

        specialinvoke $r6.<android.animation.ValueAnimator: void <init>()>();

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator> = $r6;

        $r7 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r7);

        $l6 = (long) $i1;

        virtualinvoke $r6.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l6);

        $r8 = newarray (float)[2];

        $r8[0] = 0.0F;

        $r8[1] = 1.0F;

        virtualinvoke $r6.<android.animation.ValueAnimator: void setFloatValues(float[])>($r8);

        virtualinvoke $r6.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        $r9 = new com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2;

        specialinvoke $r9.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2: void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int)>(r0, $i0);

        virtualinvoke $r6.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r9);

        virtualinvoke $r6.<android.animation.ValueAnimator: void start()>();

        return;

     label5:
        $r6 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void removeAllUpdateListeners()>();

        $r6 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        return;
    }

    public void animateIndicatorToPosition(int, int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1;
        boolean $z0;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void cancel()>();

     label1:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void updateOrRecreateIndicatorAnimation(boolean,int,int)>(1, $i0, $i1);

        return;
    }

    public boolean childrenNeedLayout()
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1, $i2;
        android.view.View $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        if $i2 > 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void draw(android.graphics.Canvas)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        com.google.android.material.tabs.TabLayout $r2;
        android.graphics.drawable.Drawable $r3;
        android.graphics.PorterDuff$Mode $r5;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r4;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r3 = $r2.<com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable tabSelectedIndicator>;

        $i0 = 0;

        if $r3 == null goto label01;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label02;

     label01:
        $i1 = 0;

     label02:
        $i2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedIndicatorHeight>;

        if $i2 < 0 goto label03;

        $i1 = $i2;

     label03:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $i2 = $r2.<com.google.android.material.tabs.TabLayout: int tabIndicatorGravity>;

        if $i2 == 0 goto label06;

        if $i2 == 1 goto label05;

        if $i2 == 2 goto label07;

        if $i2 == 3 goto label04;

        $i1 = 0;

        goto label07;

     label04:
        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        goto label07;

     label05:
        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 / 2;

        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i1 = $i2 + $i1;

        $i1 = $i1 / 2;

        goto label07;

     label06:
        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

     label07:
        $i2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorLeft>;

        if $i2 < 0 goto label12;

        $i3 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorRight>;

        if $i3 <= $i2 goto label12;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r3 = $r2.<com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable tabSelectedIndicator>;

        if $r3 == null goto label08;

        goto label09;

     label08:
        $r3 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.graphics.drawable.GradientDrawable defaultSelectionIndicator>;

     label09:
        $r3 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r3);

        $r3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorLeft>;

        $i3 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorRight>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i0, $i3, $i1);

        $r4 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.graphics.Paint selectedIndicatorPaint>;

        if $r4 == null goto label11;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 21 goto label10;

        $i0 = virtualinvoke $r4.<android.graphics.Paint: int getColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        goto label11;

     label10:
        $i0 = virtualinvoke $r4.<android.graphics.Paint: int getColor()>();

        staticinvoke <b.i.c.a.a: void b(android.graphics.drawable.Drawable,int)>($r3, $i0);

     label11:
        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label12:
        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    public float getIndicatorPosition()
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0;
        float $f0, $f1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition>;

        $f1 = (float) $i0;

        $f0 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: float selectionOffset>;

        $f0 = $f1 + $f0;

        return $f0;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $z0 := @parameter0: boolean;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i2, $i3, $i0, $i1);

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $i2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition>;

        $i3 = -1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void updateOrRecreateIndicatorAnimation(boolean,int,int)>(0, $i2, $i3);

        return;

     label1:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void updateIndicatorPosition()>();

        return;
    }

    public void onMeasure(int, int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        android.content.Context $r3;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r2;
        android.widget.LinearLayout$LayoutParams $r5;
        boolean $z0;
        com.google.android.material.tabs.TabLayout $r1;
        android.view.ViewGroup$LayoutParams $r4;
        float $f0;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        if $i2 == 1073741824 goto label01;

        return;

     label01:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $i2 = $r1.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        if $i2 == 1 goto label02;

        $i2 = $r1.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i2 != 2 goto label12;

     label02:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i3 = 0;

        $i4 = 0;

        $i5 = 0;

     label03:
        if $i4 >= $i2 goto label05;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i4);

        $i6 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i6 != 0 goto label04;

        $i6 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

     label04:
        $i4 = $i4 + 1;

        goto label03;

     label05:
        if $i5 > 0 goto label06;

        return;

     label06:
        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $f0 = staticinvoke <com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)>($r3, 16);

        $i7 = (int) $f0;

        $i4 = $i5 * $i2;

        $i6 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredWidth()>();

        $i7 = $i7 * 2;

        $i6 = $i6 - $i7;

        if $i4 > $i6 goto label10;

        $z0 = 0;

     label07:
        if $i3 >= $i2 goto label11;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i3);

        $r4 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.LinearLayout$LayoutParams) $r4;

        $i4 = $r5.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i4 != $i5 goto label08;

        $f0 = $r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b8 = $f0 cmpl 0.0F;

        if $b8 == 0 goto label09;

     label08:
        $r5.<android.widget.LinearLayout$LayoutParams: int width> = $i5;

        $r5.<android.widget.LinearLayout$LayoutParams: float weight> = 0.0F;

        $z0 = 1;

     label09:
        $i3 = $i3 + 1;

        goto label07;

     label10:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: com.google.android.material.tabs.TabLayout this$0>;

        $r1.<com.google.android.material.tabs.TabLayout: int tabGravity> = 0;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout: void updateTabViews(boolean)>(0);

        $z0 = 1;

     label11:
        if $z0 == 0 goto label12;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

     label12:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.widget.LinearLayout: void onRtlPropertiesChanged(int)>($i0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 23 goto label1;

        $i1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int layoutDirection>;

        if $i1 == $i0 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int layoutDirection> = $i0;

     label1:
        return;
    }

    public void setIndicatorPosition(int, int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorLeft>;

        if $i0 != $i2 goto label1;

        $i2 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorRight>;

        if $i1 == $i2 goto label2;

     label1:
        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorLeft> = $i0;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int indicatorRight> = $i1;

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label2:
        return;
    }

    public void setIndicatorPositionFromTabPosition(int, float)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0;
        float $f0;
        boolean $z0;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.animation.ValueAnimator indicatorAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void cancel()>();

     label1:
        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedPosition> = $i0;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: float selectionOffset> = $f0;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void updateIndicatorPosition()>();

        return;
    }

    public void setSelectedIndicatorColor(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1;
        android.graphics.Paint $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.graphics.Paint selectedIndicatorPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        if $i1 == $i0 goto label1;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: android.graphics.Paint selectedIndicatorPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label1:
        return;
    }

    public void setSelectedIndicatorHeight(int)
    {
        com.google.android.material.tabs.TabLayout$SlidingTabIndicator r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.tabs.TabLayout$SlidingTabIndicator;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedIndicatorHeight>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: int selectedIndicatorHeight> = $i0;

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label1:
        return;
    }
}
