public class com.google.common.collect.CollectSpliterators$1WithCharacteristics extends java.lang.Object implements java.util.Spliterator
{
    public final java.util.Spliterator$OfInt delegate;
    public final java.util.Comparator val$comparator;
    public final int val$extraCharacteristics;
    public final java.util.function.IntFunction val$function;

    public void <init>(java.util.Spliterator$OfInt, java.util.function.IntFunction, int, java.util.Comparator)
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0;
        java.util.Spliterator$OfInt $r1;
        int $i0;
        java.util.Comparator $r3;
        java.util.function.IntFunction $r2;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $r1 := @parameter0: java.util.Spliterator$OfInt;

        $r2 := @parameter1: java.util.function.IntFunction;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.util.Comparator;

        r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.function.IntFunction val$function> = $r2;

        r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: int val$extraCharacteristics> = $i0;

        r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Comparator val$comparator> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Spliterator$OfInt delegate> = $r1;

        return;
    }

    public static void a(java.util.function.Consumer, java.util.function.IntFunction, int)
    {
        java.util.function.Consumer $r0;
        int $i0;
        java.lang.Object $r1;
        java.util.function.IntFunction $r2;

        $r0 := @parameter0: java.util.function.Consumer;

        $r2 := @parameter1: java.util.function.IntFunction;

        $i0 := @parameter2: int;

        $r1 = interfaceinvoke $r2.<java.util.function.IntFunction: java.lang.Object apply(int)>($i0);

        interfaceinvoke $r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    public static void b(java.util.function.Consumer, java.util.function.IntFunction, int)
    {
        java.util.function.Consumer $r0;
        int $i0;
        java.lang.Object $r1;
        java.util.function.IntFunction $r2;

        $r0 := @parameter0: java.util.function.Consumer;

        $r2 := @parameter1: java.util.function.IntFunction;

        $i0 := @parameter2: int;

        $r1 = interfaceinvoke $r2.<java.util.function.IntFunction: java.lang.Object apply(int)>($i0);

        interfaceinvoke $r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

    public int characteristics()
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0;
        int $i0;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $i0 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: int val$extraCharacteristics>;

        $i0 = $i0 | 16464;

        return $i0;
    }

    public long estimateSize()
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0;
        long $l0;
        java.util.Spliterator$OfInt $r1;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Spliterator$OfInt delegate>;

        $l0 = interfaceinvoke $r1.<java.util.Spliterator$OfInt: long estimateSize()>();

        return $l0;
    }

    public void forEachRemaining(java.util.function.Consumer)
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0;
        java.util.function.Consumer $r1;
        java.util.Spliterator$OfInt $r2;
        c.i.b.c.I $r4;
        java.util.function.IntFunction $r3;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Spliterator$OfInt delegate>;

        $r3 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.function.IntFunction val$function>;

        $r4 = new c.i.b.c.I;

        specialinvoke $r4.<c.i.b.c.I: void <init>(java.util.function.Consumer,java.util.function.IntFunction)>($r1, $r3);

        interfaceinvoke $r2.<java.util.Spliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>($r4);

        return;
    }

    public java.util.Comparator getComparator()
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0;
        java.lang.IllegalStateException $r1;
        java.util.Comparator r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $z0 = interfaceinvoke r0.<java.util.Spliterator: boolean hasCharacteristics(int)>(4);

        if $z0 == 0 goto label1;

        r2 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Comparator val$comparator>;

        return r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0;
        java.util.function.Consumer $r4;
        java.util.Spliterator$OfInt $r1;
        c.i.b.c.J $r3;
        java.util.function.IntFunction $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $r4 := @parameter0: java.util.function.Consumer;

        $r1 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Spliterator$OfInt delegate>;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.function.IntFunction val$function>;

        $r3 = new c.i.b.c.J;

        specialinvoke $r3.<c.i.b.c.J: void <init>(java.util.function.Consumer,java.util.function.IntFunction)>($r4, $r2);

        $z0 = interfaceinvoke $r1.<java.util.Spliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>($r3);

        return $z0;
    }

    public java.util.Spliterator trySplit()
    {
        com.google.common.collect.CollectSpliterators$1WithCharacteristics r0, $r1;
        java.util.Spliterator$OfInt $r4;
        int $i0;
        java.util.Comparator $r3;
        java.util.function.IntFunction $r2;

        r0 := @this: com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $r4 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Spliterator$OfInt delegate>;

        $r4 = interfaceinvoke $r4.<java.util.Spliterator$OfInt: java.util.Spliterator$OfInt trySplit()>();

        if $r4 != null goto label1;

        return null;

     label1:
        $r1 = new com.google.common.collect.CollectSpliterators$1WithCharacteristics;

        $r2 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.function.IntFunction val$function>;

        $i0 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: int val$extraCharacteristics>;

        $r3 = r0.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: java.util.Comparator val$comparator>;

        specialinvoke $r1.<com.google.common.collect.CollectSpliterators$1WithCharacteristics: void <init>(java.util.Spliterator$OfInt,java.util.function.IntFunction,int,java.util.Comparator)>($r4, $r2, $i0, $r3);

        return $r1;
    }
}
