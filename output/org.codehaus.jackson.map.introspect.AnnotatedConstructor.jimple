public final class org.codehaus.jackson.map.introspect.AnnotatedConstructor extends org.codehaus.jackson.map.introspect.AnnotatedWithParams
{
    public final java.lang.reflect.Constructor _constructor;

    public void <init>(java.lang.reflect.Constructor, org.codehaus.jackson.map.introspect.AnnotationMap, org.codehaus.jackson.map.introspect.AnnotationMap[])
    {
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r1;
        java.lang.IllegalArgumentException $r4;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;
        org.codehaus.jackson.map.introspect.AnnotationMap $r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 := @parameter0: java.lang.reflect.Constructor;

        $r3 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 := @parameter2: org.codehaus.jackson.map.introspect.AnnotationMap[];

        specialinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void <init>(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>($r3, $r1);

        if $r2 == null goto label1;

        r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor> = $r2;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null constructor not allowed");

        throw $r4;
    }

    public volatile java.lang.reflect.AnnotatedElement getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>();

        return $r1;
    }

    public java.lang.reflect.Constructor getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        return r1;
    }

    public java.lang.Class getDeclaringClass()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public java.lang.reflect.Type getGenericType()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getRawType()>();

        return $r1;
    }

    public java.lang.reflect.Member getMember()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        return r1;
    }

    public int getModifiers()
    {
        int $i0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Constructor: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.String getName()>();

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)
    {
        java.lang.reflect.Type $r3;
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r2;
        int $i0;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r4;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $i0 := @parameter0: int;

        $r1 = new org.codehaus.jackson.map.introspect.AnnotatedParameter;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Type getParameterType(int)>($i0);

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        $r4 = $r2[$i0];

        specialinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedParameter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.reflect.Type,org.codehaus.jackson.map.introspect.AnnotationMap)>(r0, $r3, $r4);

        return $r1;
    }

    public java.lang.Class getParameterClass(int)
    {
        int $i0, $i1;
        java.lang.Class[] $r1;
        java.lang.Class $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $i1 := @parameter0: int;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = $r1[$i1];

        return $r3;
    }

    public int getParameterCount()
    {
        int $i0;
        java.lang.Class[] $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.reflect.Type getParameterType(int)
    {
        java.lang.reflect.Type $r3;
        int $i0, $i1;
        java.lang.reflect.Type[] $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $i1 := @parameter0: int;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = $r1[$i1];

        return $r3;
    }

    public java.lang.Class getRawType()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)
    {
        java.lang.reflect.TypeVariable[] $r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.type.TypeBindings $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 := @parameter0: org.codehaus.jackson.map.type.TypeBindings;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[])>($r1, $r3);

        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[constructor for ");

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", annotations: ");

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
