public class org.codehaus.jackson.util.MinimalPrettyPrinter extends java.lang.Object implements org.codehaus.jackson.PrettyPrinter
{
    public static final java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR;
    public java.lang.String _rootValueSeparator;

    public void <init>()
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.util.MinimalPrettyPrinter: java.lang.String _rootValueSeparator> = " ";

        return;
    }

    public void beforeArrayValues(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        return;
    }

    public void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        return;
    }

    public void setRootValueSeparator(java.lang.String)
    {
        java.lang.String $r1;
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.jackson.util.MinimalPrettyPrinter: java.lang.String _rootValueSeparator> = $r1;

        return;
    }

    public void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(44);

        return;
    }

    public void writeEndArray(org.codehaus.jackson.JsonGenerator, int)
    {
        int $i0;
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(93);

        return;
    }

    public void writeEndObject(org.codehaus.jackson.JsonGenerator, int)
    {
        int $i0;
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(125);

        return;
    }

    public void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(44);

        return;
    }

    public void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(58);

        return;
    }

    public void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator)
    {
        java.lang.String $r2;
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 = r0.<org.codehaus.jackson.util.MinimalPrettyPrinter: java.lang.String _rootValueSeparator>;

        if $r2 == null goto label1;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(java.lang.String)>($r2);

     label1:
        return;
    }

    public void writeStartArray(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(91);

        return;
    }

    public void writeStartObject(org.codehaus.jackson.JsonGenerator)
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter r0;
        org.codehaus.jackson.JsonGenerator $r1;

        r0 := @this: org.codehaus.jackson.util.MinimalPrettyPrinter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void writeRaw(char)>(123);

        return;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.util.MinimalPrettyPrinter: java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR> = " ";

        return;
    }
}
