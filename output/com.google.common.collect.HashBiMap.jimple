public final class com.google.common.collect.HashBiMap extends com.google.common.collect.Maps$IteratorBasedAbstractMap implements com.google.common.collect.BiMap, java.io.Serializable
{
    public static final double LOAD_FACTOR;
    public static final long serialVersionUID;
    public transient com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder;
    public transient com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV;
    public transient com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK;
    public transient com.google.common.collect.BiMap inverse;
    public transient com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder;
    public transient int mask;
    public transient int modCount;
    public transient int size;

    public void <init>(int)
    {
        int $i0;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: void <init>()>();

        specialinvoke r0.<com.google.common.collect.HashBiMap: void init(int)>($i0);

        return;
    }

    public static com.google.common.collect.HashBiMap$BiEntry access$000(com.google.common.collect.HashBiMap)
    {
        com.google.common.collect.HashBiMap$BiEntry r1;
        com.google.common.collect.HashBiMap $r0;

        $r0 := @parameter0: com.google.common.collect.HashBiMap;

        r1 = $r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder>;

        return r1;
    }

    public static int access$100(com.google.common.collect.HashBiMap)
    {
        int i0;
        com.google.common.collect.HashBiMap $r0;

        $r0 := @parameter0: com.google.common.collect.HashBiMap;

        i0 = $r0.<com.google.common.collect.HashBiMap: int modCount>;

        return i0;
    }

    public static void access$200(com.google.common.collect.HashBiMap, com.google.common.collect.HashBiMap$BiEntry)
    {
        com.google.common.collect.HashBiMap$BiEntry $r1;
        com.google.common.collect.HashBiMap $r0;

        $r0 := @parameter0: com.google.common.collect.HashBiMap;

        $r1 := @parameter1: com.google.common.collect.HashBiMap$BiEntry;

        specialinvoke $r0.<com.google.common.collect.HashBiMap: void delete(com.google.common.collect.HashBiMap$BiEntry)>($r1);

        return;
    }

    public static com.google.common.collect.HashBiMap$BiEntry access$300(com.google.common.collect.HashBiMap, java.lang.Object, int)
    {
        com.google.common.collect.HashBiMap $r2;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r1;
        java.lang.Object $r0;

        $r2 := @parameter0: com.google.common.collect.HashBiMap;

        $r0 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r1 = specialinvoke $r2.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int)>($r0, $i0);

        return $r1;
    }

    public static com.google.common.collect.HashBiMap$BiEntry access$400(com.google.common.collect.HashBiMap, java.lang.Object, int)
    {
        com.google.common.collect.HashBiMap $r2;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r1;
        java.lang.Object $r0;

        $r2 := @parameter0: com.google.common.collect.HashBiMap;

        $r0 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r1 = specialinvoke $r2.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int)>($r0, $i0);

        return $r1;
    }

    public static void access$500(com.google.common.collect.HashBiMap, com.google.common.collect.HashBiMap$BiEntry, com.google.common.collect.HashBiMap$BiEntry)
    {
        com.google.common.collect.HashBiMap$BiEntry $r1, $r2;
        com.google.common.collect.HashBiMap $r0;

        $r0 := @parameter0: com.google.common.collect.HashBiMap;

        $r1 := @parameter1: com.google.common.collect.HashBiMap$BiEntry;

        $r2 := @parameter2: com.google.common.collect.HashBiMap$BiEntry;

        specialinvoke $r0.<com.google.common.collect.HashBiMap: void insert(com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry)>($r1, $r2);

        return;
    }

    public static int access$700(com.google.common.collect.HashBiMap)
    {
        int i0;
        com.google.common.collect.HashBiMap $r0;

        $r0 := @parameter0: com.google.common.collect.HashBiMap;

        i0 = $r0.<com.google.common.collect.HashBiMap: int size>;

        return i0;
    }

    public static java.lang.Object access$800(com.google.common.collect.HashBiMap, java.lang.Object, java.lang.Object, boolean)
    {
        com.google.common.collect.HashBiMap $r2;
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r2 := @parameter0: com.google.common.collect.HashBiMap;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $z0 := @parameter3: boolean;

        $r0 = specialinvoke $r2.<com.google.common.collect.HashBiMap: java.lang.Object putInverse(java.lang.Object,java.lang.Object,boolean)>($r0, $r1, $z0);

        return $r0;
    }

    public static com.google.common.collect.HashBiMap create()
    {
        com.google.common.collect.HashBiMap $r0;

        $r0 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create(int)>(16);

        return $r0;
    }

    public static com.google.common.collect.HashBiMap create(int)
    {
        int $i0;
        com.google.common.collect.HashBiMap $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.common.collect.HashBiMap;

        specialinvoke $r0.<com.google.common.collect.HashBiMap: void <init>(int)>($i0);

        return $r0;
    }

    public static com.google.common.collect.HashBiMap create(java.util.Map)
    {
        int $i0;
        com.google.common.collect.HashBiMap $r1;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r1 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create(int)>($i0);

        virtualinvoke $r1.<java.util.AbstractMap: void putAll(java.util.Map)>($r0);

        return $r1;
    }

    private com.google.common.collect.HashBiMap$BiEntry[] createTable(int)
    {
        int $i0;
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $i0 := @parameter0: int;

        $r1 = newarray (com.google.common.collect.HashBiMap$BiEntry)[$i0];

        return $r1;
    }

    private void delete(com.google.common.collect.HashBiMap$BiEntry)
    {
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r2;
        int $i0, $i1;
        com.google.common.collect.HashBiMap$BiEntry $r1, $r3, $r4, $r5;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: com.google.common.collect.HashBiMap$BiEntry;

        $i0 = $r1.<com.google.common.collect.HashBiMap$BiEntry: int keyHash>;

        $i1 = r0.<com.google.common.collect.HashBiMap: int mask>;

        $i0 = $i0 & $i1;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV>;

        $r3 = $r2[$i0];

        $r4 = null;

        $r5 = null;

     label01:
        if $r3 != $r1 goto label12;

        if $r5 != null goto label02;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV>;

        $r5 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket>;

        $r2[$i0] = $r5;

        goto label03;

     label02:
        $r3 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket>;

        $r5.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket> = $r3;

     label03:
        $i0 = $r1.<com.google.common.collect.HashBiMap$BiEntry: int valueHash>;

        $i1 = r0.<com.google.common.collect.HashBiMap: int mask>;

        $i0 = $i0 & $i1;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK>;

        $r3 = $r2[$i0];

     label04:
        $r5 = $r4;

        $r4 = $r3;

        if $r3 != $r1 goto label11;

        if $r5 != null goto label05;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK>;

        $r4 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket>;

        $r2[$i0] = $r4;

        goto label06;

     label05:
        $r4 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket>;

        $r5.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket> = $r4;

     label06:
        $r4 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder>;

        if $r4 != null goto label07;

        $r4 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder> = $r4;

        goto label08;

     label07:
        $r5 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = $r5;

     label08:
        $r4 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        if $r4 != null goto label09;

        $r1 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder>;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder> = $r1;

        goto label10;

     label09:
        $r1 = $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder>;

        $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = $r1;

     label10:
        $i0 = r0.<com.google.common.collect.HashBiMap: int size>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.HashBiMap: int size> = $i0;

        $i0 = r0.<com.google.common.collect.HashBiMap: int modCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.HashBiMap: int modCount> = $i0;

        return;

     label11:
        $r3 = $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket>;

        goto label04;

     label12:
        $r5 = $r3;

        $r3 = $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket>;

        goto label01;
    }

    private void init(int)
    {
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $i0 := @parameter0: int;

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "expectedSize");

        $i0 = staticinvoke <com.google.common.collect.Hashing: int closedTableSize(int,double)>($i0, 1.0);

        $r1 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] createTable(int)>($i0);

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV> = $r1;

        $r1 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] createTable(int)>($i0);

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK> = $r1;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder> = null;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder> = null;

        r0.<com.google.common.collect.HashBiMap: int size> = 0;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.HashBiMap: int mask> = $i0;

        r0.<com.google.common.collect.HashBiMap: int modCount> = 0;

        return;
    }

    private void insert(com.google.common.collect.HashBiMap$BiEntry, com.google.common.collect.HashBiMap$BiEntry)
    {
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r4;
        int $i0, $i1;
        com.google.common.collect.HashBiMap$BiEntry $r1, $r2, $r3;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r2 := @parameter0: com.google.common.collect.HashBiMap$BiEntry;

        $r3 := @parameter1: com.google.common.collect.HashBiMap$BiEntry;

        $i0 = $r2.<com.google.common.collect.HashBiMap$BiEntry: int keyHash>;

        $i1 = r0.<com.google.common.collect.HashBiMap: int mask>;

        $i0 = $i0 & $i1;

        $r4 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV>;

        $r1 = $r4[$i0];

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket> = $r1;

        $r4[$i0] = $r2;

        $i0 = $r2.<com.google.common.collect.HashBiMap$BiEntry: int valueHash>;

        $i1 = $i0 & $i1;

        $r4 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK>;

        $r1 = $r4[$i1];

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket> = $r1;

        $r4[$i1] = $r2;

        if $r3 != null goto label3;

        $r3 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder>;

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = $r3;

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = null;

        if $r3 != null goto label1;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder> = $r2;

        goto label2;

     label1:
        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = $r2;

     label2:
        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder> = $r2;

        goto label7;

     label3:
        $r1 = $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder>;

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = $r1;

        $r1 = $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder>;

        if $r1 != null goto label4;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder> = $r2;

        goto label5;

     label4:
        $r1.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = $r2;

     label5:
        $r3 = $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = $r3;

        $r3 = $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        if $r3 != null goto label6;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder> = $r2;

        goto label7;

     label6:
        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = $r2;

     label7:
        $i1 = r0.<com.google.common.collect.HashBiMap: int size>;

        $i1 = $i1 + 1;

        r0.<com.google.common.collect.HashBiMap: int size> = $i1;

        $i1 = r0.<com.google.common.collect.HashBiMap: int modCount>;

        $i1 = $i1 + 1;

        r0.<com.google.common.collect.HashBiMap: int modCount> = $i1;

        return;
    }

    private java.lang.Object put(java.lang.Object, java.lang.Object, boolean)
    {
        java.lang.IllegalArgumentException $r6;
        com.google.common.collect.HashBiMap r0;
        int $i0, $i1, $i2;
        com.google.common.collect.HashBiMap$BiEntry $r3, $r5;
        java.lang.Object $r1, $r2, $r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $z0 := @parameter2: boolean;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $i1 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r2);

        $r3 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int)>($r1, $i0);

        if $r3 == null goto label1;

        $i2 = $r3.<com.google.common.collect.HashBiMap$BiEntry: int valueHash>;

        if $i1 != $i2 goto label1;

        $r4 = $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        $z1 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 == 0 goto label1;

        return $r2;

     label1:
        $r5 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int)>($r2, $i1);

        if $r5 == null goto label3;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.google.common.collect.HashBiMap: void delete(com.google.common.collect.HashBiMap$BiEntry)>($r5);

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value already present: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label3:
        $r5 = new com.google.common.collect.HashBiMap$BiEntry;

        specialinvoke $r5.<com.google.common.collect.HashBiMap$BiEntry: void <init>(java.lang.Object,int,java.lang.Object,int)>($r1, $i0, $r2, $i1);

        if $r3 == null goto label4;

        specialinvoke r0.<com.google.common.collect.HashBiMap: void delete(com.google.common.collect.HashBiMap$BiEntry)>($r3);

        specialinvoke r0.<com.google.common.collect.HashBiMap: void insert(com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry)>($r5, $r3);

        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = null;

        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = null;

        specialinvoke r0.<com.google.common.collect.HashBiMap: void rehashIfNecessary()>();

        $r1 = $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        return $r1;

     label4:
        specialinvoke r0.<com.google.common.collect.HashBiMap: void insert(com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry)>($r5, null);

        specialinvoke r0.<com.google.common.collect.HashBiMap: void rehashIfNecessary()>();

        return null;
    }

    private java.lang.Object putInverse(java.lang.Object, java.lang.Object, boolean)
    {
        java.lang.IllegalArgumentException $r6;
        com.google.common.collect.HashBiMap r0;
        int $i0, $i1, $i2;
        com.google.common.collect.HashBiMap$BiEntry $r3, $r4, $r9;
        java.lang.Object $r1, $r2, $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $z0 := @parameter2: boolean;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $i1 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r2);

        $r3 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int)>($r1, $i0);

        $r4 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int)>($r2, $i1);

        if $r3 == null goto label1;

        $i2 = $r3.<com.google.common.collect.HashBiMap$BiEntry: int keyHash>;

        if $i1 != $i2 goto label1;

        $r5 = $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object key>;

        $z1 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r5);

        if $z1 == 0 goto label1;

        return $r2;

     label1:
        if $r4 == null goto label3;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key already present: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label3:
        if $r3 == null goto label4;

        specialinvoke r0.<com.google.common.collect.HashBiMap: void delete(com.google.common.collect.HashBiMap$BiEntry)>($r3);

     label4:
        if $r4 == null goto label5;

        specialinvoke r0.<com.google.common.collect.HashBiMap: void delete(com.google.common.collect.HashBiMap$BiEntry)>($r4);

     label5:
        $r9 = new com.google.common.collect.HashBiMap$BiEntry;

        specialinvoke $r9.<com.google.common.collect.HashBiMap$BiEntry: void <init>(java.lang.Object,int,java.lang.Object,int)>($r2, $i1, $r1, $i0);

        specialinvoke r0.<com.google.common.collect.HashBiMap: void insert(com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry)>($r9, $r4);

        if $r4 == null goto label6;

        $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = null;

        $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = null;

     label6:
        if $r3 == null goto label7;

        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = null;

        $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = null;

     label7:
        specialinvoke r0.<com.google.common.collect.HashBiMap: void rehashIfNecessary()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object keyOrNull(java.util.Map$Entry)>($r3);

        return $r1;
    }

    private void readObject(java.io.ObjectInputStream)
    {
        java.io.ObjectInputStream $r1;
        int $i0;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        specialinvoke r0.<com.google.common.collect.HashBiMap: void init(int)>(16);

        $i0 = staticinvoke <com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>($r1);

        staticinvoke <com.google.common.collect.Serialization: void populateMap(java.util.Map,java.io.ObjectInputStream,int)>(r0, $r1, $i0);

        return;
    }

    private void rehashIfNecessary()
    {
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r1;
        int $i0, $i1;
        com.google.common.collect.HashBiMap$BiEntry $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV>;

        $i1 = r0.<com.google.common.collect.HashBiMap: int size>;

        $i0 = lengthof $r1;

        $z0 = staticinvoke <com.google.common.collect.Hashing: boolean needsResizing(int,int,double)>($i1, $i0, 1.0);

        if $z0 == 0 goto label3;

        $i0 = lengthof $r1;

        $i0 = $i0 * 2;

        $r1 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] createTable(int)>($i0);

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV> = $r1;

        $r1 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] createTable(int)>($i0);

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK> = $r1;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.HashBiMap: int mask> = $i0;

        r0.<com.google.common.collect.HashBiMap: int size> = 0;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder>;

     label1:
        if $r2 == null goto label2;

        specialinvoke r0.<com.google.common.collect.HashBiMap: void insert(com.google.common.collect.HashBiMap$BiEntry,com.google.common.collect.HashBiMap$BiEntry)>($r2, $r2);

        $r2 = $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        goto label1;

     label2:
        $i0 = r0.<com.google.common.collect.HashBiMap: int modCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.HashBiMap: int modCount> = $i0;

     label3:
        return;
    }

    private com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object, int)
    {
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r2;
        int $i0, $i1;
        com.google.common.collect.HashBiMap$BiEntry $r3;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV>;

        $i1 = r0.<com.google.common.collect.HashBiMap: int mask>;

        $i1 = $i1 & $i0;

        $r3 = $r2[$i1];

     label1:
        if $r3 == null goto label3;

        $i1 = $r3.<com.google.common.collect.HashBiMap$BiEntry: int keyHash>;

        if $i0 != $i1 goto label2;

        $r4 = $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object key>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $r3 = $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket>;

        goto label1;

     label3:
        return null;
    }

    private com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object, int)
    {
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r2;
        int $i0, $i1;
        com.google.common.collect.HashBiMap$BiEntry $r3;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK>;

        $i1 = r0.<com.google.common.collect.HashBiMap: int mask>;

        $i1 = $i1 & $i0;

        $r3 = $r2[$i1];

     label1:
        if $r3 == null goto label3;

        $i1 = $r3.<com.google.common.collect.HashBiMap$BiEntry: int valueHash>;

        if $i0 != $i1 goto label2;

        $r4 = $r3.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $r3 = $r3.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket>;

        goto label1;

     label3:
        return null;
    }

    private void writeObject(java.io.ObjectOutputStream)
    {
        com.google.common.collect.HashBiMap r0;
        java.io.ObjectOutputStream $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        staticinvoke <com.google.common.collect.Serialization: void writeMap(java.util.Map,java.io.ObjectOutputStream)>(r0, $r1);

        return;
    }

    public void clear()
    {
        int $i0;
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$BiEntry[] $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        r0.<com.google.common.collect.HashBiMap: int size> = 0;

        $r1 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        $r1 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder> = null;

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry lastInKeyInsertionOrder> = null;

        $i0 = r0.<com.google.common.collect.HashBiMap: int modCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.HashBiMap: int modCount> = $i0;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.HashBiMap r0;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $r2 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int)>($r1, $i0);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.google.common.collect.HashBiMap r0;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $r2 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int)>($r1, $i0);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator entryIterator()
    {
        com.google.common.collect.HashBiMap$1 $r1;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = new com.google.common.collect.HashBiMap$1;

        specialinvoke $r1.<com.google.common.collect.HashBiMap$1: void <init>(com.google.common.collect.HashBiMap)>(r0);

        return $r1;
    }

    public volatile java.util.Set entrySet()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = specialinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: java.util.Set entrySet()>();

        return $r1;
    }

    public void forEach(java.util.function.BiConsumer)
    {
        com.google.common.collect.HashBiMap r0;
        java.util.function.BiConsumer $r1;
        com.google.common.collect.HashBiMap$BiEntry $r4;
        java.lang.Object $r2, $r3;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.util.function.BiConsumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r4 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder>;

     label1:
        if $r4 == null goto label2;

        $r2 = $r4.<com.google.common.collect.ImmutableEntry: java.lang.Object key>;

        $r3 = $r4.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        interfaceinvoke $r1.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        goto label1;

     label2:
        return;
    }

    public java.lang.Object forcePut(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBiMap r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object,boolean)>($r2, $r1, 1);

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.HashBiMap r0;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $r2 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int)>($r1, $i0);

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object valueOrNull(java.util.Map$Entry)>($r2);

        return $r1;
    }

    public com.google.common.collect.BiMap inverse()
    {
        com.google.common.collect.BiMap $r1;
        com.google.common.collect.HashBiMap r0;
        com.google.common.collect.HashBiMap$Inverse $r2;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse>;

        if $r1 != null goto label1;

        $r2 = new com.google.common.collect.HashBiMap$Inverse;

        specialinvoke $r2.<com.google.common.collect.HashBiMap$Inverse: void <init>(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$1)>(r0, null);

        r0.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse> = $r2;

        return $r2;

     label1:
        return $r1;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.HashBiMap$KeySet $r1;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = new com.google.common.collect.HashBiMap$KeySet;

        specialinvoke $r1.<com.google.common.collect.HashBiMap$KeySet: void <init>(com.google.common.collect.HashBiMap)>(r0);

        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBiMap r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object,boolean)>($r2, $r1, 0);

        return $r2;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.HashBiMap r0;
        int $i0;
        com.google.common.collect.HashBiMap$BiEntry $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $r2 = specialinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int)>($r1, $i0);

        if $r2 != null goto label1;

        return null;

     label1:
        specialinvoke r0.<com.google.common.collect.HashBiMap: void delete(com.google.common.collect.HashBiMap$BiEntry)>($r2);

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry prevInKeyInsertionOrder> = null;

        $r2.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder> = null;

        $r1 = $r2.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        return $r1;
    }

    public void replaceAll(java.util.function.BiFunction)
    {
        com.google.common.collect.HashBiMap r0;
        java.util.function.BiFunction $r1;
        com.google.common.collect.HashBiMap$BiEntry $r4;
        java.lang.Object $r2, $r3;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 := @parameter0: java.util.function.BiFunction;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r4 = r0.<com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap$BiEntry firstInKeyInsertionOrder>;

        virtualinvoke r0.<com.google.common.collect.HashBiMap: void clear()>();

     label1:
        if $r4 == null goto label2;

        $r2 = $r4.<com.google.common.collect.ImmutableEntry: java.lang.Object key>;

        $r3 = $r4.<com.google.common.collect.ImmutableEntry: java.lang.Object value>;

        $r3 = interfaceinvoke $r1.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke r0.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = $r4.<com.google.common.collect.HashBiMap$BiEntry: com.google.common.collect.HashBiMap$BiEntry nextInKeyInsertionOrder>;

        goto label1;

     label2:
        return;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        i0 = r0.<com.google.common.collect.HashBiMap: int size>;

        return i0;
    }

    public volatile java.util.Collection values()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap: java.util.Set values()>();

        return $r1;
    }

    public java.util.Set values()
    {
        com.google.common.collect.BiMap $r1;
        java.util.Set $r2;
        com.google.common.collect.HashBiMap r0;

        r0 := @this: com.google.common.collect.HashBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.HashBiMap: double LOAD_FACTOR> = 1.0;

        return;
    }
}
