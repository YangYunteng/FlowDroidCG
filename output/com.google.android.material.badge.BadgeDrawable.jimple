public class com.google.android.material.badge.BadgeDrawable extends android.graphics.drawable.Drawable implements com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate
{
    public static final int BADGE_NUMBER_NONE;
    public static final int BOTTOM_END;
    public static final int BOTTOM_START;
    public static final java.lang.String DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX;
    public static final int DEFAULT_MAX_BADGE_CHARACTER_COUNT;
    public static final int DEFAULT_STYLE;
    public static final int DEFAULT_THEME_ATTR;
    public static final int MAX_CIRCULAR_BADGE_NUMBER_COUNT;
    public static final int TOP_END;
    public static final int TOP_START;
    public java.lang.ref.WeakReference anchorViewRef;
    public final android.graphics.Rect badgeBounds;
    public float badgeCenterX;
    public float badgeCenterY;
    public final float badgeRadius;
    public final float badgeWidePadding;
    public final float badgeWithTextRadius;
    public final java.lang.ref.WeakReference contextRef;
    public float cornerRadius;
    public java.lang.ref.WeakReference customBadgeParentRef;
    public float halfBadgeHeight;
    public float halfBadgeWidth;
    public int maxBadgeNumber;
    public final com.google.android.material.badge.BadgeDrawable$SavedState savedState;
    public final com.google.android.material.shape.MaterialShapeDrawable shapeDrawable;
    public final com.google.android.material.internal.TextDrawableHelper textDrawableHelper;

    static void <clinit>()
    {
        int $i0;

        <com.google.android.material.badge.BadgeDrawable: int TOP_START> = 8388659;

        <com.google.android.material.badge.BadgeDrawable: int TOP_END> = 8388661;

        <com.google.android.material.badge.BadgeDrawable: int MAX_CIRCULAR_BADGE_NUMBER_COUNT> = 9;

        <com.google.android.material.badge.BadgeDrawable: int DEFAULT_MAX_BADGE_CHARACTER_COUNT> = 4;

        <com.google.android.material.badge.BadgeDrawable: java.lang.String DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX> = "+";

        <com.google.android.material.badge.BadgeDrawable: int BOTTOM_START> = 8388691;

        <com.google.android.material.badge.BadgeDrawable: int BOTTOM_END> = 8388693;

        <com.google.android.material.badge.BadgeDrawable: int BADGE_NUMBER_NONE> = -1;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_Badge>;

        <com.google.android.material.badge.BadgeDrawable: int DEFAULT_STYLE> = $i0;

        $i0 = <com.google.android.material.R$attr: int badgeStyle>;

        <com.google.android.material.badge.BadgeDrawable: int DEFAULT_THEME_ATTR> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.graphics.Rect $r4;
        com.google.android.material.internal.TextDrawableHelper $r6;
        com.google.android.material.badge.BadgeDrawable$SavedState $r9;
        android.graphics.Paint$Align $r8;
        com.google.android.material.badge.BadgeDrawable r0;
        com.google.android.material.shape.MaterialShapeDrawable $r5;
        android.text.TextPaint $r7;
        int $i0;
        float $f0;
        java.lang.ref.WeakReference $r2;
        android.content.res.Resources $r3;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference contextRef> = $r2;

        staticinvoke <com.google.android.material.internal.ThemeEnforcement: void checkMaterialTheme(android.content.Context)>($r1);

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds> = $r4;

        $r5 = new com.google.android.material.shape.MaterialShapeDrawable;

        specialinvoke $r5.<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>();

        r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable> = $r5;

        $i0 = <com.google.android.material.R$dimen: int mtrl_badge_radius>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $f0 = (float) $i0;

        r0.<com.google.android.material.badge.BadgeDrawable: float badgeRadius> = $f0;

        $i0 = <com.google.android.material.R$dimen: int mtrl_badge_long_text_horizontal_padding>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $f0 = (float) $i0;

        r0.<com.google.android.material.badge.BadgeDrawable: float badgeWidePadding> = $f0;

        $i0 = <com.google.android.material.R$dimen: int mtrl_badge_with_text_radius>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $f0 = (float) $i0;

        r0.<com.google.android.material.badge.BadgeDrawable: float badgeWithTextRadius> = $f0;

        $r6 = new com.google.android.material.internal.TextDrawableHelper;

        specialinvoke $r6.<com.google.android.material.internal.TextDrawableHelper: void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)>(r0);

        r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper> = $r6;

        $r6 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r7 = virtualinvoke $r6.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        $r8 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r7.<android.text.TextPaint: void setTextAlign(android.graphics.Paint$Align)>($r8);

        $r9 = new com.google.android.material.badge.BadgeDrawable$SavedState;

        specialinvoke $r9.<com.google.android.material.badge.BadgeDrawable$SavedState: void <init>(android.content.Context)>($r1);

        r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState> = $r9;

        $i0 = <com.google.android.material.R$style: int TextAppearance_MaterialComponents_Badge>;

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setTextAppearanceResource(int)>($i0);

        return;
    }

    private void calculateCenterAndBounds(android.content.Context, android.graphics.Rect, android.view.View)
    {
        android.content.Context $r1;
        android.graphics.Rect $r2;
        com.google.android.material.internal.TextDrawableHelper $r6;
        com.google.android.material.badge.BadgeDrawable$SavedState $r4;
        com.google.android.material.badge.BadgeDrawable r0;
        int $i0, $i1;
        android.view.View $r3;
        float $f0, $f1;
        java.lang.String $r5;
        boolean $z0;
        android.content.res.Resources $r7;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.view.View;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$400(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        if $i0 == 8388691 goto label01;

        if $i0 == 8388693 goto label01;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i1 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$600(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterY> = $f0;

        goto label02;

     label01:
        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i1 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$600(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterY> = $f0;

     label02:
        $i0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getNumber()>();

        if $i0 > 9 goto label05;

        $z0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: boolean hasNumber()>();

        if $z0 != 0 goto label03;

        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeRadius>;

        goto label04;

     label03:
        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeWithTextRadius>;

     label04:
        r0.<com.google.android.material.badge.BadgeDrawable: float cornerRadius> = $f0;

        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float cornerRadius>;

        r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeHeight> = $f0;

        r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth> = $f0;

        goto label06;

     label05:
        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeWithTextRadius>;

        r0.<com.google.android.material.badge.BadgeDrawable: float cornerRadius> = $f0;

        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float cornerRadius>;

        r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeHeight> = $f0;

        $r5 = specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: java.lang.String getBadgeText()>();

        $r6 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $f0 = virtualinvoke $r6.<com.google.android.material.internal.TextDrawableHelper: float getTextWidth(java.lang.String)>($r5);

        $f0 = $f0 / 2.0F;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeWidePadding>;

        $f0 = $f0 + $f1;

        r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth> = $f0;

     label06:
        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: boolean hasNumber()>();

        if $z0 == 0 goto label07;

        $i0 = <com.google.android.material.R$dimen: int mtrl_badge_text_horizontal_edge_offset>;

        goto label08;

     label07:
        $i0 = <com.google.android.material.R$dimen: int mtrl_badge_horizontal_edge_offset>;

     label08:
        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i1 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$400(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        if $i1 == 8388659 goto label11;

        if $i1 == 8388691 goto label11;

        $i1 = staticinvoke <b.i.i.y: int p(android.view.View)>($r3);

        if $i1 != 0 goto label09;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $f0 = (float) $i1;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth>;

        $f0 = $f0 + $f1;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        goto label10;

     label09:
        $i1 = $r2.<android.graphics.Rect: int left>;

        $f0 = (float) $i1;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth>;

        $f0 = $f0 - $f1;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

     label10:
        r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterX> = $f0;

        return;

     label11:
        $i1 = staticinvoke <b.i.i.y: int p(android.view.View)>($r3);

        if $i1 != 0 goto label12;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $f0 = (float) $i1;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth>;

        $f0 = $f0 - $f1;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        goto label13;

     label12:
        $i1 = $r2.<android.graphics.Rect: int right>;

        $f0 = (float) $i1;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth>;

        $f0 = $f0 + $f1;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>($r4);

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

     label13:
        r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterX> = $f0;

        return;
    }

    public static com.google.android.material.badge.BadgeDrawable create(android.content.Context)
    {
        android.content.Context $r1;
        int $i0, $i1;
        com.google.android.material.badge.BadgeDrawable $r0;

        $r1 := @parameter0: android.content.Context;

        $i0 = <com.google.android.material.badge.BadgeDrawable: int DEFAULT_THEME_ATTR>;

        $i1 = <com.google.android.material.badge.BadgeDrawable: int DEFAULT_STYLE>;

        $r0 = staticinvoke <com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>($r1, null, $i0, $i1);

        return $r0;
    }

    public static com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context $r0;
        android.util.AttributeSet $r1;
        int $i0, $i1;
        com.google.android.material.badge.BadgeDrawable $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = new com.google.android.material.badge.BadgeDrawable;

        specialinvoke $r2.<com.google.android.material.badge.BadgeDrawable: void <init>(android.content.Context)>($r0);

        specialinvoke $r2.<com.google.android.material.badge.BadgeDrawable: void loadDefaultStateFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>($r0, $r1, $i0, $i1);

        return $r2;
    }

    public static com.google.android.material.badge.BadgeDrawable createFromResource(android.content.Context, int)
    {
        android.content.Context $r0;
        android.util.AttributeSet $r1;
        int $i0, $i1;
        com.google.android.material.badge.BadgeDrawable $r2;

        $r0 := @parameter0: android.content.Context;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <com.google.android.material.drawable.DrawableUtils: android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence)>($r0, $i1, "badge");

        $i0 = interfaceinvoke $r1.<android.util.AttributeSet: int getStyleAttribute()>();

        $i1 = $i0;

        if $i0 != 0 goto label1;

        $i1 = <com.google.android.material.badge.BadgeDrawable: int DEFAULT_STYLE>;

     label1:
        $i0 = <com.google.android.material.badge.BadgeDrawable: int DEFAULT_THEME_ATTR>;

        $r2 = staticinvoke <com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>($r0, $r1, $i0, $i1);

        return $r2;
    }

    public static com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context, com.google.android.material.badge.BadgeDrawable$SavedState)
    {
        android.content.Context $r0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.google.android.material.badge.BadgeDrawable$SavedState;

        $r2 = new com.google.android.material.badge.BadgeDrawable;

        specialinvoke $r2.<com.google.android.material.badge.BadgeDrawable: void <init>(android.content.Context)>($r0);

        specialinvoke $r2.<com.google.android.material.badge.BadgeDrawable: void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $r2;
    }

    private void drawText(android.graphics.Canvas)
    {
        android.graphics.Rect $r2;
        com.google.android.material.internal.TextDrawableHelper $r4;
        com.google.android.material.badge.BadgeDrawable r0;
        android.text.TextPaint $r5;
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        java.lang.String $r3;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r3 = specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: java.lang.String getBadgeText()>();

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r5 = virtualinvoke $r4.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        virtualinvoke $r5.<android.text.TextPaint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r3, 0, $i0, $r2);

        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterX>;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterY>;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i0 = $i0 / 2;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r5 = virtualinvoke $r4.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r3, $f0, $f1, $r5);

        return;
    }

    private java.lang.String getBadgeText()
    {
        android.content.Context $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        com.google.android.material.badge.BadgeDrawable r0;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getNumber()>();

        $i1 = r0.<com.google.android.material.badge.BadgeDrawable: int maxBadgeNumber>;

        if $i0 > $i1 goto label1;

        $i0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getNumber()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r1;

     label1:
        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference contextRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.content.Context) $r3;

        if $r4 != null goto label2;

        return "";

     label2:
        $i0 = <com.google.android.material.R$string: int mtrl_exceed_max_badge_number_suffix>;

        $r5 = newarray (java.lang.Object)[2];

        $i1 = r0.<com.google.android.material.badge.BadgeDrawable: int maxBadgeNumber>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r6;

        $r5[1] = "+";

        $r1 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i0, $r5);

        return $r1;
    }

    private void loadDefaultStateFromAttributes(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context $r3;
        com.google.android.material.badge.BadgeDrawable r0;
        android.content.res.TypedArray $r5;
        android.util.AttributeSet $r4;
        int[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 = <com.google.android.material.R$styleable: int[] Badge>;

        $r2 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r3, $r4, $r1, $i0, $i1, $r2);

        $i0 = <com.google.android.material.R$styleable: int Badge_maxCharacterCount>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i0, 4);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setMaxCharacterCount(int)>($i0);

        $i0 = <com.google.android.material.R$styleable: int Badge_number>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $i0 = <com.google.android.material.R$styleable: int Badge_number>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setNumber(int)>($i0);

     label1:
        $i0 = <com.google.android.material.R$styleable: int Badge_backgroundColor>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable: int readColorFromAttributes(android.content.Context,android.content.res.TypedArray,int)>($r3, $r5, $i0);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setBackgroundColor(int)>($i0);

        $i0 = <com.google.android.material.R$styleable: int Badge_badgeTextColor>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label2;

        $i0 = <com.google.android.material.R$styleable: int Badge_badgeTextColor>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable: int readColorFromAttributes(android.content.Context,android.content.res.TypedArray,int)>($r3, $r5, $i0);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setBadgeTextColor(int)>($i0);

     label2:
        $i0 = <com.google.android.material.R$styleable: int Badge_badgeGravity>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i0, 8388661);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setBadgeGravity(int)>($i0);

        $i0 = <com.google.android.material.R$styleable: int Badge_horizontalOffset>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setHorizontalOffset(int)>($i0);

        $i0 = <com.google.android.material.R$styleable: int Badge_verticalOffset>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setVerticalOffset(int)>($i0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public static int readColorFromAttributes(android.content.Context, android.content.res.TypedArray, int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        int $i0;
        android.content.res.TypedArray $r0;

        $r1 := @parameter0: android.content.Context;

        $r0 := @parameter1: android.content.res.TypedArray;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r1, $r0, $i0);

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i0;
    }

    private void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState)
    {
        int $i0, $i1;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: com.google.android.material.badge.BadgeDrawable$SavedState;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$000(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setMaxCharacterCount(int)>($i0);

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$100(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$100(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setNumber(int)>($i0);

     label1:
        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$200(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setBackgroundColor(int)>($i0);

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$300(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setBadgeTextColor(int)>($i0);

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$400(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setBadgeGravity(int)>($i0);

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setHorizontalOffset(int)>($i0);

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$600(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setVerticalOffset(int)>($i0);

        return;
    }

    private void setTextAppearance(com.google.android.material.resources.TextAppearance)
    {
        android.content.Context $r6;
        com.google.android.material.internal.TextDrawableHelper $r2;
        com.google.android.material.resources.TextAppearance $r1, $r3;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r4;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: com.google.android.material.resources.TextAppearance;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r3 = virtualinvoke $r2.<com.google.android.material.internal.TextDrawableHelper: com.google.android.material.resources.TextAppearance getTextAppearance()>();

        if $r3 != $r1 goto label1;

        return;

     label1:
        $r4 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference contextRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (android.content.Context) $r5;

        if $r6 != null goto label2;

        return;

     label2:
        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        virtualinvoke $r2.<com.google.android.material.internal.TextDrawableHelper: void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context)>($r1, $r6);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>();

        return;
    }

    private void setTextAppearanceResource(int)
    {
        android.content.Context $r4;
        int $i0;
        com.google.android.material.resources.TextAppearance $r1;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r3;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r3 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference contextRef>;

        $r2 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.content.Context) $r2;

        if $r4 != null goto label1;

        return;

     label1:
        $r1 = new com.google.android.material.resources.TextAppearance;

        specialinvoke $r1.<com.google.android.material.resources.TextAppearance: void <init>(android.content.Context,int)>($r4, $i0);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void setTextAppearance(com.google.android.material.resources.TextAppearance)>($r1);

        return;
    }

    private void updateCenterAndBounds()
    {
        android.graphics.Rect $r1, $r7;
        android.content.Context $r4;
        android.view.ViewParent $r8;
        android.view.ViewGroup $r5;
        com.google.android.material.badge.BadgeDrawable r0;
        com.google.android.material.shape.MaterialShapeDrawable $r9;
        android.view.View $r6;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference contextRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.content.Context) $r3;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference anchorViewRef>;

        $r5 = null;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (android.view.View) $r3;

        goto label2;

     label1:
        $r6 = null;

     label2:
        if $r4 == null goto label8;

        if $r6 != null goto label3;

        return;

     label3:
        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        $r7 = r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r7);

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        virtualinvoke $r6.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r7);

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference customBadgeParentRef>;

        if $r2 == null goto label4;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (android.view.ViewGroup) $r3;

     label4:
        if $r5 != null goto label5;

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label7;

     label5:
        if $r5 != null goto label6;

        $r8 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        $r5 = (android.view.ViewGroup) $r8;

     label6:
        virtualinvoke $r5.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r6, $r7);

     label7:
        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View)>($r4, $r7, $r6);

        $r7 = r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds>;

        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterX>;

        $f1 = r0.<com.google.android.material.badge.BadgeDrawable: float badgeCenterY>;

        $f2 = r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeWidth>;

        $f3 = r0.<com.google.android.material.badge.BadgeDrawable: float halfBadgeHeight>;

        staticinvoke <com.google.android.material.badge.BadgeUtils: void updateBadgeBounds(android.graphics.Rect,float,float,float,float)>($r7, $f0, $f1, $f2, $f3);

        $r9 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        $f0 = r0.<com.google.android.material.badge.BadgeDrawable: float cornerRadius>;

        virtualinvoke $r9.<com.google.android.material.shape.MaterialShapeDrawable: void setCornerSize(float)>($f0);

        $r7 = r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds>;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label8;

        $r9 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

     label8:
        return;
    }

    private void updateMaxBadgeNumber()
    {
        int $i0, $i1;
        com.google.android.material.badge.BadgeDrawable r0;
        double $d0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getMaxCharacterCount()>();

        $d0 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 - 1.0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);

        $i0 = (int) $d0;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.android.material.badge.BadgeDrawable: int maxBadgeNumber> = $i0;

        return;
    }

    public void clearNumber()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = -1;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.Rect $r2;
        int $i0;
        android.graphics.Canvas $r1;
        com.google.android.material.badge.BadgeDrawable r0;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getAlpha()>();

        if $i0 == 0 goto label2;

        $z0 = virtualinvoke r0.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>($r1);

        $z0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: boolean hasNumber()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void drawText(android.graphics.Canvas)>($r1);

     label2:
        return;
    }

    public int getAlpha()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$700(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $i0;
    }

    public int getBackgroundColor()
    {
        android.content.res.ColorStateList $r2;
        int $i0;
        com.google.android.material.badge.BadgeDrawable r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getFillColor()>();

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i0;
    }

    public int getBadgeGravity()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$400(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $i0;
    }

    public int getBadgeTextColor()
    {
        android.text.TextPaint $r2;
        com.google.android.material.internal.TextDrawableHelper $r1;
        int $i0;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r2 = virtualinvoke $r1.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        $i0 = virtualinvoke $r2.<android.text.TextPaint: int getColor()>();

        return $i0;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.content.Context $r4;
        java.lang.Object[] $r6;
        java.lang.CharSequence $r9;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        java.lang.Integer $r7;
        com.google.android.material.badge.BadgeDrawable r0;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        java.lang.String $r8;
        java.lang.ref.WeakReference $r2;
        boolean $z0;
        android.content.res.Resources $r5;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $z0 = virtualinvoke r0.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: boolean hasNumber()>();

        if $z0 == 0 goto label5;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$900(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        if $i0 <= 0 goto label4;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference contextRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.content.Context) $r3;

        if $r4 != null goto label2;

        return null;

     label2:
        $i0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getNumber()>();

        $i1 = r0.<com.google.android.material.badge.BadgeDrawable: int maxBadgeNumber>;

        if $i0 > $i1 goto label3;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$900(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        $i1 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getNumber()>();

        $r6 = newarray (java.lang.Object)[1];

        $i2 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: int getNumber()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r8 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>($i0, $i1, $r6);

        return $r8;

     label3:
        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$1000(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        $r6 = newarray (java.lang.Object)[1];

        $i1 = r0.<com.google.android.material.badge.BadgeDrawable: int maxBadgeNumber>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r7;

        $r8 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i0, $r6);

        return $r8;

     label4:
        return null;

     label5:
        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $r9 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: java.lang.CharSequence access$800(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $r9;
    }

    public int getHorizontalOffset()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        int $i0;
        android.graphics.Rect $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        int $i0;
        android.graphics.Rect $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: android.graphics.Rect badgeBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        return $i0;
    }

    public int getMaxCharacterCount()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$000(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $i0;
    }

    public int getNumber()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $z0 = virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: boolean hasNumber()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$100(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $i0;
    }

    public int getOpacity()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 = -3;

        return $i0;
    }

    public com.google.android.material.badge.BadgeDrawable$SavedState getSavedState()
    {
        com.google.android.material.badge.BadgeDrawable$SavedState r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        return r1;
    }

    public int getVerticalOffset()
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$600(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        return $i0;
    }

    public boolean hasNumber()
    {
        int $i0, $i1;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$100(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isStateful()
    {
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        return 0;
    }

    public boolean onStateChange(int[])
    {
        int[] $r1;
        com.google.android.material.badge.BadgeDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: int[];

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean onStateChange(int[])>($r1);

        return $z0;
    }

    public void onTextSizeChange()
    {
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void setAlpha(int)
    {
        android.text.TextPaint $r1;
        int $i0;
        com.google.android.material.internal.TextDrawableHelper $r3;
        com.google.android.material.badge.BadgeDrawable$SavedState $r2;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$702(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r2, $i0);

        $r3 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r1 = virtualinvoke $r3.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        virtualinvoke $r1.<android.text.TextPaint: void setAlpha(int)>($i0);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void setBackgroundColor(int)
    {
        android.content.res.ColorStateList $r2, $r4;
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$202(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        $r3 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        $r4 = virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getFillColor()>();

        if $r4 == $r2 goto label1;

        $r3 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        virtualinvoke $r3.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r2);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setBadgeGravity(int)
    {
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        android.view.ViewGroup $r5;
        com.google.android.material.badge.BadgeDrawable r0;
        int $i0, $i1;
        android.view.View $r4;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r2;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i1 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$400(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        if $i1 == $i0 goto label3;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$402(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference anchorViewRef>;

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 == null goto label3;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference anchorViewRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.view.View) $r3;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference customBadgeParentRef>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (android.view.ViewGroup) $r3;

        goto label2;

     label1:
        $r5 = null;

     label2:
        virtualinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateBadgeCoordinates(android.view.View,android.view.ViewGroup)>($r4, $r5);

     label3:
        return;
    }

    public void setBadgeTextColor(int)
    {
        android.text.TextPaint $r3;
        int $i0, $i1;
        com.google.android.material.internal.TextDrawableHelper $r2;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$302(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r3 = virtualinvoke $r2.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        $i1 = virtualinvoke $r3.<android.text.TextPaint: int getColor()>();

        if $i1 == $i0 goto label1;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        $r3 = virtualinvoke $r2.<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>();

        virtualinvoke $r3.<android.text.TextPaint: void setColor(int)>($i0);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        return;
    }

    public void setContentDescriptionExceedsMaxBadgeNumberStringResource(int)
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$1002(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        return;
    }

    public void setContentDescriptionNumberless(java.lang.CharSequence)
    {
        com.google.android.material.badge.BadgeDrawable$SavedState $r2;
        java.lang.CharSequence $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: java.lang.CharSequence access$802(com.google.android.material.badge.BadgeDrawable$SavedState,java.lang.CharSequence)>($r2, $r1);

        return;
    }

    public void setContentDescriptionQuantityStringsResource(int)
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$902(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        return;
    }

    public void setHorizontalOffset(int)
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$502(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>();

        return;
    }

    public void setMaxCharacterCount(int)
    {
        int $i0, $i1;
        com.google.android.material.internal.TextDrawableHelper $r2;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i1 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i0 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$000(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        if $i0 == $i1 goto label1;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$002(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i1);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateMaxBadgeNumber()>();

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        virtualinvoke $r2.<com.google.android.material.internal.TextDrawableHelper: void setTextWidthDirty(boolean)>(1);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>();

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setNumber(int)
    {
        int $i0, $i1;
        com.google.android.material.internal.TextDrawableHelper $r2;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        $i1 = staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$100(com.google.android.material.badge.BadgeDrawable$SavedState)>($r1);

        if $i1 == $i0 goto label1;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        $r2 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.internal.TextDrawableHelper textDrawableHelper>;

        virtualinvoke $r2.<com.google.android.material.internal.TextDrawableHelper: void setTextWidthDirty(boolean)>(1);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>();

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setVerticalOffset(int)
    {
        int $i0;
        com.google.android.material.badge.BadgeDrawable$SavedState $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState savedState>;

        staticinvoke <com.google.android.material.badge.BadgeDrawable$SavedState: int access$602(com.google.android.material.badge.BadgeDrawable$SavedState,int)>($r1, $i0);

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>();

        return;
    }

    public void setVisible(boolean)
    {
        com.google.android.material.badge.BadgeDrawable r0;
        boolean $z0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 0);

        return;
    }

    public void updateBadgeCoordinates(android.view.View, android.view.ViewGroup)
    {
        android.view.View $r3;
        java.lang.ref.WeakReference $r2;
        android.view.ViewGroup $r1;
        com.google.android.material.badge.BadgeDrawable r0;

        r0 := @this: com.google.android.material.badge.BadgeDrawable;

        $r3 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.ViewGroup;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r3);

        r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference anchorViewRef> = $r2;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.google.android.material.badge.BadgeDrawable: java.lang.ref.WeakReference customBadgeParentRef> = $r2;

        specialinvoke r0.<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>();

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }
}
