public class com.caremark.caremark.util.ApiUtils extends java.lang.Object
{
    public static final java.lang.String XML_TAG_HEADER;
    public static final java.lang.String XML_TAG_STATUS_CODE;
    public static final java.lang.String XML_TAG_STATUS_DESC;

    public void <init>()
    {
        com.caremark.caremark.util.ApiUtils r0;

        r0 := @this: com.caremark.caremark.util.ApiUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.caremark.caremark.util.ApiUtils$CustomError getCustomError(java.lang.String)
    {
        java.lang.String[] $r2;
        java.lang.Integer $r4;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r3;
        com.caremark.caremark.util.ApiUtils$CustomError $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label5;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(":::");

        if $z0 == 0 goto label5;

        $r1 = new com.caremark.caremark.util.ApiUtils$CustomError;

        specialinvoke $r1.<com.caremark.caremark.util.ApiUtils$CustomError: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":::");

        $i0 = lengthof $r2;

        $r0 = $r2[1];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r0 = $r2[$i1];

        $r3 = "STATUS_CODE";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        $i2 = $i1 + 1;

        if $i2 >= $i0 goto label4;

        $r0 = $r2[$i2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<com.caremark.caremark.util.ApiUtils$CustomError: void setStatusCode(int)>($i2);

        goto label4;

     label2:
        $r0 = $r2[$i1];

        $r3 = "STATUS_DESC";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        $i2 = $i1 + 1;

        if $i2 >= $i0 goto label4;

        $r0 = $r2[$i2];

        virtualinvoke $r1.<com.caremark.caremark.util.ApiUtils$CustomError: void setStatusDesc(java.lang.String)>($r0);

        goto label4;

     label3:
        $r0 = $r2[$i1];

        $r3 = "TOKEN_TYPE";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        $i2 = $i1 + 1;

        if $i2 >= $i0 goto label4;

        $r0 = $r2[$i2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<com.caremark.caremark.util.ApiUtils$CustomError: void setTokenType(int)>($i2);

     label4:
        $i1 = $i1 + 2;

        goto label1;

     label5:
        return null;

     label6:
        return $r1;
    }

    public static com.caremark.caremark.util.ApiUtils$CustomError getCustomNetworkError(java.lang.String)
    {
        java.io.IOException $r6;
        java.lang.Integer $r5;
        org.xmlpull.v1.XmlPullParserException $r7;
        java.io.StringReader $r3;
        int $i0;
        com.caremark.caremark.util.ApiUtils$CustomError $r0;
        java.lang.String $r1, $r4;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0, $z1;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label26;

        $r0 = new com.caremark.caremark.util.ApiUtils$CustomError;

        specialinvoke $r0.<com.caremark.caremark.util.ApiUtils$CustomError: void <init>()>();

     label01:
        $r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label02:
        $z0 = 0;

     label03:
        interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 0);

     label04:
        $r3 = new java.io.StringReader;

     label05:
        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r3);

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        $r1 = null;

     label07:
        if $i0 == 1 goto label23;

        if $z0 != 0 goto label23;

     label08:
        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label09:
        if $i0 == 2 goto label21;

        if $i0 == 3 goto label12;

        if $i0 == 4 goto label10;

        goto label21;

     label10:
        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label11:
        goto label21;

     label12:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("header");

     label13:
        if $z1 == 0 goto label14;

        $z0 = 1;

        goto label07;

     label14:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("statusCode");

     label15:
        if $z1 == 0 goto label18;

     label16:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        virtualinvoke $r0.<com.caremark.caremark.util.ApiUtils$CustomError: void setStatusCode(int)>($i0);

     label17:
        goto label21;

     label18:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("statusDesc");

     label19:
        if $z1 == 0 goto label21;

     label20:
        virtualinvoke $r0.<com.caremark.caremark.util.ApiUtils$CustomError: void setStatusDesc(java.lang.String)>($r1);

     label21:
        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label22:
        goto label07;

     label23:
        return $r0;

     label24:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        return null;

     label25:
        $r7 := @caughtexception;

        virtualinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

     label26:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label22 with label25;
        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label12 to label13 with label24;
        catch java.io.IOException from label14 to label15 with label24;
        catch java.io.IOException from label16 to label17 with label24;
        catch java.io.IOException from label18 to label19 with label24;
        catch java.io.IOException from label20 to label22 with label24;
    }

    public static void <clinit>()
    {
        <com.caremark.caremark.util.ApiUtils: java.lang.String XML_TAG_STATUS_DESC> = "statusDesc";

        <com.caremark.caremark.util.ApiUtils: java.lang.String XML_TAG_STATUS_CODE> = "statusCode";

        <com.caremark.caremark.util.ApiUtils: java.lang.String XML_TAG_HEADER> = "header";

        return;
    }
}
