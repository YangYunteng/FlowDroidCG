public class project.android.imageprocessing.filter.effect.VignetteFilter extends project.android.imageprocessing.filter.BasicFilter
{
    public static final java.lang.String UNIFORM_CENTER;
    public static final java.lang.String UNIFORM_COLOUR;
    public static final java.lang.String UNIFORM_END;
    public static final java.lang.String UNIFORM_START;
    public android.graphics.PointF center;
    public int centerHandle;
    public float[] colour;
    public int colourHandle;
    public float end;
    public int endHandle;
    public float start;
    public int startHandle;

    public void <init>(android.graphics.PointF, float[], float, float)
    {
        project.android.imageprocessing.filter.effect.VignetteFilter r0;
        android.graphics.PointF $r1;
        float $f0, $f1;
        float[] $r2;

        r0 := @this: project.android.imageprocessing.filter.effect.VignetteFilter;

        $r1 := @parameter0: android.graphics.PointF;

        $r2 := @parameter1: float[];

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        specialinvoke r0.<project.android.imageprocessing.filter.BasicFilter: void <init>()>();

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: android.graphics.PointF center> = $r1;

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: float[] colour> = $r2;

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: float start> = $f0;

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: float end> = $f1;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.effect.VignetteFilter r0;

        r0 := @this: project.android.imageprocessing.filter.effect.VignetteFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nvarying vec2 v_TexCoord;\nuniform vec2 u_Center;\nuniform vec3 u_Colour;\nuniform float u_Start;\nuniform float u_End;\nvoid main(){\n\tlowp vec4 color = texture2D(u_Texture0, v_TexCoord);\n \tmediump float d = distance(v_TexCoord, u_Center);\n \tlowp float percent = smoothstep(u_Start, u_End, d);\n \tgl_FragColor = vec4(mix(color.rgb, u_Colour, percent), color.a);\n}\n";
    }

    public void initShaderHandles()
    {
        project.android.imageprocessing.filter.effect.VignetteFilter r0;
        int $i0;

        r0 := @this: project.android.imageprocessing.filter.effect.VignetteFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void initShaderHandles()>();

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Center");

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int centerHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Colour");

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int colourHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_Start");

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int startHandle> = $i0;

        $i0 = r0.<project.android.imageprocessing.GLRenderer: int programHandle>;

        $i0 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i0, "u_End");

        r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int endHandle> = $i0;

        return;
    }

    public void passShaderValues()
    {
        project.android.imageprocessing.filter.effect.VignetteFilter r0;
        android.graphics.PointF $r1;
        int $i0;
        float $f0, $f1, $f2;
        float[] $r2;

        r0 := @this: project.android.imageprocessing.filter.effect.VignetteFilter;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void passShaderValues()>();

        $i0 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int centerHandle>;

        $r1 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: android.graphics.PointF center>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f1 = $r1.<android.graphics.PointF: float y>;

        staticinvoke <android.opengl.GLES20: void glUniform2f(int,float,float)>($i0, $f0, $f1);

        $i0 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int colourHandle>;

        $r2 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: float[] colour>;

        $f0 = $r2[0];

        $f1 = $r2[1];

        $f2 = $r2[2];

        staticinvoke <android.opengl.GLES20: void glUniform3f(int,float,float,float)>($i0, $f0, $f1, $f2);

        $i0 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int startHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: float start>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        $i0 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: int endHandle>;

        $f0 = r0.<project.android.imageprocessing.filter.effect.VignetteFilter: float end>;

        staticinvoke <android.opengl.GLES20: void glUniform1f(int,float)>($i0, $f0);

        return;
    }

    public static void <clinit>()
    {
        <project.android.imageprocessing.filter.effect.VignetteFilter: java.lang.String UNIFORM_START> = "u_Start";

        <project.android.imageprocessing.filter.effect.VignetteFilter: java.lang.String UNIFORM_END> = "u_End";

        <project.android.imageprocessing.filter.effect.VignetteFilter: java.lang.String UNIFORM_COLOUR> = "u_Colour";

        <project.android.imageprocessing.filter.effect.VignetteFilter: java.lang.String UNIFORM_CENTER> = "u_Center";

        return;
    }
}
