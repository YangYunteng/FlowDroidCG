public class com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 extends com.google.common.collect.UnmodifiableIterator
{
    public final com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets this$1;
    public final java.util.Iterator val$backingIterator;

    public void <init>(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets, java.util.Iterator)
    {
        com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 r0;
        com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets $r1;
        java.util.Iterator $r2;

        r0 := @this: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1;

        $r1 := @parameter0: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets;

        $r2 := @parameter1: java.util.Iterator;

        r0.<com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets this$1> = $r1;

        r0.<com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1: java.util.Iterator val$backingIterator> = $r2;

        specialinvoke r0.<com.google.common.collect.UnmodifiableIterator: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1;

        $r1 = r0.<com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1: java.util.Iterator val$backingIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public volatile java.lang.Object next()
    {
        com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        java.util.Map$Entry $r4;
        java.util.Iterator $r3;
        com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1 $r1;
        com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1;

        $r3 = r0.<com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1: java.util.Iterator val$backingIterator>;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r2;

        $r1 = new com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1;

        specialinvoke $r1.<com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1: void <init>(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1,java.util.Map$Entry)>(r0, $r4);

        return $r1;
    }
}
