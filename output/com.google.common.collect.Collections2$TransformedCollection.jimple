public class com.google.common.collect.Collections2$TransformedCollection extends java.util.AbstractCollection
{
    public final java.util.Collection fromCollection;
    public final com.google.common.base.Function function;

    public void <init>(java.util.Collection, com.google.common.base.Function)
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        com.google.common.base.Function $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r1 := @parameter0: java.util.Collection;

        $r2 := @parameter1: com.google.common.base.Function;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection> = $r1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r0.<com.google.common.collect.Collections2$TransformedCollection: com.google.common.base.Function function> = $r2;

        return;
    }

    public void a(java.util.function.Consumer, java.lang.Object)
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        java.util.function.Consumer $r1;
        com.google.common.base.Function $r2;
        java.lang.Object $r3;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r1 := @parameter0: java.util.function.Consumer;

        $r3 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Collections2$TransformedCollection: com.google.common.base.Function function>;

        $r3 = interfaceinvoke $r2.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

        return;
    }

    public boolean a(java.util.function.Predicate, java.lang.Object)
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        com.google.common.base.Function $r1;
        java.util.function.Predicate $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r2 := @parameter0: java.util.function.Predicate;

        $r3 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: com.google.common.base.Function function>;

        $r3 = interfaceinvoke $r1.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r3);

        $z0 = interfaceinvoke $r2.<java.util.function.Predicate: boolean test(java.lang.Object)>($r3);

        return $z0;
    }

    public void clear()
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        interfaceinvoke $r1.<java.util.Collection: void clear()>();

        return;
    }

    public void forEach(java.util.function.Consumer)
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        java.util.function.Consumer $r1;
        c.i.b.c.N $r3;
        java.util.Collection $r2;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r1 := @parameter0: java.util.function.Consumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        $r3 = new c.i.b.c.N;

        specialinvoke $r3.<c.i.b.c.N: void <init>(com.google.common.collect.Collections2$TransformedCollection,java.util.function.Consumer)>(r0, $r1);

        interfaceinvoke $r2.<java.util.Collection: void forEach(java.util.function.Consumer)>($r3);

        return;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        com.google.common.base.Function $r1;
        java.util.Iterator $r3;
        java.util.Collection $r2;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r2 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: com.google.common.base.Function function>;

        $r3 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>($r3, $r1);

        return $r3;
    }

    public boolean removeIf(java.util.function.Predicate)
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        java.util.function.Predicate $r3;
        java.util.Collection $r1;
        c.i.b.c.O $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r3 := @parameter0: java.util.function.Predicate;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        $r2 = new c.i.b.c.O;

        specialinvoke $r2.<c.i.b.c.O: void <init>(com.google.common.collect.Collections2$TransformedCollection,java.util.function.Predicate)>(r0, $r3);

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean removeIf(java.util.function.Predicate)>($r2);

        return $z0;
    }

    public int size()
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        int $i0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public java.util.Spliterator spliterator()
    {
        com.google.common.collect.Collections2$TransformedCollection r0;
        com.google.common.base.Function $r1;
        java.util.Collection $r2;
        java.util.Spliterator $r3;

        r0 := @this: com.google.common.collect.Collections2$TransformedCollection;

        $r2 = r0.<com.google.common.collect.Collections2$TransformedCollection: java.util.Collection fromCollection>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Spliterator spliterator()>();

        $r1 = r0.<com.google.common.collect.Collections2$TransformedCollection: com.google.common.base.Function function>;

        $r3 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r3, $r1);

        return $r3;
    }
}
