public class com.caremark.caremark.util.HTML_LinkMovementMethod$1 extends java.lang.Object implements com.caremark.caremark.util.HTML_LinkMovementMethod$LongPressTimer$OnTimerReachedListener
{
    public final com.caremark.caremark.util.HTML_LinkMovementMethod this$0;
    public final android.text.style.ClickableSpan val$clickableSpanUnderTouch;
    public final android.widget.TextView val$textView;

    public void <init>(com.caremark.caremark.util.HTML_LinkMovementMethod, android.widget.TextView, android.text.style.ClickableSpan)
    {
        com.caremark.caremark.util.HTML_LinkMovementMethod$1 r0;
        android.widget.TextView $r2;
        android.text.style.ClickableSpan $r3;
        com.caremark.caremark.util.HTML_LinkMovementMethod $r1;

        r0 := @this: com.caremark.caremark.util.HTML_LinkMovementMethod$1;

        $r1 := @parameter0: com.caremark.caremark.util.HTML_LinkMovementMethod;

        $r2 := @parameter1: android.widget.TextView;

        $r3 := @parameter2: android.text.style.ClickableSpan;

        r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: com.caremark.caremark.util.HTML_LinkMovementMethod this$0> = $r1;

        r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: android.widget.TextView val$textView> = $r2;

        r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: android.text.style.ClickableSpan val$clickableSpanUnderTouch> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onTimerReached()
    {
        com.caremark.caremark.util.HTML_LinkMovementMethod$1 r0;
        android.widget.TextView $r3;
        int $i0;
        android.text.style.ClickableSpan $r1;
        com.caremark.caremark.util.HTML_LinkMovementMethod $r2;

        r0 := @this: com.caremark.caremark.util.HTML_LinkMovementMethod$1;

        $r2 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: com.caremark.caremark.util.HTML_LinkMovementMethod this$0>;

        staticinvoke <com.caremark.caremark.util.HTML_LinkMovementMethod: boolean access$002(com.caremark.caremark.util.HTML_LinkMovementMethod,boolean)>($r2, 1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 3 goto label1;

        $r3 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: android.widget.TextView val$textView>;

        virtualinvoke $r3.<android.widget.TextView: boolean performHapticFeedback(int)>(0);

     label1:
        $r2 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: com.caremark.caremark.util.HTML_LinkMovementMethod this$0>;

        $r3 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: android.widget.TextView val$textView>;

        virtualinvoke $r2.<com.caremark.caremark.util.HTML_LinkMovementMethod: void removeUrlHighlightColor(android.widget.TextView)>($r3);

        $r2 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: com.caremark.caremark.util.HTML_LinkMovementMethod this$0>;

        $r3 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: android.widget.TextView val$textView>;

        $r1 = r0.<com.caremark.caremark.util.HTML_LinkMovementMethod$1: android.text.style.ClickableSpan val$clickableSpanUnderTouch>;

        virtualinvoke $r2.<com.caremark.caremark.util.HTML_LinkMovementMethod: void dispatchUrlLongClick(android.widget.TextView,android.text.style.ClickableSpan)>($r3, $r1);

        return;
    }
}
