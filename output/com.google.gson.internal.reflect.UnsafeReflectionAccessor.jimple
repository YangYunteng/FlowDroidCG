public final class com.google.gson.internal.reflect.UnsafeReflectionAccessor extends com.google.gson.internal.reflect.ReflectionAccessor
{
    public static java.lang.Class unsafeClass;
    public final java.lang.reflect.Field overrideField;
    public final java.lang.Object theUnsafe;

    public void <init>()
    {
        java.lang.Object $r1;
        java.lang.reflect.Field $r2;
        com.google.gson.internal.reflect.UnsafeReflectionAccessor r0;

        r0 := @this: com.google.gson.internal.reflect.UnsafeReflectionAccessor;

        specialinvoke r0.<com.google.gson.internal.reflect.ReflectionAccessor: void <init>()>();

        $r1 = staticinvoke <com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object getUnsafeInstance()>();

        r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object theUnsafe> = $r1;

        $r2 = staticinvoke <com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field getOverrideField()>();

        r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field overrideField> = $r2;

        return;
    }

    public static java.lang.reflect.Field getOverrideField()
    {
        java.lang.Class $r2;
        java.lang.reflect.Field $r0;
        java.lang.NoSuchFieldException $r1;

        $r2 = class "Ljava/lang/reflect/AccessibleObject;";

     label1:
        $r0 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("override");

     label2:
        return $r0;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
    }

    public static java.lang.Object getUnsafeInstance()
    {
        java.lang.Class $r1;
        java.lang.Object $r3;
        java.lang.reflect.Field $r2;
        java.lang.Exception $r0;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.misc.Unsafe");

     label2:
        <com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Class unsafeClass> = $r1;

        $r1 = <com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Class unsafeClass>;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("theUnsafe");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label4:
        return $r3;

     label5:
        $r0 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void makeAccessible(java.lang.reflect.AccessibleObject)
    {
        java.lang.reflect.AccessibleObject $r3;
        com.google.gson.internal.reflect.UnsafeReflectionAccessor r0;
        com.google.gson.JsonIOException $r1;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.google.gson.internal.reflect.UnsafeReflectionAccessor;

        $r3 := @parameter0: java.lang.reflect.AccessibleObject;

        $z0 = virtualinvoke r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject)>($r3);

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke $r3.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r1 = new com.google.gson.JsonIOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Gson couldn\'t modify fields for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nand sun.misc.Unsafe not found.\nEither write a custom type adapter, or make fields accessible, or include sun.misc.Unsafe.");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.google.gson.JsonIOException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r4);

        throw $r1;

     label4:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject)
    {
        java.lang.reflect.AccessibleObject $r3;
        java.lang.Object[] $r8;
        java.lang.Class[] $r1;
        long $l0;
        java.lang.reflect.Field $r5;
        java.lang.Exception $r2;
        com.google.gson.internal.reflect.UnsafeReflectionAccessor r0;
        java.lang.Long $r9;
        java.lang.Boolean $r11;
        java.lang.Object $r4;
        java.lang.Class $r6, $r10;
        java.lang.reflect.Method $r7;

        r0 := @this: com.google.gson.internal.reflect.UnsafeReflectionAccessor;

        $r3 := @parameter0: java.lang.reflect.AccessibleObject;

        $r4 = r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object theUnsafe>;

        if $r4 == null goto label13;

        $r5 = r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field overrideField>;

        if $r5 == null goto label15;

        $r6 = <com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Class unsafeClass>;

        $r1 = newarray (java.lang.Class)[1];

     label01:
        $r1[0] = class "Ljava/lang/reflect/Field;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("objectFieldOffset", $r1);

        $r4 = r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object theUnsafe>;

     label02:
        $r8 = newarray (java.lang.Object)[1];

     label03:
        $r5 = r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field overrideField>;

        $r8[0] = $r5;

        $r4 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r8);

        $r9 = (java.lang.Long) $r4;

        $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

     label04:
        $r6 = <com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Class unsafeClass>;

        $r1 = newarray (java.lang.Class)[3];

     label05:
        $r1[0] = class "Ljava/lang/Object;";

     label06:
        $r10 = <java.lang.Long: java.lang.Class TYPE>;

     label07:
        $r1[1] = $r10;

     label08:
        $r10 = <java.lang.Boolean: java.lang.Class TYPE>;

     label09:
        $r1[2] = $r10;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putBoolean", $r1);

        $r4 = r0.<com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object theUnsafe>;

     label10:
        $r8 = newarray (java.lang.Object)[3];

     label11:
        $r8[0] = $r3;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8[1] = $r9;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r8[2] = $r11;

        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r8);

     label12:
        return 1;

     label13:
        return 0;

     label14:
        $r2 := @caughtexception;

     label15:
        return 0;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label14;
    }
}
