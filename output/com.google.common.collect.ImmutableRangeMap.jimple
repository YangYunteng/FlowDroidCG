public class com.google.common.collect.ImmutableRangeMap extends java.lang.Object implements com.google.common.collect.RangeMap, java.io.Serializable
{
    public static final com.google.common.collect.ImmutableRangeMap EMPTY;
    public static final long serialVersionUID;
    public final transient com.google.common.collect.ImmutableList ranges;
    public final transient com.google.common.collect.ImmutableList values;

    static void <clinit>()
    {
        com.google.common.collect.ImmutableRangeMap $r0;
        com.google.common.collect.ImmutableList $r1, $r2;

        $r0 = new com.google.common.collect.ImmutableRangeMap;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeMap: void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)>($r1, $r2);

        <com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableRangeMap EMPTY> = $r0;

        return;
    }

    public void <init>(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableList)
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableList $r1, $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 := @parameter0: com.google.common.collect.ImmutableList;

        $r2 := @parameter1: com.google.common.collect.ImmutableList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges> = $r1;

        r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList values> = $r2;

        return;
    }

    public static com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeMap)
    {
        com.google.common.collect.ImmutableRangeMap $r0;
        com.google.common.collect.ImmutableList r1;

        $r0 := @parameter0: com.google.common.collect.ImmutableRangeMap;

        r1 = $r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        return r1;
    }

    public static com.google.common.collect.ImmutableRangeMap$Builder builder()
    {
        com.google.common.collect.ImmutableRangeMap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableRangeMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeMap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableRangeMap copyOf(com.google.common.collect.RangeMap)
    {
        java.util.Map$Entry $r8;
        java.util.Iterator $r6;
        java.util.Set $r5;
        com.google.common.collect.ImmutableRangeMap $r1;
        com.google.common.collect.ImmutableList $r9, $r10;
        java.util.Map $r2;
        int $i0;
        com.google.common.collect.RangeMap $r0;
        java.lang.Object $r7;
        boolean $z0;
        com.google.common.collect.ImmutableList$Builder $r3, $r4;

        $r0 := @parameter0: com.google.common.collect.RangeMap;

        $z0 = $r0 instanceof com.google.common.collect.ImmutableRangeMap;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.collect.ImmutableRangeMap) $r0;

        return $r1;

     label1:
        $r2 = interfaceinvoke $r0.<com.google.common.collect.RangeMap: java.util.Map asMapOfRanges()>();

        $r3 = new com.google.common.collect.ImmutableList$Builder;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r3.<com.google.common.collect.ImmutableList$Builder: void <init>(int)>($i0);

        $r4 = new com.google.common.collect.ImmutableList$Builder;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r4.<com.google.common.collect.ImmutableList$Builder: void <init>(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r1 = new com.google.common.collect.ImmutableRangeMap;

        $r9 = virtualinvoke $r3.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        $r10 = virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeMap: void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)>($r9, $r10);

        return $r1;
    }

    public static com.google.common.collect.ImmutableRangeMap of()
    {
        com.google.common.collect.ImmutableRangeMap r0;

        r0 = <com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableRangeMap EMPTY>;

        return r0;
    }

    public static com.google.common.collect.ImmutableRangeMap of(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.ImmutableRangeMap $r0;
        com.google.common.collect.ImmutableList $r3, $r4;
        com.google.common.collect.Range $r1;
        java.lang.Object $r2;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 := @parameter1: java.lang.Object;

        $r0 = new com.google.common.collect.ImmutableRangeMap;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r1);

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r2);

        specialinvoke $r0.<com.google.common.collect.ImmutableRangeMap: void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)>($r3, $r4);

        return $r0;
    }

    public static java.util.stream.Collector toImmutableRangeMap(java.util.function.Function, java.util.function.Function)
    {
        java.util.stream.Collector $r1;
        java.util.function.Function $r0, $r2;

        $r2 := @parameter0: java.util.function.Function;

        $r0 := @parameter1: java.util.function.Function;

        $r1 = staticinvoke <com.google.common.collect.CollectCollectors: java.util.stream.Collector toImmutableRangeMap(java.util.function.Function,java.util.function.Function)>($r2, $r0);

        return $r1;
    }

    public com.google.common.collect.ImmutableMap asDescendingMapOfRanges()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.Ordering $r4;
        com.google.common.collect.ImmutableMap $r2;
        com.google.common.collect.RegularImmutableSortedSet $r3;
        com.google.common.collect.ImmutableSortedMap $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r2;

     label1:
        $r3 = new com.google.common.collect.RegularImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList reverse()>();

        $r4 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Ordering rangeLexOrdering()>();

        $r4 = virtualinvoke $r4.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        specialinvoke $r3.<com.google.common.collect.RegularImmutableSortedSet: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r1, $r4);

        $r5 = new com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList values>;

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList reverse()>();

        specialinvoke $r5.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList)>($r3, $r1);

        return $r5;
    }

    public volatile java.util.Map asDescendingMapOfRanges()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableMap asDescendingMapOfRanges()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMap asMapOfRanges()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.Ordering $r4;
        com.google.common.collect.ImmutableMap $r2;
        com.google.common.collect.RegularImmutableSortedSet $r3;
        com.google.common.collect.ImmutableSortedMap $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r2;

     label1:
        $r3 = new com.google.common.collect.RegularImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r4 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Ordering rangeLexOrdering()>();

        specialinvoke $r3.<com.google.common.collect.RegularImmutableSortedSet: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r1, $r4);

        $r5 = new com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList values>;

        specialinvoke $r5.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList)>($r3, $r1);

        return $r5;
    }

    public volatile java.util.Map asMapOfRanges()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableMap asMapOfRanges()>();

        return $r1;
    }

    public void clear()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableMap $r3;
        java.util.Map $r4;
        com.google.common.collect.RangeMap $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.RangeMap;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.collect.RangeMap) $r1;

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableMap asMapOfRanges()>();

        $r4 = interfaceinvoke $r2.<com.google.common.collect.RangeMap: java.util.Map asMapOfRanges()>();

        $z0 = virtualinvoke $r3.<com.google.common.collect.ImmutableMap: boolean equals(java.lang.Object)>($r4);

        return $z0;

     label1:
        return 0;
    }

    public java.lang.Object get(java.lang.Comparable)
    {
        com.google.common.collect.Cut $r6;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r1;
        com.google.common.base.Function $r5;
        com.google.common.collect.Range $r8;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r2;
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableList $r4;
        int $i0, $i1;
        java.lang.Comparable $r3;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r3 := @parameter0: java.lang.Comparable;

        $r4 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r6 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowValue(java.lang.Comparable)>($r3);

        $r1 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT>;

        $r2 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r4, $r5, $r6, $r1, $r2);

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return null;

     label1:
        $r4 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r8 = (com.google.common.collect.Range) $r7;

        $z0 = virtualinvoke $r8.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList values>;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        return $r7;

     label2:
        return null;
    }

    public java.util.Map$Entry getEntry(java.lang.Comparable)
    {
        com.google.common.collect.Cut $r6;
        java.util.Map$Entry $r9;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r1;
        com.google.common.base.Function $r5;
        com.google.common.collect.Range $r8;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r2;
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableList $r4;
        int $i0, $i1;
        java.lang.Comparable $r3;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r3 := @parameter0: java.lang.Comparable;

        $r4 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r6 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowValue(java.lang.Comparable)>($r3);

        $r1 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT>;

        $r2 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r4, $r5, $r6, $r1, $r2);

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return null;

     label1:
        $r4 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r8 = (com.google.common.collect.Range) $r7;

        $z0 = virtualinvoke $r8.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList values>;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r8, $r7);

        return $r9;

     label2:
        return null;
    }

    public int hashCode()
    {
        int $i0;
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableMap asMapOfRanges()>();

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: int hashCode()>();

        return $i0;
    }

    public void put(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.ImmutableRangeMap r0;
        java.lang.UnsupportedOperationException $r3;
        com.google.common.collect.Range $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void putAll(com.google.common.collect.RangeMap)
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.RangeMap $r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 := @parameter0: com.google.common.collect.RangeMap;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void putCoalescing(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.ImmutableRangeMap r0;
        java.lang.UnsupportedOperationException $r3;
        com.google.common.collect.Range $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r1 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void remove(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.ImmutableRangeMap r0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.google.common.collect.Range span()
    {
        com.google.common.collect.Cut $r5, $r6;
        com.google.common.collect.Range $r3, $r4;
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r7;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.google.common.collect.Range) $r2;

        $r1 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $i0 = virtualinvoke $r1.<java.util.AbstractCollection: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.google.common.collect.Range) $r2;

        $r5 = $r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r6 = $r4.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut)>($r5, $r6);

        return $r3;

     label1:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;
    }

    public com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range)
    {
        com.google.common.collect.Cut $r5;
        com.google.common.base.Function $r4;
        com.google.common.collect.SortedLists$KeyPresentBehavior $r6;
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.SortedLists$KeyAbsentBehavior $r7;
        com.google.common.collect.ImmutableRangeMap$2 $r9;
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableRangeMap$1 $r8;
        com.google.common.collect.ImmutableList $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 := @parameter0: com.google.common.collect.Range;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = $r1;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r0 = staticinvoke <com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableRangeMap of()>();

        return r0;

     label1:
        $r3 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $z0 = virtualinvoke $r3.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.Range span()>();

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean encloses(com.google.common.collect.Range)>($r2);

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r3 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r4 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function upperBoundFn()>();

        $r5 = $r1.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r6 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER>;

        $r7 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r3, $r4, $r5, $r6, $r7);

        $r3 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList ranges>;

        $r4 = staticinvoke <com.google.common.collect.Range: com.google.common.base.Function lowerBoundFn()>();

        $r5 = $r1.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r6 = <com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT>;

        $r7 = <com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER>;

        $i1 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior)>($r3, $r4, $r5, $r6, $r7);

        if $i0 < $i1 goto label3;

        r0 = staticinvoke <com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableRangeMap of()>();

        return r0;

     label3:
        $i2 = $i1 - $i0;

        $r8 = new com.google.common.collect.ImmutableRangeMap$1;

        specialinvoke $r8.<com.google.common.collect.ImmutableRangeMap$1: void <init>(com.google.common.collect.ImmutableRangeMap,int,int,com.google.common.collect.Range)>(r0, $i2, $i0, $r1);

        $r9 = new com.google.common.collect.ImmutableRangeMap$2;

        $r3 = r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableList values>;

        $r3 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>($i0, $i1);

        specialinvoke $r9.<com.google.common.collect.ImmutableRangeMap$2: void <init>(com.google.common.collect.ImmutableRangeMap,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.Range,com.google.common.collect.ImmutableRangeMap)>(r0, $r8, $r3, $r1, r0);

        return $r9;

     label4:
        return r0;
    }

    public volatile com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.ImmutableRangeMap r0;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 := @parameter0: com.google.common.collect.Range;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range)>($r1);

        return r0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        java.lang.String $r2;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableMap asMapOfRanges()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableRangeMap r0;
        com.google.common.collect.ImmutableMap $r2;
        com.google.common.collect.ImmutableRangeMap$SerializedForm $r1;

        r0 := @this: com.google.common.collect.ImmutableRangeMap;

        $r1 = new com.google.common.collect.ImmutableRangeMap$SerializedForm;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableRangeMap: com.google.common.collect.ImmutableMap asMapOfRanges()>();

        specialinvoke $r1.<com.google.common.collect.ImmutableRangeMap$SerializedForm: void <init>(com.google.common.collect.ImmutableMap)>($r2);

        return $r1;
    }
}
