public final class com.google.common.collect.ImmutableEnumMap extends com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap
{
    public final transient java.util.EnumMap delegate;

    public void <init>(java.util.EnumMap)
    {
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.EnumMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 := @parameter0: java.util.EnumMap;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap: void <init>()>();

        r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate> = $r1;

        $z0 = virtualinvoke $r1.<java.util.EnumMap: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        return;
    }

    public void <init>(java.util.EnumMap, com.google.common.collect.ImmutableEnumMap$1)
    {
        com.google.common.collect.ImmutableEnumMap r0;
        com.google.common.collect.ImmutableEnumMap$1 $r2;
        java.util.EnumMap $r1;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 := @parameter0: java.util.EnumMap;

        $r2 := @parameter1: com.google.common.collect.ImmutableEnumMap$1;

        specialinvoke r0.<com.google.common.collect.ImmutableEnumMap: void <init>(java.util.EnumMap)>($r1);

        return;
    }

    public static com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap)
    {
        java.util.Map$Entry $r4;
        java.util.EnumMap $r0;
        com.google.common.collect.ImmutableMap $r6;
        com.google.common.collect.ImmutableEnumMap $r1;
        java.util.Set $r2;
        int $i0;
        java.lang.Object $r3, $r5;

        $r0 := @parameter0: java.util.EnumMap;

        $i0 = virtualinvoke $r0.<java.util.EnumMap: int size()>();

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        $r1 = new com.google.common.collect.ImmutableEnumMap;

        specialinvoke $r1.<com.google.common.collect.ImmutableEnumMap: void <init>(java.util.EnumMap)>($r0);

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<java.util.EnumMap: java.util.Set entrySet()>();

        $r3 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>($r2);

        $r4 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r3, $r5);

        return $r6;

     label2:
        $r6 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r6;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.EnumMap $r1;
        com.google.common.collect.ImmutableEnumMap r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $z0 = virtualinvoke $r1.<java.util.EnumMap: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public com.google.common.collect.UnmodifiableIterator entryIterator()
    {
        java.util.Iterator $r3;
        java.util.EnumMap $r1;
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.Set $r2;
        com.google.common.collect.UnmodifiableIterator $r4;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.UnmodifiableIterator unmodifiableEntryIterator(java.util.Iterator)>($r3);

        return $r4;
    }

    public java.util.Spliterator entrySpliterator()
    {
        c.i.b.c.mc $r1;
        java.util.EnumMap $r2;
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.Set $r3;
        java.util.Spliterator $r4;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r2 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $r3 = virtualinvoke $r2.<java.util.EnumMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Spliterator spliterator()>();

        $r1 = <c.i.b.c.mc: c.i.b.c.mc a>;

        $r4 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r4, $r1);

        return $r4;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.EnumMap $r3;
        com.google.common.collect.ImmutableEnumMap r0, $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.common.collect.ImmutableEnumMap;

        if $z0 == 0 goto label2;

        $r2 = (com.google.common.collect.ImmutableEnumMap) $r1;

        $r1 = $r2.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

     label2:
        $r3 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $z0 = virtualinvoke $r3.<java.util.EnumMap: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public void forEach(java.util.function.BiConsumer)
    {
        java.util.function.BiConsumer $r1;
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.EnumMap $r2;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 := @parameter0: java.util.function.BiConsumer;

        $r2 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        virtualinvoke $r2.<java.util.EnumMap: void forEach(java.util.function.BiConsumer)>($r1);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.ImmutableEnumMap r0;
        java.lang.Object $r2;
        java.util.EnumMap $r1;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumMap: java.lang.Object get(java.lang.Object)>($r2);

        return $r2;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.ImmutableEnumMap r0;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        return 0;
    }

    public com.google.common.collect.UnmodifiableIterator keyIterator()
    {
        java.util.Iterator $r3;
        java.util.EnumMap $r1;
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.Set $r2;
        com.google.common.collect.UnmodifiableIterator $r4;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator)>($r3);

        return $r4;
    }

    public java.util.Spliterator keySpliterator()
    {
        java.util.EnumMap $r1;
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.Set $r2;
        java.util.Spliterator $r3;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Spliterator spliterator()>();

        return $r3;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.ImmutableEnumMap r0;
        java.util.EnumMap $r1;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        $i0 = virtualinvoke $r1.<java.util.EnumMap: int size()>();

        return $i0;
    }

    public java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableEnumMap r0;
        com.google.common.collect.ImmutableEnumMap$EnumSerializedForm $r1;
        java.util.EnumMap $r2;

        r0 := @this: com.google.common.collect.ImmutableEnumMap;

        $r1 = new com.google.common.collect.ImmutableEnumMap$EnumSerializedForm;

        $r2 = r0.<com.google.common.collect.ImmutableEnumMap: java.util.EnumMap delegate>;

        specialinvoke $r1.<com.google.common.collect.ImmutableEnumMap$EnumSerializedForm: void <init>(java.util.EnumMap)>($r2);

        return $r1;
    }
}
