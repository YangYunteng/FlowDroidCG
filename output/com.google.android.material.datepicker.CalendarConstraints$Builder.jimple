public final class com.google.android.material.datepicker.CalendarConstraints$Builder extends java.lang.Object
{
    public static final java.lang.String DEEP_COPY_VALIDATOR_KEY;
    public static final long DEFAULT_END;
    public static final long DEFAULT_START;
    public long end;
    public java.lang.Long openAt;
    public long start;
    public com.google.android.material.datepicker.CalendarConstraints$DateValidator validator;

    static void <clinit>()
    {
        long $l0;
        com.google.android.material.datepicker.Month $r0;

        <com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.String DEEP_COPY_VALIDATOR_KEY> = "DEEP_COPY_VALIDATOR_KEY";

        $r0 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(int,int)>(1900, 0);

        $l0 = $r0.<com.google.android.material.datepicker.Month: long timeInMillis>;

        $l0 = staticinvoke <com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)>($l0);

        <com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_START> = $l0;

        $r0 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(int,int)>(2100, 11);

        $l0 = $r0.<com.google.android.material.datepicker.Month: long timeInMillis>;

        $l0 = staticinvoke <com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)>($l0);

        <com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_END> = $l0;

        return;
    }

    public void <init>()
    {
        long $l0;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;
        com.google.android.material.datepicker.DateValidatorPointForward $r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = <com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_START>;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start> = $l0;

        $l0 = <com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_END>;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long end> = $l0;

        $r1 = staticinvoke <com.google.android.material.datepicker.DateValidatorPointForward: com.google.android.material.datepicker.DateValidatorPointForward 'from'(long)>(-9223372036854775808L);

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator> = $r1;

        return;
    }

    public void <init>(com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r5;
        java.lang.Long $r4;
        com.google.android.material.datepicker.Month $r3;
        com.google.android.material.datepicker.DateValidatorPointForward $r2;
        com.google.android.material.datepicker.CalendarConstraints $r1;
        long $l0;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        $r1 := @parameter0: com.google.android.material.datepicker.CalendarConstraints;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = <com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_START>;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start> = $l0;

        $l0 = <com.google.android.material.datepicker.CalendarConstraints$Builder: long DEFAULT_END>;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long end> = $l0;

        $r2 = staticinvoke <com.google.android.material.datepicker.DateValidatorPointForward: com.google.android.material.datepicker.DateValidatorPointForward 'from'(long)>(-9223372036854775808L);

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator> = $r2;

        $r3 = staticinvoke <com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)>($r1);

        $l0 = $r3.<com.google.android.material.datepicker.Month: long timeInMillis>;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start> = $l0;

        $r3 = staticinvoke <com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)>($r1);

        $l0 = $r3.<com.google.android.material.datepicker.Month: long timeInMillis>;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long end> = $l0;

        $r3 = staticinvoke <com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)>($r1);

        $l0 = $r3.<com.google.android.material.datepicker.Month: long timeInMillis>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.Long openAt> = $r4;

        $r5 = staticinvoke <com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)>($r1);

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator> = $r5;

        return;
    }

    public com.google.android.material.datepicker.CalendarConstraints build()
    {
        android.os.Bundle $r2, $r8;
        android.os.Parcelable $r7;
        com.google.android.material.datepicker.Month $r4, $r5, $r6;
        com.google.android.material.datepicker.CalendarConstraints $r9;
        long $l0, $l1, $l2;
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r3;
        byte $b3;
        java.lang.Long $r1;
        int $i4;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        $r1 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.Long openAt>;

        if $r1 != null goto label3;

        $l0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: long thisMonthInUtcMilliseconds()>();

        $l1 = $l0;

        $l2 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start>;

        $b3 = $l2 cmp $l0;

        $i4 = (int) $b3;

        if $i4 > 0 goto label1;

        $l2 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long end>;

        $b3 = $l0 cmp $l2;

        $i4 = (int) $b3;

        if $i4 > 0 goto label1;

        goto label2;

     label1:
        $l1 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start>;

     label2:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.Long openAt> = $r1;

     label3:
        $r8 = new android.os.Bundle;

        $r2 = $r8;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        $r3 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator>;

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("DEEP_COPY_VALIDATOR_KEY", $r3);

        $r9 = new com.google.android.material.datepicker.CalendarConstraints;

        $l0 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start>;

        $r4 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(long)>($l0);

        $l0 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long end>;

        $r5 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(long)>($l0);

        $r1 = r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.Long openAt>;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r6 = staticinvoke <com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(long)>($l0);

        $r7 = virtualinvoke $r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("DEEP_COPY_VALIDATOR_KEY");

        $r3 = (com.google.android.material.datepicker.CalendarConstraints$DateValidator) $r7;

        specialinvoke $r9.<com.google.android.material.datepicker.CalendarConstraints: void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.CalendarConstraints$1)>($r4, $r5, $r6, $r3, null);

        return $r9;
    }

    public com.google.android.material.datepicker.CalendarConstraints$Builder setEnd(long)
    {
        long $l0;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        $l0 := @parameter0: long;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long end> = $l0;

        return r0;
    }

    public com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long)
    {
        long $l0;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: java.lang.Long openAt> = $r1;

        return r0;
    }

    public com.google.android.material.datepicker.CalendarConstraints$Builder setStart(long)
    {
        long $l0;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        $l0 := @parameter0: long;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: long start> = $l0;

        return r0;
    }

    public com.google.android.material.datepicker.CalendarConstraints$Builder setValidator(com.google.android.material.datepicker.CalendarConstraints$DateValidator)
    {
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r1;
        com.google.android.material.datepicker.CalendarConstraints$Builder r0;

        r0 := @this: com.google.android.material.datepicker.CalendarConstraints$Builder;

        $r1 := @parameter0: com.google.android.material.datepicker.CalendarConstraints$DateValidator;

        r0.<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$DateValidator validator> = $r1;

        return r0;
    }
}
