public final class com.google.android.gms.common.internal.Asserts extends java.lang.Object
{

    public void <init>()
    {
        com.google.android.gms.common.internal.Asserts r0;
        java.lang.AssertionError $r1;

        r0 := @this: com.google.android.gms.common.internal.Asserts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("Uninstantiable");

        throw $r1;
    }

    public static void checkMainThread(java.lang.String)
    {
        java.lang.IllegalStateException $r8;
        android.os.Looper $r1;
        java.lang.Thread $r2, $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r7;
        java.lang.String $r0, $r4, $r5, $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: java.lang.Thread getThread()>();

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r2 != $r3 goto label1;

        return;

     label1:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: java.lang.Thread getThread()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + 57;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkMainThread: current thread ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IS NOT the main thread ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Asserts", $r4);

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r8;
    }

    public static void checkNotMainThread(java.lang.String)
    {
        java.lang.IllegalStateException $r8;
        android.os.Looper $r1;
        java.lang.Thread $r2, $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r7;
        java.lang.String $r0, $r4, $r5, $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: java.lang.Thread getThread()>();

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r2 == $r3 goto label1;

        return;

     label1:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: java.lang.Thread getThread()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + 56;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkNotMainThread: current thread ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IS the main thread ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Asserts", $r4);

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r8;
    }

    public static void checkNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null reference");

        throw $r1;
    }

    public static void checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }

    public static void checkNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("non-null reference");

        throw $r1;
    }

    public static void checkState(boolean)
    {
        java.lang.IllegalStateException $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;
    }

    public static void checkState(boolean, java.lang.Object)
    {
        java.lang.IllegalStateException $r2;
        java.lang.Object $r1;
        java.lang.String $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
}
