public final class com.google.gson.internal.bind.TimeTypeAdapter extends com.google.gson.TypeAdapter
{
    public static final com.google.gson.TypeAdapterFactory FACTORY;
    public final java.text.DateFormat format;

    static void <clinit>()
    {
        com.google.gson.internal.bind.TimeTypeAdapter$1 $r0;

        $r0 = new com.google.gson.internal.bind.TimeTypeAdapter$1;

        specialinvoke $r0.<com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()>();

        <com.google.gson.internal.bind.TimeTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY> = $r0;

        return;
    }

    public void <init>()
    {
        java.text.SimpleDateFormat $r1;
        com.google.gson.internal.bind.TimeTypeAdapter r0;

        r0 := @this: com.google.gson.internal.bind.TimeTypeAdapter;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("hh:mm:ss a");

        r0.<com.google.gson.internal.bind.TimeTypeAdapter: java.text.DateFormat format> = $r1;

        return;
    }

    public volatile java.lang.Object read(com.google.gson.stream.JsonReader)
    {
        com.google.gson.internal.bind.TimeTypeAdapter r0;
        java.sql.Time $r1;
        com.google.gson.stream.JsonReader $r2;

        r0 := @this: com.google.gson.internal.bind.TimeTypeAdapter;

        $r2 := @parameter0: com.google.gson.stream.JsonReader;

        $r1 = virtualinvoke r0.<com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)>($r2);

        return $r1;
    }

    public java.sql.Time read(com.google.gson.stream.JsonReader)
    {
        java.lang.Throwable $r10;
        java.sql.Time $r7;
        com.google.gson.JsonSyntaxException $r9;
        java.util.Date $r6;
        long $l0;
        com.google.gson.stream.JsonReader $r1;
        com.google.gson.stream.JsonToken $r2, $r3;
        java.lang.String $r5;
        com.google.gson.internal.bind.TimeTypeAdapter r0;
        java.text.ParseException $r8;
        java.text.DateFormat $r4;

        r0 := @this: com.google.gson.internal.bind.TimeTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonReader;

        entermonitor r0;

     label01:
        $r2 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>;

        if $r2 != $r3 goto label03;

        virtualinvoke $r1.<com.google.gson.stream.JsonReader: void nextNull()>();

     label02:
        exitmonitor r0;

        return null;

     label03:
        $r4 = r0.<com.google.gson.internal.bind.TimeTypeAdapter: java.text.DateFormat format>;

     label04:
        $r5 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();

        $r6 = virtualinvoke $r4.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r5);

     label05:
        $r7 = new java.sql.Time;

     label06:
        $l0 = virtualinvoke $r6.<java.util.Date: long getTime()>();

        specialinvoke $r7.<java.sql.Time: void <init>(long)>($l0);

     label07:
        exitmonitor r0;

        return $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        $r9 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r9.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label10:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.text.ParseException from label04 to label05 with label08;
        catch java.text.ParseException from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public volatile void write(com.google.gson.stream.JsonWriter, java.lang.Object)
    {
        java.sql.Time $r3;
        java.lang.Object $r2;
        com.google.gson.internal.bind.TimeTypeAdapter r0;
        com.google.gson.stream.JsonWriter $r1;

        r0 := @this: com.google.gson.internal.bind.TimeTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.sql.Time) $r2;

        virtualinvoke r0.<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)>($r1, $r3);

        return;
    }

    public void write(com.google.gson.stream.JsonWriter, java.sql.Time)
    {
        java.lang.Throwable $r5;
        java.sql.Time $r4;
        java.lang.String $r2;
        com.google.gson.internal.bind.TimeTypeAdapter r0;
        com.google.gson.stream.JsonWriter $r3;
        java.text.DateFormat $r1;

        r0 := @this: com.google.gson.internal.bind.TimeTypeAdapter;

        $r3 := @parameter0: com.google.gson.stream.JsonWriter;

        $r4 := @parameter1: java.sql.Time;

        entermonitor r0;

        if $r4 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<com.google.gson.internal.bind.TimeTypeAdapter: java.text.DateFormat format>;

        $r2 = virtualinvoke $r1.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

     label2:
        virtualinvoke $r3.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r2);

     label3:
        exitmonitor r0;

        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
}
