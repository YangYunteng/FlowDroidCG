public abstract class com.google.common.util.concurrent.ForwardingCondition extends java.lang.Object implements java.util.concurrent.locks.Condition
{

    public void <init>()
    {
        com.google.common.util.concurrent.ForwardingCondition r0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void await()
    {
        java.util.concurrent.locks.Condition $r1;
        com.google.common.util.concurrent.ForwardingCondition r0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>();

        return;
    }

    public boolean await(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.locks.Condition $r2;
        long $l0;
        com.google.common.util.concurrent.ForwardingCondition r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.concurrent.locks.Condition: boolean await(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $z0;
    }

    public long awaitNanos(long)
    {
        long $l0;
        java.util.concurrent.locks.Condition $r1;
        com.google.common.util.concurrent.ForwardingCondition r0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        $l0 = interfaceinvoke $r1.<java.util.concurrent.locks.Condition: long awaitNanos(long)>($l0);

        return $l0;
    }

    public void awaitUninterruptibly()
    {
        java.util.concurrent.locks.Condition $r1;
        com.google.common.util.concurrent.ForwardingCondition r0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void awaitUninterruptibly()>();

        return;
    }

    public boolean awaitUntil(java.util.Date)
    {
        java.util.concurrent.locks.Condition $r2;
        java.util.Date $r1;
        com.google.common.util.concurrent.ForwardingCondition r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $r1 := @parameter0: java.util.Date;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.concurrent.locks.Condition: boolean awaitUntil(java.util.Date)>($r1);

        return $z0;
    }

    public abstract java.util.concurrent.locks.Condition delegate();

    public void signal()
    {
        java.util.concurrent.locks.Condition $r1;
        com.google.common.util.concurrent.ForwardingCondition r0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void signal()>();

        return;
    }

    public void signalAll()
    {
        java.util.concurrent.locks.Condition $r1;
        com.google.common.util.concurrent.ForwardingCondition r0;

        r0 := @this: com.google.common.util.concurrent.ForwardingCondition;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCondition: java.util.concurrent.locks.Condition delegate()>();

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void signalAll()>();

        return;
    }
}
