public abstract class com.google.common.util.concurrent.FluentFuture extends com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization
{

    public void <init>()
    {
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        specialinvoke r0.<com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization: void <init>()>();

        return;
    }

    public static com.google.common.util.concurrent.FluentFuture 'from'(com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.ForwardingFluentFuture $r2;
        com.google.common.util.concurrent.ListenableFuture $r0;
        boolean $z0;
        com.google.common.util.concurrent.FluentFuture $r1;

        $r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $z0 = $r0 instanceof com.google.common.util.concurrent.FluentFuture;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.util.concurrent.FluentFuture) $r0;

        return $r1;

     label1:
        $r2 = new com.google.common.util.concurrent.ForwardingFluentFuture;

        specialinvoke $r2.<com.google.common.util.concurrent.ForwardingFluentFuture: void <init>(com.google.common.util.concurrent.ListenableFuture)>($r0);

        return $r2;
    }

    public final void addCallback(com.google.common.util.concurrent.FutureCallback, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.FutureCallback $r1;
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        $r1 := @parameter0: com.google.common.util.concurrent.FutureCallback;

        $r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r0, $r1, $r2);

        return;
    }

    public final com.google.common.util.concurrent.FluentFuture catching(java.lang.Class, com.google.common.base.Function, java.util.concurrent.Executor)
    {
        com.google.common.base.Function $r1;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.util.concurrent.Executor $r2;
        java.lang.Class $r4;
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        $r4 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.google.common.base.Function;

        $r2 := @parameter2: java.util.concurrent.Executor;

        $r3 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture catching(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor)>(r0, $r4, $r1, $r2);

        r0 = (com.google.common.util.concurrent.FluentFuture) $r3;

        return r0;
    }

    public final com.google.common.util.concurrent.FluentFuture catchingAsync(java.lang.Class, com.google.common.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AsyncFunction $r1;
        java.lang.Class $r4;
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        $r4 := @parameter0: java.lang.Class;

        $r1 := @parameter1: com.google.common.util.concurrent.AsyncFunction;

        $r2 := @parameter2: java.util.concurrent.Executor;

        $r3 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture catchingAsync(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>(r0, $r4, $r1, $r2);

        r0 = (com.google.common.util.concurrent.FluentFuture) $r3;

        return r0;
    }

    public final com.google.common.util.concurrent.FluentFuture transform(com.google.common.base.Function, java.util.concurrent.Executor)
    {
        com.google.common.base.Function $r3;
        com.google.common.util.concurrent.ListenableFuture $r2;
        java.util.concurrent.Executor $r1;
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        $r3 := @parameter0: com.google.common.base.Function;

        $r1 := @parameter1: java.util.concurrent.Executor;

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)>(r0, $r3, $r1);

        r0 = (com.google.common.util.concurrent.FluentFuture) $r2;

        return r0;
    }

    public final com.google.common.util.concurrent.FluentFuture transformAsync(com.google.common.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFuture $r2;
        java.util.concurrent.Executor $r1;
        com.google.common.util.concurrent.AsyncFunction $r3;
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        $r3 := @parameter0: com.google.common.util.concurrent.AsyncFunction;

        $r1 := @parameter1: java.util.concurrent.Executor;

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>(r0, $r3, $r1);

        r0 = (com.google.common.util.concurrent.FluentFuture) $r2;

        return r0;
    }

    public final com.google.common.util.concurrent.FluentFuture withTimeout(long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.util.concurrent.ScheduledExecutorService $r2;
        long $l0;
        com.google.common.util.concurrent.FluentFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r3 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture withTimeout(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)>(r0, $l0, $r1, $r2);

        r0 = (com.google.common.util.concurrent.FluentFuture) $r3;

        return r0;
    }
}
