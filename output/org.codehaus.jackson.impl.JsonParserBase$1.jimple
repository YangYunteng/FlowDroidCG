public class org.codehaus.jackson.impl.JsonParserBase$1 extends java.lang.Object
{
    public static final int[] $SwitchMap$org$codehaus$jackson$JsonToken;

    static void <clinit>()
    {
        java.lang.NoSuchFieldError $r0, $r1;
        org.codehaus.jackson.JsonToken $r4;
        org.codehaus.jackson.JsonToken[] $r2;
        int[] $r3;
        int $i0;

        $r2 = staticinvoke <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken[] values()>();

        $i0 = lengthof $r2;

        $r3 = newarray (int)[$i0];

        <org.codehaus.jackson.impl.JsonParserBase$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken> = $r3;

     label1:
        $r3 = <org.codehaus.jackson.impl.JsonParserBase$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        $i0 = virtualinvoke $r4.<java.lang.Enum: int ordinal()>();

     label2:
        $r3[$i0] = 1;

     label3:
        $r3 = <org.codehaus.jackson.impl.JsonParserBase$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        $i0 = virtualinvoke $r4.<java.lang.Enum: int ordinal()>();

     label4:
        $r3[$i0] = 2;

        return;

     label5:
        $r0 := @caughtexception;

        goto label3;

     label6:
        $r1 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label5;
        catch java.lang.NoSuchFieldError from label3 to label4 with label6;
    }
}
