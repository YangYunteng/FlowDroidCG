public class org.apache.james.mime4j.message.Header extends java.lang.Object implements java.lang.Iterable
{
    public java.util.Map fieldMap;
    public java.util.List fields;

    public void <init>()
    {
        java.util.HashMap $r2;
        java.util.LinkedList $r1;
        org.apache.james.mime4j.message.Header r0;

        r0 := @this: org.apache.james.mime4j.message.Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.List fields> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap> = $r2;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.apache.james.mime4j.parser.MimeStreamParser $r5;
        org.apache.james.mime4j.MimeException $r6;
        java.util.HashMap $r4;
        org.apache.james.mime4j.message.Header$1 $r1;
        org.apache.james.mime4j.MimeIOException $r7;
        org.apache.james.mime4j.message.Header r0;
        java.util.LinkedList $r3;
        java.io.InputStream $r2;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r2 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.List fields> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap> = $r4;

        $r5 = new org.apache.james.mime4j.parser.MimeStreamParser;

        specialinvoke $r5.<org.apache.james.mime4j.parser.MimeStreamParser: void <init>()>();

        $r1 = new org.apache.james.mime4j.message.Header$1;

        specialinvoke $r1.<org.apache.james.mime4j.message.Header$1: void <init>(org.apache.james.mime4j.message.Header,org.apache.james.mime4j.parser.MimeStreamParser)>(r0, $r5);

        virtualinvoke $r5.<org.apache.james.mime4j.parser.MimeStreamParser: void setContentHandler(org.apache.james.mime4j.parser.ContentHandler)>($r1);

     label1:
        virtualinvoke $r5.<org.apache.james.mime4j.parser.MimeStreamParser: void parse(java.io.InputStream)>($r2);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.james.mime4j.MimeIOException;

        specialinvoke $r7.<org.apache.james.mime4j.MimeIOException: void <init>(org.apache.james.mime4j.MimeException)>($r6);

        throw $r7;

        catch org.apache.james.mime4j.MimeException from label1 to label2 with label3;
    }

    public void <init>(org.apache.james.mime4j.message.Header)
    {
        java.util.Iterator $r5;
        java.util.HashMap $r3;
        java.util.List $r4;
        org.apache.james.mime4j.message.Header r0, $r1;
        java.lang.Object $r6;
        java.util.LinkedList $r2;
        boolean $z0;
        org.apache.james.mime4j.parser.Field $r7;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 := @parameter0: org.apache.james.mime4j.message.Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.List fields> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap> = $r3;

        $r4 = $r1.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.james.mime4j.parser.Field) $r6;

        virtualinvoke r0.<org.apache.james.mime4j.message.Header: void addField(org.apache.james.mime4j.parser.Field)>($r7);

        goto label1;

     label2:
        return;
    }

    public void addField(org.apache.james.mime4j.parser.Field)
    {
        java.util.List $r5;
        org.apache.james.mime4j.message.Header r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String $r3;
        java.util.LinkedList $r6;
        org.apache.james.mime4j.parser.Field $r1;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 := @parameter0: org.apache.james.mime4j.parser.Field;

        $r2 = r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap>;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.parser.Field: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.List) $r4;

        if $r5 != null goto label1;

        $r6 = new java.util.LinkedList;

        $r5 = $r6;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        $r2 = r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap>;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.parser.Field: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label1:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r5 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public org.apache.james.mime4j.parser.Field getField(java.lang.String)
    {
        java.util.List $r4;
        org.apache.james.mime4j.message.Header r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        boolean $z0;
        org.apache.james.mime4j.parser.Field $r5;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.List) $r3;

        if $r4 == null goto label1;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.james.mime4j.parser.Field) $r3;

        return $r5;

     label1:
        return null;
    }

    public java.util.List getFields()
    {
        java.util.List $r1;
        org.apache.james.mime4j.message.Header r0;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }

    public java.util.List getFields(java.lang.String)
    {
        java.util.List $r4;
        org.apache.james.mime4j.message.Header r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.List) $r3;

        if $r4 == null goto label2;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        return $r4;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.james.mime4j.message.Header r0;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public int removeFields(java.lang.String)
    {
        java.util.Iterator $r7;
        java.util.List $r5, $r6;
        org.apache.james.mime4j.message.Header r0;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.apache.james.mime4j.parser.Field $r8;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        $r5 = (java.util.List) $r4;

        if $r5 == null goto label4;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        $r6 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.james.mime4j.parser.Field) $r4;

        $r2 = interfaceinvoke $r8.<org.apache.james.mime4j.parser.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        goto label2;

     label3:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        return $i0;

     label4:
        return 0;
    }

    public void setField(org.apache.james.mime4j.parser.Field)
    {
        java.util.Iterator $r6;
        java.util.List $r5;
        org.apache.james.mime4j.message.Header r0;
        java.util.Map $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r2, $r8;
        org.apache.james.mime4j.parser.Field $r1, $r7;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 := @parameter0: org.apache.james.mime4j.parser.Field;

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.parser.Field: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = r0.<org.apache.james.mime4j.message.Header: java.util.Map fieldMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.List) $r4;

        if $r5 == null goto label5;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        interfaceinvoke $r5.<java.util.List: void clear()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r5 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        $i0 = -1;

        $i1 = 0;

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.james.mime4j.parser.Field) $r4;

        $r2 = interfaceinvoke $r7.<org.apache.james.mime4j.parser.Field: java.lang.String getName()>();

        $r8 = interfaceinvoke $r1.<org.apache.james.mime4j.parser.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z0 == 0 goto label3;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        $i2 = -1;

        if $i0 != $i2 goto label3;

        $i0 = $i1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r5 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i0, $r1);

        return;

     label5:
        virtualinvoke r0.<org.apache.james.mime4j.message.Header: void addField(org.apache.james.mime4j.parser.Field)>($r1);

        return;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        org.apache.james.mime4j.message.Header r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;
        org.apache.james.mime4j.parser.Field $r5;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);

        $r2 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.james.mime4j.parser.Field) $r4;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        goto label1;

     label2:
        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
