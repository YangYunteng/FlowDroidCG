public final class k.a.e extends java.lang.Object
{
    public static final byte[] a;
    public static final java.lang.String[] b;
    public static final k.O c;
    public static final k.L d;
    public static final l.h e;
    public static final l.h f;
    public static final l.h g;
    public static final l.h h;
    public static final l.h i;
    public static final java.nio.charset.Charset j;
    public static final java.nio.charset.Charset k;
    public static final java.nio.charset.Charset l;
    public static final java.nio.charset.Charset m;
    public static final java.nio.charset.Charset n;
    public static final java.nio.charset.Charset o;
    public static final java.util.TimeZone p;
    public static final java.util.Comparator q;
    public static final java.lang.reflect.Method r;
    public static final java.util.regex.Pattern s;

    static void <clinit>()
    {
        byte[] $r2;
        java.util.TimeZone $r9;
        l.h $r7;
        k.L $r6;
        k.a.c $r10;
        java.lang.Class[] $r12;
        java.lang.String[] $r3;
        k.O $r5;
        java.lang.Exception $r0, $r1;
        java.nio.charset.Charset $r8;
        java.lang.Class $r11;
        java.util.regex.Pattern $r14;
        java.lang.reflect.Method $r4, $r13;

        $r2 = newarray (byte)[0];

        <k.a.e: byte[] a> = $r2;

        $r3 = newarray (java.lang.String)[0];

        <k.a.e: java.lang.String[] b> = $r3;

        $r2 = <k.a.e: byte[] a>;

        $r4 = null;

        $r5 = staticinvoke <k.O: k.O a(k.B,byte[])>(null, $r2);

        <k.a.e: k.O c> = $r5;

        $r2 = <k.a.e: byte[] a>;

        $r6 = staticinvoke <k.L: k.L a(k.B,byte[])>(null, $r2);

        <k.a.e: k.L d> = $r6;

        $r7 = staticinvoke <l.h: l.h a(java.lang.String)>("efbbbf");

        <k.a.e: l.h e> = $r7;

        $r7 = staticinvoke <l.h: l.h a(java.lang.String)>("feff");

        <k.a.e: l.h f> = $r7;

        $r7 = staticinvoke <l.h: l.h a(java.lang.String)>("fffe");

        <k.a.e: l.h g> = $r7;

        $r7 = staticinvoke <l.h: l.h a(java.lang.String)>("0000ffff");

        <k.a.e: l.h h> = $r7;

        $r7 = staticinvoke <l.h: l.h a(java.lang.String)>("ffff0000");

        <k.a.e: l.h i> = $r7;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <k.a.e: java.nio.charset.Charset j> = $r8;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        <k.a.e: java.nio.charset.Charset k> = $r8;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16BE");

        <k.a.e: java.nio.charset.Charset l> = $r8;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16LE");

        <k.a.e: java.nio.charset.Charset m> = $r8;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-32BE");

        <k.a.e: java.nio.charset.Charset n> = $r8;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-32LE");

        <k.a.e: java.nio.charset.Charset o> = $r8;

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <k.a.e: java.util.TimeZone p> = $r9;

        $r10 = new k.a.c;

        specialinvoke $r10.<k.a.c: void <init>()>();

        <k.a.e: java.util.Comparator q> = $r10;

        $r11 = class "Ljava/lang/Throwable;";

        $r12 = newarray (java.lang.Class)[1];

     label1:
        $r12[0] = class "Ljava/lang/Throwable;";

     label2:
        $r13 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("addSuppressed", $r12);

     label3:
        $r4 = $r13;

     label4:
        <k.a.e: java.lang.reflect.Method r> = $r4;

        $r14 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)");

        <k.a.e: java.util.regex.Pattern s> = $r14;

        return;

     label5:
        $r0 := @caughtexception;

        goto label4;

     label6:
        $r1 := @caughtexception;

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label6;
    }

    public static int a(char)
    {
        int $i1;
        char $c0;
        byte $b2;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 < 48 goto label1;

        $i1 = (int) $c0;

        if $i1 > 57 goto label1;

        $i1 = (int) $c0;

        $i1 = $i1 - 48;

        return $i1;

     label1:
        $b2 = 97;

        $i1 = (int) $c0;

        if $i1 < 97 goto label3;

        $i1 = (int) $c0;

        if $i1 > 102 goto label3;

     label2:
        $i1 = (int) $c0;

        $i1 = $i1 - $b2;

        $i1 = $i1 + 10;

        return $i1;

     label3:
        $b2 = 65;

        $i1 = (int) $c0;

        if $i1 < 65 goto label4;

        $i1 = (int) $c0;

        if $i1 > 70 goto label4;

        goto label2;

     label4:
        $i1 = -1;

        return $i1;
    }

    public static int a(java.lang.String, int, int, char)
    {
        int $i0, $i3, $i4, $i5;
        char $c1, $c2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $c1 := @parameter3: char;

     label1:
        if $i3 >= $i0 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i4 = (int) $c2;

        $i5 = (int) $c1;

        if $i4 != $i5 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static int a(java.lang.String, int, int, java.lang.String)
    {
        int $i0, $i1, $i3, $i4;
        char $c2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i3 = (int) $c2;

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i3);

        $i4 = -1;

        if $i3 == $i4 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static int a(java.lang.String, long, java.util.concurrent.TimeUnit)
    {
        long $l0, $l2;
        java.lang.IllegalArgumentException $r4;
        java.lang.NullPointerException $r5;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        int $i3;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label5;

        if $r1 == null goto label4;

        $l2 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b1 = $l2 cmp 2147483647L;

        $i3 = (int) $b1;

        if $i3 > 0 goto label3;

        $b1 = $l2 cmp 0L;

        if $b1 != 0 goto label2;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r2 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too small.");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label2:
        $i3 = (int) $l2;

        return $i3;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r2 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too large.");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label4:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("unit == null");

        throw $r5;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r2 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r4;
    }

    public static int a(java.util.Comparator, java.lang.String[], java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String[] $r0;
        java.lang.String $r1, $r3;
        java.util.Comparator $r2;

        $r2 := @parameter0: java.util.Comparator;

        $r0 := @parameter1: java.lang.String[];

        $r1 := @parameter2: java.lang.String;

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r3 = $r0[$i2];

        $i1 = interfaceinvoke $r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r1);

        if $i1 != 0 goto label2;

        return $i2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $i0 = -1;

        return $i0;
    }

    public static java.lang.AssertionError a(java.lang.String, java.lang.Exception)
    {
        java.lang.IllegalStateException $r3;
        java.lang.String $r0;
        java.lang.AssertionError $r2;
        java.lang.Exception $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Exception;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r0);

     label1:
        virtualinvoke $r2.<java.lang.AssertionError: java.lang.Throwable initCause(java.lang.Throwable)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return $r2;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public static java.lang.String a(java.lang.String)
    {
        byte[] $r3;
        java.lang.AssertionError $r4;
        java.lang.IllegalArgumentException $r0;
        java.net.InetAddress $r2;
        java.util.Locale $r6;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z0 == 0 goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r2 = staticinvoke <k.a.e: java.net.InetAddress a(java.lang.String,int,int)>($r1, 1, $i0);

        goto label02;

     label01:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = staticinvoke <k.a.e: java.net.InetAddress a(java.lang.String,int,int)>($r1, 0, $i0);

     label02:
        if $r2 != null goto label03;

        return null;

     label03:
        $r3 = virtualinvoke $r2.<java.net.InetAddress: byte[] getAddress()>();

        $i0 = lengthof $r3;

        if $i0 != 16 goto label04;

        $r1 = staticinvoke <k.a.e: java.lang.String a(byte[])>($r3);

        return $r1;

     label04:
        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IPv6 address: \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r1);

        throw $r4;

     label05:
        $r1 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r1);

     label06:
        $r6 = <java.util.Locale: java.util.Locale US>;

     label07:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

     label08:
        if $z0 == 0 goto label09;

        return null;

     label09:
        $z0 = staticinvoke <k.a.e: boolean b(java.lang.String)>($r1);

     label10:
        if $z0 == 0 goto label11;

        return null;

     label11:
        return $r1;

     label12:
        $r0 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label05 to label06 with label12;
        catch java.lang.IllegalArgumentException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label09 to label10 with label12;
    }

    public static transient java.lang.String a(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.String $r2;
        java.util.Locale $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, $r2, $r0);

        return $r2;
    }

    public static java.lang.String a(k.z, boolean)
    {
        k.z $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        $r0 := @parameter0: k.z;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<k.z: java.lang.String g()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z1 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r1 = virtualinvoke $r0.<k.z: java.lang.String g()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = virtualinvoke $r0.<k.z: java.lang.String g()>();

     label2:
        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r0.<k.z: int j()>();

        $r3 = virtualinvoke $r0.<k.z: java.lang.String m()>();

        $i1 = staticinvoke <k.z: int a(java.lang.String)>($r3);

        if $i0 == $i1 goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = virtualinvoke $r0.<k.z: int j()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r1;
    }

    public static java.lang.String a(byte[])
    {
        byte[] $r1;
        l.e $r2, $r3;
        long $l8;
        short $s7;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r0;

        $r1 := @parameter0: byte[];

        $i0 = 0;

        $i1 = 0;

        $i2 = -1;

        $i3 = 0;

     label1:
        $i4 = lengthof $r1;

        if $i1 >= $i4 goto label5;

        $i4 = $i1;

     label2:
        if $i4 >= 16 goto label3;

        $b5 = $r1[$i4];

        if $b5 != 0 goto label3;

        $i6 = $i4 + 1;

        $b5 = $r1[$i6];

        if $b5 != 0 goto label3;

        $i4 = $i4 + 2;

        goto label2;

     label3:
        $i6 = $i4 - $i1;

        if $i6 <= $i3 goto label4;

        if $i6 < 4 goto label4;

        $i2 = $i1;

        $i3 = $i6;

     label4:
        $i1 = $i4 + 2;

        goto label1;

     label5:
        $r3 = new l.e;

        $r2 = $r3;

        specialinvoke $r3.<l.e: void <init>()>();

     label6:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label9;

        if $i0 != $i2 goto label7;

        virtualinvoke $r2.<l.e: l.e writeByte(int)>(58);

        $i0 = $i0 + $i3;

        if $i0 != 16 goto label6;

        virtualinvoke $r2.<l.e: l.e writeByte(int)>(58);

        goto label6;

     label7:
        if $i0 <= 0 goto label8;

        virtualinvoke $r2.<l.e: l.e writeByte(int)>(58);

     label8:
        $b5 = $r1[$i0];

        $s7 = (short) $b5;

        $s7 = $s7 & 255;

        $i1 = (int) $s7;

        $i1 = $i1 << 8;

        $i4 = $i0 + 1;

        $b5 = $r1[$i4];

        $s7 = (short) $b5;

        $s7 = $s7 & 255;

        $i4 = (int) $s7;

        $i1 = $i1 | $i4;

        $l8 = (long) $i1;

        virtualinvoke $r2.<l.e: l.e b(long)>($l8);

        $i0 = $i0 + 2;

        goto label6;

     label9:
        $r0 = virtualinvoke $r2.<l.e: java.lang.String m()>();

        return $r0;
    }

    public static java.net.InetAddress a(java.lang.String, int, int)
    {
        byte[] $r2;
        java.lang.AssertionError $r4;
        java.net.InetAddress $r3;
        byte $b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        java.lang.String $r1;
        boolean $z0;
        char $c6;
        java.net.UnknownHostException $r0;

        $r1 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = newarray (byte)[16];

        $i2 = 0;

        $i3 = -1;

        $i4 = -1;

     label01:
        if $i1 >= $i0 goto label16;

        $i5 = lengthof $r2;

        if $i2 != $i5 goto label02;

        return null;

     label02:
        $i5 = $i1 + 2;

        if $i5 > $i0 goto label05;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i1, "::", 0, 2);

        if $z0 == 0 goto label05;

        $i1 = -1;

        if $i3 == $i1 goto label03;

        return null;

     label03:
        $i2 = $i2 + 2;

        if $i5 != $i0 goto label04;

        $i3 = $i2;

        goto label16;

     label04:
        $i3 = $i2;

        $i4 = $i5;

        goto label10;

     label05:
        if $i2 == 0 goto label09;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i1, ":", 0, 1);

        if $z0 == 0 goto label06;

        $i1 = $i1 + 1;

        goto label09;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i1, ".", 0, 1);

        if $z0 == 0 goto label08;

        $i1 = -2;

        $i1 = $i2 + $i1;

        $z0 = staticinvoke <k.a.e: boolean a(java.lang.String,int,int,byte[],int)>($r1, $i4, $i0, $r2, $i1);

        if $z0 != 0 goto label07;

        return null;

     label07:
        $i2 = $i2 + 2;

        goto label16;

     label08:
        return null;

     label09:
        $i4 = $i1;

     label10:
        $i1 = $i4;

        $i5 = 0;

     label11:
        if $i1 >= $i0 goto label13;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i7 = staticinvoke <k.a.e: int a(char)>($c6);

        $i8 = -1;

        if $i7 != $i8 goto label12;

        goto label13;

     label12:
        $i5 = $i5 << 4;

        $i5 = $i5 + $i7;

        $i1 = $i1 + 1;

        goto label11;

     label13:
        $i7 = $i1 - $i4;

        if $i7 == 0 goto label15;

        if $i7 <= 4 goto label14;

        return null;

     label14:
        $i7 = $i2 + 1;

        $i8 = $i5 >>> 8;

        $i8 = $i8 & 255;

        $b9 = (byte) $i8;

        $r2[$i2] = $b9;

        $i2 = $i7 + 1;

        $i5 = $i5 & 255;

        $b9 = (byte) $i5;

        $r2[$i7] = $b9;

        goto label01;

     label15:
        return null;

     label16:
        $i1 = lengthof $r2;

        if $i2 == $i1 goto label18;

        $i1 = -1;

        if $i3 != $i1 goto label17;

        return null;

     label17:
        $i0 = lengthof $r2;

        $i1 = $i2 - $i3;

        $i0 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r2, $i0, $i1);

        $i1 = lengthof $r2;

        $i1 = $i1 - $i2;

        $i1 = $i1 + $i3;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r2, $i3, $i1, 0);

     label18:
        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r2);

     label19:
        return $r3;

     label20:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        goto label21;

     label21:
        throw $r4;

     label22:
        $r0 := @caughtexception;

        goto label20;

        catch java.net.UnknownHostException from label18 to label19 with label22;
    }

    public static java.nio.charset.Charset a(l.g, java.nio.charset.Charset)
    {
        l.g $r0;
        java.nio.charset.Charset $r1;
        l.h $r2;
        int $i0;
        long $l1;
        boolean $z0;

        $r0 := @parameter0: l.g;

        $r1 := @parameter1: java.nio.charset.Charset;

        $r2 = <k.a.e: l.h e>;

        $z0 = interfaceinvoke $r0.<l.g: boolean a(long,l.h)>(0L, $r2);

        if $z0 == 0 goto label1;

        $r2 = <k.a.e: l.h e>;

        $i0 = virtualinvoke $r2.<l.h: int e()>();

        $l1 = (long) $i0;

        interfaceinvoke $r0.<l.g: void skip(long)>($l1);

        $r1 = <k.a.e: java.nio.charset.Charset j>;

        return $r1;

     label1:
        $r2 = <k.a.e: l.h f>;

        $z0 = interfaceinvoke $r0.<l.g: boolean a(long,l.h)>(0L, $r2);

        if $z0 == 0 goto label2;

        $r2 = <k.a.e: l.h f>;

        $i0 = virtualinvoke $r2.<l.h: int e()>();

        $l1 = (long) $i0;

        interfaceinvoke $r0.<l.g: void skip(long)>($l1);

        $r1 = <k.a.e: java.nio.charset.Charset l>;

        return $r1;

     label2:
        $r2 = <k.a.e: l.h g>;

        $z0 = interfaceinvoke $r0.<l.g: boolean a(long,l.h)>(0L, $r2);

        if $z0 == 0 goto label3;

        $r2 = <k.a.e: l.h g>;

        $i0 = virtualinvoke $r2.<l.h: int e()>();

        $l1 = (long) $i0;

        interfaceinvoke $r0.<l.g: void skip(long)>($l1);

        $r1 = <k.a.e: java.nio.charset.Charset m>;

        return $r1;

     label3:
        $r2 = <k.a.e: l.h h>;

        $z0 = interfaceinvoke $r0.<l.g: boolean a(long,l.h)>(0L, $r2);

        if $z0 == 0 goto label4;

        $r2 = <k.a.e: l.h h>;

        $i0 = virtualinvoke $r2.<l.h: int e()>();

        $l1 = (long) $i0;

        interfaceinvoke $r0.<l.g: void skip(long)>($l1);

        $r1 = <k.a.e: java.nio.charset.Charset n>;

        return $r1;

     label4:
        $r2 = <k.a.e: l.h i>;

        $z0 = interfaceinvoke $r0.<l.g: boolean a(long,l.h)>(0L, $r2);

        if $z0 == 0 goto label5;

        $r2 = <k.a.e: l.h i>;

        $i0 = virtualinvoke $r2.<l.h: int e()>();

        $l1 = (long) $i0;

        interfaceinvoke $r0.<l.g: void skip(long)>($l1);

        $r1 = <k.a.e: java.nio.charset.Charset o>;

     label5:
        return $r1;
    }

    public static java.util.List a(java.util.List)
    {
        java.util.List $r1;
        java.util.ArrayList $r0;

        $r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r1;
    }

    public static transient java.util.List a(java.lang.Object[])
    {
        java.lang.Object $r1;
        java.util.List $r2;
        java.lang.Object[] $r0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (java.lang.Object[]) $r1;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r2;
    }

    public static java.util.Map a(java.util.Map)
    {
        java.util.LinkedHashMap $r1;
        java.util.Map $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r0;

     label1:
        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r0);

        $r0 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r0;
    }

    public static java.util.concurrent.ThreadFactory a(java.lang.String, boolean)
    {
        java.lang.String $r0;
        k.a.d $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new k.a.d;

        specialinvoke $r1.<k.a.d: void <init>(java.lang.String,boolean)>($r0, $z0);

        return $r1;
    }

    public static javax.net.ssl.X509TrustManager a()
    {
        java.lang.IllegalStateException $r5;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager $r3;
        java.lang.AssertionError $r8;
        java.security.GeneralSecurityException $r7;
        javax.net.ssl.TrustManager[] $r2;
        javax.net.ssl.X509TrustManager $r4;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r0;
        boolean $z0;

     label1:
        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(null);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label2:
        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r3 = $r2[0];

        $z0 = $r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 == 0 goto label3;

        $r3 = $r2[0];

        $r4 = (javax.net.ssl.X509TrustManager) $r3;

        return $r4;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected default trust managers:");

        $r0 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

     label5:
        throw $r5;

     label6:
        $r7 := @caughtexception;

        $r8 = staticinvoke <k.a.e: java.lang.AssertionError a(java.lang.String,java.lang.Exception)>("No System TLS", $r7);

        throw $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public static void a(long, long, long)
    {
        byte $b1;
        int $i5;
        long $l0, $l2, $l3, $l4;
        java.lang.ArrayIndexOutOfBoundsException $r0;

        $l2 := @parameter0: long;

        $l3 := @parameter1: long;

        $l0 := @parameter2: long;

        $l4 = $l3 | $l0;

        $b1 = $l4 cmp 0L;

        $i5 = (int) $b1;

        if $i5 < 0 goto label1;

        $b1 = $l3 cmp $l2;

        $i5 = (int) $b1;

        if $i5 > 0 goto label1;

        $l2 = $l2 - $l3;

        $b1 = $l2 cmp $l0;

        $i5 = (int) $b1;

        if $i5 < 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r0;
    }

    public static void a(java.io.Closeable)
    {
        java.lang.RuntimeException $r2;
        java.lang.Exception $r0;
        java.io.Closeable $r1;

        $r1 := @parameter0: java.io.Closeable;

        if $r1 == null goto label5;

     label1:
        interfaceinvoke $r1.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        throw $r2;

     label4:
        $r0 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void a(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable $r0, $r1;
        java.lang.IllegalAccessException $r4;
        java.lang.Object[] $r5;
        java.lang.reflect.Method $r2;
        java.lang.reflect.InvocationTargetException $r3;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = <k.a.e: java.lang.reflect.Method r>;

        if $r2 == null goto label5;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r1;

     label1:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public static void a(java.net.Socket)
    {
        java.net.Socket $r1;
        java.lang.RuntimeException $r2;
        java.lang.AssertionError $r3;
        java.lang.Exception $r0;
        boolean $z0;

        $r1 := @parameter0: java.net.Socket;

        if $r1 == null goto label7;

     label1:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        throw $r2;

     label4:
        $r3 := @caughtexception;

        $z0 = staticinvoke <k.a.e: boolean a(java.lang.AssertionError)>($r3);

        if $z0 == 0 goto label5;

        return;

     label5:
        throw $r3;

     label6:
        $r0 := @caughtexception;

     label7:
        return;

        catch java.lang.AssertionError from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public static boolean a(java.lang.AssertionError)
    {
        java.lang.Throwable $r1;
        java.lang.AssertionError $r0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.AssertionError;

        $r1 = virtualinvoke $r0.<java.lang.AssertionError: java.lang.Throwable getCause()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r0.<java.lang.AssertionError: java.lang.String getMessage()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r0.<java.lang.AssertionError: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("getsockname failed");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean a(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        if $r1 == $r0 goto label2;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean a(java.lang.String, int, int, byte[], int)
    {
        byte[] $r0;
        char $c5;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r0 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $i3 = $i2;

     label01:
        if $i1 >= $i0 goto label11;

        $i4 = lengthof $r0;

        if $i3 != $i4 goto label02;

        return 0;

     label02:
        if $i3 == $i2 goto label04;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i4 = (int) $c5;

        if $i4 == 46 goto label03;

        return 0;

     label03:
        $i1 = $i1 + 1;

     label04:
        $i4 = $i1;

        $i6 = 0;

     label05:
        if $i4 >= $i0 goto label09;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $i8 = (int) $c5;

        if $i8 < 48 goto label09;

        $i8 = (int) $c5;

        if $i8 <= 57 goto label06;

        goto label09;

     label06:
        if $i6 != 0 goto label07;

        if $i1 == $i4 goto label07;

        return 0;

     label07:
        $i6 = $i6 * 10;

        $i8 = (int) $c5;

        $i6 = $i6 + $i8;

        $i6 = $i6 - 48;

        if $i6 <= 255 goto label08;

        return 0;

     label08:
        $i4 = $i4 + 1;

        goto label05;

     label09:
        $i1 = $i4 - $i1;

        if $i1 != 0 goto label10;

        return 0;

     label10:
        $b7 = (byte) $i6;

        $r0[$i3] = $b7;

        $i3 = $i3 + 1;

        $i1 = $i4;

        goto label01;

     label11:
        $i1 = $i2 + 4;

        if $i3 == $i1 goto label12;

        return 0;

     label12:
        return 1;
    }

    public static boolean a(l.x, int, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r0;
        l.x $r2;
        int $i0;
        java.io.IOException $r1;
        boolean $z0;

        $r2 := @parameter0: l.x;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.util.concurrent.TimeUnit;

     label1:
        $z0 = staticinvoke <k.a.e: boolean b(l.x,int,java.util.concurrent.TimeUnit)>($r2, $i0, $r0);

     label2:
        return $z0;

     label3:
        return 0;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public static java.lang.String[] a(java.util.Comparator, java.lang.String[], java.lang.String[])
    {
        java.lang.Object[] $r6;
        java.lang.String[] $r0, $r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r5;
        java.util.Comparator $r4;

        $r4 := @parameter0: java.util.Comparator;

        $r0 := @parameter1: java.lang.String[];

        $r1 := @parameter2: java.lang.String[];

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label5;

        $r3 = $r0[$i2];

        $i1 = lengthof $r1;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label4;

        $r5 = $r1[$i3];

        $i4 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $i4 != 0 goto label3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label4;

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r0 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0);

        $r0 = (java.lang.String[]) $r6;

        return $r0;
    }

    public static java.lang.String[] a(java.lang.String[], java.lang.String)
    {
        int $i0, $i1;
        java.lang.String[] $r1, $r2;
        java.lang.String $r0;

        $r1 := @parameter0: java.lang.String[];

        $r0 := @parameter1: java.lang.String;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        $r2 = newarray (java.lang.String)[$i0];

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $i0 = lengthof $r2;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2[$i0] = $r0;

        return $r2;
    }

    public static int b(java.lang.String, int, int)
    {
        int $i0, $i2, $i3;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

     label1:
        if $i2 >= $i0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i3 = (int) $c1;

        if $i3 == 9 goto label2;

        $i3 = (int) $c1;

        if $i3 == 10 goto label2;

        $i3 = (int) $c1;

        if $i3 == 12 goto label2;

        $i3 = (int) $c1;

        if $i3 == 13 goto label2;

        $i3 = (int) $c1;

        if $i3 == 32 goto label2;

        return $i2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static k.y b(java.util.List)
    {
        java.util.Iterator $r3;
        l.h $r6;
        k.y$a $r0;
        k.a.a $r1;
        k.a.e.b $r5;
        java.util.List $r2;
        k.y $r9;
        java.lang.Object $r4;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r2 := @parameter0: java.util.List;

        $r0 = new k.y$a;

        specialinvoke $r0.<k.y$a: void <init>()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (k.a.e.b) $r4;

        $r1 = <k.a.a: k.a.a a>;

        $r6 = $r5.<k.a.e.b: l.h g>;

        $r7 = virtualinvoke $r6.<l.h: java.lang.String h()>();

        $r6 = $r5.<k.a.e.b: l.h h>;

        $r8 = virtualinvoke $r6.<l.h: java.lang.String h()>();

        virtualinvoke $r1.<k.a.a: void a(k.y$a,java.lang.String,java.lang.String)>($r0, $r7, $r8);

        goto label1;

     label2:
        $r9 = virtualinvoke $r0.<k.y$a: k.y a()>();

        return $r9;
    }

    public static boolean b(java.lang.String)
    {
        int $i0, $i1, $i3;
        char $c2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 <= 31 goto label4;

        $i1 = (int) $c2;

        if $i1 < 127 goto label2;

        return 1;

     label2:
        $r1 = " #%/:?@[\\]";

        $i1 = (int) $c2;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i1);

        $i3 = -1;

        if $i1 == $i3 goto label3;

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return 1;

     label5:
        return 0;
    }

    public static boolean b(java.util.Comparator, java.lang.String[], java.lang.String[])
    {
        java.lang.String[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r4;
        java.util.Comparator $r3;

        $r3 := @parameter0: java.util.Comparator;

        $r0 := @parameter1: java.lang.String[];

        $r1 := @parameter2: java.lang.String[];

        if $r0 == null goto label6;

        if $r1 == null goto label6;

        $i0 = lengthof $r0;

        if $i0 == 0 goto label6;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $i2 = lengthof $r0;

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label6;

        $r2 = $r0[$i3];

        $i0 = lengthof $r1;

        $i4 = 0;

     label3:
        if $i4 >= $i0 goto label5;

        $r4 = $r1[$i4];

        $i1 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $i1 != 0 goto label4;

        return 1;

     label4:
        $i4 = $i4 + 1;

        goto label3;

     label5:
        $i3 = $i3 + 1;

        goto label2;

     label6:
        return 0;
    }

    public static boolean b(l.x, int, java.util.concurrent.TimeUnit)
    {
        java.lang.Throwable $r5;
        l.e $r4;
        long $l1, $l2, $l3;
        java.io.InterruptedIOException $r0;
        java.util.concurrent.TimeUnit $r2;
        byte $b4;
        l.x $r1;
        int $i0;
        l.z $r3;
        boolean $z0;

        $r1 := @parameter0: l.x;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        $z0 = virtualinvoke $r3.<l.z: boolean d()>();

        if $z0 == 0 goto label01;

        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        $l2 = virtualinvoke $r3.<l.z: long c()>();

        $l2 = $l2 - $l1;

        goto label02;

     label01:
        $l2 = 9223372036854775807L;

     label02:
        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        $l3 = (long) $i0;

        $l3 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toNanos(long)>($l3);

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l3);

        $l3 = $l3 + $l1;

        virtualinvoke $r3.<l.z: l.z a(long)>($l3);

     label03:
        $r4 = new l.e;

     label04:
        specialinvoke $r4.<l.e: void <init>()>();

     label05:
        $l3 = interfaceinvoke $r1.<l.x: long b(l.e,long)>($r4, 8192L);

     label06:
        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label09;

     label07:
        virtualinvoke $r4.<l.e: void clear()>();

     label08:
        goto label05;

     label09:
        $b4 = $l2 cmp 9223372036854775807L;

        if $b4 != 0 goto label10;

        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        virtualinvoke $r3.<l.z: l.z a()>();

        return 1;

     label10:
        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        $l1 = $l1 + $l2;

        virtualinvoke $r3.<l.z: l.z a(long)>($l1);

        return 1;

     label11:
        $r5 := @caughtexception;

        $b4 = $l2 cmp 9223372036854775807L;

        if $b4 != 0 goto label12;

        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        virtualinvoke $r3.<l.z: l.z a()>();

        goto label13;

     label12:
        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        $l1 = $l1 + $l2;

        virtualinvoke $r3.<l.z: l.z a(long)>($l1);

     label13:
        throw $r5;

     label14:
        $b4 = $l2 cmp 9223372036854775807L;

        if $b4 != 0 goto label15;

        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        virtualinvoke $r3.<l.z: l.z a()>();

        return 0;

     label15:
        $r3 = interfaceinvoke $r1.<l.x: l.z b()>();

        $l1 = $l1 + $l2;

        virtualinvoke $r3.<l.z: l.z a(long)>($l1);

        return 0;

     label16:
        $r0 := @caughtexception;

        goto label14;

        catch java.io.InterruptedIOException from label04 to label06 with label16;
        catch java.io.InterruptedIOException from label07 to label08 with label16;
        catch java.lang.Throwable from label03 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
    }

    public static int c(java.lang.String)
    {
        int $i0, $i1, $i3;
        char $c2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i3 = (int) $c2;

        if $i3 <= 31 goto label3;

        $i3 = (int) $c2;

        if $i3 < 127 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i1;

     label4:
        $i0 = -1;

        return $i0;
    }

    public static int c(java.lang.String, int, int)
    {
        int $i0, $i2, $i3;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = -1;

        $i2 = $i2 + $i3;

     label1:
        if $i2 < $i0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i3 = (int) $c1;

        if $i3 == 9 goto label2;

        $i3 = (int) $c1;

        if $i3 == 10 goto label2;

        $i3 = (int) $c1;

        if $i3 == 12 goto label2;

        $i3 = (int) $c1;

        if $i3 == 13 goto label2;

        $i3 = (int) $c1;

        if $i3 == 32 goto label2;

        $i0 = $i2 + 1;

        return $i0;

     label2:
        $i3 = -1;

        $i2 = $i2 + $i3;

        goto label1;

     label3:
        return $i0;
    }

    public static java.lang.String d(java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <k.a.e: int b(java.lang.String,int,int)>($r0, $i0, $i1);

        $i1 = staticinvoke <k.a.e: int c(java.lang.String,int,int)>($r0, $i0, $i1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r0;
    }

    public static boolean d(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.util.regex.Pattern $r0;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 = <k.a.e: java.util.regex.Pattern s>;

        $r2 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }
}
