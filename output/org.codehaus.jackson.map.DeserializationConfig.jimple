public class org.codehaus.jackson.map.DeserializationConfig extends org.codehaus.jackson.map.MapperConfig
{
    public static final int DEFAULT_FEATURE_FLAGS;
    public org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver;
    public int _featureFlags;
    public org.codehaus.jackson.node.JsonNodeFactory _nodeFactory;
    public org.codehaus.jackson.map.util.LinkedNode _problemHandlers;

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <org.codehaus.jackson.map.DeserializationConfig$Feature: int collectDefaults()>();

        <org.codehaus.jackson.map.DeserializationConfig: int DEFAULT_FEATURE_FLAGS> = $i0;

        return;
    }

    public void <init>(org.codehaus.jackson.map.ClassIntrospector, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.jsontype.SubtypeResolver, org.codehaus.jackson.map.PropertyNamingStrategy, org.codehaus.jackson.map.type.TypeFactory, org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r3;
        org.codehaus.jackson.map.HandlerInstantiator $r6;
        org.codehaus.jackson.map.PropertyNamingStrategy $r4;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r1;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.node.JsonNodeFactory $r8;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r2;
        int $i0;
        org.codehaus.jackson.map.ClassIntrospector $r7;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r7 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        $r1 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r3 := @parameter3: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r4 := @parameter4: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r5 := @parameter5: org.codehaus.jackson.map.type.TypeFactory;

        $r6 := @parameter6: org.codehaus.jackson.map.HandlerInstantiator;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator)>($r7, $r1, $r2, $r3, $r4, $r5, $r6);

        $i0 = <org.codehaus.jackson.map.DeserializationConfig: int DEFAULT_FEATURE_FLAGS>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        $r8 = <org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.JsonNodeFactory instance>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r8;

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 = $r1.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        specialinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>($r1, $r2);

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializationConfig, java.util.HashMap, org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r3;
        java.util.HashMap $r2;
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r4;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: java.util.HashMap;

        $r3 := @parameter2: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r4 = $r1.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        specialinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>($r1, $r4);

        r0.<org.codehaus.jackson.map.MapperConfig: java.util.HashMap _mixInAnnotations> = $r2;

        r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r3;

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.MapperConfig$Base)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.util.LinkedNode $r5;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.node.JsonNodeFactory $r6;
        org.codehaus.jackson.map.AbstractTypeResolver $r4;
        int $i0;
        org.codehaus.jackson.map.MapperConfig$Base $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter1: org.codehaus.jackson.map.MapperConfig$Base;

        $r1 = $r2.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig: void <init>(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.MapperConfig$Base,org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r2, $r3, $r1);

        $i0 = <org.codehaus.jackson.map.DeserializationConfig: int DEFAULT_FEATURE_FLAGS>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        $i0 = $r2.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        $r4 = $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver> = $r4;

        $r5 = $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r5;

        $r6 = $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r6;

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.node.JsonNodeFactory $r1;
        org.codehaus.jackson.map.util.LinkedNode $r4;
        org.codehaus.jackson.map.AbstractTypeResolver $r3;
        int $i0;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter1: org.codehaus.jackson.node.JsonNodeFactory;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig: void <init>(org.codehaus.jackson.map.MapperConfig)>($r2);

        $i0 = <org.codehaus.jackson.map.DeserializationConfig: int DEFAULT_FEATURE_FLAGS>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        $i0 = $r2.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        $r3 = $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver> = $r3;

        $r4 = $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r4;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r1;

        return;
    }

    public void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler)
    {
        org.codehaus.jackson.map.DeserializationProblemHandler $r1;
        org.codehaus.jackson.map.util.LinkedNode $r2, $r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationProblemHandler;

        $r2 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        $z0 = staticinvoke <org.codehaus.jackson.map.util.LinkedNode: boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object)>($r2, $r1);

        if $z0 != 0 goto label1;

        $r3 = new org.codehaus.jackson.map.util.LinkedNode;

        $r2 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        specialinvoke $r3.<org.codehaus.jackson.map.util.LinkedNode: void <init>(java.lang.Object,org.codehaus.jackson.map.util.LinkedNode)>($r1, $r2);

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r3;

     label1:
        return;
    }

    public boolean canOverrideAccessModifiers()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        return $z0;
    }

    public void clearHandlers()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = null;

        return;
    }

    public org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        java.util.HashMap $r2;
        org.codehaus.jackson.map.DeserializationConfig r0, $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = r0.<org.codehaus.jackson.map.MapperConfig: java.util.HashMap _mixInAnnotations>;

        r0.<org.codehaus.jackson.map.MapperConfig: boolean _mixInAnnotationsShared> = 1;

        $r3 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,java.util.HashMap,org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r0, $r2, $r1);

        return $r3;
    }

    public org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r3;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r2;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r3 := @parameter2: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r3);

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r2);

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r1);

        return r0;
    }

    public volatile org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r1);

        return r0;
    }

    public volatile org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r3;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r2 := @parameter2: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r3, $r1, $r2);

        return r0;
    }

    public org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.introspect.Annotated, java.lang.Class)
    {
        org.codehaus.jackson.map.introspect.Annotated $r2;
        org.codehaus.jackson.map.HandlerInstantiator $r3;
        java.lang.Class $r1;
        org.codehaus.jackson.map.JsonDeserializer $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.DeserializationConfig r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.HandlerInstantiator: org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>(r0, $r2, $r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        $r5 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>($r1, $z0);

        $r4 = (org.codehaus.jackson.map.JsonDeserializer) $r5;

        return $r4;
    }

    public void disable(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        int $i0, $i1, $i2;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        $i1 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i2 = -1;

        $i1 = $i1 ^ $i2;

        $i0 = $i1 & $i0;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        return;
    }

    public void enable(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        int $i0, $i1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        $i1 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i0 = $i1 | $i0;

        r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags> = $i0;

        return;
    }

    public void fromAnnotations(java.lang.Class)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r4;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r5;
        java.lang.Class $r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$Base $r1;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: java.lang.Class;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = staticinvoke <org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>($r2, $r3, null);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r4, $r5);

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r5);

        r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base> = $r1;

        return;
    }

    public org.codehaus.jackson.map.AbstractTypeResolver getAbstractTypeResolver()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AbstractTypeResolver r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver>;

        return r1;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.introspect.NopAnnotationIntrospector r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r2;

     label1:
        r3 = <org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance>;

        return r3;
    }

    public org.codehaus.jackson.Base64Variant getBase64Variant()
    {
        org.codehaus.jackson.Base64Variant $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = staticinvoke <org.codehaus.jackson.Base64Variants: org.codehaus.jackson.Base64Variant getDefaultVariant()>();

        return $r1;
    }

    public final org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.node.JsonNodeFactory r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory>;

        return r1;
    }

    public org.codehaus.jackson.map.util.LinkedNode getProblemHandlers()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.util.LinkedNode r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        return r1;
    }

    public org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.ClassIntrospector $r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, $r1, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)
    {
        org.codehaus.jackson.map.ClassIntrospector $r2;
        java.lang.Class $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, $r1, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class)
    {
        org.codehaus.jackson.map.ClassIntrospector $r2;
        java.lang.Class $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, $r1, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.ClassIntrospector $r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, $r1, r0);

        return $r3;
    }

    public boolean isAnnotationProcessingEnabled()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        return $z0;
    }

    public final boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        int $i0, $i1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        $i1 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.introspect.Annotated, java.lang.Class)
    {
        org.codehaus.jackson.map.introspect.Annotated $r2;
        org.codehaus.jackson.map.HandlerInstantiator $r3;
        org.codehaus.jackson.map.KeyDeserializer $r4;
        java.lang.Class $r1;
        java.lang.Object $r5;
        org.codehaus.jackson.map.DeserializationConfig r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.HandlerInstantiator: org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>(r0, $r2, $r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        $r5 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>($r1, $z0);

        $r4 = (org.codehaus.jackson.map.KeyDeserializer) $r5;

        return $r4;
    }

    public void set(org.codehaus.jackson.map.DeserializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void enable(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        return;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void disable(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        return;
    }

    public void setAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AbstractTypeResolver $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.AbstractTypeResolver;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver _abstractTypeResolver> = $r1;

        return;
    }

    public void setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.node.JsonNodeFactory $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r1;

        return;
    }

    public org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 = new org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>($r3);

        specialinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r2);

        return $r1;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    {
        org.codehaus.jackson.map.ClassIntrospector $r3;
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        $r1 = new org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)>($r3);

        specialinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r2);

        return $r1;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r4;
        org.codehaus.jackson.map.MapperConfig$Base $r1;
        java.text.DateFormat $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: java.text.DateFormat;

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: java.text.DateFormat getDateFormat()>();

        if $r2 != $r3 goto label1;

        return r0;

     label1:
        $r4 = new org.codehaus.jackson.map.DeserializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat)>($r2);

        specialinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r1);

        return $r4;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        java.text.DateFormat $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: java.text.DateFormat;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.HandlerInstantiator $r2, $r3;
        org.codehaus.jackson.map.DeserializationConfig r0, $r4;
        org.codehaus.jackson.map.MapperConfig$Base $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r2 != $r3 goto label1;

        return r0;

     label1:
        $r4 = new org.codehaus.jackson.map.DeserializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>($r2);

        specialinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r1);

        return $r4;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.HandlerInstantiator $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.node.JsonNodeFactory $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r2 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.node.JsonNodeFactory)>(r0, $r1);

        return $r2;
    }

    public org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy $r3;
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r1 = new org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>($r3);

        specialinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r2);

        return $r1;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig)>(r0);

        $r2.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r1;

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2, $r3;
        org.codehaus.jackson.map.DeserializationConfig r0, $r4;
        org.codehaus.jackson.map.MapperConfig$Base $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.type.TypeFactory getTypeFactory()>();

        if $r2 != $r3 goto label1;

        return r0;

     label1:
        $r4 = new org.codehaus.jackson.map.DeserializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>($r2);

        specialinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r1);

        return $r4;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r3;
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r1 = new org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r3);

        specialinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r2);

        return $r1;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.introspect.VisibilityChecker $r3;
        org.codehaus.jackson.map.DeserializationConfig r0, $r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r1 = new org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r0.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r3);

        specialinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r0, $r2);

        return $r1;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r1);

        return r0;
    }
}
