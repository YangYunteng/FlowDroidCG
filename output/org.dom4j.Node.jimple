public interface  org.dom4j.Node extends java.lang.Object implements java.lang.Cloneable
{
    public static final short ANY_NODE;
    public static final short ATTRIBUTE_NODE;
    public static final short CDATA_SECTION_NODE;
    public static final short COMMENT_NODE;
    public static final short DOCUMENT_NODE;
    public static final short DOCUMENT_TYPE_NODE;
    public static final short ELEMENT_NODE;
    public static final short ENTITY_REFERENCE_NODE;
    public static final short MAX_NODE_TYPE;
    public static final short NAMESPACE_NODE;
    public static final short PROCESSING_INSTRUCTION_NODE;
    public static final short TEXT_NODE;
    public static final short UNKNOWN_NODE;

    public abstract void accept(org.dom4j.Visitor);

    public abstract java.lang.String asXML();

    public abstract org.dom4j.Node asXPathResult(org.dom4j.Element);

    public abstract java.lang.Object clone();

    public abstract org.dom4j.XPath createXPath(java.lang.String);

    public abstract org.dom4j.Node detach();

    public abstract org.dom4j.Document getDocument();

    public abstract java.lang.String getName();

    public abstract short getNodeType();

    public abstract java.lang.String getNodeTypeName();

    public abstract org.dom4j.Element getParent();

    public abstract java.lang.String getPath();

    public abstract java.lang.String getPath(org.dom4j.Element);

    public abstract java.lang.String getStringValue();

    public abstract java.lang.String getText();

    public abstract java.lang.String getUniquePath();

    public abstract java.lang.String getUniquePath(org.dom4j.Element);

    public abstract boolean hasContent();

    public abstract boolean isReadOnly();

    public abstract boolean matches(java.lang.String);

    public abstract java.lang.Number numberValueOf(java.lang.String);

    public abstract java.util.List selectNodes(java.lang.String);

    public abstract java.util.List selectNodes(java.lang.String, java.lang.String);

    public abstract java.util.List selectNodes(java.lang.String, java.lang.String, boolean);

    public abstract java.lang.Object selectObject(java.lang.String);

    public abstract org.dom4j.Node selectSingleNode(java.lang.String);

    public abstract void setDocument(org.dom4j.Document);

    public abstract void setName(java.lang.String);

    public abstract void setParent(org.dom4j.Element);

    public abstract void setText(java.lang.String);

    public abstract boolean supportsParent();

    public abstract java.lang.String valueOf(java.lang.String);

    public abstract void write(java.io.Writer);

    public static void <clinit>()
    {
        <org.dom4j.Node: short UNKNOWN_NODE> = 14;

        <org.dom4j.Node: short TEXT_NODE> = 3;

        <org.dom4j.Node: short PROCESSING_INSTRUCTION_NODE> = 7;

        <org.dom4j.Node: short NAMESPACE_NODE> = 13;

        <org.dom4j.Node: short MAX_NODE_TYPE> = 14;

        <org.dom4j.Node: short ENTITY_REFERENCE_NODE> = 5;

        <org.dom4j.Node: short ELEMENT_NODE> = 1;

        <org.dom4j.Node: short DOCUMENT_TYPE_NODE> = 10;

        <org.dom4j.Node: short DOCUMENT_NODE> = 9;

        <org.dom4j.Node: short COMMENT_NODE> = 8;

        <org.dom4j.Node: short CDATA_SECTION_NODE> = 4;

        <org.dom4j.Node: short ATTRIBUTE_NODE> = 2;

        <org.dom4j.Node: short ANY_NODE> = 0;

        return;
    }
}
