public final class b.i.b.a.d extends java.lang.Object
{

    public static android.graphics.Shader$TileMode a(int)
    {
        int $i0;
        android.graphics.Shader$TileMode r0;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        return r0;

     label1:
        r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        return r0;

     label2:
        r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        return r0;
    }

    public static android.graphics.Shader a(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.graphics.RadialGradient $r14;
        android.util.AttributeSet $r2;
        byte $b6;
        int[] $r5;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;
        b.i.b.a.d$a $r7;
        org.xmlpull.v1.XmlPullParserException $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.StringBuilder $r10, $r16;
        android.graphics.Shader$TileMode $r9;
        float[] $r8;
        android.content.res.TypedArray $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r11;
        android.graphics.SweepGradient $r13;
        android.content.res.Resources$Theme $r3;
        android.graphics.LinearGradient $r12;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: android.content.res.Resources$Theme;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z0 == 0 goto label4;

        $r5 = <b.i.d: int[] GradientColor>;

        $r6 = staticinvoke <b.i.b.a.i: android.content.res.TypedArray a(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r0, $r3, $r2, $r5);

        $i0 = <b.i.d: int GradientColor_android_startX>;

        $f0 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "startX", $i0, 0.0F);

        $i0 = <b.i.d: int GradientColor_android_startY>;

        $f1 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "startY", $i0, 0.0F);

        $i0 = <b.i.d: int GradientColor_android_endX>;

        $f2 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "endX", $i0, 0.0F);

        $i0 = <b.i.d: int GradientColor_android_endY>;

        $f3 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "endY", $i0, 0.0F);

        $i0 = <b.i.d: int GradientColor_android_centerX>;

        $f4 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "centerX", $i0, 0.0F);

        $i0 = <b.i.d: int GradientColor_android_centerY>;

        $f5 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "centerY", $i0, 0.0F);

        $i0 = <b.i.d: int GradientColor_android_type>;

        $i0 = staticinvoke <b.i.b.a.i: int b(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "type", $i0, 0);

        $i1 = <b.i.d: int GradientColor_android_startColor>;

        $i1 = staticinvoke <b.i.b.a.i: int a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "startColor", $i1, 0);

        $z0 = staticinvoke <b.i.b.a.i: boolean a(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r1, "centerColor");

        $i2 = <b.i.d: int GradientColor_android_centerColor>;

        $i2 = staticinvoke <b.i.b.a.i: int a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "centerColor", $i2, 0);

        $i3 = <b.i.d: int GradientColor_android_endColor>;

        $i3 = staticinvoke <b.i.b.a.i: int a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "endColor", $i3, 0);

        $i4 = <b.i.d: int GradientColor_android_tileMode>;

        $i4 = staticinvoke <b.i.b.a.i: int b(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "tileMode", $i4, 0);

        $i5 = <b.i.d: int GradientColor_android_gradientRadius>;

        $f6 = staticinvoke <b.i.b.a.i: float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "gradientRadius", $i5, 0.0F);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r7 = staticinvoke <b.i.b.a.d: b.i.b.a.d$a b(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r2, $r3);

        $r7 = staticinvoke <b.i.b.a.d: b.i.b.a.d$a a(b.i.b.a.d$a,int,int,boolean,int)>($r7, $i1, $i3, $z0, $i2);

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        $r12 = new android.graphics.LinearGradient;

        $r5 = $r7.<b.i.b.a.d$a: int[] a>;

        $r8 = $r7.<b.i.b.a.d$a: float[] b>;

        $r9 = staticinvoke <b.i.b.a.d: android.graphics.Shader$TileMode a(int)>($i4);

        specialinvoke $r12.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, $f1, $f2, $f3, $r5, $r8, $r9);

        return $r12;

     label1:
        $r13 = new android.graphics.SweepGradient;

        $r5 = $r7.<b.i.b.a.d$a: int[] a>;

        $r8 = $r7.<b.i.b.a.d$a: float[] b>;

        specialinvoke $r13.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f4, $f5, $r5, $r8);

        return $r13;

     label2:
        $b6 = $f6 cmpg 0.0F;

        $i0 = (int) $b6;

        if $i0 <= 0 goto label3;

        $r14 = new android.graphics.RadialGradient;

        $r5 = $r7.<b.i.b.a.d$a: int[] a>;

        $r8 = $r7.<b.i.b.a.d$a: float[] b>;

        $r9 = staticinvoke <b.i.b.a.d: android.graphics.Shader$TileMode a(int)>($i4);

        specialinvoke $r14.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f4, $f5, $f6, $r5, $r8, $r9);

        return $r14;

     label3:
        $r15 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("<gradient> tag requires \'gradientRadius\' attribute with radial type");

        throw $r15;

     label4:
        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        $r10 = $r16;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid gradient color tag ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r15;
    }

    public static b.i.b.a.d$a a(b.i.b.a.d$a, int, int, boolean, int)
    {
        b.i.b.a.d$a $r0;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: b.i.b.a.d$a;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        if $r0 == null goto label1;

        return $r0;

     label1:
        if $z0 == 0 goto label2;

        $r0 = new b.i.b.a.d$a;

        specialinvoke $r0.<b.i.b.a.d$a: void <init>(int,int,int)>($i0, $i2, $i1);

        return $r0;

     label2:
        $r0 = new b.i.b.a.d$a;

        specialinvoke $r0.<b.i.b.a.d$a: void <init>(int,int)>($i0, $i1);

        return $r0;
    }

    public static b.i.b.a.d$a b(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        java.lang.Float $r10;
        java.lang.Integer $r9;
        java.util.ArrayList $r1, $r2;
        android.content.res.TypedArray $r8;
        android.util.AttributeSet $r5;
        int[] $r7;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        android.content.res.Resources$Theme $r0;
        org.xmlpull.v1.XmlPullParser $r4;
        boolean $z0, $z1;
        b.i.b.a.d$a $r13;
        org.xmlpull.v1.XmlPullParserException $r11;
        float $f0;
        java.lang.StringBuilder $r12;
        android.content.res.Resources $r3;

        $r3 := @parameter0: android.content.res.Resources;

        $r4 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r5 := @parameter2: android.util.AttributeSet;

        $r0 := @parameter3: android.content.res.Resources$Theme;

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(20);

     label1:
        $i1 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        $i2 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label2;

        if $i1 == 3 goto label6;

     label2:
        if $i1 == 2 goto label3;

        goto label1;

     label3:
        if $i2 > $i0 goto label1;

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label4;

        goto label1;

     label4:
        $r7 = <b.i.d: int[] GradientColorItem>;

        $r8 = staticinvoke <b.i.b.a.i: android.content.res.TypedArray a(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r3, $r0, $r5, $r7);

        $i1 = <b.i.d: int GradientColorItem_android_color>;

        $z0 = virtualinvoke $r8.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        $i1 = <b.i.d: int GradientColorItem_android_offset>;

        $z1 = virtualinvoke $r8.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label5;

        if $z1 == 0 goto label5;

        $i1 = <b.i.d: int GradientColorItem_android_color>;

        $i1 = virtualinvoke $r8.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        $i2 = <b.i.d: int GradientColorItem_android_offset>;

        $f0 = virtualinvoke $r8.<android.content.res.TypedArray: float getFloat(int,float)>($i2, 0.0F);

        virtualinvoke $r8.<android.content.res.TypedArray: void recycle()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label5:
        $r11 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'color\' attribute and a \'offset\' attribute!");

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r11;

     label6:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label7;

        $r13 = new b.i.b.a.d$a;

        specialinvoke $r13.<b.i.b.a.d$a: void <init>(java.util.List,java.util.List)>($r2, $r1);

        return $r13;

     label7:
        return null;
    }
}
