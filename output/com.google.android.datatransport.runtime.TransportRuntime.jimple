public class com.google.android.datatransport.runtime.TransportRuntime extends java.lang.Object implements com.google.android.datatransport.runtime.TransportInternal
{
    public static volatile com.google.android.datatransport.runtime.TransportRuntimeComponent instance;
    public final com.google.android.datatransport.runtime.time.Clock eventClock;
    public final com.google.android.datatransport.runtime.scheduling.Scheduler scheduler;
    public final com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader uploader;
    public final com.google.android.datatransport.runtime.time.Clock uptimeClock;

    static void <clinit>()
    {
        return;
    }

    public void <init>(com.google.android.datatransport.runtime.time.Clock, com.google.android.datatransport.runtime.time.Clock, com.google.android.datatransport.runtime.scheduling.Scheduler, com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader, com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)
    {
        com.google.android.datatransport.runtime.time.Clock $r1, $r2;
        com.google.android.datatransport.runtime.scheduling.Scheduler $r3;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader $r4;
        com.google.android.datatransport.runtime.TransportRuntime r0;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer $r5;

        r0 := @this: com.google.android.datatransport.runtime.TransportRuntime;

        $r1 := @parameter0: com.google.android.datatransport.runtime.time.Clock;

        $r2 := @parameter1: com.google.android.datatransport.runtime.time.Clock;

        $r3 := @parameter2: com.google.android.datatransport.runtime.scheduling.Scheduler;

        $r4 := @parameter3: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader;

        $r5 := @parameter4: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.time.Clock eventClock> = $r1;

        r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.time.Clock uptimeClock> = $r2;

        r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.Scheduler scheduler> = $r3;

        r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader uploader> = $r4;

        virtualinvoke $r5.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()>();

        return;
    }

    private com.google.android.datatransport.runtime.EventInternal convert(com.google.android.datatransport.runtime.SendRequest)
    {
        com.google.android.datatransport.runtime.time.Clock $r3;
        byte[] $r7;
        com.google.android.datatransport.runtime.EventInternal$Builder $r2;
        com.google.android.datatransport.runtime.TransportRuntime r0;
        com.google.android.datatransport.Event $r8;
        long $l0;
        com.google.android.datatransport.runtime.SendRequest $r1;
        java.lang.Integer $r9;
        com.google.android.datatransport.runtime.EventInternal $r10;
        com.google.android.datatransport.runtime.EncodedPayload $r5;
        com.google.android.datatransport.Encoding $r6;
        java.lang.String $r4;

        r0 := @this: com.google.android.datatransport.runtime.TransportRuntime;

        $r1 := @parameter0: com.google.android.datatransport.runtime.SendRequest;

        $r2 = staticinvoke <com.google.android.datatransport.runtime.EventInternal: com.google.android.datatransport.runtime.EventInternal$Builder builder()>();

        $r3 = r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.time.Clock eventClock>;

        $l0 = interfaceinvoke $r3.<com.google.android.datatransport.runtime.time.Clock: long getTime()>();

        $r2 = virtualinvoke $r2.<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setEventMillis(long)>($l0);

        $r3 = r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.time.Clock uptimeClock>;

        $l0 = interfaceinvoke $r3.<com.google.android.datatransport.runtime.time.Clock: long getTime()>();

        $r2 = virtualinvoke $r2.<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setUptimeMillis(long)>($l0);

        $r4 = virtualinvoke $r1.<com.google.android.datatransport.runtime.SendRequest: java.lang.String getTransportName()>();

        $r2 = virtualinvoke $r2.<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setTransportName(java.lang.String)>($r4);

        $r5 = new com.google.android.datatransport.runtime.EncodedPayload;

        $r6 = virtualinvoke $r1.<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.Encoding getEncoding()>();

        $r7 = virtualinvoke $r1.<com.google.android.datatransport.runtime.SendRequest: byte[] getPayload()>();

        specialinvoke $r5.<com.google.android.datatransport.runtime.EncodedPayload: void <init>(com.google.android.datatransport.Encoding,byte[])>($r6, $r7);

        $r2 = virtualinvoke $r2.<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setEncodedPayload(com.google.android.datatransport.runtime.EncodedPayload)>($r5);

        $r8 = virtualinvoke $r1.<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.Event getEvent()>();

        $r9 = virtualinvoke $r8.<com.google.android.datatransport.Event: java.lang.Integer getCode()>();

        $r2 = virtualinvoke $r2.<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setCode(java.lang.Integer)>($r9);

        $r10 = virtualinvoke $r2.<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal build()>();

        return $r10;
    }

    public static com.google.android.datatransport.runtime.TransportRuntime getInstance()
    {
        java.lang.IllegalStateException $r2;
        com.google.android.datatransport.runtime.TransportRuntime $r0;
        com.google.android.datatransport.runtime.TransportRuntimeComponent $r1;

        $r1 = <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance>;

        if $r1 == null goto label1;

        $r0 = virtualinvoke $r1.<com.google.android.datatransport.runtime.TransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntime getTransportRuntime()>();

        return $r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not initialized!");

        throw $r2;
    }

    public static java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)
    {
        com.google.android.datatransport.runtime.EncodedDestination $r1;
        java.util.Set $r2;
        com.google.android.datatransport.Encoding $r3;
        com.google.android.datatransport.runtime.Destination $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.datatransport.runtime.Destination;

        $z0 = $r0 instanceof com.google.android.datatransport.runtime.EncodedDestination;

        if $z0 == 0 goto label1;

        $r1 = (com.google.android.datatransport.runtime.EncodedDestination) $r0;

        $r2 = interfaceinvoke $r1.<com.google.android.datatransport.runtime.EncodedDestination: java.util.Set getSupportedEncodings()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        return $r2;

     label1:
        $r3 = staticinvoke <com.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)>("proto");

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3);

        return $r2;
    }

    public static void initialize(android.content.Context)
    {
        com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder $r2;
        java.lang.Throwable $r3;
        android.content.Context $r0;
        com.google.android.datatransport.runtime.TransportRuntimeComponent $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance>;

        if $r1 != null goto label6;

        entermonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label1:
        $r1 = <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance>;

        if $r1 != null goto label2;

        $r2 = staticinvoke <com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder builder()>();

        $r2 = interfaceinvoke $r2.<com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)>($r0);

        $r1 = interfaceinvoke $r2.<com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()>();

        <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance> = $r1;

     label2:
        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label5:
        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void withInstance(com.google.android.datatransport.runtime.TransportRuntimeComponent, java.util.concurrent.Callable)
    {
        java.lang.Throwable $r3, $r4, $r5, $r6;
        com.google.android.datatransport.runtime.TransportRuntimeComponent $r0, $r1;
        java.util.concurrent.Callable $r2;

        $r1 := @parameter0: com.google.android.datatransport.runtime.TransportRuntimeComponent;

        $r2 := @parameter1: java.util.concurrent.Callable;

        entermonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label01:
        $r0 = <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance>;

        <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance> = $r1;

        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label02:
        interfaceinvoke $r2.<java.util.concurrent.Callable: java.lang.Object call()>();

     label03:
        entermonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label04:
        <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance> = $r0;

        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label05:
        return;

     label06:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label07:
        throw $r3;

     label08:
        $r4 := @caughtexception;

        entermonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label09:
        <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance> = $r0;

        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label10:
        throw $r4;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label13:
        throw $r5;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor class "Lcom/google/android/datatransport/runtime/TransportRuntime;";

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader getUploader()
    {
        com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader r1;
        com.google.android.datatransport.runtime.TransportRuntime r0;

        r0 := @this: com.google.android.datatransport.runtime.TransportRuntime;

        r1 = r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader uploader>;

        return r1;
    }

    public com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)
    {
        byte[] $r6;
        com.google.android.datatransport.runtime.TransportRuntime r0;
        com.google.android.datatransport.runtime.TransportContext$Builder $r4;
        java.util.Set $r3;
        com.google.android.datatransport.runtime.TransportContext $r7;
        com.google.android.datatransport.runtime.TransportFactoryImpl $r1;
        java.lang.String $r5;
        com.google.android.datatransport.runtime.Destination $r2;

        r0 := @this: com.google.android.datatransport.runtime.TransportRuntime;

        $r2 := @parameter0: com.google.android.datatransport.runtime.Destination;

        $r1 = new com.google.android.datatransport.runtime.TransportFactoryImpl;

        $r3 = staticinvoke <com.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)>($r2);

        $r4 = staticinvoke <com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()>();

        $r5 = interfaceinvoke $r2.<com.google.android.datatransport.runtime.Destination: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)>($r5);

        $r6 = interfaceinvoke $r2.<com.google.android.datatransport.runtime.Destination: byte[] getExtras()>();

        $r4 = virtualinvoke $r4.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setExtras(byte[])>($r6);

        $r7 = virtualinvoke $r4.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()>();

        specialinvoke $r1.<com.google.android.datatransport.runtime.TransportFactoryImpl: void <init>(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)>($r3, $r7, r0);

        return $r1;
    }

    public com.google.android.datatransport.TransportFactory newFactory(java.lang.String)
    {
        com.google.android.datatransport.runtime.TransportContext $r5;
        com.google.android.datatransport.runtime.TransportFactoryImpl $r1;
        com.google.android.datatransport.runtime.TransportRuntime r0;
        com.google.android.datatransport.runtime.TransportContext$Builder $r4;
        java.util.Set $r3;
        java.lang.String $r2;

        r0 := @this: com.google.android.datatransport.runtime.TransportRuntime;

        $r2 := @parameter0: java.lang.String;

        $r1 = new com.google.android.datatransport.runtime.TransportFactoryImpl;

        $r3 = staticinvoke <com.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)>(null);

        $r4 = staticinvoke <com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()>();

        $r4 = virtualinvoke $r4.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()>();

        specialinvoke $r1.<com.google.android.datatransport.runtime.TransportFactoryImpl: void <init>(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)>($r3, $r5, r0);

        return $r1;
    }

    public void send(com.google.android.datatransport.runtime.SendRequest, com.google.android.datatransport.TransportScheduleCallback)
    {
        com.google.android.datatransport.runtime.scheduling.Scheduler $r2;
        com.google.android.datatransport.runtime.TransportRuntime r0;
        com.google.android.datatransport.Event $r5;
        com.google.android.datatransport.Priority $r6;
        com.google.android.datatransport.runtime.SendRequest $r3;
        com.google.android.datatransport.runtime.TransportContext $r4;
        com.google.android.datatransport.runtime.EventInternal $r7;
        com.google.android.datatransport.TransportScheduleCallback $r1;

        r0 := @this: com.google.android.datatransport.runtime.TransportRuntime;

        $r3 := @parameter0: com.google.android.datatransport.runtime.SendRequest;

        $r1 := @parameter1: com.google.android.datatransport.TransportScheduleCallback;

        $r2 = r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.Scheduler scheduler>;

        $r4 = virtualinvoke $r3.<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.runtime.TransportContext getTransportContext()>();

        $r5 = virtualinvoke $r3.<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.Event getEvent()>();

        $r6 = virtualinvoke $r5.<com.google.android.datatransport.Event: com.google.android.datatransport.Priority getPriority()>();

        $r4 = virtualinvoke $r4.<com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext withPriority(com.google.android.datatransport.Priority)>($r6);

        $r7 = specialinvoke r0.<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.EventInternal convert(com.google.android.datatransport.runtime.SendRequest)>($r3);

        interfaceinvoke $r2.<com.google.android.datatransport.runtime.scheduling.Scheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal,com.google.android.datatransport.TransportScheduleCallback)>($r4, $r7, $r1);

        return;
    }
}
