public class c.d.b.c extends java.lang.Object implements java.lang.Runnable
{
    public final java.lang.String a;
    public final c.d.b.d b;

    public void <init>(c.d.b.d, java.lang.String)
    {
        java.lang.String $r2;
        c.d.b.d $r1;
        c.d.b.c r0;

        r0 := @this: c.d.b.c;

        $r1 := @parameter0: c.d.b.d;

        $r2 := @parameter1: java.lang.String;

        r0.<c.d.b.c: c.d.b.d b> = $r1;

        r0.<c.d.b.c: java.lang.String a> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.io.PrintStream $r3;
        java.lang.Exception $r2;
        org.json.JSONObject $r5;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        c.d.b.d $r6;
        c.d.b.c r0;
        c.d.b.b $r7;

        r0 := @this: c.d.b.c;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("js result from Fast");

        $r1 = r0.<c.d.b.c: java.lang.String a>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r5 = new org.json.JSONObject;

     label1:
        $r1 = r0.<c.d.b.c: java.lang.String a>;

        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r6 = r0.<c.d.b.c: c.d.b.d b>;

        $r7 = $r6.<c.d.b.d: c.d.b.b a>;

     label2:
        $i0 = <c.d.b.b: int a>;

     label3:
        $r1 = r0.<c.d.b.c: java.lang.String a>;

        virtualinvoke $r7.<c.d.b.b: void a(int,java.lang.String)>($i0, $r1);

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
