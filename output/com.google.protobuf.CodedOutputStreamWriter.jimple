public final class com.google.protobuf.CodedOutputStreamWriter extends java.lang.Object implements com.google.protobuf.Writer
{
    public final com.google.protobuf.CodedOutputStream output;

    public void <init>(com.google.protobuf.CodedOutputStream)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $r1 := @parameter0: com.google.protobuf.CodedOutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r1, "output");

        r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output> = $r1;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r1.<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper> = r0;

        return;
    }

    public static com.google.protobuf.CodedOutputStreamWriter forCodedOutput(com.google.protobuf.CodedOutputStream)
    {
        com.google.protobuf.CodedOutputStreamWriter $r1;
        com.google.protobuf.CodedOutputStream $r0;

        $r0 := @parameter0: com.google.protobuf.CodedOutputStream;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r1 = new com.google.protobuf.CodedOutputStreamWriter;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStreamWriter: void <init>(com.google.protobuf.CodedOutputStream)>($r0);

        return $r1;
    }

    private void writeDeterministicBooleanMapEntry(int, boolean, java.lang.Object, com.google.protobuf.MapEntryLite$Metadata)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        java.lang.Boolean $r4;
        java.lang.Object $r1;
        com.google.protobuf.CodedOutputStream $r3;
        com.google.protobuf.MapEntryLite$Metadata $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object;

        $r2 := @parameter3: com.google.protobuf.MapEntryLite$Metadata;

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r3.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $i0 = staticinvoke <com.google.protobuf.MapEntryLite: int computeSerializedSize(com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r2, $r4, $r1);

        virtualinvoke $r3.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        staticinvoke <com.google.protobuf.MapEntryLite: void writeTo(com.google.protobuf.CodedOutputStream,com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r3, $r2, $r4, $r1);

        return;
    }

    private void writeDeterministicIntegerMap(int, com.google.protobuf.MapEntryLite$Metadata, java.util.Map)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Integer $r7;
        int[] $r3;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r6;
        com.google.protobuf.CodedOutputStream $r8;
        com.google.protobuf.MapEntryLite$Metadata $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MapEntryLite$Metadata;

        $r2 := @parameter2: java.util.Map;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = newarray (int)[$i1];

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.Integer) $r6;

        $i3 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r3[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(int[])>($r3);

        $i2 = lengthof $r3;

     label3:
        if $i1 >= $i2 goto label4;

        $i3 = $r3[$i1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r8.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $i4 = staticinvoke <com.google.protobuf.MapEntryLite: int computeSerializedSize(com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r1, $r7, $r6);

        virtualinvoke $r8.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i4);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        staticinvoke <com.google.protobuf.MapEntryLite: void writeTo(com.google.protobuf.CodedOutputStream,com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r8, $r1, $r7, $r6);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void writeDeterministicLongMap(int, com.google.protobuf.MapEntryLite$Metadata, java.util.Map)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        long $l3;
        long[] $r3;
        java.lang.Long $r7;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i4;
        java.lang.Object $r6;
        com.google.protobuf.CodedOutputStream $r8;
        com.google.protobuf.MapEntryLite$Metadata $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MapEntryLite$Metadata;

        $r2 := @parameter2: java.util.Map;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = newarray (long)[$i1];

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.Long) $r6;

        $l3 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r3[$i2] = $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(long[])>($r3);

        $i2 = lengthof $r3;

     label3:
        if $i1 >= $i2 goto label4;

        $l3 = $r3[$i1];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r8.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $i4 = staticinvoke <com.google.protobuf.MapEntryLite: int computeSerializedSize(com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r1, $r7, $r6);

        virtualinvoke $r8.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i4);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        staticinvoke <com.google.protobuf.MapEntryLite: void writeTo(com.google.protobuf.CodedOutputStream,com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r8, $r1, $r7, $r6);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void writeDeterministicMap(int, com.google.protobuf.MapEntryLite$Metadata, java.util.Map)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.IllegalArgumentException $r5;
        int[] $r3;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.Boolean $r8;
        com.google.protobuf.WireFormat$FieldType $r4;
        java.lang.StringBuilder $r6;
        java.lang.Object $r9;
        java.lang.String $r7;
        com.google.protobuf.MapEntryLite$Metadata $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MapEntryLite$Metadata;

        $r2 := @parameter2: java.util.Map;

        $r3 = <com.google.protobuf.CodedOutputStreamWriter$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r4 = $r1.<com.google.protobuf.MapEntryLite$Metadata: com.google.protobuf.WireFormat$FieldType keyType>;

        $i1 = virtualinvoke $r4.<java.lang.Enum: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not support key type: ");

        $r4 = $r1.<com.google.protobuf.MapEntryLite$Metadata: com.google.protobuf.WireFormat$FieldType keyType>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label2:
        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicStringMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)>($i0, $r1, $r2);

        return;

     label3:
        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicLongMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)>($i0, $r1, $r2);

        return;

     label4:
        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicIntegerMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)>($i0, $r1, $r2);

        return;

     label5:
        $r8 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        if $r9 == null goto label6;

        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicBooleanMapEntry(int,boolean,java.lang.Object,com.google.protobuf.MapEntryLite$Metadata)>($i0, 0, $r9, $r1);

     label6:
        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        if $r9 == null goto label7;

        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicBooleanMapEntry(int,boolean,java.lang.Object,com.google.protobuf.MapEntryLite$Metadata)>($i0, 1, $r9, $r1);

     label7:
        return;
    }

    private void writeDeterministicStringMap(int, com.google.protobuf.MapEntryLite$Metadata, java.util.Map)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.String[] $r3;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r6;
        java.lang.String $r7;
        com.google.protobuf.CodedOutputStream $r8;
        com.google.protobuf.MapEntryLite$Metadata $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MapEntryLite$Metadata;

        $r2 := @parameter2: java.util.Map;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = newarray (java.lang.String)[$i1];

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r3[$i2] = $r7;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r3);

        $i2 = lengthof $r3;

     label3:
        if $i1 >= $i2 goto label4;

        $r7 = $r3[$i1];

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r8.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $i3 = staticinvoke <com.google.protobuf.MapEntryLite: int computeSerializedSize(com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r1, $r7, $r6);

        virtualinvoke $r8.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i3);

        $r8 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        staticinvoke <com.google.protobuf.MapEntryLite: void writeTo(com.google.protobuf.CodedOutputStream,com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r8, $r1, $r7, $r6);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void writeLazyString(int, java.lang.Object)
    {
        com.google.protobuf.ByteString $r4;
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = (java.lang.String) $r1;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>($i0, $r3);

        return;

     label1:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r4 = (com.google.protobuf.ByteString) $r1;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>($i0, $r4);

        return;
    }

    public com.google.protobuf.Writer$FieldOrder fieldOrder()
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.Writer$FieldOrder r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        r1 = <com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder ASCENDING>;

        return r1;
    }

    public int getTotalBytesWritten()
    {
        int $i0;
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $i0 = virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: int getTotalBytesWritten()>();

        return $i0;
    }

    public void writeBool(int, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        com.google.protobuf.CodedOutputStream $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeBool(int,boolean)>($i0, $z0);

        return;
    }

    public void writeBoolList(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r4;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)>($z0);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeBoolNoTag(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeBool(int,boolean)>($i0, $z0);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeBytes(int, com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString $r1;
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>($i0, $r1);

        return;
    }

    public void writeBytesList(int, java.util.List)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.ByteString $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (com.google.protobuf.ByteString) $r3;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>($i0, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeDouble(int, double)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        com.google.protobuf.CodedOutputStream $r1;
        double $d0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeDouble(int,double)>($i0, $d0);

        return;
    }

    public void writeDoubleList(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Double $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)>($d0);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeDoubleNoTag(double)>($d0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeDouble(int,double)>($i0, $d0);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeEndGroup(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 4);

        return;
    }

    public void writeEnum(int, int)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeEnum(int,int)>($i0, $i1);

        return;
    }

    public void writeEnumList(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>($i3);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeEnumNoTag(int)>($i0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeEnum(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeFixed32(int, int)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>($i0, $i1);

        return;
    }

    public void writeFixed32List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)>($i3);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeFixed64(int, long)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>($i0, $l1);

        return;
    }

    public void writeFixed64List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        long $l4;
        java.util.List $r1;
        java.lang.Long $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)>($l4);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>($i0, $l4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeFloat(int, float)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        float $f0;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeFloat(int,float)>($i0, $f0);

        return;
    }

    public void writeFloatList(int, java.util.List, boolean)
    {
        java.lang.Float $r4;
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)>($f0);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeFloatNoTag(float)>($f0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeFloat(int,float)>($i0, $f0);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeGroup(int, java.lang.Object)
    {
        com.google.protobuf.MessageLite $r3;
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        java.lang.Object $r2;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = (com.google.protobuf.MessageLite) $r2;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeGroup(int,com.google.protobuf.MessageLite)>($i0, $r3);

        return;
    }

    public void writeGroup(int, java.lang.Object, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r4;
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.Schema $r1;
        int $i0;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: com.google.protobuf.Schema;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r4 = (com.google.protobuf.MessageLite) $r3;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeGroup(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($i0, $r4, $r1);

        return;
    }

    public void writeGroupList(int, java.util.List)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeGroup(int,java.lang.Object)>($i0, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeGroupList(int, java.util.List, com.google.protobuf.Schema)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        com.google.protobuf.Schema $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: com.google.protobuf.Schema;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeGroup(int,java.lang.Object,com.google.protobuf.Schema)>($i0, $r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeInt32(int, int)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>($i0, $i1);

        return;
    }

    public void writeInt32List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>($i3);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>($i0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeInt64(int, long)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeInt64(int,long)>($i0, $l1);

        return;
    }

    public void writeInt64List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        long $l4;
        java.util.List $r1;
        java.lang.Long $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>($l4);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeInt64NoTag(long)>($l4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeInt64(int,long)>($i0, $l4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeMap(int, com.google.protobuf.MapEntryLite$Metadata, java.util.Map)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.Map$Entry $r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.Object $r6, $r8;
        com.google.protobuf.CodedOutputStream $r3;
        com.google.protobuf.MapEntryLite$Metadata $r1;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MapEntryLite$Metadata;

        $r2 := @parameter2: java.util.Map;

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $z0 = virtualinvoke $r3.<com.google.protobuf.CodedOutputStream: boolean isSerializationDeterministic()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)>($i0, $r1, $r2);

        return;

     label1:
        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r3.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $i1 = staticinvoke <com.google.protobuf.MapEntryLite: int computeSerializedSize(com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r1, $r6, $r8);

        virtualinvoke $r3.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i1);

        $r3 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <com.google.protobuf.MapEntryLite: void writeTo(com.google.protobuf.CodedOutputStream,com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)>($r3, $r1, $r6, $r8);

        goto label2;

     label3:
        return;
    }

    public void writeMessage(int, java.lang.Object)
    {
        com.google.protobuf.MessageLite $r3;
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        java.lang.Object $r2;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = (com.google.protobuf.MessageLite) $r2;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>($i0, $r3);

        return;
    }

    public void writeMessage(int, java.lang.Object, com.google.protobuf.Schema)
    {
        com.google.protobuf.MessageLite $r4;
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.Schema $r1;
        int $i0;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: com.google.protobuf.Schema;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r4 = (com.google.protobuf.MessageLite) $r3;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($i0, $r4, $r1);

        return;
    }

    public void writeMessageList(int, java.util.List)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeMessage(int,java.lang.Object)>($i0, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeMessageList(int, java.util.List, com.google.protobuf.Schema)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        com.google.protobuf.Schema $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: com.google.protobuf.Schema;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeMessage(int,java.lang.Object,com.google.protobuf.Schema)>($i0, $r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public final void writeMessageSetItem(int, java.lang.Object)
    {
        com.google.protobuf.ByteString $r3;
        com.google.protobuf.MessageLite $r4;
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        java.lang.Object $r1;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof com.google.protobuf.ByteString;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = (com.google.protobuf.ByteString) $r1;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeRawMessageSetExtension(int,com.google.protobuf.ByteString)>($i0, $r3);

        return;

     label1:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r4 = (com.google.protobuf.MessageLite) $r1;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeMessageSetExtension(int,com.google.protobuf.MessageLite)>($i0, $r4);

        return;
    }

    public void writeSFixed32(int, int)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeSFixed32(int,int)>($i0, $i1);

        return;
    }

    public void writeSFixed32List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)>($i3);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSFixed32NoTag(int)>($i0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSFixed32(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeSFixed64(int, long)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeSFixed64(int,long)>($i0, $l1);

        return;
    }

    public void writeSFixed64List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        long $l4;
        java.util.List $r1;
        java.lang.Long $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)>($l4);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSFixed64NoTag(long)>($l4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSFixed64(int,long)>($i0, $l4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeSInt32(int, int)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeSInt32(int,int)>($i0, $i1);

        return;
    }

    public void writeSInt32List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)>($i3);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSInt32NoTag(int)>($i0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSInt32(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeSInt64(int, long)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeSInt64(int,long)>($i0, $l1);

        return;
    }

    public void writeSInt64List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        long $l4;
        java.util.List $r1;
        java.lang.Long $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)>($l4);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSInt64NoTag(long)>($l4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeSInt64(int,long)>($i0, $l4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeStartGroup(int)
    {
        int $i0;
        com.google.protobuf.CodedOutputStreamWriter r0;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 3);

        return;
    }

    public void writeString(int, java.lang.String)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        java.lang.String $r1;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>($i0, $r1);

        return;
    }

    public void writeStringList(int, java.util.List)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.util.List $r1;
        com.google.protobuf.LazyStringList $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        java.lang.String $r5;
        com.google.protobuf.CodedOutputStream $r4;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 = $r1 instanceof com.google.protobuf.LazyStringList;

        $i1 = 0;

        if $z0 == 0 goto label2;

        $r2 = (com.google.protobuf.LazyStringList) $r1;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $r3 = interfaceinvoke $r2.<com.google.protobuf.LazyStringList: java.lang.Object getRaw(int)>($i1);

        specialinvoke r0.<com.google.protobuf.CodedOutputStreamWriter: void writeLazyString(int,java.lang.Object)>($i0, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $r4 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (java.lang.String) $r3;

        virtualinvoke $r4.<com.google.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>($i0, $r5);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void writeUInt32(int, int)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>($i0, $i1);

        return;
    }

    public void writeUInt32List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        java.lang.Integer $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i3);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void writeUInt64(int, long)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        int $i0;
        long $l1;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>($i0, $l1);

        return;
    }

    public void writeUInt64List(int, java.util.List, boolean)
    {
        com.google.protobuf.CodedOutputStreamWriter r0;
        long $l4;
        java.util.List $r1;
        java.lang.Long $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.CodedOutputStream $r2;
        boolean $z0;

        r0 := @this: com.google.protobuf.CodedOutputStreamWriter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        $i0 = 0;

        $i2 = 0;

     label1:
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l4);

        $i2 = $i2 + $i3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i2);

     label3:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label5;

        $r2 = r0.<com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Long) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>($i0, $l4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }
}
