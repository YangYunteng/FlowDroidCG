public abstract class i.c.b.a.i extends i.c.b.a.a
{

    public void <init>(i.c.e)
    {
        i.c.j $r3;
        i.c.h $r1;
        i.c.b.a.i r0;
        i.c.e $r2;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;

        r0 := @this: i.c.b.a.i;

        $r2 := @parameter0: i.c.e;

        specialinvoke r0.<i.c.b.a.a: void <init>(i.c.e)>($r2);

        if $r2 == null goto label4;

        $r1 = interfaceinvoke $r2.<i.c.e: i.c.h getContext()>();

        $r3 = <i.c.j: i.c.j a>;

        if $r1 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Coroutines with restricted suspension must have EmptyCoroutineContext");

        throw $r4;

     label4:
        return;
    }

    public i.c.h getContext()
    {
        i.c.b.a.i r0;
        i.c.j r1;

        r0 := @this: i.c.b.a.i;

        r1 = <i.c.j: i.c.j a>;

        return r1;
    }
}
