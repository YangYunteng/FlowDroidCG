public final class b.f.h$e extends java.lang.Object implements java.util.Collection
{
    public final b.f.h a;

    public void <init>(b.f.h)
    {
        b.f.h$e r0;
        b.f.h $r1;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: b.f.h;

        r0.<b.f.h$e: b.f.h a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean add(java.lang.Object)
    {
        b.f.h$e r0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean addAll(java.util.Collection)
    {
        b.f.h$e r0;
        java.lang.UnsupportedOperationException $r2;
        java.util.Collection $r1;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void clear()
    {
        b.f.h$e r0;
        b.f.h $r1;

        r0 := @this: b.f.h$e;

        $r1 = r0.<b.f.h$e: b.f.h a>;

        virtualinvoke $r1.<b.f.h: void a()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        b.f.h$e r0;
        int $i0;
        java.lang.Object $r2;
        b.f.h $r1;

        r0 := @this: b.f.h$e;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.f.h$e: b.f.h a>;

        $i0 = virtualinvoke $r1.<b.f.h: int b(java.lang.Object)>($r2);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean containsAll(java.util.Collection)
    {
        b.f.h$e r0;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: java.util.Collection;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = virtualinvoke r0.<b.f.h$e: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public boolean isEmpty()
    {
        b.f.h$e r0;
        int $i0;
        b.f.h $r1;

        r0 := @this: b.f.h$e;

        $r1 = r0.<b.f.h$e: b.f.h a>;

        $i0 = virtualinvoke $r1.<b.f.h: int c()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        b.f.h$e r0;
        b.f.h$a $r1;
        b.f.h $r2;

        r0 := @this: b.f.h$e;

        $r1 = new b.f.h$a;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        specialinvoke $r1.<b.f.h$a: void <init>(b.f.h,int)>($r2, 1);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        b.f.h$e r0;
        int $i0;
        java.lang.Object $r1;
        b.f.h $r2;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        $i0 = virtualinvoke $r2.<b.f.h: int b(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        virtualinvoke $r2.<b.f.h: void a(int)>($i0);

        return 1;

     label1:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        b.f.h$e r0;
        java.util.Collection $r1;
        b.f.h $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        $i0 = virtualinvoke $r2.<b.f.h: int c()>();

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        $r3 = virtualinvoke $r2.<b.f.h: java.lang.Object a(int,int)>($i1, 1);

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        virtualinvoke $r2.<b.f.h: void a(int)>($i1);

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i2 = -1;

        $i0 = $i0 + $i2;

        $z0 = 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        b.f.h$e r0;
        java.util.Collection $r1;
        b.f.h $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: b.f.h$e;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        $i0 = virtualinvoke $r2.<b.f.h: int c()>();

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        $r3 = virtualinvoke $r2.<b.f.h: java.lang.Object a(int,int)>($i1, 1);

        $z1 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        virtualinvoke $r2.<b.f.h: void a(int)>($i1);

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i2 = -1;

        $i0 = $i0 + $i2;

        $z0 = 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $z0;
    }

    public int size()
    {
        b.f.h$e r0;
        int $i0;
        b.f.h $r1;

        r0 := @this: b.f.h$e;

        $r1 = r0.<b.f.h$e: b.f.h a>;

        $i0 = virtualinvoke $r1.<b.f.h: int c()>();

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        b.f.h$e r0;
        java.lang.Object[] $r1;
        b.f.h $r2;

        r0 := @this: b.f.h$e;

        $r2 = r0.<b.f.h$e: b.f.h a>;

        $r1 = virtualinvoke $r2.<b.f.h: java.lang.Object[] b(int)>(1);

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        b.f.h$e r0;
        java.lang.Object[] $r2;
        b.f.h $r1;

        r0 := @this: b.f.h$e;

        $r2 := @parameter0: java.lang.Object[];

        $r1 = r0.<b.f.h$e: b.f.h a>;

        $r2 = virtualinvoke $r1.<b.f.h: java.lang.Object[] a(java.lang.Object[],int)>($r2, 1);

        return $r2;
    }
}
