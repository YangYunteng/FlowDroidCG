public class org.dom4j.tree.BaseElement extends org.dom4j.tree.AbstractElement
{
    public java.util.List attributes;
    public java.util.List content;
    public org.dom4j.Branch parentBranch;
    public org.dom4j.QName qname;

    public void <init>(java.lang.String)
    {
        org.dom4j.tree.BaseElement r0;
        org.dom4j.QName $r3;
        java.lang.String $r1;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.AbstractElement: void <init>()>();

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r1);

        r0.<org.dom4j.tree.BaseElement: org.dom4j.QName qname> = $r3;

        return;
    }

    public void <init>(java.lang.String, org.dom4j.Namespace)
    {
        org.dom4j.tree.BaseElement r0;
        org.dom4j.Namespace $r1;
        org.dom4j.QName $r4;
        java.lang.String $r2;
        org.dom4j.DocumentFactory $r3;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.dom4j.Namespace;

        specialinvoke r0.<org.dom4j.tree.AbstractElement: void <init>()>();

        $r3 = virtualinvoke r0.<org.dom4j.tree.AbstractElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r4 = virtualinvoke $r3.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)>($r2, $r1);

        r0.<org.dom4j.tree.BaseElement: org.dom4j.QName qname> = $r4;

        return;
    }

    public void <init>(org.dom4j.QName)
    {
        org.dom4j.QName $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: org.dom4j.QName;

        specialinvoke r0.<org.dom4j.tree.AbstractElement: void <init>()>();

        r0.<org.dom4j.tree.BaseElement: org.dom4j.QName qname> = $r1;

        return;
    }

    public java.util.List attributeList()
    {
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 = r0.<org.dom4j.tree.BaseElement: java.util.List attributes>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractElement: java.util.List createAttributeList()>();

        r0.<org.dom4j.tree.BaseElement: java.util.List attributes> = $r1;

     label1:
        $r1 = r0.<org.dom4j.tree.BaseElement: java.util.List attributes>;

        return $r1;
    }

    public java.util.List attributeList(int)
    {
        int $i0;
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $i0 := @parameter0: int;

        $r1 = r0.<org.dom4j.tree.BaseElement: java.util.List attributes>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractElement: java.util.List createAttributeList(int)>($i0);

        r0.<org.dom4j.tree.BaseElement: java.util.List attributes> = $r1;

     label1:
        $r1 = r0.<org.dom4j.tree.BaseElement: java.util.List attributes>;

        return $r1;
    }

    public void clearContent()
    {
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 = virtualinvoke r0.<org.dom4j.tree.BaseElement: java.util.List contentList()>();

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public java.util.List contentList()
    {
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 = r0.<org.dom4j.tree.BaseElement: java.util.List content>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: java.util.List createContentList()>();

        r0.<org.dom4j.tree.BaseElement: java.util.List content> = $r1;

     label1:
        $r1 = r0.<org.dom4j.tree.BaseElement: java.util.List content>;

        return $r1;
    }

    public org.dom4j.Document getDocument()
    {
        org.dom4j.Document $r1;
        org.dom4j.tree.BaseElement r0;
        org.dom4j.Branch $r2;
        org.dom4j.Element $r3;
        boolean $z0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r2 = r0.<org.dom4j.tree.BaseElement: org.dom4j.Branch parentBranch>;

        $z0 = $r2 instanceof org.dom4j.Document;

        if $z0 == 0 goto label1;

        $r1 = (org.dom4j.Document) $r2;

        return $r1;

     label1:
        $z0 = $r2 instanceof org.dom4j.Element;

        if $z0 == 0 goto label2;

        $r3 = (org.dom4j.Element) $r2;

        $r1 = interfaceinvoke $r3.<org.dom4j.Node: org.dom4j.Document getDocument()>();

        return $r1;

     label2:
        return null;
    }

    public org.dom4j.Element getParent()
    {
        org.dom4j.tree.BaseElement r0;
        org.dom4j.Branch $r1;
        org.dom4j.Element $r2;
        boolean $z0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 = r0.<org.dom4j.tree.BaseElement: org.dom4j.Branch parentBranch>;

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.Element) $r1;

        return $r2;

     label1:
        return null;
    }

    public org.dom4j.QName getQName()
    {
        org.dom4j.QName r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        r1 = r0.<org.dom4j.tree.BaseElement: org.dom4j.QName qname>;

        return r1;
    }

    public void setAttributeList(java.util.List)
    {
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: java.util.List;

        r0.<org.dom4j.tree.BaseElement: java.util.List attributes> = $r1;

        return;
    }

    public void setAttributes(java.util.List)
    {
        org.dom4j.tree.ContentListFacade $r2;
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: java.util.List;

        r0.<org.dom4j.tree.BaseElement: java.util.List attributes> = $r1;

        $z0 = $r1 instanceof org.dom4j.tree.ContentListFacade;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.tree.ContentListFacade) $r1;

        $r1 = virtualinvoke $r2.<org.dom4j.tree.ContentListFacade: java.util.List getBackingList()>();

        r0.<org.dom4j.tree.BaseElement: java.util.List attributes> = $r1;

     label1:
        return;
    }

    public void setContent(java.util.List)
    {
        org.dom4j.tree.ContentListFacade $r2;
        java.util.List $r1;
        org.dom4j.tree.BaseElement r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: java.util.List;

        r0.<org.dom4j.tree.BaseElement: java.util.List content> = $r1;

        $z0 = $r1 instanceof org.dom4j.tree.ContentListFacade;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.tree.ContentListFacade) $r1;

        $r1 = virtualinvoke $r2.<org.dom4j.tree.ContentListFacade: java.util.List getBackingList()>();

        r0.<org.dom4j.tree.BaseElement: java.util.List content> = $r1;

     label1:
        return;
    }

    public void setDocument(org.dom4j.Document)
    {
        org.dom4j.Document $r1;
        org.dom4j.tree.BaseElement r0;
        org.dom4j.Branch $r2;
        boolean $z0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: org.dom4j.Document;

        $r2 = r0.<org.dom4j.tree.BaseElement: org.dom4j.Branch parentBranch>;

        $z0 = $r2 instanceof org.dom4j.Document;

        if $z0 != 0 goto label1;

        if $r1 == null goto label2;

     label1:
        r0.<org.dom4j.tree.BaseElement: org.dom4j.Branch parentBranch> = $r1;

     label2:
        return;
    }

    public void setParent(org.dom4j.Element)
    {
        org.dom4j.tree.BaseElement r0;
        org.dom4j.Branch $r2;
        org.dom4j.Element $r1;
        boolean $z0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = r0.<org.dom4j.tree.BaseElement: org.dom4j.Branch parentBranch>;

        $z0 = $r2 instanceof org.dom4j.Element;

        if $z0 != 0 goto label1;

        if $r1 == null goto label2;

     label1:
        r0.<org.dom4j.tree.BaseElement: org.dom4j.Branch parentBranch> = $r1;

     label2:
        return;
    }

    public void setQName(org.dom4j.QName)
    {
        org.dom4j.QName $r1;
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        $r1 := @parameter0: org.dom4j.QName;

        r0.<org.dom4j.tree.BaseElement: org.dom4j.QName qname> = $r1;

        return;
    }

    public boolean supportsParent()
    {
        org.dom4j.tree.BaseElement r0;

        r0 := @this: org.dom4j.tree.BaseElement;

        return 1;
    }
}
