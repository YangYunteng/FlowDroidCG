public abstract class com.google.common.cache.CacheBuilderSpec$IntegerParser extends java.lang.Object implements com.google.common.cache.CacheBuilderSpec$ValueParser
{

    public void <init>()
    {
        com.google.common.cache.CacheBuilderSpec$IntegerParser r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$IntegerParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r6;
        java.lang.NumberFormatException $r4;
        java.lang.IllegalArgumentException $r5;
        com.google.common.cache.CacheBuilderSpec$IntegerParser r0;
        int $i0;
        java.lang.String $r1, $r3;
        com.google.common.cache.CacheBuilderSpec $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$IntegerParser;

        $r2 := @parameter0: com.google.common.cache.CacheBuilderSpec;

        $r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "value of key %s omitted", $r3);

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        virtualinvoke r0.<com.google.common.cache.CacheBuilderSpec$IntegerParser: void parseInteger(com.google.common.cache.CacheBuilderSpec,int)>($r2, $i0);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r3;

        $r6[1] = $r1;

        $r3 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.String access$000(java.lang.String,java.lang.Object[])>("key %s value set to %s, must be integer", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r4);

        throw $r5;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public abstract void parseInteger(com.google.common.cache.CacheBuilderSpec, int);
}
