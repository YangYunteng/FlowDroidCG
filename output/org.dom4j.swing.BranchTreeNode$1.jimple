public class org.dom4j.swing.BranchTreeNode$1 extends java.lang.Object implements java.util.Enumeration
{
    public int index;
    public final org.dom4j.swing.BranchTreeNode this$0;

    public void <init>(org.dom4j.swing.BranchTreeNode)
    {
        int $i0;
        org.dom4j.swing.BranchTreeNode$1 r0;
        org.dom4j.swing.BranchTreeNode $r1;

        r0 := @this: org.dom4j.swing.BranchTreeNode$1;

        $r1 := @parameter0: org.dom4j.swing.BranchTreeNode;

        r0.<org.dom4j.swing.BranchTreeNode$1: org.dom4j.swing.BranchTreeNode this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<org.dom4j.swing.BranchTreeNode$1: int index> = $i0;

        return;
    }

    public boolean hasMoreElements()
    {
        org.dom4j.swing.BranchTreeNode$1 r0;
        int $i0, $i1;
        org.dom4j.swing.BranchTreeNode $r1;

        r0 := @this: org.dom4j.swing.BranchTreeNode$1;

        $i0 = r0.<org.dom4j.swing.BranchTreeNode$1: int index>;

        $i1 = $i0 + 1;

        $r1 = r0.<org.dom4j.swing.BranchTreeNode$1: org.dom4j.swing.BranchTreeNode this$0>;

        $i0 = virtualinvoke $r1.<org.dom4j.swing.BranchTreeNode: int getChildCount()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object nextElement()
    {
        org.dom4j.swing.BranchTreeNode$1 r0;
        javax.swing.tree.TreeNode $r1;
        int $i0;
        org.dom4j.swing.BranchTreeNode $r2;

        r0 := @this: org.dom4j.swing.BranchTreeNode$1;

        $r2 = r0.<org.dom4j.swing.BranchTreeNode$1: org.dom4j.swing.BranchTreeNode this$0>;

        $i0 = r0.<org.dom4j.swing.BranchTreeNode$1: int index>;

        $i0 = $i0 + 1;

        r0.<org.dom4j.swing.BranchTreeNode$1: int index> = $i0;

        $r1 = virtualinvoke $r2.<org.dom4j.swing.BranchTreeNode: javax.swing.tree.TreeNode getChildAt(int)>($i0);

        return $r1;
    }
}
