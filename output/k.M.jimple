public final class k.m extends java.lang.Object
{
    public static final java.util.concurrent.Executor a;
    public final int b;
    public final long c;
    public final java.lang.Runnable d;
    public final java.util.Deque e;
    public final k.a.b.d f;
    public boolean g;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        java.util.concurrent.SynchronousQueue $r1;
        java.util.concurrent.ThreadPoolExecutor $r2;
        java.util.concurrent.ThreadFactory $r3;

        $r2 = new java.util.concurrent.ThreadPoolExecutor;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r1 = new java.util.concurrent.SynchronousQueue;

        specialinvoke $r1.<java.util.concurrent.SynchronousQueue: void <init>()>();

        $r3 = staticinvoke <k.a.e: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>("OkHttp ConnectionPool", 1);

        specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(0, 2147483647, 60L, $r0, $r1, $r3);

        <k.m: java.util.concurrent.Executor a> = $r2;

        return;
    }

    public void <init>()
    {
        java.util.concurrent.TimeUnit $r1;
        k.m r0;

        r0 := @this: k.m;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        specialinvoke r0.<k.m: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1);

        return;
    }

    public void <init>(int, long, java.util.concurrent.TimeUnit)
    {
        k.l $r4;
        long $l1, $l2;
        k.m r0;
        java.lang.IllegalArgumentException $r8;
        k.a.b.d $r6;
        java.util.concurrent.TimeUnit $r1;
        byte $b3;
        int $i0;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r3;
        java.util.ArrayDeque $r5;

        r0 := @this: k.m;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new k.l;

        specialinvoke $r4.<k.l: void <init>(k.m)>(r0);

        r0.<k.m: java.lang.Runnable d> = $r4;

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r0.<k.m: java.util.Deque e> = $r5;

        $r6 = new k.a.b.d;

        specialinvoke $r6.<k.a.b.d: void <init>()>();

        r0.<k.m: k.a.b.d f> = $r6;

        r0.<k.m: int b> = $i0;

        $l2 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        r0.<k.m: long c> = $l2;

        $b3 = $l1 cmp 0L;

        $i0 = (int) $b3;

        if $i0 <= 0 goto label1;

        return;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        $r2 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keepAliveDuration <= 0: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r8;
    }

    public final int a(k.a.b.c, long)
    {
        k.a.b.f$a $r5;
        long $l0, $l3;
        k.P $r7;
        int $i1, $i2;
        java.lang.String $r10;
        k.a $r8;
        boolean $z0;
        k.a.b.c $r2;
        k.a.f.f $r11;
        k.m r0;
        java.lang.ref.Reference $r4;
        java.util.List $r1;
        k.z $r9;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6;

        r0 := @this: k.m;

        $r2 := @parameter0: k.a.b.c;

        $l0 := @parameter1: long;

        $r1 = $r2.<k.a.b.c: java.util.List n>;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.ref.Reference) $r3;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        if $r3 == null goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = (k.a.b.f$a) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A connection to ");

        $r7 = virtualinvoke $r2.<k.a.b.c: k.P e()>();

        $r8 = virtualinvoke $r7.<k.P: k.a a()>();

        $r9 = virtualinvoke $r8.<k.a: k.z k()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was leaked. Did you forget to close a response body?");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <k.a.f.f: k.a.f.f b()>();

        $r3 = $r5.<k.a.b.f$a: java.lang.Object a>;

        virtualinvoke $r11.<k.a.f.f: void a(java.lang.String,java.lang.Object)>($r10, $r3);

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r2.<k.a.b.c: boolean k> = 1;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $l3 = r0.<k.m: long c>;

        $l0 = $l0 - $l3;

        $r2.<k.a.b.c: long o> = $l0;

        return 0;

     label3:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i1;
    }

    public long a(long)
    {
        java.lang.Throwable $r7;
        java.net.Socket $r6;
        long $l1, $l2, $l6;
        java.util.Deque $r1;
        byte $b0;
        int $i3, $i4, $i5;
        boolean $z0;
        k.a.b.c $r3, $r5;
        java.util.Iterator $r2;
        k.m r0;
        java.lang.Object $r4;

        r0 := @this: k.m;

        $l1 := @parameter0: long;

        entermonitor r0;

     label01:
        $r1 = r0.<k.m: java.util.Deque e>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.util.Iterator iterator()>();

        $l2 = -9223372036854775808L;

        $r3 = null;

        $i3 = 0;

        $i4 = 0;

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (k.a.b.c) $r4;

        $i5 = virtualinvoke r0.<k.m: int a(k.a.b.c,long)>($r5, $l1);

        if $i5 <= 0 goto label03;

        $i4 = $i4 + 1;

        goto label02;

     label03:
        $i3 = $i3 + 1;

        $l6 = $r5.<k.a.b.c: long o>;

        $l6 = $l1 - $l6;

        $b0 = $l6 cmp $l2;

        $i5 = (int) $b0;

        if $i5 <= 0 goto label02;

        $r3 = $r5;

        $l2 = $l6;

        goto label02;

     label04:
        $l1 = r0.<k.m: long c>;

        $b0 = $l2 cmp $l1;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label11;

        $i5 = r0.<k.m: int b>;

        if $i3 <= $i5 goto label05;

        goto label11;

     label05:
        if $i3 <= 0 goto label07;

        $l1 = r0.<k.m: long c>;

        $l1 = $l1 - $l2;

        exitmonitor r0;

     label06:
        return $l1;

     label07:
        if $i4 <= 0 goto label09;

        $l1 = r0.<k.m: long c>;

        exitmonitor r0;

     label08:
        return $l1;

     label09:
        r0.<k.m: boolean g> = 0;

        exitmonitor r0;

     label10:
        return -1L;

     label11:
        $r1 = r0.<k.m: java.util.Deque e>;

        interfaceinvoke $r1.<java.util.Deque: boolean remove(java.lang.Object)>($r3);

        exitmonitor r0;

     label12:
        $r6 = virtualinvoke $r3.<k.a.b.c: java.net.Socket f()>();

        staticinvoke <k.a.e: void a(java.net.Socket)>($r6);

        return 0L;

     label13:
        $r7 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        goto label16;

     label16:
        throw $r7;

        catch java.lang.Throwable from label01 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public java.net.Socket a(k.a, k.a.b.f)
    {
        k.a.b.c $r6, $r7;
        java.net.Socket $r8;
        java.util.Iterator $r4;
        k.m r0;
        k.a.b.f $r1;
        java.util.Deque $r3;
        java.lang.Object $r5;
        k.a $r2;
        boolean $z0;

        r0 := @this: k.m;

        $r2 := @parameter0: k.a;

        $r1 := @parameter1: k.a.b.f;

        $r3 = r0.<k.m: java.util.Deque e>;

        $r4 = interfaceinvoke $r3.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (k.a.b.c) $r5;

        $z0 = virtualinvoke $r6.<k.a.b.c: boolean a(k.a,k.P)>($r2, null);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r6.<k.a.b.c: boolean d()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke $r1.<k.a.b.f: k.a.b.c c()>();

        if $r6 == $r7 goto label1;

        $r8 = virtualinvoke $r1.<k.a.b.f: java.net.Socket b(k.a.b.c)>($r6);

        return $r8;

     label2:
        return null;
    }

    public k.a.b.c a(k.a, k.a.b.f, k.P)
    {
        k.a.b.c $r7;
        java.util.Iterator $r5;
        k.m r0;
        k.a.b.f $r1;
        k.P $r2;
        java.util.Deque $r4;
        java.lang.Object $r6;
        k.a $r3;
        boolean $z0;

        r0 := @this: k.m;

        $r3 := @parameter0: k.a;

        $r1 := @parameter1: k.a.b.f;

        $r2 := @parameter2: k.P;

        $r4 = r0.<k.m: java.util.Deque e>;

        $r5 = interfaceinvoke $r4.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (k.a.b.c) $r6;

        $z0 = virtualinvoke $r7.<k.a.b.c: boolean a(k.a,k.P)>($r3, $r2);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<k.a.b.f: void a(k.a.b.c,boolean)>($r7, 1);

        return $r7;

     label2:
        return null;
    }

    public boolean a(k.a.b.c)
    {
        k.a.b.c $r1;
        int $i0;
        k.m r0;
        java.util.Deque $r2;
        boolean $z0;

        r0 := @this: k.m;

        $r1 := @parameter0: k.a.b.c;

        $z0 = $r1.<k.a.b.c: boolean k>;

        if $z0 != 0 goto label2;

        $i0 = r0.<k.m: int b>;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return 0;

     label2:
        $r2 = r0.<k.m: java.util.Deque e>;

        interfaceinvoke $r2.<java.util.Deque: boolean remove(java.lang.Object)>($r1);

        return 1;
    }

    public void b(k.a.b.c)
    {
        k.a.b.c $r1;
        java.util.concurrent.Executor $r3;
        k.m r0;
        java.util.Deque $r4;
        java.lang.Runnable $r2;
        boolean $z0;

        r0 := @this: k.m;

        $r1 := @parameter0: k.a.b.c;

        $z0 = r0.<k.m: boolean g>;

        if $z0 != 0 goto label1;

        r0.<k.m: boolean g> = 1;

        $r3 = <k.m: java.util.concurrent.Executor a>;

        $r2 = r0.<k.m: java.lang.Runnable d>;

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

     label1:
        $r4 = r0.<k.m: java.util.Deque e>;

        interfaceinvoke $r4.<java.util.Deque: boolean add(java.lang.Object)>($r1);

        return;
    }
}
