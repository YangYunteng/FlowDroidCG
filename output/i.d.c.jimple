public final class i.d.c extends java.lang.Object
{

    public static final int a(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = $i1 % $i0;

        if $i1 < 0 goto label1;

        return $i1;

     label1:
        $i1 = $i1 + $i0;

        return $i1;
    }

    public static final int a(int, int, int)
    {
        int $i0, $i1, $i2;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 = staticinvoke <i.d.c: int a(int,int)>($i1, $i0);

        $i2 = staticinvoke <i.d.c: int a(int,int)>($i2, $i0);

        $i1 = $i1 - $i2;

        $i1 = staticinvoke <i.d.c: int a(int,int)>($i1, $i0);

        return $i1;
    }

    public static final int b(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i2 <= 0 goto label2;

        if $i0 < $i1 goto label1;

        return $i1;

     label1:
        $i0 = staticinvoke <i.d.c: int a(int,int,int)>($i1, $i0, $i2);

        $i0 = $i1 - $i0;

        return $i0;

     label2:
        if $i2 >= 0 goto label4;

        if $i0 > $i1 goto label3;

        return $i1;

     label3:
        $i2 = neg $i2;

        $i0 = staticinvoke <i.d.c: int a(int,int,int)>($i0, $i1, $i2);

        $i0 = $i1 + $i0;

        return $i0;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step is zero.");

        throw $r0;
    }
}
