public class com.google.android.material.datepicker.MonthsPagerAdapter extends androidx.recyclerview.widget.RecyclerView$a
{
    public final com.google.android.material.datepicker.CalendarConstraints calendarConstraints;
    public final com.google.android.material.datepicker.DateSelector dateSelector;
    public final int itemHeight;
    public final com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener onDayClickListener;

    public void <init>(android.content.Context, com.google.android.material.datepicker.DateSelector, com.google.android.material.datepicker.CalendarConstraints, com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener)
    {
        com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener $r2;
        android.content.Context $r3;
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        com.google.android.material.datepicker.Month $r5, $r6, $r7;
        com.google.android.material.datepicker.CalendarConstraints $r1;
        java.lang.IllegalArgumentException $r8;
        com.google.android.material.datepicker.DateSelector $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: com.google.android.material.datepicker.DateSelector;

        $r1 := @parameter2: com.google.android.material.datepicker.CalendarConstraints;

        $r2 := @parameter3: com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$a: void <init>()>();

        $r5 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()>();

        $r6 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getEnd()>();

        $r7 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getOpenAt()>();

        $i0 = virtualinvoke $r5.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r7);

        if $i0 > 0 goto label4;

        $i0 = virtualinvoke $r7.<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>($r6);

        if $i0 > 0 goto label3;

        $i0 = <com.google.android.material.datepicker.MonthAdapter: int MAXIMUM_WEEKS>;

        $i1 = staticinvoke <com.google.android.material.datepicker.MaterialCalendar: int getDayHeight(android.content.Context)>($r3);

        $i0 = $i0 * $i1;

        $z0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: boolean isFullscreen(android.content.Context)>($r3);

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <com.google.android.material.datepicker.MaterialCalendar: int getDayHeight(android.content.Context)>($r3);

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i0 = $i0 + $i1;

        r0.<com.google.android.material.datepicker.MonthsPagerAdapter: int itemHeight> = $i0;

        r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints> = $r1;

        r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.DateSelector dateSelector> = $r4;

        r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener onDayClickListener> = $r2;

        virtualinvoke r0.<androidx.recyclerview.widget.RecyclerView$a: void setHasStableIds(boolean)>(1);

        return;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("currentPage cannot be after lastPage");

        throw $r8;

     label4:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("firstPage cannot be after currentPage");

        throw $r8;
    }

    public static com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)
    {
        com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener r1;
        com.google.android.material.datepicker.MonthsPagerAdapter $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.MonthsPagerAdapter;

        r1 = $r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener onDayClickListener>;

        return r1;
    }

    public int getItemCount()
    {
        int $i0;
        com.google.android.material.datepicker.CalendarConstraints $r1;
        com.google.android.material.datepicker.MonthsPagerAdapter r0;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r1 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $i0 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: int getMonthSpan()>();

        return $i0;
    }

    public long getItemId(int)
    {
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        com.google.android.material.datepicker.Month $r2;
        int $i0;
        com.google.android.material.datepicker.CalendarConstraints $r1;
        long $l1;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r2 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()>();

        $r2 = virtualinvoke $r2.<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month monthsLater(int)>($i0);

        $l1 = virtualinvoke $r2.<com.google.android.material.datepicker.Month: long getStableId()>();

        return $l1;
    }

    public com.google.android.material.datepicker.Month getPageMonth(int)
    {
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        com.google.android.material.datepicker.Month $r2;
        int $i0;
        com.google.android.material.datepicker.CalendarConstraints $r1;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r2 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()>();

        $r2 = virtualinvoke $r2.<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month monthsLater(int)>($i0);

        return $r2;
    }

    public java.lang.CharSequence getPageTitle(int)
    {
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        com.google.android.material.datepicker.Month $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.Month getPageMonth(int)>($i0);

        $r2 = virtualinvoke $r1.<com.google.android.material.datepicker.Month: java.lang.String getLongName()>();

        return $r2;
    }

    public int getPosition(com.google.android.material.datepicker.Month)
    {
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        com.google.android.material.datepicker.Month $r1, $r3;
        com.google.android.material.datepicker.CalendarConstraints $r2;
        int $i0;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r1 := @parameter0: com.google.android.material.datepicker.Month;

        $r2 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r3 = virtualinvoke $r2.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()>();

        $i0 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: int monthsUntil(com.google.android.material.datepicker.Month)>($r1);

        return $i0;
    }

    public volatile void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$v, int)
    {
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        int $i0;
        androidx.recyclerview.widget.RecyclerView$v $r1;
        com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder $r2;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$v;

        $i0 := @parameter1: int;

        $r2 = (com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder) $r1;

        virtualinvoke r0.<com.google.android.material.datepicker.MonthsPagerAdapter: void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)>($r2, $i0);

        return;
    }

    public void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder, int)
    {
        com.google.android.material.datepicker.MaterialCalendarGridView $r6;
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        com.google.android.material.datepicker.Month $r3, $r9;
        com.google.android.material.datepicker.CalendarConstraints $r1;
        com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder $r2;
        com.google.android.material.datepicker.DateSelector $r10;
        android.widget.TextView $r4;
        com.google.android.material.datepicker.MonthsPagerAdapter$1 $r11;
        int $i0;
        android.view.View $r7;
        com.google.android.material.datepicker.MonthAdapter $r8;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r2 := @parameter0: com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder;

        $i0 := @parameter1: int;

        $r1 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        $r3 = virtualinvoke $r1.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()>();

        $r3 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month monthsLater(int)>($i0);

        $r4 = $r2.<com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: android.widget.TextView monthTitle>;

        $r5 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: java.lang.String getLongName()>();

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        $r6 = $r2.<com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: com.google.android.material.datepicker.MaterialCalendarGridView monthGrid>;

        $i0 = <com.google.android.material.R$id: int month_grid>;

        $r7 = virtualinvoke $r6.<android.widget.GridView: android.view.View findViewById(int)>($i0);

        $r6 = (com.google.android.material.datepicker.MaterialCalendarGridView) $r7;

        $r8 = virtualinvoke $r6.<com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.MonthAdapter getAdapter()>();

        if $r8 == null goto label1;

        $r8 = virtualinvoke $r6.<com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.MonthAdapter getAdapter()>();

        $r9 = $r8.<com.google.android.material.datepicker.MonthAdapter: com.google.android.material.datepicker.Month month>;

        $z0 = virtualinvoke $r3.<com.google.android.material.datepicker.Month: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke $r6.<com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.MonthAdapter getAdapter()>();

        virtualinvoke $r8.<android.widget.BaseAdapter: void notifyDataSetChanged()>();

        goto label2;

     label1:
        $r8 = new com.google.android.material.datepicker.MonthAdapter;

        $r10 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.DateSelector dateSelector>;

        $r1 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.CalendarConstraints calendarConstraints>;

        specialinvoke $r8.<com.google.android.material.datepicker.MonthAdapter: void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints)>($r3, $r10, $r1);

        $i0 = $r3.<com.google.android.material.datepicker.Month: int daysInWeek>;

        virtualinvoke $r6.<android.widget.GridView: void setNumColumns(int)>($i0);

        virtualinvoke $r6.<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)>($r8);

     label2:
        $r11 = new com.google.android.material.datepicker.MonthsPagerAdapter$1;

        specialinvoke $r11.<com.google.android.material.datepicker.MonthsPagerAdapter$1: void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView)>(r0, $r6);

        virtualinvoke $r6.<android.widget.GridView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r11);

        return;
    }

    public volatile androidx.recyclerview.widget.RecyclerView$v onCreateViewHolder(android.view.ViewGroup, int)
    {
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        int $i0;
        com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder $r1;
        android.view.ViewGroup $r2;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r2 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>($r2, $i0);

        return $r1;
    }

    public com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        android.content.Context $r2;
        android.widget.LinearLayout $r5;
        com.google.android.material.datepicker.MonthsPagerAdapter r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r6;
        android.view.LayoutInflater $r3;
        android.view.ViewGroup $r1;
        com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder $r7;
        int $i0, $i1;
        android.view.View $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.datepicker.MonthsPagerAdapter;

        $r1 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $i0 = <com.google.android.material.R$layout: int mtrl_calendar_month_labeled>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r1, 0);

        $r5 = (android.widget.LinearLayout) $r4;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.content.Context getContext()>();

        $z0 = staticinvoke <com.google.android.material.datepicker.MaterialDatePicker: boolean isFullscreen(android.content.Context)>($r2);

        if $z0 == 0 goto label1;

        $r6 = new androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $i0 = r0.<com.google.android.material.datepicker.MonthsPagerAdapter: int itemHeight>;

        $i1 = -1;

        specialinvoke $r6.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(int,int)>($i1, $i0);

        virtualinvoke $r5.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r7 = new com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder;

        specialinvoke $r7.<com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: void <init>(android.widget.LinearLayout,boolean)>($r5, 1);

        return $r7;

     label1:
        $r7 = new com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder;

        specialinvoke $r7.<com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: void <init>(android.widget.LinearLayout,boolean)>($r5, 0);

        return $r7;
    }
}
