public abstract class com.google.android.material.datepicker.DateFormatTextWatcher extends java.lang.Object implements android.text.TextWatcher
{
    public final com.google.android.material.datepicker.CalendarConstraints constraints;
    public final java.text.DateFormat dateFormat;
    public final java.lang.String formatHint;
    public final java.lang.String outOfRange;
    public final com.google.android.material.textfield.TextInputLayout textInputLayout;

    public void <init>(java.lang.String, java.text.DateFormat, com.google.android.material.textfield.TextInputLayout, com.google.android.material.datepicker.CalendarConstraints)
    {
        com.google.android.material.datepicker.DateFormatTextWatcher r0;
        android.content.Context $r5;
        com.google.android.material.textfield.TextInputLayout $r1;
        com.google.android.material.datepicker.CalendarConstraints $r2;
        int $i0;
        java.lang.String $r3;
        java.text.DateFormat $r4;

        r0 := @this: com.google.android.material.datepicker.DateFormatTextWatcher;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.text.DateFormat;

        $r1 := @parameter2: com.google.android.material.textfield.TextInputLayout;

        $r2 := @parameter3: com.google.android.material.datepicker.CalendarConstraints;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.lang.String formatHint> = $r3;

        r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.text.DateFormat dateFormat> = $r4;

        r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout> = $r1;

        r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.datepicker.CalendarConstraints constraints> = $r2;

        $r5 = virtualinvoke $r1.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_out_of_range>;

        $r3 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.lang.String outOfRange> = $r3;

        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        com.google.android.material.datepicker.DateFormatTextWatcher r0;
        android.text.Editable $r1;

        r0 := @this: com.google.android.material.datepicker.DateFormatTextWatcher;

        $r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.google.android.material.datepicker.DateFormatTextWatcher r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.android.material.datepicker.DateFormatTextWatcher;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public void onInvalidDate()
    {
        com.google.android.material.datepicker.DateFormatTextWatcher r0;

        r0 := @this: com.google.android.material.datepicker.DateFormatTextWatcher;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.content.Context $r12;
        java.lang.Object[] $r10;
        java.util.Date $r6;
        com.google.android.material.textfield.TextInputLayout $r3;
        com.google.android.material.datepicker.CalendarConstraints $r7;
        long $l3;
        com.google.android.material.datepicker.CalendarConstraints$DateValidator $r8;
        java.util.Calendar $r14;
        java.lang.Long $r9;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r11, $r13, $r15;
        java.text.ParseException $r1;
        java.text.DateFormat $r4;
        boolean $z0;
        java.lang.CharSequence $r2;
        com.google.android.material.datepicker.DateFormatTextWatcher r0;
        java.lang.StringBuilder $r16;

        r0 := @this: com.google.android.material.datepicker.DateFormatTextWatcher;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label01;

        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

        virtualinvoke $r3.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>(null);

        virtualinvoke r0.<com.google.android.material.datepicker.DateFormatTextWatcher: void onValidDate(java.lang.Long)>(null);

        return;

     label01:
        $r4 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.text.DateFormat dateFormat>;

     label02:
        $r5 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r5);

     label03:
        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

     label04:
        virtualinvoke $r3.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>(null);

        $l3 = virtualinvoke $r6.<java.util.Date: long getTime()>();

     label05:
        $r7 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.datepicker.CalendarConstraints constraints>;

     label06:
        $r8 = virtualinvoke $r7.<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()>();

        $z0 = interfaceinvoke $r8.<com.google.android.material.datepicker.CalendarConstraints$DateValidator: boolean isValid(long)>($l3);

     label07:
        if $z0 == 0 goto label12;

        $r7 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.datepicker.CalendarConstraints constraints>;

     label08:
        $z0 = virtualinvoke $r7.<com.google.android.material.datepicker.CalendarConstraints: boolean isWithinBounds(long)>($l3);

     label09:
        if $z0 == 0 goto label12;

     label10:
        $l3 = virtualinvoke $r6.<java.util.Date: long getTime()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r0.<com.google.android.material.datepicker.DateFormatTextWatcher: void onValidDate(java.lang.Long)>($r9);

     label11:
        return;

     label12:
        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

        $r5 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.lang.String outOfRange>;

        $r10 = newarray (java.lang.Object)[1];

     label13:
        $r11 = staticinvoke <com.google.android.material.datepicker.DateStrings: java.lang.String getDateString(long)>($l3);

     label14:
        $r10[0] = $r11;

     label15:
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r5, $r10);

        virtualinvoke $r3.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>($r5);

        virtualinvoke r0.<com.google.android.material.datepicker.DateFormatTextWatcher: void onInvalidDate()>();

     label16:
        return;

     label17:
        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

        $r12 = virtualinvoke $r3.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_invalid_format>;

        $r5 = virtualinvoke $r12.<android.content.Context: java.lang.String getString(int)>($i0);

        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

        $r12 = virtualinvoke $r3.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_invalid_format_use>;

        $r11 = virtualinvoke $r12.<android.content.Context: java.lang.String getString(int)>($i0);

        $r10 = newarray (java.lang.Object)[1];

        $r13 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.lang.String formatHint>;

        $r10[0] = $r13;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r11, $r10);

        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

        $r12 = virtualinvoke $r3.<android.widget.LinearLayout: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$string: int mtrl_picker_invalid_format_example>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.String getString(int)>($i0);

        $r10 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: java.text.DateFormat dateFormat>;

        $r6 = new java.util.Date;

        $r14 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.util.Calendar getTodayCalendar()>();

        $l3 = virtualinvoke $r14.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r6.<java.util.Date: void <init>(long)>($l3);

        $r15 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r6);

        $r10[0] = $r15;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r13, $r10);

        $r3 = r0.<com.google.android.material.datepicker.DateFormatTextWatcher: com.google.android.material.textfield.TextInputLayout textInputLayout>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>($r5);

        virtualinvoke r0.<com.google.android.material.datepicker.DateFormatTextWatcher: void onInvalidDate()>();

        return;

     label18:
        $r1 := @caughtexception;

        goto label17;

        catch java.text.ParseException from label02 to label03 with label18;
        catch java.text.ParseException from label04 to label05 with label18;
        catch java.text.ParseException from label06 to label07 with label18;
        catch java.text.ParseException from label08 to label09 with label18;
        catch java.text.ParseException from label10 to label11 with label18;
        catch java.text.ParseException from label13 to label14 with label18;
        catch java.text.ParseException from label15 to label16 with label18;
    }

    public abstract void onValidDate(java.lang.Long);
}
