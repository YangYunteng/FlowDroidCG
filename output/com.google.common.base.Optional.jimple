public abstract class com.google.common.base.Optional extends java.lang.Object implements java.io.Serializable
{
    public static final long serialVersionUID;

    public void <init>()
    {
        com.google.common.base.Optional r0;

        r0 := @this: com.google.common.base.Optional;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.base.Optional absent()
    {
        com.google.common.base.Optional $r0;

        $r0 = staticinvoke <com.google.common.base.Absent: com.google.common.base.Optional withType()>();

        return $r0;
    }

    public static com.google.common.base.Optional fromJavaUtil(java.util.Optional)
    {
        java.util.Optional $r0;
        java.lang.Object $r1;
        com.google.common.base.Optional $r2;

        $r0 := @parameter0: java.util.Optional;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r2 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>($r1);

        return $r2;
    }

    public static com.google.common.base.Optional fromNullable(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.base.Present $r0;
        com.google.common.base.Optional $r1;

        $r2 := @parameter0: java.lang.Object;

        if $r2 != null goto label1;

        $r1 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r1;

     label1:
        $r0 = new com.google.common.base.Present;

        specialinvoke $r0.<com.google.common.base.Present: void <init>(java.lang.Object)>($r2);

        return $r0;
    }

    public static com.google.common.base.Optional of(java.lang.Object)
    {
        java.lang.Object $r0;
        com.google.common.base.Present $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new com.google.common.base.Present;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        specialinvoke $r1.<com.google.common.base.Present: void <init>(java.lang.Object)>($r0);

        return $r1;
    }

    public static java.lang.Iterable presentInstances(java.lang.Iterable)
    {
        com.google.common.base.Optional$1 $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $r1 = new com.google.common.base.Optional$1;

        specialinvoke $r1.<com.google.common.base.Optional$1: void <init>(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static java.util.Optional toJavaUtil(com.google.common.base.Optional)
    {
        java.util.Optional $r0;
        com.google.common.base.Optional $r1;

        $r1 := @parameter0: com.google.common.base.Optional;

        if $r1 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r1.<com.google.common.base.Optional: java.util.Optional toJavaUtil()>();

        return $r0;
    }

    public abstract java.util.Set asSet();

    public abstract boolean equals(java.lang.Object);

    public abstract java.lang.Object get();

    public abstract int hashCode();

    public abstract boolean isPresent();

    public abstract com.google.common.base.Optional or(com.google.common.base.Optional);

    public abstract java.lang.Object or(com.google.common.base.Supplier);

    public abstract java.lang.Object or(java.lang.Object);

    public abstract java.lang.Object orNull();

    public java.util.Optional toJavaUtil()
    {
        java.util.Optional $r2;
        java.lang.Object $r1;
        com.google.common.base.Optional r0;

        r0 := @this: com.google.common.base.Optional;

        $r1 = virtualinvoke r0.<com.google.common.base.Optional: java.lang.Object orNull()>();

        $r2 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r1);

        return $r2;
    }

    public abstract java.lang.String toString();

    public abstract com.google.common.base.Optional transform(com.google.common.base.Function);
}
