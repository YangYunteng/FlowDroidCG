public class org.xmlpull.v1.XmlPullParserFactory extends java.lang.Object
{
    public static final java.lang.String PROPERTY_NAME;
    public static final java.lang.String RESOURCE_NAME;
    public static final java.lang.Class referenceContextClass;
    public java.lang.String classNamesLocation;
    public java.util.Hashtable features;
    public java.util.Vector parserClasses;
    public java.util.Vector serializerClasses;

    static void <clinit>()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String RESOURCE_NAME> = "/META-INF/services/org.xmlpull.v1.XmlPullParserFactory";

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String PROPERTY_NAME> = "org.xmlpull.v1.XmlPullParserFactory";

        $r0 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass> = class "Lorg/xmlpull/v1/XmlPullParserFactory;";

        return;
    }

    public void <init>()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.Hashtable $r1;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features> = $r1;

        return;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        $r0 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>(null, null);

        return $r0;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String, java.lang.Class)
    {
        java.util.Vector $r8, $r9, $r18;
        java.lang.StringBuffer $r7, $r17;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r2, $r4, $r11;
        boolean $z0, $z1;
        char $c3;
        java.lang.Exception $r0, $r1, $r15;
        org.xmlpull.v1.XmlPullParserException $r14, $r19;
        org.xmlpull.v1.XmlPullParserFactory $r10, $r20;
        java.lang.Class $r3, $r12;
        java.lang.StringBuilder $r5, $r16;
        java.lang.Object $r13;
        java.io.InputStream $r6;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.Class;

        if $r3 != null goto label01;

        $r3 = <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass>;

     label01:
        if $r2 == null goto label03;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label03;

        $r4 = "DEFAULT";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label02;

        goto label03;

     label02:
        $r16 = new java.lang.StringBuilder;

        $r5 = $r16;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameter classNames to newInstance() that contained \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label03:
        $r6 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/services/org.xmlpull.v1.XmlPullParserFactory");

     label04:
        if $r6 == null goto label32;

        $r17 = new java.lang.StringBuffer;

        $r7 = $r17;

     label05:
        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

     label06:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read()>();

     label07:
        if $i0 >= 0 goto label29;

     label08:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $r2 = $r4;

        $r16 = new java.lang.StringBuilder;

        $r5 = $r16;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resource /META-INF/services/org.xmlpull.v1.XmlPullParserFactory that contained \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r9 = new java.util.Vector;

        $r8 = $r9;

        specialinvoke $r9.<java.util.Vector: void <init>()>();

        $r18 = new java.util.Vector;

        $r9 = $r18;

        specialinvoke $r18.<java.util.Vector: void <init>()>();

        $r10 = null;

        $i0 = 0;

     label11:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label27;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(44, $i0);

        $i2 = $i1;

        $i4 = -1;

        if $i1 != $i4 goto label12;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

     label12:
        $r11 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

     label13:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r11);

     label14:
        $r12 = $r3;

     label15:
        $r13 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

     label16:
        goto label19;

     label17:
        $r12 = null;

     label18:
        $r13 = null;

     label19:
        if $r12 == null goto label26;

        $z1 = $r13 instanceof org.xmlpull.v1.XmlPullParser;

        if $z1 == 0 goto label20;

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $z1 = 1;

        goto label21;

     label20:
        $z1 = 0;

     label21:
        $z0 = $r13 instanceof org.xmlpull.v1.XmlSerializer;

        if $z0 == 0 goto label22;

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $z1 = 1;

     label22:
        $z0 = $r13 instanceof org.xmlpull.v1.XmlPullParserFactory;

        if $z0 == 0 goto label24;

        if $r10 != null goto label23;

        $r10 = (org.xmlpull.v1.XmlPullParserFactory) $r13;

     label23:
        $z1 = 1;

     label24:
        if $z1 == 0 goto label25;

        goto label26;

     label25:
        $r19 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        $r5 = $r16;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incompatible class: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r19;

     label26:
        $i0 = $i2 + 1;

        goto label11;

     label27:
        if $r10 != null goto label28;

        $r20 = new org.xmlpull.v1.XmlPullParserFactory;

        $r10 = $r20;

        specialinvoke $r20.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

     label28:
        $r10.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses> = $r8;

        $r10.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses> = $r9;

        $r10.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation> = $r4;

        return $r10;

     label29:
        if $i0 <= 32 goto label06;

        $c3 = (char) $i0;

     label30:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label31:
        goto label06;

     label32:
        $r19 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = $r19;

     label33:
        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("resource not found: /META-INF/services/org.xmlpull.v1.XmlPullParserFactory make sure that parser implementing XmlPull API is available");

        throw $r14;

     label34:
        $r15 := @caughtexception;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>(null, null, $r15);

        goto label35;

     label35:
        throw $r19;

     label36:
        $r0 := @caughtexception;

        goto label17;

     label37:
        $r1 := @caughtexception;

        goto label18;

        catch java.lang.Exception from label03 to label04 with label34;
        catch java.lang.Exception from label05 to label07 with label34;
        catch java.lang.Exception from label08 to label09 with label34;
        catch java.lang.Exception from label13 to label14 with label36;
        catch java.lang.Exception from label15 to label16 with label37;
        catch java.lang.Exception from label30 to label31 with label34;
        catch java.lang.Exception from label33 to label34 with label34;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r4;
        java.lang.Object $r3;
        java.lang.String $r2;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser()
    {
        java.util.Enumeration $r7;
        java.util.Vector $r1;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.Boolean $r9;
        java.lang.String $r8;
        java.util.Hashtable $r6;
        org.xmlpull.v1.XmlPullParser $r5;
        boolean $z0;
        java.lang.Exception $r10;
        org.xmlpull.v1.XmlPullParserException $r12;
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.StringBuilder $r11;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        if $r1 == null goto label15;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 == 0 goto label14;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label01:
        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label13;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (java.lang.Class) $r3;

     label02:
        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (org.xmlpull.v1.XmlPullParser) $r3;

        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.util.Enumeration keys()>();

     label03:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

     label04:
        if $z0 == 0 goto label11;

     label05:
        $r3 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = (java.lang.String) $r3;

        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r3 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r8);

        $r9 = (java.lang.Boolean) $r3;

     label06:
        if $r9 == null goto label03;

     label07:
        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label08:
        if $z0 == 0 goto label03;

     label09:
        interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>($r8, 1);

     label10:
        goto label03;

     label11:
        return $r5;

     label12:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r10.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $i0 = $i0 + 1;

        goto label01;

     label13:
        $r12 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create parser: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r12;

     label14:
        $r12 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid parser classes found in ");

        $r8 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r12;

     label15:
        $r12 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization was incomplete - has not tried ");

        $r8 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        goto label16;

     label16:
        throw $r12;

        catch java.lang.Exception from label02 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer()
    {
        org.xmlpull.v1.XmlSerializer $r6;
        java.lang.Exception $r7;
        org.xmlpull.v1.XmlPullParserException $r9;
        java.util.Vector $r2;
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuffer $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.String $r8;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        if $r2 == null goto label7;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 == 0 goto label6;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label1:
        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label5;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r5 = (java.lang.Class) $r4;

     label2:
        $r4 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = (org.xmlpull.v1.XmlSerializer) $r4;

     label3:
        return $r6;

     label4:
        $r7 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $i0 = $i0 + 1;

        goto label1;

     label5:
        $r9 = new org.xmlpull.v1.XmlPullParserException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create serializer: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label6:
        $r9 = new org.xmlpull.v1.XmlPullParserException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid serializer classes found in ");

        $r8 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label7:
        $r9 = new org.xmlpull.v1.XmlPullParserException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization incomplete - has not tried ");

        $r8 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        goto label8;

     label8:
        throw $r9;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void setFeature(java.lang.String, boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r3;
        java.lang.String $r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r3 = new java.lang.Boolean;

        specialinvoke $r3.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r2;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $r2);

        return;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r2;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#validation", $r2);

        return;
    }
}
