public final class com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper extends com.google.common.util.concurrent.AbstractFuture$AtomicHelper
{
    public final java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater;
    public final java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater;
    public final java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater;
    public final java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater;
    public final java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater;

    public void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater)
    {
        com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        $r2 := @parameter1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        $r3 := @parameter2: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        $r4 := @parameter3: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        $r5 := @parameter4: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>(null);

        r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater> = $r1;

        r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater> = $r2;

        r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater> = $r3;

        r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater> = $r4;

        r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater> = $r5;

        return;
    }

    public boolean casListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener)
    {
        com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        com.google.common.util.concurrent.AbstractFuture$Listener $r1, $r2;
        com.google.common.util.concurrent.AbstractFuture $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper;

        $r4 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r1 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Listener;

        $r2 := @parameter2: com.google.common.util.concurrent.AbstractFuture$Listener;

        $r3 = r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r2);

        return $z0;
    }

    public boolean casValue(com.google.common.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        java.lang.Object $r1, $r2;
        com.google.common.util.concurrent.AbstractFuture $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper;

        $r4 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r2);

        return $z0;
    }

    public boolean casWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1, $r2;
        com.google.common.util.concurrent.AbstractFuture $r4;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper;

        $r4 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r1 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter2: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r3 = r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r2);

        return $z0;
    }

    public void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1, $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r3 = r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread)
    {
        com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        java.lang.Thread $r2;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter1: java.lang.Thread;

        $r3 = r0.<com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
}
