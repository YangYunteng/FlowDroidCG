public final class j.a.b.r extends java.lang.Object
{
    public static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater a;
    public static final java.util.concurrent.atomic.AtomicLongFieldUpdater b;
    public static final j.a.b.A c;
    public static final j.a.b.r$a d;
    public volatile java.lang.Object _next;
    public volatile long _state$internal;
    public final int e;
    public java.util.concurrent.atomic.AtomicReferenceArray f;
    public final int g;
    public final boolean h;

    static void <clinit>()
    {
        j.a.b.r$a $r0;
        j.a.b.A $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r3;

        $r0 = new j.a.b.r$a;

        specialinvoke $r0.<j.a.b.r$a: void <init>(i.f.b.g)>(null);

        <j.a.b.r: j.a.b.r$a d> = $r0;

        $r1 = new j.a.b.A;

        specialinvoke $r1.<j.a.b.A: void <init>(java.lang.String)>("REMOVE_FROZEN");

        <j.a.b.r: j.a.b.A c> = $r1;

        $r2 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lj/a/b/r;", class "Ljava/lang/Object;", "_next");

        <j.a.b.r: java.util.concurrent.atomic.AtomicReferenceFieldUpdater a> = $r2;

        $r3 = staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lj/a/b/r;", "_state$internal");

        <j.a.b.r: java.util.concurrent.atomic.AtomicLongFieldUpdater b> = $r3;

        return;
    }

    public void <init>(int, boolean)
    {
        java.lang.IllegalStateException $r2;
        j.a.b.r r0;
        int $i0, $i1;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicReferenceArray $r1;

        r0 := @this: j.a.b.r;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<j.a.b.r: int g> = $i0;

        r0.<j.a.b.r: boolean h> = $z0;

        $i0 = r0.<j.a.b.r: int g>;

        $i1 = -1;

        $i1 = $i0 + $i1;

        r0.<j.a.b.r: int e> = $i1;

        r0.<j.a.b.r: java.lang.Object _next> = null;

        r0.<j.a.b.r: long _state$internal> = 0L;

        $r1 = new java.util.concurrent.atomic.AtomicReferenceArray;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>($i0);

        r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f> = $r1;

        $i0 = r0.<j.a.b.r: int e>;

        $z0 = 0;

        if $i0 > 1073741823 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label5;

        $i1 = r0.<j.a.b.r: int g>;

        $i0 = r0.<j.a.b.r: int e>;

        $i0 = $i1 & $i0;

        if $i0 != 0 goto label3;

        $z0 = 1;

     label3:
        if $z0 == 0 goto label4;

        return;

     label4:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Check failed.");

        throw $r2;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Check failed.");

        throw $r2;
    }

    public static final int a(j.a.b.r)
    {
        int i0;
        j.a.b.r $r0;

        $r0 := @parameter0: j.a.b.r;

        i0 = $r0.<j.a.b.r: int e>;

        return i0;
    }

    public static final j.a.b.r a(j.a.b.r, int, int)
    {
        int $i0, $i1;
        j.a.b.r $r0;

        $r0 := @parameter0: j.a.b.r;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = virtualinvoke $r0.<j.a.b.r: j.a.b.r a(int,int)>($i0, $i1);

        return $r0;
    }

    public static final boolean b(j.a.b.r)
    {
        j.a.b.r $r0;
        boolean z0;

        $r0 := @parameter0: j.a.b.r;

        z0 = $r0.<j.a.b.r: boolean h>;

        return z0;
    }

    public final int a(java.lang.Object)
    {
        long $l2, $l3;
        java.util.concurrent.atomic.AtomicReferenceArray $r3;
        j.a.b.r$a $r2;
        byte $b4;
        j.a.b.r r0, $r6;
        int $i0, $i1, $i5, $i6, $i7;
        boolean $z0;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r5;
        java.lang.Object $r1, $r4;

        r0 := @this: j.a.b.r;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "element");

     label1:
        $l2 = r0.<j.a.b.r: long _state$internal>;

        $l3 = 3458764513820540928L & $l2;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $r2 = <j.a.b.r: j.a.b.r$a d>;

        $i5 = virtualinvoke $r2.<j.a.b.r$a: int a(long)>($l2);

        return $i5;

     label2:
        $r2 = <j.a.b.r: j.a.b.r$a d>;

        $l3 = 1073741823L & $l2;

        $l3 = $l3 >> 0;

        $i6 = (int) $l3;

        $l3 = 1152921503533105152L & $l2;

        $l3 = $l3 >> 30;

        $i5 = (int) $l3;

        $i0 = r0.<j.a.b.r: int e>;

        $i1 = $i5 + 2;

        $i1 = $i1 & $i0;

        $i7 = $i6 & $i0;

        if $i1 != $i7 goto label3;

        return 1;

     label3:
        $z0 = r0.<j.a.b.r: boolean h>;

        if $z0 != 0 goto label4;

        $r3 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i1 = $i5 & $i0;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i1);

        if $r4 == null goto label4;

        $i0 = r0.<j.a.b.r: int g>;

        if $i0 < 1024 goto label8;

        $i5 = $i5 - $i6;

        $i5 = $i5 & 1073741823;

        $i0 = $i0 >> 1;

        if $i5 <= $i0 goto label1;

        return 1;

     label4:
        $i6 = $i5 + 1;

        $i6 = $i6 & 1073741823;

        $r5 = <j.a.b.r: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        $r2 = <j.a.b.r: j.a.b.r$a d>;

        $l3 = virtualinvoke $r2.<j.a.b.r$a: long b(long,int)>($l2, $i6);

        $z0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>(r0, $l2, $l3);

        if $z0 == 0 goto label1;

        $r3 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i0 = $i5 & $i0;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>($i0, $r1);

     label5:
        $l2 = r0.<j.a.b.r: long _state$internal>;

        $l2 = $l2 & 1152921504606846976L;

        $b4 = $l2 cmp 0L;

        if $b4 != 0 goto label6;

        return 0;

     label6:
        r0 = virtualinvoke r0.<j.a.b.r: j.a.b.r e()>();

        $r6 = virtualinvoke r0.<j.a.b.r: j.a.b.r a(int,java.lang.Object)>($i5, $r1);

        r0 = $r6;

        if $r6 == null goto label7;

        goto label5;

     label7:
        return 0;

     label8:
        return 1;
    }

    public final j.a.b.r a(int, int)
    {
        long $l0, $l5;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r3;
        java.lang.AssertionError $r2;
        java.util.concurrent.atomic.AtomicReferenceArray $r4;
        j.a.b.r$a $r1;
        byte $b2;
        j.a.b.r r0;
        int $i1, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: j.a.b.r;

        $i3 := @parameter0: int;

        $i4 := @parameter1: int;

     label1:
        $l0 = r0.<j.a.b.r: long _state$internal>;

        $r1 = <j.a.b.r: j.a.b.r$a d>;

        $l5 = 1073741823L & $l0;

        $z0 = 0;

        $l5 = $l5 >> 0;

        $i1 = (int) $l5;

        $z1 = staticinvoke <j.a.z: boolean a()>();

        if $z1 == 0 goto label4;

        if $i1 != $i3 goto label2;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label4:
        $l5 = 1152921504606846976L & $l0;

        $b2 = $l5 cmp 0L;

        if $b2 == 0 goto label5;

        r0 = virtualinvoke r0.<j.a.b.r: j.a.b.r e()>();

        return r0;

     label5:
        $r3 = <j.a.b.r: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        $r1 = <j.a.b.r: j.a.b.r$a d>;

        $l5 = virtualinvoke $r1.<j.a.b.r$a: long a(long,int)>($l0, $i4);

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>(r0, $l0, $l5);

        if $z0 == 0 goto label1;

        $r4 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i3 = r0.<j.a.b.r: int e>;

        $i3 = $i3 & $i1;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>($i3, null);

        return null;
    }

    public final j.a.b.r a(int, java.lang.Object)
    {
        java.util.concurrent.atomic.AtomicReferenceArray $r3;
        j.a.b.r$b $r4;
        j.a.b.r r0;
        int $i0, $i1;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: j.a.b.r;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r3 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i1 = r0.<j.a.b.r: int e>;

        $i1 = $i1 & $i0;

        $r2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i1);

        $z0 = $r2 instanceof j.a.b.r$b;

        if $z0 == 0 goto label1;

        $r4 = (j.a.b.r$b) $r2;

        $i1 = $r4.<j.a.b.r$b: int a>;

        if $i1 != $i0 goto label1;

        $r3 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i1 = r0.<j.a.b.r: int e>;

        $i0 = $i0 & $i1;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>($i0, $r1);

        return r0;

     label1:
        return null;
    }

    public final j.a.b.r a(long)
    {
        long $l0, $l2;
        java.util.concurrent.atomic.AtomicReferenceArray $r3;
        j.a.b.r$a $r2;
        j.a.b.r$b $r7;
        j.a.b.r r0, $r1, $r6;
        int $i1, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.lang.Object $r4, $r5;

        r0 := @this: j.a.b.r;

        $l0 := @parameter0: long;

        $r6 = new j.a.b.r;

        $r1 = $r6;

        $i1 = r0.<j.a.b.r: int g>;

        $i1 = $i1 * 2;

        $z0 = r0.<j.a.b.r: boolean h>;

        specialinvoke $r6.<j.a.b.r: void <init>(int,boolean)>($i1, $z0);

        $r2 = <j.a.b.r: j.a.b.r$a d>;

        $l2 = 1073741823L & $l0;

        $l2 = $l2 >> 0;

        $i1 = (int) $l2;

        $l2 = 1152921503533105152L & $l0;

        $l2 = $l2 >> 30;

        $i3 = (int) $l2;

     label1:
        $i4 = r0.<j.a.b.r: int e>;

        $i5 = $i1 & $i4;

        $i6 = $i3 & $i4;

        if $i5 == $i6 goto label4;

        $r3 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i4 = $i4 & $i1;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i4);

        $r5 = $r4;

        if $r4 == null goto label2;

        goto label3;

     label2:
        $r7 = new j.a.b.r$b;

        $r5 = $r7;

        specialinvoke $r7.<j.a.b.r$b: void <init>(int)>($i1);

     label3:
        $r3 = $r1.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i4 = $r1.<j.a.b.r: int e>;

        $i4 = $i4 & $i1;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>($i4, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r2 = <j.a.b.r: j.a.b.r$a d>;

        $l0 = virtualinvoke $r2.<j.a.b.r$a: long a(long,long)>($l0, 1152921504606846976L);

        $r1.<j.a.b.r: long _state$internal> = $l0;

        return $r1;
    }

    public final boolean a()
    {
        byte $b2;
        j.a.b.r r0;
        long $l0, $l1;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r1;
        boolean $z0;

        r0 := @this: j.a.b.r;

     label1:
        $l0 = r0.<j.a.b.r: long _state$internal>;

        $l1 = $l0 & 2305843009213693952L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label2;

        return 1;

     label2:
        $l1 = 1152921504606846976L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        $l1 = $l0 | 2305843009213693952L;

        $r1 = <j.a.b.r: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>(r0, $l0, $l1);

        if $z0 == 0 goto label1;

        return 1;
    }

    public final int b()
    {
        j.a.b.r$a $r1;
        j.a.b.r r0;
        int $i0, $i3;
        long $l1, $l2;

        r0 := @this: j.a.b.r;

        $r1 = <j.a.b.r: j.a.b.r$a d>;

        $l1 = r0.<j.a.b.r: long _state$internal>;

        $l2 = 1073741823L & $l1;

        $l2 = $l2 >> 0;

        $i0 = (int) $l2;

        $l1 = $l1 & 1152921503533105152L;

        $l1 = $l1 >> 30;

        $i3 = (int) $l1;

        $i0 = $i3 - $i0;

        $i0 = 1073741823 & $i0;

        return $i0;
    }

    public final j.a.b.r b(long)
    {
        j.a.b.r r0, $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        long $l0;
        java.lang.Object $r2;

        r0 := @this: j.a.b.r;

        $l0 := @parameter0: long;

     label1:
        $r2 = r0.<j.a.b.r: java.lang.Object _next>;

        $r1 = (j.a.b.r) $r2;

        if $r1 == null goto label2;

        return $r1;

     label2:
        $r3 = <j.a.b.r: java.util.concurrent.atomic.AtomicReferenceFieldUpdater a>;

        $r1 = virtualinvoke r0.<j.a.b.r: j.a.b.r a(long)>($l0);

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, null, $r1);

        goto label1;
    }

    public final boolean c()
    {
        j.a.b.r$a $r1;
        j.a.b.r r0;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: j.a.b.r;

        $r1 = <j.a.b.r: j.a.b.r$a d>;

        $l2 = r0.<j.a.b.r: long _state$internal>;

        $l3 = 1073741823L & $l2;

        $l3 = $l3 >> 0;

        $i1 = (int) $l3;

        $l2 = $l2 & 1152921503533105152L;

        $l2 = $l2 >> 30;

        $i0 = (int) $l2;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final long d()
    {
        byte $b1;
        j.a.b.r r0;
        long $l0, $l2;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r1;
        boolean $z0;

        r0 := @this: j.a.b.r;

     label1:
        $l0 = r0.<j.a.b.r: long _state$internal>;

        $l2 = $l0 & 1152921504606846976L;

        $b1 = $l2 cmp 0L;

        if $b1 == 0 goto label2;

        return $l0;

     label2:
        $l2 = $l0 | 1152921504606846976L;

        $r1 = <j.a.b.r: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>(r0, $l0, $l2);

        if $z0 == 0 goto label1;

        return $l2;
    }

    public final j.a.b.r e()
    {
        long $l0;
        j.a.b.r r0;

        r0 := @this: j.a.b.r;

        $l0 = virtualinvoke r0.<j.a.b.r: long d()>();

        r0 = virtualinvoke r0.<j.a.b.r: j.a.b.r b(long)>($l0);

        return r0;
    }

    public final java.lang.Object f()
    {
        j.a.b.A r6;
        long $l0, $l2;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r4;
        java.util.concurrent.atomic.AtomicReferenceArray $r2;
        j.a.b.r$a $r1;
        byte $b3;
        j.a.b.r r0, $r5;
        int $i1, $i4, $i5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: j.a.b.r;

     label1:
        $l0 = r0.<j.a.b.r: long _state$internal>;

        $l2 = 1152921504606846976L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        r6 = <j.a.b.r: j.a.b.A c>;

        return r6;

     label2:
        $r1 = <j.a.b.r: j.a.b.r$a d>;

        $l2 = 1073741823L & $l0;

        $l2 = $l2 >> 0;

        $i4 = (int) $l2;

        $l2 = 1152921503533105152L & $l0;

        $l2 = $l2 >> 30;

        $i1 = (int) $l2;

        $i5 = staticinvoke <j.a.b.r: int a(j.a.b.r)>(r0);

        $i1 = $i5 & $i1;

        $i5 = staticinvoke <j.a.b.r: int a(j.a.b.r)>(r0);

        $i5 = $i5 & $i4;

        if $i1 != $i5 goto label3;

        return null;

     label3:
        $r2 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i1 = staticinvoke <j.a.b.r: int a(j.a.b.r)>(r0);

        $i1 = $i1 & $i4;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i1);

        if $r3 != null goto label4;

        $z0 = staticinvoke <j.a.b.r: boolean b(j.a.b.r)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label4:
        $z0 = $r3 instanceof j.a.b.r$b;

        if $z0 == 0 goto label5;

        return null;

     label5:
        $i1 = $i4 + 1;

        $i1 = $i1 & 1073741823;

        $r4 = <j.a.b.r: java.util.concurrent.atomic.AtomicLongFieldUpdater b>;

        $r1 = <j.a.b.r: j.a.b.r$a d>;

        $l2 = virtualinvoke $r1.<j.a.b.r$a: long a(long,int)>($l0, $i1);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLongFieldUpdater: boolean compareAndSet(java.lang.Object,long,long)>(r0, $l0, $l2);

        if $z0 == 0 goto label6;

        $r2 = r0.<j.a.b.r: java.util.concurrent.atomic.AtomicReferenceArray f>;

        $i1 = staticinvoke <j.a.b.r: int a(j.a.b.r)>(r0);

        $i4 = $i1 & $i4;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>($i4, null);

        goto label8;

     label6:
        $z0 = staticinvoke <j.a.b.r: boolean b(j.a.b.r)>(r0);

        if $z0 != 0 goto label7;

        goto label1;

     label7:
        $r5 = staticinvoke <j.a.b.r: j.a.b.r a(j.a.b.r,int,int)>(r0, $i4, $i1);

        r0 = $r5;

        if $r5 == null goto label8;

        goto label7;

     label8:
        return $r3;
    }
}
