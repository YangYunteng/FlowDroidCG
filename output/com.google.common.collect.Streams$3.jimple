public final class com.google.common.collect.Streams$3 extends java.util.Spliterators$AbstractSpliterator
{
    public long index;
    public final java.util.PrimitiveIterator$OfInt val$fromIterator;
    public final com.google.common.collect.Streams$IntFunctionWithIndex val$function;

    public void <init>(long, int, java.util.PrimitiveIterator$OfInt, com.google.common.collect.Streams$IntFunctionWithIndex)
    {
        com.google.common.collect.Streams$3 r0;
        java.util.PrimitiveIterator$OfInt $r1;
        int $i0;
        long $l1;
        com.google.common.collect.Streams$IntFunctionWithIndex $r2;

        r0 := @this: com.google.common.collect.Streams$3;

        $l1 := @parameter0: long;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.util.PrimitiveIterator$OfInt;

        $r2 := @parameter3: com.google.common.collect.Streams$IntFunctionWithIndex;

        r0.<com.google.common.collect.Streams$3: java.util.PrimitiveIterator$OfInt val$fromIterator> = $r1;

        r0.<com.google.common.collect.Streams$3: com.google.common.collect.Streams$IntFunctionWithIndex val$function> = $r2;

        specialinvoke r0.<java.util.Spliterators$AbstractSpliterator: void <init>(long,int)>($l1, $i0);

        r0.<com.google.common.collect.Streams$3: long index> = 0L;

        return;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        java.util.PrimitiveIterator$OfInt $r2;
        long $l0, $l2;
        com.google.common.collect.Streams$IntFunctionWithIndex $r3;
        com.google.common.collect.Streams$3 r0;
        java.util.function.Consumer $r1;
        int $i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Streams$3;

        $r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.google.common.collect.Streams$3: java.util.PrimitiveIterator$OfInt val$fromIterator>;

        $z0 = interfaceinvoke $r2.<java.util.PrimitiveIterator$OfInt: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.Streams$3: com.google.common.collect.Streams$IntFunctionWithIndex val$function>;

        $r2 = r0.<com.google.common.collect.Streams$3: java.util.PrimitiveIterator$OfInt val$fromIterator>;

        $i1 = interfaceinvoke $r2.<java.util.PrimitiveIterator$OfInt: int nextInt()>();

        $l0 = r0.<com.google.common.collect.Streams$3: long index>;

        $l2 = 1L + $l0;

        r0.<com.google.common.collect.Streams$3: long index> = $l2;

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Streams$IntFunctionWithIndex: java.lang.Object apply(int,long)>($i1, $l0);

        interfaceinvoke $r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

        return 1;

     label1:
        return 0;
    }
}
