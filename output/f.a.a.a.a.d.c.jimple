public abstract class f.a.a.a.a.d.c extends java.lang.Object
{
    public static final int MAX_BYTE_SIZE_PER_FILE;
    public static final int MAX_FILES_IN_BATCH;
    public static final int MAX_FILES_TO_KEEP;
    public static final java.lang.String ROLL_OVER_FILE_NAME_SEPARATOR;
    public final android.content.Context context;
    public final f.a.a.a.a.b.n currentTimeProvider;
    public final int defaultMaxFilesToKeep;
    public final f.a.a.a.a.d.d eventStorage;
    public volatile long lastRollOverTime;
    public final java.util.List rollOverListeners;
    public final f.a.a.a.a.d.a transform;

    public void <init>(android.content.Context, f.a.a.a.a.d.a, f.a.a.a.a.b.n, f.a.a.a.a.d.d, int)
    {
        f.a.a.a.a.b.n $r2;
        android.content.Context $r5;
        long $l1;
        int $i0;
        f.a.a.a.a.d.d $r3;
        f.a.a.a.a.d.c r0;
        f.a.a.a.a.d.a $r1;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: f.a.a.a.a.d.c;

        $r5 := @parameter0: android.content.Context;

        $r1 := @parameter1: f.a.a.a.a.d.a;

        $r2 := @parameter2: f.a.a.a.a.b.n;

        $r3 := @parameter3: f.a.a.a.a.d.d;

        $i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<f.a.a.a.a.d.c: java.util.List rollOverListeners> = $r4;

        $r5 = virtualinvoke $r5.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<f.a.a.a.a.d.c: android.content.Context context> = $r5;

        r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.a transform> = $r1;

        r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage> = $r3;

        r0.<f.a.a.a.a.d.c: f.a.a.a.a.b.n currentTimeProvider> = $r2;

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.b.n currentTimeProvider>;

        $l1 = interfaceinvoke $r2.<f.a.a.a.a.b.n: long getCurrentTimeMillis()>();

        r0.<f.a.a.a.a.d.c: long lastRollOverTime> = $l1;

        r0.<f.a.a.a.a.d.c: int defaultMaxFilesToKeep> = $i0;

        return;
    }

    private void rollFileOverIfNeeded(int)
    {
        android.content.Context $r6;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.util.Locale $r2;
        int $i0, $i1;
        f.a.a.a.a.d.d $r1;
        f.a.a.a.a.d.c r0;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: f.a.a.a.a.d.c;

        $i0 := @parameter0: int;

        $r1 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        $i1 = virtualinvoke r0.<f.a.a.a.a.d.c: int getMaxByteSizePerFile()>();

        $z0 = interfaceinvoke $r1.<f.a.a.a.a.d.d: boolean a(int,int)>($i0, $i1);

        if $z0 != 0 goto label1;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[3];

        $r1 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        $i1 = interfaceinvoke $r1.<f.a.a.a.a.d.d: int a()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r4;

        $i0 = virtualinvoke r0.<f.a.a.a.a.d.c: int getMaxByteSizePerFile()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "session analytics events file is %d bytes, new event is %d bytes, this is over flush limit of %d, rolling it over", $r3);

        $r6 = r0.<f.a.a.a.a.d.c: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void a(android.content.Context,int,java.lang.String,java.lang.String)>($r6, 4, "Fabric", $r5);

        virtualinvoke r0.<f.a.a.a.a.d.c: boolean rollFileOver()>();

     label1:
        return;
    }

    private void triggerRollOverOnListeners(java.lang.String)
    {
        android.content.Context $r2;
        java.util.Iterator $r4;
        java.lang.Exception $r7;
        java.util.List $r3;
        f.a.a.a.a.d.e $r6;
        f.a.a.a.a.d.c r0;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: f.a.a.a.a.d.c;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<f.a.a.a.a.d.c: java.util.List rollOverListeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (f.a.a.a.a.d.e) $r5;

     label2:
        interfaceinvoke $r6.<f.a.a.a.a.d.e: void onRollOver(java.lang.String)>($r1);

     label3:
        goto label1;

     label4:
        $r7 := @caughtexception;

        $r2 = r0.<f.a.a.a.a.d.c: android.content.Context context>;

        staticinvoke <f.a.a.a.a.b.l: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r2, "One of the roll over listeners threw an exception", $r7);

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void deleteAllEventsFiles()
    {
        f.a.a.a.a.d.d $r2;
        f.a.a.a.a.d.c r0;
        java.util.List $r1;

        r0 := @this: f.a.a.a.a.d.c;

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        $r1 = interfaceinvoke $r2.<f.a.a.a.a.d.d: java.util.List b()>();

        interfaceinvoke $r2.<f.a.a.a.a.d.d: void a(java.util.List)>($r1);

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        interfaceinvoke $r2.<f.a.a.a.a.d.d: void d()>();

        return;
    }

    public void deleteOldestInRollOverIfOverMax()
    {
        android.content.Context $r3;
        java.lang.Object[] $r5;
        long $l3;
        java.lang.Integer $r6;
        java.util.TreeSet $r8;
        java.util.ArrayList $r14;
        java.util.Locale $r4;
        int $i0, $i1, $i2;
        f.a.a.a.a.d.d $r1;
        f.a.a.a.a.d.c r0;
        java.lang.String $r7;
        f.a.a.a.a.d.b $r9;
        boolean $z0;
        java.util.Iterator $r10;
        java.io.File $r12;
        java.util.List $r2;
        f.a.a.a.a.d.c$a $r13;
        java.lang.Object $r11;

        r0 := @this: f.a.a.a.a.d.c;

        $r1 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        $r2 = interfaceinvoke $r1.<f.a.a.a.a.d.d: java.util.List b()>();

        $i0 = virtualinvoke r0.<f.a.a.a.a.d.c: int getMaxFilesToKeep()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 > $i0 goto label1;

        return;

     label1:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i1 - $i0;

        $r3 = r0.<f.a.a.a.a.d.c: android.content.Context context>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[3];

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "Found %d files in  roll over directory, this is greater than %d, deleting %d oldest files", $r5);

        staticinvoke <f.a.a.a.a.b.l: void c(android.content.Context,java.lang.String)>($r3, $r7);

        $r8 = new java.util.TreeSet;

        $r9 = new f.a.a.a.a.d.b;

        specialinvoke $r9.<f.a.a.a.a.d.b: void <init>(f.a.a.a.a.d.c)>(r0);

        specialinvoke $r8.<java.util.TreeSet: void <init>(java.util.Comparator)>($r9);

        $r10 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.io.File) $r11;

        $r7 = virtualinvoke $r12.<java.io.File: java.lang.String getName()>();

        $l3 = virtualinvoke r0.<f.a.a.a.a.d.c: long parseCreationTimestampFromFileName(java.lang.String)>($r7);

        $r13 = new f.a.a.a.a.d.c$a;

        specialinvoke $r13.<f.a.a.a.a.d.c$a: void <init>(java.io.File,long)>($r12, $l3);

        virtualinvoke $r8.<java.util.TreeSet: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r10 = virtualinvoke $r8.<java.util.TreeSet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (f.a.a.a.a.d.c$a) $r11;

        $r12 = $r13.<f.a.a.a.a.d.c$a: java.io.File a>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $i0 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i0 != $i1 goto label4;

     label5:
        $r1 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        interfaceinvoke $r1.<f.a.a.a.a.d.d: void a(java.util.List)>($r14);

        return;
    }

    public void deleteSentFiles(java.util.List)
    {
        f.a.a.a.a.d.d $r2;
        f.a.a.a.a.d.c r0;
        java.util.List $r1;

        r0 := @this: f.a.a.a.a.d.c;

        $r1 := @parameter0: java.util.List;

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        interfaceinvoke $r2.<f.a.a.a.a.d.d: void a(java.util.List)>($r1);

        return;
    }

    public abstract java.lang.String generateUniqueRollOverFileName();

    public java.util.List getBatchOfFilesToSend()
    {
        f.a.a.a.a.d.d $r2;
        f.a.a.a.a.d.c r0;
        java.util.List $r1;

        r0 := @this: f.a.a.a.a.d.c;

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        $r1 = interfaceinvoke $r2.<f.a.a.a.a.d.d: java.util.List a(int)>(1);

        return $r1;
    }

    public long getLastRollOverTime()
    {
        f.a.a.a.a.d.c r0;
        long l0;

        r0 := @this: f.a.a.a.a.d.c;

        l0 = r0.<f.a.a.a.a.d.c: long lastRollOverTime>;

        return l0;
    }

    public int getMaxByteSizePerFile()
    {
        f.a.a.a.a.d.c r0;

        r0 := @this: f.a.a.a.a.d.c;

        return 8000;
    }

    public int getMaxFilesToKeep()
    {
        int i0;
        f.a.a.a.a.d.c r0;

        r0 := @this: f.a.a.a.a.d.c;

        i0 = r0.<f.a.a.a.a.d.c: int defaultMaxFilesToKeep>;

        return i0;
    }

    public long parseCreationTimestampFromFileName(java.lang.String)
    {
        java.lang.Long $r4;
        int $i0;
        f.a.a.a.a.d.c r0;
        java.lang.NumberFormatException $r1;
        java.lang.String[] $r3;
        long $l1;
        java.lang.String $r2;

        r0 := @this: f.a.a.a.a.d.c;

        $r2 := @parameter0: java.lang.String;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("_");

        $i0 = lengthof $r3;

        if $i0 == 3 goto label1;

        return 0L;

     label1:
        $r2 = $r3[2];

     label2:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r2);

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label3:
        return $l1;

     label4:
        $r1 := @caughtexception;

        return 0L;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public void registerRollOverListener(f.a.a.a.a.d.e)
    {
        f.a.a.a.a.d.e $r1;
        f.a.a.a.a.d.c r0;
        java.util.List $r2;

        r0 := @this: f.a.a.a.a.d.c;

        $r1 := @parameter0: f.a.a.a.a.d.e;

        if $r1 == null goto label1;

        $r2 = r0.<f.a.a.a.a.d.c: java.util.List rollOverListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public boolean rollFileOver()
    {
        android.content.Context $r5;
        f.a.a.a.a.b.n $r7;
        java.lang.Object[] $r1;
        long $l0;
        java.util.Locale $r6;
        f.a.a.a.a.d.d $r2;
        f.a.a.a.a.d.c r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: f.a.a.a.a.d.c;

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        $z0 = interfaceinvoke $r2.<f.a.a.a.a.d.d: boolean c()>();

        $z1 = 1;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<f.a.a.a.a.d.c: java.lang.String generateUniqueRollOverFileName()>();

        $r4 = $r3;

        $r2 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        interfaceinvoke $r2.<f.a.a.a.a.d.d: void a(java.lang.String)>($r3);

        $r5 = r0.<f.a.a.a.a.d.c: android.content.Context context>;

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "generated new file %s", $r1);

        staticinvoke <f.a.a.a.a.b.l: void a(android.content.Context,int,java.lang.String,java.lang.String)>($r5, 4, "Fabric", $r3);

        $r7 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.b.n currentTimeProvider>;

        $l0 = interfaceinvoke $r7.<f.a.a.a.a.b.n: long getCurrentTimeMillis()>();

        r0.<f.a.a.a.a.d.c: long lastRollOverTime> = $l0;

        goto label2;

     label1:
        $r4 = null;

        $z1 = 0;

     label2:
        specialinvoke r0.<f.a.a.a.a.d.c: void triggerRollOverOnListeners(java.lang.String)>($r4);

        return $z1;
    }

    public void writeEvent(java.lang.Object)
    {
        byte[] $r1;
        int $i0;
        f.a.a.a.a.d.d $r4;
        f.a.a.a.a.d.c r0;
        java.lang.Object $r2;
        f.a.a.a.a.d.a $r3;

        r0 := @this: f.a.a.a.a.d.c;

        $r2 := @parameter0: java.lang.Object;

        $r3 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.a transform>;

        $r1 = interfaceinvoke $r3.<f.a.a.a.a.d.a: byte[] toBytes(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

        specialinvoke r0.<f.a.a.a.a.d.c: void rollFileOverIfNeeded(int)>($i0);

        $r4 = r0.<f.a.a.a.a.d.c: f.a.a.a.a.d.d eventStorage>;

        interfaceinvoke $r4.<f.a.a.a.a.d.d: void add(byte[])>($r1);

        return;
    }

    public static void <clinit>()
    {
        <f.a.a.a.a.d.c: java.lang.String ROLL_OVER_FILE_NAME_SEPARATOR> = "_";

        <f.a.a.a.a.d.c: int MAX_FILES_TO_KEEP> = 100;

        <f.a.a.a.a.d.c: int MAX_FILES_IN_BATCH> = 1;

        <f.a.a.a.a.d.c: int MAX_BYTE_SIZE_PER_FILE> = 8000;

        return;
    }
}
