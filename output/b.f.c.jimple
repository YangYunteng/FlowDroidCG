public class b.f.c extends b.f.h
{
    public final b.f.d d;

    public void <init>(b.f.d)
    {
        b.f.d $r1;
        b.f.c r0;

        r0 := @this: b.f.c;

        $r1 := @parameter0: b.f.d;

        r0.<b.f.c: b.f.d d> = $r1;

        specialinvoke r0.<b.f.h: void <init>()>();

        return;
    }

    public int a(java.lang.Object)
    {
        b.f.c r0;
        int $i0;
        java.lang.Object $r2;
        b.f.d $r1;

        r0 := @this: b.f.c;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.f.c: b.f.d d>;

        $i0 = virtualinvoke $r1.<b.f.d: int indexOf(java.lang.Object)>($r2);

        return $i0;
    }

    public java.lang.Object a(int, int)
    {
        java.lang.Object[] $r2;
        b.f.c r0;
        int $i0, $i1;
        java.lang.Object $r3;
        b.f.d $r1;

        r0 := @this: b.f.c;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<b.f.c: b.f.d d>;

        $r2 = $r1.<b.f.d: java.lang.Object[] h>;

        $r3 = $r2[$i0];

        return $r3;
    }

    public java.lang.Object a(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r2;
        b.f.c r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: b.f.c;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not a map");

        throw $r2;
    }

    public void a()
    {
        b.f.d $r1;
        b.f.c r0;

        r0 := @this: b.f.c;

        $r1 = r0.<b.f.c: b.f.d d>;

        virtualinvoke $r1.<b.f.d: void clear()>();

        return;
    }

    public void a(int)
    {
        int $i0;
        b.f.d $r1;
        b.f.c r0;

        r0 := @this: b.f.c;

        $i0 := @parameter0: int;

        $r1 = r0.<b.f.c: b.f.d d>;

        virtualinvoke $r1.<b.f.d: java.lang.Object c(int)>($i0);

        return;
    }

    public void a(java.lang.Object, java.lang.Object)
    {
        b.f.c r0;
        java.lang.Object $r1, $r2;
        b.f.d $r3;

        r0 := @this: b.f.c;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<b.f.c: b.f.d d>;

        virtualinvoke $r3.<b.f.d: boolean add(java.lang.Object)>($r1);

        return;
    }

    public int b(java.lang.Object)
    {
        b.f.c r0;
        int $i0;
        java.lang.Object $r2;
        b.f.d $r1;

        r0 := @this: b.f.c;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.f.c: b.f.d d>;

        $i0 = virtualinvoke $r1.<b.f.d: int indexOf(java.lang.Object)>($r2);

        return $i0;
    }

    public java.util.Map b()
    {
        java.lang.UnsupportedOperationException $r1;
        b.f.c r0;

        r0 := @this: b.f.c;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not a map");

        throw $r1;
    }

    public int c()
    {
        int i0;
        b.f.d $r1;
        b.f.c r0;

        r0 := @this: b.f.c;

        $r1 = r0.<b.f.c: b.f.d d>;

        i0 = $r1.<b.f.d: int i>;

        return i0;
    }
}
