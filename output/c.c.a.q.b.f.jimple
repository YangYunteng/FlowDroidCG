public final class c.c.a.q.b.f extends c.l.a.b
{
    public final c.c.a.q.b.i a;
    public final java.lang.String b;
    public final java.lang.String c;
    public final androidx.lifecycle.MutableLiveData d;
    public final androidx.lifecycle.MutableLiveData e;

    public void <init>(c.c.a.q.b.i, java.lang.String, java.lang.String, androidx.lifecycle.MutableLiveData, androidx.lifecycle.MutableLiveData, int, java.lang.String, c.b.a.m$b, c.b.a.m$a)
    {
        c.c.a.q.b.f r0;
        androidx.lifecycle.MutableLiveData $r4, $r5;
        c.c.a.q.b.i $r1;
        int $i0;
        c.b.a.m$a $r8;
        java.lang.String $r2, $r3, $r6;
        c.b.a.m$b $r7;

        r0 := @this: c.c.a.q.b.f;

        $r1 := @parameter0: c.c.a.q.b.i;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: androidx.lifecycle.MutableLiveData;

        $r5 := @parameter4: androidx.lifecycle.MutableLiveData;

        $i0 := @parameter5: int;

        $r6 := @parameter6: java.lang.String;

        $r7 := @parameter7: c.b.a.m$b;

        $r8 := @parameter8: c.b.a.m$a;

        r0.<c.c.a.q.b.f: c.c.a.q.b.i a> = $r1;

        r0.<c.c.a.q.b.f: java.lang.String b> = $r2;

        r0.<c.c.a.q.b.f: java.lang.String c> = $r3;

        r0.<c.c.a.q.b.f: androidx.lifecycle.MutableLiveData d> = $r4;

        r0.<c.c.a.q.b.f: androidx.lifecycle.MutableLiveData e> = $r5;

        specialinvoke r0.<c.l.a.b: void <init>(int,java.lang.String,c.b.a.m$b,c.b.a.m$a)>($i0, $r6, $r7, $r8);

        return;
    }

    public byte[] getBody()
    {
        c.c.a.q.b.f r0;
        byte[] $r1;
        java.nio.charset.Charset $r3;
        kotlin.TypeCastException $r4;
        java.lang.String $r2;

        r0 := @this: c.c.a.q.b.f;

        $r2 = r0.<c.c.a.q.b.f: java.lang.String b>;

        $r3 = <i.j.c: java.nio.charset.Charset a>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r1, "(this as java.lang.String).getBytes(charset)");

        return $r1;

     label1:
        $r4 = new kotlin.TypeCastException;

        specialinvoke $r4.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r4;
    }

    public java.lang.String getBodyContentType()
    {
        c.c.a.q.b.f r0;

        r0 := @this: c.c.a.q.b.f;

        return "application/xml";
    }

    public java.util.Map getHeaders()
    {
        c.c.a.q.b.f r0;
        java.util.HashMap $r1;

        r0 := @this: c.c.a.q.b.f;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", "application/xml");

        return $r1;
    }
}
