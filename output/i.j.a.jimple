public class i.j.a extends java.lang.Object
{

    public static final int a(char, int)
    {
        int $i0, $i2;
        char $c1;

        $c1 := @parameter0: char;

        $i0 := @parameter1: int;

        $i2 = (int) $c1;

        $i0 = staticinvoke <java.lang.Character: int digit(int,int)>($i2, $i0);

        return $i0;
    }

    public static final int a(int)
    {
        i.g.d $r3;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        if 2 > $i0 goto label1;

        if 36 < $i0 goto label1;

        return $i0;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("radix ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not in valid range ");

        $r3 = new i.g.d;

        specialinvoke $r3.<i.g.d: void <init>(int,int)>(2, 36);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    public static final boolean a(char)
    {
        char $c0;
        boolean $z0;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
