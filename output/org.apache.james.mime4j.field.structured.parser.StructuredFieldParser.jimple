public class org.apache.james.mime4j.field.structured.parser.StructuredFieldParser extends java.lang.Object implements org.apache.james.mime4j.field.structured.parser.StructuredFieldParserConstants
{
    public static int[] jj_la1_0;
    public java.util.Vector jj_expentries;
    public int[] jj_expentry;
    public int jj_gen;
    public org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream;
    public int jj_kind;
    public final int[] jj_la1;
    public org.apache.james.mime4j.field.structured.parser.Token jj_nt;
    public int jj_ntk;
    public boolean preserveFolding;
    public org.apache.james.mime4j.field.structured.parser.Token token;
    public org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source;

    static void <clinit>()
    {
        staticinvoke <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: void jj_la1_0()>();

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: void <init>(java.io.InputStream,java.lang.String)>($r1, null);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r8;
        java.lang.RuntimeException $r10;
        java.util.Vector $r6;
        int[] $r4;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r1, $r7;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r9;
        java.lang.String $r3;
        java.io.UnsupportedEncodingException $r5;
        java.io.InputStream $r2;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r2 := @parameter0: java.io.InputStream;

        $r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = 0;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = 0;

        $r4 = newarray (int)[2];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1> = $r4;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries> = $r6;

        $i1 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = $i1;

        $r7 = new org.apache.james.mime4j.field.structured.parser.SimpleCharStream;

     label1:
        specialinvoke $r7.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void <init>(java.io.InputStream,java.lang.String,int,int)>($r2, $r3, 1, 1);

     label2:
        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream> = $r7;

        $r8 = new org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        specialinvoke $r8.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void <init>(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r1);

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r8;

        $r9 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r9.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r9;

        $i1 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

     label3:
        if $i0 >= 2 goto label4;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = -1;

        $r4[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        goto label6;

     label6:
        throw $r10;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
    }

    public void <init>(java.io.Reader)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r6;
        java.io.Reader $r1;
        java.util.Vector $r4;
        int[] $r2;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r3, $r5;
        org.apache.james.mime4j.field.structured.parser.Token $r7;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = 0;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = 0;

        $r2 = newarray (int)[2];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1> = $r2;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries> = $r4;

        $i1 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = $i1;

        $r5 = new org.apache.james.mime4j.field.structured.parser.SimpleCharStream;

        specialinvoke $r5.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void <init>(java.io.Reader,int,int)>($r1, 1, 1);

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream> = $r5;

        $r6 = new org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        specialinvoke $r6.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void <init>(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r3);

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r6;

        $r7 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r7.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r7;

        $i1 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = -1;

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.util.Vector $r3;
        int[] $r2;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r1;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r4;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = 0;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = 0;

        $r2 = newarray (int)[2];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries> = $r3;

        $i1 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = $i1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r1;

        $r4 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r4.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r4;

        $i1 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = -1;

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    private final java.lang.String doParse()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.ParseException $r6;
        int[] $r2;
        java.lang.StringBuffer $r1, $r5;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r3;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r5 = new java.lang.StringBuffer;

        $r1 = $r5;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(50);

        $z0 = 1;

        $z1 = 0;

     label01:
        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk>;

        $i1 = -1;

        if $i0 != $i1 goto label02;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk()>();

     label02:
        lookupswitch($i0)
        {
            case 11: goto label04;
            case 12: goto label04;
            case 13: goto label04;
            case 14: goto label04;
            case 15: goto label04;
            default: goto label03;
        };

     label03:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $r2[0] = $i0;

        goto label16;

     label04:
        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk>;

        $i1 = -1;

        if $i0 != $i1 goto label05;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk()>();

     label05:
        lookupswitch($i0)
        {
            case 11: goto label15;
            case 12: goto label14;
            case 13: goto label11;
            case 14: goto label10;
            case 15: goto label07;
            default: goto label06;
        };

     label06:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $r2[1] = $i0;

        $i0 = -1;

        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>($i0);

        $r6 = new org.apache.james.mime4j.field.structured.parser.ParseException;

        specialinvoke $r6.<org.apache.james.mime4j.field.structured.parser.ParseException: void <init>()>();

        throw $r6;

     label07:
        $r3 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(15);

        if $z0 == 0 goto label08;

        $z0 = 0;

        goto label09;

     label08:
        if $z1 == 0 goto label09;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $z1 = 0;

     label09:
        $r4 = $r3.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label01;

     label10:
        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(14);

        $z1 = 1;

        goto label01;

     label11:
        $r3 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(13);

        if $z0 == 0 goto label12;

        $z0 = 0;

        goto label13;

     label12:
        if $z1 == 0 goto label13;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $z1 = 0;

     label13:
        $r4 = $r3.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label01;

     label14:
        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(12);

        $z2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding>;

        if $z2 == 0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        goto label01;

     label15:
        $r3 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(11);

        $r4 = $r3.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label01;

     label16:
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private final org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.ParseException $r4;
        org.apache.james.mime4j.field.structured.parser.Token $r1, $r2;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $i1 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r2 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        if $r2 == null goto label1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r2;

        goto label2;

     label1:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r2 = virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r1.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r2;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r2;

     label2:
        $i0 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $i0 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        if $i0 != $i1 goto label3;

        $i1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $i1 = $i1 + 1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = $i1;

        return $r2;

     label3:
        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = $i1;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.ParseException generateParseException()>();

        throw $r4;
    }

    public static void jj_la1_0()
    {
        int $i0;
        int[] $r0;

        $r0 = newarray (int)[2];

        $i0 = 63488;

        $r0[0] = $i0;

        $i0 = 63488;

        $r0[1] = $i0;

        <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1_0> = $r0;

        return;
    }

    private final int jj_ntk()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.Token $r1, $r2;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r1 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_nt> = $r1;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r1 = virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r1;

        $i0 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        return $i0;

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_nt>;

        $i0 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        return $i0;
    }

    public void ReInit(java.io.InputStream)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: void ReInit(java.io.InputStream,java.lang.String)>($r1, null);

        return;
    }

    public void ReInit(java.io.InputStream, java.lang.String)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r4;
        java.lang.RuntimeException $r8;
        int[] $r5;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r3;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r7;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException $r6;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

     label1:
        virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void ReInit(java.io.InputStream,java.lang.String,int,int)>($r1, $r2, 1, 1);

     label2:
        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        virtualinvoke $r4.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void ReInit(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r3);

        $r7 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r7.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r7;

        $i0 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        $i0 = 0;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

     label3:
        if $i0 >= 2 goto label4;

        $r5 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = -1;

        $r5[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        goto label6;

     label6:
        throw $r8;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
    }

    public void ReInit(java.io.Reader)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;
        java.io.Reader $r1;
        int[] $r4;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r2;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r5;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        virtualinvoke $r2.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int)>($r1, 1, 1);

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void ReInit(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r2);

        $r5 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r5.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r5;

        $i0 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        $i0 = 0;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = -1;

        $r4[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void ReInit(org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        int[] $r2;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r1;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r1;

        $r3 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r3.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r3;

        $i0 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        $i0 = 0;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = -1;

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public final void disable_tracing()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        return;
    }

    public final void enable_tracing()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        return;
    }

    public org.apache.james.mime4j.field.structured.parser.ParseException generateParseException()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        int[][] $r4;
        org.apache.james.mime4j.field.structured.parser.ParseException $r8;
        boolean[] $r2;
        java.lang.String[] $r7;
        java.util.Vector $r1;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.james.mime4j.field.structured.parser.Token $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries>;

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        $r2 = newarray (boolean)[18];

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i2 >= 18 goto label02;

        $r2[$i2] = 0;

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $i2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind>;

        if $i2 < 0 goto label03;

        $r2[$i2] = 1;

        $i2 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = $i2;

     label03:
        $i2 = 0;

     label04:
        if $i2 >= 2 goto label08;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i3 = $r3[$i2];

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        if $i3 != $i0 goto label07;

        $i3 = 0;

     label05:
        if $i3 >= 32 goto label07;

        $r3 = <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1_0>;

        $i4 = $r3[$i2];

        $i0 = 1 << $i3;

        $i0 = $i4 & $i0;

        if $i0 == 0 goto label06;

        $r2[$i3] = 1;

     label06:
        $i3 = $i3 + 1;

        goto label05;

     label07:
        $i2 = $i2 + 1;

        goto label04;

     label08:
        $i2 = 0;

     label09:
        if $i2 >= 18 goto label11;

        $z0 = $r2[$i2];

        if $z0 == 0 goto label10;

        $r3 = newarray (int)[1];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_expentry> = $r3;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_expentry>;

        $r3[0] = $i2;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries>;

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r3);

     label10:
        $i2 = $i2 + 1;

        goto label09;

     label11:
        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries>;

        $i2 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $r4 = newarray (int[])[$i2];

     label12:
        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries>;

        $i2 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i1 >= $i2 goto label13;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.Vector jj_expentries>;

        $r5 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r3 = (int[]) $r5;

        $r4[$i1] = $r3;

        $i1 = $i1 + 1;

        goto label12;

     label13:
        $r8 = new org.apache.james.mime4j.field.structured.parser.ParseException;

        $r6 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r7 = <org.apache.james.mime4j.field.structured.parser.StructuredFieldParserConstants: java.lang.String[] tokenImage>;

        specialinvoke $r8.<org.apache.james.mime4j.field.structured.parser.ParseException: void <init>(org.apache.james.mime4j.field.structured.parser.Token,int[][],java.lang.String[])>($r6, $r4, $r7);

        return $r8;
    }

    public final org.apache.james.mime4j.field.structured.parser.Token getNextToken()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.Token $r1, $r2;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r1 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        if $r1 == null goto label1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r1;

        goto label2;

     label1:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r1 = virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r1;

     label2:
        $i0 = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $i0 = $i0 + 1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = $i0;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        return $r2;
    }

    public final org.apache.james.mime4j.field.structured.parser.Token getToken(int)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token $r1, $r2, $r3;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r4;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $i0 := @parameter0: int;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        if $r3 == null goto label2;

        goto label3;

     label2:
        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r1 = virtualinvoke $r4.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r3 = $r1;

        $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r1;

     label3:
        $r2 = $r3;

        $i1 = $i1 + 1;

        goto label1;

     label4:
        return $r2;
    }

    public boolean isFoldingPreserved()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        z0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding>;

        return z0;
    }

    public java.lang.String parse()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.ParseException $r1;
        java.lang.String $r2;
        org.apache.james.mime4j.field.structured.parser.TokenMgrError $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

     label1:
        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.lang.String doParse()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r1 = new org.apache.james.mime4j.field.structured.parser.ParseException;

        specialinvoke $r1.<org.apache.james.mime4j.field.structured.parser.ParseException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch org.apache.james.mime4j.field.structured.parser.TokenMgrError from label1 to label2 with label3;
    }

    public void setFoldingPreserved(boolean)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = $z0;

        return;
    }
}
