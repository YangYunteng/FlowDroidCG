public class c.c.a.d.c.h extends java.lang.Object
{
    public static java.util.Map a;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <c.c.a.d.c.h: java.util.Map a> = $r0;

        return;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "Lc/c/a/d/c/h;";

     label1:
        $r1 = <c.c.a.d.c.h: java.util.Map a>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r1 = <c.c.a.d.c.h: java.util.Map a>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r0);

     label2:
        $r1 = <c.c.a.d.c.h: java.util.Map a>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r2;

     label3:
        exitmonitor class "Lc/c/a/d/c/h;";

        return $r0;

     label4:
        $r3 := @caughtexception;

        exitmonitor class "Lc/c/a/d/c/h;";

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
}
