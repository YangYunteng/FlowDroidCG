public final class c.d.a.a.d extends c.d.a.a.a
{
    public final java.io.File c;

    public void <init>(java.lang.String, java.io.File, java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r3, $r4;
        c.d.a.a.c $r5;
        java.lang.IllegalArgumentException $r6;
        c.d.a.a.d r0;
        java.io.File $r2;

        r0 := @this: c.d.a.a.d;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<c.d.a.a.a: void <init>()>();

        if $r2 == null goto label4;

        if $r1 == null goto label3;

        r0.<c.d.a.a.d: java.io.File c> = $r2;

        $r1 = staticinvoke <c.d.a.c.c: java.lang.String a(java.lang.String,java.lang.String)>($r1, "US-ASCII");

        if $r3 != null goto label1;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

     label1:
        $r3 = staticinvoke <c.d.a.c.c: java.lang.String a(java.lang.String,java.lang.String)>($r3, "US-ASCII");

        if $r4 != null goto label2;

        $r4 = "application/octet-stream";

     label2:
        $r5 = new c.d.a.a.c;

        specialinvoke $r5.<c.d.a.a.c: void <init>(c.d.a.a.d,java.lang.String,java.lang.String,java.lang.String)>(r0, $r1, $r3, $r4);

        r0.<c.d.a.a.a: c.d.a.a.a$a a> = $r5;

        return;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r6;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File may not be null");

        throw $r6;
    }

    public long a(c.d.a.a.b)
    {
        byte[] $r2;
        int $i0;
        long $l1, $l2;
        c.d.a.a.b $r1;
        c.d.a.a.d r0;
        java.io.File $r3;

        r0 := @this: c.d.a.a.d;

        $r1 := @parameter0: c.d.a.a.b;

        $r2 = virtualinvoke r0.<c.d.a.a.a: byte[] c(c.d.a.a.b)>($r1);

        $i0 = lengthof $r2;

        $l1 = (long) $i0;

        $r3 = r0.<c.d.a.a.d: java.io.File c>;

        $l2 = virtualinvoke $r3.<java.io.File: long length()>();

        $l1 = $l1 + $l2;

        $r2 = <c.d.a.a.h: byte[] i>;

        $i0 = lengthof $r2;

        $l2 = (long) $i0;

        $l1 = $l1 + $l2;

        return $l1;
    }

    public void a(java.io.OutputStream, c.d.a.a.b)
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r6;
        byte[] $r3;
        java.io.FileInputStream $r4, $r7;
        java.io.File $r5;
        int $i0, $i1;
        c.d.a.a.b $r2;
        c.d.a.a.d r0;

        r0 := @this: c.d.a.a.d;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: c.d.a.a.b;

        $r3 = virtualinvoke r0.<c.d.a.a.a: byte[] c(c.d.a.a.b)>($r2);

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r3);

        $r7 = new java.io.FileInputStream;

        $r4 = $r7;

        $r5 = r0.<c.d.a.a.d: java.io.File c>;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        $r3 = newarray (byte)[4096];

     label1:
        $i0 = virtualinvoke $r4.<java.io.FileInputStream: int read(byte[])>($r3);

     label2:
        $i1 = -1;

        if $i0 == $i1 goto label5;

     label3:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

     label4:
        goto label1;

     label5:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

        $r3 = <c.d.a.a.h: byte[] i>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r3);

        return;

     label6:
        $r6 := @caughtexception;

        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

        goto label7;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }
}
