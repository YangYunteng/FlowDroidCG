public class javax.'annotation'.Nonnull$Checker extends java.lang.Object implements javax.'annotation'.meta.TypeQualifierValidator
{

    public void <init>()
    {
        javax.'annotation'.Nonnull$Checker r0;

        r0 := @this: javax.'annotation'.Nonnull$Checker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile javax.'annotation'.meta.When forConstantValue(java.lang.'annotation'.Annotation, java.lang.Object)
    {
        javax.'annotation'.Nonnull$Checker r0;
        java.lang.'annotation'.Annotation $r3;
        java.lang.Object $r1;
        javax.'annotation'.meta.When $r2;
        javax.'annotation'.Nonnull $r4;

        r0 := @this: javax.'annotation'.Nonnull$Checker;

        $r3 := @parameter0: java.lang.'annotation'.Annotation;

        $r1 := @parameter1: java.lang.Object;

        $r4 = (javax.'annotation'.Nonnull) $r3;

        $r2 = virtualinvoke r0.<javax.'annotation'.Nonnull$Checker: javax.'annotation'.meta.When forConstantValue(javax.'annotation'.Nonnull,java.lang.Object)>($r4, $r1);

        return $r2;
    }

    public javax.'annotation'.meta.When forConstantValue(javax.'annotation'.Nonnull, java.lang.Object)
    {
        javax.'annotation'.Nonnull$Checker r0;
        java.lang.Object $r1;
        javax.'annotation'.Nonnull $r2;
        javax.'annotation'.meta.When r3;

        r0 := @this: javax.'annotation'.Nonnull$Checker;

        $r2 := @parameter0: javax.'annotation'.Nonnull;

        $r1 := @parameter1: java.lang.Object;

        if $r1 != null goto label1;

        r3 = <javax.'annotation'.meta.When: javax.'annotation'.meta.When NEVER>;

        return r3;

     label1:
        r3 = <javax.'annotation'.meta.When: javax.'annotation'.meta.When ALWAYS>;

        return r3;
    }
}
