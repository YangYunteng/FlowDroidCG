public abstract class com.google.common.escape.CharEscaper extends com.google.common.escape.Escaper
{
    public static final int DEST_PAD_MULTIPLIER;

    public void <init>()
    {
        com.google.common.escape.CharEscaper r0;

        r0 := @this: com.google.common.escape.CharEscaper;

        specialinvoke r0.<com.google.common.escape.Escaper: void <init>()>();

        return;
    }

    public static char[] growBuffer(char[], int, int)
    {
        int $i0, $i1;
        char[] $r0, $r1;
        java.lang.AssertionError $r2;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 < 0 goto label1;

        $r1 = newarray (char)[$i1];

        if $i0 <= 0 goto label2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Cannot increase internal buffer any further");

        throw $r2;

     label2:
        return $r1;
    }

    public java.lang.String escape(java.lang.String)
    {
        com.google.common.escape.CharEscaper r0;
        int $i0, $i1;
        char[] $r2;
        char $c2;
        java.lang.String $r1;

        r0 := @this: com.google.common.escape.CharEscaper;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $r2 = virtualinvoke r0.<com.google.common.escape.CharEscaper: char[] escape(char)>($c2);

        if $r2 == null goto label2;

        $r1 = virtualinvoke r0.<com.google.common.escape.CharEscaper: java.lang.String escapeSlow(java.lang.String,int)>($r1, $i1);

        return $r1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public abstract char[] escape(char);

    public final java.lang.String escapeSlow(java.lang.String, int)
    {
        com.google.common.escape.CharEscaper r0;
        char $c9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r2, $r3;
        java.lang.String $r1;

        r0 := @this: com.google.common.escape.CharEscaper;

        $r1 := @parameter0: java.lang.String;

        $i4 := @parameter1: int;

        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = staticinvoke <com.google.common.escape.Platform: char[] charBufferFromThreadLocal()>();

        $r3 = $r2;

        $i7 = lengthof $r2;

        $i6 = 0;

        $i8 = 0;

     label01:
        if $i4 >= $i5 goto label07;

        $c9 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $r2 = virtualinvoke r0.<com.google.common.escape.CharEscaper: char[] escape(char)>($c9);

        if $r2 != null goto label02;

        goto label06;

     label02:
        $i0 = lengthof $r2;

        $i1 = $i4 - $i6;

        $i2 = $i8 + $i1;

        $i3 = $i2 + $i0;

        if $i7 >= $i3 goto label03;

        $i7 = $i5 - $i4;

        $i7 = $i7 * 2;

        $i7 = $i7 + $i3;

        $r3 = staticinvoke <com.google.common.escape.CharEscaper: char[] growBuffer(char[],int,int)>($r3, $i8, $i7);

     label03:
        if $i1 <= 0 goto label04;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>($i6, $i4, $r3, $i8);

        $i8 = $i2;

     label04:
        if $i0 <= 0 goto label05;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i8, $i0);

        $i8 = $i8 + $i0;

     label05:
        $i6 = $i4 + 1;

     label06:
        $i4 = $i4 + 1;

        goto label01;

     label07:
        $i4 = $i5 - $i6;

        if $i4 <= 0 goto label09;

        $i4 = $i4 + $i8;

        if $i7 >= $i4 goto label08;

        $r3 = staticinvoke <com.google.common.escape.CharEscaper: char[] growBuffer(char[],int,int)>($r3, $i8, $i4);

     label08:
        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>($i6, $i5, $r3, $i8);

        goto label10;

     label09:
        $i4 = $i8;

     label10:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r3, 0, $i4);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.common.escape.CharEscaper: int DEST_PAD_MULTIPLIER> = 2;

        return;
    }
}
