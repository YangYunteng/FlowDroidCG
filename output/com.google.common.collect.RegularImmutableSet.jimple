public final class com.google.common.collect.RegularImmutableSet extends com.google.common.collect.ImmutableSet
{
    public static final com.google.common.collect.RegularImmutableSet EMPTY;
    public final transient java.lang.Object[] elements;
    public final transient int hashCode;
    public final transient int mask;
    public final transient java.lang.Object[] table;

    static void <clinit>()
    {
        java.lang.Object[] $r1;
        com.google.common.collect.RegularImmutableSet $r0;

        $r0 = new com.google.common.collect.RegularImmutableSet;

        $r1 = newarray (java.lang.Object)[0];

        specialinvoke $r0.<com.google.common.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int)>($r1, 0, null, 0);

        <com.google.common.collect.RegularImmutableSet: com.google.common.collect.RegularImmutableSet EMPTY> = $r0;

        return;
    }

    public void <init>(java.lang.Object[], int, java.lang.Object[], int)
    {
        java.lang.Object[] $r1, $r2;
        int $i0, $i1;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object[];

        $i1 := @parameter3: int;

        specialinvoke r0.<com.google.common.collect.ImmutableSet: void <init>()>();

        r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements> = $r1;

        r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] table> = $r2;

        r0.<com.google.common.collect.RegularImmutableSet: int mask> = $i1;

        r0.<com.google.common.collect.RegularImmutableSet: int hashCode> = $i0;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        com.google.common.collect.RegularImmutableSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] table>;

        if $r2 == null goto label5;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r2);

     label2:
        $i1 = r0.<com.google.common.collect.RegularImmutableSet: int mask>;

        $i0 = $i0 & $i1;

        $r3 = $r1[$i0];

        if $r3 != null goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        return 0;
    }

    public int copyIntoArray(java.lang.Object[], int)
    {
        java.lang.Object[] $r1, $r2;
        int $i0, $i1;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r2 := @parameter0: java.lang.Object[];

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i1, $i0);

        $r2 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements>;

        $i0 = lengthof $r2;

        $i1 = $i1 + $i0;

        return $i1;
    }

    public com.google.common.collect.ImmutableList createAsList()
    {
        java.lang.Object[] $r1;
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.RegularImmutableAsList $r3;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r1 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] table>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r2;

     label1:
        $r3 = new com.google.common.collect.RegularImmutableAsList;

        $r1 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements>;

        specialinvoke $r3.<com.google.common.collect.RegularImmutableAsList: void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[])>(r0, $r1);

        return $r3;
    }

    public int hashCode()
    {
        int i0;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        i0 = r0.<com.google.common.collect.RegularImmutableSet: int hashCode>;

        return i0;
    }

    public boolean isHashCodeFast()
    {
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        return 1;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        return 0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        java.lang.Object[] $r2;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r2 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements>;

        $r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[])>($r2);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public int size()
    {
        int $i0;
        java.lang.Object[] $r1;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r1 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.util.Spliterator spliterator()
    {
        java.lang.Object[] $r2;
        java.util.Spliterator $r1;
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $r2 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements>;

        $r1 = staticinvoke <java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int)>($r2, 1297);

        return $r1;
    }
}
