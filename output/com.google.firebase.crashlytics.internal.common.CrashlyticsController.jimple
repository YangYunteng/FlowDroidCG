public class com.google.firebase.crashlytics.internal.common.CrashlyticsController extends java.lang.Object
{
    public static final int ANALYZER_VERSION;
    public static final java.io.FilenameFilter APP_EXCEPTION_MARKER_FILTER;
    public static final java.lang.String APP_EXCEPTION_MARKER_PREFIX;
    public static final java.lang.String COLLECT_CUSTOM_KEYS;
    public static final java.lang.String CRASHLYTICS_API_ENDPOINT;
    public static final java.lang.String EVENT_TYPE_CRASH;
    public static final java.lang.String EVENT_TYPE_LOGGED;
    public static final java.lang.String FATAL_SESSION_DIR;
    public static final java.lang.String FIREBASE_APPLICATION_EXCEPTION;
    public static final java.lang.String FIREBASE_CRASH_TYPE;
    public static final int FIREBASE_CRASH_TYPE_FATAL;
    public static final java.lang.String FIREBASE_TIMESTAMP;
    public static final java.lang.String GENERATOR_FORMAT;
    public static final java.lang.String[] INITIAL_SESSION_PART_TAGS;
    public static final java.util.Comparator LARGEST_FILE_NAME_FIRST;
    public static final int MAX_CHAINED_EXCEPTION_DEPTH;
    public static final int MAX_LOCAL_LOGGED_EXCEPTIONS;
    public static final int MAX_OPEN_SESSIONS;
    public static final int MAX_STACK_SIZE;
    public static final java.lang.String NATIVE_SESSION_DIR;
    public static final java.lang.String NONFATAL_SESSION_DIR;
    public static final int NUM_STACK_REPETITIONS_ALLOWED;
    public static final java.util.Map SEND_AT_CRASHTIME_HEADER;
    public static final java.lang.String SESSION_APP_TAG;
    public static final java.io.FilenameFilter SESSION_BEGIN_FILE_FILTER;
    public static final java.lang.String SESSION_BEGIN_TAG;
    public static final java.lang.String SESSION_DEVICE_TAG;
    public static final java.lang.String SESSION_EVENT_MISSING_BINARY_IMGS_TAG;
    public static final java.lang.String SESSION_FATAL_TAG;
    public static final java.io.FilenameFilter SESSION_FILE_FILTER;
    public static final java.util.regex.Pattern SESSION_FILE_PATTERN;
    public static final int SESSION_ID_LENGTH;
    public static final java.lang.String SESSION_NON_FATAL_TAG;
    public static final java.lang.String SESSION_OS_TAG;
    public static final java.lang.String SESSION_USER_TAG;
    public static final java.util.Comparator SMALLEST_FILE_NAME_FIRST;
    public final com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger analyticsEventLogger;
    public final com.google.firebase.crashlytics.internal.common.AppData appData;
    public final com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker;
    public java.util.concurrent.atomic.AtomicBoolean checkForUnsentReportsCalled;
    public final android.content.Context context;
    public com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler crashHandler;
    public final com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker;
    public final com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter;
    public final java.util.concurrent.atomic.AtomicInteger eventCounter;
    public final com.google.firebase.crashlytics.internal.persistence.FileStore fileStore;
    public final com.google.firebase.crashlytics.internal.report.ReportUploader$HandlingExceptionCheck handlingExceptionCheck;
    public final com.google.firebase.crashlytics.internal.network.HttpRequestFactory httpRequestFactory;
    public final com.google.firebase.crashlytics.internal.common.IdManager idManager;
    public final com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider;
    public final com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager;
    public final com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent;
    public com.google.android.gms.tasks.TaskCompletionSource reportActionProvided;
    public final com.google.firebase.crashlytics.internal.report.ReportManager reportManager;
    public final com.google.firebase.crashlytics.internal.report.ReportUploader$Provider reportUploaderProvider;
    public final com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator reportingCoordinator;
    public final com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy stackTraceTrimmingStrategy;
    public final java.lang.String unityVersion;
    public com.google.android.gms.tasks.TaskCompletionSource unsentReportsAvailable;
    public com.google.android.gms.tasks.TaskCompletionSource unsentReportsHandled;
    public final com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata;

    static void <clinit>()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$1 $r0;
        java.io.FilenameFilter $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$2 $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$3 $r3;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$4 $r4;
        java.lang.String[] $r7;
        java.util.Map $r6;
        java.util.regex.Pattern $r5;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_USER_TAG> = "SessionUser";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_OS_TAG> = "SessionOS";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_NON_FATAL_TAG> = "SessionEvent";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int SESSION_ID_LENGTH> = 35;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_FATAL_TAG> = "SessionCrash";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_EVENT_MISSING_BINARY_IMGS_TAG> = "SessionMissingBinaryImages";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_DEVICE_TAG> = "SessionDevice";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_BEGIN_TAG> = "BeginSession";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String SESSION_APP_TAG> = "SessionApp";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int NUM_STACK_REPETITIONS_ALLOWED> = 10;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String NONFATAL_SESSION_DIR> = "nonfatal-sessions";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String NATIVE_SESSION_DIR> = "native-sessions";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int MAX_STACK_SIZE> = 1024;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int MAX_OPEN_SESSIONS> = 8;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int MAX_LOCAL_LOGGED_EXCEPTIONS> = 64;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int MAX_CHAINED_EXCEPTION_DEPTH> = 8;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String GENERATOR_FORMAT> = "Crashlytics Android SDK/%s";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String FIREBASE_TIMESTAMP> = "timestamp";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int FIREBASE_CRASH_TYPE_FATAL> = 1;

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String FIREBASE_CRASH_TYPE> = "fatal";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String FIREBASE_APPLICATION_EXCEPTION> = "_ae";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String FATAL_SESSION_DIR> = "fatal-sessions";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String EVENT_TYPE_LOGGED> = "error";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String EVENT_TYPE_CRASH> = "crash";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String CRASHLYTICS_API_ENDPOINT> = "com.crashlytics.ApiEndpoint";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String COLLECT_CUSTOM_KEYS> = "com.crashlytics.CollectCustomKeys";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String APP_EXCEPTION_MARKER_PREFIX> = ".ae";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: int ANALYZER_VERSION> = 1;

        $r0 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$1;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$1: void <init>(java.lang.String)>("BeginSession");

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_BEGIN_FILE_FILTER> = $r0;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController$$Lambda$1: java.io.FilenameFilter lambdaFactory$()>();

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter APP_EXCEPTION_MARKER_FILTER> = $r1;

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$2;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$2: void <init>()>();

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER> = $r2;

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$3;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$3: void <init>()>();

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator LARGEST_FILE_NAME_FIRST> = $r3;

        $r4 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$4;

        specialinvoke $r4.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$4: void <init>()>();

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST> = $r4;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\d|A-Z|a-z]{12}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{12}).+");

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.regex.Pattern SESSION_FILE_PATTERN> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("X-CRASHLYTICS-SEND-FLAGS", "1");

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Map SEND_AT_CRASHTIME_HEADER> = $r6;

        $r7 = newarray (java.lang.String)[4];

        $r7[0] = "SessionUser";

        $r7[1] = "SessionApp";

        $r7[2] = "SessionOS";

        $r7[3] = "SessionDevice";

        <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String[] INITIAL_SESSION_PART_TAGS> = $r7;

        return;
    }

    public void <init>(android.content.Context, com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker, com.google.firebase.crashlytics.internal.network.HttpRequestFactory, com.google.firebase.crashlytics.internal.common.IdManager, com.google.firebase.crashlytics.internal.common.DataCollectionArbiter, com.google.firebase.crashlytics.internal.persistence.FileStore, com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker, com.google.firebase.crashlytics.internal.common.AppData, com.google.firebase.crashlytics.internal.report.ReportManager, com.google.firebase.crashlytics.internal.report.ReportUploader$Provider, com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent, com.google.firebase.crashlytics.internal.unity.UnityVersionProvider, com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger, com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        android.content.Context $r1;
        com.google.firebase.crashlytics.internal.unity.UnityVersionProvider $r12;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r14;
        java.util.concurrent.atomic.AtomicBoolean $r18;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker $r7;
        com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy[] $r26;
        com.google.firebase.crashlytics.internal.stacktrace.RemoveRepeatsStrategy $r15;
        com.google.firebase.crashlytics.internal.common.IdManager $r4;
        java.util.concurrent.atomic.AtomicInteger $r16;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck $r24;
        com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator $r28;
        java.lang.String $r19;
        com.google.firebase.crashlytics.internal.stacktrace.MiddleOutFallbackStrategy $r25;
        com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger $r13;
        com.google.firebase.crashlytics.internal.persistence.FileStore $r6;
        com.google.firebase.crashlytics.internal.common.AppData $r8;
        com.google.firebase.crashlytics.internal.network.HttpRequestFactory $r3;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderFilesProvider $r23;
        com.google.firebase.crashlytics.internal.log.LogFileManager $r22;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider $r21;
        com.google.firebase.crashlytics.internal.common.DataCollectionArbiter $r5;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r11;
        com.google.android.gms.tasks.TaskCompletionSource $r17;
        com.google.firebase.crashlytics.internal.report.ReportManager $r9;
        com.google.firebase.crashlytics.internal.report.ReportUploader$Provider $r10;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r20;
        com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy $r27;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker;

        $r3 := @parameter2: com.google.firebase.crashlytics.internal.network.HttpRequestFactory;

        $r4 := @parameter3: com.google.firebase.crashlytics.internal.common.IdManager;

        $r5 := @parameter4: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter;

        $r6 := @parameter5: com.google.firebase.crashlytics.internal.persistence.FileStore;

        $r7 := @parameter6: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker;

        $r8 := @parameter7: com.google.firebase.crashlytics.internal.common.AppData;

        $r9 := @parameter8: com.google.firebase.crashlytics.internal.report.ReportManager;

        $r10 := @parameter9: com.google.firebase.crashlytics.internal.report.ReportUploader$Provider;

        $r11 := @parameter10: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent;

        $r12 := @parameter11: com.google.firebase.crashlytics.internal.unity.UnityVersionProvider;

        $r13 := @parameter12: com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger;

        $r14 := @parameter13: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r16 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.concurrent.atomic.AtomicInteger eventCounter> = $r16;

        $r17 = new com.google.android.gms.tasks.TaskCompletionSource;

        specialinvoke $r17.<com.google.android.gms.tasks.TaskCompletionSource: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsAvailable> = $r17;

        $r17 = new com.google.android.gms.tasks.TaskCompletionSource;

        specialinvoke $r17.<com.google.android.gms.tasks.TaskCompletionSource: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource reportActionProvided> = $r17;

        $r17 = new com.google.android.gms.tasks.TaskCompletionSource;

        specialinvoke $r17.<com.google.android.gms.tasks.TaskCompletionSource: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsHandled> = $r17;

        $r18 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r18.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.concurrent.atomic.AtomicBoolean checkForUnsentReportsCalled> = $r18;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context context> = $r1;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker> = $r2;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.network.HttpRequestFactory httpRequestFactory> = $r3;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.IdManager idManager> = $r4;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter> = $r5;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.persistence.FileStore fileStore> = $r6;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker> = $r7;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.AppData appData> = $r8;

        if $r10 == null goto label1;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$Provider reportUploaderProvider> = $r10;

        goto label2;

     label1:
        $r10 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$Provider defaultReportUploader()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$Provider reportUploaderProvider> = $r10;

     label2:
        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent> = $r11;

        $r19 = interfaceinvoke $r12.<com.google.firebase.crashlytics.internal.unity.UnityVersionProvider: java.lang.String getUnityVersion()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String unityVersion> = $r19;

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger analyticsEventLogger> = $r13;

        $r20 = new com.google.firebase.crashlytics.internal.common.UserMetadata;

        specialinvoke $r20.<com.google.firebase.crashlytics.internal.common.UserMetadata: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata> = $r20;

        $r21 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider;

        specialinvoke $r21.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider: void <init>(com.google.firebase.crashlytics.internal.persistence.FileStore)>($r6);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider> = $r21;

        $r22 = new com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r21 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider>;

        specialinvoke $r22.<com.google.firebase.crashlytics.internal.log.LogFileManager: void <init>(android.content.Context,com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider)>($r1, $r21);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager> = $r22;

        if $r9 != null goto label3;

        $r9 = new com.google.firebase.crashlytics.internal.report.ReportManager;

        $r23 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderFilesProvider;

        specialinvoke $r23.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderFilesProvider: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,com.google.firebase.crashlytics.internal.common.CrashlyticsController$1)>(r0, null);

        specialinvoke $r9.<com.google.firebase.crashlytics.internal.report.ReportManager: void <init>(com.google.firebase.crashlytics.internal.report.ReportUploader$ReportFilesProvider)>($r23);

        goto label3;

     label3:
        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportManager reportManager> = $r9;

        $r24 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck;

        specialinvoke $r24.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$ReportUploaderHandlingExceptionCheck: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,com.google.firebase.crashlytics.internal.common.CrashlyticsController$1)>(r0, null);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$HandlingExceptionCheck handlingExceptionCheck> = $r24;

        $r25 = new com.google.firebase.crashlytics.internal.stacktrace.MiddleOutFallbackStrategy;

        $r26 = newarray (com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy)[1];

        $r15 = new com.google.firebase.crashlytics.internal.stacktrace.RemoveRepeatsStrategy;

        specialinvoke $r15.<com.google.firebase.crashlytics.internal.stacktrace.RemoveRepeatsStrategy: void <init>(int)>(10);

        $r26[0] = $r15;

        specialinvoke $r25.<com.google.firebase.crashlytics.internal.stacktrace.MiddleOutFallbackStrategy: void <init>(int,com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy[])>(1024, $r26);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy stackTraceTrimmingStrategy> = $r25;

        $r22 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager>;

        $r20 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        $r27 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy stackTraceTrimmingStrategy>;

        $r28 = staticinvoke <com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator: com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator create(android.content.Context,com.google.firebase.crashlytics.internal.common.IdManager,com.google.firebase.crashlytics.internal.persistence.FileStore,com.google.firebase.crashlytics.internal.common.AppData,com.google.firebase.crashlytics.internal.log.LogFileManager,com.google.firebase.crashlytics.internal.common.UserMetadata,com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>($r1, $r4, $r6, $r8, $r22, $r20, $r27, $r14);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator reportingCoordinator> = $r28;

        return;
    }

    public static java.util.regex.Pattern access$000()
    {
        java.util.regex.Pattern r0;

        r0 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.regex.Pattern SESSION_FILE_PATTERN>;

        return r0;
    }

    public static void access$1000(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doOpenSession()>();

        return;
    }

    public static com.google.firebase.crashlytics.internal.common.DataCollectionArbiter access$1100(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.common.DataCollectionArbiter r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter>;

        return r1;
    }

    public static com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker access$1200(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        return r1;
    }

    public static void access$1300(com.google.firebase.crashlytics.internal.common.CrashlyticsController, com.google.firebase.crashlytics.internal.settings.model.AppSettingsData, boolean)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.settings.model.AppSettingsData $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter1: com.google.firebase.crashlytics.internal.settings.model.AppSettingsData;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void sendSessionReports(com.google.firebase.crashlytics.internal.settings.model.AppSettingsData,boolean)>($r1, $z0);

        return;
    }

    public static com.google.android.gms.tasks.Task access$1400(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r1;
        com.google.android.gms.tasks.Task $r0;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r0 = specialinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task logAnalyticsAppExceptionEvents()>();

        return $r0;
    }

    public static com.google.firebase.crashlytics.internal.report.ReportManager access$1500(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.report.ReportManager r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportManager reportManager>;

        return r1;
    }

    public static void access$1600(java.io.File[])
    {
        java.io.File[] $r0;

        $r0 := @parameter0: java.io.File[];

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void deleteFiles(java.io.File[])>($r0);

        return;
    }

    public static void access$1700(java.lang.String, java.io.File)
    {
        java.lang.String $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.File;

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void appendOrganizationIdToSessionFile(java.lang.String,java.io.File)>($r0, $r1);

        return;
    }

    public static com.google.firebase.crashlytics.internal.report.ReportUploader$Provider access$1800(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.report.ReportUploader$Provider r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$Provider reportUploaderProvider>;

        return r1;
    }

    public static com.google.firebase.crashlytics.internal.report.network.CreateReportSpiCall access$1900(com.google.firebase.crashlytics.internal.common.CrashlyticsController, java.lang.String, java.lang.String)
    {
        com.google.firebase.crashlytics.internal.report.network.CreateReportSpiCall $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r3;
        java.lang.String $r0, $r1;

        $r3 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.network.CreateReportSpiCall getCreateReportSpiCall(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static com.google.firebase.crashlytics.internal.common.AppData access$2000(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.common.AppData r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.AppData appData>;

        return r1;
    }

    public static com.google.firebase.crashlytics.internal.report.ReportUploader$HandlingExceptionCheck access$2100(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.report.ReportUploader$HandlingExceptionCheck r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$HandlingExceptionCheck handlingExceptionCheck>;

        return r1;
    }

    public static com.google.firebase.crashlytics.internal.log.LogFileManager access$2200(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.log.LogFileManager r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager>;

        return r1;
    }

    public static void access$2300(com.google.firebase.crashlytics.internal.common.CrashlyticsController, java.lang.Thread, java.lang.Throwable, java.lang.String, long)
    {
        java.lang.Throwable $r2;
        java.lang.Thread $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        long $l0;
        java.lang.String $r3;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter1: java.lang.Thread;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 := @parameter3: java.lang.String;

        $l0 := @parameter4: long;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doWriteNonFatal(java.lang.Thread,java.lang.Throwable,java.lang.String,long)>($r1, $r2, $r3, $l0);

        return;
    }

    public static java.io.File[] access$2500(com.google.firebase.crashlytics.internal.common.CrashlyticsController, java.io.FilenameFilter)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r2;
        java.io.FilenameFilter $r0;
        java.io.File[] $r1;

        $r2 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r0 := @parameter1: java.io.FilenameFilter;

        $r1 = specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r0);

        return $r1;
    }

    public static java.lang.String access$2600(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String unityVersion>;

        return r1;
    }

    public static com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger access$2700(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.analytics.AnalyticsEventLogger analyticsEventLogger>;

        return r1;
    }

    public static long access$300(java.util.Date)
    {
        long $l0;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $l0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: long getTimestampSeconds(java.util.Date)>($r0);

        return $l0;
    }

    public static java.lang.String access$400(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r1;
        java.lang.String $r0;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r0 = specialinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getCurrentSessionId()>();

        return $r0;
    }

    public static com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker access$500(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker>;

        return r1;
    }

    public static java.lang.String access$600(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String makeFirebaseSessionIdentifier(java.lang.String)>($r0);

        return $r0;
    }

    public static com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator access$700(com.google.firebase.crashlytics.internal.common.CrashlyticsController)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator reportingCoordinator>;

        return r1;
    }

    public static void access$800(com.google.firebase.crashlytics.internal.common.CrashlyticsController, java.lang.Thread, java.lang.Throwable, java.lang.String, long)
    {
        java.lang.Throwable $r2;
        java.lang.Thread $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        long $l0;
        java.lang.String $r3;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter1: java.lang.Thread;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 := @parameter3: java.lang.String;

        $l0 := @parameter4: long;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doWriteFatal(java.lang.Thread,java.lang.Throwable,java.lang.String,long)>($r1, $r2, $r3, $l0);

        return;
    }

    public static void access$900(com.google.firebase.crashlytics.internal.common.CrashlyticsController, long)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController $r0;
        long $l0;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $l0 := @parameter1: long;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doWriteAppExceptionMarker(long)>($l0);

        return;
    }

    public static void appendOrganizationIdToSessionFile(java.lang.String, java.io.File)
    {
        java.lang.String $r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$22 $r2;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.File;

        if $r0 != null goto label1;

        return;

     label1:
        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$22;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$22: void <init>(java.lang.String)>($r0);

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void appendToProtoFile(java.io.File,com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, $r2);

        return;
    }

    public static void appendToProtoFile(java.io.File, com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)
    {
        java.lang.Throwable $r7;
        java.io.FileOutputStream $r3;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r2, $r4;
        java.io.File $r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction;

        $r2 = null;

     label1:
        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r0, 1);

     label2:
        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.proto.CodedOutputStream: com.google.firebase.crashlytics.internal.proto.CodedOutputStream newInstance(java.io.OutputStream)>($r3);

     label3:
        $r2 = $r4;

     label4:
        interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.google.firebase.crashlytics.internal.proto.CodedOutputStream)>($r4);

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to flush to append to ");

        $r6 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r4, $r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close ");

        $r6 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r3, $r6);

        return;

     label6:
        $r7 := @caughtexception;

        goto label8;

     label7:
        $r7 := @caughtexception;

        $r3 = null;

     label8:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to flush to append to ");

        $r6 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r2, $r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close ");

        $r6 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r3, $r6);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void cacheKeyData(java.util.Map)
    {
        java.util.Map $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$13 $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$13;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$13: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.util.Map)>(r0, $r1);

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.util.concurrent.Callable)>($r3);

        return;
    }

    private void cacheUserData(com.google.firebase.crashlytics.internal.common.UserMetadata)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$12 $r3;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.common.UserMetadata;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$12;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$12: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,com.google.firebase.crashlytics.internal.common.UserMetadata)>(r0, $r1);

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.util.concurrent.Callable)>($r3);

        return;
    }

    private void closeOpenSessions(java.io.File[], int, int)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r3;
        com.google.firebase.crashlytics.internal.Logger $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.lang.String $r4, $r6;
        java.io.File[] $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Closing open sessions.");

     label1:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label2;

        $r3 = $r1[$i1];

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing session: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r6);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionPartsToSessionFile(java.io.File,java.lang.String,int)>($r3, $r4, $i0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void closeWithoutRenamingOrLog(com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream)
    {
        com.google.firebase.crashlytics.internal.Logger $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream $r2;
        java.io.IOException $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 := @parameter0: com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream;

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream: void closeInProgressStream()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Error closing session file stream in the presence of an exception", $r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void copyToCodedOutputStream(java.io.InputStream, com.google.firebase.crashlytics.internal.proto.CodedOutputStream, int)
    {
        byte[] $r2;
        int $i0, $i1;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: com.google.firebase.crashlytics.internal.proto.CodedOutputStream;

        $i1 := @parameter2: int;

        $r2 = newarray (byte)[$i1];

        $i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label2;

        $i0 = lengthof $r2;

        $i0 = $i0 - $i1;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, $i1, $i0);

        if $i0 < 0 goto label2;

        $i1 = $i1 + $i0;

        goto label1;

     label2:
        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.proto.CodedOutputStream: void writeRawBytes(byte[])>($r2);

        return;
    }

    private com.google.firebase.crashlytics.internal.report.ReportUploader$Provider defaultReportUploader()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$9 $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$9;

        specialinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$9: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController)>(r0);

        return $r1;
    }

    public static void deleteFiles(java.io.File[])
    {
        int $i0, $i1;
        java.io.File[] $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.io.File[];

        if $r0 != null goto label1;

        return;

     label1:
        $i0 = lengthof $r0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void doCloseSessions(int, boolean)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        long $l2;
        java.io.File $r4;
        com.google.firebase.crashlytics.internal.Logger $r3;
        int $i0, $i1, $i3;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r6;
        com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator $r7;
        java.lang.StringBuilder $r1, $r8;
        java.lang.String $r5;
        java.io.File[] $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = (int) $z0;

        $i1 = $i1 + 8;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void trimOpenSessions(int)>($i1);

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i1 = lengthof $r2;

        $i3 = (int) $z0;

        if $i1 > $i3 goto label1;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("No open sessions to be closed.");

        return;

     label1:
        $i1 = (int) $z0;

        $r4 = $r2[$i1];

        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r4);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionUser(java.lang.String)>($r5);

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        $z1 = interfaceinvoke $r6.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: boolean hasCrashDataForSession(java.lang.String)>($r5);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void finalizePreviousNativeSession(java.lang.String)>($r5);

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        $z1 = interfaceinvoke $r6.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: boolean finalizeSession(java.lang.String)>($r5);

        if $z1 != 0 goto label2;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        $r1 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not finalize native session: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

     label2:
        $i1 = (int) $z0;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void closeOpenSessions(java.io.File[],int,int)>($r2, $i1, $i0);

        $r5 = null;

        if $z0 == 0 goto label3;

        $r4 = $r2[0];

        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r4);

        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String makeFirebaseSessionIdentifier(java.lang.String)>($r5);

     label3:
        $r7 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator reportingCoordinator>;

        $l2 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: long getCurrentTimestampSeconds()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator: void finalizeSessions(long,java.lang.String)>($l2, $r5);

        return;
    }

    private void doOpenSession()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        long $l0;
        com.google.firebase.crashlytics.internal.Logger $r4;
        com.google.firebase.crashlytics.internal.common.CLSUUID $r1;
        com.google.firebase.crashlytics.internal.common.IdManager $r2;
        com.google.firebase.crashlytics.internal.log.LogFileManager $r8;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r7;
        com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r3, $r6;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $l0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: long getCurrentTimestampSeconds()>();

        $r1 = new com.google.firebase.crashlytics.internal.common.CLSUUID;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.IdManager idManager>;

        specialinvoke $r1.<com.google.firebase.crashlytics.internal.common.CLSUUID: void <init>(com.google.firebase.crashlytics.internal.common.IdManager)>($r2);

        $r3 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CLSUUID: java.lang.String toString()>();

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening a new session with ID ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r6);

        $r7 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        interfaceinvoke $r7.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: boolean openSession(java.lang.String)>($r3);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeBeginSession(java.lang.String,long)>($r3, $l0);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionApp(java.lang.String)>($r3);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionOS(java.lang.String)>($r3);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionDevice(java.lang.String)>($r3);

        $r8 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager>;

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.log.LogFileManager: void setCurrentSession(java.lang.String)>($r3);

        $r9 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator reportingCoordinator>;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String makeFirebaseSessionIdentifier(java.lang.String)>($r3);

        virtualinvoke $r9.<com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator: void onBeginSession(java.lang.String,long)>($r3, $l0);

        return;
    }

    private void doWriteAppExceptionMarker(long)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.IOException $r3;
        long $l0;
        java.io.File $r1, $r4;
        com.google.firebase.crashlytics.internal.Logger $r6;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $l0 := @parameter0: long;

        $r1 = new java.io.File;

     label1:
        $r4 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

     label2:
        $r2 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ae");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

     label4:
        return;

     label5:
        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Could not write app exception marker.");

        return;

     label6:
        $r3 := @caughtexception;

        goto label5;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    private void doWriteFatal(java.lang.Thread, java.lang.Throwable, java.lang.String, long)
    {
        java.lang.Throwable $r2, $r10;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        long $l0;
        com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream $r5;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r4, $r8;
        java.io.File $r6;
        java.lang.Exception $r9;
        com.google.firebase.crashlytics.internal.Logger $r11;
        java.lang.Thread $r1;
        java.lang.StringBuilder $r7;
        java.lang.String $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $r4 = null;

     label01:
        $r5 = new com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream;

     label02:
        $r6 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

     label03:
        $r7 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r6, $r3);

     label05:
        $r8 = staticinvoke <com.google.firebase.crashlytics.internal.proto.CodedOutputStream: com.google.firebase.crashlytics.internal.proto.CodedOutputStream newInstance(java.io.OutputStream)>($r5);

     label06:
        $r4 = $r8;

     label07:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionEvent(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.lang.Thread,java.lang.Throwable,long,java.lang.String,boolean)>($r8, $r1, $r2, $l0, "crash", 1);

     label08:
        goto label13;

     label09:
        $r9 := @caughtexception;

        goto label12;

     label10:
        $r10 := @caughtexception;

        $r5 = null;

        goto label15;

     label11:
        $r9 := @caughtexception;

        $r5 = null;

     label12:
        $r11 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r11.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("An error occurred in the fatal exception logger", $r9);

     label13:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to session begin file.");

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r5, "Failed to close fatal exception file output stream.");

        return;

     label14:
        $r10 := @caughtexception;

     label15:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to session begin file.");

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r5, "Failed to close fatal exception file output stream.");

        throw $r10;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Throwable from label01 to label05 with label10;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private void doWriteNonFatal(java.lang.Thread, java.lang.Throwable, java.lang.String, long)
    {
        java.lang.Throwable $r2, $r12;
        long $l0;
        com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream $r9;
        java.util.concurrent.atomic.AtomicInteger $r8;
        java.lang.Thread $r1;
        int $i1;
        java.lang.String $r3, $r7;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r4, $r11;
        java.io.File $r10;
        java.lang.Exception $r13, $r14;
        com.google.firebase.crashlytics.internal.Logger $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $r4 = null;

     label01:
        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

     label02:
        $r6 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics is logging non-fatal exception \"");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r7 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r7);

        $r8 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.concurrent.atomic.AtomicInteger eventCounter>;

        $i1 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String padWithZerosToMaxIntWidth(int)>($i1);

     label04:
        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r9 = new com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream;

     label07:
        $r10 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r9.<com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r10, $r7);

     label08:
        $r11 = staticinvoke <com.google.firebase.crashlytics.internal.proto.CodedOutputStream: com.google.firebase.crashlytics.internal.proto.CodedOutputStream newInstance(java.io.OutputStream)>($r9);

     label09:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionEvent(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.lang.Thread,java.lang.Throwable,long,java.lang.String,boolean)>($r11, $r1, $r2, $l0, "error", 0);

     label10:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r11, "Failed to flush to non-fatal file.");

        goto label18;

     label11:
        $r12 := @caughtexception;

        $r4 = $r11;

        goto label23;

     label12:
        $r13 := @caughtexception;

        $r4 = $r11;

        goto label16;

     label13:
        $r13 := @caughtexception;

        goto label16;

     label14:
        $r12 := @caughtexception;

        $r9 = null;

        goto label23;

     label15:
        $r13 := @caughtexception;

        $r9 = null;

     label16:
        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("An error occurred in the non-fatal exception logger", $r13);

     label17:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to non-fatal file.");

     label18:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r9, "Failed to close non-fatal file output stream.");

     label19:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void trimSessionEventFiles(java.lang.String,int)>($r3, 64);

     label20:
        return;

     label21:
        $r14 := @caughtexception;

        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("An error occurred when trimming non-fatal files.", $r14);

        return;

     label22:
        $r12 := @caughtexception;

     label23:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to non-fatal file.");

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r9, "Failed to close non-fatal file output stream.");

        throw $r12;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Throwable from label01 to label08 with label14;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public static java.io.File[] ensureFileArrayNotNull(java.io.File[])
    {
        java.io.File[] $r0;

        $r0 := @parameter0: java.io.File[];

        if $r0 != null goto label1;

        $r0 = newarray (java.io.File)[0];

     label1:
        return $r0;
    }

    private void finalizePreviousNativeSession(java.lang.String)
    {
        android.content.Context $r9;
        byte[] $r12;
        long $l0;
        com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator $r14;
        java.lang.String $r2, $r5;
        boolean $z0;
        com.google.firebase.crashlytics.internal.NativeSessionFileProvider $r7;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r8, $r11;
        com.google.firebase.crashlytics.internal.Logger $r3;
        java.util.List $r13;
        com.google.firebase.crashlytics.internal.log.LogFileManager $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider $r10;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r6;
        java.lang.StringBuilder $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finalizing native report for session ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        $r7 = interfaceinvoke $r6.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: com.google.firebase.crashlytics.internal.NativeSessionFileProvider getSessionFileProvider(java.lang.String)>($r2);

        $r8 = interfaceinvoke $r7.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getMinidumpFile()>();

        if $r8 == null goto label3;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        goto label3;

     label1:
        $l0 = virtualinvoke $r8.<java.io.File: long lastModified()>();

        $r1 = new com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r9 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context context>;

        $r10 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider>;

        specialinvoke $r1.<com.google.firebase.crashlytics.internal.log.LogFileManager: void <init>(android.content.Context,com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider,java.lang.String)>($r9, $r10, $r2);

        $r8 = new java.io.File;

        $r11 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getNativeSessionFilesDir()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, $r2);

        $z0 = virtualinvoke $r8.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Couldn\'t create native sessions directory");

        return;

     label2:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doWriteAppExceptionMarker(long)>($l0);

        $r9 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context getContext()>();

        $r11 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        $r12 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.log.LogFileManager: byte[] getBytesForLog()>();

        $r13 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.List getNativeSessionFiles(com.google.firebase.crashlytics.internal.NativeSessionFileProvider,java.lang.String,android.content.Context,java.io.File,byte[])>($r7, $r2, $r9, $r11, $r12);

        staticinvoke <com.google.firebase.crashlytics.internal.common.NativeSessionFileGzipper: void processNativeSessions(java.io.File,java.util.List)>($r8, $r13);

        $r14 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator reportingCoordinator>;

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String makeFirebaseSessionIdentifier(java.lang.String)>($r2);

        virtualinvoke $r14.<com.google.firebase.crashlytics.internal.common.SessionReportingCoordinator: void finalizeSessionWithNativeEvent(java.lang.String,java.util.List)>($r2, $r13);

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.log.LogFileManager: void clearLog()>();

        return;

     label3:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No minidump data found for session ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void w(java.lang.String)>($r2);

        return;
    }

    public static boolean firebaseCrashExists()
    {
        java.lang.ClassNotFoundException $r0;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.firebase.crash.FirebaseCrash");

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }

    private android.content.Context getContext()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        android.content.Context r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context context>;

        return r1;
    }

    private com.google.firebase.crashlytics.internal.report.network.CreateReportSpiCall getCreateReportSpiCall(java.lang.String, java.lang.String)
    {
        android.content.Context $r3;
        com.google.firebase.crashlytics.internal.report.network.DefaultCreateReportSpiCall $r5;
        com.google.firebase.crashlytics.internal.network.HttpRequestFactory $r6;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.report.network.NativeCreateReportSpiCall $r8;
        java.lang.String $r1, $r2, $r4, $r7;
        com.google.firebase.crashlytics.internal.report.network.CompositeCreateReportSpiCall $r9;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context getContext()>();

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r3, "com.crashlytics.ApiEndpoint");

        $r5 = new com.google.firebase.crashlytics.internal.report.network.DefaultCreateReportSpiCall;

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.network.HttpRequestFactory httpRequestFactory>;

        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String getVersion()>();

        specialinvoke $r5.<com.google.firebase.crashlytics.internal.report.network.DefaultCreateReportSpiCall: void <init>(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.network.HttpRequestFactory,java.lang.String)>($r4, $r1, $r6, $r7);

        $r8 = new com.google.firebase.crashlytics.internal.report.network.NativeCreateReportSpiCall;

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.network.HttpRequestFactory httpRequestFactory>;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String getVersion()>();

        specialinvoke $r8.<com.google.firebase.crashlytics.internal.report.network.NativeCreateReportSpiCall: void <init>(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.network.HttpRequestFactory,java.lang.String)>($r4, $r2, $r6, $r1);

        $r9 = new com.google.firebase.crashlytics.internal.report.network.CompositeCreateReportSpiCall;

        specialinvoke $r9.<com.google.firebase.crashlytics.internal.report.network.CompositeCreateReportSpiCall: void <init>(com.google.firebase.crashlytics.internal.report.network.DefaultCreateReportSpiCall,com.google.firebase.crashlytics.internal.report.network.NativeCreateReportSpiCall)>($r5, $r8);

        return $r9;
    }

    private java.lang.String getCurrentSessionId()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0;
        java.lang.String $r3;
        java.io.File[] $r1;
        java.io.File $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r2);

        return $r3;

     label1:
        return null;
    }

    public static long getCurrentTimestampSeconds()
    {
        long $l0;
        java.util.Date $r0;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>()>();

        $l0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: long getTimestampSeconds(java.util.Date)>($r0);

        return $l0;
    }

    public static java.util.List getNativeSessionFiles(com.google.firebase.crashlytics.internal.NativeSessionFileProvider, java.lang.String, android.content.Context, java.io.File, byte[])
    {
        android.content.Context $r3;
        byte[] $r5, $r9;
        com.google.firebase.crashlytics.internal.NativeSessionFileProvider $r1;
        com.google.firebase.crashlytics.internal.common.MetaDataStore $r6;
        java.lang.Exception $r0;
        java.io.File $r4, $r7, $r8;
        java.util.ArrayList $r10;
        com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile $r12;
        java.lang.String $r2;
        com.google.firebase.crashlytics.internal.common.BytesBackedNativeSessionFile $r11;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.NativeSessionFileProvider;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: java.io.File;

        $r5 := @parameter4: byte[];

        $r6 = new com.google.firebase.crashlytics.internal.common.MetaDataStore;

        specialinvoke $r6.<com.google.firebase.crashlytics.internal.common.MetaDataStore: void <init>(java.io.File)>($r4);

        $r4 = virtualinvoke $r6.<com.google.firebase.crashlytics.internal.common.MetaDataStore: java.io.File getUserDataFileForSession(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<com.google.firebase.crashlytics.internal.common.MetaDataStore: java.io.File getKeysFileForSession(java.lang.String)>($r2);

     label1:
        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getBinaryImagesFile()>();

        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.NativeFileUtils: byte[] binaryImagesJsonFromMapsFile(java.io.File,android.content.Context)>($r8, $r3);

     label2:
        goto label4;

     label3:
        $r9 = null;

     label4:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = new com.google.firebase.crashlytics.internal.common.BytesBackedNativeSessionFile;

        specialinvoke $r11.<com.google.firebase.crashlytics.internal.common.BytesBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,byte[])>("logs_file", "logs", $r5);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new com.google.firebase.crashlytics.internal.common.BytesBackedNativeSessionFile;

        specialinvoke $r11.<com.google.firebase.crashlytics.internal.common.BytesBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,byte[])>("binary_images_file", "binaryImages", $r9);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getMetadataFile()>();

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("crash_meta_file", "metadata", $r8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getSessionFile()>();

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("session_meta_file", "session", $r8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getAppFile()>();

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("app_meta_file", "app", $r8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getDeviceFile()>();

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("device_meta_file", "device", $r8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getOsFile()>();

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("os_meta_file", "os", $r8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        $r8 = interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.NativeSessionFileProvider: java.io.File getMinidumpFile()>();

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("minidump_file", "minidump", $r8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("user_meta_file", "user", $r4);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile;

        specialinvoke $r12.<com.google.firebase.crashlytics.internal.common.FileBackedNativeSessionFile: void <init>(java.lang.String,java.lang.String,java.io.File)>("keys_file", "keys", $r7);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        return $r10;

     label5:
        $r0 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label5;
    }

    public static java.lang.String getSessionIdFromSessionFile(java.io.File)
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 35);

        return $r1;
    }

    public static long getTimestampSeconds(java.util.Date)
    {
        long $l0;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $l0 = virtualinvoke $r0.<java.util.Date: long getTime()>();

        $l0 = $l0 / 1000L;

        return $l0;
    }

    private java.io.File[] getTrimmedNonFatalFiles(java.lang.String, java.io.File[], int)
    {
        java.lang.Object[] $r5;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.Integer $r6;
        com.google.firebase.crashlytics.internal.Logger $r3;
        java.util.Locale $r4;
        int $i0, $i1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r1, $r7;
        java.io.File[] $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r2;

        if $i1 <= $i0 goto label1;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "Trimming down to %d logged exceptions.", $r5);

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r7);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void trimSessionEventFiles(java.lang.String,int)>($r1, $i0);

        $r8 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r1);

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r8);

     label1:
        return $r2;
    }

    private com.google.firebase.crashlytics.internal.common.UserMetadata getUserMetadata(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.MetaDataStore $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.String $r1;
        java.io.File $r3;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r4;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: boolean isHandlingException()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        return $r4;

     label1:
        $r2 = new com.google.firebase.crashlytics.internal.common.MetaDataStore;

        $r3 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.MetaDataStore: void <init>(java.io.File)>($r3);

        $r4 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.MetaDataStore: com.google.firebase.crashlytics.internal.common.UserMetadata readUserData(java.lang.String)>($r1);

        return $r4;
    }

    public static boolean lambda$static$0(java.io.File, java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r1 := @parameter0: java.io.File;

        $r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(".ae");

        return $z0;
    }

    public static java.io.File[] listFilesMatching(java.io.File, java.io.FilenameFilter)
    {
        java.io.FilenameFilter $r0;
        java.io.File[] $r2;
        java.io.File $r1;

        $r1 := @parameter0: java.io.File;

        $r0 := @parameter1: java.io.FilenameFilter;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r0);

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] ensureFileArrayNotNull(java.io.File[])>($r2);

        return $r2;
    }

    private java.io.File[] listFilesMatching(java.io.FilenameFilter)
    {
        java.io.FilenameFilter $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File[] $r3;
        java.io.File $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.io.FilenameFilter;

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r1);

        return $r3;
    }

    private java.io.File[] listSessionPartFilesFor(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$SessionPartFileFilter $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.String $r3;
        java.io.File[] $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r3 := @parameter0: java.lang.String;

        $r1 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$SessionPartFileFilter;

        specialinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$SessionPartFileFilter: void <init>(java.lang.String)>($r3);

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r1);

        return $r2;
    }

    private java.io.File[] listSortedSessionBeginFiles()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.util.Comparator $r1;
        java.io.File[] $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listSessionBeginFiles()>();

        $r1 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator LARGEST_FILE_NAME_FIRST>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r1);

        return $r2;
    }

    private com.google.android.gms.tasks.Task logAnalyticsAppExceptionEvent(long)
    {
        com.google.firebase.crashlytics.internal.Logger $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$23 $r4;
        long $l0;
        java.util.concurrent.ScheduledThreadPoolExecutor $r3;
        com.google.android.gms.tasks.Task $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $l0 := @parameter0: long;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: boolean firebaseCrashExists()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Skipping logging Crashlytics event to Firebase, FirebaseCrash exists");

        $r2 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>(null);

        return $r2;

     label1:
        $r3 = new java.util.concurrent.ScheduledThreadPoolExecutor;

        specialinvoke $r3.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1);

        $r4 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$23;

        specialinvoke $r4.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$23: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,long)>(r0, $l0);

        $r2 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r3, $r4);

        return $r2;
    }

    private com.google.android.gms.tasks.Task logAnalyticsAppExceptionEvents()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.NumberFormatException $r2;
        long $l2;
        java.io.File $r1;
        com.google.android.gms.tasks.Task $r6;
        java.util.ArrayList $r3;
        com.google.firebase.crashlytics.internal.Logger $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r8;
        java.lang.String $r5;
        java.io.File[] $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listAppExceptionMarkerFiles()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r1 = $r4[$i1];

     label2:
        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(3);

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $r6 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task logAnalyticsAppExceptionEvent(long)>($l2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        goto label5;

     label4:
        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse timestamp from file ");

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

     label5:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r6 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAll(java.util.Collection)>($r3);

        return $r6;

     label7:
        $r2 := @caughtexception;

        goto label4;

        catch java.lang.NumberFormatException from label2 to label3 with label7;
    }

    public static java.lang.String makeFirebaseSessionIdentifier(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", "");

        return $r0;
    }

    private void retainSessions(java.io.File[], java.util.Set)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.util.Set $r2;
        java.io.File $r3;
        com.google.firebase.crashlytics.internal.Logger $r7;
        java.util.regex.Matcher $r6;
        int $i0, $i1;
        java.lang.StringBuilder $r8;
        java.lang.String $r4, $r9;
        java.util.regex.Pattern $r5;
        java.io.File[] $r1;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        $r2 := @parameter1: java.util.Set;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = $r1[$i1];

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r5 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.regex.Pattern SESSION_FILE_PATTERN>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label2;

        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting unknown file: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r4);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        goto label3;

     label2:
        $r9 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trimming session file: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r4);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void sendSessionReports(com.google.firebase.crashlytics.internal.settings.model.AppSettingsData, boolean)
    {
        android.content.Context $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.report.model.SessionReport $r8;
        java.io.File $r6;
        com.google.firebase.crashlytics.internal.settings.model.AppSettingsData $r1;
        java.util.Map $r9;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r10;
        int $i0, $i1;
        java.lang.String $r7;
        com.google.firebase.crashlytics.internal.report.ReportUploader$Provider $r3;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$SendReportRunnable $r11;
        java.io.File[] $r5;
        boolean $z0;
        com.google.firebase.crashlytics.internal.report.ReportUploader $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.settings.model.AppSettingsData;

        $z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context getContext()>();

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportUploader$Provider reportUploaderProvider>;

        $r4 = interfaceinvoke $r3.<com.google.firebase.crashlytics.internal.report.ReportUploader$Provider: com.google.firebase.crashlytics.internal.report.ReportUploader createReportUploader(com.google.firebase.crashlytics.internal.settings.model.AppSettingsData)>($r1);

        $r5 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listCompleteSessionFiles()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r6 = $r5[$i1];

        $r7 = $r1.<com.google.firebase.crashlytics.internal.settings.model.AppSettingsData: java.lang.String organizationId>;

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void appendOrganizationIdToSessionFile(java.lang.String,java.io.File)>($r7, $r6);

        $r8 = new com.google.firebase.crashlytics.internal.report.model.SessionReport;

        $r9 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Map SEND_AT_CRASHTIME_HEADER>;

        specialinvoke $r8.<com.google.firebase.crashlytics.internal.report.model.SessionReport: void <init>(java.io.File,java.util.Map)>($r6, $r9);

        $r10 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r11 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$SendReportRunnable;

        specialinvoke $r11.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$SendReportRunnable: void <init>(android.content.Context,com.google.firebase.crashlytics.internal.report.model.Report,com.google.firebase.crashlytics.internal.report.ReportUploader,boolean)>($r2, $r8, $r4, $z0);

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.lang.Runnable)>($r11);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void synthesizeSessionFile(java.io.File, java.lang.String, java.io.File[], java.io.File)
    {
        java.lang.Throwable $r13;
        com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream $r7;
        long $l0;
        java.lang.String $r2, $r11;
        boolean $z0, $z1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r6, $r8;
        java.io.File $r1, $r4, $r5;
        java.lang.Exception $r12;
        com.google.firebase.crashlytics.internal.Logger $r9;
        java.lang.StringBuilder $r10;
        java.io.File[] $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File[];

        $r4 := @parameter3: java.io.File;

        if $r4 == null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        $r5 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

        goto label04;

     label03:
        $r5 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

     label04:
        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        virtualinvoke $r5.<java.io.File: boolean mkdirs()>();

     label05:
        $r6 = null;

     label06:
        $r7 = new com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream;

     label07:
        specialinvoke $r7.<com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r5, $r2);

     label08:
        $r8 = staticinvoke <com.google.firebase.crashlytics.internal.proto.CodedOutputStream: com.google.firebase.crashlytics.internal.proto.CodedOutputStream newInstance(java.io.OutputStream)>($r7);

     label09:
        $r6 = $r8;

     label10:
        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

     label11:
        $r10 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting SessionStart data for session ID ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r11);

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeToCosFromFile(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.io.File)>($r8, $r1);

        $l0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: long getCurrentTimestampSeconds()>();

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.proto.CodedOutputStream: void writeUInt64(int,long)>(4, $l0);

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.proto.CodedOutputStream: void writeBool(int,boolean)>(5, $z0);

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.proto.CodedOutputStream: void writeUInt32(int,int)>(11, 1);

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.proto.CodedOutputStream: void writeEnum(int,int)>(12, 3);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeInitialPartsTo(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.lang.String)>($r8, $r2);

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeNonFatalEventsTo(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.io.File[],java.lang.String)>($r8, $r3, $r2);

     label13:
        if $z0 == 0 goto label15;

     label14:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeToCosFromFile(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.io.File)>($r8, $r4);

     label15:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r8, "Error flushing session file stream");

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r7, "Failed to close CLS file");

        return;

     label16:
        $r12 := @caughtexception;

        goto label19;

     label17:
        $r13 := @caughtexception;

        $r7 = null;

        goto label22;

     label18:
        $r12 := @caughtexception;

        $r7 = null;

     label19:
        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write session file for session ID: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>($r2, $r12);

     label20:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r6, "Error flushing session file stream");

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void closeWithoutRenamingOrLog(com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream)>($r7);

        return;

     label21:
        $r13 := @caughtexception;

     label22:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r6, "Error flushing session file stream");

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r7, "Failed to close CLS file");

        throw $r13;

        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Throwable from label06 to label08 with label17;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    private void trimOpenSessions(int)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$AnySessionPartFileFilter $r6;
        java.io.File $r3;
        java.util.HashSet $r1;
        com.google.firebase.crashlytics.internal.log.LogFileManager $r5;
        int $i0, $i1;
        java.lang.String $r4;
        java.io.File[] $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $i0 := @parameter0: int;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i1 = lengthof $r2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager>;

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.log.LogFileManager: void discardOldLogFiles(java.util.Set)>($r1);

        $r6 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$AnySessionPartFileFilter;

        specialinvoke $r6.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$AnySessionPartFileFilter: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController$1)>(null);

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void retainSessions(java.io.File[],java.util.Set)>($r2, $r1);

        return;
    }

    private void trimSessionEventFiles(java.lang.String, int)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.Comparator $r5;
        java.io.File $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r3 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r4 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        $r1 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r3);

        $r5 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: int capFileCount(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r4, $r1, $i0, $r5);

        return;
    }

    private com.google.android.gms.tasks.Task waitForReportAction()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.android.gms.tasks.Task $r6, $r8;
        com.google.firebase.crashlytics.internal.Logger $r3;
        com.google.firebase.crashlytics.internal.common.DataCollectionArbiter $r1;
        java.lang.Boolean $r2, $r5;
        com.google.android.gms.tasks.TaskCompletionSource $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$7 $r7;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter>;

        $z0 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: boolean isAutomaticDataCollectionEnabled()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Automatic data collection is enabled. Allowing upload.");

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsAvailable>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r4.<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>($r5);

        $r6 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>($r2);

        return $r6;

     label1:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Automatic data collection is disabled.");

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Notifying that unsent reports are available.");

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsAvailable>;

        virtualinvoke $r4.<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>($r2);

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.DataCollectionArbiter dataCollectionArbiter>;

        $r6 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: com.google.android.gms.tasks.Task waitForAutomaticDataCollectionEnabled()>();

        $r7 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$7;

        specialinvoke $r7.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$7: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController)>(r0);

        $r6 = virtualinvoke $r6.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation)>($r7);

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Waiting for send/deleteUnsentReports to be called.");

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource reportActionProvided>;

        $r8 = virtualinvoke $r4.<com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()>();

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: com.google.android.gms.tasks.Task race(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Task)>($r6, $r8);

        return $r6;
    }

    private void writeBeginSession(java.lang.String, long)
    {
        java.lang.Object[] $r3;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        long $l0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$17 $r5;
        java.util.Locale $r2;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r6;
        java.lang.String $r1, $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsCore: java.lang.String getVersion()>();

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "Crashlytics Android SDK/%s", $r3);

        $r5 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$17;

        specialinvoke $r5.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$17: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.lang.String,java.lang.String,long)>(r0, $r1, $r4, $l0);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "BeginSession", $r5);

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        interfaceinvoke $r6.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: void writeBeginSession(java.lang.String,java.lang.String,long)>($r1, $r4, $l0);

        return;
    }

    private void writeInitialPartsTo(com.google.firebase.crashlytics.internal.proto.CodedOutputStream, java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.String[] $r3;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r1;
        java.io.File $r10;
        com.google.firebase.crashlytics.internal.Logger $r9;
        int $i0, $i1, $i2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r4, $r7;
        java.io.File[] $r8;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.proto.CodedOutputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String[] INITIAL_SESSION_PART_TAGS>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r4 = $r3[$i1];

        $r5 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cls");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r7);

        $r8 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r5);

        $i2 = lengthof $r8;

        if $i2 != 0 goto label2;

        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r4);

        goto label3;

     label2:
        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r4);

        $r10 = $r8[0];

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeToCosFromFile(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.io.File)>($r1, $r10);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static void writeNonFatalEventsTo(com.google.firebase.crashlytics.internal.proto.CodedOutputStream, java.io.File[], java.lang.String)
    {
        java.lang.Object[] $r7;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r0;
        java.io.File $r4;
        java.lang.Exception $r9;
        com.google.firebase.crashlytics.internal.Logger $r5;
        java.util.Locale $r6;
        int $i0, $i1;
        java.lang.String $r2, $r8;
        java.util.Comparator $r3;
        java.io.File[] $r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.proto.CodedOutputStream;

        $r1 := @parameter1: java.io.File[];

        $r2 := @parameter2: java.lang.String;

        $r3 = <com.google.firebase.crashlytics.internal.common.CommonUtils: java.util.Comparator FILE_MODIFIED_COMPARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r1, $r3);

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label8;

        $r4 = $r1[$i1];

     label2:
        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

     label3:
        $r6 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

     label4:
        $r7[0] = $r2;

        $r8 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r7[1] = $r8;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "Found Non Fatal for session ID %s in %s ", $r7);

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r8);

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeToCosFromFile(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,java.io.File)>($r0, $r4);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Error writting non-fatal to session.", $r9);

     label7:
        $i1 = $i1 + 1;

        goto label1;

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    private void writeSessionApp(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.DeliveryMechanism $r9;
        com.google.firebase.crashlytics.internal.common.AppData $r5;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$18 $r10;
        com.google.firebase.crashlytics.internal.common.IdManager $r3;
        int $i0;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r11;
        java.lang.String $r1, $r2, $r4, $r6, $r7, $r8;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.IdManager idManager>;

        $r4 = virtualinvoke $r3.<com.google.firebase.crashlytics.internal.common.IdManager: java.lang.String getAppIdentifier()>();

        $r5 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.AppData appData>;

        $r6 = $r5.<com.google.firebase.crashlytics.internal.common.AppData: java.lang.String versionCode>;

        $r2 = $r5.<com.google.firebase.crashlytics.internal.common.AppData: java.lang.String versionName>;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.IdManager idManager>;

        $r7 = virtualinvoke $r3.<com.google.firebase.crashlytics.internal.common.IdManager: java.lang.String getCrashlyticsInstallId()>();

        $r5 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.AppData appData>;

        $r8 = $r5.<com.google.firebase.crashlytics.internal.common.AppData: java.lang.String installerPackageName>;

        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism determineFrom(java.lang.String)>($r8);

        $i0 = virtualinvoke $r9.<com.google.firebase.crashlytics.internal.common.DeliveryMechanism: int getId()>();

        $r10 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$18;

        specialinvoke $r10.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$18: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r4, $r6, $r2, $r7, $i0);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionApp", $r10);

        $r11 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        $r8 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String unityVersion>;

        interfaceinvoke $r11.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: void writeSessionApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r1, $r4, $r6, $r2, $r7, $i0, $r8);

        return;
    }

    private void writeSessionDevice(java.lang.String)
    {
        android.content.Context $r5;
        long $l0, $l3, $l5;
        int $i1, $i2, $i4;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        java.lang.Runtime $r8;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r7;
        android.os.StatFs $r6;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r10;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$20 $r9;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r5 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context getContext()>();

        $r6 = new android.os.StatFs;

        $r7 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r2 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r6.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i1 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: int getCpuArchitectureInt()>();

        $r2 = <android.os.Build: java.lang.String MODEL>;

        $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i2 = virtualinvoke $r8.<java.lang.Runtime: int availableProcessors()>();

        $l3 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: long getTotalRamInBytes()>();

        $i4 = virtualinvoke $r6.<android.os.StatFs: int getBlockCount()>();

        $l0 = (long) $i4;

        $i4 = virtualinvoke $r6.<android.os.StatFs: int getBlockSize()>();

        $l5 = (long) $i4;

        $l0 = $l0 * $l5;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean isEmulator(android.content.Context)>($r5);

        $i4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: int getDeviceState(android.content.Context)>($r5);

        $r3 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r4 = <android.os.Build: java.lang.String PRODUCT>;

        $r9 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$20;

        specialinvoke $r9.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$20: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,int,java.lang.String,int,long,long,boolean,int,java.lang.String,java.lang.String)>(r0, $i1, $r2, $i2, $l3, $l0, $z0, $i4, $r3, $r4);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionDevice", $r9);

        $r10 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        interfaceinvoke $r10.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: void writeSessionDevice(java.lang.String,int,java.lang.String,int,long,long,boolean,int,java.lang.String,java.lang.String)>($r1, $i1, $r2, $i2, $l3, $l0, $z0, $i4, $r3, $r4);

        return;
    }

    private void writeSessionEvent(com.google.firebase.crashlytics.internal.proto.CodedOutputStream, java.lang.Thread, java.lang.Throwable, long, java.lang.String, boolean)
    {
        android.app.ActivityManager$RunningAppProcessInfo $r16;
        java.lang.Float $r11;
        byte[] $r32;
        com.google.firebase.crashlytics.internal.stacktrace.TrimmedThrowableData $r5, $r33;
        java.lang.Thread $r2, $r26;
        java.util.Map $r20, $r29;
        boolean $z0, $z1;
        com.google.firebase.crashlytics.internal.common.AppData $r17;
        java.util.Set $r22;
        java.lang.StackTraceElement[] $r6, $r27;
        com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy $r8;
        java.lang.Throwable $r3;
        android.content.Context $r9;
        com.google.firebase.crashlytics.internal.common.BatteryState $r10;
        long $l0, $l2, $l4;
        com.google.firebase.crashlytics.internal.common.IdManager $r18;
        int $i1, $i3, $i5, $i6;
        java.lang.String $r4, $r15, $r19;
        java.util.LinkedList $r7, $r34;
        java.util.Map$Entry $r25;
        java.util.Iterator $r23;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.Thread[] $r21;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r1;
        java.io.File $r14;
        java.util.TreeMap $r30, $r35;
        com.google.firebase.crashlytics.internal.log.LogFileManager $r31;
        android.content.res.Configuration $r13;
        java.lang.Object $r24;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r28;
        android.content.res.Resources $r12;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.proto.CodedOutputStream;

        $r2 := @parameter1: java.lang.Thread;

        $r3 := @parameter2: java.lang.Throwable;

        $l0 := @parameter3: long;

        $r4 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $r33 = new com.google.firebase.crashlytics.internal.stacktrace.TrimmedThrowableData;

        $r5 = $r33;

        $r8 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy stackTraceTrimmingStrategy>;

        specialinvoke $r33.<com.google.firebase.crashlytics.internal.stacktrace.TrimmedThrowableData: void <init>(java.lang.Throwable,com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy)>($r3, $r8);

        $r9 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context getContext()>();

        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.common.BatteryState: com.google.firebase.crashlytics.internal.common.BatteryState get(android.content.Context)>($r9);

        $r11 = virtualinvoke $r10.<com.google.firebase.crashlytics.internal.common.BatteryState: java.lang.Float getBatteryLevel()>();

        $i3 = virtualinvoke $r10.<com.google.firebase.crashlytics.internal.common.BatteryState: int getBatteryVelocity()>();

        $z1 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean getProximitySensorEnabled(android.content.Context)>($r9);

        $r12 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r13.<android.content.res.Configuration: int orientation>;

        $l2 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: long getTotalRamInBytes()>();

        $l4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: long calculateFreeRamInBytes(android.content.Context)>($r9);

        $l2 = $l2 - $l4;

        $r14 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getPath()>();

        $l4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: long calculateUsedDiskSpaceInBytes(java.lang.String)>($r15);

        $r15 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        $r16 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: android.app.ActivityManager$RunningAppProcessInfo getAppProcessInfo(java.lang.String,android.content.Context)>($r15, $r9);

        $r34 = new java.util.LinkedList;

        $r7 = $r34;

        specialinvoke $r34.<java.util.LinkedList: void <init>()>();

        $r6 = $r5.<com.google.firebase.crashlytics.internal.stacktrace.TrimmedThrowableData: java.lang.StackTraceElement[] stacktrace>;

        $r17 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.AppData appData>;

        $r15 = $r17.<com.google.firebase.crashlytics.internal.common.AppData: java.lang.String buildId>;

        $r18 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.IdManager idManager>;

        $r19 = virtualinvoke $r18.<com.google.firebase.crashlytics.internal.common.IdManager: java.lang.String getAppIdentifier()>();

        $i5 = 0;

        if $z0 == 0 goto label3;

        $r20 = staticinvoke <java.lang.Thread: java.util.Map getAllStackTraces()>();

        $i6 = interfaceinvoke $r20.<java.util.Map: int size()>();

        $r21 = newarray (java.lang.Thread)[$i6];

        $r22 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>();

        $r23 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (java.util.Map$Entry) $r24;

        $r24 = interfaceinvoke $r25.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = (java.lang.Thread) $r24;

        $r21[$i5] = $r26;

        $r8 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy stackTraceTrimmingStrategy>;

        $r24 = interfaceinvoke $r25.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (java.lang.StackTraceElement[]) $r24;

        $r27 = interfaceinvoke $r8.<com.google.firebase.crashlytics.internal.stacktrace.StackTraceTrimmingStrategy: java.lang.StackTraceElement[] getTrimmedStackTrace(java.lang.StackTraceElement[])>($r27);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r27);

        $i5 = $i5 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r21 = newarray (java.lang.Thread)[0];

     label4:
        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r9, "com.crashlytics.CollectCustomKeys", 1);

        if $z0 != 0 goto label5;

        $r30 = new java.util.TreeMap;

        $r20 = $r30;

        specialinvoke $r30.<java.util.TreeMap: void <init>()>();

        goto label6;

     label5:
        $r28 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        $r29 = virtualinvoke $r28.<com.google.firebase.crashlytics.internal.common.UserMetadata: java.util.Map getCustomKeys()>();

        $r20 = $r29;

        if $r29 == null goto label6;

        $i5 = interfaceinvoke $r29.<java.util.Map: int size()>();

        if $i5 <= 1 goto label6;

        $r35 = new java.util.TreeMap;

        specialinvoke $r35.<java.util.TreeMap: void <init>(java.util.Map)>($r29);

        $r20 = $r35;

        goto label6;

     label6:
        $r31 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager>;

        $r32 = virtualinvoke $r31.<com.google.firebase.crashlytics.internal.log.LogFileManager: byte[] getBytesForLog()>();

        staticinvoke <com.google.firebase.crashlytics.internal.proto.SessionProtobufHelper: void writeSessionEvent(com.google.firebase.crashlytics.internal.proto.CodedOutputStream,long,java.lang.String,com.google.firebase.crashlytics.internal.stacktrace.TrimmedThrowableData,java.lang.Thread,java.lang.StackTraceElement[],java.lang.Thread[],java.util.List,int,java.util.Map,byte[],android.app.ActivityManager$RunningAppProcessInfo,int,java.lang.String,java.lang.String,java.lang.Float,int,boolean,long,long)>($r1, $l0, $r4, $r5, $r2, $r6, $r21, $r7, 8, $r20, $r32, $r16, $i1, $r19, $r15, $r11, $i3, $z1, $l2, $l4);

        $r31 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.log.LogFileManager logFileManager>;

        virtualinvoke $r31.<com.google.firebase.crashlytics.internal.log.LogFileManager: void clearLog()>();

        return;
    }

    private void writeSessionOS(java.lang.String)
    {
        android.content.Context $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$19 $r5;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r6;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $r4 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context getContext()>();

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean isRooted(android.content.Context)>($r4);

        $r5 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$19;

        specialinvoke $r5.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$19: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.lang.String,java.lang.String,boolean)>(r0, $r2, $r3, $z0);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionOS", $r5);

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        interfaceinvoke $r6.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: void writeSessionOs(java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r2, $r3, $z0);

        return;
    }

    private void writeSessionPartFile(java.lang.String, java.lang.String, com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)
    {
        java.lang.Throwable $r9;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream $r6;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r5, $r8;
        java.io.File $r7;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction;

        $r5 = null;

     label1:
        $r6 = new com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream;

        $r7 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.firebase.crashlytics.internal.proto.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r7, $r2);

     label2:
        $r8 = staticinvoke <com.google.firebase.crashlytics.internal.proto.CodedOutputStream: com.google.firebase.crashlytics.internal.proto.CodedOutputStream newInstance(java.io.OutputStream)>($r6);

     label3:
        $r5 = $r8;

     label4:
        interfaceinvoke $r4.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.google.firebase.crashlytics.internal.proto.CodedOutputStream)>($r8);

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to flush to session ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r8, $r2);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close session ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r6, $r2);

        return;

     label6:
        $r9 := @caughtexception;

        goto label8;

     label7:
        $r9 := @caughtexception;

        $r6 = null;

     label8:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to flush to session ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r5, $r2);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close session ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r6, $r2);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void writeSessionPartsToSessionFile(java.io.File, java.lang.String, int)
    {
        java.lang.Object[] $r9;
        java.util.Locale $r8;
        int $i0, $i1;
        java.lang.Boolean $r10;
        java.lang.String $r1, $r5;
        boolean $z0, $z1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r2, $r12;
        com.google.firebase.crashlytics.internal.Logger $r3;
        java.lang.StringBuilder $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter $r6;
        java.io.File[] $r7, $r11;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting session parts for ID ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

        $r6 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        if $r7 == null goto label1;

        $i1 = lengthof $r7;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r1;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r9[1] = $r10;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Session %s has fatal exception: %s", $r9);

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

        $r6 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r5);

        $r11 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        if $r11 == null goto label3;

        $i1 = lengthof $r11;

        if $i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r1;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r9[1] = $r10;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Session %s has non-fatal exceptions: %s", $r9);

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

        if $z0 != 0 goto label6;

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No events present for session ID ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

        goto label9;

     label6:
        $r11 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] getTrimmedNonFatalFiles(java.lang.String,java.io.File[],int)>($r1, $r11, $i0);

        if $z0 == 0 goto label7;

        $r12 = $r7[0];

        goto label8;

     label7:
        $r12 = null;

     label8:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void synthesizeSessionFile(java.io.File,java.lang.String,java.io.File[],java.io.File)>($r2, $r1, $r11, $r12);

     label9:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing session part files for ID ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listSessionPartFilesFor(java.lang.String)>($r1);

        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void deleteFiles(java.io.File[])>($r7);

        return;
    }

    private void writeSessionUser(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$21 $r2;
        java.lang.String $r1;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata getUserMetadata(java.lang.String)>($r1);

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$21;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$21: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,com.google.firebase.crashlytics.internal.common.UserMetadata)>(r0, $r3);

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.google.firebase.crashlytics.internal.common.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionUser", $r2);

        return;
    }

    public static void writeToCosFromFile(com.google.firebase.crashlytics.internal.proto.CodedOutputStream, java.io.File)
    {
        java.lang.Throwable $r7;
        long $l0;
        java.io.FileInputStream $r0, $r6;
        com.google.firebase.crashlytics.internal.proto.CodedOutputStream $r1;
        java.io.File $r2;
        com.google.firebase.crashlytics.internal.Logger $r3;
        int $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;

        $r1 := @parameter0: com.google.firebase.crashlytics.internal.proto.CodedOutputStream;

        $r2 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to include a file that doesn\'t exist: ");

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String)>($r5);

        return;

     label1:
        $r6 = null;

     label2:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label3:
        $l0 = virtualinvoke $r2.<java.io.File: long length()>();

     label4:
        $i1 = (int) $l0;

     label5:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.google.firebase.crashlytics.internal.proto.CodedOutputStream,int)>($r0, $r1, $i1);

     label6:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r0, "Failed to close file input stream.");

        return;

     label7:
        $r7 := @caughtexception;

        $r6 = $r0;

        goto label9;

     label8:
        $r7 := @caughtexception;

     label9:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r6, "Failed to close file input stream.");

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public com.google.android.gms.tasks.Task checkForUnsentReports()
    {
        com.google.firebase.crashlytics.internal.Logger $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.lang.Boolean $r3;
        com.google.android.gms.tasks.TaskCompletionSource $r5;
        com.google.android.gms.tasks.Task $r4;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.concurrent.atomic.AtomicBoolean checkForUnsentReportsCalled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("checkForUnsentReports should only be called once per execution.");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r4 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>($r3);

        return $r4;

     label1:
        $r5 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsAvailable>;

        $r4 = virtualinvoke $r5.<com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()>();

        return $r4;
    }

    public void cleanInvalidTempFiles()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$15 $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$15;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$15: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController)>(r0);

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.lang.Runnable)>($r2);

        return;
    }

    public com.google.android.gms.tasks.Task deleteUnsentReports()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.android.gms.tasks.TaskCompletionSource $r1;
        java.lang.Boolean $r2;
        com.google.android.gms.tasks.Task $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource reportActionProvided>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r1.<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>($r2);

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsHandled>;

        $r3 = virtualinvoke $r1.<com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()>();

        return $r3;
    }

    public boolean didCrashOnPreviousExecution()
    {
        com.google.firebase.crashlytics.internal.Logger $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent $r3;
        java.lang.Boolean $r5;
        com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker>;

        $z0 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker: boolean isPresent()>();

        if $z0 != 0 goto label2;

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getCurrentSessionId()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent nativeComponent>;

        $z0 = interfaceinvoke $r3.<com.google.firebase.crashlytics.internal.CrashlyticsNativeComponent: boolean hasCrashDataForSession(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r4.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Found previous crash marker.");

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker crashMarker>;

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsFileMarker: boolean remove()>();

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void doCleanInvalidTempFiles(java.io.File[])
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r3;
        java.util.HashSet $r2;
        com.google.firebase.crashlytics.internal.Logger $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$16 $r7;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.io.File[] $r1;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r3 = $r1[$i2];

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found invalid session part file: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r6);

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        return;

     label3:
        $r7 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$16;

        specialinvoke $r7.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$16: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.util.Set)>(r0, $r2);

        $r1 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r7);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r3 = $r1[$i1];

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting invalid session file: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r6);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void doCloseSessions(int)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doCloseSessions(int,boolean)>($i0, 0);

        return;
    }

    public void enableExceptionHandling(java.lang.Thread$UncaughtExceptionHandler, com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)
    {
        java.lang.Thread$UncaughtExceptionHandler $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$5 $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r4 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;

        $r1 := @parameter1: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void openSession()>();

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$5;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$5: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController)>(r0);

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler$CrashListener,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider,java.lang.Thread$UncaughtExceptionHandler)>($r2, $r1, $r4);

        r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler crashHandler> = $r3;

        $r3 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler crashHandler>;

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r3);

        return;
    }

    public boolean finalizeSessions(int)
    {
        com.google.firebase.crashlytics.internal.Logger $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0;
        java.lang.Boolean $r3;
        java.lang.Exception $r4;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: void checkRunningOnThread()>();

        $z0 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: boolean isHandlingException()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Skipping session finalization because a crash has already occurred.");

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Finalizing previously open sessions.");

     label2:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void doCloseSessions(int,boolean)>($i0, 1);

     label3:
        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Closed all previously open sessions");

        return 1;

     label4:
        $r4 := @caughtexception;

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Unable to finalize previously open sessions.", $r4);

        return 0;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.io.File getFatalSessionFilesDir()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r1, $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "fatal-sessions");

        return $r1;
    }

    public java.io.File getFilesDir()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.persistence.FileStore $r2;
        java.io.File $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.persistence.FileStore fileStore>;

        $r1 = interfaceinvoke $r2.<com.google.firebase.crashlytics.internal.persistence.FileStore: java.io.File getFilesDir()>();

        return $r1;
    }

    public java.io.File getNativeSessionFilesDir()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r1, $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "native-sessions");

        return $r1;
    }

    public java.io.File getNonFatalSessionFilesDir()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File $r1, $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "nonfatal-sessions");

        return $r1;
    }

    public com.google.firebase.crashlytics.internal.common.UserMetadata getUserMetadata()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.UserMetadata r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        return r1;
    }

    public void handleUncaughtException(com.google.firebase.crashlytics.internal.settings.SettingsDataProvider, java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2, $r12;
        java.util.Date $r3;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.settings.SettingsDataProvider $r5;
        java.lang.Exception $r4;
        com.google.android.gms.tasks.Task $r11;
        com.google.firebase.crashlytics.internal.Logger $r6;
        java.lang.Thread $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r9;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$6 $r10;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r5 := @parameter0: com.google.firebase.crashlytics.internal.settings.SettingsDataProvider;

        $r1 := @parameter1: java.lang.Thread;

        $r2 := @parameter2: java.lang.Throwable;

        entermonitor r0;

     label1:
        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics is handling uncaught exception \"");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r8 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>($r8);

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r9 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r10 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$6;

        specialinvoke $r10.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$6: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.util.Date,java.lang.Throwable,java.lang.Thread,com.google.firebase.crashlytics.internal.settings.SettingsDataProvider)>(r0, $r3, $r2, $r1, $r5);

        $r11 = virtualinvoke $r9.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submitTask(java.util.concurrent.Callable)>($r10);

     label2:
        staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: java.lang.Object awaitEvenIfOnMainThread(com.google.android.gms.tasks.Task)>($r11);

     label3:
        exitmonitor r0;

        return;

     label4:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean hasOpenSession()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0;
        java.io.File[] $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHandlingException()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        boolean $z0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler crashHandler>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsUncaughtExceptionHandler: boolean isHandlingException()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.io.File[] listAppExceptionMarkerFiles()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.FilenameFilter $r2;
        java.io.File[] $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter APP_EXCEPTION_MARKER_FILTER>;

        $r1 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r2);

        return $r1;
    }

    public java.io.File[] listCompleteSessionFiles()
    {
        java.io.FilenameFilter $r3;
        java.lang.Object[] $r5;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0;
        java.util.LinkedList $r1;
        java.io.File[] $r4;
        java.io.File $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r4);

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r4);

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r4);

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r4 = newarray (java.io.File)[$i0];

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (java.io.File[]) $r5;

        return $r4;
    }

    public java.io.File[] listNativeSessionFileDirectories()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.File[] $r2;
        java.io.File $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getNativeSessionFilesDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] ensureFileArrayNotNull(java.io.File[])>($r2);

        return $r2;
    }

    public java.io.File[] listSessionBeginFiles()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.io.FilenameFilter $r2;
        java.io.File[] $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_BEGIN_FILE_FILTER>;

        $r1 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r2);

        return $r1;
    }

    public void openSession()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$14 $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$14;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$14: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController)>(r0);

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.util.concurrent.Callable)>($r2);

        return;
    }

    public com.google.android.gms.tasks.Task sendUnsentReports()
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.android.gms.tasks.TaskCompletionSource $r1;
        java.lang.Boolean $r2;
        com.google.android.gms.tasks.Task $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource reportActionProvided>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>($r2);

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsHandled>;

        $r3 = virtualinvoke $r1.<com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()>();

        return $r3;
    }

    public void setCustomKey(java.lang.String, java.lang.String)
    {
        android.content.Context $r6;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.IllegalArgumentException $r5;
        com.google.firebase.crashlytics.internal.Logger $r7;
        java.util.Map $r4;
        java.lang.String $r2, $r3;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r1;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

     label1:
        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.UserMetadata: void setCustomKey(java.lang.String,java.lang.String)>($r2, $r3);

     label2:
        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        $r4 = virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.UserMetadata: java.util.Map getCustomKeys()>();

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void cacheKeyData(java.util.Map)>($r4);

        return;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: android.content.Context context>;

        if $r6 == null goto label5;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean isAppDebuggable(android.content.Context)>($r6);

        if $z0 != 0 goto label4;

        goto label5;

     label4:
        throw $r5;

     label5:
        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String)>("Attempting to set custom attribute with null key, ignoring.");

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void setUserId(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        java.lang.String $r2;
        com.google.firebase.crashlytics.internal.common.UserMetadata $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.common.UserMetadata: void setUserId(java.lang.String)>($r2);

        $r1 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.UserMetadata userMetadata>;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: void cacheUserData(com.google.firebase.crashlytics.internal.common.UserMetadata)>($r1);

        return;
    }

    public com.google.android.gms.tasks.Task submitAllReports(float, com.google.android.gms.tasks.Task)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.android.gms.tasks.Task $r1, $r6;
        com.google.firebase.crashlytics.internal.Logger $r3;
        float $f0;
        com.google.android.gms.tasks.TaskCompletionSource $r4;
        java.lang.Boolean $r5;
        com.google.firebase.crashlytics.internal.report.ReportManager $r2;
        boolean $z0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$8 $r7;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.google.android.gms.tasks.Task;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.report.ReportManager reportManager>;

        $z0 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.report.ReportManager: boolean areReportsAvailable()>();

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("No reports are available.");

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.TaskCompletionSource unsentReportsAvailable>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r4.<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>($r5);

        $r1 = staticinvoke <com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>(null);

        return $r1;

     label1:
        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r3.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Unsent reports are available.");

        $r6 = specialinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.android.gms.tasks.Task waitForReportAction()>();

        $r7 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$8;

        specialinvoke $r7.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$8: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,com.google.android.gms.tasks.Task,float)>(r0, $r1, $f0);

        $r1 = virtualinvoke $r6.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation)>($r7);

        return $r1;
    }

    public void trimSessionFiles(int)
    {
        java.io.FilenameFilter $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        int $i0, $i1;
        java.util.Comparator $r3;
        java.io.File $r1, $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getNativeSessionFilesDir()>();

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        $i1 = staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: int capSessionCount(java.io.File,java.io.File,int,java.util.Comparator)>($r1, $r2, $i0, $r3);

        $i0 = $i0 - $i1;

        $r1 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        $i1 = staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: int capFileCount(java.io.File,int,java.util.Comparator)>($r1, $i0, $r3);

        $i0 = $i0 - $i1;

        $r1 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.File getFilesDir()>();

        $r4 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r3 = <com.google.firebase.crashlytics.internal.common.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        staticinvoke <com.google.firebase.crashlytics.internal.common.Utils: int capFileCount(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r1, $r4, $i0, $r3);

        return;
    }

    public void writeNonFatalException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.util.Date $r3;
        java.lang.Thread $r1;
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r4;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$11 $r5;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r4 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r5 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$11;

        specialinvoke $r5.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$11: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,java.util.Date,java.lang.Throwable,java.lang.Thread)>(r0, $r3, $r2, $r1);

        virtualinvoke $r4.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.lang.Runnable)>($r5);

        return;
    }

    public void writeToLog(long, java.lang.String)
    {
        com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker $r2;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController r0;
        long $l0;
        com.google.firebase.crashlytics.internal.common.CrashlyticsController$10 $r3;
        java.lang.String $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.common.CrashlyticsController;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.google.firebase.crashlytics.internal.common.CrashlyticsController: com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.google.firebase.crashlytics.internal.common.CrashlyticsController$10;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.common.CrashlyticsController$10: void <init>(com.google.firebase.crashlytics.internal.common.CrashlyticsController,long,java.lang.String)>(r0, $l0, $r1);

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.common.CrashlyticsBackgroundWorker: com.google.android.gms.tasks.Task submit(java.util.concurrent.Callable)>($r3);

        return;
    }
}
