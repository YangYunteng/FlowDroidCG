public final class com.google.common.io.ByteSource$ConcatenatedByteSource extends com.google.common.io.ByteSource
{
    public final java.lang.Iterable sources;

    public void <init>(java.lang.Iterable)
    {
        com.google.common.io.ByteSource$ConcatenatedByteSource r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.io.ByteSource$ConcatenatedByteSource;

        $r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<com.google.common.io.ByteSource: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.io.ByteSource$ConcatenatedByteSource: java.lang.Iterable sources> = $r1;

        return;
    }

    public boolean isEmpty()
    {
        java.util.Iterator $r2;
        com.google.common.io.ByteSource$ConcatenatedByteSource r0;
        java.lang.Object $r3;
        com.google.common.io.ByteSource $r4;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.io.ByteSource$ConcatenatedByteSource;

        $r1 = r0.<com.google.common.io.ByteSource$ConcatenatedByteSource: java.lang.Iterable sources>;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.io.ByteSource) $r3;

        $z0 = virtualinvoke $r4.<com.google.common.io.ByteSource: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public java.io.InputStream openStream()
    {
        java.util.Iterator $r2;
        com.google.common.io.ByteSource$ConcatenatedByteSource r0;
        com.google.common.io.MultiInputStream $r1;
        java.lang.Iterable $r3;

        r0 := @this: com.google.common.io.ByteSource$ConcatenatedByteSource;

        $r1 = new com.google.common.io.MultiInputStream;

        $r3 = r0.<com.google.common.io.ByteSource$ConcatenatedByteSource: java.lang.Iterable sources>;

        $r2 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        specialinvoke $r1.<com.google.common.io.MultiInputStream: void <init>(java.util.Iterator)>($r2);

        return $r1;
    }

    public long size()
    {
        java.util.Iterator $r2;
        long $l0, $l1;
        java.lang.Iterable $r1;
        com.google.common.io.ByteSource$ConcatenatedByteSource r0;
        java.lang.Object $r3;
        com.google.common.io.ByteSource $r4;
        boolean $z0;

        r0 := @this: com.google.common.io.ByteSource$ConcatenatedByteSource;

        $r1 = r0.<com.google.common.io.ByteSource$ConcatenatedByteSource: java.lang.Iterable sources>;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $l0 = 0L;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.io.ByteSource) $r3;

        $l1 = virtualinvoke $r4.<com.google.common.io.ByteSource: long size()>();

        $l0 = $l0 + $l1;

        goto label1;

     label2:
        return $l0;
    }

    public com.google.common.base.Optional sizeIfKnown()
    {
        java.util.Iterator $r2;
        long $l0, $l1;
        java.lang.Iterable $r1;
        java.lang.Long $r6;
        com.google.common.io.ByteSource$ConcatenatedByteSource r0;
        com.google.common.base.Optional $r5;
        java.lang.Object $r3;
        com.google.common.io.ByteSource $r4;
        boolean $z0;

        r0 := @this: com.google.common.io.ByteSource$ConcatenatedByteSource;

        $r1 = r0.<com.google.common.io.ByteSource$ConcatenatedByteSource: java.lang.Iterable sources>;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $l0 = 0L;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.common.io.ByteSource) $r3;

        $r5 = virtualinvoke $r4.<com.google.common.io.ByteSource: com.google.common.base.Optional sizeIfKnown()>();

        $z0 = virtualinvoke $r5.<com.google.common.base.Optional: boolean isPresent()>();

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r5;

     label2:
        $r3 = virtualinvoke $r5.<com.google.common.base.Optional: java.lang.Object get()>();

        $r6 = (java.lang.Long) $r3;

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $l0 = $l0 + $l1;

        goto label1;

     label3:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r6);

        return $r5;
    }

    public java.lang.String toString()
    {
        com.google.common.io.ByteSource$ConcatenatedByteSource r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        java.lang.Iterable $r3;

        r0 := @this: com.google.common.io.ByteSource$ConcatenatedByteSource;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ByteSource.concat(");

        $r3 = r0.<com.google.common.io.ByteSource$ConcatenatedByteSource: java.lang.Iterable sources>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
