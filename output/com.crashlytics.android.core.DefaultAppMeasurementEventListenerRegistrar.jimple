public class com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar extends java.lang.Object implements com.crashlytics.android.core.AppMeasurementEventListenerRegistrar
{
    public static final java.lang.String ANALYTIC_CLASS;
    public static final java.lang.String ANALYTIC_CLASS_ON_EVENT_LISTENER;
    public static final java.lang.String CRASH_ORIGIN;
    public static final java.lang.String ERROR_PREFIX;
    public static final java.lang.String GET_INSTANCE_METHOD;
    public static final java.lang.String METHOD_EQUALS;
    public static final java.lang.String METHOD_HASHCODE;
    public static final java.lang.String METHOD_ONEVENT;
    public static final java.lang.String METHOD_TOSTRING;
    public static final java.lang.String NAME;
    public static final java.util.List ONEVENT_EXPECTED_ARGTYPES;
    public static final java.lang.String PARAMETERS;
    public static final java.lang.String REGISTER_METHOD;
    public final com.crashlytics.android.core.CrashlyticsCore crashlyticsCore;
    public java.lang.Object eventListenerProxy;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.util.List $r1;

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String REGISTER_METHOD> = "registerOnMeasurementEventListener";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String PARAMETERS> = "parameters";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String NAME> = "name";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String METHOD_TOSTRING> = "toString";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String METHOD_ONEVENT> = "onEvent";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String METHOD_HASHCODE> = "hashCode";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String METHOD_EQUALS> = "equals";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String GET_INSTANCE_METHOD> = "getInstance";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String ERROR_PREFIX> = "Cannot register AppMeasurement Listener for Crashlytics breadcrumbs: ";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String CRASH_ORIGIN> = "crash";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String ANALYTIC_CLASS_ON_EVENT_LISTENER> = "com.google.android.gms.measurement.AppMeasurement$OnEventListener";

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String ANALYTIC_CLASS> = "com.google.android.gms.measurement.AppMeasurement";

        $r0 = newarray (java.lang.Class)[4];

        $r0[0] = class "Ljava/lang/String;";

        $r0[1] = class "Ljava/lang/String;";

        $r0[2] = class "Landroid/os/Bundle;";

        $r0[3] = class "Ljava/lang/Long;";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.util.List ONEVENT_EXPECTED_ARGTYPES> = $r1;

        return;
    }

    public void <init>(com.crashlytics.android.core.CrashlyticsCore)
    {
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar r0;
        com.crashlytics.android.core.CrashlyticsCore $r1;

        r0 := @this: com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore> = $r1;

        return;
    }

    public static com.crashlytics.android.core.CrashlyticsCore access$000(com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar)
    {
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar $r0;
        com.crashlytics.android.core.CrashlyticsCore r1;

        $r0 := @parameter0: com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

        r1 = $r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        return r1;
    }

    public static void access$100(com.crashlytics.android.core.CrashlyticsCore, java.lang.String, android.os.Bundle)
    {
        java.lang.String $r1;
        android.os.Bundle $r2;
        com.crashlytics.android.core.CrashlyticsCore $r0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Bundle;

        staticinvoke <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: void writeEventToUserLog(com.crashlytics.android.core.CrashlyticsCore,java.lang.String,android.os.Bundle)>($r0, $r1, $r2);

        return;
    }

    private java.lang.Class getClass(java.lang.String)
    {
        android.content.Context $r4;
        com.crashlytics.android.core.CrashlyticsCore $r3;
        java.lang.Class $r6;
        java.lang.String $r2;
        java.lang.ClassLoader $r5;
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar r0;
        java.lang.Exception $r1;

        r0 := @this: com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

        $r2 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r4 = virtualinvoke $r3.<f.a.a.a.l: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r2);

     label2:
        return $r6;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    private java.lang.Object getInstance(java.lang.Class)
    {
        android.content.Context $r7;
        java.lang.Object[] $r5;
        com.crashlytics.android.core.CrashlyticsCore $r6;
        java.lang.Class[] $r3;
        java.lang.Exception $r1;
        java.lang.Class $r2;
        java.lang.Object $r8;
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar r0;
        java.lang.reflect.Method $r4;

        r0 := @this: com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

        $r2 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[1];

     label1:
        $r3[0] = class "Landroid/content/Context;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getInstance", $r3);

     label2:
        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r6 = r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r7 = virtualinvoke $r6.<f.a.a.a.l: android.content.Context getContext()>();

        $r5[0] = $r7;

        $r8 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

     label4:
        return $r8;

     label5:
        return null;

     label6:
        $r1 := @caughtexception;

        goto label5;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static java.lang.String serializeEvent(java.lang.String, android.os.Bundle)
    {
        android.os.Bundle $r3;
        java.util.Iterator $r5;
        java.util.Set $r4;
        org.json.JSONObject $r0, $r1;
        java.lang.Object $r6;
        java.lang.String $r2, $r7;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: android.os.Bundle;

        $r0 = new org.json.JSONObject;

        specialinvoke $r0.<org.json.JSONObject: void <init>()>();

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r6 = virtualinvoke $r3.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r7);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r7, $r6);

        goto label1;

     label2:
        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r2);

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("parameters", $r1);

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        return $r2;
    }

    public static boolean validateOnEventArgTypes(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.Class $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r0;

        $r1 = <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.util.List ONEVENT_EXPECTED_ARGTYPES>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r1 = <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.util.List ONEVENT_EXPECTED_ARGTYPES>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r3 = $r0[$i1];

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static void writeEventToUserLog(com.crashlytics.android.core.CrashlyticsCore, java.lang.String, android.os.Bundle)
    {
        org.json.JSONException $r0;
        f.a.a.a.o $r6;
        android.os.Bundle $r3;
        com.crashlytics.android.core.CrashlyticsCore $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r5;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$A$:");

        $r5 = staticinvoke <com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.String serializeEvent(java.lang.String,android.os.Bundle)>($r2, $r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore: void log(java.lang.String)>($r5);

     label2:
        return;

     label3:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to serialize Firebase Analytics event; ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r2);

        return;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch org.json.JSONException from label1 to label2 with label4;
    }

    public java.lang.Object getOnEventListenerProxy(java.lang.Class)
    {
        java.lang.Throwable $r8;
        android.content.Context $r4;
        com.crashlytics.android.core.CrashlyticsCore $r3;
        java.lang.Class[] $r6;
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar$1 $r7;
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.ClassLoader $r5;
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar r0;

        r0 := @this: com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

        $r1 := @parameter0: java.lang.Class;

        entermonitor r0;

     label1:
        $r2 = r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Object eventListenerProxy>;

        if $r2 != null goto label2;

        $r3 = r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r4 = virtualinvoke $r3.<f.a.a.a.l: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = $r1;

        $r7 = new com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar$1;

        specialinvoke $r7.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar$1: void <init>(com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar)>(r0);

        $r2 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r5, $r6, $r7);

        r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Object eventListenerProxy> = $r2;

     label2:
        $r2 = r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Object eventListenerProxy>;

     label3:
        exitmonitor r0;

        return $r2;

     label4:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public boolean register()
    {
        f.a.a.a.o $r3;
        java.lang.Object[] $r7;
        java.lang.NoSuchMethodException $r12;
        java.lang.Class[] $r1;
        java.lang.Exception $r9;
        java.lang.Class $r2, $r5;
        java.lang.Object $r4, $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar r0;
        java.lang.reflect.Method $r6;

        r0 := @this: com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

        $r2 = specialinvoke r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Class getClass(java.lang.String)>("com.google.android.gms.measurement.AppMeasurement");

        if $r2 != null goto label01;

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r3.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Firebase Analytics is not present; you will not see automatic logging of events before a crash occurs.");

        return 0;

     label01:
        $r4 = specialinvoke r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Object getInstance(java.lang.Class)>($r2);

        if $r4 != null goto label02;

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r3.<f.a.a.a.o: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Cannot register AppMeasurement Listener for Crashlytics breadcrumbs: Could not create an instance of Firebase Analytics.");

        return 0;

     label02:
        $r5 = specialinvoke r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Class getClass(java.lang.String)>("com.google.android.gms.measurement.AppMeasurement$OnEventListener");

        if $r5 != null goto label03;

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r3.<f.a.a.a.o: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Cannot register AppMeasurement Listener for Crashlytics breadcrumbs: Could not get class com.google.android.gms.measurement.AppMeasurement$OnEventListener");

        return 0;

     label03:
        $r1 = newarray (java.lang.Class)[1];

     label04:
        $r1[0] = $r5;

     label05:
        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerOnMeasurementEventListener", $r1);

     label06:
        $r7 = newarray (java.lang.Object)[1];

     label07:
        $r8 = virtualinvoke r0.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: java.lang.Object getOnEventListenerProxy(java.lang.Class)>($r5);

     label08:
        $r7[0] = $r8;

     label09:
        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r7);

     label10:
        return 1;

     label11:
        $r9 := @caughtexception;

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot register AppMeasurement Listener for Crashlytics breadcrumbs: ");

        $r11 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<f.a.a.a.o: void b(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r11, $r9);

        return 1;

     label12:
        $r12 := @caughtexception;

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r3.<f.a.a.a.o: void b(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Cannot register AppMeasurement Listener for Crashlytics breadcrumbs: Method registerOnMeasurementEventListener not found.", $r12);

        return 0;

        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
        catch java.lang.NoSuchMethodException from label09 to label10 with label12;
        catch java.lang.Exception from label04 to label06 with label11;
        catch java.lang.Exception from label07 to label10 with label11;
    }
}
