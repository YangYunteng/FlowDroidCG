public class com.google.common.collect.Synchronized$SynchronizedCollection extends com.google.common.collect.Synchronized$SynchronizedObject implements java.util.Collection
{
    public static final long serialVersionUID;

    public void <init>(java.util.Collection, java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 := @parameter0: java.util.Collection;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void <init>(java.util.Collection, java.lang.Object, com.google.common.collect.Synchronized$1)
    {
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r1;
        java.lang.Object $r2;
        com.google.common.collect.Synchronized$1 $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 := @parameter0: java.util.Collection;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.google.common.collect.Synchronized$1;

        specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>($r1, $r2);

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clear()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        interfaceinvoke $r2.<java.util.Collection: void clear()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean containsAll(java.util.Collection)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        return $r1;
    }

    public java.util.Collection delegate()
    {
        java.lang.Object $r1;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object delegate()>();

        $r2 = (java.util.Collection) $r1;

        return $r2;
    }

    public void forEach(java.util.function.Consumer)
    {
        java.util.function.Consumer $r3;
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r3 := @parameter0: java.util.function.Consumer;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        interfaceinvoke $r2.<java.util.Collection: void forEach(java.util.function.Consumer)>($r3);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.stream.Stream parallelStream()
    {
        java.lang.Throwable $r4;
        java.util.stream.Stream $r3;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.stream.Stream parallelStream()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean removeAll(java.util.Collection)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeIf(java.util.function.Predicate)
    {
        java.lang.Throwable $r4;
        java.util.function.Predicate $r2;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.util.function.Predicate;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean removeIf(java.util.function.Predicate)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean retainAll(java.util.Collection)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int size()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Spliterator spliterator()
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;
        java.util.Spliterator $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Spliterator spliterator()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.stream.Stream stream()
    {
        java.lang.Throwable $r4;
        java.util.stream.Stream $r3;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.stream.Stream stream()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r3;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r2;
        com.google.common.collect.Synchronized$SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedCollection;

        $r2 := @parameter0: java.lang.Object[];

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Collection delegate()>();

        $r2 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
