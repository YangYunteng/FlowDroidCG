public final class com.google.common.collect.ImmutableSortedMap$1 extends java.lang.Object implements java.util.Comparator
{
    public final java.util.Comparator val$comparator;

    public void <init>(java.util.Comparator)
    {
        com.google.common.collect.ImmutableSortedMap$1 r0;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ImmutableSortedMap$1;

        $r1 := @parameter0: java.util.Comparator;

        r0.<com.google.common.collect.ImmutableSortedMap$1: java.util.Comparator val$comparator> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        java.util.Map$Entry $r3, $r4;
        com.google.common.collect.ImmutableSortedMap$1 r0;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.ImmutableSortedMap$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Map$Entry) $r1;

        $r4 = (java.util.Map$Entry) $r2;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>($r3, $r4);

        return $i0;
    }

    public int compare(java.util.Map$Entry, java.util.Map$Entry)
    {
        java.util.Map$Entry $r2, $r3;
        com.google.common.collect.ImmutableSortedMap$1 r0;
        int $i0;
        java.lang.Object $r4, $r5;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ImmutableSortedMap$1;

        $r2 := @parameter0: java.util.Map$Entry;

        $r3 := @parameter1: java.util.Map$Entry;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap$1: java.util.Comparator val$comparator>;

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $i0;
    }
}
