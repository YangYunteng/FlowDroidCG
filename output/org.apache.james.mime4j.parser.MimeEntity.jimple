public class org.apache.james.mime4j.parser.MimeEntity extends org.apache.james.mime4j.parser.AbstractEntity
{
    public static final int T_IN_BODYPART;
    public static final int T_IN_MESSAGE;
    public org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream;
    public final org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer;
    public final org.apache.james.mime4j.io.LineNumberSource lineSource;
    public org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream;
    public int recursionMode;
    public boolean skipHeader;
    public byte[] tmpbuf;

    public void <init>(org.apache.james.mime4j.io.LineNumberSource, org.apache.james.mime4j.io.BufferedLineReaderInputStream, org.apache.james.mime4j.descriptor.BodyDescriptor, int, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r2;
        org.apache.james.mime4j.descriptor.BodyDescriptor $r3;
        org.apache.james.mime4j.io.LineNumberSource $r1;
        int $i0, $i1;
        org.apache.james.mime4j.parser.MimeEntityConfig $r4;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r1 := @parameter0: org.apache.james.mime4j.io.LineNumberSource;

        $r2 := @parameter1: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r3 := @parameter2: org.apache.james.mime4j.descriptor.BodyDescriptor;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 = new org.apache.james.mime4j.parser.MimeEntityConfig;

        specialinvoke $r4.<org.apache.james.mime4j.parser.MimeEntityConfig: void <init>()>();

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void <init>(org.apache.james.mime4j.io.LineNumberSource,org.apache.james.mime4j.io.BufferedLineReaderInputStream,org.apache.james.mime4j.descriptor.BodyDescriptor,int,int,org.apache.james.mime4j.parser.MimeEntityConfig)>($r1, $r2, $r3, $i0, $i1, $r4);

        return;
    }

    public void <init>(org.apache.james.mime4j.io.LineNumberSource, org.apache.james.mime4j.io.BufferedLineReaderInputStream, org.apache.james.mime4j.descriptor.BodyDescriptor, int, int, org.apache.james.mime4j.parser.MimeEntityConfig)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r5;
        org.apache.james.mime4j.descriptor.BodyDescriptor $r4;
        int $i0, $i1;
        org.apache.james.mime4j.io.LineNumberSource $r3;
        org.apache.james.mime4j.parser.MimeEntityConfig $r2;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r3 := @parameter0: org.apache.james.mime4j.io.LineNumberSource;

        $r1 := @parameter1: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r4 := @parameter2: org.apache.james.mime4j.descriptor.BodyDescriptor;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r2 := @parameter5: org.apache.james.mime4j.parser.MimeEntityConfig;

        specialinvoke r0.<org.apache.james.mime4j.parser.AbstractEntity: void <init>(org.apache.james.mime4j.descriptor.BodyDescriptor,int,int,org.apache.james.mime4j.parser.MimeEntityConfig)>($r4, $i0, $i1, $r2);

        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineNumberSource lineSource> = $r3;

        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer> = $r1;

        $r5 = new org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.parser.MimeEntityConfig: int getMaxLineLen()>();

        specialinvoke $r5.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: void <init>(java.io.InputStream,int)>($r1, $i0);

        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream> = $r5;

        r0.<org.apache.james.mime4j.parser.MimeEntity: boolean skipHeader> = 0;

        return;
    }

    private void advanceToBoundary()
    {
        byte[] $r2;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r1;
        int $i0, $i1;
        org.apache.james.mime4j.parser.MimeEntity r0;
        boolean $z0;
        java.io.InputStream $r3;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        $z0 = virtualinvoke $r1.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean eof()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<org.apache.james.mime4j.parser.MimeEntity: byte[] tmpbuf>;

        if $r2 != null goto label1;

        $r2 = newarray (byte)[2048];

        r0.<org.apache.james.mime4j.parser.MimeEntity: byte[] tmpbuf> = $r2;

     label1:
        $r3 = specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: java.io.InputStream getLimitedContentStream()>();

     label2:
        $r2 = r0.<org.apache.james.mime4j.parser.MimeEntity: byte[] tmpbuf>;

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2);

        $i1 = -1;

        if $i0 == $i1 goto label3;

        goto label2;

     label3:
        return;
    }

    private void clearMimeStream()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r2;
        int $i0;
        org.apache.james.mime4j.parser.MimeEntityConfig $r3;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream> = null;

        $r2 = new org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer>;

        $r3 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        $i0 = virtualinvoke $r3.<org.apache.james.mime4j.parser.MimeEntityConfig: int getMaxLineLen()>();

        specialinvoke $r2.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: void <init>(java.io.InputStream,int)>($r1, $i0);

        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream> = $r2;

        return;
    }

    private void createMimeStream()
    {
        org.apache.james.mime4j.MimeException $r9;
        java.lang.IllegalArgumentException $r8;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1;
        org.apache.james.mime4j.descriptor.MutableBodyDescriptor $r3;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r7;
        org.apache.james.mime4j.io.MimeBoundaryInputStream $r2, $r5;
        int $i0, $i1;
        org.apache.james.mime4j.parser.MimeEntityConfig $r6;
        java.lang.String $r4;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r3 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.descriptor.MutableBodyDescriptor body>;

        $r4 = interfaceinvoke $r3.<org.apache.james.mime4j.descriptor.BodyDescriptor: java.lang.String getBoundary()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 * 2;

        if $i0 >= 4096 goto label01;

        $i0 = 4096;

     label01:
        $r2 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        if $r2 == null goto label04;

        $r5 = new org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $r1 = new org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r2 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $r6 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

     label02:
        $i1 = virtualinvoke $r6.<org.apache.james.mime4j.parser.MimeEntityConfig: int getMaxLineLen()>();

        specialinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void <init>(java.io.InputStream,int,int)>($r2, $i0, $i1);

        specialinvoke $r5.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void <init>(org.apache.james.mime4j.io.BufferedLineReaderInputStream,java.lang.String)>($r1, $r4);

     label03:
        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream> = $r5;

        goto label09;

     label04:
        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer>;

     label05:
        virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void ensureCapacity(int)>($i0);

     label06:
        $r2 = new org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer>;

     label07:
        specialinvoke $r2.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void <init>(org.apache.james.mime4j.io.BufferedLineReaderInputStream,java.lang.String)>($r1, $r4);

     label08:
        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream> = $r2;

     label09:
        $r7 = new org.apache.james.mime4j.io.LineReaderInputStreamAdaptor;

        $r2 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $r6 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        $i0 = virtualinvoke $r6.<org.apache.james.mime4j.parser.MimeEntityConfig: int getMaxLineLen()>();

        specialinvoke $r7.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: void <init>(java.io.InputStream,int)>($r2, $i0);

        r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream> = $r7;

        return;

     label10:
        $r8 := @caughtexception;

        $r9 = new org.apache.james.mime4j.MimeException;

        $r4 = virtualinvoke $r8.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.apache.james.mime4j.MimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r8);

        throw $r9;

        catch java.lang.IllegalArgumentException from label02 to label03 with label10;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch java.lang.IllegalArgumentException from label07 to label08 with label10;
    }

    private java.io.InputStream getLimitedContentStream()
    {
        org.apache.james.mime4j.io.LimitedInputStream $r3;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r1;
        byte $b0;
        int $i2;
        org.apache.james.mime4j.parser.MimeEntityConfig $r2;
        long $l1;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r2 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        $l1 = virtualinvoke $r2.<org.apache.james.mime4j.parser.MimeEntityConfig: long getMaxContentLen()>();

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $r3 = new org.apache.james.mime4j.io.LimitedInputStream;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        specialinvoke $r3.<org.apache.james.mime4j.io.LimitedInputStream: void <init>(java.io.InputStream,long)>($r1, $l1);

        return $r3;

     label1:
        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        return $r1;
    }

    private org.apache.james.mime4j.parser.EntityStateMachine nextMessage()
    {
        org.apache.james.mime4j.descriptor.MutableBodyDescriptor $r3;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r7;
        org.apache.james.mime4j.codec.QuotedPrintableInputStream $r10;
        org.apache.james.mime4j.io.LineNumberSource $r1;
        int $i0;
        java.lang.String $r4;
        org.apache.james.mime4j.parser.MimeEntity r0, $r8, $r13;
        boolean $z0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r12;
        org.apache.james.mime4j.parser.MimeEntityConfig $r2;
        org.apache.commons.logging.Log $r5;
        org.apache.james.mime4j.codec.Base64InputStream $r9;
        java.io.InputStream $r6;
        org.apache.james.mime4j.parser.RawEntity $r11;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r3 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.descriptor.MutableBodyDescriptor body>;

        $r4 = interfaceinvoke $r3.<org.apache.james.mime4j.descriptor.ContentDescriptor: java.lang.String getTransferEncoding()>();

        $z0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isBase64Encoding(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("base64 encoded message/rfc822 detected");

        $r9 = new org.apache.james.mime4j.codec.Base64InputStream;

        $r6 = $r9;

        $r7 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        specialinvoke $r9.<org.apache.james.mime4j.codec.Base64InputStream: void <init>(java.io.InputStream)>($r7);

        goto label3;

     label1:
        $z0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isQuotedPrintableEncoded(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("quoted-printable encoded message/rfc822 detected");

        $r10 = new org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r6 = $r10;

        $r7 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        specialinvoke $r10.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(java.io.InputStream)>($r7);

        goto label3;

     label2:
        $r6 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

     label3:
        $i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        if $i0 != 2 goto label4;

        $r11 = new org.apache.james.mime4j.parser.RawEntity;

        specialinvoke $r11.<org.apache.james.mime4j.parser.RawEntity: void <init>(java.io.InputStream)>($r6);

        return $r11;

     label4:
        $r13 = new org.apache.james.mime4j.parser.MimeEntity;

        $r8 = $r13;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineNumberSource lineSource>;

        $r12 = new org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r2 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.parser.MimeEntityConfig: int getMaxLineLen()>();

        specialinvoke $r12.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void <init>(java.io.InputStream,int,int)>($r6, 4096, $i0);

        $r3 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.descriptor.MutableBodyDescriptor body>;

        $r2 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        specialinvoke $r13.<org.apache.james.mime4j.parser.MimeEntity: void <init>(org.apache.james.mime4j.io.LineNumberSource,org.apache.james.mime4j.io.BufferedLineReaderInputStream,org.apache.james.mime4j.descriptor.BodyDescriptor,int,int,org.apache.james.mime4j.parser.MimeEntityConfig)>($r1, $r12, $r3, 0, 1, $r2);

        $i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        virtualinvoke $r8.<org.apache.james.mime4j.parser.MimeEntity: void setRecursionMode(int)>($i0);

        return $r8;
    }

    private org.apache.james.mime4j.parser.EntityStateMachine nextMimeEntity()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r2;
        org.apache.james.mime4j.descriptor.MutableBodyDescriptor $r3;
        org.apache.james.mime4j.io.MimeBoundaryInputStream $r6;
        org.apache.james.mime4j.io.LineNumberSource $r1;
        int $i0;
        org.apache.james.mime4j.parser.MimeEntityConfig $r4;
        org.apache.james.mime4j.parser.MimeEntity r0, $r7;
        org.apache.james.mime4j.parser.RawEntity $r5;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        if $i0 != 2 goto label1;

        $r5 = new org.apache.james.mime4j.parser.RawEntity;

        $r6 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        specialinvoke $r5.<org.apache.james.mime4j.parser.RawEntity: void <init>(java.io.InputStream)>($r6);

        return $r5;

     label1:
        $r2 = new org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r6 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $r4 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        $i0 = virtualinvoke $r4.<org.apache.james.mime4j.parser.MimeEntityConfig: int getMaxLineLen()>();

        specialinvoke $r2.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void <init>(java.io.InputStream,int,int)>($r6, 4096, $i0);

        $r7 = new org.apache.james.mime4j.parser.MimeEntity;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineNumberSource lineSource>;

        $r3 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.descriptor.MutableBodyDescriptor body>;

        $r4 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.parser.MimeEntityConfig config>;

        specialinvoke $r7.<org.apache.james.mime4j.parser.MimeEntity: void <init>(org.apache.james.mime4j.io.LineNumberSource,org.apache.james.mime4j.io.BufferedLineReaderInputStream,org.apache.james.mime4j.descriptor.BodyDescriptor,int,int,org.apache.james.mime4j.parser.MimeEntityConfig)>($r1, $r2, $r3, 10, 11, $r4);

        $i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        virtualinvoke $r7.<org.apache.james.mime4j.parser.MimeEntity: void setRecursionMode(int)>($i0);

        return $r7;
    }

    public org.apache.james.mime4j.parser.EntityStateMachine advance()
    {
        java.lang.IllegalStateException $r9;
        org.apache.james.mime4j.parser.Event $r7;
        org.apache.james.mime4j.parser.EntityStateMachine $r4;
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor $r5;
        org.apache.james.mime4j.descriptor.MutableBodyDescriptor $r6;
        byte $b1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream $r3;
        int $i0, $i2;
        java.lang.StringBuilder $r1, $r8;
        java.lang.String $r2;
        org.apache.james.mime4j.parser.MimeEntity r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int state>;

        $i2 = -3;

        if $i0 == $i2 goto label20;

        $i2 = -2;

        if $i0 == $i2 goto label17;

        $b1 = 5;

        if $i0 == 0 goto label15;

        if $i0 == 12 goto label20;

        lookupswitch($i0)
        {
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label09;
            case 6: goto label07;
            case 7: goto label20;
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label03;
            default: goto label01;
        };

     label01:
        $i2 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int endState>;

        if $i0 != $i2 goto label02;

        $i0 = -1;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = $i0;

        goto label21;

     label02:
        $r9 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        $r1 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid state: ");

        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int state>;

        $r2 = staticinvoke <org.apache.james.mime4j.parser.AbstractEntity: java.lang.String stateToString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r9;

     label03:
        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 3;

        goto label21;

     label04:
        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 7;

        goto label21;

     label05:
        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void advanceToBoundary()>();

        $r3 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean isLastPart()>();

        if $z0 == 0 goto label06;

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void clearMimeStream()>();

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 7;

        goto label21;

     label06:
        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void clearMimeStream()>();

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void createMimeStream()>();

        $i0 = -2;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = $i0;

        $r4 = specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.parser.EntityStateMachine nextMimeEntity()>();

        return $r4;

     label07:
        $r5 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        $z0 = virtualinvoke $r5.<org.apache.james.mime4j.io.LineReaderInputStreamAdaptor: boolean isUsed()>();

        if $z0 == 0 goto label08;

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void advanceToBoundary()>();

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 7;

        goto label21;

     label08:
        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void createMimeStream()>();

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 8;

        goto label21;

     label09:
        $r6 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.descriptor.MutableBodyDescriptor body>;

        $r2 = interfaceinvoke $r6.<org.apache.james.mime4j.descriptor.ContentDescriptor: java.lang.String getMimeType()>();

        $i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        if $i0 != 3 goto label10;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 12;

        goto label21;

     label10:
        $z0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isMultipart(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 6;

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void clearMimeStream()>();

        goto label21;

     label11:
        $i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        if $i0 == 1 goto label12;

        $z0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isMessage(java.lang.String)>($r2);

        if $z0 == 0 goto label12;

        $i0 = -3;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = $i0;

        $r4 = specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.parser.EntityStateMachine nextMessage()>();

        return $r4;

     label12:
        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 12;

        goto label21;

     label13:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.parser.AbstractEntity: boolean parseField()>();

        if $z0 == 0 goto label14;

        $b1 = 4;

     label14:
        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = $b1;

        goto label21;

     label15:
        $z0 = r0.<org.apache.james.mime4j.parser.MimeEntity: boolean skipHeader>;

        if $z0 == 0 goto label16;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 5;

        goto label21;

     label16:
        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 3;

        goto label21;

     label17:
        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void advanceToBoundary()>();

        $r3 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof()>();

        if $z0 == 0 goto label18;

        $r3 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean isLastPart()>();

        if $z0 != 0 goto label18;

        $r7 = <org.apache.james.mime4j.parser.Event: org.apache.james.mime4j.parser.Event MIME_BODY_PREMATURE_END>;

        virtualinvoke r0.<org.apache.james.mime4j.parser.AbstractEntity: void monitor(org.apache.james.mime4j.parser.Event)>($r7);

        goto label19;

     label18:
        $r3 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream>;

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean isLastPart()>();

        if $z0 != 0 goto label19;

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void clearMimeStream()>();

        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void createMimeStream()>();

        $i0 = -2;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = $i0;

        $r4 = specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.parser.EntityStateMachine nextMimeEntity()>();

        return $r4;

     label19:
        specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: void clearMimeStream()>();

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = 9;

        goto label21;

     label20:
        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int endState>;

        r0.<org.apache.james.mime4j.parser.AbstractEntity: int state> = $i0;

     label21:
        return null;
    }

    public java.io.InputStream getContentStream()
    {
        java.lang.IllegalStateException $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.apache.james.mime4j.parser.MimeEntity r0;
        java.io.InputStream $r4;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int state>;

        if $i0 == 6 goto label2;

        if $i0 == 12 goto label2;

        if $i0 == 8 goto label2;

        if $i0 != 9 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid state: ");

        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int state>;

        $r3 = staticinvoke <org.apache.james.mime4j.parser.AbstractEntity: java.lang.String stateToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r4 = specialinvoke r0.<org.apache.james.mime4j.parser.MimeEntity: java.io.InputStream getLimitedContentStream()>();

        return $r4;
    }

    public org.apache.james.mime4j.io.LineReaderInputStream getDataStream()
    {
        org.apache.james.mime4j.io.LineReaderInputStreamAdaptor r1;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream>;

        return r1;
    }

    public int getLineNumber()
    {
        int $i0;
        org.apache.james.mime4j.io.LineNumberSource $r1;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r1 = r0.<org.apache.james.mime4j.parser.MimeEntity: org.apache.james.mime4j.io.LineNumberSource lineSource>;

        if $r1 != null goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $i0 = interfaceinvoke $r1.<org.apache.james.mime4j.io.LineNumberSource: int getLineNumber()>();

        return $i0;
    }

    public int getRecursionMode()
    {
        int i0;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        i0 = r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode>;

        return i0;
    }

    public void setRecursionMode(int)
    {
        int $i0;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.parser.MimeEntity: int recursionMode> = $i0;

        return;
    }

    public void skipHeader(java.lang.String)
    {
        java.lang.IllegalStateException $r6;
        org.apache.james.mime4j.util.ByteSequence $r3;
        org.apache.james.mime4j.descriptor.MutableBodyDescriptor $r4;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        org.apache.james.mime4j.parser.RawField $r5;
        org.apache.james.mime4j.parser.MimeEntity r0;

        r0 := @this: org.apache.james.mime4j.parser.MimeEntity;

        $r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int state>;

        if $i0 != 0 goto label1;

        r0.<org.apache.james.mime4j.parser.MimeEntity: boolean skipHeader> = 1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r1);

        $r4 = r0.<org.apache.james.mime4j.parser.AbstractEntity: org.apache.james.mime4j.descriptor.MutableBodyDescriptor body>;

        $r5 = new org.apache.james.mime4j.parser.RawField;

        specialinvoke $r5.<org.apache.james.mime4j.parser.RawField: void <init>(org.apache.james.mime4j.util.ByteSequence,int)>($r3, 12);

        interfaceinvoke $r4.<org.apache.james.mime4j.descriptor.MutableBodyDescriptor: void addField(org.apache.james.mime4j.parser.Field)>($r5);

        return;

     label1:
        $r6 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid state: ");

        $i0 = r0.<org.apache.james.mime4j.parser.AbstractEntity: int state>;

        $r1 = staticinvoke <org.apache.james.mime4j.parser.AbstractEntity: java.lang.String stateToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }

    public static void <clinit>()
    {
        <org.apache.james.mime4j.parser.MimeEntity: int T_IN_MESSAGE> = -3;

        <org.apache.james.mime4j.parser.MimeEntity: int T_IN_BODYPART> = -2;

        return;
    }
}
