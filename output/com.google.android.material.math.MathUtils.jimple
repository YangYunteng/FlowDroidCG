public final class com.google.android.material.math.MathUtils extends java.lang.Object
{
    public static final float DEFAULT_EPSILON;

    public void <init>()
    {
        com.google.android.material.math.MathUtils r0;

        r0 := @this: com.google.android.material.math.MathUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float dist(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        double $d0, $d1;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f1 = $f2 - $f1;

        $f0 = $f3 - $f0;

        $d0 = (double) $f1;

        $d1 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        $f1 = (float) $d0;

        return $f1;
    }

    public static float distanceToFurthestCorner(float, float, float, float, float, float)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        $f3 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f4 := @parameter3: float;

        $f5 := @parameter4: float;

        $f2 := @parameter5: float;

        $f6 = staticinvoke <com.google.android.material.math.MathUtils: float dist(float,float,float,float)>($f3, $f0, $f1, $f4);

        $f4 = staticinvoke <com.google.android.material.math.MathUtils: float dist(float,float,float,float)>($f3, $f0, $f5, $f4);

        $f5 = staticinvoke <com.google.android.material.math.MathUtils: float dist(float,float,float,float)>($f3, $f0, $f5, $f2);

        $f3 = staticinvoke <com.google.android.material.math.MathUtils: float dist(float,float,float,float)>($f3, $f0, $f1, $f2);

        $f3 = staticinvoke <com.google.android.material.math.MathUtils: float max(float,float,float,float)>($f6, $f4, $f5, $f3);

        return $f3;
    }

    public static float floorMod(float, int)
    {
        byte $b2;
        int $i0, $i1, $i3;
        float $f0, $f1, $f2;

        $f1 := @parameter0: float;

        $i0 := @parameter1: int;

        $f2 = (float) $i0;

        $f0 = $f1 / $f2;

        $i1 = (int) $f0;

        $f0 = staticinvoke <java.lang.Math: float signum(float)>($f1);

        $f2 = $f0 * $f2;

        $b2 = $f2 cmpg 0.0F;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $i3 = $i1 * $i0;

        $f2 = (float) $i3;

        $b2 = $f2 cmpl $f1;

        if $b2 == 0 goto label1;

        $i3 = -1;

        $i1 = $i1 + $i3;

     label1:
        $i0 = $i1 * $i0;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        return $f1;
    }

    public static int floorMod(int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i1 / $i0;

        $i3 = $i1 ^ $i0;

        if $i3 >= 0 goto label1;

        $i3 = $i2 * $i0;

        if $i3 == $i1 goto label1;

        $i3 = -1;

        $i2 = $i2 + $i3;

     label1:
        $i0 = $i2 * $i0;

        $i1 = $i1 - $i0;

        return $i1;
    }

    public static boolean geq(float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2;

        $f2 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 = $f2 + $f1;

        $b0 = $f2 cmpl $f0;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static float lerp(float, float, float)
    {
        float $f0, $f1, $f2, $f3;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 = 1.0F - $f2;

        $f0 = $f3 * $f0;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

        return $f0;
    }

    public static float max(float, float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3;

        $f3 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $b0 = $f3 cmpl $f0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $b0 = $f3 cmpl $f1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $b0 = $f3 cmpl $f2;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        return $f3;

     label1:
        $b0 = $f0 cmpl $f1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $b0 = $f0 cmpl $f2;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return $f0;

     label2:
        $b0 = $f1 cmpl $f2;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label3;

        return $f1;

     label3:
        return $f2;
    }

    public static void <clinit>()
    {
        <com.google.android.material.math.MathUtils: float DEFAULT_EPSILON> = 1.0E-4F;

        return;
    }
}
