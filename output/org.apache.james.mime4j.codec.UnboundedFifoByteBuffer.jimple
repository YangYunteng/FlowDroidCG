public class org.apache.james.mime4j.codec.UnboundedFifoByteBuffer extends java.lang.Object
{
    public byte[] buffer;
    public int head;
    public int tail;

    public void <init>()
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        specialinvoke r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: void <init>(int)>(32);

        return;
    }

    public void <init>(int)
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 <= 0 goto label1;

        $i0 = $i0 + 1;

        $r1 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer> = $r1;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head> = 0;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail> = 0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The size must be greater than 0");

        throw $r2;
    }

    public static int access$000(org.apache.james.mime4j.codec.UnboundedFifoByteBuffer, int)
    {
        int $i0;
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer $r0;

        $r0 := @parameter0: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 := @parameter1: int;

        $i0 = specialinvoke $r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int increment(int)>($i0);

        return $i0;
    }

    public static int access$100(org.apache.james.mime4j.codec.UnboundedFifoByteBuffer, int)
    {
        int $i0;
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer $r0;

        $r0 := @parameter0: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 := @parameter1: int;

        $i0 = specialinvoke $r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int decrement(int)>($i0);

        return $i0;
    }

    private int decrement(int)
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 := @parameter0: int;

        $i1 = -1;

        $i0 = $i0 + $i1;

        if $i0 >= 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        return $i0;
    }

    private int increment(int)
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        return $i0;
    }

    public boolean add(byte)
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1, $r2;
        byte $b0, $b2;
        int $i1, $i3, $i4;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $b2 := @parameter0: byte;

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int size()>();

        $i1 = $i1 + 1;

        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i3 = lengthof $r1;

        if $i1 < $i3 goto label3;

        $i1 = lengthof $r1;

        $i1 = $i1 - 1;

        $i1 = $i1 * 2;

        $i1 = $i1 + 1;

        $r1 = newarray (byte)[$i1];

        $i1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head>;

        $i3 = 0;

     label1:
        $i4 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail>;

        if $i1 == $i4 goto label2;

        $r2 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $b0 = $r2[$i1];

        $r1[$i3] = $b0;

        $r2[$i1] = 0;

        $i3 = $i3 + 1;

        $i1 = $i1 + 1;

        $i4 = lengthof $r2;

        if $i1 != $i4 goto label1;

        $i1 = 0;

        goto label1;

     label2:
        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer> = $r1;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head> = 0;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail> = $i3;

     label3:
        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail>;

        $r1[$i1] = $b2;

        $i1 = $i1 + 1;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail> = $i1;

        $i1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail>;

        $i3 = lengthof $r1;

        if $i1 < $i3 goto label4;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail> = 0;

     label4:
        return 1;
    }

    public byte get()
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1;
        java.lang.IllegalStateException $r2;
        byte $b1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i0 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head>;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The buffer is already empty");

        throw $r2;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int size()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer$1 $r1;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $r1 = new org.apache.james.mime4j.codec.UnboundedFifoByteBuffer$1;

        specialinvoke $r1.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer$1: void <init>(org.apache.james.mime4j.codec.UnboundedFifoByteBuffer)>(r0);

        return $r1;
    }

    public byte remove()
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1;
        java.lang.IllegalStateException $r2;
        byte $b0;
        int $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head>;

        $b0 = $r1[$i1];

        $i1 = $i1 + 1;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head> = $i1;

        $i1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label2;

        r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head> = 0;

        return $b0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The buffer is already empty");

        throw $r2;

     label2:
        return $b0;
    }

    public int size()
    {
        org.apache.james.mime4j.codec.UnboundedFifoByteBuffer r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.james.mime4j.codec.UnboundedFifoByteBuffer;

        $i0 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int tail>;

        $i1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: int head>;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<org.apache.james.mime4j.codec.UnboundedFifoByteBuffer: byte[] buffer>;

        $i2 = lengthof $r1;

        $i1 = $i2 - $i1;

        $i0 = $i1 + $i0;

        return $i0;

     label1:
        $i0 = $i0 - $i1;

        return $i0;
    }
}
