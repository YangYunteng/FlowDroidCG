public final class com.google.common.reflect.TypeToken$TypeCollector$2 extends com.google.common.reflect.TypeToken$TypeCollector
{

    public void <init>()
    {
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        specialinvoke r0.<com.google.common.reflect.TypeToken$TypeCollector: void <init>(com.google.common.reflect.TypeToken$1)>(null);

        return;
    }

    public java.lang.Iterable getInterfaces(java.lang.Class)
    {
        java.util.List $r3;
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;
        java.lang.Class[] $r2;
        java.lang.Class $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        $r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r3;
    }

    public volatile java.lang.Iterable getInterfaces(java.lang.Object)
    {
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;
        java.lang.Object $r2;
        java.lang.Class $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.lang.Class) $r2;

        $r1 = virtualinvoke r0.<com.google.common.reflect.TypeToken$TypeCollector$2: java.lang.Iterable getInterfaces(java.lang.Class)>($r3);

        return $r1;
    }

    public java.lang.Class getRawType(java.lang.Class)
    {
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;
        java.lang.Class $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        $r1 := @parameter0: java.lang.Class;

        return $r1;
    }

    public volatile java.lang.Class getRawType(java.lang.Object)
    {
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;
        java.lang.Class $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (java.lang.Class) $r2;

        $r1 = virtualinvoke r0.<com.google.common.reflect.TypeToken$TypeCollector$2: java.lang.Class getRawType(java.lang.Class)>($r1);

        return $r1;
    }

    public java.lang.Class getSuperclass(java.lang.Class)
    {
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;
        java.lang.Class $r1;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        $r1 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        return $r1;
    }

    public volatile java.lang.Object getSuperclass(java.lang.Object)
    {
        com.google.common.reflect.TypeToken$TypeCollector$2 r0;
        java.lang.Class $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.reflect.TypeToken$TypeCollector$2;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (java.lang.Class) $r2;

        $r1 = virtualinvoke r0.<com.google.common.reflect.TypeToken$TypeCollector$2: java.lang.Class getSuperclass(java.lang.Class)>($r1);

        return $r1;
    }
}
