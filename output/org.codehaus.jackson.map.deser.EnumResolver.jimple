public final class org.codehaus.jackson.map.deser.EnumResolver extends java.lang.Object
{
    public final java.lang.Class _enumClass;
    public final java.lang.Enum[] _enums;
    public final java.util.HashMap _enumsById;

    public void <init>(java.lang.Class, java.lang.Enum[], java.util.HashMap)
    {
        java.lang.Enum[] $r2;
        java.lang.Class $r1;
        java.util.HashMap $r3;
        org.codehaus.jackson.map.deser.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.deser.EnumResolver;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.Enum[];

        $r3 := @parameter2: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Class _enumClass> = $r1;

        r0.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Enum[] _enums> = $r2;

        r0.<org.codehaus.jackson.map.deser.EnumResolver: java.util.HashMap _enumsById> = $r3;

        return;
    }

    public static org.codehaus.jackson.map.deser.EnumResolver constructFor(java.lang.Class, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        java.lang.Object[] $r3;
        java.util.HashMap $r5;
        java.lang.IllegalArgumentException $r8;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        java.lang.Enum $r0;
        int $i0, $i1;
        java.lang.Enum[] $r4;
        java.lang.Class $r1;
        java.lang.StringBuilder $r9;
        java.lang.String $r6;
        org.codehaus.jackson.map.deser.EnumResolver $r7;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r4 = (java.lang.Enum[]) $r3;

        if $r4 == null goto label3;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r0 = $r4[$i1];

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>($r0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r7 = new org.codehaus.jackson.map.deser.EnumResolver;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)>($r1, $r4, $r5);

        return $r7;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No enum constants for class ");

        $r6 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        goto label4;

     label4:
        throw $r8;
    }

    public static org.codehaus.jackson.map.deser.EnumResolver constructUnsafe(java.lang.Class, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        java.lang.Class $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r0;
        org.codehaus.jackson.map.deser.EnumResolver $r1;

        $r2 := @parameter0: java.lang.Class;

        $r0 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 = staticinvoke <org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>($r2, $r0);

        return $r1;
    }

    public static org.codehaus.jackson.map.deser.EnumResolver constructUnsafeUsingToString(java.lang.Class)
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.deser.EnumResolver $r0;

        $r1 := @parameter0: java.lang.Class;

        $r0 = staticinvoke <org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructUsingToString(java.lang.Class)>($r1);

        return $r0;
    }

    public static org.codehaus.jackson.map.deser.EnumResolver constructUsingToString(java.lang.Class)
    {
        java.lang.Object[] $r3;
        java.util.HashMap $r1, $r6;
        java.lang.Enum $r2;
        int $i0, $i1;
        java.lang.Enum[] $r4;
        java.lang.Class $r0;
        java.lang.String $r5;
        org.codehaus.jackson.map.deser.EnumResolver $r7;

        $r0 := @parameter0: java.lang.Class;

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r4 = (java.lang.Enum[]) $r3;

        $r6 = new java.util.HashMap;

        $r1 = $r6;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $i0 = lengthof $r4;

     label1:
        $i1 = -1;

        $i0 = $i0 + $i1;

        if $i0 < 0 goto label2;

        $r2 = $r4[$i0];

        $r5 = virtualinvoke $r2.<java.lang.Enum: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r2);

        goto label1;

     label2:
        $r7 = new org.codehaus.jackson.map.deser.EnumResolver;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)>($r0, $r4, $r1);

        return $r7;
    }

    public java.lang.Enum findEnum(java.lang.String)
    {
        java.lang.Enum $r4;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.deser.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.deser.EnumResolver;

        $r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.map.deser.EnumResolver: java.util.HashMap _enumsById>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (java.lang.Enum) $r2;

        return $r4;
    }

    public java.lang.Enum getEnum(int)
    {
        java.lang.Enum $r2;
        int $i0, $i1;
        java.lang.Enum[] $r1;
        org.codehaus.jackson.map.deser.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.deser.EnumResolver;

        $i1 := @parameter0: int;

        if $i1 < 0 goto label2;

        $r1 = r0.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Enum[] _enums>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        goto label2;

     label1:
        $r2 = $r1[$i1];

        return $r2;

     label2:
        return null;
    }

    public java.lang.Class getEnumClass()
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.deser.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.deser.EnumResolver;

        r1 = r0.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Class _enumClass>;

        return r1;
    }

    public int lastValidIndex()
    {
        int $i0, $i1;
        java.lang.Enum[] $r1;
        org.codehaus.jackson.map.deser.EnumResolver r0;

        r0 := @this: org.codehaus.jackson.map.deser.EnumResolver;

        $r1 = r0.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Enum[] _enums>;

        $i0 = lengthof $r1;

        $i1 = -1;

        $i0 = $i0 + $i1;

        return $i0;
    }
}
