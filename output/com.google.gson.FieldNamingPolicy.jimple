public abstract enum class com.google.gson.FieldNamingPolicy extends java.lang.Enum implements com.google.gson.FieldNamingStrategy
{
    public static final com.google.gson.FieldNamingPolicy[] $VALUES;
    public static final enum com.google.gson.FieldNamingPolicy IDENTITY;
    public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES;
    public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS;
    public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES;
    public static final enum com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE;
    public static final enum com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES;

    static void <clinit>()
    {
        com.google.gson.FieldNamingPolicy[] $r6;
        com.google.gson.FieldNamingPolicy$4 $r3;
        com.google.gson.FieldNamingPolicy$3 $r2;
        com.google.gson.FieldNamingPolicy$6 $r5;
        com.google.gson.FieldNamingPolicy $r7;
        com.google.gson.FieldNamingPolicy$5 $r4;
        com.google.gson.FieldNamingPolicy$2 $r1;
        com.google.gson.FieldNamingPolicy$1 $r0;

        $r0 = new com.google.gson.FieldNamingPolicy$1;

        specialinvoke $r0.<com.google.gson.FieldNamingPolicy$1: void <init>(java.lang.String,int)>("IDENTITY", 0);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY> = $r0;

        $r1 = new com.google.gson.FieldNamingPolicy$2;

        specialinvoke $r1.<com.google.gson.FieldNamingPolicy$2: void <init>(java.lang.String,int)>("UPPER_CAMEL_CASE", 1);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE> = $r1;

        $r2 = new com.google.gson.FieldNamingPolicy$3;

        specialinvoke $r2.<com.google.gson.FieldNamingPolicy$3: void <init>(java.lang.String,int)>("UPPER_CAMEL_CASE_WITH_SPACES", 2);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES> = $r2;

        $r3 = new com.google.gson.FieldNamingPolicy$4;

        specialinvoke $r3.<com.google.gson.FieldNamingPolicy$4: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_UNDERSCORES", 3);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES> = $r3;

        $r4 = new com.google.gson.FieldNamingPolicy$5;

        specialinvoke $r4.<com.google.gson.FieldNamingPolicy$5: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_DASHES", 4);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES> = $r4;

        $r5 = new com.google.gson.FieldNamingPolicy$6;

        specialinvoke $r5.<com.google.gson.FieldNamingPolicy$6: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_DOTS", 5);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS> = $r5;

        $r6 = newarray (com.google.gson.FieldNamingPolicy)[6];

        $r7 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY>;

        $r6[0] = $r7;

        $r7 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE>;

        $r6[1] = $r7;

        $r7 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES>;

        $r6[2] = $r7;

        $r7 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES>;

        $r6[3] = $r7;

        $r7 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES>;

        $r6[4] = $r7;

        $r7 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS>;

        $r6[5] = $r7;

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES> = $r6;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.gson.FieldNamingPolicy r0;
        java.lang.String $r1;

        r0 := @this: com.google.gson.FieldNamingPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public void <init>(java.lang.String, int, com.google.gson.FieldNamingPolicy$1)
    {
        com.google.gson.FieldNamingPolicy r0;
        int $i0;
        java.lang.String $r1;
        com.google.gson.FieldNamingPolicy$1 $r2;

        r0 := @this: com.google.gson.FieldNamingPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.gson.FieldNamingPolicy$1;

        specialinvoke r0.<com.google.gson.FieldNamingPolicy: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static java.lang.String modifyString(char, java.lang.String, int)
    {
        int $i0, $i2;
        char $c1;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $c1 := @parameter0: char;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        return $r0;
    }

    public static java.lang.String separateCamelCase(java.lang.String, java.lang.String)
    {
        char $c2;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c2);

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i3 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String upperCaseFirstLetter(java.lang.String)
    {
        char $c1;
        int $i0, $i2, $i3;
        java.lang.StringBuilder $r0, $r2;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        $r0 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        $i3 = -1;

        $i3 = $i2 + $i3;

        if $i0 >= $i3 goto label3;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $i0 = $i0 + 1;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        goto label1;

     label3:
        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c1);

        if $z0 != 0 goto label4;

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $i0 = $i0 + 1;

        $r1 = staticinvoke <com.google.gson.FieldNamingPolicy: java.lang.String modifyString(char,java.lang.String,int)>($c1, $r1, $i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r1;
    }

    public static com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
    {
        com.google.gson.FieldNamingPolicy $r2;
        java.lang.String $r1;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/gson/FieldNamingPolicy;", $r1);

        $r2 = (com.google.gson.FieldNamingPolicy) $r0;

        return $r2;
    }

    public static com.google.gson.FieldNamingPolicy[] values()
    {
        java.lang.Object $r0;
        com.google.gson.FieldNamingPolicy[] $r1;

        $r1 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.gson.FieldNamingPolicy[]) $r0;

        return $r1;
    }
}
