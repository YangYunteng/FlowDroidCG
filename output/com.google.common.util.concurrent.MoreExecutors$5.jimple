public final class com.google.common.util.concurrent.MoreExecutors$5 extends java.lang.Object implements java.util.concurrent.Executor
{
    public boolean thrownFromDelegate;
    public final java.util.concurrent.Executor val$delegate;
    public final com.google.common.util.concurrent.AbstractFuture val$future;

    public void <init>(java.util.concurrent.Executor, com.google.common.util.concurrent.AbstractFuture)
    {
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AbstractFuture $r1;
        com.google.common.util.concurrent.MoreExecutors$5 r0;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$5;

        $r2 := @parameter0: java.util.concurrent.Executor;

        $r1 := @parameter1: com.google.common.util.concurrent.AbstractFuture;

        r0.<com.google.common.util.concurrent.MoreExecutors$5: java.util.concurrent.Executor val$delegate> = $r2;

        r0.<com.google.common.util.concurrent.MoreExecutors$5: com.google.common.util.concurrent.AbstractFuture val$future> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.MoreExecutors$5: boolean thrownFromDelegate> = 1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        java.util.concurrent.RejectedExecutionException $r4;
        java.util.concurrent.Executor $r3;
        com.google.common.util.concurrent.MoreExecutors$5 r0;
        com.google.common.util.concurrent.MoreExecutors$5$1 $r1;
        java.lang.Runnable $r2;
        com.google.common.util.concurrent.AbstractFuture $r5;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.MoreExecutors$5;

        $r2 := @parameter0: java.lang.Runnable;

        $r3 = r0.<com.google.common.util.concurrent.MoreExecutors$5: java.util.concurrent.Executor val$delegate>;

        $r1 = new com.google.common.util.concurrent.MoreExecutors$5$1;

     label1:
        specialinvoke $r1.<com.google.common.util.concurrent.MoreExecutors$5$1: void <init>(com.google.common.util.concurrent.MoreExecutors$5,java.lang.Runnable)>(r0, $r2);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $z0 = r0.<com.google.common.util.concurrent.MoreExecutors$5: boolean thrownFromDelegate>;

        if $z0 == 0 goto label4;

        $r5 = r0.<com.google.common.util.concurrent.MoreExecutors$5: com.google.common.util.concurrent.AbstractFuture val$future>;

        virtualinvoke $r5.<com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)>($r4);

     label4:
        return;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }
}
