public final class com.google.common.util.concurrent.FakeTimeLimiter extends java.lang.Object implements com.google.common.util.concurrent.TimeLimiter
{

    public void <init>()
    {
        com.google.common.util.concurrent.FakeTimeLimiter r0;

        r0 := @this: com.google.common.util.concurrent.FakeTimeLimiter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object callUninterruptiblyWithTimeout(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.FakeTimeLimiter r0;
        long $l0;
        java.lang.Object $r2;
        java.util.concurrent.Callable $r3;

        r0 := @this: com.google.common.util.concurrent.FakeTimeLimiter;

        $r3 := @parameter0: java.util.concurrent.Callable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.FakeTimeLimiter: java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r3, $l0, $r1);

        return $r2;
    }

    public java.lang.Object callWithTimeout(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
    {
        java.lang.Throwable $r4;
        java.lang.Error $r6;
        java.util.concurrent.Callable $r3;
        long $l0;
        com.google.common.util.concurrent.ExecutionError $r7;
        java.lang.RuntimeException $r9;
        java.lang.Exception $r8;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ExecutionException $r5;
        com.google.common.util.concurrent.FakeTimeLimiter r0;
        com.google.common.util.concurrent.UncheckedExecutionException $r10;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.FakeTimeLimiter;

        $r3 := @parameter0: java.util.concurrent.Callable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

     label1:
        $r2 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.util.concurrent.ExecutionException;

        specialinvoke $r5.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = new com.google.common.util.concurrent.ExecutionError;

        specialinvoke $r7.<com.google.common.util.concurrent.ExecutionError: void <init>(java.lang.Error)>($r6);

        throw $r7;

     label5:
        $r8 := @caughtexception;

        $r5 = new java.util.concurrent.ExecutionException;

        specialinvoke $r5.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r8);

        throw $r5;

     label6:
        $r9 := @caughtexception;

        $r10 = new com.google.common.util.concurrent.UncheckedExecutionException;

        specialinvoke $r10.<com.google.common.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label6;
        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Error from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object newProxy(java.lang.Object, java.lang.Class, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r3;
        com.google.common.util.concurrent.FakeTimeLimiter r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        long $l0;

        r0 := @this: com.google.common.util.concurrent.FakeTimeLimiter;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Class;

        $l0 := @parameter2: long;

        $r3 := @parameter3: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        return $r1;
    }

    public void runUninterruptiblyWithTimeout(java.lang.Runnable, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2;
        com.google.common.util.concurrent.FakeTimeLimiter r0;
        long $l0;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.FakeTimeLimiter;

        $r1 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        virtualinvoke r0.<com.google.common.util.concurrent.FakeTimeLimiter: void runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r1, $l0, $r2);

        return;
    }

    public void runWithTimeout(java.lang.Runnable, long, java.util.concurrent.TimeUnit)
    {
        java.lang.Throwable $r3;
        java.lang.Error $r5;
        long $l0;
        com.google.common.util.concurrent.ExecutionError $r6;
        java.lang.RuntimeException $r7;
        java.lang.Runnable $r2;
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.FakeTimeLimiter r0;
        com.google.common.util.concurrent.UncheckedExecutionException $r4;

        r0 := @this: com.google.common.util.concurrent.FakeTimeLimiter;

        $r2 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

     label1:
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.google.common.util.concurrent.UncheckedExecutionException;

        specialinvoke $r4.<com.google.common.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new com.google.common.util.concurrent.ExecutionError;

        specialinvoke $r6.<com.google.common.util.concurrent.ExecutionError: void <init>(java.lang.Error)>($r5);

        throw $r6;

     label5:
        $r7 := @caughtexception;

        $r4 = new com.google.common.util.concurrent.UncheckedExecutionException;

        specialinvoke $r4.<com.google.common.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>($r7);

        throw $r4;

        catch java.lang.RuntimeException from label1 to label2 with label5;
        catch java.lang.Error from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
