public class b.i.b.a.c extends java.lang.Object
{

    public static int a(android.content.res.TypedArray, int)
    {
        android.util.TypedValue $r1;
        int $i0, $i1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getType(int)>($i0);

        return $i0;

     label1:
        $r1 = new android.util.TypedValue;

        specialinvoke $r1.<android.util.TypedValue: void <init>()>();

        virtualinvoke $r0.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r1);

        $i0 = $r1.<android.util.TypedValue: int type>;

        return $i0;
    }

    public static b.i.b.a.c$a a(org.xmlpull.v1.XmlPullParser, android.content.res.Resources)
    {
        org.xmlpull.v1.XmlPullParserException $r3;
        b.i.b.a.c$a $r2;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: android.content.res.Resources;

     label1:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label2;

        if $i0 == 1 goto label2;

        goto label1;

     label2:
        if $i0 != 2 goto label3;

        $r2 = staticinvoke <b.i.b.a.c: b.i.b.a.c$a b(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>($r0, $r1);

        return $r2;

     label3:
        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        goto label4;

     label4:
        throw $r3;
    }

    public static java.util.List a(android.content.res.Resources, int)
    {
        java.lang.Throwable $r5;
        java.lang.String[] $r4;
        android.content.res.TypedArray $r2;
        java.util.ArrayList $r3;
        java.util.List $r1;
        int $i0, $i1;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        if $i0 != 0 goto label01;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;

     label01:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>($i0);

     label02:
        $i1 = virtualinvoke $r2.<android.content.res.TypedArray: int length()>();

     label03:
        if $i1 != 0 goto label06;

     label04:
        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label05:
        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();

        return $r1;

     label06:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i1 = staticinvoke <b.i.b.a.c: int a(android.content.res.TypedArray,int)>($r2, 0);

     label07:
        if $i1 != 1 goto label14;

        $i0 = 0;

     label08:
        $i1 = virtualinvoke $r2.<android.content.res.TypedArray: int length()>();

     label09:
        if $i0 >= $i1 goto label15;

     label10:
        $i1 = virtualinvoke $r2.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

     label11:
        if $i1 == 0 goto label13;

     label12:
        $r4 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i1);

        $r1 = staticinvoke <b.i.b.a.c: java.util.List a(java.lang.String[])>($r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label13:
        $i0 = $i0 + 1;

        goto label08;

     label14:
        $r4 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        $r1 = staticinvoke <b.i.b.a.c: java.util.List a(java.lang.String[])>($r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label15:
        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();

        return $r3;

     label16:
        $r5 := @caughtexception;

        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();

        goto label17;

     label17:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    public static java.util.List a(java.lang.String[])
    {
        byte[] $r2;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r3;
        java.util.ArrayList $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r3, 0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static void a(org.xmlpull.v1.XmlPullParser)
    {
        int $i0, $i1;
        org.xmlpull.v1.XmlPullParser $r0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i1 = 1;

     label1:
        if $i1 <= 0 goto label4;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label3;

        if $i0 == 3 goto label2;

        goto label1;

     label2:
        $i0 = -1;

        $i1 = $i1 + $i0;

        goto label1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static b.i.b.a.c$a b(org.xmlpull.v1.XmlPullParser, android.content.res.Resources)
    {
        b.i.b.a.c$a $r3;
        java.lang.String $r2;
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter1: android.content.res.Resources;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "font-family");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("font-family");

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <b.i.b.a.c: b.i.b.a.c$a c(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>($r1, $r0);

        return $r3;

     label1:
        staticinvoke <b.i.b.a.c: void a(org.xmlpull.v1.XmlPullParser)>($r1);

        return null;
    }

    public static b.i.b.a.c$a c(org.xmlpull.v1.XmlPullParser, android.content.res.Resources)
    {
        java.lang.Object[] $r15;
        android.content.res.TypedArray $r4;
        java.util.ArrayList $r11;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r6, $r7;
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0;
        b.i.b.a.c$b $r13;
        b.i.b.a.c$d $r9;
        b.i.b.a.c$c $r12;
        java.util.List $r8;
        b.i.f.a $r10;
        b.i.b.a.c$c[] $r14;
        android.content.res.Resources $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r0);

        $r3 = <b.i.d: int[] FontFamily>;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <b.i.d: int FontFamily_fontProviderAuthority>;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $i0 = <b.i.d: int FontFamily_fontProviderPackage>;

        $r6 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $i0 = <b.i.d: int FontFamily_fontProviderQuery>;

        $r7 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $i0 = <b.i.d: int FontFamily_fontProviderCerts>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        $i1 = <b.i.d: int FontFamily_fontProviderFetchStrategy>;

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>($i1, 1);

        $i2 = <b.i.d: int FontFamily_fontProviderFetchTimeout>;

        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>($i2, 500);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        if $r5 == null goto label3;

        if $r6 == null goto label3;

        if $r7 == null goto label3;

     label1:
        $i3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 3 goto label2;

        staticinvoke <b.i.b.a.c: void a(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label2:
        $r8 = staticinvoke <b.i.b.a.c: java.util.List a(android.content.res.Resources,int)>($r1, $i0);

        $r9 = new b.i.b.a.c$d;

        $r10 = new b.i.f.a;

        specialinvoke $r10.<b.i.f.a: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List)>($r5, $r6, $r7, $r8);

        specialinvoke $r9.<b.i.b.a.c$d: void <init>(b.i.f.a,int,int)>($r10, $i1, $i2);

        return $r9;

     label3:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

     label4:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 3 goto label7;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label5;

        goto label4;

     label5:
        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("font");

        if $z0 == 0 goto label6;

        $r12 = staticinvoke <b.i.b.a.c: b.i.b.a.c$c d(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>($r0, $r1);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label4;

     label6:
        staticinvoke <b.i.b.a.c: void a(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label4;

     label7:
        $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        return null;

     label8:
        $r13 = new b.i.b.a.c$b;

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r14 = newarray (b.i.b.a.c$c)[$i0];

        $r15 = interfaceinvoke $r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r14 = (b.i.b.a.c$c[]) $r15;

        specialinvoke $r13.<b.i.b.a.c$b: void <init>(b.i.b.a.c$c[])>($r14);

        return $r13;
    }

    public static b.i.b.a.c$c d(org.xmlpull.v1.XmlPullParser, android.content.res.Resources)
    {
        b.i.b.a.c$c $r7;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r6;
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources $r1;
        boolean $z0, $z1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r0);

        $r3 = <b.i.d: int[] FontFamilyFont>;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <b.i.d: int FontFamilyFont_fontWeight>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label01;

        $i0 = <b.i.d: int FontFamilyFont_fontWeight>;

        goto label02;

     label01:
        $i0 = <b.i.d: int FontFamilyFont_android_fontWeight>;

     label02:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 400);

        $i1 = <b.i.d: int FontFamilyFont_fontStyle>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label03;

        $i1 = <b.i.d: int FontFamilyFont_fontStyle>;

        goto label04;

     label03:
        $i1 = <b.i.d: int FontFamilyFont_android_fontStyle>;

     label04:
        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i1, 0);

        if 1 != $i1 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        $i1 = <b.i.d: int FontFamilyFont_ttcIndex>;

        $z1 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z1 == 0 goto label07;

        $i1 = <b.i.d: int FontFamilyFont_ttcIndex>;

        goto label08;

     label07:
        $i1 = <b.i.d: int FontFamilyFont_android_ttcIndex>;

     label08:
        $i2 = <b.i.d: int FontFamilyFont_fontVariationSettings>;

        $z1 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i2);

        if $z1 == 0 goto label09;

        $i2 = <b.i.d: int FontFamilyFont_fontVariationSettings>;

        goto label10;

     label09:
        $i2 = <b.i.d: int FontFamilyFont_android_fontVariationSettings>;

     label10:
        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i2);

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i1, 0);

        $i2 = <b.i.d: int FontFamilyFont_font>;

        $z1 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i2);

        if $z1 == 0 goto label11;

        $i3 = <b.i.d: int FontFamilyFont_font>;

        goto label12;

     label11:
        $i3 = <b.i.d: int FontFamilyFont_android_font>;

     label12:
        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i3, 0);

        $r6 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i3);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

     label13:
        $i3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 3 goto label14;

        staticinvoke <b.i.b.a.c: void a(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label13;

     label14:
        $r7 = new b.i.b.a.c$c;

        specialinvoke $r7.<b.i.b.a.c$c: void <init>(java.lang.String,int,boolean,java.lang.String,int,int)>($r6, $i0, $z0, $r5, $i1, $i2);

        return $r7;
    }
}
