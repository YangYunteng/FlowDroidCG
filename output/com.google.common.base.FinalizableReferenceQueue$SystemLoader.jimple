public class com.google.common.base.FinalizableReferenceQueue$SystemLoader extends java.lang.Object implements com.google.common.base.FinalizableReferenceQueue$FinalizerLoader
{
    public static boolean disabled;

    public void <init>()
    {
        com.google.common.base.FinalizableReferenceQueue$SystemLoader r0;

        r0 := @this: com.google.common.base.FinalizableReferenceQueue$SystemLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Class loadFinalizer()
    {
        java.lang.SecurityException $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.Class $r4;
        java.lang.ClassLoader $r3;
        com.google.common.base.FinalizableReferenceQueue$SystemLoader r0;
        java.util.logging.Logger $r5;
        boolean $z0;

        r0 := @this: com.google.common.base.FinalizableReferenceQueue$SystemLoader;

        $z0 = <com.google.common.base.FinalizableReferenceQueue$SystemLoader: boolean disabled>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label2:
        if $r3 == null goto label5;

     label3:
        $r4 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.google.common.base.internal.Finalizer");

     label4:
        return $r4;

     label5:
        return null;

     label6:
        $r5 = staticinvoke <com.google.common.base.FinalizableReferenceQueue: java.util.logging.Logger access$000()>();

        virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>("Not allowed to access system class loader.");

        return null;

     label7:
        $r1 := @caughtexception;

        goto label6;

     label8:
        $r2 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label1 to label2 with label7;
        catch java.lang.ClassNotFoundException from label3 to label4 with label8;
    }
}
