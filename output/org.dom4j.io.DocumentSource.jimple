public class org.dom4j.io.DocumentSource extends javax.xml.transform.sax.SAXSource
{
    public static final java.lang.String DOM4J_FEATURE;
    public org.xml.sax.XMLReader xmlReader;

    public void <init>(org.dom4j.Document)
    {
        org.dom4j.io.SAXWriter $r2;
        org.dom4j.Document $r1;
        org.dom4j.io.DocumentSource r0;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 := @parameter0: org.dom4j.Document;

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void <init>()>();

        $r2 = new org.dom4j.io.SAXWriter;

        specialinvoke $r2.<org.dom4j.io.SAXWriter: void <init>()>();

        r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r2;

        virtualinvoke r0.<org.dom4j.io.DocumentSource: void setDocument(org.dom4j.Document)>($r1);

        return;
    }

    public void <init>(org.dom4j.Node)
    {
        org.dom4j.Document $r2;
        org.dom4j.io.DocumentSource r0;
        org.dom4j.Node $r3;
        org.dom4j.io.SAXWriter $r1;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r3 := @parameter0: org.dom4j.Node;

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void <init>()>();

        $r1 = new org.dom4j.io.SAXWriter;

        specialinvoke $r1.<org.dom4j.io.SAXWriter: void <init>()>();

        r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r1;

        $r2 = interfaceinvoke $r3.<org.dom4j.Node: org.dom4j.Document getDocument()>();

        virtualinvoke r0.<org.dom4j.io.DocumentSource: void setDocument(org.dom4j.Document)>($r2);

        return;
    }

    public org.dom4j.Document getDocument()
    {
        org.xml.sax.InputSource $r1;
        org.dom4j.Document $r3;
        org.dom4j.io.DocumentSource r0;
        org.dom4j.io.DocumentInputSource $r2;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 = virtualinvoke r0.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        $r2 = (org.dom4j.io.DocumentInputSource) $r1;

        $r3 = virtualinvoke $r2.<org.dom4j.io.DocumentInputSource: org.dom4j.Document getDocument()>();

        return $r3;
    }

    public org.xml.sax.XMLReader getXMLReader()
    {
        org.xml.sax.XMLReader r1;
        org.dom4j.io.DocumentSource r0;

        r0 := @this: org.dom4j.io.DocumentSource;

        r1 = r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader>;

        return r1;
    }

    public void setDocument(org.dom4j.Document)
    {
        org.dom4j.io.DocumentInputSource $r2;
        org.dom4j.Document $r1;
        org.dom4j.io.DocumentSource r0;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 := @parameter0: org.dom4j.Document;

        $r2 = new org.dom4j.io.DocumentInputSource;

        specialinvoke $r2.<org.dom4j.io.DocumentInputSource: void <init>(org.dom4j.Document)>($r1);

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void setInputSource(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void setInputSource(org.xml.sax.InputSource)
    {
        org.xml.sax.InputSource $r1;
        java.lang.UnsupportedOperationException $r3;
        org.dom4j.io.DocumentSource r0;
        org.dom4j.io.DocumentInputSource $r2;
        boolean $z0;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 := @parameter0: org.xml.sax.InputSource;

        $z0 = $r1 instanceof org.dom4j.io.DocumentInputSource;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.io.DocumentInputSource) $r1;

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void setInputSource(org.xml.sax.InputSource)>($r2);

        return;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void setXMLReader(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader $r1;
        java.lang.UnsupportedOperationException $r4;
        org.xml.sax.XMLFilter $r3;
        org.dom4j.io.DocumentSource r0;
        org.dom4j.io.SAXWriter $r2;
        boolean $z0;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        $z0 = $r1 instanceof org.dom4j.io.SAXWriter;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.io.SAXWriter) $r1;

        r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r2;

        return;

     label1:
        $z0 = $r1 instanceof org.xml.sax.XMLFilter;

        if $z0 == 0 goto label4;

        $r3 = (org.xml.sax.XMLFilter) $r1;

     label2:
        $r1 = interfaceinvoke $r3.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        $z0 = $r1 instanceof org.xml.sax.XMLFilter;

        if $z0 == 0 goto label3;

        $r3 = (org.xml.sax.XMLFilter) $r1;

        goto label2;

     label3:
        $r1 = r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r3.<org.xml.sax.XMLFilter: void setParent(org.xml.sax.XMLReader)>($r1);

        r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r3;

        return;

     label4:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        goto label5;

     label5:
        throw $r4;
    }

    public static void <clinit>()
    {
        <org.dom4j.io.DocumentSource: java.lang.String DOM4J_FEATURE> = "http://org.dom4j.io.DoucmentSource/feature";

        return;
    }
}
