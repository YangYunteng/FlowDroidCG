public class com.google.common.collect.SingletonImmutableTable extends com.google.common.collect.ImmutableTable
{
    public final java.lang.Object singleColumnKey;
    public final java.lang.Object singleRowKey;
    public final java.lang.Object singleValue;

    public void <init>(com.google.common.collect.Table$Cell)
    {
        com.google.common.collect.Table$Cell $r1;
        java.lang.Object $r2, $r3, $r4;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 := @parameter0: com.google.common.collect.Table$Cell;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r3 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r4 = interfaceinvoke $r1.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        specialinvoke r0.<com.google.common.collect.SingletonImmutableTable: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        return;
    }

    public void <init>(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.ImmutableTable: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleRowKey> = $r1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleColumnKey> = $r2;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleValue> = $r3;

        return;
    }

    public com.google.common.collect.ImmutableMap column(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.SingletonImmutableTable r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: boolean containsColumn(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleRowKey>;

        $r1 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleValue>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r3;

     label1:
        $r3 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r3;
    }

    public volatile java.util.Map column(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.SingletonImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.SingletonImmutableTable: com.google.common.collect.ImmutableMap column(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableMap columnMap()
    {
        com.google.common.collect.ImmutableMap $r4;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r2 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleColumnKey>;

        $r3 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleRowKey>;

        $r1 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleValue>;

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r3, $r1);

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $r4;
    }

    public volatile java.util.Map columnMap()
    {
        com.google.common.collect.SingletonImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.SingletonImmutableTable: com.google.common.collect.ImmutableMap columnMap()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet createCellSet()
    {
        com.google.common.collect.ImmutableSet $r5;
        com.google.common.collect.Table$Cell $r4;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r3 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleRowKey>;

        $r1 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleColumnKey>;

        $r2 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleValue>;

        $r4 = staticinvoke <com.google.common.collect.ImmutableTable: com.google.common.collect.Table$Cell cellOf(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r1, $r2);

        $r5 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>($r4);

        return $r5;
    }

    public volatile java.util.Set createCellSet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.SingletonImmutableTable: com.google.common.collect.ImmutableSet createCellSet()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableTable$SerializedForm createSerializedForm()
    {
        int[] $r1, $r3;
        com.google.common.collect.ImmutableTable$SerializedForm $r2;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r3 = newarray (int)[1];

        $r3[0] = 0;

        $r2 = staticinvoke <com.google.common.collect.ImmutableTable$SerializedForm: com.google.common.collect.ImmutableTable$SerializedForm create(com.google.common.collect.ImmutableTable,int[],int[])>(r0, $r1, $r3);

        return $r2;
    }

    public com.google.common.collect.ImmutableCollection createValues()
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r2 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleValue>;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.Collection createValues()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.SingletonImmutableTable: com.google.common.collect.ImmutableCollection createValues()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMap rowMap()
    {
        com.google.common.collect.ImmutableMap $r4;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r2 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleRowKey>;

        $r3 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleColumnKey>;

        $r1 = r0.<com.google.common.collect.SingletonImmutableTable: java.lang.Object singleValue>;

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r3, $r1);

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $r4;
    }

    public volatile java.util.Map rowMap()
    {
        com.google.common.collect.SingletonImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.SingletonImmutableTable: com.google.common.collect.ImmutableMap rowMap()>();

        return $r1;
    }

    public int size()
    {
        com.google.common.collect.SingletonImmutableTable r0;

        r0 := @this: com.google.common.collect.SingletonImmutableTable;

        return 1;
    }
}
