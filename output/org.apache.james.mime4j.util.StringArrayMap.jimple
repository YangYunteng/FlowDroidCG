public class org.apache.james.mime4j.util.StringArrayMap extends java.lang.Object implements java.io.Serializable
{
    public static final long serialVersionUID;
    public final java.util.Map map;

    public void <init>()
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map> = $r1;

        return;
    }

    public static java.util.Map asMap(java.util.Map)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r0;
        java.lang.String[] $r6;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r4;
        boolean $z0;

        $r1 := @parameter0: java.util.Map;

        $r0 = new java.util.HashMap;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = staticinvoke <org.apache.james.mime4j.util.StringArrayMap: java.lang.String[] asStringArray(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        return $r1;
    }

    public static java.lang.String asString(java.lang.Object)
    {
        java.lang.IllegalStateException $r4;
        java.lang.String[] $r2;
        java.util.List $r3;
        java.lang.Object $r0;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return null;

     label1:
        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r1 = (java.lang.String) $r0;

        return $r1;

     label2:
        $z0 = $r0 instanceof java.lang.String[];

        if $z0 == 0 goto label3;

        $r2 = (java.lang.String[]) $r0;

        $r1 = $r2[0];

        return $r1;

     label3:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r3 = (java.util.List) $r0;

        $r0 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r1 = (java.lang.String) $r0;

        return $r1;

     label4:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid parameter class: ");

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r4;
    }

    public static java.lang.String[] asStringArray(java.lang.Object)
    {
        java.lang.IllegalStateException $r5;
        java.lang.Object[] $r4;
        java.lang.String[] $r1;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r0;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return null;

     label1:
        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r1 = newarray (java.lang.String)[1];

        $r2 = (java.lang.String) $r0;

        $r1[0] = $r2;

        return $r1;

     label2:
        $z0 = $r0 instanceof java.lang.String[];

        if $z0 == 0 goto label3;

        $r1 = (java.lang.String[]) $r0;

        return $r1;

     label3:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r3 = (java.util.List) $r0;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r1 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r1 = (java.lang.String[]) $r4;

        return $r1;

     label4:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid parameter class: ");

        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r5;
    }

    public static java.util.Enumeration asStringEnum(java.lang.Object)
    {
        java.lang.IllegalStateException $r7;
        java.util.Enumeration $r6;
        java.lang.String[] $r3;
        java.util.List $r5;
        org.apache.james.mime4j.util.StringArrayMap$2 $r4;
        org.apache.james.mime4j.util.StringArrayMap$1 $r2;
        java.lang.StringBuilder $r0;
        java.lang.Object $r1;
        java.lang.Class $r8;
        java.lang.String $r9;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r2 = new org.apache.james.mime4j.util.StringArrayMap$1;

        specialinvoke $r2.<org.apache.james.mime4j.util.StringArrayMap$1: void <init>(java.lang.Object)>($r1);

        return $r2;

     label2:
        $z0 = $r1 instanceof java.lang.String[];

        if $z0 == 0 goto label3;

        $r3 = (java.lang.String[]) $r1;

        $r4 = new org.apache.james.mime4j.util.StringArrayMap$2;

        specialinvoke $r4.<org.apache.james.mime4j.util.StringArrayMap$2: void <init>(java.lang.String[])>($r3);

        return $r4;

     label3:
        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r5 = (java.util.List) $r1;

        $r6 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r5);

        return $r6;

     label4:
        $r7 = new java.lang.IllegalStateException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid parameter class: ");

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }

    public void addMapValue(java.util.Map, java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r13;
        java.lang.String[] $r8;
        java.util.ArrayList $r11;
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4;
        boolean $z0;
        java.util.List $r7;
        java.lang.Object $r5, $r6;
        java.lang.StringBuilder $r9, $r12;
        java.lang.Class $r10;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r2 := @parameter0: java.util.Map;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        if $r5 != null goto label1;

        $r6 = $r4;

        goto label6;

     label1:
        $z0 = $r5 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r11 = new java.util.ArrayList;

        $r6 = $r11;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label6;

     label2:
        $z0 = $r5 instanceof java.util.List;

        if $z0 == 0 goto label3;

        $r7 = (java.util.List) $r5;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r6 = $r5;

        goto label6;

     label3:
        $z0 = $r5 instanceof java.lang.String[];

        if $z0 == 0 goto label7;

        $r11 = new java.util.ArrayList;

        $r6 = $r11;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r8 = (java.lang.String[]) $r5;

        $i0 = lengthof $r8;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $r1 = $r8[$i1];

        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

     label6:
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r6);

        return;

     label7:
        $r13 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        $r9 = $r12;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid object type: ");

        $r10 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        goto label8;

     label8:
        throw $r13;
    }

    public void addValue(java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Map $r2;
        java.lang.String $r1, $r3;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.util.StringArrayMap: java.lang.String convertName(java.lang.String)>($r3);

        virtualinvoke r0.<org.apache.james.mime4j.util.StringArrayMap: void addMapValue(java.util.Map,java.lang.String,java.lang.String)>($r2, $r3, $r1);

        return;
    }

    public java.lang.String convertName(java.lang.String)
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        return $r1;
    }

    public java.util.Map getMap()
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r1 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r1 = staticinvoke <org.apache.james.mime4j.util.StringArrayMap: java.util.Map asMap(java.util.Map)>($r1);

        return $r1;
    }

    public java.lang.String[] getNameArray()
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.lang.Object[] $r4;
        java.util.Map $r1;
        int $i0;
        java.util.Set $r2;
        java.lang.String[] $r3;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r1 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.lang.String[]) $r4;

        return $r3;
    }

    public java.util.Enumeration getNames()
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Enumeration $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r1 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r2);

        return $r3;
    }

    public java.lang.String getValue(java.lang.String)
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.util.StringArrayMap: java.lang.String convertName(java.lang.String)>($r2);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r2 = staticinvoke <org.apache.james.mime4j.util.StringArrayMap: java.lang.String asString(java.lang.Object)>($r3);

        return $r2;
    }

    public java.util.Enumeration getValueEnum(java.lang.String)
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Enumeration $r4;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.util.StringArrayMap: java.lang.String convertName(java.lang.String)>($r2);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = staticinvoke <org.apache.james.mime4j.util.StringArrayMap: java.util.Enumeration asStringEnum(java.lang.Object)>($r3);

        return $r4;
    }

    public java.lang.String[] getValues(java.lang.String)
    {
        org.apache.james.mime4j.util.StringArrayMap r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.String[] $r4;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.util.StringArrayMap;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.james.mime4j.util.StringArrayMap: java.util.Map map>;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.util.StringArrayMap: java.lang.String convertName(java.lang.String)>($r2);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = staticinvoke <org.apache.james.mime4j.util.StringArrayMap: java.lang.String[] asStringArray(java.lang.Object)>($r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.james.mime4j.util.StringArrayMap: long serialVersionUID> = -5833051164281786907L;

        return;
    }
}
