public class c.d.a.b.a extends java.lang.Object implements c.b.a.g
{
    public static final boolean a;
    public static int b;
    public static int c;
    public final c.b.a.a.f d;
    public final c.b.a.a.b e;

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <c.b.a.p: boolean b>;

        <c.d.a.b.a: boolean a> = $z0;

        <c.d.a.b.a: int b> = 3000;

        <c.d.a.b.a: int c> = 4096;

        return;
    }

    public void <init>(c.b.a.a.f)
    {
        int $i0;
        c.b.a.a.b $r2;
        c.d.a.b.a r0;
        c.b.a.a.f $r1;

        r0 := @this: c.d.a.b.a;

        $r1 := @parameter0: c.b.a.a.f;

        $r2 = new c.b.a.a.b;

        $i0 = <c.d.a.b.a: int c>;

        specialinvoke $r2.<c.b.a.a.b: void <init>(int)>($i0);

        specialinvoke r0.<c.d.a.b.a: void <init>(c.b.a.a.f,c.b.a.a.b)>($r1, $r2);

        return;
    }

    public void <init>(c.b.a.a.f, c.b.a.a.b)
    {
        c.b.a.a.b $r2;
        c.d.a.b.a r0;
        c.b.a.a.f $r1;

        r0 := @this: c.d.a.b.a;

        $r1 := @parameter0: c.b.a.a.f;

        $r2 := @parameter1: c.b.a.a.b;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.d.a.b.a: c.b.a.a.f d> = $r1;

        r0.<c.d.a.b.a: c.b.a.a.b e> = $r2;

        return;
    }

    public static java.util.Map a(org.apache.http.Header[])
    {
        org.apache.http.Header[] $r0;
        org.apache.http.Header $r3;
        java.util.TreeMap $r1;
        int $i0, $i1;
        java.lang.String $r4, $r5;
        java.util.Comparator $r2;

        $r0 := @parameter0: org.apache.http.Header[];

        $r1 = new java.util.TreeMap;

        $r2 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Comparator)>($r2);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r3 = $r0[$i0];

        $r4 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getName()>();

        $r3 = $r0[$i0];

        $r5 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getValue()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static void a(java.lang.String, c.b.a.j, com.android.volley.VolleyError)
    {
        java.lang.Object[] $r4;
        c.b.a.j $r0;
        c.b.a.o $r3;
        com.android.volley.VolleyError $r2, $r6;
        java.lang.Integer $r5;
        int $i0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: c.b.a.j;

        $r2 := @parameter2: com.android.volley.VolleyError;

        $r3 = virtualinvoke $r0.<c.b.a.j: c.b.a.o getRetryPolicy()>();

        $i0 = virtualinvoke $r0.<c.b.a.j: int getTimeoutMs()>();

     label1:
        interfaceinvoke $r3.<c.b.a.o: void a(com.android.volley.VolleyError)>($r2);

     label2:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[1] = $r5;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-retry [timeout=%s]", $r4);

        virtualinvoke $r0.<c.b.a.j: void addMarker(java.lang.String)>($r1);

        return;

     label3:
        $r6 := @caughtexception;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[1] = $r5;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-timeout-giveup [timeout=%s]", $r4);

        virtualinvoke $r0.<c.b.a.j: void addMarker(java.lang.String)>($r1);

        throw $r6;

        catch com.android.volley.VolleyError from label1 to label2 with label3;
    }

    public c.d.a.a a(c.b.a.j)
    {
        byte[] $r26, $r29;
        org.apache.http.StatusLine $r23;
        java.lang.Integer $r33;
        c.b.a.a.f $r20;
        java.util.Map $r16, $r17, $r30;
        org.apache.http.Header[] $r24;
        c.d.a.a $r25;
        com.android.volley.ServerError $r35;
        org.apache.http.HttpEntity $r28;
        java.lang.StringBuilder $r41;
        c.b.a.a$a $r19;
        java.lang.Object[] $r32;
        c.b.a.j $r1;
        long $l0, $l2;
        java.util.HashMap $r18;
        org.apache.http.conn.ConnectTimeoutException $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        com.android.volley.TimeoutError $r42;
        java.net.SocketTimeoutException $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        int $i1;
        java.lang.String $r34;
        com.android.volley.AuthFailureError $r36;
        com.android.volley.NoConnectionError $r38;
        java.net.MalformedURLException $r39;
        java.io.IOException $r27, $r31;
        java.lang.RuntimeException $r40;
        org.apache.http.HttpResponse $r21, $r22;
        c.d.a.b.a r0;
        com.android.volley.NetworkError $r37;

        r0 := @this: c.d.a.b.a;

        $r1 := @parameter0: c.b.a.j;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label01:
        $r16 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r17 = $r16;

        $r18 = new java.util.HashMap;

     label02:
        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        $r19 = virtualinvoke $r1.<c.b.a.j: c.b.a.a$a getCacheEntry()>();

        virtualinvoke r0.<c.d.a.b.a: void a(java.util.Map,c.b.a.a$a)>($r18, $r19);

     label03:
        $r20 = r0.<c.d.a.b.a: c.b.a.a.f d>;

     label04:
        $r21 = interfaceinvoke $r20.<c.b.a.a.f: org.apache.http.HttpResponse a(c.b.a.j,java.util.Map)>($r1, $r18);

     label05:
        $r22 = $r21;

     label06:
        $r23 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r23.<org.apache.http.StatusLine: int getStatusCode()>();

        $r24 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        $r16 = staticinvoke <c.d.a.b.a: java.util.Map a(org.apache.http.Header[])>($r24);

     label07:
        if $i1 != 304 goto label22;

     label08:
        $r19 = virtualinvoke $r1.<c.b.a.j: c.b.a.a$a getCacheEntry()>();

     label09:
        if $r19 != null goto label14;

        $r25 = new c.d.a.a;

     label10:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label11:
        $l2 = $l2 - $l0;

     label12:
        $r24 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        specialinvoke $r25.<c.d.a.a: void <init>(int,byte[],java.util.Map,boolean,long,org.apache.http.Header[])>(304, null, $r16, 1, $l2, $r24);

     label13:
        return $r25;

     label14:
        $r17 = $r19.<c.b.a.a$a: java.util.Map g>;

     label15:
        interfaceinvoke $r17.<java.util.Map: void putAll(java.util.Map)>($r16);

     label16:
        $r25 = new c.d.a.a;

        $r26 = $r19.<c.b.a.a$a: byte[] a>;

        $r17 = $r19.<c.b.a.a$a: java.util.Map g>;

     label17:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label18:
        $l2 = $l2 - $l0;

     label19:
        $r24 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        specialinvoke $r25.<c.d.a.a: void <init>(int,byte[],java.util.Map,boolean,long,org.apache.http.Header[])>(304, $r26, $r17, 1, $l2, $r24);

     label20:
        return $r25;

     label21:
        $r27 := @caughtexception;

        $r26 = null;

        goto label47;

     label22:
        $r28 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label23:
        if $r28 == null goto label26;

     label24:
        $r28 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r26 = virtualinvoke r0.<c.d.a.b.a: byte[] a(org.apache.http.HttpEntity)>($r28);

     label25:
        goto label27;

     label26:
        $r26 = newarray (byte)[0];

     label27:
        $r29 = $r26;

     label28:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label29:
        $l2 = $l2 - $l0;

     label30:
        virtualinvoke r0.<c.d.a.b.a: void a(long,c.b.a.j,byte[],org.apache.http.StatusLine)>($l2, $r1, $r26, $r23);

     label31:
        if $i1 < 200 goto label38;

        if $i1 > 405 goto label38;

        $r25 = new c.d.a.a;

     label32:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label33:
        $l2 = $l2 - $l0;

     label34:
        $r24 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

     label35:
        $r30 = $r16;

     label36:
        specialinvoke $r25.<c.d.a.a: void <init>(int,byte[],java.util.Map,boolean,long,org.apache.http.Header[])>($i1, $r26, $r16, 0, $l2, $r24);

     label37:
        return $r25;

     label38:
        $r30 = $r16;

        $r31 = new java.io.IOException;

     label39:
        specialinvoke $r31.<java.io.IOException: void <init>()>();

        throw $r31;

     label40:
        $r27 := @caughtexception;

        goto label42;

     label41:
        $r27 := @caughtexception;

        $r30 = $r16;

     label42:
        $r16 = $r30;

        $r26 = $r29;

        goto label47;

     label43:
        $r27 := @caughtexception;

        $r17 = $r16;

        goto label45;

     label44:
        $r27 := @caughtexception;

     label45:
        $r16 = $r17;

        $r26 = null;

        goto label47;

     label46:
        $r27 := @caughtexception;

        $r22 = null;

        $r26 = null;

     label47:
        if $r22 == null goto label51;

        $r23 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r23.<org.apache.http.StatusLine: int getStatusCode()>();

        $r32 = newarray (java.lang.Object)[2];

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r32[0] = $r33;

        $r34 = virtualinvoke $r1.<c.b.a.j: java.lang.String getUrl()>();

        $r32[1] = $r34;

        staticinvoke <c.b.a.p: void c(java.lang.String,java.lang.Object[])>("Unexpected response code %d for %s", $r32);

        if $r26 == null goto label50;

        $r25 = new c.d.a.a;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l2 - $l0;

        $r24 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        specialinvoke $r25.<c.d.a.a: void <init>(int,byte[],java.util.Map,boolean,long,org.apache.http.Header[])>($i1, $r26, $r16, 0, $l2, $r24);

        if $i1 == 401 goto label49;

        if $i1 != 403 goto label48;

        goto label49;

     label48:
        $r35 = new com.android.volley.ServerError;

        specialinvoke $r35.<com.android.volley.ServerError: void <init>(c.d.a.a)>($r25);

        throw $r35;

     label49:
        $r36 = new com.android.volley.AuthFailureError;

        specialinvoke $r36.<com.android.volley.AuthFailureError: void <init>(c.d.a.a)>($r25);

        staticinvoke <c.d.a.b.a: void a(java.lang.String,c.b.a.j,com.android.volley.VolleyError)>("auth", $r1, $r36);

        goto label01;

     label50:
        $r37 = new com.android.volley.NetworkError;

        specialinvoke $r37.<com.android.volley.NetworkError: void <init>(c.d.a.a)>(null);

        throw $r37;

     label51:
        $r38 = new com.android.volley.NoConnectionError;

        specialinvoke $r38.<com.android.volley.NoConnectionError: void <init>(java.lang.Throwable)>($r27);

        throw $r38;

     label52:
        $r39 := @caughtexception;

        $r40 = new java.lang.RuntimeException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad URL ");

        $r34 = virtualinvoke $r1.<c.b.a.j: java.lang.String getUrl()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r34 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r34, $r39);

        throw $r40;

     label53:
        $r42 = new com.android.volley.TimeoutError;

        specialinvoke $r42.<com.android.volley.TimeoutError: void <init>()>();

        staticinvoke <c.d.a.b.a: void a(java.lang.String,c.b.a.j,com.android.volley.VolleyError)>("connection", $r1, $r42);

        goto label01;

     label54:
        $r42 = new com.android.volley.TimeoutError;

        specialinvoke $r42.<com.android.volley.TimeoutError: void <init>()>();

        staticinvoke <c.d.a.b.a: void a(java.lang.String,c.b.a.j,com.android.volley.VolleyError)>("socket", $r1, $r42);

        goto label01;

     label55:
        $r2 := @caughtexception;

        goto label54;

     label56:
        $r3 := @caughtexception;

        goto label53;

     label57:
        $r4 := @caughtexception;

        goto label54;

     label58:
        $r5 := @caughtexception;

        goto label53;

     label59:
        $r6 := @caughtexception;

        goto label54;

     label60:
        $r7 := @caughtexception;

        goto label53;

     label61:
        $r8 := @caughtexception;

        goto label54;

     label62:
        $r9 := @caughtexception;

        goto label53;

     label63:
        $r10 := @caughtexception;

        goto label54;

     label64:
        $r11 := @caughtexception;

        goto label53;

     label65:
        $r12 := @caughtexception;

        goto label54;

     label66:
        $r13 := @caughtexception;

        goto label53;

     label67:
        $r14 := @caughtexception;

        goto label54;

     label68:
        $r15 := @caughtexception;

        goto label53;

        catch java.net.SocketTimeoutException from label02 to label03 with label55;
        catch java.net.SocketTimeoutException from label04 to label05 with label55;
        catch org.apache.http.conn.ConnectTimeoutException from label02 to label03 with label56;
        catch org.apache.http.conn.ConnectTimeoutException from label04 to label05 with label56;
        catch java.net.MalformedURLException from label02 to label03 with label52;
        catch java.net.MalformedURLException from label04 to label05 with label52;
        catch java.io.IOException from label02 to label03 with label46;
        catch java.io.IOException from label04 to label05 with label46;
        catch java.net.SocketTimeoutException from label06 to label07 with label57;
        catch org.apache.http.conn.ConnectTimeoutException from label06 to label07 with label58;
        catch java.net.MalformedURLException from label06 to label07 with label52;
        catch java.io.IOException from label06 to label07 with label44;
        catch java.net.SocketTimeoutException from label08 to label09 with label59;
        catch java.net.SocketTimeoutException from label10 to label11 with label59;
        catch java.net.SocketTimeoutException from label12 to label13 with label59;
        catch java.net.SocketTimeoutException from label15 to label16 with label59;
        catch java.net.SocketTimeoutException from label17 to label18 with label59;
        catch java.net.SocketTimeoutException from label19 to label20 with label59;
        catch org.apache.http.conn.ConnectTimeoutException from label08 to label09 with label60;
        catch org.apache.http.conn.ConnectTimeoutException from label10 to label11 with label60;
        catch org.apache.http.conn.ConnectTimeoutException from label12 to label13 with label60;
        catch org.apache.http.conn.ConnectTimeoutException from label15 to label16 with label60;
        catch org.apache.http.conn.ConnectTimeoutException from label17 to label18 with label60;
        catch org.apache.http.conn.ConnectTimeoutException from label19 to label20 with label60;
        catch java.net.MalformedURLException from label08 to label09 with label52;
        catch java.net.MalformedURLException from label10 to label11 with label52;
        catch java.net.MalformedURLException from label12 to label13 with label52;
        catch java.net.MalformedURLException from label15 to label16 with label52;
        catch java.net.MalformedURLException from label17 to label18 with label52;
        catch java.net.MalformedURLException from label19 to label20 with label52;
        catch java.io.IOException from label08 to label09 with label21;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.io.IOException from label12 to label13 with label21;
        catch java.io.IOException from label15 to label16 with label21;
        catch java.io.IOException from label17 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.net.SocketTimeoutException from label22 to label23 with label61;
        catch org.apache.http.conn.ConnectTimeoutException from label22 to label23 with label62;
        catch java.net.MalformedURLException from label22 to label23 with label52;
        catch java.io.IOException from label22 to label23 with label43;
        catch java.net.SocketTimeoutException from label24 to label25 with label63;
        catch org.apache.http.conn.ConnectTimeoutException from label24 to label25 with label64;
        catch java.net.MalformedURLException from label24 to label25 with label52;
        catch java.io.IOException from label24 to label25 with label21;
        catch java.net.SocketTimeoutException from label28 to label29 with label65;
        catch java.net.SocketTimeoutException from label30 to label31 with label65;
        catch java.net.SocketTimeoutException from label32 to label33 with label65;
        catch java.net.SocketTimeoutException from label34 to label35 with label65;
        catch org.apache.http.conn.ConnectTimeoutException from label28 to label29 with label66;
        catch org.apache.http.conn.ConnectTimeoutException from label30 to label31 with label66;
        catch org.apache.http.conn.ConnectTimeoutException from label32 to label33 with label66;
        catch org.apache.http.conn.ConnectTimeoutException from label34 to label35 with label66;
        catch java.net.MalformedURLException from label28 to label29 with label52;
        catch java.net.MalformedURLException from label30 to label31 with label52;
        catch java.net.MalformedURLException from label32 to label33 with label52;
        catch java.net.MalformedURLException from label34 to label35 with label52;
        catch java.io.IOException from label28 to label29 with label41;
        catch java.io.IOException from label30 to label31 with label41;
        catch java.io.IOException from label32 to label33 with label41;
        catch java.io.IOException from label34 to label35 with label41;
        catch java.net.SocketTimeoutException from label36 to label37 with label67;
        catch java.net.SocketTimeoutException from label39 to label40 with label67;
        catch org.apache.http.conn.ConnectTimeoutException from label36 to label37 with label68;
        catch org.apache.http.conn.ConnectTimeoutException from label39 to label40 with label68;
        catch java.net.MalformedURLException from label36 to label37 with label52;
        catch java.net.MalformedURLException from label39 to label40 with label52;
        catch java.io.IOException from label36 to label37 with label40;
        catch java.io.IOException from label39 to label40 with label40;
    }

    public final void a(long, c.b.a.j, byte[], org.apache.http.StatusLine)
    {
        byte[] $r2;
        java.lang.Object[] $r4;
        c.b.a.j $r1;
        c.b.a.o $r8;
        long $l1, $l3;
        org.apache.http.StatusLine $r3;
        java.lang.Integer $r6;
        byte $b0;
        java.lang.Long $r5;
        int $i2;
        java.lang.Comparable $r7;
        c.d.a.b.a r0;
        boolean $z0;

        r0 := @this: c.d.a.b.a;

        $l1 := @parameter0: long;

        $r1 := @parameter1: c.b.a.j;

        $r2 := @parameter2: byte[];

        $r3 := @parameter3: org.apache.http.StatusLine;

        $z0 = <c.d.a.b.a: boolean a>;

        if $z0 != 0 goto label1;

        $i2 = <c.d.a.b.a: int b>;

        $l3 = (long) $i2;

        $b0 = $l1 cmp $l3;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label4;

     label1:
        $r4 = newarray (java.lang.Object)[5];

        $r4[0] = $r1;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4[1] = $r5;

        if $r2 == null goto label2;

        $i2 = lengthof $r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        goto label3;

     label2:
        $r7 = "null";

     label3:
        $r4[2] = $r7;

        $i2 = interfaceinvoke $r3.<org.apache.http.StatusLine: int getStatusCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[3] = $r6;

        $r8 = virtualinvoke $r1.<c.b.a.j: c.b.a.o getRetryPolicy()>();

        $i2 = interfaceinvoke $r8.<c.b.a.o: int a()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[4] = $r6;

        staticinvoke <c.b.a.p: void b(java.lang.String,java.lang.Object[])>("HTTP response for request=<%s> [lifetime=%d], [size=%s], [rc=%d], [retryCount=%s]", $r4);

     label4:
        return;
    }

    public final void a(java.util.Map, c.b.a.a$a)
    {
        c.b.a.a$a $r3;
        java.util.Date $r4;
        long $l0;
        byte $b1;
        java.util.Map $r1;
        int $i2;
        c.d.a.b.a r0;
        java.lang.String $r2;

        r0 := @this: c.d.a.b.a;

        $r1 := @parameter0: java.util.Map;

        $r3 := @parameter1: c.b.a.a$a;

        if $r3 != null goto label1;

        return;

     label1:
        $r2 = $r3.<c.b.a.a$a: java.lang.String b>;

        if $r2 == null goto label2;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("If-None-Match", $r2);

     label2:
        $l0 = $r3.<c.b.a.a$a: long d>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label3;

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        $r2 = staticinvoke <org.apache.http.impl.cookie.DateUtils: java.lang.String formatDate(java.util.Date)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("If-Modified-Since", $r2);

     label3:
        return;
    }

    public final byte[] a(org.apache.http.HttpEntity)
    {
        java.lang.Throwable $r12;
        c.b.a.a.k $r1, $r13;
        byte[] $r6, $r8, $r9;
        java.lang.Object[] $r10;
        c.b.a.a.b $r5;
        long $l0;
        int $i1, $i2;
        com.android.volley.ServerError $r11, $r14;
        org.apache.http.HttpEntity $r4;
        java.io.IOException $r2, $r3;
        c.d.a.b.a r0;
        java.io.InputStream $r7;

        r0 := @this: c.d.a.b.a;

        $r4 := @parameter0: org.apache.http.HttpEntity;

        $r13 = new c.b.a.a.k;

        $r1 = $r13;

        $r5 = r0.<c.d.a.b.a: c.b.a.a.b e>;

        $l0 = interfaceinvoke $r4.<org.apache.http.HttpEntity: long getContentLength()>();

        $i1 = (int) $l0;

        specialinvoke $r13.<c.b.a.a.k: void <init>(c.b.a.a.b,int)>($r5, $i1);

        $r6 = null;

     label01:
        $r7 = interfaceinvoke $r4.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label02:
        if $r7 == null goto label14;

     label03:
        $r5 = r0.<c.d.a.b.a: c.b.a.a.b e>;

        $r8 = virtualinvoke $r5.<c.b.a.a.b: byte[] a(int)>(1024);

     label04:
        $r6 = $r8;

     label05:
        $i1 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>($r8);

     label06:
        $i2 = -1;

        if $i1 == $i2 goto label09;

     label07:
        virtualinvoke $r1.<c.b.a.a.k: void write(byte[],int,int)>($r8, 0, $i1);

     label08:
        goto label05;

     label09:
        $r9 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label10:
        interfaceinvoke $r4.<org.apache.http.HttpEntity: void consumeContent()>();

     label11:
        goto label13;

     label12:
        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <c.b.a.p: void d(java.lang.String,java.lang.Object[])>("Error occured when calling consumingContent", $r10);

     label13:
        $r5 = r0.<c.d.a.b.a: c.b.a.a.b e>;

        virtualinvoke $r5.<c.b.a.a.b: void a(byte[])>($r8);

        virtualinvoke $r1.<c.b.a.a.k: void close()>();

        return $r9;

     label14:
        $r14 = new com.android.volley.ServerError;

     label15:
        $r11 = $r14;

     label16:
        specialinvoke $r14.<com.android.volley.ServerError: void <init>()>();

        throw $r11;

     label17:
        $r12 := @caughtexception;

     label18:
        interfaceinvoke $r4.<org.apache.http.HttpEntity: void consumeContent()>();

     label19:
        goto label21;

     label20:
        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <c.b.a.p: void d(java.lang.String,java.lang.Object[])>("Error occured when calling consumingContent", $r10);

     label21:
        $r5 = r0.<c.d.a.b.a: c.b.a.a.b e>;

        virtualinvoke $r5.<c.b.a.a.b: void a(byte[])>($r6);

        virtualinvoke $r1.<c.b.a.a.k: void close()>();

        goto label22;

     label22:
        throw $r12;

     label23:
        $r2 := @caughtexception;

        goto label12;

     label24:
        $r3 := @caughtexception;

        goto label20;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.io.IOException from label10 to label11 with label23;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.io.IOException from label18 to label19 with label24;
    }
}
