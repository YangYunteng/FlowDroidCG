public class c.c.a.i.b.m extends java.lang.Object implements c.b.a.m$b
{
    public final androidx.lifecycle.MutableLiveData a;
    public final c.c.a.i.b.p b;

    public void <init>(c.c.a.i.b.p, androidx.lifecycle.MutableLiveData)
    {
        c.c.a.i.b.m r0;
        androidx.lifecycle.MutableLiveData $r2;
        c.c.a.i.b.p $r1;

        r0 := @this: c.c.a.i.b.m;

        $r1 := @parameter0: c.c.a.i.b.p;

        $r2 := @parameter1: androidx.lifecycle.MutableLiveData;

        r0.<c.c.a.i.b.m: c.c.a.i.b.p b> = $r1;

        r0.<c.c.a.i.b.m: androidx.lifecycle.MutableLiveData a> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void a(java.lang.String)
    {
        androidx.lifecycle.MutableLiveData $r15;
        com.caremark.caremark.util.firebasePerformance.HeaderParser $r2;
        javax.xml.parsers.SAXParserFactory $r4;
        com.caremark.caremark.core.exceptions.ServerResponseException $r19;
        c.c.a.i.b.m r0;
        com.caremark.caremark.nativeeasyrefill.model.PersonalizationContents $r13;
        c.c.a.i.b.p $r16;
        c.c.a.d.d $r17;
        javax.xml.parsers.SAXParser $r5;
        c.c.a.i.b.e $r14;
        java.lang.String $r1, $r3;
        boolean $z0;
        org.xml.sax.InputSource $r6;
        c.c.a.i.b.a.d $r8;
        java.util.Iterator $r11;
        java.lang.Exception $r18;
        java.util.List $r10;
        com.caremark.caremark.nativeeasyrefill.model.PersonalizationContent $r9;
        java.io.StringReader $r7;
        java.lang.Object $r12;

        r0 := @this: c.c.a.i.b.m;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label26;

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label02:
        if $z0 != 0 goto label26;

        $r2 = new com.caremark.caremark.util.firebasePerformance.HeaderParser;

     label03:
        specialinvoke $r2.<com.caremark.caremark.util.firebasePerformance.HeaderParser: void <init>(java.lang.String,boolean)>($r1, 1);

        $r3 = virtualinvoke $r2.<com.caremark.caremark.util.firebasePerformance.HeaderParser: java.lang.String getStatusCode()>();

        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void onResponseFirebaseImp(java.lang.String,java.lang.String)>("and_getPZNByIdAndResourceTag_service", $r3);

        $r4 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

     label04:
        $r6 = new org.xml.sax.InputSource;

        $r7 = new java.io.StringReader;

     label05:
        specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r6.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r7);

     label06:
        $r8 = new c.c.a.i.b.a.d;

     label07:
        specialinvoke $r8.<c.c.a.i.b.a.d: void <init>()>();

        virtualinvoke $r5.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>($r6, $r8);

        $r9 = virtualinvoke $r8.<c.c.a.i.b.a.d: com.caremark.caremark.nativeeasyrefill.model.PersonalizationContent a()>();

        $r10 = virtualinvoke $r9.<com.caremark.caremark.nativeeasyrefill.model.PersonalizationContent: java.util.List getPersonalizationContentsList()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z0 == 0 goto label14;

     label10:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label11:
        $r13 = (com.caremark.caremark.nativeeasyrefill.model.PersonalizationContents) $r12;

     label12:
        $r1 = virtualinvoke $r13.<com.caremark.caremark.nativeeasyrefill.model.PersonalizationContents: java.lang.String getResourceTagId()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("2664");

     label13:
        if $z0 == 0 goto label08;

     label14:
        if $r9 == null goto label19;

        $r14 = new c.c.a.i.b.e;

     label15:
        specialinvoke $r14.<c.c.a.i.b.e: void <init>(java.lang.Object,com.android.volley.VolleyError)>($r9, null);

     label16:
        $r15 = r0.<c.c.a.i.b.m: androidx.lifecycle.MutableLiveData a>;

     label17:
        virtualinvoke $r15.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>($r14);

     label18:
        goto label33;

     label19:
        $r16 = r0.<c.c.a.i.b.m: c.c.a.i.b.p b>;

        $r15 = r0.<c.c.a.i.b.m: androidx.lifecycle.MutableLiveData a>;

     label20:
        $r17 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        $r1 = virtualinvoke $r17.<c.c.a.d.d: java.lang.String H()>();

        $r17 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        $r3 = virtualinvoke $r17.<c.c.a.d.d: java.lang.String I()>();

        virtualinvoke $r16.<c.c.a.i.b.B: void a(androidx.lifecycle.MutableLiveData,java.lang.String,java.lang.String)>($r15, $r1, $r3);

     label21:
        goto label33;

     label22:
        $r18 := @caughtexception;

        goto label32;

     label23:
        $r18 := @caughtexception;

        goto label32;

     label24:
        $r18 := @caughtexception;

        goto label32;

     label25:
        $r18 := @caughtexception;

        goto label32;

     label26:
        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void onEmptyResponseFirebaseImp(java.lang.String)>("and_getPZNByIdAndResourceTag_service");

     label27:
        $r16 = r0.<c.c.a.i.b.m: c.c.a.i.b.p b>;

        $r15 = r0.<c.c.a.i.b.m: androidx.lifecycle.MutableLiveData a>;

     label28:
        virtualinvoke $r16.<c.c.a.i.b.B: void a(androidx.lifecycle.MutableLiveData,java.lang.String,java.lang.String)>($r15, "", "");

     label29:
        $r19 = new com.caremark.caremark.core.exceptions.ServerResponseException;

     label30:
        specialinvoke $r19.<com.caremark.caremark.core.exceptions.ServerResponseException: void <init>(java.lang.String)>("Network problem");

     label31:
        throw $r19;

     label32:
        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void onEmptyResponseFirebaseImp(java.lang.String)>("and_getPZNByIdAndResourceTag_service");

        $r16 = r0.<c.c.a.i.b.m: c.c.a.i.b.p b>;

        $r15 = r0.<c.c.a.i.b.m: androidx.lifecycle.MutableLiveData a>;

        virtualinvoke $r16.<c.c.a.i.b.B: void a(androidx.lifecycle.MutableLiveData,java.lang.String,java.lang.String)>($r15, "", "");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GetPZNByID", "GetPZNByID Exception", $r18);

     label33:
        staticinvoke <com.caremark.caremark.util.firebasePerformance.CvsPerformanceImpUtil: void stopFirebaseTrace(java.lang.String)>("and_getPZNByIdAndResourceTag_service");

        return;

        catch com.caremark.caremark.core.exceptions.ServerResponseException from label01 to label02 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label03 to label04 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label05 to label06 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label07 to label09 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label10 to label11 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label12 to label13 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label15 to label16 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label17 to label18 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label20 to label21 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label26 to label27 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label28 to label29 with label25;
        catch com.caremark.caremark.core.exceptions.ServerResponseException from label30 to label32 with label25;
        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.io.IOException from label07 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label12 to label13 with label24;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.io.IOException from label20 to label21 with label24;
        catch java.io.IOException from label26 to label27 with label24;
        catch java.io.IOException from label28 to label29 with label24;
        catch java.io.IOException from label30 to label31 with label24;
        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label03 to label04 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label05 to label06 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label07 to label09 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label10 to label11 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label12 to label13 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label15 to label16 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label17 to label18 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label20 to label21 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label26 to label27 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label28 to label29 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label30 to label31 with label23;
        catch org.xml.sax.SAXException from label01 to label02 with label22;
        catch org.xml.sax.SAXException from label03 to label04 with label22;
        catch org.xml.sax.SAXException from label05 to label06 with label22;
        catch org.xml.sax.SAXException from label07 to label09 with label22;
        catch org.xml.sax.SAXException from label10 to label11 with label22;
        catch org.xml.sax.SAXException from label12 to label13 with label22;
        catch org.xml.sax.SAXException from label15 to label16 with label22;
        catch org.xml.sax.SAXException from label17 to label18 with label22;
        catch org.xml.sax.SAXException from label20 to label21 with label22;
        catch org.xml.sax.SAXException from label26 to label27 with label22;
        catch org.xml.sax.SAXException from label28 to label29 with label22;
        catch org.xml.sax.SAXException from label30 to label31 with label22;
    }

    public volatile void onResponse(java.lang.Object)
    {
        c.c.a.i.b.m r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: c.c.a.i.b.m;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke r0.<c.c.a.i.b.m: void a(java.lang.String)>($r2);

        return;
    }
}
