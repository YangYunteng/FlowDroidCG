public class c.f.a.a.b.f extends java.lang.Object
{
    public static final javax.net.ssl.X509TrustManager a;

    static void <clinit>()
    {
        javax.net.ssl.X509TrustManager $r0;

        $r0 = staticinvoke <c.f.a.a.b.f: javax.net.ssl.X509TrustManager b()>();

        <c.f.a.a.b.f: javax.net.ssl.X509TrustManager a> = $r0;

        return;
    }

    public static javax.net.ssl.X509TrustManager a()
    {
        javax.net.ssl.X509TrustManager r0;

        r0 = <c.f.a.a.b.f: javax.net.ssl.X509TrustManager a>;

        return r0;
    }

    public static javax.net.ssl.X509TrustManager b()
    {
        java.lang.IllegalStateException $r7;
        javax.net.ssl.TrustManagerFactory $r3;
        javax.net.ssl.TrustManager $r6;
        java.security.KeyStoreException $r1;
        javax.net.ssl.X509TrustManager $r4;
        javax.net.ssl.TrustManager[] $r5;
        java.security.NoSuchAlgorithmException $r0;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0;

     label01:
        $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2);

     label02:
        $r4 = null;

     label03:
        virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(null);

     label04:
        $r5 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label07;

        $r6 = $r5[$i1];

        $z0 = $r6 instanceof javax.net.ssl.X509TrustManager;

        if $z0 == 0 goto label06;

        $r4 = (javax.net.ssl.X509TrustManager) $r6;

     label06:
        $i1 = $i1 + 1;

        goto label05;

     label07:
        if $r4 == null goto label08;

        return $r4;

     label08:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never happen");

        throw $r7;

     label09:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never happen");

        throw $r7;

     label10:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never happen");

        goto label11;

     label11:
        throw $r7;

     label12:
        $r0 := @caughtexception;

        goto label10;

     label13:
        $r1 := @caughtexception;

        goto label09;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.KeyStoreException from label03 to label04 with label13;
    }
}
