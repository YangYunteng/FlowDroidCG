public final class com.crashlytics.android.core.CodedOutputStream extends java.lang.Object implements java.io.Flushable
{
    public static final int DEFAULT_BUFFER_SIZE;
    public static final int LITTLE_ENDIAN_32_SIZE;
    public static final int LITTLE_ENDIAN_64_SIZE;
    public final byte[] buffer;
    public final int limit;
    public final java.io.OutputStream output;
    public int position;

    public void <init>(java.io.OutputStream, byte[])
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream r0;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r2 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output> = $r2;

        r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer> = $r1;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = 0;

        $i0 = lengthof $r1;

        r0.<com.crashlytics.android.core.CodedOutputStream: int limit> = $i0;

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream r0;
        int $i0, $i1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output> = null;

        r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer> = $r1;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i1;

        $i1 = $i1 + $i0;

        r0.<com.crashlytics.android.core.CodedOutputStream: int limit> = $i1;

        return;
    }

    public static int computeBoolSize(int, boolean)
    {
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeBoolSizeNoTag(boolean)>($z0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeBytesSize(int, com.crashlytics.android.core.ByteString)
    {
        int $i0, $i1;
        com.crashlytics.android.core.ByteString $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.crashlytics.android.core.ByteString;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeBytesSizeNoTag(com.crashlytics.android.core.ByteString)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeBytesSizeNoTag(com.crashlytics.android.core.ByteString)
    {
        int $i0, $i1;
        com.crashlytics.android.core.ByteString $r0;

        $r0 := @parameter0: com.crashlytics.android.core.ByteString;

        $i0 = virtualinvoke $r0.<com.crashlytics.android.core.ByteString: int size()>();

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

        $i1 = virtualinvoke $r0.<com.crashlytics.android.core.ByteString: int size()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeDoubleSize(int, double)
    {
        int $i0, $i1;
        double $d0;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeDoubleSizeNoTag(double)>($d0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double $d0;

        $d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeEnumSizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeFixed32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeFixed32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeFixed64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int $i0, $i1;
        float $f0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeFloatSizeNoTag(float)>($f0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float $f0;

        $f0 := @parameter0: float;

        return 4;
    }

    public static int computeInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

        return $i0;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeInt64SizeNoTag(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint64Size(long)>($l1);

        return $i0;
    }

    public static int computePreferredBufferSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 <= 4096 goto label1;

        return 4096;

     label1:
        return $i0;
    }

    public static int computeRawMessageSetExtensionSize(int, com.crashlytics.android.core.ByteString)
    {
        int $i0, $i1;
        com.crashlytics.android.core.ByteString $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.crashlytics.android.core.ByteString;

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 * 2;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeBytesSize(int,com.crashlytics.android.core.ByteString)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeRawVarint32Size(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i1 = -16384;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label2;

        return 2;

     label2:
        $i1 = -2097152 & $i0;

        if $i1 != 0 goto label3;

        return 3;

     label3:
        $i0 = $i0 & -268435456;

        if $i0 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeRawVarint64Size(long)
    {
        long $l0, $l1;
        byte $b2;

        $l0 := @parameter0: long;

        $l1 = -128L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $l1 = -16384L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        return 2;

     label2:
        $l1 = -2097152L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        return 3;

     label3:
        $l1 = -268435456L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        return 4;

     label4:
        $l1 = -34359738368L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label5;

        return 5;

     label5:
        $l1 = -4398046511104L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label6;

        return 6;

     label6:
        $l1 = -562949953421312L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label7;

        return 7;

     label7:
        $l1 = -72057594037927936L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label8;

        return 8;

     label8:
        $l0 = $l0 & -9223372036854775808L;

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label9;

        return 9;

     label9:
        return 10;
    }

    public static int computeSFixed32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeSFixed32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeSFixed64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeSInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int encodeZigZag32(int)>($i0);

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

        return $i0;
    }

    public static int computeSInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeSInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        int $i1;
        long $l0;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: long encodeZigZag64(long)>($l0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint64Size(long)>($l0);

        return $i1;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        byte[] $r1;
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.RuntimeException $r3;
        java.io.UnsupportedEncodingException $r2;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        $i0 = lengthof $r1;

     label3:
        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

     label4:
        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        return $i0;

     label5:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("UTF-8 not supported.", $r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public static int computeTagSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.crashlytics.android.core.WireFormat: int makeTag(int,int)>($i0, 0);

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

        return $i0;
    }

    public static int computeUInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

        return $i0;
    }

    public static int computeUInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int computeRawVarint64Size(long)>($l1);

        return $i0;
    }

    public static int encodeZigZag32(int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 = $i1 << 1;

        $i1 = $i1 >> 31;

        $i1 = $i1 ^ $i0;

        return $i1;
    }

    public static long encodeZigZag64(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 << 1;

        $l0 = $l0 >> 63;

        $l0 = $l0 ^ $l1;

        return $l0;
    }

    public static com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        com.crashlytics.android.core.CodedOutputStream $r0;

        $r1 := @parameter0: java.io.OutputStream;

        $r0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream,int)>($r1, 4096);

        return $r0;
    }

    public static com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream $r0;
        byte[] $r2;
        com.crashlytics.android.core.CodedOutputStream $r1;
        int $i0;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $r1 = new com.crashlytics.android.core.CodedOutputStream;

        $r2 = newarray (byte)[$i0];

        specialinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void <init>(java.io.OutputStream,byte[])>($r0, $r2);

        return $r1;
    }

    public static com.crashlytics.android.core.CodedOutputStream newInstance(byte[])
    {
        int $i0;
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream $r0;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(byte[],int,int)>($r1, 0, $i0);

        return $r0;
    }

    public static com.crashlytics.android.core.CodedOutputStream newInstance(byte[], int, int)
    {
        byte[] $r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new com.crashlytics.android.core.CodedOutputStream;

        specialinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    private void refreshBuffer()
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream r0;
        com.crashlytics.android.core.CodedOutputStream$OutOfSpaceException $r3;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output>;

        if $r2 == null goto label1;

        $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        $i0 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = 0;

        return;

     label1:
        $r3 = new com.crashlytics.android.core.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r3.<com.crashlytics.android.core.CodedOutputStream$OutOfSpaceException: void <init>()>();

        throw $r3;
    }

    public void checkNoSpaceLeft()
    {
        int $i0;
        java.lang.IllegalStateException $r1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 = virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: int spaceLeft()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

    public void flush()
    {
        java.io.OutputStream $r1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>();

     label1:
        return;
    }

    public int spaceLeft()
    {
        java.io.OutputStream $r1;
        java.lang.UnsupportedOperationException $r2;
        com.crashlytics.android.core.CodedOutputStream r0;
        int $i0, $i1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output>;

        if $r1 != null goto label1;

        $i0 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        $i1 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array.");

        throw $r2;
    }

    public void writeBool(int, boolean)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBoolNoTag(boolean)>($z0);

        return;
    }

    public void writeBoolNoTag(boolean)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $z0 := @parameter0: boolean;

        $i0 = (int) $z0;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        return;
    }

    public void writeBytes(int, com.crashlytics.android.core.ByteString)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        com.crashlytics.android.core.ByteString $r1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.crashlytics.android.core.ByteString;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytesNoTag(com.crashlytics.android.core.ByteString)>($r1);

        return;
    }

    public void writeBytesNoTag(com.crashlytics.android.core.ByteString)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        com.crashlytics.android.core.ByteString $r1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter0: com.crashlytics.android.core.ByteString;

        $i0 = virtualinvoke $r1.<com.crashlytics.android.core.ByteString: int size()>();

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString)>($r1);

        return;
    }

    public void writeDouble(int, double)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        double $d0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 1);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeDoubleNoTag(double)>($d0);

        return;
    }

    public void writeDoubleNoTag(double)
    {
        long $l0;
        com.crashlytics.android.core.CodedOutputStream r0;
        double $d0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawLittleEndian64(long)>($l0);

        return;
    }

    public void writeEnum(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeEnumNoTag(int)>($i1);

        return;
    }

    public void writeEnumNoTag(int)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeInt32NoTag(int)>($i0);

        return;
    }

    public void writeFixed32(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 5);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeFixed32NoTag(int)>($i1);

        return;
    }

    public void writeFixed32NoTag(int)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawLittleEndian32(int)>($i0);

        return;
    }

    public void writeFixed64(int, long)
    {
        int $i0;
        long $l1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 1);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeFixed64NoTag(long)>($l1);

        return;
    }

    public void writeFixed64NoTag(long)
    {
        long $l0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawLittleEndian64(long)>($l0);

        return;
    }

    public void writeFloat(int, float)
    {
        int $i0;
        float $f0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 5);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeFloatNoTag(float)>($f0);

        return;
    }

    public void writeFloatNoTag(float)
    {
        int $i0;
        float $f0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawLittleEndian32(int)>($i0);

        return;
    }

    public void writeInt32(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeInt32NoTag(int)>($i1);

        return;
    }

    public void writeInt32NoTag(int)
    {
        int $i0;
        long $l1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint32(int)>($i0);

        return;

     label1:
        $l1 = (long) $i0;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint64(long)>($l1);

        return;
    }

    public void writeInt64(int, long)
    {
        int $i0;
        long $l1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeInt64NoTag(long)>($l1);

        return;
    }

    public void writeInt64NoTag(long)
    {
        long $l0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint64(long)>($l0);

        return;
    }

    public void writeRawByte(byte)
    {
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream r0;
        byte $b0;
        int $i1, $i2;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $b0 := @parameter0: byte;

        $i1 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i2 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        if $i1 != $i2 goto label1;

        specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>();

     label1:
        $r1 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        $i2 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i1 = $i2 + 1;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i1;

        $r1[$i2] = $b0;

        return;
    }

    public void writeRawByte(int)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        byte $b1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $b1 = (byte) $i0;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(byte)>($b1);

        return;
    }

    public void writeRawBytes(com.crashlytics.android.core.ByteString)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        com.crashlytics.android.core.ByteString $r1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter0: com.crashlytics.android.core.ByteString;

        $i0 = virtualinvoke $r1.<com.crashlytics.android.core.ByteString: int size()>();

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(com.crashlytics.android.core.ByteString,int,int)>($r1, 0, $i0);

        return;
    }

    public void writeRawBytes(com.crashlytics.android.core.ByteString, int, int)
    {
        java.io.OutputStream $r4;
        byte[] $r2;
        java.lang.IllegalStateException $r5;
        long $l5, $l6;
        com.crashlytics.android.core.CodedOutputStream r0;
        com.crashlytics.android.core.ByteString $r1;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.InputStream $r3;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter0: com.crashlytics.android.core.ByteString;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        $i3 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i4 = $i2 - $i3;

        if $i4 < $i1 goto label1;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, $i0, $i3, $i1);

        $i0 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i0 = $i0 + $i1;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i0;

        return;

     label1:
        $i2 = $i2 - $i3;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, $i0, $i3, $i2);

        $i3 = $i0 + $i2;

        $i0 = $i1 - $i2;

        $i1 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i1;

        specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>();

        $i1 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        if $i0 > $i1 goto label2;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        virtualinvoke $r1.<com.crashlytics.android.core.ByteString: void copyTo(byte[],int,int,int)>($r2, $i3, 0, $i0);

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i0;

        return;

     label2:
        $r3 = virtualinvoke $r1.<com.crashlytics.android.core.ByteString: java.io.InputStream newInput()>();

        $l5 = (long) $i3;

        $l6 = virtualinvoke $r3.<java.io.InputStream: long skip(long)>($l5);

        $b7 = $l5 cmp $l6;

        if $b7 != 0 goto label5;

     label3:
        if $i0 <= 0 goto label7;

        $i1 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1);

        if $i3 != $i1 goto label4;

        $r4 = r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output>;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i3);

        $i0 = $i0 - $i3;

        goto label3;

     label4:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Read failed.");

        throw $r5;

     label5:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Skip failed.");

        goto label6;

     label6:
        throw $r5;

     label7:
        return;
    }

    public void writeRawBytes(byte[])
    {
        int $i0;
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void writeRawBytes(byte[], int, int)
    {
        java.io.OutputStream $r3;
        byte[] $r1, $r2;
        com.crashlytics.android.core.CodedOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        $i3 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i4 = $i2 - $i3;

        if $i4 < $i1 goto label1;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i3, $i1);

        $i0 = r0.<com.crashlytics.android.core.CodedOutputStream: int position>;

        $i0 = $i0 + $i1;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i0;

        return;

     label1:
        $i2 = $i2 - $i3;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i3, $i2);

        $i0 = $i0 + $i2;

        $i1 = $i1 - $i2;

        $i3 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i3;

        specialinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void refreshBuffer()>();

        $i3 = r0.<com.crashlytics.android.core.CodedOutputStream: int limit>;

        if $i1 > $i3 goto label2;

        $r2 = r0.<com.crashlytics.android.core.CodedOutputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i1);

        r0.<com.crashlytics.android.core.CodedOutputStream: int position> = $i1;

        return;

     label2:
        $r3 = r0.<com.crashlytics.android.core.CodedOutputStream: java.io.OutputStream output>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void writeRawLittleEndian32(int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i1);

        $i1 = $i0 >> 8;

        $i1 = $i1 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i1);

        $i1 = $i0 >> 16;

        $i1 = $i1 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i1);

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        return;
    }

    public void writeRawLittleEndian64(long)
    {
        com.crashlytics.android.core.CodedOutputStream r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l1 := @parameter0: long;

        $i0 = (int) $l1;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l1 >> 8;

        $i0 = (int) $l2;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l1 >> 16;

        $i0 = (int) $l2;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l1 >> 24;

        $i0 = (int) $l2;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l1 >> 32;

        $i0 = (int) $l2;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l1 >> 40;

        $i0 = (int) $l2;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l1 >> 48;

        $i0 = (int) $l2;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l1 = $l1 >> 56;

        $i0 = (int) $l1;

        $i0 = $i0 & 255;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        return;
    }

    public void writeRawMessageSetExtension(int, com.crashlytics.android.core.ByteString)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;
        com.crashlytics.android.core.ByteString $r1;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.crashlytics.android.core.ByteString;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>(1, 3);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeBytes(int,com.crashlytics.android.core.ByteString)>(3, $r1);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeRawVarint32(int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

     label1:
        $i1 = -128;

        $i1 = $i0 & $i1;

        if $i1 != 0 goto label2;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        return;

     label2:
        $i1 = $i0 & 127;

        $i1 = $i1 | 128;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i1);

        $i0 = $i0 >>> 7;

        goto label1;
    }

    public void writeRawVarint64(long)
    {
        com.crashlytics.android.core.CodedOutputStream r0;
        byte $b1;
        int $i0;
        long $l2, $l3;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l2 := @parameter0: long;

     label1:
        $l3 = -128L & $l2;

        $b1 = $l3 cmp 0L;

        if $b1 != 0 goto label2;

        $i0 = (int) $l2;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        return;

     label2:
        $i0 = (int) $l2;

        $i0 = $i0 & 127;

        $i0 = $i0 | 128;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawByte(int)>($i0);

        $l2 = $l2 >>> 7;

        goto label1;
    }

    public void writeSFixed32(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 5);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeSFixed32NoTag(int)>($i1);

        return;
    }

    public void writeSFixed32NoTag(int)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawLittleEndian32(int)>($i0);

        return;
    }

    public void writeSFixed64(int, long)
    {
        int $i0;
        long $l1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 1);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeSFixed64NoTag(long)>($l1);

        return;
    }

    public void writeSFixed64NoTag(long)
    {
        long $l0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawLittleEndian64(long)>($l0);

        return;
    }

    public void writeSInt32(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeSInt32NoTag(int)>($i1);

        return;
    }

    public void writeSInt32NoTag(int)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: int encodeZigZag32(int)>($i0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint32(int)>($i0);

        return;
    }

    public void writeSInt64(int, long)
    {
        int $i0;
        long $l1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeSInt64NoTag(long)>($l1);

        return;
    }

    public void writeSInt64NoTag(long)
    {
        long $l0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: long encodeZigZag64(long)>($l0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint64(long)>($l0);

        return;
    }

    public void writeString(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 2);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeStringNoTag(java.lang.String)>($r1);

        return;
    }

    public void writeStringNoTag(java.lang.String)
    {
        byte[] $r1;
        com.crashlytics.android.core.CodedOutputStream r0;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>($r1);

        return;
    }

    public void writeTag(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.crashlytics.android.core.WireFormat: int makeTag(int,int)>($i1, $i0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint32(int)>($i1);

        return;
    }

    public void writeUInt32(int, int)
    {
        int $i0, $i1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public void writeUInt32NoTag(int)
    {
        int $i0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint32(int)>($i0);

        return;
    }

    public void writeUInt64(int, long)
    {
        int $i0;
        long $l1;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeTag(int,int)>($i0, 0);

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public void writeUInt64NoTag(long)
    {
        long $l0;
        com.crashlytics.android.core.CodedOutputStream r0;

        r0 := @this: com.crashlytics.android.core.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.crashlytics.android.core.CodedOutputStream: void writeRawVarint64(long)>($l0);

        return;
    }

    public static void <clinit>()
    {
        <com.crashlytics.android.core.CodedOutputStream: int LITTLE_ENDIAN_64_SIZE> = 8;

        <com.crashlytics.android.core.CodedOutputStream: int LITTLE_ENDIAN_32_SIZE> = 4;

        <com.crashlytics.android.core.CodedOutputStream: int DEFAULT_BUFFER_SIZE> = 4096;

        return;
    }
}
