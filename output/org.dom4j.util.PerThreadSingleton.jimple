public class org.dom4j.util.PerThreadSingleton extends java.lang.Object implements org.dom4j.util.SingletonStrategy
{
    public java.lang.ThreadLocal perThreadCache;
    public java.lang.String singletonClassName;

    public void <init>()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName> = null;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache> = $r1;

        return;
    }

    public java.lang.Object instance()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r4;
        java.lang.Exception $r2, $r3;
        java.lang.Thread $r6;
        java.lang.Object $r5;
        java.lang.Class $r9;
        java.lang.ClassLoader $r7;
        java.lang.String $r8;
        java.lang.ref.WeakReference $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        $r4 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache>;

        $r5 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r1 = (java.lang.ref.WeakReference) $r5;

        if $r1 == null goto label2;

        $r5 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r5 != null goto label1;

        goto label2;

     label1:
        $r5 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        return $r5;

     label2:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r8 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName>;

        $r9 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r8);

        $r5 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();

     label3:
        goto label7;

     label4:
        $r8 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName>;

        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r8);

        $r5 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();

     label5:
        goto label7;

     label6:
        $r5 = null;

     label7:
        $r4 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache>;

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r5);

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);

        return $r5;

     label8:
        $r2 := @caughtexception;

        goto label4;

     label9:
        $r3 := @caughtexception;

        goto label6;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label9;
    }

    public void reset()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache> = $r1;

        return;
    }

    public void setSingletonClassName(java.lang.String)
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        $r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName> = $r1;

        return;
    }
}
