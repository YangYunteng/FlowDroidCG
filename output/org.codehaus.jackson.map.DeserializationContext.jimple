public abstract class org.codehaus.jackson.map.DeserializationContext extends java.lang.Object
{
    public final org.codehaus.jackson.map.DeserializationConfig _config;
    public final int _featureFlags;

    public void <init>(org.codehaus.jackson.map.DeserializationConfig)
    {
        int $i0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig _config> = $r1;

        $i0 = $r1.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        r0.<org.codehaus.jackson.map.DeserializationContext: int _featureFlags> = $i0;

        return;
    }

    public abstract java.util.Calendar constructCalendar(java.util.Date);

    public org.codehaus.jackson.type.JavaType constructType(java.lang.Class)
    {
        org.codehaus.jackson.type.JavaType $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        $r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.type.JavaType constructType(java.lang.Class)>($r3);

        return $r2;
    }

    public abstract org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders();

    public org.codehaus.jackson.Base64Variant getBase64Variant()
    {
        org.codehaus.jackson.Base64Variant $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        $r2 = r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.Base64Variant getBase64Variant()>();

        return $r1;
    }

    public org.codehaus.jackson.map.DeserializationConfig getConfig()
    {
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        r1 = r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig _config>;

        return r1;
    }

    public org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()
    {
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        return null;
    }

    public final org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()
    {
        org.codehaus.jackson.node.JsonNodeFactory $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        $r2 = r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        return $r1;
    }

    public abstract org.codehaus.jackson.JsonParser getParser();

    public abstract boolean handleUnknownProperty(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.JsonDeserializer, java.lang.Object, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class, java.lang.Throwable);

    public boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        int $i0, $i1;
        org.codehaus.jackson.map.DeserializationContext r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = r0.<org.codehaus.jackson.map.DeserializationContext: int _featureFlags>;

        $i1 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer();

    public abstract org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class);

    public org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String)
    {
        org.codehaus.jackson.map.JsonMappingException $r3;
        java.lang.String $r1;
        org.codehaus.jackson.map.DeserializationContext r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationContext;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.JsonParser getParser()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>($r2, $r1);

        return $r3;
    }

    public abstract java.util.Date parseDate(java.lang.String);

    public abstract void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer);

    public abstract org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class, java.lang.String, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class, java.lang.String);

    public abstract org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser, org.codehaus.jackson.JsonToken, java.lang.String);
}
