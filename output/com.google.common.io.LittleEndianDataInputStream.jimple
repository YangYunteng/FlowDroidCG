public final class com.google.common.io.LittleEndianDataInputStream extends java.io.FilterInputStream implements java.io.DataInput
{

    public void <init>(java.io.InputStream)
    {
        com.google.common.io.LittleEndianDataInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r1 := @parameter0: java.io.InputStream;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }

    private byte readAndCheckByte()
    {
        byte $b1;
        com.google.common.io.LittleEndianDataInputStream r0;
        int $i0, $i2;
        java.io.EOFException $r2;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i2 = -1;

        if $i2 == $i0 goto label1;

        $b1 = (byte) $i0;

        return $b1;

     label1:
        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;
    }

    public boolean readBoolean()
    {
        int $i0;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $i0 = virtualinvoke r0.<com.google.common.io.LittleEndianDataInputStream: int readUnsignedByte()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public byte readByte()
    {
        int $i0;
        byte $b1;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $i0 = virtualinvoke r0.<com.google.common.io.LittleEndianDataInputStream: int readUnsignedByte()>();

        $b1 = (byte) $i0;

        return $b1;
    }

    public char readChar()
    {
        int $i0;
        char $c1;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $i0 = virtualinvoke r0.<com.google.common.io.LittleEndianDataInputStream: int readUnsignedShort()>();

        $c1 = (char) $i0;

        return $c1;
    }

    public double readDouble()
    {
        long $l0;
        com.google.common.io.LittleEndianDataInputStream r0;
        double $d0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $l0 = virtualinvoke r0.<com.google.common.io.LittleEndianDataInputStream: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public float readFloat()
    {
        int $i0;
        float $f0;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $i0 = virtualinvoke r0.<com.google.common.io.LittleEndianDataInputStream: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public void readFully(byte[])
    {
        byte[] $r1;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r1 := @parameter0: byte[];

        staticinvoke <com.google.common.io.ByteStreams: void readFully(java.io.InputStream,byte[])>(r0, $r1);

        return;
    }

    public void readFully(byte[], int, int)
    {
        byte[] $r1;
        com.google.common.io.LittleEndianDataInputStream r0;
        int $i0, $i1;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <com.google.common.io.ByteStreams: void readFully(java.io.InputStream,byte[],int,int)>(r0, $r1, $i0, $i1);

        return;
    }

    public int readInt()
    {
        byte $b0, $b1, $b2, $b3;
        com.google.common.io.LittleEndianDataInputStream r0;
        int $i4;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $b0 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b1 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b2 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b3 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $i4 = staticinvoke <com.google.common.primitives.Ints: int fromBytes(byte,byte,byte,byte)>($b3, $b2, $b1, $b0);

        return $i4;
    }

    public java.lang.String readLine()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("readLine is not supported");

        throw $r1;
    }

    public long readLong()
    {
        com.google.common.io.LittleEndianDataInputStream r0;
        long $l8;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $b0 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b1 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b2 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b3 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b4 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b5 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b6 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b7 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $l8 = staticinvoke <com.google.common.primitives.Longs: long fromBytes(byte,byte,byte,byte,byte,byte,byte,byte)>($b7, $b6, $b5, $b4, $b3, $b2, $b1, $b0);

        return $l8;
    }

    public short readShort()
    {
        int $i0;
        short $s1;
        com.google.common.io.LittleEndianDataInputStream r0;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $i0 = virtualinvoke r0.<com.google.common.io.LittleEndianDataInputStream: int readUnsignedShort()>();

        $s1 = (short) $i0;

        return $s1;
    }

    public java.lang.String readUTF()
    {
        java.io.DataInputStream $r3;
        com.google.common.io.LittleEndianDataInputStream r0;
        java.lang.String $r2;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r3 = new java.io.DataInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r1);

        $r2 = virtualinvoke $r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        return $r2;
    }

    public int readUnsignedByte()
    {
        com.google.common.io.LittleEndianDataInputStream r0;
        int $i0;
        java.io.EOFException $r2;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;
    }

    public int readUnsignedShort()
    {
        byte $b0, $b1;
        com.google.common.io.LittleEndianDataInputStream r0;
        int $i2;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $b0 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $b1 = specialinvoke r0.<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()>();

        $i2 = staticinvoke <com.google.common.primitives.Ints: int fromBytes(byte,byte,byte,byte)>(0, 0, $b1, $b0);

        return $i2;
    }

    public int skipBytes(int)
    {
        com.google.common.io.LittleEndianDataInputStream r0;
        int $i1;
        long $l0;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.LittleEndianDataInputStream;

        $i1 := @parameter0: int;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $l0 = (long) $i1;

        $l0 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l0);

        $i1 = (int) $l0;

        return $i1;
    }
}
