public final class com.google.zxing.oned.Code93Reader extends com.google.zxing.oned.OneDReader
{
    public static final char[] ALPHABET;
    public static final java.lang.String ALPHABET_STRING;
    public static final int ASTERISK_ENCODING;
    public static final int[] CHARACTER_ENCODINGS;
    public final int[] counters;
    public final java.lang.StringBuilder decodeRowResult;

    static void <clinit>()
    {
        int[] $r2;
        int $i0;
        char[] $r0;
        java.lang.String $r1;

        <com.google.zxing.oned.Code93Reader: java.lang.String ALPHABET_STRING> = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*";

        $r1 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <com.google.zxing.oned.Code93Reader: char[] ALPHABET> = $r0;

        $r2 = newarray (int)[48];

        $r2[0] = 276;

        $r2[1] = 328;

        $r2[2] = 324;

        $r2[3] = 322;

        $r2[4] = 296;

        $r2[5] = 292;

        $r2[6] = 290;

        $r2[7] = 336;

        $r2[8] = 274;

        $r2[9] = 266;

        $r2[10] = 424;

        $r2[11] = 420;

        $r2[12] = 418;

        $r2[13] = 404;

        $r2[14] = 402;

        $r2[15] = 394;

        $r2[16] = 360;

        $r2[17] = 356;

        $r2[18] = 354;

        $r2[19] = 308;

        $r2[20] = 282;

        $r2[21] = 344;

        $r2[22] = 332;

        $r2[23] = 326;

        $r2[24] = 300;

        $r2[25] = 278;

        $r2[26] = 436;

        $r2[27] = 434;

        $r2[28] = 428;

        $r2[29] = 422;

        $r2[30] = 406;

        $r2[31] = 410;

        $r2[32] = 364;

        $r2[33] = 358;

        $r2[34] = 310;

        $r2[35] = 314;

        $r2[36] = 302;

        $r2[37] = 468;

        $r2[38] = 466;

        $r2[39] = 458;

        $r2[40] = 366;

        $r2[41] = 374;

        $r2[42] = 430;

        $r2[43] = 294;

        $r2[44] = 474;

        $r2[45] = 470;

        $r2[46] = 306;

        $r2[47] = 350;

        <com.google.zxing.oned.Code93Reader: int[] CHARACTER_ENCODINGS> = $r2;

        $r2 = <com.google.zxing.oned.Code93Reader: int[] CHARACTER_ENCODINGS>;

        $i0 = $r2[47];

        <com.google.zxing.oned.Code93Reader: int ASTERISK_ENCODING> = $i0;

        return;
    }

    public void <init>()
    {
        com.google.zxing.oned.Code93Reader r0;
        java.lang.StringBuilder $r1;
        int[] $r2;

        r0 := @this: com.google.zxing.oned.Code93Reader;

        specialinvoke r0.<com.google.zxing.oned.OneDReader: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(20);

        r0.<com.google.zxing.oned.Code93Reader: java.lang.StringBuilder decodeRowResult> = $r1;

        $r2 = newarray (int)[6];

        r0.<com.google.zxing.oned.Code93Reader: int[] counters> = $r2;

        return;
    }

    public static void checkChecksums(java.lang.CharSequence)
    {
        int $i0, $i1;
        java.lang.CharSequence $r0;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = -2;

        $i1 = $i0 + $i1;

        staticinvoke <com.google.zxing.oned.Code93Reader: void checkOneChecksum(java.lang.CharSequence,int,int)>($r0, $i1, 20);

        $i1 = -1;

        $i0 = $i0 + $i1;

        staticinvoke <com.google.zxing.oned.Code93Reader: void checkOneChecksum(java.lang.CharSequence,int,int)>($r0, $i0, 15);

        return;
    }

    public static void checkOneChecksum(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r1;
        com.google.zxing.ChecksumException $r3;
        char $c5, $c7;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        char[] $r2;
        java.lang.String $r0;

        $r1 := @parameter0: java.lang.CharSequence;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = -1;

        $i2 = $i1 + $i2;

        $i3 = 0;

        $i4 = 1;

     label1:
        if $i2 < 0 goto label3;

        $c5 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        $r0 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*";

        $i6 = (int) $c5;

        $i6 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i6);

        $i6 = $i6 * $i4;

        $i3 = $i3 + $i6;

        $i4 = $i4 + 1;

        if $i4 <= $i0 goto label2;

        $i4 = 1;

     label2:
        $i6 = -1;

        $i2 = $i2 + $i6;

        goto label1;

     label3:
        $c5 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = <com.google.zxing.oned.Code93Reader: char[] ALPHABET>;

        $i1 = $i3 % 47;

        $c7 = $r2[$i1];

        $i1 = (int) $c5;

        $i0 = (int) $c7;

        if $i1 != $i0 goto label4;

        return;

     label4:
        $r3 = staticinvoke <com.google.zxing.ChecksumException: com.google.zxing.ChecksumException getChecksumInstance()>();

        goto label5;

     label5:
        throw $r3;
    }

    public static java.lang.String decodeExtended(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        char $c2, $c4;
        int $i0, $i1, $i3, $i5;
        java.lang.StringBuilder $r0, $r4;
        java.lang.String $r3;
        com.google.zxing.FormatException $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r4 = new java.lang.StringBuilder;

        $r0 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label18;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $i3 = (int) $c2;

        if $i3 < 97 goto label16;

        $i3 = (int) $c2;

        if $i3 > 100 goto label16;

        $i3 = -1;

        $i3 = $i0 + $i3;

        if $i1 >= $i3 goto label15;

        $i1 = $i1 + 1;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $i3 = (int) $c2;

        lookupswitch($i3)
        {
            case 97: goto label11;
            case 98: goto label08;
            case 99: goto label05;
            case 100: goto label03;
            default: goto label02;
        };

     label02:
        $c2 = 0;

        goto label14;

     label03:
        $i3 = (int) $c4;

        if $i3 < 65 goto label04;

        $i3 = (int) $c4;

        if $i3 > 90 goto label04;

        $i3 = (int) $c4;

        $i3 = $i3 + 32;

        goto label12;

     label04:
        $r2 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r2;

     label05:
        $i3 = (int) $c4;

        if $i3 < 65 goto label06;

        $i3 = (int) $c4;

        if $i3 > 79 goto label06;

        $i3 = (int) $c4;

        $i5 = -32;

        $i3 = $i3 + $i5;

        goto label12;

     label06:
        $i3 = (int) $c4;

        if $i3 != 90 goto label07;

        $c2 = 58;

        goto label14;

     label07:
        $r2 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r2;

     label08:
        $i3 = (int) $c4;

        if $i3 < 65 goto label09;

        $i3 = (int) $c4;

        if $i3 > 69 goto label09;

        $i3 = (int) $c4;

        $i5 = -38;

        $i3 = $i3 + $i5;

        goto label12;

     label09:
        $i3 = (int) $c4;

        if $i3 < 70 goto label10;

        $i3 = (int) $c4;

        if $i3 > 87 goto label10;

        $i3 = (int) $c4;

        $i5 = -11;

        $i3 = $i3 + $i5;

        goto label12;

     label10:
        $r2 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r2;

     label11:
        $i3 = (int) $c4;

        if $i3 < 65 goto label13;

        $i3 = (int) $c4;

        if $i3 > 90 goto label13;

        $i3 = (int) $c4;

        $i5 = -64;

        $i3 = $i3 + $i5;

     label12:
        $c2 = (char) $i3;

        goto label14;

     label13:
        $r2 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r2;

     label14:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label17;

     label15:
        $r2 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r2;

     label16:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label17:
        $i1 = $i1 + 1;

        goto label01;

     label18:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private int[] findAsteriskPattern(com.google.zxing.common.BitArray)
    {
        com.google.zxing.oned.Code93Reader r0;
        com.google.zxing.common.BitArray $r1;
        int[] $r2;
        com.google.zxing.NotFoundException $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: com.google.zxing.oned.Code93Reader;

        $r1 := @parameter0: com.google.zxing.common.BitArray;

        $i1 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getSize()>();

        $i2 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getNextSet(int)>(0);

        $i3 = $i2;

        $r2 = r0.<com.google.zxing.oned.Code93Reader: int[] counters>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);

        $r2 = r0.<com.google.zxing.oned.Code93Reader: int[] counters>;

        $i0 = lengthof $r2;

        $z0 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i1 goto label7;

        $z1 = virtualinvoke $r1.<com.google.zxing.common.BitArray: boolean get(int)>($i3);

        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label2;

        $i5 = $r2[$i4];

        $i5 = $i5 + 1;

        $r2[$i4] = $i5;

        goto label6;

     label2:
        $i5 = -1;

        $i5 = $i0 + $i5;

        if $i4 != $i5 goto label4;

        $i6 = staticinvoke <com.google.zxing.oned.Code93Reader: int toPattern(int[])>($r2);

        $i7 = <com.google.zxing.oned.Code93Reader: int ASTERISK_ENCODING>;

        if $i6 != $i7 goto label3;

        $r2 = newarray (int)[2];

        $r2[0] = $i2;

        $r2[1] = $i3;

        return $r2;

     label3:
        $i6 = $r2[0];

        $i7 = $r2[1];

        $i6 = $i6 + $i7;

        $i2 = $i2 + $i6;

        $i6 = -2;

        $i6 = $i0 + $i6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 2, $r2, 0, $i6);

        $r2[$i6] = 0;

        $r2[$i5] = 0;

        $i5 = -1;

        $i4 = $i4 + $i5;

        goto label5;

     label4:
        $i4 = $i4 + 1;

     label5:
        $r2[$i4] = 1;

        $z0 = $z0 ^ 1;

     label6:
        $i3 = $i3 + 1;

        goto label1;

     label7:
        $r3 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        goto label8;

     label8:
        throw $r3;
    }

    public static char patternToChar(int)
    {
        com.google.zxing.NotFoundException $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        char[] $r2;
        char $c3;

        $i1 := @parameter0: int;

        $i2 = 0;

     label1:
        $r1 = <com.google.zxing.oned.Code93Reader: int[] CHARACTER_ENCODINGS>;

        $i0 = lengthof $r1;

        if $i2 >= $i0 goto label3;

        $i0 = $r1[$i2];

        if $i0 != $i1 goto label2;

        $r2 = <com.google.zxing.oned.Code93Reader: char[] ALPHABET>;

        $c3 = $r2[$i2];

        return $c3;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r0 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        goto label4;

     label4:
        throw $r0;
    }

    public static int toPattern(int[])
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @parameter0: int[];

        $i0 = lengthof $r0;

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label01:
        if $i2 >= $i1 goto label02;

        $i4 = $r0[$i2];

        $i3 = $i3 + $i4;

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $i1 = 0;

        $i2 = 0;

     label03:
        if $i1 >= $i0 goto label11;

        $i4 = $r0[$i1];

        $i4 = $i4 << 8;

        $i4 = $i4 * 9;

        $i5 = $i4 / $i3;

        $i4 = $i5 >> 8;

        $i5 = $i5 & 255;

        if $i5 <= 127 goto label04;

        $i4 = $i4 + 1;

     label04:
        if $i4 < 1 goto label10;

        if $i4 <= 4 goto label05;

        goto label10;

     label05:
        $i5 = $i1 & 1;

        if $i5 != 0 goto label08;

        $i5 = $i2;

        $i2 = 0;

     label06:
        if $i2 >= $i4 goto label07;

        $i5 = $i5 << 1;

        $i5 = $i5 | 1;

        $i2 = $i2 + 1;

        goto label06;

     label07:
        $i2 = $i5;

        goto label09;

     label08:
        $i2 = $i2 << $i4;

     label09:
        $i1 = $i1 + 1;

        goto label03;

     label10:
        $i0 = -1;

        return $i0;

     label11:
        return $i2;
    }

    public com.google.zxing.Result decodeRow(int, com.google.zxing.common.BitArray, java.util.Map)
    {
        com.google.zxing.oned.Code93Reader r0;
        com.google.zxing.Result $r11;
        com.google.zxing.ResultPoint $r10;
        int[] $r3, $r4;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        java.lang.String $r6;
        boolean $z0;
        char $c4;
        com.google.zxing.common.BitArray $r1;
        com.google.zxing.ResultPoint[] $r7;
        com.google.zxing.NotFoundException $r9;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r5;
        com.google.zxing.BarcodeFormat $r8;

        r0 := @this: com.google.zxing.oned.Code93Reader;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.zxing.common.BitArray;

        $r2 := @parameter2: java.util.Map;

        $r3 = specialinvoke r0.<com.google.zxing.oned.Code93Reader: int[] findAsteriskPattern(com.google.zxing.common.BitArray)>($r1);

        $i1 = $r3[1];

        $i1 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getNextSet(int)>($i1);

        $i2 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getSize()>();

        $r4 = r0.<com.google.zxing.oned.Code93Reader: int[] counters>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r4, 0);

        $r5 = r0.<com.google.zxing.oned.Code93Reader: java.lang.StringBuilder decodeRowResult>;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>(0);

     label01:
        staticinvoke <com.google.zxing.oned.OneDReader: void recordPattern(com.google.zxing.common.BitArray,int,int[])>($r1, $i1, $r4);

        $i3 = staticinvoke <com.google.zxing.oned.Code93Reader: int toPattern(int[])>($r4);

        if $i3 < 0 goto label09;

        $c4 = staticinvoke <com.google.zxing.oned.Code93Reader: char patternToChar(int)>($i3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i3 = lengthof $r4;

        $i5 = $i1;

        $i6 = 0;

     label02:
        if $i6 >= $i3 goto label03;

        $i7 = $r4[$i6];

        $i5 = $i5 + $i7;

        $i6 = $i6 + 1;

        goto label02;

     label03:
        $i5 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getNextSet(int)>($i5);

        $i3 = (int) $c4;

        if $i3 != 42 goto label08;

        $i3 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        $i3 = $i3 - 1;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i3);

        $i6 = lengthof $r4;

        $i7 = 0;

        $i3 = 0;

     label04:
        if $i7 >= $i6 goto label05;

        $i8 = $r4[$i7];

        $i3 = $i3 + $i8;

        $i7 = $i7 + 1;

        goto label04;

     label05:
        if $i5 == $i2 goto label07;

        $z0 = virtualinvoke $r1.<com.google.zxing.common.BitArray: boolean get(int)>($i5);

        if $z0 == 0 goto label07;

        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        if $i2 < 2 goto label06;

        staticinvoke <com.google.zxing.oned.Code93Reader: void checkChecksums(java.lang.CharSequence)>($r5);

        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        $i2 = $i2 - 2;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>($i2);

        $r6 = staticinvoke <com.google.zxing.oned.Code93Reader: java.lang.String decodeExtended(java.lang.CharSequence)>($r5);

        $i2 = $r3[1];

        $i5 = $r3[0];

        $i2 = $i2 + $i5;

        $f0 = (float) $i2;

        $f0 = $f0 / 2.0F;

        $f1 = (float) $i1;

        $f2 = (float) $i3;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        $r11 = new com.google.zxing.Result;

        $r7 = newarray (com.google.zxing.ResultPoint)[2];

        $r10 = new com.google.zxing.ResultPoint;

        $f2 = (float) $i0;

        specialinvoke $r10.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f2);

        $r7[0] = $r10;

        $r10 = new com.google.zxing.ResultPoint;

        specialinvoke $r10.<com.google.zxing.ResultPoint: void <init>(float,float)>($f1, $f2);

        $r7[1] = $r10;

        $r8 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_93>;

        specialinvoke $r11.<com.google.zxing.Result: void <init>(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat)>($r6, null, $r7, $r8);

        return $r11;

     label06:
        $r9 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r9;

     label07:
        $r9 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r9;

     label08:
        $i1 = $i5;

        goto label01;

     label09:
        $r9 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        goto label10;

     label10:
        throw $r9;
    }
}
