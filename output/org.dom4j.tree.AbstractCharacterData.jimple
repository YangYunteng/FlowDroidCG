public abstract class org.dom4j.tree.AbstractCharacterData extends org.dom4j.tree.AbstractNode implements org.dom4j.CharacterData
{

    public void <init>()
    {
        org.dom4j.tree.AbstractCharacterData r0;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        specialinvoke r0.<org.dom4j.tree.AbstractNode: void <init>()>();

        return;
    }

    public void appendText(java.lang.String)
    {
        org.dom4j.tree.AbstractCharacterData r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        $r2 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r0.<org.dom4j.tree.AbstractNode: java.lang.String getText()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.dom4j.tree.AbstractNode: void setText(java.lang.String)>($r2);

        return;
    }

    public java.lang.String getPath(org.dom4j.Element)
    {
        org.dom4j.tree.AbstractCharacterData r0;
        java.lang.StringBuilder $r1;
        org.dom4j.Element $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        $r2 := @parameter0: org.dom4j.Element;

        $r3 = virtualinvoke r0.<org.dom4j.tree.AbstractNode: org.dom4j.Element getParent()>();

        if $r3 == null goto label1;

        if $r3 == $r2 goto label1;

        $r1 = new java.lang.StringBuilder;

        $r4 = interfaceinvoke $r3.<org.dom4j.Node: java.lang.String getPath(org.dom4j.Element)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/text()");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "text()";
    }

    public java.lang.String getUniquePath(org.dom4j.Element)
    {
        org.dom4j.tree.AbstractCharacterData r0;
        java.lang.StringBuilder $r1;
        org.dom4j.Element $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        $r2 := @parameter0: org.dom4j.Element;

        $r3 = virtualinvoke r0.<org.dom4j.tree.AbstractNode: org.dom4j.Element getParent()>();

        if $r3 == null goto label1;

        if $r3 == $r2 goto label1;

        $r1 = new java.lang.StringBuilder;

        $r4 = interfaceinvoke $r3.<org.dom4j.Node: java.lang.String getUniquePath(org.dom4j.Element)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/text()");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "text()";
    }
}
