public final class b.h.a.c extends java.lang.Object
{
    public final b.i.h.e a;
    public final b.f.i b;
    public final java.util.ArrayList c;
    public final java.util.HashSet d;

    public void <init>()
    {
        b.i.h.f $r1;
        java.util.HashSet $r4;
        b.h.a.c r0;
        b.f.i $r2;
        java.util.ArrayList $r3;

        r0 := @this: b.h.a.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new b.i.h.f;

        specialinvoke $r1.<b.i.h.f: void <init>(int)>(10);

        r0.<b.h.a.c: b.i.h.e a> = $r1;

        $r2 = new b.f.i;

        specialinvoke $r2.<b.f.i: void <init>()>();

        r0.<b.h.a.c: b.f.i b> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.h.a.c: java.util.ArrayList c> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<b.h.a.c: java.util.HashSet d> = $r4;

        return;
    }

    public void a()
    {
        b.h.a.c r0;
        int $i0, $i1;
        java.lang.Object $r2;
        b.f.i $r1;
        java.util.ArrayList $r3;

        r0 := @this: b.h.a.c;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $i0 = virtualinvoke $r1.<b.f.i: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $r2 = virtualinvoke $r1.<b.f.i: java.lang.Object e(int)>($i1);

        $r3 = (java.util.ArrayList) $r2;

        if $r3 == null goto label2;

        virtualinvoke r0.<b.h.a.c: void a(java.util.ArrayList)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r1 = r0.<b.h.a.c: b.f.i b>;

        virtualinvoke $r1.<b.f.i: void clear()>();

        return;
    }

    public void a(java.lang.Object)
    {
        b.h.a.c r0;
        java.lang.Object $r1;
        b.f.i $r2;
        boolean $z0;

        r0 := @this: b.h.a.c;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.h.a.c: b.f.i b>;

        $z0 = virtualinvoke $r2.<b.f.i: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<b.h.a.c: b.f.i b>;

        virtualinvoke $r2.<b.f.i: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, null);

     label1:
        return;
    }

    public void a(java.lang.Object, java.lang.Object)
    {
        java.lang.IllegalArgumentException $r7;
        b.f.i $r1;
        java.util.ArrayList $r5, $r6;
        b.h.a.c r0;
        java.lang.Object $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: b.h.a.c;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $z0 = virtualinvoke $r1.<b.f.i: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $z0 = virtualinvoke $r1.<b.f.i: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $r4 = virtualinvoke $r1.<b.f.i: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.ArrayList) $r4;

        if $r5 != null goto label1;

        $r6 = virtualinvoke r0.<b.h.a.c: java.util.ArrayList b()>();

        $r5 = $r6;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        virtualinvoke $r1.<b.f.i: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

     label1:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("All nodes must be present in the graph before being added as an edge");

        throw $r7;
    }

    public final void a(java.lang.Object, java.util.ArrayList, java.util.HashSet)
    {
        java.lang.RuntimeException $r7;
        b.f.i $r4;
        java.util.ArrayList $r3, $r6;
        java.util.HashSet $r1;
        b.h.a.c r0;
        int $i0, $i1;
        java.lang.Object $r2, $r5;
        boolean $z0;

        r0 := @this: b.h.a.c;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.util.ArrayList;

        $r1 := @parameter2: java.util.HashSet;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label4;

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<b.h.a.c: b.f.i b>;

        $r5 = virtualinvoke $r4.<b.f.i: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (java.util.ArrayList) $r5;

        if $r6 == null goto label3;

        $i0 = 0;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label2:
        if $i0 >= $i1 goto label3;

        $r5 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        virtualinvoke r0.<b.h.a.c: void a(java.lang.Object,java.util.ArrayList,java.util.HashSet)>($r5, $r3, $r1);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;

     label4:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("This graph contains cyclic dependencies");

        goto label5;

     label5:
        throw $r7;
    }

    public final void a(java.util.ArrayList)
    {
        b.i.h.e $r2;
        b.h.a.c r0;
        java.util.ArrayList $r1;

        r0 := @this: b.h.a.c;

        $r1 := @parameter0: java.util.ArrayList;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<b.h.a.c: b.i.h.e a>;

        interfaceinvoke $r2.<b.i.h.e: boolean a(java.lang.Object)>($r1);

        return;
    }

    public final java.util.ArrayList b()
    {
        b.i.h.e $r2;
        b.h.a.c r0;
        java.lang.Object $r1;
        java.util.ArrayList $r3;

        r0 := @this: b.h.a.c;

        $r2 = r0.<b.h.a.c: b.i.h.e a>;

        $r1 = interfaceinvoke $r2.<b.i.h.e: java.lang.Object a()>();

        $r3 = (java.util.ArrayList) $r1;

        if $r3 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        return $r3;
    }

    public boolean b(java.lang.Object)
    {
        b.h.a.c r0;
        java.lang.Object $r2;
        b.f.i $r1;
        boolean $z0;

        r0 := @this: b.h.a.c;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $z0 = virtualinvoke $r1.<b.f.i: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public java.util.ArrayList c()
    {
        java.util.HashSet $r2;
        b.h.a.c r0;
        int $i0, $i1;
        java.lang.Object $r4;
        b.f.i $r3;
        java.util.ArrayList $r1;

        r0 := @this: b.h.a.c;

        $r1 = r0.<b.h.a.c: java.util.ArrayList c>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<b.h.a.c: java.util.HashSet d>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

        $r3 = r0.<b.h.a.c: b.f.i b>;

        $i0 = virtualinvoke $r3.<b.f.i: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = r0.<b.h.a.c: b.f.i b>;

        $r4 = virtualinvoke $r3.<b.f.i: java.lang.Object c(int)>($i1);

        $r1 = r0.<b.h.a.c: java.util.ArrayList c>;

        $r2 = r0.<b.h.a.c: java.util.HashSet d>;

        virtualinvoke r0.<b.h.a.c: void a(java.lang.Object,java.util.ArrayList,java.util.HashSet)>($r4, $r1, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r1 = r0.<b.h.a.c: java.util.ArrayList c>;

        return $r1;
    }

    public java.util.List c(java.lang.Object)
    {
        java.util.List $r3;
        b.h.a.c r0;
        java.lang.Object $r2;
        b.f.i $r1;

        r0 := @this: b.h.a.c;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.h.a.c: b.f.i b>;

        $r2 = virtualinvoke $r1.<b.f.i: java.lang.Object get(java.lang.Object)>($r2);

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.util.List d(java.lang.Object)
    {
        b.f.i $r2;
        java.util.ArrayList $r3, $r5;
        b.h.a.c r0;
        int $i0, $i1;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: b.h.a.c;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.h.a.c: b.f.i b>;

        $i0 = virtualinvoke $r2.<b.f.i: int size()>();

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = r0.<b.h.a.c: b.f.i b>;

        $r4 = virtualinvoke $r2.<b.f.i: java.lang.Object e(int)>($i1);

        $r5 = (java.util.ArrayList) $r4;

        if $r5 == null goto label3;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        if $r3 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label2:
        $r2 = r0.<b.h.a.c: b.f.i b>;

        $r4 = virtualinvoke $r2.<b.f.i: java.lang.Object c(int)>($i1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return $r3;
    }

    public boolean e(java.lang.Object)
    {
        b.f.i $r2;
        java.util.ArrayList $r4;
        b.h.a.c r0;
        int $i0, $i1;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: b.h.a.c;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.h.a.c: b.f.i b>;

        $i0 = virtualinvoke $r2.<b.f.i: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = r0.<b.h.a.c: b.f.i b>;

        $r3 = virtualinvoke $r2.<b.f.i: java.lang.Object e(int)>($i1);

        $r4 = (java.util.ArrayList) $r3;

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
}
