public class com.google.firebase.crashlytics.internal.settings.CachedSettingsIo extends java.lang.Object
{
    public static final java.lang.String SETTINGS_CACHE_FILENAME;
    public final android.content.Context context;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.firebase.crashlytics.internal.settings.CachedSettingsIo r0;

        r0 := @this: com.google.firebase.crashlytics.internal.settings.CachedSettingsIo;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.settings.CachedSettingsIo: android.content.Context context> = $r1;

        return;
    }

    private java.io.File getSettingsFile()
    {
        android.content.Context $r4;
        com.google.firebase.crashlytics.internal.settings.CachedSettingsIo r0;
        java.io.File $r1, $r2;
        com.google.firebase.crashlytics.internal.persistence.FileStoreImpl $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.settings.CachedSettingsIo;

        $r1 = new java.io.File;

        $r3 = new com.google.firebase.crashlytics.internal.persistence.FileStoreImpl;

        $r4 = r0.<com.google.firebase.crashlytics.internal.settings.CachedSettingsIo: android.content.Context context>;

        specialinvoke $r3.<com.google.firebase.crashlytics.internal.persistence.FileStoreImpl: void <init>(android.content.Context)>($r4);

        $r2 = virtualinvoke $r3.<com.google.firebase.crashlytics.internal.persistence.FileStoreImpl: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "com.crashlytics.settings.json");

        return $r1;
    }

    public org.json.JSONObject readCachedSettings()
    {
        java.lang.Throwable $r8, $r9;
        java.io.FileInputStream $r2, $r4;
        com.google.firebase.crashlytics.internal.settings.CachedSettingsIo r0;
        java.io.File $r3;
        java.lang.Exception $r7;
        com.google.firebase.crashlytics.internal.Logger $r1;
        org.json.JSONObject $r6;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.settings.CachedSettingsIo;

        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Reading cached settings...");

        $r2 = null;

     label01:
        $r3 = specialinvoke r0.<com.google.firebase.crashlytics.internal.settings.CachedSettingsIo: java.io.File getSettingsFile()>();

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label10;

     label03:
        $r4 = new java.io.FileInputStream;

     label04:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label05:
        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>($r4);

     label06:
        $r6 = new org.json.JSONObject;

     label07:
        specialinvoke $r6.<org.json.JSONObject: void <init>(java.lang.String)>($r5);

     label08:
        $r2 = $r4;

        goto label12;

     label09:
        $r7 := @caughtexception;

        goto label15;

     label10:
        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("No cached settings found.");

     label11:
        $r6 = null;

     label12:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r2, "Error while closing settings cache file.");

        return $r6;

     label13:
        $r8 := @caughtexception;

        goto label18;

     label14:
        $r7 := @caughtexception;

        $r4 = null;

     label15:
        $r1 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r1.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Failed to fetch cached settings", $r7);

     label16:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r4, "Error while closing settings cache file.");

        return null;

     label17:
        $r9 := @caughtexception;

        $r8 = $r9;

        $r2 = $r4;

     label18:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r2, "Error while closing settings cache file.");

        throw $r8;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label05 with label13;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label05 to label08 with label17;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void writeCachedSettings(long, org.json.JSONObject)
    {
        java.lang.Throwable $r7;
        java.io.FileWriter $r3, $r4;
        long $l0;
        com.google.firebase.crashlytics.internal.settings.CachedSettingsIo r0;
        java.io.File $r5;
        java.lang.Exception $r8;
        com.google.firebase.crashlytics.internal.Logger $r2;
        org.json.JSONObject $r1;
        java.lang.String $r6;

        r0 := @this: com.google.firebase.crashlytics.internal.settings.CachedSettingsIo;

        $l0 := @parameter0: long;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Writing settings to cache file...");

        if $r1 == null goto label13;

        $r3 = null;

     label01:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("expires_at", $l0);

     label02:
        $r4 = new java.io.FileWriter;

     label03:
        $r5 = specialinvoke r0.<com.google.firebase.crashlytics.internal.settings.CachedSettingsIo: java.io.File getSettingsFile()>();

        specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File)>($r5);

     label04:
        $r6 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.FileWriter: void write(java.lang.String)>($r6);

        virtualinvoke $r4.<java.io.FileWriter: void flush()>();

     label05:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r4, "Failed to close settings writer.");

        return;

     label06:
        $r7 := @caughtexception;

        $r3 = $r4;

        goto label12;

     label07:
        $r8 := @caughtexception;

        $r3 = $r4;

        goto label10;

     label08:
        $r7 := @caughtexception;

        goto label12;

     label09:
        $r8 := @caughtexception;

     label10:
        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Failed to cache settings", $r8);

     label11:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r3, "Failed to close settings writer.");

        return;

     label12:
        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r3, "Failed to close settings writer.");

        throw $r7;

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public static void <clinit>()
    {
        <com.google.firebase.crashlytics.internal.settings.CachedSettingsIo: java.lang.String SETTINGS_CACHE_FILENAME> = "com.crashlytics.settings.json";

        return;
    }
}
