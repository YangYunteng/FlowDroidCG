public class com.google.common.primitives.ImmutableDoubleArray$AsList extends java.util.AbstractList implements java.util.RandomAccess, java.io.Serializable
{
    public final com.google.common.primitives.ImmutableDoubleArray parent;

    public void <init>(com.google.common.primitives.ImmutableDoubleArray)
    {
        com.google.common.primitives.ImmutableDoubleArray $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 := @parameter0: com.google.common.primitives.ImmutableDoubleArray;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent> = $r1;

        return;
    }

    public void <init>(com.google.common.primitives.ImmutableDoubleArray, com.google.common.primitives.ImmutableDoubleArray$1)
    {
        com.google.common.primitives.ImmutableDoubleArray $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;
        com.google.common.primitives.ImmutableDoubleArray$1 $r2;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 := @parameter0: com.google.common.primitives.ImmutableDoubleArray;

        $r2 := @parameter1: com.google.common.primitives.ImmutableDoubleArray$1;

        specialinvoke r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: void <init>(com.google.common.primitives.ImmutableDoubleArray)>($r1);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Iterator $r6;
        java.lang.Double $r8;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0, $r2;
        double[] $r7;
        com.google.common.primitives.ImmutableDoubleArray $r3, $r4;
        java.util.List $r5;
        int $i0, $i1;
        java.lang.Object $r1;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.primitives.ImmutableDoubleArray$AsList;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.primitives.ImmutableDoubleArray$AsList) $r1;

        $r3 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r4 = $r2.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $z0 = virtualinvoke $r3.<com.google.common.primitives.ImmutableDoubleArray: boolean equals(java.lang.Object)>($r4);

        return $z0;

     label1:
        $z0 = $r1 instanceof java.util.List;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r5 = (java.util.List) $r1;

        $i0 = virtualinvoke r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: int size()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r3 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $i1 = staticinvoke <com.google.common.primitives.ImmutableDoubleArray: int access$100(com.google.common.primitives.ImmutableDoubleArray)>($r3);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r1 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r1 instanceof java.lang.Double;

        if $z0 == 0 goto label6;

        $r3 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r7 = staticinvoke <com.google.common.primitives.ImmutableDoubleArray: double[] access$000(com.google.common.primitives.ImmutableDoubleArray)>($r3);

        $d0 = $r7[$i1];

        $r8 = (java.lang.Double) $r1;

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $z0 = staticinvoke <com.google.common.primitives.ImmutableDoubleArray: boolean access$600(double,double)>($d0, $d1);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        return 0;

     label7:
        return 1;
    }

    public java.lang.Double get(int)
    {
        com.google.common.primitives.ImmutableDoubleArray $r1;
        java.lang.Double $r2;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;
        int $i0;
        double $d0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $d0 = virtualinvoke $r1.<com.google.common.primitives.ImmutableDoubleArray: double get(int)>($i0);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    public volatile java.lang.Object get(int)
    {
        int $i0;
        java.lang.Double $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: java.lang.Double get(int)>($i0);

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        com.google.common.primitives.ImmutableDoubleArray $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $i0 = virtualinvoke $r1.<com.google.common.primitives.ImmutableDoubleArray: int hashCode()>();

        return $i0;
    }

    public int indexOf(java.lang.Object)
    {
        com.google.common.primitives.ImmutableDoubleArray $r2;
        java.lang.Double $r3;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.Double;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r3 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $i0 = virtualinvoke $r2.<com.google.common.primitives.ImmutableDoubleArray: int indexOf(double)>($d0);

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        com.google.common.primitives.ImmutableDoubleArray $r2;
        java.lang.Double $r3;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.Double;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r3 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $i0 = virtualinvoke $r2.<com.google.common.primitives.ImmutableDoubleArray: int lastIndexOf(double)>($d0);

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public int size()
    {
        int $i0;
        com.google.common.primitives.ImmutableDoubleArray $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r1 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $i0 = virtualinvoke $r1.<com.google.common.primitives.ImmutableDoubleArray: int length()>();

        return $i0;
    }

    public java.util.Spliterator spliterator()
    {
        java.util.Spliterator$OfDouble $r1;
        com.google.common.primitives.ImmutableDoubleArray $r2;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r2 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r1 = staticinvoke <com.google.common.primitives.ImmutableDoubleArray: java.util.Spliterator$OfDouble access$500(com.google.common.primitives.ImmutableDoubleArray)>($r2);

        return $r1;
    }

    public java.util.List subList(int, int)
    {
        com.google.common.primitives.ImmutableDoubleArray $r1;
        java.util.List $r2;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r1 = virtualinvoke $r1.<com.google.common.primitives.ImmutableDoubleArray: com.google.common.primitives.ImmutableDoubleArray subArray(int,int)>($i1, $i0);

        $r2 = virtualinvoke $r1.<com.google.common.primitives.ImmutableDoubleArray: java.util.List asList()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.google.common.primitives.ImmutableDoubleArray $r2;
        java.lang.String $r1;
        com.google.common.primitives.ImmutableDoubleArray$AsList r0;

        r0 := @this: com.google.common.primitives.ImmutableDoubleArray$AsList;

        $r2 = r0.<com.google.common.primitives.ImmutableDoubleArray$AsList: com.google.common.primitives.ImmutableDoubleArray parent>;

        $r1 = virtualinvoke $r2.<com.google.common.primitives.ImmutableDoubleArray: java.lang.String toString()>();

        return $r1;
    }
}
