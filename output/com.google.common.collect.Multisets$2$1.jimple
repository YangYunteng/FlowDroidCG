public class com.google.common.collect.Multisets$2$1 extends com.google.common.collect.AbstractIterator
{
    public final com.google.common.collect.Multisets$2 this$0;
    public final java.util.Iterator val$iterator1;

    public void <init>(com.google.common.collect.Multisets$2, java.util.Iterator)
    {
        java.util.Iterator $r2;
        com.google.common.collect.Multisets$2$1 r0;
        com.google.common.collect.Multisets$2 $r1;

        r0 := @this: com.google.common.collect.Multisets$2$1;

        $r1 := @parameter0: com.google.common.collect.Multisets$2;

        $r2 := @parameter1: java.util.Iterator;

        r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0> = $r1;

        r0.<com.google.common.collect.Multisets$2$1: java.util.Iterator val$iterator1> = $r2;

        specialinvoke r0.<com.google.common.collect.AbstractIterator: void <init>()>();

        return;
    }

    public com.google.common.collect.Multiset$Entry computeNext()
    {
        java.util.Iterator $r1;
        com.google.common.collect.Multiset $r5;
        com.google.common.collect.Multiset$Entry $r3;
        com.google.common.collect.Multisets$2$1 r0;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;
        com.google.common.collect.Multisets$2 $r4;

        r0 := @this: com.google.common.collect.Multisets$2$1;

     label1:
        $r1 = r0.<com.google.common.collect.Multisets$2$1: java.util.Iterator val$iterator1>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.common.collect.Multisets$2$1: java.util.Iterator val$iterator1>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.google.common.collect.Multiset$Entry) $r2;

        $r2 = interfaceinvoke $r3.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r3.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $r4 = r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0>;

        $r5 = $r4.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2>;

        $i1 = interfaceinvoke $r5.<com.google.common.collect.Multiset: int count(java.lang.Object)>($r2);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        if $i0 <= 0 goto label1;

        $r3 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r2, $i0);

        return $r3;

     label2:
        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()>();

        $r3 = (com.google.common.collect.Multiset$Entry) $r2;

        return $r3;
    }

    public volatile java.lang.Object computeNext()
    {
        com.google.common.collect.Multiset$Entry $r1;
        com.google.common.collect.Multisets$2$1 r0;

        r0 := @this: com.google.common.collect.Multisets$2$1;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multiset$Entry computeNext()>();

        return $r1;
    }
}
