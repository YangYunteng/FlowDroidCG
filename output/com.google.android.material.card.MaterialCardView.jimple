public class com.google.android.material.card.MaterialCardView extends androidx.cardview.widget.CardView implements android.widget.Checkable, com.google.android.material.shape.Shapeable
{
    public static final java.lang.String ACCESSIBILITY_CLASS_NAME;
    public static final int[] CHECKABLE_STATE_SET;
    public static final int[] CHECKED_STATE_SET;
    public static final int DEF_STYLE_RES;
    public static final int[] DRAGGED_STATE_SET;
    public static final java.lang.String LOG_TAG;
    public final com.google.android.material.card.MaterialCardViewHelper cardViewHelper;
    public boolean checked;
    public boolean dragged;
    public boolean isParentCardViewDoneInitializing;
    public com.google.android.material.card.MaterialCardView$OnCheckedChangeListener onCheckedChangeListener;

    static void <clinit>()
    {
        int $i0;
        int[] $r0;

        <com.google.android.material.card.MaterialCardView: java.lang.String LOG_TAG> = "MaterialCardView";

        <com.google.android.material.card.MaterialCardView: java.lang.String ACCESSIBILITY_CLASS_NAME> = "androidx.cardview.widget.CardView";

        $r0 = newarray (int)[1];

        $r0[0] = 16842911;

        <com.google.android.material.card.MaterialCardView: int[] CHECKABLE_STATE_SET> = $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <com.google.android.material.card.MaterialCardView: int[] CHECKED_STATE_SET> = $r0;

        $r0 = newarray (int)[1];

        $i0 = <com.google.android.material.R$attr: int state_dragged>;

        $r0[0] = $i0;

        <com.google.android.material.card.MaterialCardView: int[] DRAGGED_STATE_SET> = $r0;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_CardView>;

        <com.google.android.material.card.MaterialCardView: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.google.android.material.card.MaterialCardView r0;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int materialCardViewStyle>;

        specialinvoke r0.<com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r3;
        com.google.android.material.card.MaterialCardView r0;
        android.content.res.TypedArray $r5;
        android.content.res.ColorStateList $r7;
        com.google.android.material.card.MaterialCardViewHelper $r6;
        android.util.AttributeSet $r4;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.card.MaterialCardView: int DEF_STYLE_RES>;

        $r3 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r3, $r4, $i1, $i0);

        specialinvoke r0.<androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r4, $i1);

        r0.<com.google.android.material.card.MaterialCardView: boolean checked> = 0;

        r0.<com.google.android.material.card.MaterialCardView: boolean dragged> = 0;

        r0.<com.google.android.material.card.MaterialCardView: boolean isParentCardViewDoneInitializing> = 1;

        $r3 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r1 = <com.google.android.material.R$styleable: int[] MaterialCardView>;

        $i0 = <com.google.android.material.card.MaterialCardView: int DEF_STYLE_RES>;

        $r2 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r3, $r4, $r1, $i1, $i0, $r2);

        $r6 = new com.google.android.material.card.MaterialCardViewHelper;

        $i0 = <com.google.android.material.card.MaterialCardView: int DEF_STYLE_RES>;

        specialinvoke $r6.<com.google.android.material.card.MaterialCardViewHelper: void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int)>(r0, $r4, $i1, $i0);

        r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper> = $r6;

        $r6 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r7 = specialinvoke r0.<androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()>();

        virtualinvoke $r6.<com.google.android.material.card.MaterialCardViewHelper: void setCardBackgroundColor(android.content.res.ColorStateList)>($r7);

        $r6 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $i1 = specialinvoke r0.<androidx.cardview.widget.CardView: int getContentPaddingLeft()>();

        $i0 = specialinvoke r0.<androidx.cardview.widget.CardView: int getContentPaddingTop()>();

        $i2 = specialinvoke r0.<androidx.cardview.widget.CardView: int getContentPaddingRight()>();

        $i3 = specialinvoke r0.<androidx.cardview.widget.CardView: int getContentPaddingBottom()>();

        virtualinvoke $r6.<com.google.android.material.card.MaterialCardViewHelper: void setUserContentPadding(int,int,int,int)>($i1, $i0, $i2, $i3);

        $r6 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r6.<com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>($r5);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public static float access$001(com.google.android.material.card.MaterialCardView)
    {
        float $f0;
        com.google.android.material.card.MaterialCardView $r0;

        $r0 := @parameter0: com.google.android.material.card.MaterialCardView;

        $f0 = specialinvoke $r0.<androidx.cardview.widget.CardView: float getRadius()>();

        return $f0;
    }

    private void forceRippleRedrawIfNeeded()
    {
        int $i0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 26 goto label1;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void forceRippleRedraw()>();

     label1:
        return;
    }

    private android.graphics.RectF getBoundsAsRectF()
    {
        android.graphics.RectF $r1;
        android.graphics.Rect $r4;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        com.google.android.material.shape.MaterialShapeDrawable $r3;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r3 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable getBackground()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r1.<android.graphics.RectF: void set(android.graphics.Rect)>($r4);

        return $r1;
    }

    public android.content.res.ColorStateList getCardBackgroundColor()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getCardBackgroundColor()>();

        return $r1;
    }

    public android.content.res.ColorStateList getCardForegroundColor()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getCardForegroundColor()>();

        return $r1;
    }

    public float getCardViewRadius()
    {
        float $f0;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $f0 = staticinvoke <com.google.android.material.card.MaterialCardView: float access$001(com.google.android.material.card.MaterialCardView)>(r0);

        return $f0;
    }

    public android.graphics.drawable.Drawable getCheckedIcon()
    {
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getCheckedIcon()>();

        return $r1;
    }

    public android.content.res.ColorStateList getCheckedIconTint()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getCheckedIconTint()>();

        return $r1;
    }

    public int getContentPaddingBottom()
    {
        android.graphics.Rect $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        int i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect getUserContentPadding()>();

        i0 = $r1.<android.graphics.Rect: int bottom>;

        return i0;
    }

    public int getContentPaddingLeft()
    {
        android.graphics.Rect $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        int i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect getUserContentPadding()>();

        i0 = $r1.<android.graphics.Rect: int left>;

        return i0;
    }

    public int getContentPaddingRight()
    {
        android.graphics.Rect $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        int i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect getUserContentPadding()>();

        i0 = $r1.<android.graphics.Rect: int right>;

        return i0;
    }

    public int getContentPaddingTop()
    {
        android.graphics.Rect $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        int i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect getUserContentPadding()>();

        i0 = $r1.<android.graphics.Rect: int top>;

        return i0;
    }

    public float getProgress()
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $f0 = virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: float getProgress()>();

        return $f0;
    }

    public float getRadius()
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $f0 = virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: float getCornerRadius()>();

        return $f0;
    }

    public android.content.res.ColorStateList getRippleColor()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getRippleColor()>();

        return $r1;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>();

        return $r1;
    }

    public int getStrokeColor()
    {
        int $i0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $i0 = virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: int getStrokeColor()>();

        return $i0;
    }

    public android.content.res.ColorStateList getStrokeColorStateList()
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getStrokeColorStateList()>();

        return $r1;
    }

    public int getStrokeWidth()
    {
        int $i0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $i0 = virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: int getStrokeWidth()>();

        return $i0;
    }

    public boolean isCheckable()
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isChecked()
    {
        com.google.android.material.card.MaterialCardView r0;
        boolean z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        z0 = r0.<com.google.android.material.card.MaterialCardView: boolean checked>;

        return z0;
    }

    public boolean isDragged()
    {
        com.google.android.material.card.MaterialCardView r0;
        boolean z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        z0 = r0.<com.google.android.material.card.MaterialCardView: boolean dragged>;

        return z0;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r1 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable getBackground()>();

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>(r0, $r1);

        return;
    }

    public int[] onCreateDrawableState(int)
    {
        com.google.android.material.card.MaterialCardView r0;
        int[] $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $i0 = $i0 + 3;

        $r1 = specialinvoke r0.<android.widget.FrameLayout: int[] onCreateDrawableState(int)>($i0);

        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        $r2 = <com.google.android.material.card.MaterialCardView: int[] CHECKABLE_STATE_SET>;

        staticinvoke <android.widget.FrameLayout: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isChecked()>();

        if $z0 == 0 goto label2;

        $r2 = <com.google.android.material.card.MaterialCardView: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.FrameLayout: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label2:
        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isDragged()>();

        if $z0 == 0 goto label3;

        $r2 = <com.google.android.material.card.MaterialCardView: int[] DRAGGED_STATE_SET>;

        staticinvoke <android.widget.FrameLayout: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label3:
        return $r1;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.accessibility.AccessibilityEvent $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>("androidx.cardview.widget.CardView");

        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isChecked()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>("androidx.cardview.widget.CardView");

        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isCheckable()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>($z0);

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean isClickable()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>($z0);

        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isChecked()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>($z0);

        return;
    }

    public void onMeasure(int, int)
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<androidx.cardview.widget.CardView: void onMeasure(int,int)>($i0, $i1);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getMeasuredHeight()>();

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    public void setAncestorContentPadding(int, int, int, int)
    {
        com.google.android.material.card.MaterialCardView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<androidx.cardview.widget.CardView: void setContentPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setBackground(android.graphics.drawable.Drawable)
    {
        com.google.android.material.card.MaterialCardView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0.<com.google.android.material.card.MaterialCardView: boolean isParentCardViewDoneInitializing>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $z0 = virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: boolean isBackgroundOverwritten()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MaterialCardView", "Setting a custom background is not supported.");

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setBackgroundOverwritten(boolean)>(1);

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

     label2:
        return;
    }

    public void setBackgroundInternal(android.graphics.drawable.Drawable)
    {
        com.google.android.material.card.MaterialCardView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.FrameLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setCardBackgroundColor(int)
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        int $i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setCardBackgroundColor(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setCardBackgroundColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setCardBackgroundColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setCardElevation(float)
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $f0 := @parameter0: float;

        specialinvoke r0.<androidx.cardview.widget.CardView: void setCardElevation(float)>($f0);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateElevation()>();

        return;
    }

    public void setCardForegroundColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setCardForegroundColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setCheckable(boolean)
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setCheckable(boolean)>($z0);

        return;
    }

    public void setChecked(boolean)
    {
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.card.MaterialCardView: boolean checked>;

        if $z1 == $z0 goto label1;

        virtualinvoke r0.<com.google.android.material.card.MaterialCardView: void toggle()>();

     label1:
        return;
    }

    public void setCheckedIcon(android.graphics.drawable.Drawable)
    {
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIcon(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setCheckedIconResource(int)
    {
        android.content.Context $r2;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r2, $i0);

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIcon(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setCheckedIconTint(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIconTint(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setClickable(boolean)
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.FrameLayout: void setClickable(boolean)>($z0);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>();

        return;
    }

    public void setContentPadding(int, int, int, int)
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setUserContentPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setDragged(boolean)
    {
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.card.MaterialCardView: boolean dragged>;

        if $z1 == $z0 goto label1;

        r0.<com.google.android.material.card.MaterialCardView: boolean dragged> = $z0;

        virtualinvoke r0.<android.widget.FrameLayout: void refreshDrawableState()>();

        specialinvoke r0.<com.google.android.material.card.MaterialCardView: void forceRippleRedrawIfNeeded()>();

        virtualinvoke r0.<android.widget.FrameLayout: void invalidate()>();

     label1:
        return;
    }

    public void setMaxCardElevation(float)
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $f0 := @parameter0: float;

        specialinvoke r0.<androidx.cardview.widget.CardView: void setMaxCardElevation(float)>($f0);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>();

        return;
    }

    public void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
    {
        com.google.android.material.card.MaterialCardView$OnCheckedChangeListener $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: com.google.android.material.card.MaterialCardView$OnCheckedChangeListener;

        r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardView$OnCheckedChangeListener onCheckedChangeListener> = $r1;

        return;
    }

    public void setPreventCornerOverlap(boolean)
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)>($z0);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>();

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateContentPadding()>();

        return;
    }

    public void setProgress(float)
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $f0 := @parameter0: float;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setProgress(float)>($f0);

        return;
    }

    public void setRadius(float)
    {
        float $f0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $f0 := @parameter0: float;

        specialinvoke r0.<androidx.cardview.widget.CardView: void setRadius(float)>($f0);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setCornerRadius(float)>($f0);

        return;
    }

    public void setRippleColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setRippleColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setRippleColorResource(int)
    {
        android.content.res.ColorStateList $r3;
        android.content.Context $r2;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        int $i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r2, $i0);

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setRippleColor(android.content.res.ColorStateList)>($r3);

        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        android.graphics.RectF $r2;
        com.google.android.material.card.MaterialCardViewHelper $r3;
        com.google.android.material.card.MaterialCardView r0;
        int $i0;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = specialinvoke r0.<com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()>();

        $z0 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)>($r2);

        virtualinvoke r0.<android.widget.FrameLayout: void setClipToOutline(boolean)>($z0);

     label1:
        $r3 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r3.<com.google.android.material.card.MaterialCardViewHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

        return;
    }

    public void setStrokeColor(int)
    {
        android.content.res.ColorStateList $r2;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        int $i0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setStrokeColor(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setStrokeColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.card.MaterialCardViewHelper $r2;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r2.<com.google.android.material.card.MaterialCardViewHelper: void setStrokeColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setStrokeWidth(int)
    {
        int $i0;
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void setStrokeWidth(int)>($i0);

        return;
    }

    public void setUseCompatPadding(boolean)
    {
        com.google.android.material.card.MaterialCardViewHelper $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)>($z0);

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>();

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardViewHelper cardViewHelper>;

        virtualinvoke $r1.<com.google.android.material.card.MaterialCardViewHelper: void updateContentPadding()>();

        return;
    }

    public void toggle()
    {
        com.google.android.material.card.MaterialCardView$OnCheckedChangeListener $r1;
        com.google.android.material.card.MaterialCardView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.card.MaterialCardView;

        $z0 = virtualinvoke r0.<com.google.android.material.card.MaterialCardView: boolean isCheckable()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z0 = r0.<com.google.android.material.card.MaterialCardView: boolean checked>;

        $z0 = $z0 ^ 1;

        r0.<com.google.android.material.card.MaterialCardView: boolean checked> = $z0;

        virtualinvoke r0.<android.widget.FrameLayout: void refreshDrawableState()>();

        specialinvoke r0.<com.google.android.material.card.MaterialCardView: void forceRippleRedrawIfNeeded()>();

        $r1 = r0.<com.google.android.material.card.MaterialCardView: com.google.android.material.card.MaterialCardView$OnCheckedChangeListener onCheckedChangeListener>;

        if $r1 == null goto label1;

        $z0 = r0.<com.google.android.material.card.MaterialCardView: boolean checked>;

        interfaceinvoke $r1.<com.google.android.material.card.MaterialCardView$OnCheckedChangeListener: void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean)>(r0, $z0);

     label1:
        return;
    }
}
