public class com.crashlytics.android.answers.AppMeasurementEventLogger extends java.lang.Object implements com.crashlytics.android.answers.EventLogger
{
    public static final java.lang.String ANALYTIC_CLASS;
    public static final java.lang.String GET_INSTANCE_METHOD;
    public static final java.lang.String LOG_METHOD;
    public final java.lang.Object logEventInstance;
    public final java.lang.reflect.Method logEventMethod;

    public void <init>(java.lang.Object, java.lang.reflect.Method)
    {
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        com.crashlytics.android.answers.AppMeasurementEventLogger r0;

        r0 := @this: com.crashlytics.android.answers.AppMeasurementEventLogger;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.Object logEventInstance> = $r1;

        r0.<com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.reflect.Method logEventMethod> = $r2;

        return;
    }

    public static java.lang.Class getClass(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.Class $r3;
        java.lang.ClassLoader $r2;
        java.lang.Exception $r0;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.google.android.gms.measurement.AppMeasurement");

     label2:
        return $r3;

     label3:
        return null;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static com.crashlytics.android.answers.EventLogger getEventLogger(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;
        com.crashlytics.android.answers.AppMeasurementEventLogger $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.Class getClass(android.content.Context)>($r0);

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.Object getInstance(android.content.Context,java.lang.Class)>($r0, $r1);

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = staticinvoke <com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.reflect.Method getLogEventMethod(android.content.Context,java.lang.Class)>($r0, $r1);

        if $r3 != null goto label3;

        return null;

     label3:
        $r4 = new com.crashlytics.android.answers.AppMeasurementEventLogger;

        specialinvoke $r4.<com.crashlytics.android.answers.AppMeasurementEventLogger: void <init>(java.lang.Object,java.lang.reflect.Method)>($r2, $r3);

        return $r4;
    }

    public static java.lang.Object getInstance(android.content.Context, java.lang.Class)
    {
        android.content.Context $r3;
        java.lang.Object[] $r5;
        java.lang.Class[] $r1;
        java.lang.Class $r0;
        java.lang.Object $r6;
        java.lang.reflect.Method $r4;
        java.lang.Exception $r2;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.lang.Class;

        $r1 = newarray (java.lang.Class)[1];

     label1:
        $r1[0] = class "Landroid/content/Context;";

        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getInstance", $r1);

     label2:
        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r3;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label4:
        return $r6;

     label5:
        return null;

     label6:
        $r2 := @caughtexception;

        goto label5;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static java.lang.reflect.Method getLogEventMethod(android.content.Context, java.lang.Class)
    {
        android.content.Context $r3;
        java.lang.Class[] $r4;
        java.lang.Class $r0;
        java.lang.reflect.Method $r1;
        java.lang.Exception $r2;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.lang.Class;

        $r4 = newarray (java.lang.Class)[3];

     label1:
        $r4[0] = class "Ljava/lang/String;";

        $r4[1] = class "Ljava/lang/String;";

        $r4[2] = class "Landroid/os/Bundle;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("logEventInternal", $r4);

     label2:
        return $r1;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void logEvent(java.lang.String, android.os.Bundle)
    {
        java.lang.String $r1;
        android.os.Bundle $r2;
        com.crashlytics.android.answers.AppMeasurementEventLogger r0;

        r0 := @this: com.crashlytics.android.answers.AppMeasurementEventLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        virtualinvoke r0.<com.crashlytics.android.answers.AppMeasurementEventLogger: void logEvent(java.lang.String,java.lang.String,android.os.Bundle)>("fab", $r1, $r2);

        return;
    }

    public void logEvent(java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.os.Bundle $r2;
        java.lang.Object[] $r7;
        java.lang.Exception $r5;
        com.crashlytics.android.answers.AppMeasurementEventLogger r0;
        java.lang.Object $r4;
        java.lang.String $r1, $r6;
        java.lang.reflect.Method $r3;

        r0 := @this: com.crashlytics.android.answers.AppMeasurementEventLogger;

        $r6 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Bundle;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.reflect.Method logEventMethod>;

        $r4 = r0.<com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.Object logEventInstance>;

     label2:
        $r7 = newarray (java.lang.Object)[3];

     label3:
        $r7[0] = $r6;

        $r7[1] = $r1;

        $r7[2] = $r2;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r7);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.String LOG_METHOD> = "logEventInternal";

        <com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.String GET_INSTANCE_METHOD> = "getInstance";

        <com.crashlytics.android.answers.AppMeasurementEventLogger: java.lang.String ANALYTIC_CLASS> = "com.google.android.gms.measurement.AppMeasurement";

        return;
    }
}
