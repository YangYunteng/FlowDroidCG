public class b.c.a.a.c extends b.c.a.a.f
{
    public static volatile b.c.a.a.c a;
    public static final java.util.concurrent.Executor b;
    public static final java.util.concurrent.Executor c;
    public b.c.a.a.f d;
    public b.c.a.a.f e;

    static void <clinit>()
    {
        b.c.a.a.b $r1;
        b.c.a.a.a $r0;

        $r0 = new b.c.a.a.a;

        specialinvoke $r0.<b.c.a.a.a: void <init>()>();

        <b.c.a.a.c: java.util.concurrent.Executor b> = $r0;

        $r1 = new b.c.a.a.b;

        specialinvoke $r1.<b.c.a.a.b: void <init>()>();

        <b.c.a.a.c: java.util.concurrent.Executor c> = $r1;

        return;
    }

    public void <init>()
    {
        b.c.a.a.f $r2;
        b.c.a.a.e $r1;
        b.c.a.a.c r0;

        r0 := @this: b.c.a.a.c;

        specialinvoke r0.<b.c.a.a.f: void <init>()>();

        $r1 = new b.c.a.a.e;

        specialinvoke $r1.<b.c.a.a.e: void <init>()>();

        r0.<b.c.a.a.c: b.c.a.a.f e> = $r1;

        $r2 = r0.<b.c.a.a.c: b.c.a.a.f e>;

        r0.<b.c.a.a.c: b.c.a.a.f d> = $r2;

        return;
    }

    public static java.util.concurrent.Executor b()
    {
        java.util.concurrent.Executor r0;

        r0 = <b.c.a.a.c: java.util.concurrent.Executor c>;

        return r0;
    }

    public static b.c.a.a.c c()
    {
        java.lang.Throwable $r1;
        b.c.a.a.c $r0;

        $r0 = <b.c.a.a.c: b.c.a.a.c a>;

        if $r0 == null goto label1;

        $r0 = <b.c.a.a.c: b.c.a.a.c a>;

        return $r0;

     label1:
        entermonitor class "Lb/c/a/a/c;";

     label2:
        $r0 = <b.c.a.a.c: b.c.a.a.c a>;

        if $r0 != null goto label3;

        $r0 = new b.c.a.a.c;

        specialinvoke $r0.<b.c.a.a.c: void <init>()>();

        <b.c.a.a.c: b.c.a.a.c a> = $r0;

     label3:
        exitmonitor class "Lb/c/a/a/c;";

     label4:
        $r0 = <b.c.a.a.c: b.c.a.a.c a>;

        return $r0;

     label5:
        $r1 := @caughtexception;

     label6:
        exitmonitor class "Lb/c/a/a/c;";

     label7:
        throw $r1;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void a(java.lang.Runnable)
    {
        b.c.a.a.f $r2;
        java.lang.Runnable $r1;
        b.c.a.a.c r0;

        r0 := @this: b.c.a.a.c;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<b.c.a.a.c: b.c.a.a.f d>;

        virtualinvoke $r2.<b.c.a.a.f: void a(java.lang.Runnable)>($r1);

        return;
    }

    public boolean a()
    {
        b.c.a.a.f $r1;
        b.c.a.a.c r0;
        boolean $z0;

        r0 := @this: b.c.a.a.c;

        $r1 = r0.<b.c.a.a.c: b.c.a.a.f d>;

        $z0 = virtualinvoke $r1.<b.c.a.a.f: boolean a()>();

        return $z0;
    }

    public void c(java.lang.Runnable)
    {
        b.c.a.a.f $r2;
        java.lang.Runnable $r1;
        b.c.a.a.c r0;

        r0 := @this: b.c.a.a.c;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<b.c.a.a.c: b.c.a.a.f d>;

        virtualinvoke $r2.<b.c.a.a.f: void c(java.lang.Runnable)>($r1);

        return;
    }
}
