public class com.google.android.gms.vision.CameraSource extends java.lang.Object
{
    public static final int CAMERA_FACING_BACK;
    public static final int CAMERA_FACING_FRONT;
    public int facing;
    public int rotation;
    public android.content.Context zze;
    public final java.lang.Object zzf;
    public android.hardware.Camera zzg;
    public com.google.android.gms.common.images.Size zzh;
    public float zzi;
    public int zzj;
    public int zzk;
    public boolean zzl;
    public android.graphics.SurfaceTexture zzm;
    public boolean zzn;
    public java.lang.Thread zzo;
    public com.google.android.gms.vision.CameraSource$zzb zzp;
    public java.util.Map zzq;

    public void <init>()
    {
        java.lang.Object $r1;
        java.util.HashMap $r2;
        com.google.android.gms.vision.CameraSource r0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf> = $r1;

        r0.<com.google.android.gms.vision.CameraSource: int facing> = 0;

        r0.<com.google.android.gms.vision.CameraSource: float zzi> = 30.0F;

        r0.<com.google.android.gms.vision.CameraSource: int zzj> = 1024;

        r0.<com.google.android.gms.vision.CameraSource: int zzk> = 768;

        r0.<com.google.android.gms.vision.CameraSource: boolean zzl> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.google.android.gms.vision.CameraSource: java.util.Map zzq> = $r2;

        return;
    }

    public void <init>(com.google.android.gms.vision.zza)
    {
        com.google.android.gms.vision.zza $r1;
        com.google.android.gms.vision.CameraSource r0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r1 := @parameter0: com.google.android.gms.vision.zza;

        specialinvoke r0.<com.google.android.gms.vision.CameraSource: void <init>()>();

        return;
    }

    public static float zza(com.google.android.gms.vision.CameraSource, float)
    {
        float $f0;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $f0 := @parameter1: float;

        $r0.<com.google.android.gms.vision.CameraSource: float zzi> = $f0;

        return $f0;
    }

    public static int zza(com.google.android.gms.vision.CameraSource, int)
    {
        int $i0;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $i0 := @parameter1: int;

        $r0.<com.google.android.gms.vision.CameraSource: int zzj> = $i0;

        return $i0;
    }

    public static android.content.Context zza(com.google.android.gms.vision.CameraSource, android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $r1 := @parameter1: android.content.Context;

        $r0.<com.google.android.gms.vision.CameraSource: android.content.Context zze> = $r1;

        return $r1;
    }

    private final android.hardware.Camera zza()
    {
        byte[] $r23;
        android.view.WindowManager $r19;
        android.hardware.Camera$CameraInfo $r1, $r24;
        byte $b5;
        int[] $r16, $r17;
        android.view.Display $r20;
        boolean $z0;
        android.hardware.Camera$Parameters $r3;
        com.google.android.gms.vision.CameraSource$zze $r12, $r13;
        com.google.android.gms.vision.CameraSource$zza $r27;
        java.util.List $r4, $r5;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r21, $r26;
        com.google.android.gms.vision.CameraSource r0;
        android.content.Context $r18;
        android.hardware.Camera$Size $r9, $r11;
        java.util.ArrayList $r6, $r25;
        short $s1;
        int $i0, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        java.lang.String $r22;
        java.util.Iterator $r7, $r10;
        java.io.IOException $r28;
        com.google.android.gms.common.images.Size $r14, $r15;
        java.lang.Object $r8;
        android.hardware.Camera $r2;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $i0 = r0.<com.google.android.gms.vision.CameraSource: int facing>;

        $r24 = new android.hardware.Camera$CameraInfo;

        $r1 = $r24;

        specialinvoke $r24.<android.hardware.Camera$CameraInfo: void <init>()>();

        $s1 = 0;

        $i2 = 0;

     label01:
        $i3 = staticinvoke <android.hardware.Camera: int getNumberOfCameras()>();

        if $i2 >= $i3 goto label03;

        staticinvoke <android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>($i2, $r1);

        $i3 = $r1.<android.hardware.Camera$CameraInfo: int facing>;

        if $i3 != $i0 goto label02;

        goto label04;

     label02:
        $i2 = $i2 + 1;

        goto label01;

     label03:
        $i2 = -1;

     label04:
        $i0 = -1;

        if $i2 == $i0 goto label25;

        $r2 = staticinvoke <android.hardware.Camera: android.hardware.Camera open(int)>($i2);

        $i0 = r0.<com.google.android.gms.vision.CameraSource: int zzj>;

        $i3 = r0.<com.google.android.gms.vision.CameraSource: int zzk>;

        $r3 = virtualinvoke $r2.<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>();

        $r4 = virtualinvoke $r3.<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>();

        $r5 = virtualinvoke $r3.<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()>();

        $r25 = new java.util.ArrayList;

        $r6 = $r25;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.hardware.Camera$Size) $r8;

        $i4 = $r9.<android.hardware.Camera$Size: int width>;

        $f0 = (float) $i4;

        $i4 = $r9.<android.hardware.Camera$Size: int height>;

        $f1 = (float) $i4;

        $f0 = $f0 / $f1;

        $r10 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r8 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.hardware.Camera$Size) $r8;

        $i4 = $r11.<android.hardware.Camera$Size: int width>;

        $f1 = (float) $i4;

        $i4 = $r11.<android.hardware.Camera$Size: int height>;

        $f2 = (float) $i4;

        $f1 = $f1 / $f2;

        $f1 = $f0 - $f1;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $b5 = $f1 cmpg 0.01F;

        $i4 = (int) $b5;

        if $i4 >= 0 goto label06;

        $r13 = new com.google.android.gms.vision.CameraSource$zze;

        specialinvoke $r13.<com.google.android.gms.vision.CameraSource$zze: void <init>(android.hardware.Camera$Size,android.hardware.Camera$Size)>($r9, $r11);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label05;

     label07:
        $i4 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i4 != 0 goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraSource", "No preview sizes have a corresponding same-aspect-ratio picture size");

        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.hardware.Camera$Size) $r8;

        $r13 = new com.google.android.gms.vision.CameraSource$zze;

        specialinvoke $r13.<com.google.android.gms.vision.CameraSource$zze: void <init>(android.hardware.Camera$Size,android.hardware.Camera$Size)>($r9, null);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label08;

     label09:
        $i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r12 = null;

        $i6 = 0;

        $i7 = 2147483647;

     label10:
        if $i6 >= $i4 goto label11;

        $r8 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $i6 = $i6 + 1;

        $r13 = (com.google.android.gms.vision.CameraSource$zze) $r8;

        $r14 = virtualinvoke $r13.<com.google.android.gms.vision.CameraSource$zze: com.google.android.gms.common.images.Size zzb()>();

        $i8 = virtualinvoke $r14.<com.google.android.gms.common.images.Size: int getWidth()>();

        $i8 = $i8 - $i0;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i8);

        $i9 = virtualinvoke $r14.<com.google.android.gms.common.images.Size: int getHeight()>();

        $i9 = $i9 - $i3;

        $i9 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        $i8 = $i8 + $i9;

        if $i8 >= $i7 goto label10;

        $r12 = $r13;

        $i7 = $i8;

        goto label10;

     label11:
        if $r12 == null goto label24;

        $r14 = virtualinvoke $r12.<com.google.android.gms.vision.CameraSource$zze: com.google.android.gms.common.images.Size zzc()>();

        $r15 = virtualinvoke $r12.<com.google.android.gms.vision.CameraSource$zze: com.google.android.gms.common.images.Size zzb()>();

        r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh> = $r15;

        $f0 = r0.<com.google.android.gms.vision.CameraSource: float zzi>;

        $f0 = $f0 * 1000.0F;

        $i0 = (int) $f0;

        $r3 = virtualinvoke $r2.<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>();

        $r4 = virtualinvoke $r3.<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>();

        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $r16 = null;

        $i3 = 2147483647;

     label12:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (int[]) $r8;

        $i4 = $r17[0];

        $i4 = $i0 - $i4;

        $i6 = $r17[1];

        $i6 = $i0 - $i6;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i4 = $i4 + $i6;

        if $i4 >= $i3 goto label12;

        $r16 = $r17;

        $i3 = $i4;

        goto label12;

     label13:
        if $r16 == null goto label23;

        $r3 = virtualinvoke $r2.<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>();

        if $r14 == null goto label14;

        $i0 = virtualinvoke $r14.<com.google.android.gms.common.images.Size: int getWidth()>();

        $i3 = virtualinvoke $r14.<com.google.android.gms.common.images.Size: int getHeight()>();

        virtualinvoke $r3.<android.hardware.Camera$Parameters: void setPictureSize(int,int)>($i0, $i3);

     label14:
        $r14 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        $i0 = virtualinvoke $r14.<com.google.android.gms.common.images.Size: int getWidth()>();

        $r14 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        $i3 = virtualinvoke $r14.<com.google.android.gms.common.images.Size: int getHeight()>();

        virtualinvoke $r3.<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>($i0, $i3);

        $i0 = $r16[0];

        $i3 = $r16[1];

        virtualinvoke $r3.<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)>($i0, $i3);

        virtualinvoke $r3.<android.hardware.Camera$Parameters: void setPreviewFormat(int)>(17);

        $r18 = r0.<com.google.android.gms.vision.CameraSource: android.content.Context zze>;

        $r8 = virtualinvoke $r18.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r19 = (android.view.WindowManager) $r8;

        $r20 = interfaceinvoke $r19.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r20.<android.view.Display: int getRotation()>();

        if $i0 == 0 goto label18;

        if $i0 == 1 goto label17;

        if $i0 == 2 goto label16;

        if $i0 == 3 goto label15;

        $r26 = new java.lang.StringBuilder;

        $r21 = $r26;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(int)>(31);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad rotation value: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CameraSource", $r22);

        goto label18;

     label15:
        $s1 = 270;

        goto label18;

     label16:
        $s1 = 180;

        goto label18;

     label17:
        $s1 = 90;

     label18:
        $r24 = new android.hardware.Camera$CameraInfo;

        $r1 = $r24;

        specialinvoke $r24.<android.hardware.Camera$CameraInfo: void <init>()>();

        staticinvoke <android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>($i2, $r1);

        $i2 = $r1.<android.hardware.Camera$CameraInfo: int facing>;

        if $i2 != 1 goto label19;

        $i2 = $r1.<android.hardware.Camera$CameraInfo: int orientation>;

        $i2 = $i2 + $s1;

        $i2 = $i2 % 360;

        $i0 = 360 - $i2;

        $i0 = $i0 % 360;

        goto label20;

     label19:
        $i2 = $r1.<android.hardware.Camera$CameraInfo: int orientation>;

        $i2 = $i2 - $s1;

        $i2 = $i2 + 360;

        $i2 = $i2 % 360;

        $i0 = $i2;

     label20:
        $i3 = $i2 / 90;

        r0.<com.google.android.gms.vision.CameraSource: int rotation> = $i3;

        virtualinvoke $r2.<android.hardware.Camera: void setDisplayOrientation(int)>($i0);

        virtualinvoke $r3.<android.hardware.Camera$Parameters: void setRotation(int)>($i2);

        $z0 = r0.<com.google.android.gms.vision.CameraSource: boolean zzl>;

        if $z0 == 0 goto label22;

        $r4 = virtualinvoke $r3.<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>();

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>("continuous-video");

        if $z0 == 0 goto label21;

        virtualinvoke $r3.<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)>("continuous-video");

        goto label22;

     label21:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CameraSource", "Camera auto focus is not supported on this device.");

     label22:
        virtualinvoke $r2.<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>($r3);

        $r27 = new com.google.android.gms.vision.CameraSource$zza;

        specialinvoke $r27.<com.google.android.gms.vision.CameraSource$zza: void <init>(com.google.android.gms.vision.CameraSource,com.google.android.gms.vision.zza)>(r0, null);

        virtualinvoke $r2.<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>($r27);

        $r14 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        $r23 = specialinvoke r0.<com.google.android.gms.vision.CameraSource: byte[] zza(com.google.android.gms.common.images.Size)>($r14);

        virtualinvoke $r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>($r23);

        $r14 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        $r23 = specialinvoke r0.<com.google.android.gms.vision.CameraSource: byte[] zza(com.google.android.gms.common.images.Size)>($r14);

        virtualinvoke $r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>($r23);

        $r14 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        $r23 = specialinvoke r0.<com.google.android.gms.vision.CameraSource: byte[] zza(com.google.android.gms.common.images.Size)>($r14);

        virtualinvoke $r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>($r23);

        $r14 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        $r23 = specialinvoke r0.<com.google.android.gms.vision.CameraSource: byte[] zza(com.google.android.gms.common.images.Size)>($r14);

        virtualinvoke $r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>($r23);

        return $r2;

     label23:
        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Could not find suitable preview frames per second range.");

        throw $r28;

     label24:
        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Could not find suitable preview size.");

        throw $r28;

     label25:
        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Could not find requested camera.");

        goto label26;

     label26:
        throw $r28;
    }

    public static com.google.android.gms.vision.CameraSource$zzb zza(com.google.android.gms.vision.CameraSource, com.google.android.gms.vision.CameraSource$zzb)
    {
        com.google.android.gms.vision.CameraSource$zzb $r1;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $r1 := @parameter1: com.google.android.gms.vision.CameraSource$zzb;

        $r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp> = $r1;

        return $r1;
    }

    public static java.lang.Object zza(com.google.android.gms.vision.CameraSource)
    {
        java.lang.Object r1;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        r1 = $r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf>;

        return r1;
    }

    public static boolean zza(com.google.android.gms.vision.CameraSource, boolean)
    {
        com.google.android.gms.vision.CameraSource $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $z0 := @parameter1: boolean;

        $r0.<com.google.android.gms.vision.CameraSource: boolean zzl> = $z0;

        return $z0;
    }

    private final byte[] zza(com.google.android.gms.common.images.Size)
    {
        byte[] $r2, $r4;
        java.lang.IllegalStateException $r6;
        long $l3;
        java.nio.ByteBuffer $r3;
        com.google.android.gms.common.images.Size $r1;
        java.util.Map $r5;
        int $i0, $i1, $i2;
        com.google.android.gms.vision.CameraSource r0;
        double $d0;
        boolean $z0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r1 := @parameter0: com.google.android.gms.common.images.Size;

        $i0 = staticinvoke <android.graphics.ImageFormat: int getBitsPerPixel(int)>(17);

        $i1 = virtualinvoke $r1.<com.google.android.gms.common.images.Size: int getHeight()>();

        $i2 = virtualinvoke $r1.<com.google.android.gms.common.images.Size: int getWidth()>();

        $i1 = $i1 * $i2;

        $i0 = $i1 * $i0;

        $l3 = (long) $i0;

        $d0 = (double) $l3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 / 8.0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $i0 = $i0 + 1;

        $r2 = newarray (byte)[$i0];

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        $z0 = virtualinvoke $r3.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        if $r4 != $r2 goto label1;

        $r5 = r0.<com.google.android.gms.vision.CameraSource: java.util.Map zzq>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to create valid buffer for camera source.");

        throw $r6;
    }

    public static int zzb(com.google.android.gms.vision.CameraSource, int)
    {
        int $i0;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $i0 := @parameter1: int;

        $r0.<com.google.android.gms.vision.CameraSource: int zzk> = $i0;

        return $i0;
    }

    public static android.hardware.Camera zzb(com.google.android.gms.vision.CameraSource)
    {
        com.google.android.gms.vision.CameraSource $r0;
        android.hardware.Camera r1;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        r1 = $r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        return r1;
    }

    public static int zzc(com.google.android.gms.vision.CameraSource, int)
    {
        int $i0;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        $i0 := @parameter1: int;

        $r0.<com.google.android.gms.vision.CameraSource: int facing> = $i0;

        return $i0;
    }

    public static com.google.android.gms.vision.CameraSource$zzb zzc(com.google.android.gms.vision.CameraSource)
    {
        com.google.android.gms.vision.CameraSource$zzb r1;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        r1 = $r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        return r1;
    }

    public static java.util.Map zzd(com.google.android.gms.vision.CameraSource)
    {
        com.google.android.gms.vision.CameraSource $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        r1 = $r0.<com.google.android.gms.vision.CameraSource: java.util.Map zzq>;

        return r1;
    }

    public static int zze(com.google.android.gms.vision.CameraSource)
    {
        int i0;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        i0 = $r0.<com.google.android.gms.vision.CameraSource: int rotation>;

        return i0;
    }

    public static com.google.android.gms.common.images.Size zzf(com.google.android.gms.vision.CameraSource)
    {
        com.google.android.gms.common.images.Size r1;
        com.google.android.gms.vision.CameraSource $r0;

        $r0 := @parameter0: com.google.android.gms.vision.CameraSource;

        r1 = $r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        return r1;
    }

    public int getCameraFacing()
    {
        int i0;
        com.google.android.gms.vision.CameraSource r0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        i0 = r0.<com.google.android.gms.vision.CameraSource: int facing>;

        return i0;
    }

    public com.google.android.gms.common.images.Size getPreviewSize()
    {
        com.google.android.gms.common.images.Size r1;
        com.google.android.gms.vision.CameraSource r0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        r1 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.common.images.Size zzh>;

        return r1;
    }

    public void release()
    {
        java.lang.Throwable $r3;
        com.google.android.gms.vision.CameraSource$zzb $r2;
        java.lang.Object $r1;
        com.google.android.gms.vision.CameraSource r0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r1 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf>;

        entermonitor $r1;

     label1:
        virtualinvoke r0.<com.google.android.gms.vision.CameraSource: void stop()>();

        $r2 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        virtualinvoke $r2.<com.google.android.gms.vision.CameraSource$zzb: void release()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.google.android.gms.vision.CameraSource start()
    {
        java.lang.Throwable $r6;
        android.graphics.SurfaceTexture $r3;
        java.lang.Thread $r4;
        com.google.android.gms.vision.CameraSource$zzb $r5;
        java.lang.Object $r1;
        com.google.android.gms.vision.CameraSource r0;
        android.hardware.Camera $r2;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r1 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        if $r2 == null goto label3;

        exitmonitor $r1;

     label2:
        return r0;

     label3:
        $r2 = specialinvoke r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zza()>();

        r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg> = $r2;

        $r3 = new android.graphics.SurfaceTexture;

        specialinvoke $r3.<android.graphics.SurfaceTexture: void <init>(int)>(100);

        r0.<com.google.android.gms.vision.CameraSource: android.graphics.SurfaceTexture zzm> = $r3;

        $r2 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        $r3 = r0.<com.google.android.gms.vision.CameraSource: android.graphics.SurfaceTexture zzm>;

        virtualinvoke $r2.<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>($r3);

        r0.<com.google.android.gms.vision.CameraSource: boolean zzn> = 1;

        $r2 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r2.<android.hardware.Camera: void startPreview()>();

        $r4 = new java.lang.Thread;

        $r5 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo> = $r4;

        $r4 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo>;

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>("gms.vision.CameraSource");

        $r5 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        virtualinvoke $r5.<com.google.android.gms.vision.CameraSource$zzb: void setActive(boolean)>(1);

        $r4 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        exitmonitor $r1;

     label4:
        return r0;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public com.google.android.gms.vision.CameraSource start(android.view.SurfaceHolder)
    {
        java.lang.Throwable $r6;
        java.lang.Thread $r4;
        com.google.android.gms.vision.CameraSource$zzb $r5;
        java.lang.Object $r1;
        android.view.SurfaceHolder $r3;
        com.google.android.gms.vision.CameraSource r0;
        android.hardware.Camera $r2;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r3 := @parameter0: android.view.SurfaceHolder;

        $r1 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        if $r2 == null goto label3;

        exitmonitor $r1;

     label2:
        return r0;

     label3:
        $r2 = specialinvoke r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zza()>();

        r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg> = $r2;

        $r2 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r2.<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>($r3);

        $r2 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r2.<android.hardware.Camera: void startPreview()>();

        $r4 = new java.lang.Thread;

        $r5 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo> = $r4;

        $r5 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        virtualinvoke $r5.<com.google.android.gms.vision.CameraSource$zzb: void setActive(boolean)>(1);

        $r4 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        r0.<com.google.android.gms.vision.CameraSource: boolean zzn> = 0;

        exitmonitor $r1;

     label4:
        return r0;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void stop()
    {
        java.lang.Throwable $r11;
        com.google.android.gms.vision.CameraSource$zzb $r4;
        java.lang.Exception $r7;
        java.lang.InterruptedException $r3;
        java.lang.Thread $r5;
        java.util.Map $r10;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r8, $r9;
        com.google.android.gms.vision.CameraSource r0;
        android.hardware.Camera $r6;
        boolean $z0;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r1 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf>;

        entermonitor $r1;

     label01:
        $r4 = r0.<com.google.android.gms.vision.CameraSource: com.google.android.gms.vision.CameraSource$zzb zzp>;

        virtualinvoke $r4.<com.google.android.gms.vision.CameraSource$zzb: void setActive(boolean)>(0);

        $r5 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo>;

     label02:
        if $r5 == null goto label08;

     label03:
        $r5 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo>;

     label04:
        virtualinvoke $r5.<java.lang.Thread: void join()>();

     label05:
        goto label07;

     label06:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CameraSource", "Frame processing thread interrupted on release.");

     label07:
        r0.<com.google.android.gms.vision.CameraSource: java.lang.Thread zzo> = null;

     label08:
        $r6 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        if $r6 == null goto label18;

        $r6 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r6.<android.hardware.Camera: void stopPreview()>();

        $r6 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r6.<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>(null);

     label09:
        $z0 = r0.<com.google.android.gms.vision.CameraSource: boolean zzn>;

     label10:
        if $z0 == 0 goto label13;

     label11:
        $r6 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r6.<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>(null);

     label12:
        goto label17;

     label13:
        $r6 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r6.<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>(null);

     label14:
        goto label17;

     label15:
        $r7 := @caughtexception;

     label16:
        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + 32;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clear camera preview: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CameraSource", $r8);

     label17:
        $r6 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r6.<android.hardware.Camera: void release()>();

        r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg> = null;

     label18:
        $r10 = r0.<com.google.android.gms.vision.CameraSource: java.util.Map zzq>;

        interfaceinvoke $r10.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label19:
        return;

     label20:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label21:
        throw $r11;

     label22:
        $r3 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.InterruptedException from label04 to label05 with label22;
        catch java.lang.Throwable from label03 to label05 with label20;
        catch java.lang.Throwable from label06 to label09 with label20;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label09 to label14 with label20;
        catch java.lang.Throwable from label16 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void takePicture(com.google.android.gms.vision.CameraSource$ShutterCallback, com.google.android.gms.vision.CameraSource$PictureCallback)
    {
        java.lang.Throwable $r7;
        com.google.android.gms.vision.CameraSource$zzc $r6;
        com.google.android.gms.vision.CameraSource$zzd $r5;
        com.google.android.gms.vision.CameraSource$PictureCallback $r3;
        java.lang.Object $r1;
        com.google.android.gms.vision.CameraSource$ShutterCallback $r2;
        com.google.android.gms.vision.CameraSource r0;
        android.hardware.Camera $r4;

        r0 := @this: com.google.android.gms.vision.CameraSource;

        $r2 := @parameter0: com.google.android.gms.vision.CameraSource$ShutterCallback;

        $r3 := @parameter1: com.google.android.gms.vision.CameraSource$PictureCallback;

        $r1 = r0.<com.google.android.gms.vision.CameraSource: java.lang.Object zzf>;

        entermonitor $r1;

     label1:
        $r4 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        if $r4 == null goto label2;

        $r5 = new com.google.android.gms.vision.CameraSource$zzd;

        specialinvoke $r5.<com.google.android.gms.vision.CameraSource$zzd: void <init>(com.google.android.gms.vision.zza)>(null);

        staticinvoke <com.google.android.gms.vision.CameraSource$zzd: com.google.android.gms.vision.CameraSource$ShutterCallback zza(com.google.android.gms.vision.CameraSource$zzd,com.google.android.gms.vision.CameraSource$ShutterCallback)>($r5, $r2);

        $r6 = new com.google.android.gms.vision.CameraSource$zzc;

        specialinvoke $r6.<com.google.android.gms.vision.CameraSource$zzc: void <init>(com.google.android.gms.vision.CameraSource,com.google.android.gms.vision.zza)>(r0, null);

        staticinvoke <com.google.android.gms.vision.CameraSource$zzc: com.google.android.gms.vision.CameraSource$PictureCallback zza(com.google.android.gms.vision.CameraSource$zzc,com.google.android.gms.vision.CameraSource$PictureCallback)>($r6, $r3);

        $r4 = r0.<com.google.android.gms.vision.CameraSource: android.hardware.Camera zzg>;

        virtualinvoke $r4.<android.hardware.Camera: void takePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>($r5, null, null, $r6);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void <clinit>()
    {
        <com.google.android.gms.vision.CameraSource: int CAMERA_FACING_FRONT> = 1;

        <com.google.android.gms.vision.CameraSource: int CAMERA_FACING_BACK> = 0;

        return;
    }
}
