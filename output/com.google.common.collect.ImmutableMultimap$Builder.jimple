public class com.google.common.collect.ImmutableMultimap$Builder extends java.lang.Object
{
    public com.google.common.collect.Multimap builderMultimap;
    public java.util.Comparator keyComparator;
    public java.util.Comparator valueComparator;

    public void <init>()
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        com.google.common.collect.ListMultimap $r3;
        com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys $r1;
        com.google.common.collect.MultimapBuilder$ListMultimapBuilder $r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 = staticinvoke <com.google.common.collect.MultimapBuilder: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys: com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.MultimapBuilder$ListMultimapBuilder: com.google.common.collect.ListMultimap build()>();

        specialinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: void <init>(com.google.common.collect.Multimap)>($r3);

        return;
    }

    public void <init>(com.google.common.collect.Multimap)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        com.google.common.collect.Multimap $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap> = $r1;

        return;
    }

    public com.google.common.collect.ImmutableMultimap build()
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        com.google.common.collect.ListMultimap $r10;
        com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys $r8;
        com.google.common.collect.Multimap $r2;
        com.google.common.collect.MultimapBuilder$ListMultimapBuilder $r9;
        java.lang.Iterable $r16;
        com.google.common.collect.ImmutableList $r13;
        java.util.Map $r3;
        com.google.common.collect.ImmutableMultimap $r17;
        boolean $z0;
        java.util.Map$Entry $r14;
        java.util.Iterator $r5;
        java.util.Collection $r4;
        java.util.Set $r12;
        java.util.List $r7;
        com.google.common.collect.Ordering $r11;
        java.lang.Object $r6, $r15;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 = r0.<com.google.common.collect.ImmutableMultimap$Builder: java.util.Comparator valueComparator>;

        if $r1 == null goto label2;

        $r2 = r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.List) $r6;

        $r1 = r0.<com.google.common.collect.ImmutableMultimap$Builder: java.util.Comparator valueComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r7, $r1);

        goto label1;

     label2:
        $r1 = r0.<com.google.common.collect.ImmutableMultimap$Builder: java.util.Comparator keyComparator>;

        if $r1 == null goto label5;

        $r8 = staticinvoke <com.google.common.collect.MultimapBuilder: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys()>();

        $r9 = virtualinvoke $r8.<com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys: com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues()>();

        $r10 = virtualinvoke $r9.<com.google.common.collect.MultimapBuilder$ListMultimapBuilder: com.google.common.collect.ListMultimap build()>();

        $r1 = r0.<com.google.common.collect.ImmutableMultimap$Builder: java.util.Comparator keyComparator>;

        $r11 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r1);

        $r11 = virtualinvoke $r11.<com.google.common.collect.Ordering: com.google.common.collect.Ordering onKeys()>();

        $r2 = r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r12 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r13 = virtualinvoke $r11.<com.google.common.collect.Ordering: com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable)>($r12);

        $r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = interfaceinvoke $r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.Iterable) $r15;

        interfaceinvoke $r10.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>($r6, $r16);

        goto label3;

     label4:
        r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap> = $r10;

     label5:
        $r2 = r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r17 = staticinvoke <com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap)>($r2);

        return $r17;
    }

    public com.google.common.collect.ImmutableMultimap$Builder combine(com.google.common.collect.ImmutableMultimap$Builder)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0, $r1;
        com.google.common.collect.Multimap $r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: com.google.common.collect.ImmutableMultimap$Builder;

        $r2 = $r1.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        virtualinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap)>($r2);

        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.util.Comparator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.ImmutableMultimap$Builder: java.util.Comparator keyComparator> = $r1;

        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.util.Comparator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.ImmutableMultimap$Builder: java.util.Comparator valueComparator> = $r1;

        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Multimap $r3;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r3 = r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.google.common.collect.Multimap $r1;
        java.lang.Iterable $r8;
        java.util.Map $r2;
        java.lang.Object $r5, $r7;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: com.google.common.collect.Multimap;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.Iterable) $r7;

        virtualinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)>($r5, $r8);

        goto label1;

     label2:
        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.Map$Entry $r4;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        virtualinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry)>($r4);

        goto label1;

     label2:
        return r0;
    }

    public com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.Iterator $r5;
        java.util.Collection $r4;
        com.google.common.collect.Multimap $r3;
        java.lang.Iterable $r2;
        java.lang.NullPointerException $r7;
        java.lang.Object $r1, $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Iterable;

        if $r1 == null goto label3;

        $r3 = r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>($r1);

        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>($r1, $r6);

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r0;

     label3:
        $r7 = new java.lang.NullPointerException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null key in entry: null=");

        $r9 = staticinvoke <com.google.common.collect.Iterables: java.lang.String toString(java.lang.Iterable)>($r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>($r9);

        goto label4;

     label4:
        throw $r7;
    }

    public transient com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object, java.lang.Object[])
    {
        com.google.common.collect.ImmutableMultimap$Builder r0;
        java.util.List $r3;
        java.lang.Object[] $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap$Builder;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)>($r1, $r3);

        return r0;
    }
}
