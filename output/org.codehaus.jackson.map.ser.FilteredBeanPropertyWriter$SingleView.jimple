public final class org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView extends org.codehaus.jackson.map.ser.BeanPropertyWriter
{
    public final java.lang.Class _view;

    public void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter, java.lang.Class)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter $r1;
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView r0;
        java.lang.Class $r2;

        r0 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView;

        $r1 := @parameter0: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter)>($r1);

        r0.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: java.lang.Class _view> = $r2;

        return;
    }

    public void <init>(org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView r0, $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.JsonSerializer $r1;

        r0 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView;

        $r2 := @parameter0: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView;

        $r1 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,org.codehaus.jackson.map.JsonSerializer)>($r2, $r1);

        $r3 = $r2.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: java.lang.Class _view>;

        r0.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: java.lang.Class _view> = $r3;

        return;
    }

    public void serializeAsField(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView r0;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        java.lang.Object $r1;
        java.lang.Class $r4, $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: java.lang.Class getSerializationView()>();

        if $r5 == null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: java.lang.Class _view>;

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label2;

     label1:
        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r1, $r2, $r3);

     label2:
        return;
    }

    public org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView r0, $r2;
        org.codehaus.jackson.map.JsonSerializer $r1;

        r0 := @this: org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView;

        $r1 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        $r2 = new org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView;

        specialinvoke $r2.<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: void <init>(org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView,org.codehaus.jackson.map.JsonSerializer)>(r0, $r1);

        return $r2;
    }
}
