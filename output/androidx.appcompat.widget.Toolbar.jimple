public class androidx.appcompat.widget.Toolbar extends android.view.ViewGroup
{
    public static final java.lang.String TAG;
    public b.b.e.a.n$a mActionMenuPresenterCallback;
    public int mButtonGravity;
    public android.widget.ImageButton mCollapseButtonView;
    public java.lang.CharSequence mCollapseDescription;
    public android.graphics.drawable.Drawable mCollapseIcon;
    public boolean mCollapsible;
    public int mContentInsetEndWithActions;
    public int mContentInsetStartWithNavigation;
    public b.b.f.T mContentInsets;
    public boolean mEatingHover;
    public boolean mEatingTouch;
    public android.view.View mExpandedActionView;
    public androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter;
    public int mGravity;
    public final java.util.ArrayList mHiddenViews;
    public android.widget.ImageView mLogoView;
    public int mMaxButtonHeight;
    public androidx.appcompat.view.menu.MenuBuilder$a mMenuBuilderCallback;
    public androidx.appcompat.widget.ActionMenuView mMenuView;
    public final androidx.appcompat.widget.ActionMenuView$d mMenuViewItemClickListener;
    public android.widget.ImageButton mNavButtonView;
    public androidx.appcompat.widget.Toolbar$b mOnMenuItemClickListener;
    public androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter;
    public android.content.Context mPopupContext;
    public int mPopupTheme;
    public final java.lang.Runnable mShowOverflowMenuRunnable;
    public java.lang.CharSequence mSubtitleText;
    public int mSubtitleTextAppearance;
    public android.content.res.ColorStateList mSubtitleTextColor;
    public android.widget.TextView mSubtitleTextView;
    public final int[] mTempMargins;
    public final java.util.ArrayList mTempViews;
    public int mTitleMarginBottom;
    public int mTitleMarginEnd;
    public int mTitleMarginStart;
    public int mTitleMarginTop;
    public java.lang.CharSequence mTitleText;
    public int mTitleTextAppearance;
    public android.content.res.ColorStateList mTitleTextColor;
    public android.widget.TextView mTitleTextView;
    public b.b.f.ta mWrapper;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.content.Context $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <b.b.a: int toolbarStyle>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2;
        android.graphics.drawable.Drawable $r6;
        java.util.ArrayList $r9;
        android.content.res.ColorStateList $r8;
        android.util.AttributeSet $r3;
        int[] $r4;
        b.b.f.na $r10;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.CharSequence $r7;
        b.b.f.T $r1;
        b.b.f.ma $r5;
        b.b.f.oa $r11;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r3, $i0);

        r0.<androidx.appcompat.widget.Toolbar: int mGravity> = 8388627;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews> = $r9;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews> = $r9;

        $r4 = newarray (int)[2];

        r0.<androidx.appcompat.widget.Toolbar: int[] mTempMargins> = $r4;

        $r10 = new b.b.f.na;

        specialinvoke $r10.<b.b.f.na: void <init>(androidx.appcompat.widget.Toolbar)>(r0);

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$d mMenuViewItemClickListener> = $r10;

        $r11 = new b.b.f.oa;

        specialinvoke $r11.<b.b.f.oa: void <init>(androidx.appcompat.widget.Toolbar)>(r0);

        r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable> = $r11;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r4 = <b.b.j: int[] Toolbar>;

        $r5 = staticinvoke <b.b.f.ma: b.b.f.ma a(android.content.Context,android.util.AttributeSet,int[],int,int)>($r2, $r3, $r4, $i0, 0);

        $i0 = <b.b.j: int Toolbar_titleTextAppearance>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int g(int,int)>($i0, 0);

        r0.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance> = $i0;

        $i0 = <b.b.j: int Toolbar_subtitleTextAppearance>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int g(int,int)>($i0, 0);

        r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance> = $i0;

        $i0 = <b.b.j: int Toolbar_android_gravity>;

        $i1 = r0.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int e(int,int)>($i0, $i1);

        r0.<androidx.appcompat.widget.Toolbar: int mGravity> = $i0;

        $i0 = <b.b.j: int Toolbar_buttonGravity>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int e(int,int)>($i0, 48);

        r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity> = $i0;

        $i0 = <b.b.j: int Toolbar_titleMargin>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, 0);

        $i1 = $i0;

        $i2 = <b.b.j: int Toolbar_titleMargins>;

        $z0 = virtualinvoke $r5.<b.b.f.ma: boolean g(int)>($i2);

        if $z0 == 0 goto label01;

        $i1 = <b.b.j: int Toolbar_titleMargins>;

        $i1 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i1, $i0);

     label01:
        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i1;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i1;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i1;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i1;

        $i0 = <b.b.j: int Toolbar_titleMarginStart>;

        $i1 = -1;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, $i1);

        if $i0 < 0 goto label02;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i0;

     label02:
        $i0 = <b.b.j: int Toolbar_titleMarginEnd>;

        $i1 = -1;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, $i1);

        if $i0 < 0 goto label03;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i0;

     label03:
        $i0 = <b.b.j: int Toolbar_titleMarginTop>;

        $i1 = -1;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, $i1);

        if $i0 < 0 goto label04;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i0;

     label04:
        $i0 = <b.b.j: int Toolbar_titleMarginBottom>;

        $i1 = -1;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, $i1);

        if $i0 < 0 goto label05;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i0;

     label05:
        $i0 = <b.b.j: int Toolbar_maxButtonHeight>;

        $i1 = -1;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int c(int,int)>($i0, $i1);

        r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight> = $i0;

        $i0 = <b.b.j: int Toolbar_contentInsetStart>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, -2147483648);

        $i1 = <b.b.j: int Toolbar_contentInsetEnd>;

        $i1 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i1, -2147483648);

        $i2 = <b.b.j: int Toolbar_contentInsetLeft>;

        $i2 = virtualinvoke $r5.<b.b.f.ma: int c(int,int)>($i2, 0);

        $i3 = <b.b.j: int Toolbar_contentInsetRight>;

        $i3 = virtualinvoke $r5.<b.b.f.ma: int c(int,int)>($i3, 0);

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        virtualinvoke $r1.<b.b.f.T: void a(int,int)>($i2, $i3);

        if $i0 != -2147483648 goto label06;

        if $i1 == -2147483648 goto label07;

     label06:
        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        virtualinvoke $r1.<b.b.f.T: void b(int,int)>($i0, $i1);

     label07:
        $i0 = <b.b.j: int Toolbar_contentInsetStartWithNavigation>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, -2147483648);

        r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation> = $i0;

        $i0 = <b.b.j: int Toolbar_contentInsetEndWithActions>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int b(int,int)>($i0, -2147483648);

        r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions> = $i0;

        $i0 = <b.b.j: int Toolbar_collapseIcon>;

        $r6 = virtualinvoke $r5.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i0);

        r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon> = $r6;

        $i0 = <b.b.j: int Toolbar_collapseContentDescription>;

        $r7 = virtualinvoke $r5.<b.b.f.ma: java.lang.CharSequence e(int)>($i0);

        r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription> = $r7;

        $i0 = <b.b.j: int Toolbar_title>;

        $r7 = virtualinvoke $r5.<b.b.f.ma: java.lang.CharSequence e(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label08;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r7);

     label08:
        $i0 = <b.b.j: int Toolbar_subtitle>;

        $r7 = virtualinvoke $r5.<b.b.f.ma: java.lang.CharSequence e(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label09;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r7);

     label09:
        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $r2;

        $i0 = <b.b.j: int Toolbar_popupTheme>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int g(int,int)>($i0, 0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setPopupTheme(int)>($i0);

        $i0 = <b.b.j: int Toolbar_navigationIcon>;

        $r6 = virtualinvoke $r5.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i0);

        if $r6 == null goto label10;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r6);

     label10:
        $i0 = <b.b.j: int Toolbar_navigationContentDescription>;

        $r7 = virtualinvoke $r5.<b.b.f.ma: java.lang.CharSequence e(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label11;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r7);

     label11:
        $i0 = <b.b.j: int Toolbar_logo>;

        $r6 = virtualinvoke $r5.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i0);

        if $r6 == null goto label12;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($r6);

     label12:
        $i0 = <b.b.j: int Toolbar_logoDescription>;

        $r7 = virtualinvoke $r5.<b.b.f.ma: java.lang.CharSequence e(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label13;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($r7);

     label13:
        $i0 = <b.b.j: int Toolbar_titleTextColor>;

        $z0 = virtualinvoke $r5.<b.b.f.ma: boolean g(int)>($i0);

        if $z0 == 0 goto label14;

        $i0 = <b.b.j: int Toolbar_titleTextColor>;

        $r8 = virtualinvoke $r5.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)>($r8);

     label14:
        $i0 = <b.b.j: int Toolbar_subtitleTextColor>;

        $z0 = virtualinvoke $r5.<b.b.f.ma: boolean g(int)>($i0);

        if $z0 == 0 goto label15;

        $i0 = <b.b.j: int Toolbar_subtitleTextColor>;

        $r8 = virtualinvoke $r5.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)>($r8);

     label15:
        $i0 = <b.b.j: int Toolbar_menu>;

        $z0 = virtualinvoke $r5.<b.b.f.ma: boolean g(int)>($i0);

        if $z0 == 0 goto label16;

        $i0 = <b.b.j: int Toolbar_menu>;

        $i0 = virtualinvoke $r5.<b.b.f.ma: int g(int,int)>($i0, 0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void inflateMenu(int)>($i0);

     label16:
        virtualinvoke $r5.<b.b.f.ma: void a()>();

        return;
    }

    private void addCustomViewsWithGravity(java.util.List, int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        $i2 = 0;

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i3 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        $i0 = staticinvoke <b.i.i.c: int a(int,int)>($i0, $i3);

        interfaceinvoke $r1.<java.util.List: void clear()>();

        if $z0 == 0 goto label5;

        $i2 = $i1 - 1;

     label3:
        if $i2 < 0 goto label7;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i1 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i1 != 0 goto label4;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $i1 = $r4.<androidx.appcompat.app.ActionBar$LayoutParams: int gravity>;

        $i1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)>($i1);

        if $i1 != $i0 goto label4;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label4:
        $i1 = -1;

        $i2 = $i2 + $i1;

        goto label3;

     label5:
        if $i2 >= $i1 goto label7;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i3 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i3 != 0 goto label6;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label6;

        $i3 = $r4.<androidx.appcompat.app.ActionBar$LayoutParams: int gravity>;

        $i3 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)>($i3);

        if $i3 != $i0 goto label6;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label6:
        $i2 = $i2 + 1;

        goto label5;

     label7:
        return;
    }

    private void addSystemView(android.view.View, boolean)
    {
        android.view.ViewGroup$LayoutParams $r2;
        java.util.ArrayList $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        goto label3;

     label2:
        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

     label3:
        $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType> = 1;

        if $z0 == 0 goto label4;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        if $r4 == null goto label4;

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        $r5 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label4:
        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r3);

        return;
    }

    private void ensureContentInsets()
    {
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        if $r1 != null goto label1;

        $r1 = new b.b.f.T;

        specialinvoke $r1.<b.b.f.T: void <init>()>();

        r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets> = $r1;

     label1:
        return;
    }

    private void ensureLogoView()
    {
        android.content.Context $r1;
        androidx.appcompat.widget.AppCompatImageView $r3;
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 != null goto label1;

        $r3 = new androidx.appcompat.widget.AppCompatImageView;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r3.<androidx.appcompat.widget.AppCompatImageView: void <init>(android.content.Context)>($r1);

        r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView> = $r3;

     label1:
        return;
    }

    private void ensureMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        android.content.Context $r5;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        android.view.Menu $r3;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$a $r4;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureMenuView()>();

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $r2 != null goto label2;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r3 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        $r2 = (androidx.appcompat.view.menu.MenuBuilder) $r3;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        if $r4 != null goto label1;

        $r4 = new androidx.appcompat.widget.Toolbar$a;

        specialinvoke $r4.<androidx.appcompat.widget.Toolbar$a: void <init>(androidx.appcompat.widget.Toolbar)>(r0);

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter> = $r4;

     label1:
        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>(1);

        $r4 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(b.b.e.a.n,android.content.Context)>($r4, $r5);

     label2:
        return;
    }

    private void ensureMenuView()
    {
        android.content.Context $r2;
        androidx.appcompat.widget.ActionMenuView$d $r3;
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;
        androidx.appcompat.view.menu.MenuBuilder$a $r5;
        b.b.e.a.n$a $r4;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 != null goto label1;

        $r1 = new androidx.appcompat.widget.ActionMenuView;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void <init>(android.content.Context)>($r2);

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView> = $r1;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$d mMenuViewItemClickListener>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$d)>($r3);

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: b.b.e.a.n$a mActionMenuPresenterCallback>;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$a mMenuBuilderCallback>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(b.b.e.a.n$a,androidx.appcompat.view.menu.MenuBuilder$a)>($r4, $r5);

        $r6 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $i0 = $i0 & 112;

        $i0 = 8388613 | $i0;

        $r6.<androidx.appcompat.app.ActionBar$LayoutParams: int gravity> = $i0;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r1.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r1, 0);

     label1:
        return;
    }

    private void ensureNavButtonView()
    {
        android.widget.ImageButton $r1;
        android.content.Context $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;
        androidx.appcompat.widget.AppCompatImageButton $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r1 != null goto label1;

        $r2 = new androidx.appcompat.widget.AppCompatImageButton;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $i0 = <b.b.a: int toolbarNavigationButtonStyle>;

        specialinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, null, $i0);

        r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView> = $r2;

        $r4 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $i0 = $i0 & 112;

        $i0 = 8388611 | $i0;

        $r4.<androidx.appcompat.app.ActionBar$LayoutParams: int gravity> = $i0;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r1.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

     label1:
        return;
    }

    private int getChildHorizontalGravity(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        $i0 = staticinvoke <b.i.i.c: int a(int,int)>($i0, $i1);

        $i0 = $i0 & 7;

        if $i0 == 1 goto label1;

        if $i0 == 3 goto label1;

        if $i0 == 5 goto label1;

        if $i1 != 1 goto label2;

        return 5;

     label1:
        return $i0;

     label2:
        return 3;
    }

    private int getChildTop(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i1 <= 0 goto label1;

        $i1 = $i2 - $i1;

        $i1 = $i1 / 2;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i3 = $r3.<androidx.appcompat.app.ActionBar$LayoutParams: int gravity>;

        $i3 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)>($i3);

        if $i3 == 48 goto label6;

        if $i3 == 80 goto label5;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i3 = $i5 - $i1;

        $i3 = $i3 - $i4;

        $i3 = $i3 - $i2;

        $i3 = $i3 / 2;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i3 >= $i0 goto label3;

        $i3 = $i0;

        goto label4;

     label3:
        $i4 = $i5 - $i4;

        $i2 = $i4 - $i2;

        $i2 = $i2 - $i3;

        $i2 = $i2 - $i1;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        if $i2 >= $i4 goto label4;

        $i2 = $i4 - $i2;

        $i2 = $i3 - $i2;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

     label4:
        $i1 = $i1 + $i3;

        return $i1;

     label5:
        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $i2 = $i3 - $i2;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i2 - $i3;

        $i1 = $i2 - $i1;

        return $i1;

     label6:
        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i1 = $i2 - $i1;

        return $i1;
    }

    private int getChildVerticalGravity(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i0 = $i0 & 112;

        if $i0 == 16 goto label1;

        if $i0 == 48 goto label1;

        if $i0 == 80 goto label1;

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $i0 = $i0 & 112;

     label1:
        return $i0;
    }

    private int getHorizontalMargins(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i0 = staticinvoke <b.i.i.f: int b(android.view.ViewGroup$MarginLayoutParams)>($r3);

        $i1 = staticinvoke <b.i.i.f: int a(android.view.ViewGroup$MarginLayoutParams)>($r3);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private android.view.MenuInflater getMenuInflater()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.content.Context $r2;
        androidx.appcompat.view.SupportMenuInflater $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = new androidx.appcompat.view.SupportMenuInflater;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r1.<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    private int getVerticalMargins(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r1;
        android.view.ViewGroup$MarginLayoutParams $r3;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    private int getViewListMeasuredWidth(java.util.List, int[])
    {
        android.view.ViewGroup$LayoutParams $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;
        java.util.List $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: int[];

        $i0 = $r2[0];

        $i1 = $r2[1];

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = $i1;

        $i4 = $i0;

        $i0 = 0;

        $i1 = 0;

     label1:
        if $i0 >= $i2 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (android.view.View) $r3;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r5;

        $i5 = $r6.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i4 = $i5 - $i4;

        $i5 = $r6.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i6 = $i5 - $i3;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i4 = neg $i4;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $i6 = neg $i6;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i7 = virtualinvoke $r4.<android.view.View: int getMeasuredWidth()>();

        $i5 = $i5 + $i7;

        $i3 = $i5 + $i3;

        $i1 = $i1 + $i3;

        $i0 = $i0 + 1;

        $i3 = $i6;

        goto label1;

     label2:
        return $i1;
    }

    private boolean isChildOrHidden(android.view.View)
    {
        android.view.ViewParent $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;
        java.util.ArrayList $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == r0 goto label2;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isCustomView(android.view.View)
    {
        androidx.appcompat.widget.Toolbar$LayoutParams $r2;
        android.view.ViewGroup$LayoutParams $r0;
        int $i0;
        android.view.View $r1;

        $r1 := @parameter0: android.view.View;

        $r0 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r0;

        $i0 = $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private int layoutChildLeft(android.view.View, int, int[], int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $i1 := @parameter3: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i2 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i3 = $r2[0];

        $i2 = $i2 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i0 = $i0 + $i3;

        $i2 = neg $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r2[0] = $i2;

        $i2 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)>($r1, $i1);

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = $i0 + $i1;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i4 + $i2;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i2, $i3, $i4);

        $i2 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        return $i0;
    }

    private int layoutChildRight(android.view.View, int, int[], int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $i1 := @parameter3: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i2 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i3 = $r2[1];

        $i2 = $i2 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i0 = $i0 - $i3;

        $i2 = neg $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r2[1] = $i2;

        $i2 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)>($r1, $i1);

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = $i0 - $i1;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i4 + $i2;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i3, $i2, $i0, $i4);

        $i2 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        return $i0;
    }

    private int measureChildCollapseMargins(android.view.View, int, int, int, int, int[])
    {
        android.view.ViewGroup$LayoutParams $r3;
        int[] $r2;
        android.view.ViewGroup$MarginLayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 := @parameter5: int[];

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i5 = $r2[0];

        $i5 = $i4 - $i5;

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i6 = $r2[1];

        $i6 = $i4 - $i6;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i4 = $i4 + $i7;

        $i5 = neg $i5;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $r2[0] = $i5;

        $i5 = neg $i6;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $r2[1] = $i5;

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i5 = $i5 + $i6;

        $i5 = $i5 + $i4;

        $i2 = $i5 + $i2;

        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i1 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i1, $i2, $i5);

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i2 = $i2 + $i5;

        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i2 = $i2 + $i5;

        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i2 + $i5;

        $i2 = $i2 + $i3;

        $i3 = $r4.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i2 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i0, $i2, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i2);

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i1 = $i1 + $i4;

        return $i1;
    }

    private void measureChildConstrained(android.view.View, int, int, int, int, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i5 = $i5 + $i6;

        $i6 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i5 = $i5 + $i6;

        $i6 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i5 = $i5 + $i6;

        $i1 = $i5 + $i1;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i0 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i0, $i1, $i5);

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i1 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i1 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i5;

        $i1 = $i1 + $i3;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i1 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i2, $i1, $i3);

        $i2 = $i1;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i3 == 1073741824 goto label2;

        if $i4 < 0 goto label2;

        if $i3 == 0 goto label1;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i4);

     label1:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);

     label2:
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i2);

        return;
    }

    private void postShowOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.Runnable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private boolean shouldCollapse()
    {
        int $i0, $i1, $i2;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 = r0.<androidx.appcompat.widget.Toolbar: boolean mCollapsible>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r1);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        if $i2 <= 0 goto label3;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i2 <= 0 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    private boolean shouldLayout(android.view.View)
    {
        android.view.ViewParent $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 != r0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void addChildrenForExpandedActionView()
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r3;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.view.View) $r2;

        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>($r3);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        $r1 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        if $z0 == 0 goto label1;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void collapseActionView()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$a $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = $r1.<androidx.appcompat.widget.Toolbar$a: androidx.appcompat.view.menu.MenuItemImpl b>;

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()>();

     label3:
        return;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()>();

     label1:
        return;
    }

    public void ensureCollapseButtonView()
    {
        android.widget.ImageButton $r1;
        android.content.Context $r3;
        androidx.appcompat.widget.AppCompatImageButton $r2;
        java.lang.CharSequence $r5;
        android.graphics.drawable.Drawable $r4;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;
        b.b.f.pa $r7;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r1 != null goto label1;

        $r2 = new androidx.appcompat.widget.AppCompatImageButton;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $i0 = <b.b.a: int toolbarNavigationButtonStyle>;

        specialinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, null, $i0);

        r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView> = $r2;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke $r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription>;

        virtualinvoke $r1.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $i0 = $i0 & 112;

        $i0 = 8388611 | $i0;

        $r6.<androidx.appcompat.app.ActionBar$LayoutParams: int gravity> = $i0;

        $r6.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType> = 2;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $r1.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r7 = new b.b.f.pa;

        specialinvoke $r7.<b.b.f.pa: void <init>(androidx.appcompat.widget.Toolbar)>(r0);

        virtualinvoke $r1.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r7);

     label1:
        return;
    }

    public volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    public androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $i0 = -2;

        $i1 = -2;

        specialinvoke $r1.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        android.util.AttributeSet $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        return $r1;
    }

    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar$LayoutParams $r2;
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar$LayoutParams $r2, $r3;
        androidx.appcompat.app.ActionBar$LayoutParams $r4;
        android.view.ViewGroup$LayoutParams $r1;
        android.view.ViewGroup$MarginLayoutParams $r5;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r1;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(androidx.appcompat.widget.Toolbar$LayoutParams)>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof androidx.appcompat.app.ActionBar$LayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r4 = (androidx.appcompat.app.ActionBar$LayoutParams) $r1;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(androidx.appcompat.app.ActionBar$LayoutParams)>($r4);

        return $r2;

     label2:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label3;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r5 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r5);

        return $r2;

     label3:
        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public java.lang.CharSequence getCollapseContentDescription()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCollapseIcon()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;

     label1:
        return null;
    }

    public int getContentInsetEnd()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<b.b.f.T: int a()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetEndWithActions()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        if $i0 == -2147483648 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        return $i0;
    }

    public int getContentInsetLeft()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<b.b.f.T: int b()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetRight()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<b.b.f.T: int c()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetStart()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<b.b.f.T: int d()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetStartWithNavigation()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if $i0 == -2147483648 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        return $i0;
    }

    public int getCurrentContentInsetEnd()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()>();

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        return $i1;

     label3:
        $i1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        return $i1;
    }

    public int getCurrentContentInsetLeft()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        return $i0;

     label1:
        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        return $i0;
    }

    public int getCurrentContentInsetRight()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        return $i0;

     label1:
        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        return $i0;
    }

    public int getCurrentContentInsetStart()
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        $i1 = r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;

     label1:
        $i0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable getLogo()
    {
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;

     label1:
        return null;
    }

    public java.lang.CharSequence getLogoDescription()
    {
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        return $r1;

     label1:
        return null;
    }

    public android.view.Menu getMenu()
    {
        android.view.Menu $r1;
        androidx.appcompat.widget.ActionMenuView $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r1 = virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        return $r1;
    }

    public java.lang.CharSequence getNavigationContentDescription()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getNavigationIcon()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;

     label1:
        return null;
    }

    public androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.ActionMenuPresenter r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        return r1;
    }

    public android.graphics.drawable.Drawable getOverflowIcon()
    {
        androidx.appcompat.widget.ActionMenuView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r1 = virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>();

        return $r1;
    }

    public android.content.Context getPopupContext()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.content.Context r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        return r1;
    }

    public int getPopupTheme()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        return i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText>;

        return r1;
    }

    public final android.widget.TextView getSubtitleTextView()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        return r1;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText>;

        return r1;
    }

    public int getTitleMarginBottom()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        return i0;
    }

    public int getTitleMarginEnd()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        return i0;
    }

    public int getTitleMarginStart()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        return i0;
    }

    public int getTitleMarginTop()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        return i0;
    }

    public final android.widget.TextView getTitleTextView()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        return r1;
    }

    public b.b.f.I getWrapper()
    {
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.ta $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.ta mWrapper>;

        if $r1 != null goto label1;

        $r1 = new b.b.f.ta;

        specialinvoke $r1.<b.b.f.ta: void <init>(androidx.appcompat.widget.Toolbar,boolean)>(r0, 1);

        r0.<androidx.appcompat.widget.Toolbar: b.b.f.ta mWrapper> = $r1;

     label1:
        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.ta mWrapper>;

        return $r1;
    }

    public boolean hasExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$a $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = $r1.<androidx.appcompat.widget.Toolbar$a: androidx.appcompat.view.menu.MenuItemImpl b>;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void inflateMenu(int)
    {
        android.view.MenuInflater $r1;
        int $i0;
        android.view.Menu $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()>();

        $r2 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()>();

        virtualinvoke $r1.<android.view.MenuInflater: void inflate(int,android.view.Menu)>($i0, $r2);

        return;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        android.widget.TextView $r1;
        android.text.Layout $r2;
        int $i0, $i1, $i2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $i2 = virtualinvoke $r2.<android.text.Layout: int getEllipsisCount(int)>($i1);

        if $i2 <= 0 goto label4;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    public void onDetachedFromWindow()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.Runnable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 9 goto label1;

        r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 0;

     label1:
        $z0 = r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>($r1);

        if $i0 != 9 goto label2;

        if $z0 != 0 goto label2;

        r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 1;

     label2:
        if $i0 == 10 goto label3;

        if $i0 != 3 goto label4;

     label3:
        r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        android.widget.ImageButton $r2;
        android.widget.ImageView $r5;
        java.util.ArrayList $r11;
        androidx.appcompat.widget.ActionMenuView $r3;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View $r4;
        boolean $z0, $z1, $z2, $z3;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.appcompat.widget.Toolbar$LayoutParams $r8, $r10;
        android.widget.TextView $r6, $r9;
        androidx.appcompat.widget.Toolbar r0;
        java.lang.Object $r12;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i0 != 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i7 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i8 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i0 = $i2 - $i6;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: int[] mTempMargins>;

        $r1[1] = 0;

        $r1[0] = 0;

        $i9 = staticinvoke <b.i.i.y: int q(android.view.View)>(r0);

        if $i9 < 0 goto label03;

        $i1 = $i3 - $i1;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i1);

        goto label04;

     label03:
        $i10 = 0;

     label04:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z1 == 0 goto label06;

        if $z0 == 0 goto label05;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r2, $i0, $r1, $i10);

        $i3 = $i5;

        goto label08;

     label05:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i3 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r2, $i5, $r1, $i10);

        goto label07;

     label06:
        $i3 = $i5;

     label07:
        $i1 = $i0;

     label08:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z1 == 0 goto label10;

        if $z0 == 0 goto label09;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r2, $i1, $r1, $i10);

        goto label10;

     label09:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i3 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r2, $i3, $r1, $i10);

     label10:
        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r3);

        if $z1 == 0 goto label12;

        if $z0 == 0 goto label11;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i3 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r3, $i3, $r1, $i10);

        goto label12;

     label11:
        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r3, $i1, $r1, $i10);

     label12:
        $i9 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()>();

        $i11 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()>();

        $i12 = $i9 - $i3;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $r1[0] = $i12;

        $i12 = $i0 - $i1;

        $i12 = $i11 - $i12;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $r1[1] = $i12;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i9);

        $i9 = $i3;

        $i0 = $i0 - $i11;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $i0 = $i1;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z1 == 0 goto label14;

        if $z0 == 0 goto label13;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r4, $i1, $r1, $i10);

        goto label14;

     label13:
        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i9 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r4, $i3, $r1, $i10);

     label14:
        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r5);

        if $z1 == 0 goto label16;

        if $z0 == 0 goto label15;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r5, $i0, $r1, $i10);

        goto label16;

     label15:
        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i9 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r5, $i9, $r1, $i10);

     label16:
        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r6);

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z2 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r6);

        if $z1 == 0 goto label17;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i3 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i6;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i6 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i3 = $i3 + $i6;

        $i6 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i3 = $i3 + $i6;

        $i6 = $i3;

        goto label18;

     label17:
        $i1 = $i6;

        $i6 = 0;

     label18:
        if $z2 == 0 goto label19;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i3 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i11 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i3 = $i3 + $i11;

        $i11 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i3 = $i3 + $i11;

        $i6 = $i6 + $i3;

        goto label19;

     label19:
        if $z1 != 0 goto label22;

        if $z2 == 0 goto label20;

        goto label22;

     label20:
        $i3 = $i5;

        $i5 = $i10;

     label21:
        $i7 = 0;

        goto label50;

     label22:
        if $z1 == 0 goto label23;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        goto label24;

     label23:
        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

     label24:
        if $z2 == 0 goto label25;

        $r9 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        goto label26;

     label25:
        $r9 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

     label26:
        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r7 = virtualinvoke $r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r10 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        if $z1 == 0 goto label27;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i3 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        if $i3 > 0 goto label28;

     label27:
        if $z2 == 0 goto label29;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i3 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        if $i3 <= 0 goto label29;

     label28:
        $i3 = $i5;

        $z3 = 1;

        goto label30;

     label29:
        $i3 = $i5;

        $z3 = 0;

     label30:
        $i5 = r0.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $i11 = $i5 & 112;

        $i5 = $i10;

        if $i11 == 48 goto label34;

        if $i11 == 80 goto label33;

        $i10 = $i4 - $i7;

        $i10 = $i10 - $i8;

        $i10 = $i10 - $i6;

        $i10 = $i10 / 2;

        $i11 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i12 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i13 = $i11 + $i12;

        if $i10 >= $i13 goto label31;

        $i10 = $i11 + $i12;

        goto label32;

     label31:
        $i4 = $i4 - $i8;

        $i4 = $i4 - $i6;

        $i4 = $i4 - $i10;

        $i4 = $i4 - $i7;

        $i6 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i8 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i6 = $i6 + $i8;

        if $i4 >= $i6 goto label32;

        $i6 = $r10.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i8 = $i6 + $i8;

        $i4 = $i8 - $i4;

        $i4 = $i10 - $i4;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

     label32:
        $i4 = $i7 + $i10;

        goto label35;

     label33:
        $i7 = $i4 - $i8;

        $i4 = $r10.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i7 = $i7 - $i4;

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i7 = $i7 - $i4;

        $i4 = $i7 - $i6;

        goto label35;

     label34:
        $i7 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i4 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i7 = $i7 + $i4;

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i4 = $i7 + $i4;

     label35:
        if $z0 == 0 goto label43;

        if $z3 == 0 goto label36;

        $i7 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        goto label37;

     label36:
        $i7 = 0;

     label37:
        $i8 = $r1[1];

        $i7 = $i7 - $i8;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $i0 = $i0 - $i8;

        $i7 = neg $i7;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $r1[1] = $i7;

        if $z1 == 0 goto label38;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i7 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i7 = $i0 - $i7;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i8 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i8 = $i8 + $i4;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i7, $i4, $i0, $i8);

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i7 = $i7 - $i4;

        $i4 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i4 = $i8 + $i4;

        goto label39;

     label38:
        $i7 = $i0;

     label39:
        if $z2 == 0 goto label40;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i8 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i4 = $i4 + $i8;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i8 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i8 = $i0 - $i8;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i10 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i10 = $i10 + $i4;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i8, $i4, $i0, $i10);

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i4 = $i0 - $i4;

        $i8 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        goto label41;

     label40:
        $i4 = $i0;

     label41:
        if $z3 == 0 goto label42;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i4);

     label42:
        goto label21;

     label43:
        if $z3 == 0 goto label44;

        $i8 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        goto label45;

     label44:
        $i8 = 0;

     label45:
        $i7 = 0;

        $i10 = $r1[0];

        $i8 = $i8 - $i10;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $i9 = $i9 + $i10;

        $i8 = neg $i8;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $r1[0] = $i8;

        if $z1 == 0 goto label46;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i8 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i8 = $i8 + $i9;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i10 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i10 = $i10 + $i4;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i9, $i4, $i8, $i10);

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i8 = $i8 + $i4;

        $i4 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i4 = $i10 + $i4;

        goto label47;

     label46:
        $i8 = $i9;

     label47:
        if $z2 == 0 goto label48;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i10 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i4 = $i4 + $i10;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i10 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i10 = $i10 + $i9;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i6 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i6 = $i6 + $i4;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i9, $i4, $i10, $i6);

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i4 = $i10 + $i4;

        $i10 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        goto label49;

     label48:
        $i4 = $i9;

     label49:
        if $z3 == 0 goto label50;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i4);

     label50:
        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r11, 3);

        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i8 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i4 = $i9;

        $i9 = 0;

     label51:
        if $i9 >= $i8 goto label52;

        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i9);

        $r4 = (android.view.View) $r12;

        $i4 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r4, $i4, $r1, $i5);

        $i9 = $i9 + 1;

        goto label51;

     label52:
        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r11, 5);

        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i8 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i9 = 0;

     label53:
        if $i9 >= $i8 goto label54;

        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i9);

        $r4 = (android.view.View) $r12;

        $i0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r4, $i0, $r1, $i5);

        $i9 = $i9 + 1;

        goto label53;

     label54:
        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r11, 1);

        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i8 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])>($r11, $r1);

        $i2 = $i2 - $i3;

        $i1 = $i2 - $i1;

        $i1 = $i1 / 2;

        $i1 = $i3 + $i1;

        $i2 = $i8 / 2;

        $i1 = $i1 - $i2;

        $i2 = $i8 + $i1;

        if $i1 >= $i4 goto label55;

        goto label57;

     label55:
        if $i2 <= $i0 goto label56;

        $i0 = $i2 - $i0;

        $i4 = $i1 - $i0;

        goto label57;

     label56:
        $i4 = $i1;

     label57:
        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

     label58:
        if $i7 >= $i0 goto label59;

        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        $r4 = (android.view.View) $r12;

        $i4 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r4, $i4, $r1, $i5);

        $i7 = $i7 + 1;

        goto label58;

     label59:
        $r11 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

        return;
    }

    public void onMeasure(int, int)
    {
        android.widget.ImageButton $r2;
        android.widget.ImageView $r5;
        androidx.appcompat.widget.ActionMenuView $r3;
        byte $b2, $b3;
        int[] $r1;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View $r4;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.appcompat.widget.Toolbar$LayoutParams $r7;
        android.widget.TextView $r8;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: int[] mTempMargins>;

        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 == 0 goto label01;

        $b2 = 1;

        $b3 = 0;

        goto label02;

     label01:
        $b2 = 0;

        $b3 = 1;

     label02:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label03;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i4 = r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r2, $i0, 0, $i1, 0, $i4);

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i4 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i5 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r2);

        $i6 = $i4 + $i5;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i4 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i5 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r2);

        $i4 = $i4 + $i5;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i5 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredState()>();

        $i7 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(0, $i5);

        $i5 = $i4;

        $i4 = $i7;

        goto label04;

     label03:
        $i6 = 0;

        $i5 = 0;

        $i4 = 0;

     label04:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label05;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i7 = r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r2, $i0, 0, $i1, 0, $i7);

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i7 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i6 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r2);

        $i6 = $i7 + $i6;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i7 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i8 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r2);

        $i7 = $i7 + $i8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i7);

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i7 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i7);

     label05:
        $i8 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i6);

        $i6 = $i8 - $i6;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $r1[$b2] = $i6;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r3);

        if $z0 == 0 goto label06;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i6 = r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r3, $i0, $i7, $i1, 0, $i6);

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i6 = virtualinvoke $r3.<android.view.ViewGroup: int getMeasuredWidth()>();

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i8 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r3);

        $i6 = $i6 + $i8;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i8 = virtualinvoke $r3.<android.view.ViewGroup: int getMeasuredHeight()>();

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i9 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r3);

        $i8 = $i8 + $i9;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i8);

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i8 = virtualinvoke $r3.<android.view.ViewGroup: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i8);

        goto label07;

     label06:
        $i6 = 0;

     label07:
        $i8 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i6);

        $i7 = $i7 + $i9;

        $i6 = $i8 - $i6;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $r1[$b3] = $i6;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z0 == 0 goto label08;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i6 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r4, $i0, $i7, $i1, 0, $r1);

        $i7 = $i7 + $i6;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i6 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i8 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r4);

        $i6 = $i6 + $i8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $r4 = r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i6 = virtualinvoke $r4.<android.view.View: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i6);

     label08:
        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r5);

        if $z0 == 0 goto label09;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i6 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r5, $i0, $i7, $i1, 0, $r1);

        $i7 = $i7 + $i6;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i6 = virtualinvoke $r5.<android.widget.ImageView: int getMeasuredHeight()>();

        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i8 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r5);

        $i6 = $i6 + $i8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $r5 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i6 = virtualinvoke $r5.<android.widget.ImageView: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i6);

     label09:
        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i8 = 0;

     label10:
        if $i8 >= $i6 goto label13;

        $r4 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i8);

        $r6 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r6;

        $i9 = $r7.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i9 != 0 goto label12;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z0 != 0 goto label11;

        goto label12;

     label11:
        $i9 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r4, $i0, $i7, $i1, 0, $r1);

        $i7 = $i7 + $i9;

        $i9 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        $i10 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r4);

        $i9 = $i9 + $i10;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i9);

        $i9 = virtualinvoke $r4.<android.view.View: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i9);

     label12:
        $i8 = $i8 + 1;

        goto label10;

     label13:
        $i6 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i8 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i6 = $i6 + $i8;

        $i8 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        $i9 = r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i9 = $i8 + $i9;

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z0 == 0 goto label14;

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i8 = $i7 + $i9;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r8, $i0, $i8, $i1, $i6, $r1);

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i8 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredWidth()>();

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i10 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r8);

        $i10 = $i8 + $i10;

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i8 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredHeight()>();

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i11 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r8);

        $i8 = $i8 + $i11;

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i11 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i11);

        goto label15;

     label14:
        $i10 = 0;

        $i8 = 0;

     label15:
        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z0 == 0 goto label16;

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i9 = $i7 + $i9;

        $i6 = $i8 + $i6;

        $i6 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r8, $i0, $i9, $i1, $i6, $r1);

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i6);

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i6 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredHeight()>();

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i9 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r8);

        $i6 = $i6 + $i9;

        $i8 = $i8 + $i6;

        $r8 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i6 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i6);

        goto label16;

     label16:
        $i7 = $i7 + $i10;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i8);

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i8 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i6 = $i6 + $i8;

        $i7 = $i7 + $i6;

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i8 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i6 = $i6 + $i8;

        $i5 = $i5 + $i6;

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumWidth()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        $i6 = -16777216 & $i4;

        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i7, $i0, $i6);

        $i7 = virtualinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumHeight()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i7);

        $i4 = $i4 << 16;

        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i5, $i1, $i4);

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean shouldCollapse()>();

        if $z0 == 0 goto label17;

        $i1 = 0;

     label17:
        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r2;
        androidx.appcompat.view.menu.MenuBuilder $r5;
        androidx.appcompat.widget.Toolbar$a $r1;
        android.view.MenuItem $r6;
        androidx.appcompat.widget.ActionMenuView $r4;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;
        androidx.appcompat.widget.Toolbar$SavedState $r3;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.os.Parcelable;

        $z0 = $r2 instanceof androidx.appcompat.widget.Toolbar$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r2);

        return;

     label1:
        $r3 = (androidx.appcompat.widget.Toolbar$SavedState) $r2;

        $r2 = virtualinvoke $r3.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r2);

        $r4 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        $i0 = $r3.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId>;

        if $i0 == 0 goto label4;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        if $r1 == null goto label4;

        if $r5 == null goto label4;

        $r6 = interfaceinvoke $r5.<android.view.Menu: android.view.MenuItem findItem(int)>($i0);

        if $r6 == null goto label4;

        interfaceinvoke $r6.<android.view.MenuItem: boolean expandActionView()>();

     label4:
        $z0 = $r3.<androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()>();

     label5:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>($i0);

     label1:
        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        $z0 = 1;

        if $i0 != 1 goto label2;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke $r1.<b.b.f.T: void a(boolean)>($z0);

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.os.Parcelable $r2;
        androidx.appcompat.view.menu.MenuItemImpl $r4;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$a $r3;
        androidx.appcompat.widget.Toolbar$SavedState $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = new androidx.appcompat.widget.Toolbar$SavedState;

        $r2 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r1.<androidx.appcompat.widget.Toolbar$SavedState: void <init>(android.os.Parcelable)>($r2);

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        if $r3 == null goto label1;

        $r4 = $r3.<androidx.appcompat.widget.Toolbar$a: androidx.appcompat.view.menu.MenuItemImpl b>;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<androidx.appcompat.view.menu.MenuItemImpl: int getItemId()>();

        $r1.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId> = $i0;

     label1:
        $z0 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()>();

        $r1.<androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen> = $z0;

        return $r1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label1;

        r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 0;

     label1:
        $z0 = r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label2;

        if $z0 != 0 goto label2;

        r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 1;

     label2:
        if $i0 == 1 goto label3;

        if $i0 != 3 goto label4;

     label3:
        r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    public void removeChildrenForExpandedActionView()
    {
        android.view.ViewGroup$LayoutParams $r2;
        java.util.ArrayList $r5;
        androidx.appcompat.widget.ActionMenuView $r4;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

        $i1 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i1 == 2 goto label2;

        $r4 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == $r4 goto label2;

        virtualinvoke r0.<android.view.ViewGroup: void removeViewAt(int)>($i0);

        $r5 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label2:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label3:
        return;
    }

    public void setCollapseContentDescription(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setCollapseContentDescription(java.lang.CharSequence)
    {
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()>();

     label1:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

     label2:
        return;
    }

    public void setCollapseIcon(int)
    {
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setCollapseIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r2 == null goto label2;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label2:
        return;
    }

    public void setCollapsible(boolean)
    {
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 := @parameter0: boolean;

        r0.<androidx.appcompat.widget.Toolbar: boolean mCollapsible> = $z0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setContentInsetEndWithActions(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i1 := @parameter0: int;

        if $i1 >= 0 goto label1;

        $i1 = -2147483648;

     label1:
        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        if $i1 == $i0 goto label2;

        r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions> = $i1;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label2;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetStartWithNavigation(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i1 := @parameter0: int;

        if $i1 >= 0 goto label1;

        $i1 = -2147483648;

     label1:
        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if $i1 == $i0 goto label2;

        r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation> = $i1;

        $r1 = virtualinvoke r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label2;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetsAbsolute(int, int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        virtualinvoke $r1.<b.b.f.T: void a(int,int)>($i0, $i1);

        return;
    }

    public void setContentInsetsRelative(int, int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        b.b.f.T $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = r0.<androidx.appcompat.widget.Toolbar: b.b.f.T mContentInsets>;

        virtualinvoke $r1.<b.b.f.T: void b(int,int)>($i0, $i1);

        return;
    }

    public void setLogo(int)
    {
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureLogoView()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label2;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label2;

     label1:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label2;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

        $r3 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label2:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label3;

        virtualinvoke $r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label3:
        return;
    }

    public void setLogoDescription(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setLogoDescription(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureLogoView()>();

     label1:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>($r1);

     label2:
        return;
    }

    public void setMenu(androidx.appcompat.view.menu.MenuBuilder, androidx.appcompat.widget.ActionMenuPresenter)
    {
        android.content.Context $r2;
        androidx.appcompat.view.menu.MenuBuilder $r3, $r4;
        androidx.appcompat.widget.Toolbar$a $r7;
        androidx.appcompat.widget.ActionMenuView $r5;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1, $r6;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r4 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r1 := @parameter1: androidx.appcompat.widget.ActionMenuPresenter;

        if $r4 != null goto label1;

        $r5 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureMenuView()>();

        $r5 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r3 = virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $r3 != $r4 goto label2;

        return;

     label2:
        if $r3 == null goto label3;

        $r6 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        virtualinvoke $r3.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(b.b.e.a.n)>($r6);

        $r7 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        virtualinvoke $r3.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(b.b.e.a.n)>($r7);

     label3:
        $r7 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        if $r7 != null goto label4;

        $r7 = new androidx.appcompat.widget.Toolbar$a;

        specialinvoke $r7.<androidx.appcompat.widget.Toolbar$a: void <init>(androidx.appcompat.widget.Toolbar)>(r0);

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter> = $r7;

     label4:
        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: void b(boolean)>(1);

        if $r4 == null goto label5;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(b.b.e.a.n,android.content.Context)>($r1, $r2);

        $r7 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(b.b.e.a.n,android.content.Context)>($r7, $r2);

        goto label6;

     label5:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>($r2, null);

        $r7 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r7.<androidx.appcompat.widget.Toolbar$a: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>($r2, null);

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)>(1);

        $r7 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$a mExpandedMenuPresenter>;

        virtualinvoke $r7.<androidx.appcompat.widget.Toolbar$a: void updateMenuView(boolean)>(1);

     label6:
        $r5 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r5 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)>($r1);

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter> = $r1;

        return;
    }

    public void setMenuCallbacks(b.b.e.a.n$a, androidx.appcompat.view.menu.MenuBuilder$a)
    {
        androidx.appcompat.widget.ActionMenuView $r3;
        androidx.appcompat.view.menu.MenuBuilder$a $r2;
        b.b.e.a.n$a $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: b.b.e.a.n$a;

        $r2 := @parameter1: androidx.appcompat.view.menu.MenuBuilder$a;

        r0.<androidx.appcompat.widget.Toolbar: b.b.e.a.n$a mActionMenuPresenterCallback> = $r1;

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$a mMenuBuilderCallback> = $r2;

        $r3 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r3 == null goto label1;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(b.b.e.a.n$a,androidx.appcompat.view.menu.MenuBuilder$a)>($r1, $r2);

     label1:
        return;
    }

    public void setNavigationContentDescription(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

     label1:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

     label2:
        return;
    }

    public void setNavigationIcon(int)
    {
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        android.widget.ImageButton $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label2;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label2;

     label1:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label2;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

        $r3 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label2:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label3;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label3:
        return;
    }

    public void setNavigationOnClickListener(android.view.View$OnClickListener)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.view.View$OnClickListener $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View$OnClickListener;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r1);

        return;
    }

    public void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$b)
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$b $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: androidx.appcompat.widget.Toolbar$b;

        r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$b mOnMenuItemClickListener> = $r1;

        return;
    }

    public void setOverflowIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ActionMenuView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setPopupTheme(int)
    {
        android.content.Context $r1;
        int $i0, $i1;
        android.view.ContextThemeWrapper $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 = r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        if $i1 == $i0 goto label2;

        r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme> = $i0;

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $r1;

        return;

     label1:
        $r2 = new android.view.ContextThemeWrapper;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0);

        r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $r2;

     label2:
        return;
    }

    public void setSubtitle(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.AppCompatTextView $r4;
        android.content.Context $r3;
        java.lang.CharSequence $r1;
        android.text.TextUtils$TruncateAt $r5;
        java.util.ArrayList $r7;
        android.content.res.ColorStateList $r6;
        android.widget.TextView $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r4 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r4.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r3);

        r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView> = $r4;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setSingleLine()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r2.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r5);

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance>;

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r3, $i0);

     label1:
        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor>;

        if $r6 == null goto label2;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r6);

     label2:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label4;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label4;

     label3:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label4;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

        $r7 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label4:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label5;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label5:
        r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText> = $r1;

        return;
    }

    public void setSubtitleTextAppearance(android.content.Context, int)
    {
        android.content.Context $r1;
        android.widget.TextView $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance> = $i0;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, $i0);

     label1:
        return;
    }

    public void setSubtitleTextColor(int)
    {
        android.content.res.ColorStateList $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setSubtitleTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor> = $r1;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public void setTitle(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.AppCompatTextView $r4;
        android.content.Context $r3;
        java.lang.CharSequence $r1;
        android.text.TextUtils$TruncateAt $r5;
        java.util.ArrayList $r7;
        android.content.res.ColorStateList $r6;
        android.widget.TextView $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r4 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r4.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r3);

        r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView> = $r4;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setSingleLine()>();

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r2.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r5);

        $i0 = r0.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance>;

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r3, $i0);

     label1:
        $r6 = r0.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor>;

        if $r6 == null goto label2;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r6);

     label2:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label4;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        specialinvoke r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label4;

     label3:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label4;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

        $r7 = r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label4:
        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label5;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label5:
        r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText> = $r1;

        return;
    }

    public void setTitleMargin(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i0;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i1;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i2;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i3;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setTitleMarginBottom(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setTitleMarginEnd(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setTitleMarginStart(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setTitleMarginTop(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setTitleTextAppearance(android.content.Context, int)
    {
        android.content.Context $r1;
        android.widget.TextView $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r0.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance> = $i0;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, $i0);

     label1:
        return;
    }

    public void setTitleTextColor(int)
    {
        android.content.res.ColorStateList $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke r0.<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setTitleTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView $r2;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor> = $r1;

        $r2 = r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.Toolbar: java.lang.String TAG> = "Toolbar";

        return;
    }
}
