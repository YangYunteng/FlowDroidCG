public class org.dom4j.util.IndexedElement extends org.dom4j.tree.DefaultElement
{
    public java.util.Map attributeIndex;
    public java.util.Map elementIndex;

    public void <init>(java.lang.String)
    {
        org.dom4j.util.IndexedElement r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(java.lang.String)>($r1);

        return;
    }

    public void <init>(org.dom4j.QName)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.QName;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>($r1);

        return;
    }

    public void <init>(org.dom4j.QName, int)
    {
        int $i0;
        org.dom4j.util.IndexedElement r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.QName;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName,int)>($r1, $i0);

        return;
    }

    public void addNode(org.dom4j.Node)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.Node $r1;
        java.util.Map $r2;
        org.dom4j.Element $r3;
        org.dom4j.Attribute $r4;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.Node;

        specialinvoke r0.<org.dom4j.tree.AbstractElement: void addNode(org.dom4j.Node)>($r1);

        $r2 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        if $r2 == null goto label1;

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label1;

        $r3 = (org.dom4j.Element) $r1;

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToElementIndex(org.dom4j.Element)>($r3);

        return;

     label1:
        $r2 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        if $r2 == null goto label2;

        $z0 = $r1 instanceof org.dom4j.Attribute;

        if $z0 == 0 goto label2;

        $r4 = (org.dom4j.Attribute) $r1;

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToAttributeIndex(org.dom4j.Attribute)>($r4);

     label2:
        return;
    }

    public void addToAttributeIndex(java.lang.Object, org.dom4j.Attribute)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r4;
        java.lang.Object $r1, $r3;
        org.dom4j.Attribute $r2;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.dom4j.Attribute;

        $r4 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 == null goto label1;

        $r4 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }

    public void addToAttributeIndex(org.dom4j.Attribute)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.QName $r2;
        java.lang.String $r3;
        org.dom4j.Attribute $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.Attribute;

        $r2 = interfaceinvoke $r1.<org.dom4j.Attribute: org.dom4j.QName getQName()>();

        $r3 = virtualinvoke $r2.<org.dom4j.QName: java.lang.String getName()>();

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToAttributeIndex(java.lang.Object,org.dom4j.Attribute)>($r2, $r1);

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToAttributeIndex(java.lang.Object,org.dom4j.Attribute)>($r3, $r1);

        return;
    }

    public void addToElementIndex(java.lang.Object, org.dom4j.Element)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r5;
        java.util.Map $r3;
        java.lang.Object $r1, $r4;
        org.dom4j.Element $r2;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.dom4j.Element;

        $r3 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label1;

        $r3 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;

     label1:
        $z0 = $r4 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r5 = (java.util.List) $r4;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;

     label2:
        $r5 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.List createList()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

        return;
    }

    public void addToElementIndex(org.dom4j.Element)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.Element $r1;
        org.dom4j.QName $r2;
        java.lang.String $r3;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.QName getQName()>();

        $r3 = virtualinvoke $r2.<org.dom4j.QName: java.lang.String getName()>();

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToElementIndex(java.lang.Object,org.dom4j.Element)>($r2, $r1);

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToElementIndex(java.lang.Object,org.dom4j.Element)>($r3, $r1);

        return;
    }

    public org.dom4j.Element asElement(java.lang.Object)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r1;
        org.dom4j.Element $r2;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label1;

        $r2 = (org.dom4j.Element) $r1;

        return $r2;

     label1:
        if $r1 == null goto label2;

        $r3 = (java.util.List) $r1;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 < 1 goto label2;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (org.dom4j.Element) $r1;

        return $r2;

     label2:
        return null;
    }

    public java.util.Iterator asElementIterator(java.lang.Object)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.List asElementList(java.lang.Object)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.List asElementList(java.lang.Object)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        org.dom4j.tree.BackedList $r3;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: java.util.List createSingleResultList(java.lang.Object)>($r1);

        return $r2;

     label1:
        if $r1 == null goto label4;

        $r2 = (java.util.List) $r1;

        $r3 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: org.dom4j.tree.BackedList createResultList()>();

        $i0 = 0;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label2:
        if $i0 < $i1 goto label3;

        return $r3;

     label3:
        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r3.<org.dom4j.tree.BackedList: void addLocal(java.lang.Object)>($r1);

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractBranch: java.util.List createEmptyList()>();

        return $r2;
    }

    public org.dom4j.Attribute attribute(java.lang.String)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        org.dom4j.Attribute $r4;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (org.dom4j.Attribute) $r3;

        return $r4;
    }

    public org.dom4j.Attribute attribute(org.dom4j.QName)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r2;
        org.dom4j.QName $r1;
        java.lang.Object $r3;
        org.dom4j.Attribute $r4;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (org.dom4j.Attribute) $r3;

        return $r4;
    }

    public java.util.Map attributeIndex()
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Iterator $r2;
        java.util.Map $r1;
        java.lang.Object $r3;
        org.dom4j.Attribute $r4;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        if $r1 != null goto label3;

        $r1 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map createAttributeIndex()>();

        r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex> = $r1;

        $r2 = virtualinvoke r0.<org.dom4j.tree.DefaultElement: java.util.Iterator attributeIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.dom4j.Attribute) $r3;

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToAttributeIndex(org.dom4j.Attribute)>($r4);

        goto label1;

     label3:
        $r1 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        return $r1;
    }

    public java.util.Map createAttributeIndex()
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map createIndex()>();

        return $r1;
    }

    public java.util.Map createElementIndex()
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map createIndex()>();

        return $r1;
    }

    public java.util.Map createIndex()
    {
        org.dom4j.util.IndexedElement r0;
        java.util.HashMap $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    public java.util.List createList()
    {
        org.dom4j.util.IndexedElement r0;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public org.dom4j.Element element(java.lang.String)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.dom4j.Element $r4;
        java.lang.String $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.util.IndexedElement: org.dom4j.Element asElement(java.lang.Object)>($r3);

        return $r4;
    }

    public org.dom4j.Element element(org.dom4j.QName)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r2;
        org.dom4j.QName $r1;
        java.lang.Object $r3;
        org.dom4j.Element $r4;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.util.IndexedElement: org.dom4j.Element asElement(java.lang.Object)>($r3);

        return $r4;
    }

    public java.util.Map elementIndex()
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Iterator $r2;
        java.util.Map $r1;
        java.lang.Object $r3;
        org.dom4j.Element $r4;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        if $r1 != null goto label3;

        $r1 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map createElementIndex()>();

        r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex> = $r1;

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractElement: java.util.Iterator elementIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.dom4j.Element) $r3;

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void addToElementIndex(org.dom4j.Element)>($r4);

        goto label1;

     label3:
        $r1 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        return $r1;
    }

    public java.util.List elements(java.lang.String)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.List asElementList(java.lang.Object)>($r3);

        return $r4;
    }

    public java.util.List elements(org.dom4j.QName)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r4;
        java.util.Map $r2;
        org.dom4j.QName $r1;
        java.lang.Object $r3;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.util.IndexedElement: java.util.List asElementList(java.lang.Object)>($r3);

        return $r4;
    }

    public void removeFromAttributeIndex(java.lang.Object, org.dom4j.Attribute)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.Map $r3;
        java.lang.Object $r1, $r4;
        org.dom4j.Attribute $r2;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.dom4j.Attribute;

        $r3 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void removeFromAttributeIndex(org.dom4j.Attribute)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.QName $r2;
        java.lang.String $r3;
        org.dom4j.Attribute $r1;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.Attribute;

        $r2 = interfaceinvoke $r1.<org.dom4j.Attribute: org.dom4j.QName getQName()>();

        $r3 = virtualinvoke $r2.<org.dom4j.QName: java.lang.String getName()>();

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void removeFromAttributeIndex(java.lang.Object,org.dom4j.Attribute)>($r2, $r1);

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void removeFromAttributeIndex(java.lang.Object,org.dom4j.Attribute)>($r3, $r1);

        return;
    }

    public void removeFromElementIndex(java.lang.Object, org.dom4j.Element)
    {
        org.dom4j.util.IndexedElement r0;
        java.util.List $r5;
        java.util.Map $r4;
        java.lang.Object $r1, $r2;
        org.dom4j.Element $r3;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: java.lang.Object;

        $r3 := @parameter1: org.dom4j.Element;

        $r4 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        $r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = $r2 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r5 = (java.util.List) $r2;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>($r3);

        return;

     label1:
        $r4 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public void removeFromElementIndex(org.dom4j.Element)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.Element $r1;
        org.dom4j.QName $r2;
        java.lang.String $r3;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.QName getQName()>();

        $r3 = virtualinvoke $r2.<org.dom4j.QName: java.lang.String getName()>();

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void removeFromElementIndex(java.lang.Object,org.dom4j.Element)>($r2, $r1);

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void removeFromElementIndex(java.lang.Object,org.dom4j.Element)>($r3, $r1);

        return;
    }

    public boolean removeNode(org.dom4j.Node)
    {
        org.dom4j.util.IndexedElement r0;
        org.dom4j.Node $r1;
        java.util.Map $r2;
        org.dom4j.Element $r3;
        org.dom4j.Attribute $r4;
        boolean $z0;

        r0 := @this: org.dom4j.util.IndexedElement;

        $r1 := @parameter0: org.dom4j.Node;

        $z0 = specialinvoke r0.<org.dom4j.tree.DefaultElement: boolean removeNode(org.dom4j.Node)>($r1);

        if $z0 == 0 goto label3;

        $r2 = r0.<org.dom4j.util.IndexedElement: java.util.Map elementIndex>;

        if $r2 == null goto label1;

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label1;

        $r3 = (org.dom4j.Element) $r1;

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void removeFromElementIndex(org.dom4j.Element)>($r3);

        goto label2;

     label1:
        $r2 = r0.<org.dom4j.util.IndexedElement: java.util.Map attributeIndex>;

        if $r2 == null goto label2;

        $z0 = $r1 instanceof org.dom4j.Attribute;

        if $z0 == 0 goto label2;

        $r4 = (org.dom4j.Attribute) $r1;

        virtualinvoke r0.<org.dom4j.util.IndexedElement: void removeFromAttributeIndex(org.dom4j.Attribute)>($r4);

     label2:
        return 1;

     label3:
        return 0;
    }
}
