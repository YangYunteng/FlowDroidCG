public class c.f.a.a.a.d extends java.lang.Object implements java.io.Serializable
{
    public final java.util.regex.Pattern[] a;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        c.f.a.a.a.d r0;

        r0 := @this: c.f.a.a.a.d;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<c.f.a.a.a.d: void <init>(java.lang.String,boolean)>($r1, 1);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        java.lang.String[] $r2;
        java.lang.String $r1;
        c.f.a.a.a.d r0;
        boolean $z0;

        r0 := @this: c.f.a.a.a.d;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = $r1;

        specialinvoke r0.<c.f.a.a.a.d: void <init>(java.lang.String[],boolean)>($r2, $z0);

        return;
    }

    public void <init>(java.lang.String[], boolean)
    {
        java.lang.String[] $r1;
        java.util.regex.Pattern[] $r2;
        c.f.a.a.a.d r0;
        java.lang.IllegalArgumentException $r5;
        byte $b1;
        int $i0, $i2;
        java.lang.StringBuilder $r6;
        java.lang.String $r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r0 := @this: c.f.a.a.a.d;

        $r1 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        if $i0 == 0 goto label4;

        $i0 = lengthof $r1;

        $r2 = newarray (java.util.regex.Pattern)[$i0];

        r0.<c.f.a.a.a.d: java.util.regex.Pattern[] a> = $r2;

        $i0 = 0;

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        $i2 = lengthof $r1;

        if $i0 >= $i2 goto label6;

        $r3 = $r1[$i0];

        if $r3 == null goto label3;

        $r3 = $r1[$i0];

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label3;

        $r2 = r0.<c.f.a.a.a.d: java.util.regex.Pattern[] a>;

        $r3 = $r1[$i0];

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r3, $b1);

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Regular expression[");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is missing");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Regular expressions are missing");

        goto label5;

     label5:
        throw $r5;

     label6:
        return;
    }

    public boolean a(java.lang.String)
    {
        java.util.regex.Pattern[] $r2;
        c.f.a.a.a.d r0;
        java.util.regex.Matcher $r4;
        int $i0, $i1;
        java.lang.String $r1;
        java.util.regex.Pattern $r3;
        boolean $z0;

        r0 := @this: c.f.a.a.a.d;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i1 = 0;

     label2:
        $r2 = r0.<c.f.a.a.a.d: java.util.regex.Pattern[] a>;

        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label4;

        $r3 = $r2[$i1];

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public java.lang.String[] b(java.lang.String)
    {
        java.util.regex.Pattern[] $r2;
        java.lang.String[] $r5;
        c.f.a.a.a.d r0;
        java.util.regex.Matcher $r4;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        java.util.regex.Pattern $r3;
        boolean $z0;

        r0 := @this: c.f.a.a.a.d;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = 0;

        $i1 = 0;

     label2:
        $r2 = r0.<c.f.a.a.a.d: java.util.regex.Pattern[] a>;

        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label6;

        $r3 = $r2[$i1];

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r4.<java.util.regex.Matcher: int groupCount()>();

        $r5 = newarray (java.lang.String)[$i1];

     label3:
        if $i0 >= $i1 goto label4;

        $i2 = $i0 + 1;

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>($i2);

        $r5[$i0] = $r1;

        $i0 = $i2;

        goto label3;

     label4:
        return $r5;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        return null;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.util.regex.Pattern[] $r2;
        java.util.regex.Pattern $r3;
        java.lang.String $r4;
        c.f.a.a.a.d r0;

        r0 := @this: c.f.a.a.a.d;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RegexValidator{");

        $i0 = 0;

     label1:
        $r2 = r0.<c.f.a.a.a.d: java.util.regex.Pattern[] a>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        if $i0 <= 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r2 = r0.<c.f.a.a.a.d: java.util.regex.Pattern[] a>;

        $r3 = $r2[$i0];

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String pattern()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
