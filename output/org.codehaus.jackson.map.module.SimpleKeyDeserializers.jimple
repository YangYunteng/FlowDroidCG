public class org.codehaus.jackson.map.module.SimpleKeyDeserializers extends java.lang.Object implements org.codehaus.jackson.map.KeyDeserializers
{
    public java.util.HashMap _classMappings;

    public void <init>()
    {
        org.codehaus.jackson.map.module.SimpleKeyDeserializers r0;

        r0 := @this: org.codehaus.jackson.map.module.SimpleKeyDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: java.util.HashMap _classMappings> = null;

        return;
    }

    public org.codehaus.jackson.map.module.SimpleKeyDeserializers addDeserializer(java.lang.Class, org.codehaus.jackson.map.KeyDeserializer)
    {
        org.codehaus.jackson.map.KeyDeserializer $r2;
        java.lang.Class $r1;
        java.util.HashMap $r4;
        org.codehaus.jackson.map.module.SimpleKeyDeserializers r0;
        org.codehaus.jackson.map.type.ClassKey $r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleKeyDeserializers;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.KeyDeserializer;

        $r4 = r0.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: java.util.HashMap _classMappings>;

        if $r4 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: java.util.HashMap _classMappings> = $r4;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: java.util.HashMap _classMappings>;

        $r3 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r3.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        return r0;
    }

    public org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty)
    {
        java.util.HashMap $r5;
        org.codehaus.jackson.map.module.SimpleKeyDeserializers r0;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.BeanProperty $r1;
        org.codehaus.jackson.map.KeyDeserializer $r9;
        org.codehaus.jackson.type.JavaType $r2;
        java.lang.Class $r7;
        java.lang.Object $r8;
        org.codehaus.jackson.map.type.ClassKey $r6;
        org.codehaus.jackson.map.BeanDescription $r4;

        r0 := @this: org.codehaus.jackson.map.module.SimpleKeyDeserializers;

        $r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r4 := @parameter2: org.codehaus.jackson.map.BeanDescription;

        $r1 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = r0.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: java.util.HashMap _classMappings>;

        if $r5 != null goto label1;

        return null;

     label1:
        $r6 = new org.codehaus.jackson.map.type.ClassKey;

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        specialinvoke $r6.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r7);

        $r8 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (org.codehaus.jackson.map.KeyDeserializer) $r8;

        return $r9;
    }
}
