public final class com.google.firebase.encoders.FieldDescriptor extends java.lang.Object
{
    public final java.lang.String name;
    public final java.util.Map properties;

    public void <init>(java.lang.String, java.util.Map)
    {
        java.lang.String $r1;
        com.google.firebase.encoders.FieldDescriptor r0;
        java.util.Map $r2;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.encoders.FieldDescriptor: java.lang.String name> = $r1;

        r0.<com.google.firebase.encoders.FieldDescriptor: java.util.Map properties> = $r2;

        return;
    }

    public void <init>(java.lang.String, java.util.Map, com.google.firebase.encoders.FieldDescriptor$1)
    {
        java.util.Map $r2;
        com.google.firebase.encoders.FieldDescriptor$1 $r3;
        java.lang.String $r1;
        com.google.firebase.encoders.FieldDescriptor r0;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: com.google.firebase.encoders.FieldDescriptor$1;

        specialinvoke r0.<com.google.firebase.encoders.FieldDescriptor: void <init>(java.lang.String,java.util.Map)>($r1, $r2);

        return;
    }

    public static com.google.firebase.encoders.FieldDescriptor$Builder builder(java.lang.String)
    {
        java.lang.String $r0;
        com.google.firebase.encoders.FieldDescriptor$Builder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.google.firebase.encoders.FieldDescriptor$Builder;

        specialinvoke $r1.<com.google.firebase.encoders.FieldDescriptor$Builder: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r5, $r6;
        java.lang.Object $r2;
        java.lang.String $r1, $r4;
        com.google.firebase.encoders.FieldDescriptor r0, $r3;
        boolean $z0;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        $r2 := @parameter0: java.lang.Object;

        if r0 != $r2 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof com.google.firebase.encoders.FieldDescriptor;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (com.google.firebase.encoders.FieldDescriptor) $r2;

        $r4 = r0.<com.google.firebase.encoders.FieldDescriptor: java.lang.String name>;

        $r1 = $r3.<com.google.firebase.encoders.FieldDescriptor: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.google.firebase.encoders.FieldDescriptor: java.util.Map properties>;

        $r6 = $r3.<com.google.firebase.encoders.FieldDescriptor: java.util.Map properties>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        com.google.firebase.encoders.FieldDescriptor r0;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        r1 = r0.<com.google.firebase.encoders.FieldDescriptor: java.lang.String name>;

        return r1;
    }

    public java.lang.'annotation'.Annotation getProperty(java.lang.Class)
    {
        java.util.Map $r1;
        java.lang.'annotation'.Annotation $r4;
        java.lang.Object $r2;
        java.lang.Class $r3;
        com.google.firebase.encoders.FieldDescriptor r0;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        $r3 := @parameter0: java.lang.Class;

        $r1 = r0.<com.google.firebase.encoders.FieldDescriptor: java.util.Map properties>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (java.lang.'annotation'.Annotation) $r2;

        return $r4;
    }

    public int hashCode()
    {
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.String $r1;
        com.google.firebase.encoders.FieldDescriptor r0;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        $r1 = r0.<com.google.firebase.encoders.FieldDescriptor: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = $i0 * 31;

        $r2 = r0.<com.google.firebase.encoders.FieldDescriptor: java.util.Map properties>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Map $r3;
        java.util.Collection $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.google.firebase.encoders.FieldDescriptor r0;

        r0 := @this: com.google.firebase.encoders.FieldDescriptor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldDescriptor{name=");

        $r2 = r0.<com.google.firebase.encoders.FieldDescriptor: java.lang.String name>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", properties=");

        $r3 = r0.<com.google.firebase.encoders.FieldDescriptor: java.util.Map properties>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
