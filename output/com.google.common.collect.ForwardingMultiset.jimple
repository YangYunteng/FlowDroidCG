public abstract class com.google.common.collect.ForwardingMultiset extends com.google.common.collect.ForwardingCollection implements com.google.common.collect.Multiset
{

    public void <init>()
    {
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        specialinvoke r0.<com.google.common.collect.ForwardingCollection: void <init>()>();

        return;
    }

    public int add(java.lang.Object, int)
    {
        com.google.common.collect.Multiset $r2;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>($r1, $i0);

        return $i0;
    }

    public int count(java.lang.Object)
    {
        com.google.common.collect.Multiset $r2;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: int count(java.lang.Object)>($r1);

        return $i0;
    }

    public abstract com.google.common.collect.Multiset delegate();

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.ForwardingMultiset r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        return $r1;
    }

    public volatile java.util.Collection delegate()
    {
        com.google.common.collect.ForwardingMultiset r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        return $r1;
    }

    public java.util.Set elementSet()
    {
        java.util.Set $r2;
        com.google.common.collect.ForwardingMultiset r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();

        return $r2;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        com.google.common.collect.ForwardingMultiset r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.Multiset $r2;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == r0 goto label2;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void forEach(java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.util.function.Consumer;

        staticinvoke <c.i.b.c.yc: void a(com.google.common.collect.Multiset,java.util.function.Consumer)>(r0, $r1);

        return;
    }

    public void forEachEntry(java.util.function.ObjIntConsumer)
    {
        java.util.function.ObjIntConsumer $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.util.function.ObjIntConsumer;

        staticinvoke <c.i.b.c.yc: void a(com.google.common.collect.Multiset,java.util.function.ObjIntConsumer)>(r0, $r1);

        return;
    }

    public int hashCode()
    {
        int $i0;
        com.google.common.collect.ForwardingMultiset r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $i0 = interfaceinvoke $r1.<com.google.common.collect.Multiset: int hashCode()>();

        return $i0;
    }

    public int remove(java.lang.Object, int)
    {
        com.google.common.collect.Multiset $r2;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: int remove(java.lang.Object,int)>($r1, $i0);

        return $i0;
    }

    public int setCount(java.lang.Object, int)
    {
        com.google.common.collect.Multiset $r2;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: int setCount(java.lang.Object,int)>($r1, $i0);

        return $i0;
    }

    public boolean setCount(java.lang.Object, int, int)
    {
        com.google.common.collect.Multiset $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: com.google.common.collect.Multiset delegate()>();

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: boolean setCount(java.lang.Object,int,int)>($r1, $i0, $i1);

        return $z0;
    }

    public java.util.Spliterator spliterator()
    {
        java.util.Spliterator $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = staticinvoke <c.i.b.c.yc: java.util.Spliterator a(com.google.common.collect.Multiset)>(r0);

        return $r1;
    }

    public boolean standardAdd(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: int add(java.lang.Object,int)>($r1, 1);

        return 1;
    }

    public boolean standardAddAll(java.util.Collection)
    {
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <com.google.common.collect.Multisets: boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection)>(r0, $r1);

        return $z0;
    }

    public void standardClear()
    {
        java.util.Set $r1;
        java.util.Iterator $r2;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        staticinvoke <com.google.common.collect.Iterators: void clear(java.util.Iterator)>($r2);

        return;
    }

    public boolean standardContains(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: int count(java.lang.Object)>($r1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int standardCount(java.lang.Object)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.common.collect.Multiset$Entry $r5;
        com.google.common.collect.ForwardingMultiset r0;
        int $i0;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.common.collect.Multiset$Entry) $r4;

        $r4 = interfaceinvoke $r5.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r1);

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r5.<com.google.common.collect.Multiset$Entry: int getCount()>();

        return $i0;

     label2:
        return 0;
    }

    public boolean standardEquals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.google.common.collect.Multisets: boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object)>(r0, $r1);

        return $z0;
    }

    public int standardHashCode()
    {
        int $i0;
        java.util.Set $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int hashCode()>();

        return $i0;
    }

    public java.util.Iterator standardIterator()
    {
        java.util.Iterator $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = staticinvoke <com.google.common.collect.Multisets: java.util.Iterator iteratorImpl(com.google.common.collect.Multiset)>(r0);

        return $r1;
    }

    public boolean standardRemove(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: int remove(java.lang.Object,int)>($r1, 1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean standardRemoveAll(java.util.Collection)
    {
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <com.google.common.collect.Multisets: boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection)>(r0, $r1);

        return $z0;
    }

    public boolean standardRetainAll(java.util.Collection)
    {
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <com.google.common.collect.Multisets: boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection)>(r0, $r1);

        return $z0;
    }

    public int standardSetCount(java.lang.Object, int)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.common.collect.Multisets: int setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int)>(r0, $r1, $i0);

        return $i0;
    }

    public boolean standardSetCount(java.lang.Object, int, int)
    {
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.collect.ForwardingMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <com.google.common.collect.Multisets: boolean setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int)>(r0, $r1, $i0, $i1);

        return $z0;
    }

    public int standardSize()
    {
        int $i0;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $i0 = staticinvoke <com.google.common.collect.Multisets: int sizeImpl(com.google.common.collect.Multiset)>(r0);

        return $i0;
    }

    public java.lang.String standardToString()
    {
        java.util.Set $r1;
        java.lang.String $r2;
        com.google.common.collect.ForwardingMultiset r0;

        r0 := @this: com.google.common.collect.ForwardingMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
