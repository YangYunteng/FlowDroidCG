public class i.a.x extends i.a.w
{

    public static final java.util.Map a()
    {
        kotlin.TypeCastException $r1;
        i.a.s $r0;

        $r0 = <i.a.s: i.a.s a>;

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r1 = new kotlin.TypeCastException;

        specialinvoke $r1.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.collections.Map<K, V>");

        throw $r1;
    }

    public static final java.util.Map a(java.lang.Iterable)
    {
        i.f $r6;
        java.util.Iterator $r5;
        java.util.Collection $r1;
        java.lang.Iterable $r0;
        java.util.LinkedHashMap $r2;
        java.util.List $r3;
        java.util.Map $r7;
        int $i0;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toMap");

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label5;

        $r1 = (java.util.Collection) $r0;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label1;

        $r2 = new java.util.LinkedHashMap;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $i0 = staticinvoke <i.a.w: int a(int)>($i0);

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>($i0);

        staticinvoke <i.a.x: java.util.Map a(java.lang.Iterable,java.util.Map)>($r0, $r2);

        return $r2;

     label1:
        $z0 = $r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r3 = (java.util.List) $r0;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        goto label3;

     label2:
        $r5 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label3:
        $r6 = (i.f) $r4;

        $r7 = staticinvoke <i.a.w: java.util.Map a(i.f)>($r6);

        return $r7;

     label4:
        $r7 = staticinvoke <i.a.x: java.util.Map a()>();

        return $r7;

     label5:
        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        staticinvoke <i.a.x: java.util.Map a(java.lang.Iterable,java.util.Map)>($r0, $r2);

        $r7 = staticinvoke <i.a.x: java.util.Map b(java.util.Map)>($r2);

        return $r7;
    }

    public static final java.util.Map a(java.lang.Iterable, java.util.Map)
    {
        java.lang.Iterable $r0;
        java.util.Map $r1;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.util.Map;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$toMap");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <i.a.x: void a(java.util.Map,java.lang.Iterable)>($r1, $r0);

        return $r1;
    }

    public static final void a(java.util.Map, java.lang.Iterable)
    {
        i.f $r4;
        java.util.Iterator $r2;
        java.util.Map $r0;
        java.lang.Object $r3, $r5;
        java.lang.Iterable $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$putAll");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "pairs");

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (i.f) $r3;

        $r3 = virtualinvoke $r4.<i.f: java.lang.Object a()>();

        $r5 = virtualinvoke $r4.<i.f: java.lang.Object b()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        goto label1;

     label2:
        return;
    }

    public static final java.util.Map b(java.util.Map)
    {
        int $i0;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$optimizeReadOnlyMap");

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        return $r0;

     label1:
        $r0 = staticinvoke <i.a.w: java.util.Map a(java.util.Map)>($r0);

        return $r0;

     label2:
        $r0 = staticinvoke <i.a.x: java.util.Map a()>();

        return $r0;
    }
}
