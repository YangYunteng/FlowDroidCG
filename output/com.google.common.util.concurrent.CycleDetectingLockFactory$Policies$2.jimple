public final enum class com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 extends com.google.common.util.concurrent.CycleDetectingLockFactory$Policies
{

    public void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1)>($r1, $i0, null);

        return;
    }

    public void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException)
    {
        com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException $r1;
        com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 r0;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;

        r0 := @this: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2;

        $r1 := @parameter0: com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException;

        $r3 = staticinvoke <com.google.common.util.concurrent.CycleDetectingLockFactory: java.util.logging.Logger access$100()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, "Detected potential deadlock", $r1);

        return;
    }
}
