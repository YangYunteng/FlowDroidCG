public class com.google.android.material.datepicker.SingleDateSelector extends java.lang.Object implements com.google.android.material.datepicker.DateSelector
{
    public static final android.os.Parcelable$Creator CREATOR;
    public java.lang.Long selectedItem;

    static void <clinit>()
    {
        com.google.android.material.datepicker.SingleDateSelector$2 $r0;

        $r0 = new com.google.android.material.datepicker.SingleDateSelector$2;

        specialinvoke $r0.<com.google.android.material.datepicker.SingleDateSelector$2: void <init>()>();

        <com.google.android.material.datepicker.SingleDateSelector: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void access$000(com.google.android.material.datepicker.SingleDateSelector)
    {
        com.google.android.material.datepicker.SingleDateSelector $r0;

        $r0 := @parameter0: com.google.android.material.datepicker.SingleDateSelector;

        specialinvoke $r0.<com.google.android.material.datepicker.SingleDateSelector: void clearSelection()>();

        return;
    }

    public static java.lang.Long access$102(com.google.android.material.datepicker.SingleDateSelector, java.lang.Long)
    {
        com.google.android.material.datepicker.SingleDateSelector $r0;
        java.lang.Long $r1;

        $r0 := @parameter0: com.google.android.material.datepicker.SingleDateSelector;

        $r1 := @parameter1: java.lang.Long;

        $r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem> = $r1;

        return $r1;
    }

    private void clearSelection()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem> = null;

        return;
    }

    public int describeContents()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        return 0;
    }

    public int getDefaultThemeResId(android.content.Context)
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        android.content.Context $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 := @parameter0: android.content.Context;

        $i0 = <com.google.android.material.R$attr: int materialCalendarTheme>;

        $r2 = class "Lcom/google/android/material/datepicker/MaterialDatePicker;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        $i0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>($r1, $i0, $r3);

        return $i0;
    }

    public int getDefaultTitleResId()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        int i0;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        i0 = <com.google.android.material.R$string: int mtrl_picker_date_header_title>;

        return i0;
    }

    public java.util.Collection getSelectedDays()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.lang.Long $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem>;

        if $r2 == null goto label1;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label1:
        return $r1;
    }

    public java.util.Collection getSelectedRanges()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public java.lang.Long getSelection()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.lang.Long r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        r1 = r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem>;

        return r1;
    }

    public volatile java.lang.Object getSelection()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 = virtualinvoke r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long getSelection()>();

        return $r1;
    }

    public java.lang.String getSelectionDisplayString(android.content.Context)
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        android.content.Context $r1;
        java.lang.Object[] $r5;
        long $l1;
        java.lang.Long $r3;
        int $i0;
        java.lang.String $r4;
        android.content.res.Resources $r2;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem>;

        if $r3 != null goto label1;

        $i0 = <com.google.android.material.R$string: int mtrl_picker_date_header_unselected>;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        return $r4;

     label1:
        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $r4 = staticinvoke <com.google.android.material.datepicker.DateStrings: java.lang.String getYearMonthDay(long)>($l1);

        $i0 = <com.google.android.material.R$string: int mtrl_picker_date_header_selected>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r4;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i0, $r5);

        return $r4;
    }

    public boolean isSelectionComplete()
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 = r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.view.View onCreateTextInputView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle, com.google.android.material.datepicker.CalendarConstraints, com.google.android.material.datepicker.OnSelectionChangedListener)
    {
        android.os.Bundle $r5;
        com.google.android.material.datepicker.SingleDateSelector$1 $r15;
        com.google.android.material.textfield.TextInputLayout $r8;
        com.google.android.material.datepicker.CalendarConstraints $r1;
        java.text.SimpleDateFormat $r10;
        java.lang.Long $r13;
        int $i0;
        android.view.View $r6, $r7;
        java.lang.String $r12, $r14;
        boolean $z0;
        com.google.android.material.datepicker.SingleDateSelector r0;
        com.google.android.material.datepicker.OnSelectionChangedListener $r2;
        android.view.LayoutInflater $r3;
        android.view.ViewGroup $r4;
        android.widget.EditText $r9;
        android.content.res.Resources $r11;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r3 := @parameter0: android.view.LayoutInflater;

        $r4 := @parameter1: android.view.ViewGroup;

        $r5 := @parameter2: android.os.Bundle;

        $r1 := @parameter3: com.google.android.material.datepicker.CalendarConstraints;

        $r2 := @parameter4: com.google.android.material.datepicker.OnSelectionChangedListener;

        $i0 = <com.google.android.material.R$layout: int mtrl_picker_text_input_date>;

        $r6 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r4, 0);

        $i0 = <com.google.android.material.R$id: int mtrl_picker_text_input_date>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>($i0);

        $r8 = (com.google.android.material.textfield.TextInputLayout) $r7;

        $r9 = virtualinvoke $r8.<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>();

        $z0 = staticinvoke <com.google.android.material.internal.ManufacturerUtils: boolean isDateInputKeyboardMissingSeparatorCharacters()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r9.<android.widget.EditText: void setInputType(int)>(17);

     label1:
        $r10 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.text.SimpleDateFormat getTextInputFormat()>();

        $r11 = virtualinvoke $r6.<android.view.View: android.content.res.Resources getResources()>();

        $r12 = staticinvoke <com.google.android.material.datepicker.UtcDates: java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat)>($r11, $r10);

        $r13 = r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem>;

        if $r13 == null goto label2;

        $r14 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r13);

        virtualinvoke $r9.<android.widget.EditText: void setText(java.lang.CharSequence)>($r14);

     label2:
        $r15 = new com.google.android.material.datepicker.SingleDateSelector$1;

        specialinvoke $r15.<com.google.android.material.datepicker.SingleDateSelector$1: void <init>(com.google.android.material.datepicker.SingleDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)>(r0, $r12, $r10, $r8, $r1, $r2);

        virtualinvoke $r9.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r15);

        staticinvoke <com.google.android.material.internal.ViewUtils: void requestFocusAndShowKeyboard(android.view.View)>($r9);

        return $r6;
    }

    public void select(long)
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem> = $r1;

        return;
    }

    public void setSelection(java.lang.Long)
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 := @parameter0: java.lang.Long;

        if $r1 != null goto label1;

        $r1 = null;

        goto label2;

     label1:
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l0 = staticinvoke <com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)>($l0);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem> = $r1;

        return;
    }

    public volatile void setSelection(java.lang.Object)
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.lang.Object $r1;
        java.lang.Long $r2;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Long) $r1;

        virtualinvoke r0.<com.google.android.material.datepicker.SingleDateSelector: void setSelection(java.lang.Long)>($r2);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.google.android.material.datepicker.SingleDateSelector r0;
        java.lang.Long $r2;
        int $i0;
        android.os.Parcel $r1;

        r0 := @this: com.google.android.material.datepicker.SingleDateSelector;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.android.material.datepicker.SingleDateSelector: java.lang.Long selectedItem>;

        virtualinvoke $r1.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        return;
    }
}
