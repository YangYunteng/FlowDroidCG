public final class i.j.d extends java.lang.Object implements java.util.Iterator, i.f.b.a.a
{
    public int a;
    public int b;
    public int c;
    public i.g.d d;
    public int e;
    public final i.j.e f;

    public void <init>(i.j.e)
    {
        i.j.e $r1;
        java.lang.CharSequence $r2;
        i.j.d r0;
        int $i0, $i1;

        r0 := @this: i.j.d;

        $r1 := @parameter0: i.j.e;

        r0.<i.j.d: i.j.e f> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<i.j.d: int a> = $i0;

        $i0 = staticinvoke <i.j.e: int d(i.j.e)>($r1);

        $r2 = staticinvoke <i.j.e: java.lang.CharSequence b(i.j.e)>($r1);

        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <i.g.f: int a(int,int,int)>($i0, 0, $i1);

        r0.<i.j.d: int b> = $i0;

        $i0 = r0.<i.j.d: int b>;

        r0.<i.j.d: int c> = $i0;

        return;
    }

    public final void a()
    {
        i.f $r7;
        i.j.e $r1;
        java.lang.CharSequence $r2;
        i.j.d r0;
        i.g.d $r3, $r9;
        java.lang.Integer $r5;
        i.f.a.p $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r6;
        java.lang.Number $r8;
        boolean $z0;

        r0 := @this: i.j.d;

        $i0 = r0.<i.j.d: int c>;

        $z0 = 0;

        if $i0 >= 0 goto label1;

        r0.<i.j.d: int a> = 0;

        r0.<i.j.d: i.g.d d> = null;

        return;

     label1:
        $r1 = r0.<i.j.d: i.j.e f>;

        $i0 = staticinvoke <i.j.e: int c(i.j.e)>($r1);

        if $i0 <= 0 goto label2;

        $i0 = r0.<i.j.d: int e>;

        $i0 = $i0 + 1;

        r0.<i.j.d: int e> = $i0;

        $i0 = r0.<i.j.d: int e>;

        $r1 = r0.<i.j.d: i.j.e f>;

        $i1 = staticinvoke <i.j.e: int c(i.j.e)>($r1);

        if $i0 >= $i1 goto label3;

     label2:
        $i0 = r0.<i.j.d: int c>;

        $r1 = r0.<i.j.d: i.j.e f>;

        $r2 = staticinvoke <i.j.e: java.lang.CharSequence b(i.j.e)>($r1);

        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 <= $i1 goto label4;

     label3:
        $i0 = r0.<i.j.d: int b>;

        $r9 = new i.g.d;

        $r1 = r0.<i.j.d: i.j.e f>;

        $r2 = staticinvoke <i.j.e: java.lang.CharSequence b(i.j.e)>($r1);

        $i1 = staticinvoke <i.j.s: int c(java.lang.CharSequence)>($r2);

        specialinvoke $r9.<i.g.d: void <init>(int,int)>($i0, $i1);

        r0.<i.j.d: i.g.d d> = $r9;

        $i0 = -1;

        r0.<i.j.d: int c> = $i0;

        goto label7;

     label4:
        $r1 = r0.<i.j.d: i.j.e f>;

        $r4 = staticinvoke <i.j.e: i.f.a.p a(i.j.e)>($r1);

        $r1 = r0.<i.j.d: i.j.e f>;

        $r2 = staticinvoke <i.j.e: java.lang.CharSequence b(i.j.e)>($r1);

        $i0 = r0.<i.j.d: int c>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = interfaceinvoke $r4.<i.f.a.p: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r7 = (i.f) $r6;

        if $r7 != null goto label5;

        $i0 = r0.<i.j.d: int b>;

        $r9 = new i.g.d;

        $r1 = r0.<i.j.d: i.j.e f>;

        $r2 = staticinvoke <i.j.e: java.lang.CharSequence b(i.j.e)>($r1);

        $i1 = staticinvoke <i.j.s: int c(java.lang.CharSequence)>($r2);

        specialinvoke $r9.<i.g.d: void <init>(int,int)>($i0, $i1);

        r0.<i.j.d: i.g.d d> = $r9;

        $i0 = -1;

        r0.<i.j.d: int c> = $i0;

        goto label7;

     label5:
        $r6 = virtualinvoke $r7.<i.f: java.lang.Object a()>();

        $r8 = (java.lang.Number) $r6;

        $i1 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        $r6 = virtualinvoke $r7.<i.f: java.lang.Object b()>();

        $r8 = (java.lang.Number) $r6;

        $i0 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        $i2 = r0.<i.j.d: int b>;

        $r3 = staticinvoke <i.g.f: i.g.d d(int,int)>($i2, $i1);

        r0.<i.j.d: i.g.d d> = $r3;

        $i1 = $i1 + $i0;

        r0.<i.j.d: int b> = $i1;

        $i1 = r0.<i.j.d: int b>;

        if $i0 != 0 goto label6;

        $z0 = 1;

     label6:
        $i0 = $i1 + $z0;

        r0.<i.j.d: int c> = $i0;

     label7:
        r0.<i.j.d: int a> = 1;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        i.j.d r0;

        r0 := @this: i.j.d;

        $i0 = r0.<i.j.d: int a>;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        virtualinvoke r0.<i.j.d: void a()>();

     label1:
        $i0 = r0.<i.j.d: int a>;

        if $i0 != 1 goto label2;

        return 1;

     label2:
        return 0;
    }

    public i.g.d next()
    {
        i.j.d r0;
        i.g.d $r1;
        int $i0, $i1;
        kotlin.TypeCastException $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: i.j.d;

        $i0 = r0.<i.j.d: int a>;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        virtualinvoke r0.<i.j.d: void a()>();

     label1:
        $i0 = r0.<i.j.d: int a>;

        if $i0 == 0 goto label3;

        $r1 = r0.<i.j.d: i.g.d d>;

        if $r1 == null goto label2;

        r0.<i.j.d: i.g.d d> = null;

        $i0 = -1;

        r0.<i.j.d: int a> = $i0;

        return $r1;

     label2:
        $r2 = new kotlin.TypeCastException;

        specialinvoke $r2.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.ranges.IntRange");

        throw $r2;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public volatile java.lang.Object next()
    {
        i.j.d r0;
        i.g.d $r1;

        r0 := @this: i.j.d;

        $r1 = virtualinvoke r0.<i.j.d: i.g.d next()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        i.j.d r0;

        r0 := @this: i.j.d;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
