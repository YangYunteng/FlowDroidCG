public class com.adobe.mobile.MessageFullScreen$a extends java.lang.Object implements java.lang.Runnable
{
    public com.adobe.mobile.MessageFullScreen a;

    public void <init>(com.adobe.mobile.MessageFullScreen)
    {
        com.adobe.mobile.MessageFullScreen$a r0;
        com.adobe.mobile.MessageFullScreen $r1;

        r0 := @this: com.adobe.mobile.MessageFullScreen$a;

        $r1 := @parameter0: com.adobe.mobile.MessageFullScreen;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a> = $r1;

        return;
    }

    public android.webkit.WebView a()
    {
        com.adobe.mobile.MessageFullScreen$MessageFullScreenWebViewClient $r4;
        com.adobe.mobile.MessageFullScreen $r2;
        android.webkit.WebSettings $r5;
        com.adobe.mobile.MessageFullScreen$a r0;
        android.webkit.WebView $r1;
        android.app.Activity $r3;

        r0 := @this: com.adobe.mobile.MessageFullScreen$a;

        $r1 = new android.webkit.WebView;

        $r2 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r3 = $r2.<com.adobe.mobile.MessageFullScreen: android.app.Activity s>;

        specialinvoke $r1.<android.webkit.WebView: void <init>(android.content.Context)>($r3);

        virtualinvoke $r1.<android.webkit.WebView: void setVerticalScrollBarEnabled(boolean)>(0);

        virtualinvoke $r1.<android.webkit.WebView: void setHorizontalScrollBarEnabled(boolean)>(0);

        virtualinvoke $r1.<android.webkit.WebView: void setBackgroundColor(int)>(0);

        $r2 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r4 = virtualinvoke $r2.<com.adobe.mobile.MessageFullScreen: com.adobe.mobile.MessageFullScreen$MessageFullScreenWebViewClient j()>();

        virtualinvoke $r1.<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>($r4);

        $r5 = virtualinvoke $r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r5.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(1);

        virtualinvoke $r5.<android.webkit.WebSettings: void setAllowFileAccess(boolean)>(1);

        virtualinvoke $r5.<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>("UTF-8");

        return $r1;
    }

    public void run()
    {
        java.lang.Object[] $r5;
        android.view.ViewGroup $r4;
        java.lang.Exception $r7;
        com.adobe.mobile.MessageFullScreen $r1;
        android.view.animation.TranslateAnimation $r6;
        com.adobe.mobile.MessageFullScreen$a r0;
        int $i0, $i1;
        float $f0;
        java.lang.String $r3;
        android.webkit.WebView $r2;
        boolean $z0;

        r0 := @this: com.adobe.mobile.MessageFullScreen$a;

     label01:
        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r2 = virtualinvoke r0.<com.adobe.mobile.MessageFullScreen$a: android.webkit.WebView a()>();

        $r1.<com.adobe.mobile.MessageFullScreen: android.webkit.WebView r> = $r2;

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r2 = $r1.<com.adobe.mobile.MessageFullScreen: android.webkit.WebView r>;

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r3 = $r1.<com.adobe.mobile.MessageFullScreen: java.lang.String q>;

        virtualinvoke $r2.<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("file:///android_asset/", $r3, "text/html", "UTF-8", null);

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r4 = $r1.<com.adobe.mobile.MessageFullScreen: android.view.ViewGroup t>;

     label02:
        if $r4 != null goto label05;

        $r5 = newarray (java.lang.Object)[0];

     label03:
        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("Messages - unable to get root view group from os", $r5);

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        staticinvoke <com.adobe.mobile.MessageFullScreen: void a(com.adobe.mobile.MessageFullScreen)>($r1);

     label04:
        return;

     label05:
        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r4 = $r1.<com.adobe.mobile.MessageFullScreen: android.view.ViewGroup t>;

        $i0 = virtualinvoke $r4.<android.view.ViewGroup: int getMeasuredWidth()>();

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r4 = $r1.<com.adobe.mobile.MessageFullScreen: android.view.ViewGroup t>;

        $i1 = virtualinvoke $r4.<android.view.ViewGroup: int getMeasuredHeight()>();

     label06:
        if $i0 == 0 goto label15;

        if $i1 != 0 goto label07;

        goto label15;

     label07:
        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $z0 = $r1.<c.a.a.I: boolean k>;

     label08:
        if $z0 == 0 goto label11;

     label09:
        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r4 = $r1.<com.adobe.mobile.MessageFullScreen: android.view.ViewGroup t>;

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r2 = $r1.<com.adobe.mobile.MessageFullScreen: android.webkit.WebView r>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View,int,int)>($r2, $i0, $i1);

     label10:
        goto label13;

     label11:
        $r6 = new android.view.animation.TranslateAnimation;

        $f0 = (float) $i1;

     label12:
        specialinvoke $r6.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, 0.0F);

        virtualinvoke $r6.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r2 = $r1.<com.adobe.mobile.MessageFullScreen: android.webkit.WebView r>;

        virtualinvoke $r2.<android.webkit.WebView: void setAnimation(android.view.animation.Animation)>($r6);

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r4 = $r1.<com.adobe.mobile.MessageFullScreen: android.view.ViewGroup t>;

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r2 = $r1.<com.adobe.mobile.MessageFullScreen: android.webkit.WebView r>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View,int,int)>($r2, $i0, $i1);

     label13:
        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        $r1.<c.a.a.I: boolean k> = 1;

     label14:
        return;

     label15:
        $r5 = newarray (java.lang.Object)[0];

     label16:
        staticinvoke <com.adobe.mobile.StaticMethods: void b(java.lang.String,java.lang.Object[])>("Messages - root view hasn\'t been measured, cannot show message", $r5);

        $r1 = r0.<com.adobe.mobile.MessageFullScreen$a: com.adobe.mobile.MessageFullScreen a>;

        staticinvoke <com.adobe.mobile.MessageFullScreen: void a(com.adobe.mobile.MessageFullScreen)>($r1);

     label17:
        return;

     label18:
        $r7 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r5[0] = $r3;

        staticinvoke <com.adobe.mobile.StaticMethods: void a(java.lang.String,java.lang.Object[])>("Messages - Failed to show full screen message (%s)", $r5);

        return;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label12 to label14 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
    }
}
