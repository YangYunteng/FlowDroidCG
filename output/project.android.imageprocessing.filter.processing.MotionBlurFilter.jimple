public class project.android.imageprocessing.filter.processing.MotionBlurFilter extends project.android.imageprocessing.filter.MultiPixelRenderer
{
    public float blurSize;
    public float degree;

    public void <init>(float, float)
    {
        project.android.imageprocessing.filter.processing.MotionBlurFilter r0;
        float $f0, $f1;

        r0 := @this: project.android.imageprocessing.filter.processing.MotionBlurFilter;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiPixelRenderer: void <init>()>();

        r0.<project.android.imageprocessing.filter.processing.MotionBlurFilter: float blurSize> = $f0;

        r0.<project.android.imageprocessing.filter.processing.MotionBlurFilter: float degree> = $f1;

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.processing.MotionBlurFilter r0;

        r0 := @this: project.android.imageprocessing.filter.processing.MotionBlurFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nvarying vec2 v_TexCoord;\nuniform float u_TexelWidth;\nuniform float u_TexelHeight;\nvoid main(){\n   vec2 step = vec2(u_TexelWidth, u_TexelHeight);\n   vec4 fragColour = texture2D(u_Texture0, v_TexCoord) * 0.18;\n   fragColour += texture2D(u_Texture0, v_TexCoord + step) * 0.15;\n   fragColour += texture2D(u_Texture0, v_TexCoord - step) * 0.15;\n   fragColour += texture2D(u_Texture0, v_TexCoord + step * 2.0) * 0.12;\n   fragColour += texture2D(u_Texture0, v_TexCoord - step * 2.0) * 0.12;\n   fragColour += texture2D(u_Texture0, v_TexCoord + step * 3.0) * 0.09;\n   fragColour += texture2D(u_Texture0, v_TexCoord - step * 3.0) * 0.09;\n   fragColour += texture2D(u_Texture0, v_TexCoord + step * 4.0) * 0.05;\n   fragColour += texture2D(u_Texture0, v_TexCoord - step * 4.0) * 0.05;\n   gl_FragColor = fragColour;\n}\n";
    }

    public void handleSizeChange()
    {
        project.android.imageprocessing.filter.processing.MotionBlurFilter r0;
        int $i0;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: project.android.imageprocessing.filter.processing.MotionBlurFilter;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiPixelRenderer: void handleSizeChange()>();

        $f0 = r0.<project.android.imageprocessing.filter.processing.MotionBlurFilter: float blurSize>;

        $d0 = (double) $f0;

        $f0 = r0.<project.android.imageprocessing.filter.processing.MotionBlurFilter: float degree>;

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * 3.141592653589793;

        $d1 = $d1 / 180.0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        r0.<project.android.imageprocessing.filter.MultiPixelRenderer: float texelWidth> = $f0;

        $f0 = r0.<project.android.imageprocessing.filter.processing.MotionBlurFilter: float blurSize>;

        $d0 = (double) $f0;

        $f0 = r0.<project.android.imageprocessing.filter.processing.MotionBlurFilter: float degree>;

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * 3.141592653589793;

        $d1 = $d1 / 180.0;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        r0.<project.android.imageprocessing.filter.MultiPixelRenderer: float texelHeight> = $f0;

        return;
    }
}
