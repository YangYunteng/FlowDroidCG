public class com.foresee.sdk.common.utils.Util extends java.lang.Object
{
    public static java.lang.String predefinedAppName;

    public void <init>()
    {
        com.foresee.sdk.common.utils.Util r0;

        r0 := @this: com.foresee.sdk.common.utils.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkClassExistence(java.lang.String)
    {
        java.lang.ClassNotFoundException $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }

    public static void closeResource(java.io.Closeable)
    {
        java.lang.String $r1;
        java.io.Closeable $r0;

        $r0 := @parameter0: java.io.Closeable;

        $r1 = <com.foresee.sdk.common.constants.LogTags: java.lang.String SDK_LIB>;

        staticinvoke <com.foresee.sdk.common.utils.Util: void closeResource(java.io.Closeable,java.lang.String)>($r0, $r1);

        return;
    }

    public static void closeResource(java.io.Closeable, java.lang.String)
    {
        java.io.Closeable $r3;
        com.foresee.sdk.common.b$a $r1;
        java.io.IOException $r4;
        java.lang.String $r0, $r2;

        $r3 := @parameter0: java.io.Closeable;

        $r0 := @parameter1: java.lang.String;

        if $r3 == null goto label4;

     label1:
        interfaceinvoke $r3.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r1 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a ERROR>;

        $r2 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.foresee.sdk.common.b: void c(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r0, $r2, $r4);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static boolean compareIntegers(java.lang.Integer, java.lang.Integer)
    {
        java.lang.Integer $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Integer;

        $r0 := @parameter1: java.lang.Integer;

        if $r1 != null goto label2;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Integer: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    public static boolean compareStrings(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        if $r1 != null goto label2;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    public static boolean compareStringsIngoreCases(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        if $r1 != null goto label2;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        return $z0;
    }

    public static java.lang.Object createInstanceByClassName(java.lang.String)
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Exception $r7;
        com.foresee.sdk.common.b$a $r8;
        java.lang.StringBuilder $r0;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.String $r1, $r9;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label04:
        $r5 = newarray (java.lang.Object)[0];

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label06:
        return $r6;

     label07:
        $r7 := @caughtexception;

        goto label13;

     label08:
        $r7 := @caughtexception;

        goto label13;

     label09:
        $r7 := @caughtexception;

        goto label13;

     label10:
        $r7 := @caughtexception;

        goto label13;

     label11:
        $r7 := @caughtexception;

        goto label13;

     label12:
        $r7 := @caughtexception;

     label13:
        $r8 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a WARN>;

        $r9 = <com.foresee.sdk.common.constants.LogTags: java.lang.String SDK_LIB>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught an exception while creating a new instance by class name: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . Exception: ");

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.foresee.sdk.common.b: void a(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String)>($r8, $r9, $r1);

        return null;

        catch java.lang.ClassNotFoundException from label01 to label02 with label12;
        catch java.lang.ClassNotFoundException from label03 to label04 with label12;
        catch java.lang.ClassNotFoundException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label01 to label02 with label11;
        catch java.lang.NoSuchMethodException from label03 to label04 with label11;
        catch java.lang.NoSuchMethodException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.InstantiationException from label01 to label02 with label09;
        catch java.lang.InstantiationException from label03 to label04 with label09;
        catch java.lang.InstantiationException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label08;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label08;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label08;
        catch java.lang.NullPointerException from label01 to label02 with label07;
        catch java.lang.NullPointerException from label03 to label04 with label07;
        catch java.lang.NullPointerException from label05 to label06 with label07;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.Object[] $r4;
        com.foresee.sdk.common.b$a $r3;
        java.lang.String $r1, $r2, $r5;
        java.io.UnsupportedEncodingException $r0;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return $r1;

     label1:
        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "%2B");

     label2:
        return $r2;

     label3:
        $r3 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a WARN>;

        $r2 = <com.foresee.sdk.common.constants.LogTags: java.lang.String SDK_COMMON>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to encode %s. Using original argument.", $r4);

        staticinvoke <com.foresee.sdk.common.b: void c(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String)>($r3, $r2, $r5);

        return $r1;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static transient java.lang.String formatStringIfPossible(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.String $r1, $r3;
        java.util.MissingFormatArgumentException $r2;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return $r3;

        catch java.util.MissingFormatArgumentException from label1 to label2 with label3;
    }

    public static int getAppBuildVersion(android.content.Context)
    {
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r0;
        int i0;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label2:
        i0 = $r4.<android.content.pm.PackageInfo: int versionCode>;

        return i0;

     label3:
        i0 = -1;

        return i0;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static java.lang.String getAppVersionName(android.content.Context)
    {
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r0;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label2:
        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r3;

     label3:
        return null;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static int getColorFromResource(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 <= 23 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>($i0, null);

        return $i0;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i0);

        return $i0;
    }

    public static com.foresee.sdk.common.configuration.ContactType getContactTypeForString(java.lang.String)
    {
        com.foresee.sdk.common.configuration.ContactType $r1, $r2, $r4;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;
        com.foresee.sdk.common.configuration.ContactType[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.foresee.sdk.common.configuration.ContactType: com.foresee.sdk.common.configuration.ContactType Unknown>;

        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean isBlank(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.foresee.sdk.common.configuration.ContactType: com.foresee.sdk.common.configuration.ContactType[] values()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r3[$i1];

        $r4 = <com.foresee.sdk.common.configuration.ContactType: com.foresee.sdk.common.configuration.ContactType Unknown>;

        if $r1 == $r4 goto label2;

        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean isContactDetailsValidForType(com.foresee.sdk.common.configuration.ContactType,java.lang.String)>($r1, $r0);

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r2;
    }

    public static java.lang.String getPredefinedAppName(android.content.Context, com.foresee.sdk.common.configuration.IConfiguration, com.foresee.sdk.common.utils.h)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r8;
        com.foresee.sdk.common.utils.h $r3;
        android.content.pm.PackageManager $r6;
        android.content.pm.PackageManager$NameNotFoundException $r0;
        java.lang.String $r4, $r5;
        com.foresee.sdk.common.configuration.IConfiguration $r2;
        android.content.pm.ApplicationInfo $r7;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.foresee.sdk.common.configuration.IConfiguration;

        $r3 := @parameter2: com.foresee.sdk.common.utils.h;

        $r4 = interfaceinvoke $r2.<com.foresee.sdk.common.configuration.IConfiguration: java.lang.String getAppName()>();

        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean isBlank(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r3.<com.foresee.sdk.common.utils.h: java.lang.String getAppName()>();

        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean isBlank(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label1;

        $r5 = "[PLACEHOLDER]";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label9;

     label1:
        $r6 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r4, 0);

     label3:
        goto label5;

     label4:
        $r7 = null;

     label5:
        if $r7 == null goto label6;

        $r8 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r7);

        goto label7;

     label6:
        $r8 = "[Unknown]";

     label7:
        $r4 = (java.lang.String) $r8;

        return $r4;

     label8:
        $r0 := @caughtexception;

        goto label4;

     label9:
        return $r4;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label8;
    }

    public static java.lang.String getUserAgent(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.foresee.sdk.common.utils.Util: java.lang.String getUserAgentFromWebSettings(android.content.Context)>($r0);

        if $r1 != null goto label1;

        $r1 = staticinvoke <com.foresee.sdk.common.utils.Util: java.lang.String getUserAgentFromWebView(android.content.Context)>($r0);

     label1:
        return $r1;
    }

    public static java.lang.String getUserAgentFromWebSettings(android.content.Context)
    {
        android.content.Context $r2;
        java.lang.String $r0;
        java.lang.Exception $r1;

        $r2 := @parameter0: android.content.Context;

     label1:
        $r0 = staticinvoke <android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>($r2);

     label2:
        return $r0;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.String getUserAgentFromWebView(android.content.Context)
    {
        android.content.Context $r2;
        android.webkit.WebSettings $r3;
        java.lang.String $r4;
        android.webkit.WebView $r0;
        java.lang.Exception $r1;

        $r2 := @parameter0: android.content.Context;

        $r0 = new android.webkit.WebView;

     label1:
        specialinvoke $r0.<android.webkit.WebView: void <init>(android.content.Context)>($r2);

        $r3 = virtualinvoke $r0.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        $r4 = virtualinvoke $r3.<android.webkit.WebSettings: java.lang.String getUserAgentString()>();

     label2:
        return $r4;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static boolean isBlank(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        if $r0 == null goto label4;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static boolean isContactDetailsValidForType(com.foresee.sdk.common.configuration.ContactType, java.lang.String)
    {
        java.util.regex.Matcher $r4;
        int[] $r2;
        int $i0;
        java.lang.String $r0;
        java.util.regex.Pattern $r3;
        com.foresee.sdk.common.configuration.ContactType $r1;
        boolean $z0;

        $r1 := @parameter0: com.foresee.sdk.common.configuration.ContactType;

        $r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.foresee.sdk.common.utils.Util: boolean isBlank(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label4;

        $r2 = <com.foresee.sdk.common.utils.Util$1: int[] cM>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        goto label4;

     label1:
        $r3 = <android.util.Patterns: java.util.regex.Pattern PHONE>;

        goto label3;

     label2:
        $r3 = <android.util.Patterns: java.util.regex.Pattern EMAIL_ADDRESS>;

     label3:
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        return $z0;

     label4:
        return 0;
    }

    public static boolean isNetworkAvailable(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void launchUrlInBrowser(android.app.Activity, java.lang.String)
    {
        android.net.Uri $r2;
        android.content.Intent $r1;
        java.lang.String $r3;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        $r3 := @parameter1: java.lang.String;

        $r1 = new android.content.Intent;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r2);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r0.<android.app.Activity: void startActivity(android.content.Intent)>($r1);

        return;
    }

    public static java.lang.String parseBrowserVersion(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("applewebkit/([\\d.]*)");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r0;

     label2:
        return "";
    }

    public static java.lang.String sanitize(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "\\n");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\t", "\\t");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\u0008", "\\b");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "\\r");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\f", "\\f");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\\\'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "\\");

        return $r0;
    }

    public static void setGlobalThreadStatsTag()
    {
        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>(65670);

        return;
    }

    public static java.lang.String sha256(java.lang.String)
    {
        byte[] $r4;
        java.security.MessageDigest $r2;
        short $s3;
        java.nio.charset.Charset $r3;
        byte $b2;
        java.security.NoSuchAlgorithmException $r5;
        int $i0, $i1;
        com.foresee.sdk.common.b$a $r6;
        java.lang.StringBuilder $r0, $r7, $r9;
        java.lang.String $r1, $r8;

        $r1 := @parameter0: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        $r0 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

     label02:
        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

     label03:
        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4);

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label12;

        $b2 = $r4[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

     label06:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label07:
        if $i1 != 1 goto label09;

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label09:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label10:
        $i0 = $i0 + 1;

        goto label05;

     label11:
        $r5 := @caughtexception;

        $r6 = <com.foresee.sdk.common.b$a: com.foresee.sdk.common.b$a ERROR>;

        $r1 = <com.foresee.sdk.common.constants.LogTags: java.lang.String SDK_LIB>;

        $r9 = new java.lang.StringBuilder;

        $r7 = $r9;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught an exception while calculating SHA-256 hash. Exception: ");

        $r8 = virtualinvoke $r5.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.foresee.sdk.common.b: void a(com.foresee.sdk.common.b$a,java.lang.String,java.lang.String)>($r6, $r1, $r8);

     label12:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label11;
        catch java.security.NoSuchAlgorithmException from label08 to label10 with label11;
    }
}
