public class com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator extends java.lang.Object implements java.util.Iterator
{
    public boolean canRemove;
    public java.util.Map$Entry currentEntry;
    public final java.util.Iterator entryIterator;
    public int occurrencesLeft;
    public final com.google.common.collect.AbstractMapBasedMultiset this$0;

    public void <init>(com.google.common.collect.AbstractMapBasedMultiset)
    {
        java.util.Iterator $r4;
        java.util.Map $r2;
        com.google.common.collect.AbstractMapBasedMultiset $r1;
        java.util.Set $r3;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultiset;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: com.google.common.collect.AbstractMapBasedMultiset this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.AbstractMapBasedMultiset: java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Iterator entryIterator> = $r4;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        int $i0;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator;

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: int occurrencesLeft>;

        if $i0 > 0 goto label2;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Iterator entryIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.Object next()
    {
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        int $i0;
        com.google.common.collect.Count $r4;
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator;

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: int occurrencesLeft>;

        if $i0 != 0 goto label1;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Iterator entryIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Map$Entry currentEntry> = $r3;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Map$Entry currentEntry>;

        $r2 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (com.google.common.collect.Count) $r2;

        $i0 = virtualinvoke $r4.<com.google.common.collect.Count: int get()>();

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: int occurrencesLeft> = $i0;

     label1:
        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: int occurrencesLeft>;

        $i0 = $i0 - 1;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: int occurrencesLeft> = $i0;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: boolean canRemove> = 1;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Map$Entry currentEntry>;

        $r2 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;
    }

    public void remove()
    {
        java.util.Map$Entry $r1;
        java.util.Iterator $r4;
        com.google.common.collect.AbstractMapBasedMultiset $r5;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator r0;
        int $i0;
        com.google.common.collect.Count $r3;
        java.lang.Object $r2;
        java.util.ConcurrentModificationException $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator;

        $z0 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: boolean canRemove>;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>($z0);

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Map$Entry currentEntry>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (com.google.common.collect.Count) $r2;

        $i0 = virtualinvoke $r3.<com.google.common.collect.Count: int get()>();

        if $i0 <= 0 goto label2;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Map$Entry currentEntry>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (com.google.common.collect.Count) $r2;

        $i0 = -1;

        $i0 = virtualinvoke $r3.<com.google.common.collect.Count: int addAndGet(int)>($i0);

        if $i0 != 0 goto label1;

        $r4 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: java.util.Iterator entryIterator>;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

     label1:
        $r5 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: com.google.common.collect.AbstractMapBasedMultiset this$0>;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultiset: long access$110(com.google.common.collect.AbstractMapBasedMultiset)>($r5);

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator: boolean canRemove> = 0;

        return;

     label2:
        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;
    }
}
