public final class k.a.f.a$c extends java.lang.Object
{
    public final java.lang.reflect.Method a;
    public final java.lang.reflect.Method b;
    public final java.lang.reflect.Method c;

    public void <init>(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.reflect.Method)
    {
        k.a.f.a$c r0;
        java.lang.reflect.Method $r1, $r2, $r3;

        r0 := @this: k.a.f.a$c;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: java.lang.reflect.Method;

        $r3 := @parameter2: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<k.a.f.a$c: java.lang.reflect.Method a> = $r1;

        r0.<k.a.f.a$c: java.lang.reflect.Method b> = $r2;

        r0.<k.a.f.a$c: java.lang.reflect.Method c> = $r3;

        return;
    }

    public static k.a.f.a$c a()
    {
        java.lang.Class[] $r3;
        java.lang.Exception $r0;
        k.a.f.a$c $r7;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1, $r4, $r5, $r6;

        $r1 = null;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("dalvik.system.CloseGuard");

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $r3);

     label04:
        $r3 = newarray (java.lang.Class)[1];

     label05:
        $r3[0] = class "Ljava/lang/String;";

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("open", $r3);

     label06:
        $r3 = newarray (java.lang.Class)[0];

     label07:
        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("warnIfOpen", $r3);

     label08:
        $r1 = $r4;

        goto label10;

     label09:
        $r6 = null;

        $r5 = null;

     label10:
        $r7 = new k.a.f.a$c;

        specialinvoke $r7.<k.a.f.a$c: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>($r1, $r5, $r6);

        return $r7;

     label11:
        $r0 := @caughtexception;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
    }

    public java.lang.Object a(java.lang.String)
    {
        java.lang.Object[] $r5;
        k.a.f.a$c r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        java.lang.reflect.Method $r4;
        java.lang.Exception $r3;

        r0 := @this: k.a.f.a$c;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<k.a.f.a$c: java.lang.reflect.Method a>;

        if $r4 == null goto label5;

        $r5 = newarray (java.lang.Object)[0];

     label1:
        $r2 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

        $r4 = r0.<k.a.f.a$c: java.lang.reflect.Method b>;

     label2:
        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r1;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

     label4:
        return $r2;

     label5:
        return null;

     label6:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public boolean a(java.lang.Object)
    {
        java.lang.Object[] $r3;
        k.a.f.a$c r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.Exception $r4;

        r0 := @this: k.a.f.a$c;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label6;

     label1:
        $r2 = r0.<k.a.f.a$c: java.lang.reflect.Method c>;

     label2:
        $r3 = newarray (java.lang.Object)[0];

     label3:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r3);

     label4:
        return 1;

     label5:
        $r4 := @caughtexception;

     label6:
        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
