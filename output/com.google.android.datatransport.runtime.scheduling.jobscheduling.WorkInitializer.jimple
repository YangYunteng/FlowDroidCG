public class com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer extends java.lang.Object
{
    public final java.util.concurrent.Executor executor;
    public final com.google.android.datatransport.runtime.synchronization.SynchronizationGuard guard;
    public final com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler scheduler;
    public final com.google.android.datatransport.runtime.scheduling.persistence.EventStore store;

    public void <init>(java.util.concurrent.Executor, com.google.android.datatransport.runtime.scheduling.persistence.EventStore, com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler, com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)
    {
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler $r3;
        com.google.android.datatransport.runtime.synchronization.SynchronizationGuard $r4;
        java.util.concurrent.Executor $r1;
        com.google.android.datatransport.runtime.scheduling.persistence.EventStore $r2;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer r0;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: com.google.android.datatransport.runtime.scheduling.persistence.EventStore;

        $r3 := @parameter2: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler;

        $r4 := @parameter3: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.util.concurrent.Executor executor> = $r1;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.scheduling.persistence.EventStore store> = $r2;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler scheduler> = $r3;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard guard> = $r4;

        return;
    }

    public static java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)
    {
        java.util.Iterator $r4;
        java.lang.Iterable $r3;
        com.google.android.datatransport.runtime.TransportContext $r6;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler $r0;
        com.google.android.datatransport.runtime.scheduling.persistence.EventStore $r2;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer $r1;
        java.lang.Object $r5;
        boolean $z0;

        $r1 := @parameter0: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer;

        $r2 = $r1.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.scheduling.persistence.EventStore store>;

        $r3 = interfaceinvoke $r2.<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: java.lang.Iterable loadActiveContexts()>();

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.google.android.datatransport.runtime.TransportContext) $r5;

        $r0 = $r1.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler scheduler>;

        interfaceinvoke $r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>($r6, 1);

        goto label1;

     label2:
        return null;
    }

    public static void lambda$ensureContextsScheduled$1(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)
    {
        com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection $r1;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer $r2;
        com.google.android.datatransport.runtime.synchronization.SynchronizationGuard $r0;

        $r2 := @parameter0: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer;

        $r0 = $r2.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard guard>;

        $r1 = staticinvoke <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$2: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>($r2);

        interfaceinvoke $r0.<com.google.android.datatransport.runtime.synchronization.SynchronizationGuard: java.lang.Object runCriticalSection(com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection)>($r1);

        return;
    }

    public void ensureContextsScheduled()
    {
        com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer r0;
        java.util.concurrent.Executor $r1;
        java.lang.Runnable $r2;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer;

        $r1 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.util.concurrent.Executor executor>;

        $r2 = staticinvoke <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>(r0);

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }
}
