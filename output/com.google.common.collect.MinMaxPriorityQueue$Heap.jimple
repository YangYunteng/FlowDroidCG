public class com.google.common.collect.MinMaxPriorityQueue$Heap extends java.lang.Object
{
    public final com.google.common.collect.Ordering ordering;
    public com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap;
    public final com.google.common.collect.MinMaxPriorityQueue this$0;

    public void <init>(com.google.common.collect.MinMaxPriorityQueue, com.google.common.collect.Ordering)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        com.google.common.collect.Ordering $r2;
        com.google.common.collect.MinMaxPriorityQueue $r1;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $r1 := @parameter0: com.google.common.collect.MinMaxPriorityQueue;

        $r2 := @parameter1: com.google.common.collect.Ordering;

        r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering> = $r2;

        return;
    }

    public static boolean access$400(com.google.common.collect.MinMaxPriorityQueue$Heap, int)
    {
        int $i0;
        com.google.common.collect.MinMaxPriorityQueue$Heap $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter1: int;

        $z0 = specialinvoke $r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: boolean verifyIndex(int)>($i0);

        return $z0;
    }

    private int getGrandparentIndex(int)
    {
        int $i0;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i0);

        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i0);

        return $i0;
    }

    private int getLeftChildIndex(int)
    {
        int $i0;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        return $i0;
    }

    private int getParentIndex(int)
    {
        int $i0, $i1;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $i0 = $i0 / 2;

        return $i0;
    }

    private int getRightChildIndex(int)
    {
        int $i0;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i0 = $i0 * 2;

        $i0 = $i0 + 2;

        return $i0;
    }

    private boolean verifyIndex(int)
    {
        int $i0, $i1, $i2;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        com.google.common.collect.MinMaxPriorityQueue $r1;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i0);

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        if $i1 >= $i2 goto label1;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i0);

        $i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>($i0, $i1);

        if $i1 <= 0 goto label1;

        return 0;

     label1:
        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>($i0);

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        if $i1 >= $i2 goto label2;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>($i0);

        $i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>($i0, $i1);

        if $i1 <= 0 goto label2;

        return 0;

     label2:
        if $i0 <= 0 goto label3;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i0);

        $i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>($i0, $i1);

        if $i1 <= 0 goto label3;

        return 0;

     label3:
        if $i0 <= 2 goto label4;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getGrandparentIndex(int)>($i0);

        $i0 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>($i1, $i0);

        if $i0 <= 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void bubbleUp(int, java.lang.Object)
    {
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i1 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int crossOverUp(int,java.lang.Object)>($i1, $r1);

        $i2 = $i0;

        if $i0 != $i1 goto label1;

        $i2 = $i1;

        goto label2;

     label1:
        r0 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap>;

     label2:
        virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int bubbleUpAlternatingLevels(int,java.lang.Object)>($i2, $r1);

        return;
    }

    public int bubbleUpAlternatingLevels(int, java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.google.common.collect.MinMaxPriorityQueue $r2;
        com.google.common.collect.Ordering $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

     label1:
        if $i0 <= 2 goto label3;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getGrandparentIndex(int)>($i0);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

        $r4 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i2 = virtualinvoke $r4.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r3, $r1);

        if $i2 > 0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r5[$i0] = $r3;

        $i0 = $i1;

        goto label1;

     label3:
        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r5[$i0] = $r1;

        return $i0;
    }

    public int compareElements(int, int)
    {
        com.google.common.collect.Ordering $r1;
        int $i0, $i1;
        java.lang.Object $r3, $r4;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        com.google.common.collect.MinMaxPriorityQueue $r2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i0);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

        $i0 = virtualinvoke $r1.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        return $i0;
    }

    public int crossOver(int, java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.google.common.collect.MinMaxPriorityQueue $r3;
        com.google.common.collect.Ordering $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r4;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMinChild(int)>($i0);

        if $i1 <= 0 goto label1;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

        $i2 = virtualinvoke $r2.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r4, $r1);

        if $i2 >= 0 goto label1;

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r3);

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

        $r5[$i0] = $r4;

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r3);

        $r5[$i1] = $r1;

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int crossOverUp(int,java.lang.Object)>($i0, $r1);

        return $i0;
    }

    public int crossOverUp(int, java.lang.Object)
    {
        java.lang.Object[] $r3;
        com.google.common.collect.MinMaxPriorityQueue $r2;
        com.google.common.collect.Ordering $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1, $r4, $r5, $r6;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        if $i0 != 0 goto label1;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r3[0] = $r1;

        return 0;

     label1:
        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i0);

        $i2 = $i1;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

        $r5 = $r4;

        if $i1 == 0 goto label2;

        $i3 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i1);

        $i3 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>($i3);

        if $i3 == $i1 goto label2;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i3);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i4 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        if $i1 < $i4 goto label2;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r6 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i3);

        $r7 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i1 = virtualinvoke $r7.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r6, $r4);

        if $i1 >= 0 goto label2;

        $i2 = $i3;

        $r5 = $r6;

     label2:
        $r7 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i3 = virtualinvoke $r7.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r5, $r1);

        if $i3 >= 0 goto label3;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r3[$i0] = $r5;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r3[$i2] = $r1;

        return $i2;

     label3:
        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r3[$i0] = $r1;

        return $i0;
    }

    public int fillHoleAt(int)
    {
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        com.google.common.collect.MinMaxPriorityQueue $r1;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

     label1:
        $i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMinGrandChild(int)>($i0);

        if $i1 <= 0 goto label2;

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = virtualinvoke $r1.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

        $r2[$i0] = $r3;

        $i0 = $i1;

        goto label1;

     label2:
        return $i0;
    }

    public int findMin(int, int)
    {
        int $i0, $i1, $i2, $i3;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        com.google.common.collect.MinMaxPriorityQueue $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        if $i0 < $i2 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        $i2 = $i2 - $i1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i1 = $i2 + $i1;

        $i2 = $i0 + 1;

     label4:
        if $i2 >= $i1 goto label6;

        $i3 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>($i2, $i0);

        if $i3 >= 0 goto label5;

        $i0 = $i2;

     label5:
        $i2 = $i2 + 1;

        goto label4;

     label6:
        return $i0;
    }

    public int findMinChild(int)
    {
        int $i0;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i0);

        $i0 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMin(int,int)>($i0, 2);

        return $i0;
    }

    public int findMinGrandChild(int)
    {
        int $i0;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i0);

        if $i0 >= 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i0);

        $i0 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMin(int,int)>($i0, 4);

        return $i0;
    }

    public int swapWithConceptuallyLastElement(java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.google.common.collect.MinMaxPriorityQueue $r2;
        com.google.common.collect.Ordering $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i0 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i0);

        if $i1 == 0 goto label1;

        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i1);

        $i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>($i0);

        if $i0 == $i1 goto label1;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>($i0);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        if $i1 < $i2 goto label1;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i0);

        $r4 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i1 = virtualinvoke $r4.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r3, $r1);

        if $i1 >= 0 goto label1;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r5[$i0] = $r1;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i1 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $r5[$i1] = $r3;

        return $i0;

     label1:
        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i0 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        return $i0;
    }

    public com.google.common.collect.MinMaxPriorityQueue$MoveDesc tryCrossOverAndBubbleUp(int, int, java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue $r2;
        com.google.common.collect.MinMaxPriorityQueue$MoveDesc $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r3;
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $i2 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int crossOver(int,java.lang.Object)>($i1, $r1);

        if $i2 != $i1 goto label1;

        return null;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i0);

        goto label3;

     label2:
        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i0);

        $r3 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i1);

     label3:
        r0 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap>;

        $i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int bubbleUpAlternatingLevels(int,java.lang.Object)>($i2, $r1);

        if $i1 >= $i0 goto label4;

        $r4 = new com.google.common.collect.MinMaxPriorityQueue$MoveDesc;

        specialinvoke $r4.<com.google.common.collect.MinMaxPriorityQueue$MoveDesc: void <init>(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $r4;

     label4:
        return null;
    }
}
