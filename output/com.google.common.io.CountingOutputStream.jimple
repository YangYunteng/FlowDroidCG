public final class com.google.common.io.CountingOutputStream extends java.io.FilterOutputStream
{
    public long count;

    public void <init>(java.io.OutputStream)
    {
        com.google.common.io.CountingOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: com.google.common.io.CountingOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1);

        return;
    }

    public void close()
    {
        com.google.common.io.CountingOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: com.google.common.io.CountingOutputStream;

        $r1 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public long getCount()
    {
        com.google.common.io.CountingOutputStream r0;
        long l0;

        r0 := @this: com.google.common.io.CountingOutputStream;

        l0 = r0.<com.google.common.io.CountingOutputStream: long count>;

        return l0;
    }

    public void write(int)
    {
        java.io.OutputStream $r1;
        com.google.common.io.CountingOutputStream r0;
        int $i0;
        long $l1;

        r0 := @this: com.google.common.io.CountingOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0);

        $l1 = r0.<com.google.common.io.CountingOutputStream: long count>;

        $l1 = $l1 + 1L;

        r0.<com.google.common.io.CountingOutputStream: long count> = $l1;

        return;
    }

    public void write(byte[], int, int)
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        com.google.common.io.CountingOutputStream r0;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: com.google.common.io.CountingOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        $l2 = r0.<com.google.common.io.CountingOutputStream: long count>;

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        r0.<com.google.common.io.CountingOutputStream: long count> = $l2;

        return;
    }
}
