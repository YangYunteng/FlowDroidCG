public abstract class com.google.common.collect.Sets$ImprovedAbstractSet extends java.util.AbstractSet
{

    public void <init>()
    {
        com.google.common.collect.Sets$ImprovedAbstractSet r0;

        r0 := @this: com.google.common.collect.Sets$ImprovedAbstractSet;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.Sets$ImprovedAbstractSet r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Sets$ImprovedAbstractSet;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <com.google.common.collect.Sets: boolean removeAllImpl(java.util.Set,java.util.Collection)>(r0, $r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.Sets$ImprovedAbstractSet r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.Sets$ImprovedAbstractSet;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = specialinvoke r0.<java.util.AbstractSet: boolean retainAll(java.util.Collection)>($r1);

        return $z0;
    }
}
