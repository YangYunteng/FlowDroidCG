public final class com.google.android.gms.internal.ads.zzayt extends java.lang.Object
{

    public static java.math.BigInteger zza(java.security.spec.EllipticCurve)
    {
        java.security.spec.ECField $r1;
        java.security.GeneralSecurityException $r4;
        java.security.spec.ECFieldFp $r2;
        java.math.BigInteger $r3;
        java.security.spec.EllipticCurve $r0;
        boolean $z0;

        $r0 := @parameter0: java.security.spec.EllipticCurve;

        $r1 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $z0 = $r1 instanceof java.security.spec.ECFieldFp;

        if $z0 == 0 goto label1;

        $r2 = (java.security.spec.ECFieldFp) $r1;

        $r3 = virtualinvoke $r2.<java.security.spec.ECFieldFp: java.math.BigInteger getP()>();

        return $r3;

     label1:
        $r4 = new java.security.GeneralSecurityException;

        specialinvoke $r4.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Only curves over prime order fields are supported");

        throw $r4;
    }

    public static java.security.KeyPair zza(java.security.spec.ECParameterSpec)
    {
        java.security.KeyPairGenerator $r3;
        com.google.android.gms.internal.ads.zzayy $r1;
        java.security.KeyPair $r4;
        java.lang.Object $r2;
        java.security.spec.ECParameterSpec $r0;

        $r0 := @parameter0: java.security.spec.ECParameterSpec;

        $r1 = <com.google.android.gms.internal.ads.zzayy: com.google.android.gms.internal.ads.zzayy zzdoe>;

        $r2 = virtualinvoke $r1.<com.google.android.gms.internal.ads.zzayy: java.lang.Object zzek(java.lang.String)>("EC");

        $r3 = (java.security.KeyPairGenerator) $r2;

        virtualinvoke $r3.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r0);

        $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        return $r4;
    }

    public static java.security.interfaces.ECPublicKey zza(com.google.android.gms.internal.ads.zzayv, byte[], byte[])
    {
        byte[] $r2, $r3;
        com.google.android.gms.internal.ads.zzayy $r9;
        java.security.spec.ECPublicKeySpec $r8;
        java.security.PublicKey $r12;
        java.security.spec.EllipticCurve $r7;
        com.google.android.gms.internal.ads.zzayv $r1;
        java.security.spec.ECParameterSpec $r4;
        java.security.KeyFactory $r11;
        java.security.spec.ECPoint $r6;
        java.math.BigInteger $r0, $r5;
        java.lang.Object $r10;
        java.security.interfaces.ECPublicKey $r13;

        $r1 := @parameter0: com.google.android.gms.internal.ads.zzayv;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $r4 = staticinvoke <com.google.android.gms.internal.ads.zzayt: java.security.spec.ECParameterSpec zza(com.google.android.gms.internal.ads.zzayv)>($r1);

        $r0 = new java.math.BigInteger;

        specialinvoke $r0.<java.math.BigInteger: void <init>(int,byte[])>(1, $r2);

        $r5 = new java.math.BigInteger;

        specialinvoke $r5.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3);

        $r6 = new java.security.spec.ECPoint;

        specialinvoke $r6.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r0, $r5);

        $r7 = virtualinvoke $r4.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        staticinvoke <com.google.android.gms.internal.ads.zzayt: void zza(java.security.spec.ECPoint,java.security.spec.EllipticCurve)>($r6, $r7);

        $r8 = new java.security.spec.ECPublicKeySpec;

        specialinvoke $r8.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r6, $r4);

        $r9 = <com.google.android.gms.internal.ads.zzayy: com.google.android.gms.internal.ads.zzayy zzdof>;

        $r10 = virtualinvoke $r9.<com.google.android.gms.internal.ads.zzayy: java.lang.Object zzek(java.lang.String)>("EC");

        $r11 = (java.security.KeyFactory) $r10;

        $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8);

        $r13 = (java.security.interfaces.ECPublicKey) $r12;

        return $r13;
    }

    public static java.security.spec.ECParameterSpec zza(com.google.android.gms.internal.ads.zzayv)
    {
        com.google.android.gms.internal.ads.zzayv $r0;
        java.security.spec.ECParameterSpec $r7;
        int[] $r1;
        java.security.NoSuchAlgorithmException $r8;
        int $i0;
        java.lang.StringBuilder $r9;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        $r0 := @parameter0: com.google.android.gms.internal.ads.zzayv;

        $r1 = <com.google.android.gms.internal.ads.zzayu: int[] zzdnn>;

        $i0 = virtualinvoke $r0.<java.lang.Enum: int ordinal()>();

        $i0 = $r1[$i0];

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label3;

        if $i0 != 3 goto label2;

        $r2 = "6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151";

        $r3 = "6864797660130609714981900799081393217269435300143305409394463459185543183397655394245057746333217197532963996371363321113864768612440380340372808892707005449";

        $r4 = "051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00";

        $r5 = "c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66";

        $r6 = "11839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650";

     label1:
        $r7 = staticinvoke <com.google.android.gms.internal.ads.zzayt: java.security.spec.ECParameterSpec zza(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4, $r5, $r6);

        return $r7;

     label2:
        $r8 = new java.security.NoSuchAlgorithmException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + 22;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("curve not implemented:");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label3:
        $r2 = "39402006196394479212279040100143613805079739270465446667948293404245721771496870329047266088258938001861606973112319";

        $r3 = "39402006196394479212279040100143613805079739270465446667946905279627659399113263569398956308152294913554433653942643";

        $r4 = "b3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef";

        $r5 = "aa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7";

        $r6 = "3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f";

        goto label1;

     label4:
        $r2 = "115792089210356248762697446949407573530086143415290314195533631308867097853951";

        $r3 = "115792089210356248762697446949407573529996955224135760342422259061068512044369";

        $r4 = "5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b";

        $r5 = "6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296";

        $r6 = "4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5";

        goto label1;
    }

    public static java.security.spec.ECParameterSpec zza(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.security.spec.EllipticCurve $r12;
        java.security.spec.ECParameterSpec $r14;
        java.security.spec.ECFieldFp $r11;
        java.security.spec.ECPoint $r13;
        java.math.BigInteger $r0, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 = new java.math.BigInteger;

        specialinvoke $r6.<java.math.BigInteger: void <init>(java.lang.String)>($r1);

        $r7 = new java.math.BigInteger;

        specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>($r2);

        $r0 = new java.math.BigInteger;

        specialinvoke $r0.<java.math.BigInteger: void <init>(java.lang.String)>("3");

        $r0 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r0);

        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String,int)>($r3, 16);

        $r9 = new java.math.BigInteger;

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String,int)>($r4, 16);

        $r10 = new java.math.BigInteger;

        specialinvoke $r10.<java.math.BigInteger: void <init>(java.lang.String,int)>($r5, 16);

        $r11 = new java.security.spec.ECFieldFp;

        specialinvoke $r11.<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>($r6);

        $r12 = new java.security.spec.EllipticCurve;

        specialinvoke $r12.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger)>($r11, $r0, $r8);

        $r13 = new java.security.spec.ECPoint;

        specialinvoke $r13.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r9, $r10);

        $r14 = new java.security.spec.ECParameterSpec;

        specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r13, $r7, 1);

        return $r14;
    }

    public static void zza(java.security.spec.ECPoint, java.security.spec.EllipticCurve)
    {
        java.security.spec.EllipticCurve $r1;
        java.security.GeneralSecurityException $r7;
        int $i0, $i1;
        java.security.spec.ECPoint $r0;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        $r0 := @parameter0: java.security.spec.ECPoint;

        $r1 := @parameter1: java.security.spec.EllipticCurve;

        $r2 = staticinvoke <com.google.android.gms.internal.ads.zzayt: java.math.BigInteger zza(java.security.spec.EllipticCurve)>($r1);

        $r3 = virtualinvoke $r0.<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>();

        $r4 = virtualinvoke $r0.<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>();

        if $r3 == null goto label4;

        if $r4 == null goto label4;

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int signum()>();

        $i1 = -1;

        if $i0 == $i1 goto label3;

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        $i1 = -1;

        if $i0 != $i1 goto label3;

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int signum()>();

        $i1 = -1;

        if $i0 == $i1 goto label2;

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        $i1 = -1;

        if $i0 != $i1 goto label2;

        $r4 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r4);

        $r4 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

        $r6 = virtualinvoke $r1.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r6);

        $r3 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

        $r5 = virtualinvoke $r1.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r5);

        $r2 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $z0 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = new java.security.GeneralSecurityException;

        specialinvoke $r7.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Point is not on curve");

        throw $r7;

     label2:
        $r7 = new java.security.GeneralSecurityException;

        specialinvoke $r7.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("y is out of range");

        throw $r7;

     label3:
        $r7 = new java.security.GeneralSecurityException;

        specialinvoke $r7.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("x is out of range");

        throw $r7;

     label4:
        $r7 = new java.security.GeneralSecurityException;

        specialinvoke $r7.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("point is at infinity");

        throw $r7;
    }

    public static byte[] zza(java.security.interfaces.ECPrivateKey, java.security.spec.ECPoint)
    {
        com.google.android.gms.internal.ads.zzayy $r6;
        byte[] $r9;
        java.security.spec.ECPublicKeySpec $r19;
        java.security.InvalidAlgorithmParameterException $r20;
        java.security.GeneralSecurityException $r21;
        javax.crypto.KeyAgreement $r8;
        int $i0, $i1;
        java.security.interfaces.ECPrivateKey $r0;
        java.math.BigInteger $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0;
        java.security.PublicKey $r5;
        java.security.spec.EllipticCurve $r3;
        java.security.spec.ECParameterSpec $r2;
        java.security.KeyFactory $r4;
        java.security.spec.ECPoint $r1;
        java.lang.Object $r7;

        $r0 := @parameter0: java.security.interfaces.ECPrivateKey;

        $r1 := @parameter1: java.security.spec.ECPoint;

        $r2 = interfaceinvoke $r0.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        $r3 = virtualinvoke $r2.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        staticinvoke <com.google.android.gms.internal.ads.zzayt: void zza(java.security.spec.ECPoint,java.security.spec.EllipticCurve)>($r1, $r3);

        $r2 = interfaceinvoke $r0.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        virtualinvoke $r2.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r19 = new java.security.spec.ECPublicKeySpec;

        specialinvoke $r19.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r1, $r2);

        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("EC");

        $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r19);

        $r6 = <com.google.android.gms.internal.ads.zzayy: com.google.android.gms.internal.ads.zzayy zzdod>;

        $r7 = virtualinvoke $r6.<com.google.android.gms.internal.ads.zzayy: java.lang.Object zzek(java.lang.String)>("ECDH");

        $r8 = (javax.crypto.KeyAgreement) $r7;

        virtualinvoke $r8.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r0);

        virtualinvoke $r8.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r5, 1);

        $r9 = virtualinvoke $r8.<javax.crypto.KeyAgreement: byte[] generateSecret()>();

        $r2 = interfaceinvoke $r0.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        $r3 = virtualinvoke $r2.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r11 = new java.math.BigInteger;

        $r10 = $r11;

        specialinvoke $r11.<java.math.BigInteger: void <init>(int,byte[])>(1, $r9);

        $i0 = virtualinvoke $r10.<java.math.BigInteger: int signum()>();

        $i1 = -1;

        if $i0 == $i1 goto label15;

        $r11 = staticinvoke <com.google.android.gms.internal.ads.zzayt: java.math.BigInteger zza(java.security.spec.EllipticCurve)>($r3);

        $i0 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r11);

        $i1 = -1;

        if $i0 != $i1 goto label15;

        $r11 = staticinvoke <com.google.android.gms.internal.ads.zzayt: java.math.BigInteger zza(java.security.spec.EllipticCurve)>($r3);

        $r12 = virtualinvoke $r3.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r13 = virtualinvoke $r3.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        $r14 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r10);

        $r12 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12);

        $r10 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r10);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r13);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $i0 = virtualinvoke $r11.<java.math.BigInteger: int signum()>();

        if $i0 != 1 goto label14;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r13 = null;

        $r12 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r10.<java.math.BigInteger: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label01;

        $r13 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label13;

     label01:
        $z0 = virtualinvoke $r11.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke $r11.<java.math.BigInteger: boolean testBit(int)>(1);

        if $z0 == 0 goto label02;

        $r13 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r13 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r13);

        $r13 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(2);

        $r13 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r11);

        goto label11;

     label02:
        $z0 = virtualinvoke $r11.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r11.<java.math.BigInteger: boolean testBit(int)>(1);

        if $z0 != 0 goto label11;

        $r13 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r12 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r13);

        $r14 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(1);

        $i0 = 0;

     label03:
        $r12 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r10);

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r12.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label04;

        goto label13;

     label04:
        $r15 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r14, $r11);

        $r16 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r16 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r16);

        $z0 = virtualinvoke $r16.<java.math.BigInteger: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label07;

        $r12 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r15.<java.math.BigInteger: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label06;

        $r12 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r13 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12);

        $i0 = $i0 + 1;

        if $i0 != 128 goto label03;

        $z0 = virtualinvoke $r11.<java.math.BigInteger: boolean isProbablePrime(int)>(80);

        if $z0 == 0 goto label05;

        goto label03;

     label05:
        $r20 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r20.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("p is not prime");

        throw $r20;

     label06:
        $r20 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r20.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("p is not prime");

        throw $r20;

     label07:
        $r14 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r14 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r14);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(1);

        $r17 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $i0 = virtualinvoke $r14.<java.math.BigInteger: int bitLength()>();

        $i0 = $i0 - 2;

        $r18 = $r13;

     label08:
        if $i0 < 0 goto label10;

        $r16 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r17);

        $r15 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r18);

        $r17 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r17);

        $r17 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r17 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r17);

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r18 = $r15;

        $r16 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r16);

        $r16 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r17 = $r16;

        $z0 = virtualinvoke $r14.<java.math.BigInteger: boolean testBit(int)>($i0);

        if $z0 == 0 goto label09;

        $r17 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r18 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r17 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r18);

        $r18 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r16 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r16);

        $r15 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        $r17 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

     label09:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label08;

     label10:
        $r13 = $r18;

     label11:
        if $r13 == null goto label13;

        $r12 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $i0 = virtualinvoke $r12.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r10);

        if $i0 != 0 goto label12;

        goto label13;

     label12:
        $r21 = new java.security.GeneralSecurityException;

        specialinvoke $r21.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Could not find a modular square root");

        throw $r21;

     label13:
        $z0 = virtualinvoke $r13.<java.math.BigInteger: boolean testBit(int)>(0);

        if 1 == $z0 goto label17;

        $r10 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r13);

        virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        return $r9;

     label14:
        $r20 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r20.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("p must be positive");

        throw $r20;

     label15:
        $r21 = new java.security.GeneralSecurityException;

        specialinvoke $r21.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("shared secret is out of range");

        goto label16;

     label16:
        throw $r21;

     label17:
        return $r9;
    }

    public static int zzb(java.security.spec.EllipticCurve)
    {
        int $i0;
        java.math.BigInteger $r0, $r2;
        java.security.spec.EllipticCurve $r1;

        $r1 := @parameter0: java.security.spec.EllipticCurve;

        $r2 = staticinvoke <com.google.android.gms.internal.ads.zzayt: java.math.BigInteger zza(java.security.spec.EllipticCurve)>($r1);

        $r0 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r0 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r0);

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int bitLength()>();

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        return $i0;
    }
}
