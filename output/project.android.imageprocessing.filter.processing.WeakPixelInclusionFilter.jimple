public class project.android.imageprocessing.filter.processing.WeakPixelInclusionFilter extends project.android.imageprocessing.filter.MultiPixelRenderer
{

    public void <init>()
    {
        project.android.imageprocessing.filter.processing.WeakPixelInclusionFilter r0;

        r0 := @this: project.android.imageprocessing.filter.processing.WeakPixelInclusionFilter;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiPixelRenderer: void <init>()>();

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.processing.WeakPixelInclusionFilter r0;

        r0 := @this: project.android.imageprocessing.filter.processing.WeakPixelInclusionFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nvarying vec2 v_TexCoord;\nuniform float u_TexelWidth;\nuniform float u_TexelHeight;\nvoid main(){\n   vec2 up = vec2(0.0, u_TexelHeight);\n   vec2 right = vec2(u_TexelWidth, 0.0);\n   float bottomLeftIntensity = texture2D(u_Texture0, v_TexCoord - up - right).r;\n   float topRightIntensity = texture2D(u_Texture0, v_TexCoord + up + right).r;\n   float topLeftIntensity = texture2D(u_Texture0, v_TexCoord + up - right).r;\n   float bottomRightIntensity = texture2D(u_Texture0, v_TexCoord - up + right).r;\n   float leftIntensity = texture2D(u_Texture0, v_TexCoord - right).r;\n   float rightIntensity = texture2D(u_Texture0, v_TexCoord + right).r;\n   float bottomIntensity = texture2D(u_Texture0, v_TexCoord - up).r;\n   float topIntensity = texture2D(u_Texture0, v_TexCoord + up).r;\n   float centerIntensity = texture2D(u_Texture0,v_TexCoord).r;\n   float pixelIntensitySum = bottomLeftIntensity + topRightIntensity + topLeftIntensity + bottomRightIntensity + leftIntensity + rightIntensity + bottomIntensity + topIntensity + centerIntensity;\n   float sumTest = step(1.5, pixelIntensitySum);\n   float pixelTest = step(0.01, centerIntensity);\n   gl_FragColor = vec4(vec3(sumTest * pixelTest), 1.0);\n}\n";
    }
}
