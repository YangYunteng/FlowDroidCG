public class org.apache.james.mime4j.io.BufferedLineReaderInputStream extends org.apache.james.mime4j.io.LineReaderInputStream
{
    public byte[] buffer;
    public int buflen;
    public int bufpos;
    public final int maxLineLen;
    public boolean truncated;

    public void <init>(java.io.InputStream, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 = -1;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void <init>(java.io.InputStream,int,int)>($r1, $i0, $i1);

        return;
    }

    public void <init>(java.io.InputStream, int, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStream: void <init>(java.io.InputStream)>($r1);

        if $r1 == null goto label2;

        if $i1 <= 0 goto label1;

        $r2 = newarray (byte)[$i1];

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r2;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen> = $i0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated> = 0;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size may not be negative or zero");

        throw $r3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input stream may not be null");

        throw $r3;
    }

    private void expand(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        $r2 = newarray (byte)[$i0];

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = $i1 - $i0;

        if $i1 <= 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i0, $i1);

     label1:
        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r2;

        return;
    }

    public byte[] buf()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        return r1;
    }

    public int capacity()
    {
        int $i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public byte charAt(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        byte $b2;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i0 < $i1 goto label1;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i0 > $i1 goto label1;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b2 = $r1[$i0];

        return $b2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public void clear()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = 0;

        return;
    }

    public void ensureCapacity(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void expand(int)>($i0);

     label1:
        return;
    }

    public int fillBuffer()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        java.io.InputStream $r2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i1 <= 0 goto label2;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = $i0 - $i1;

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r1, 0, $i0);

     label1:
        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i0;

     label2:
        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = lengthof $r1;

        $i0 = $i0 - $i1;

        $r2 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i0);

        $i2 = -1;

        if $i0 != $i2 goto label3;

        $i1 = -1;

        return $i1;

     label3:
        $i1 = $i1 + $i0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i1;

        return $i0;
    }

    public boolean hasBufferedData()
    {
        int $i0, $i1;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int indexOf(byte)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte $b1;
        int $i0, $i2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $b1 := @parameter0: byte;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i2 = $i2 - $i0;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte,int,int)>($b1, $i0, $i2);

        return $i0;
    }

    public int indexOf(byte, int, int)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte $b0, $b4;
        int $i1, $i2, $i3, $i5;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i1 < $i3 goto label4;

        if $i2 < 0 goto label4;

        $i2 = $i2 + $i1;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i2 > $i3 goto label4;

     label1:
        if $i1 >= $i2 goto label3;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b4 = $r1[$i1];

        $i3 = (int) $b4;

        $i5 = (int) $b0;

        if $i3 != $i5 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i1 = -1;

        return $i1;

     label4:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        goto label5;

     label5:
        throw $r2;
    }

    public int indexOf(byte[])
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i1 = $i1 - $i0;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }

    public int indexOf(byte[], int, int)
    {
        byte[] $r1, $r3;
        java.lang.IndexOutOfBoundsException $r4;
        short $s5;
        byte $b4, $b8;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i9;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        if $r1 == null goto label15;

        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i1 < $i2 goto label14;

        if $i0 < 0 goto label14;

        $i2 = $i1 + $i0;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i2 > $i3 goto label14;

        $i2 = lengthof $r1;

        if $i0 >= $i2 goto label01;

        $i1 = -1;

        return $i1;

     label01:
        $r2 = newarray (int)[256];

        $i2 = 0;

     label02:
        $i3 = lengthof $r2;

        if $i2 >= $i3 goto label03;

        $i3 = lengthof $r1;

        $i3 = $i3 + 1;

        $r2[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label02;

     label03:
        $i2 = 0;

     label04:
        $i3 = lengthof $r1;

        if $i2 >= $i3 goto label05;

        $b4 = $r1[$i2];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i2;

        $i6 = (int) $s5;

        $r2[$i6] = $i3;

        $i2 = $i2 + 1;

        goto label04;

     label05:
        $i2 = 0;

     label06:
        $i3 = lengthof $r1;

        $i3 = $i0 - $i3;

        if $i2 > $i3 goto label13;

        $i3 = $i1 + $i2;

        $i6 = 0;

     label07:
        $i7 = lengthof $r1;

        if $i6 >= $i7 goto label09;

        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i7 = $i3 + $i6;

        $b4 = $r3[$i7];

        $b8 = $r1[$i6];

        $i7 = (int) $b4;

        $i9 = (int) $b8;

        if $i7 == $i9 goto label08;

        $z0 = 0;

        goto label10;

     label08:
        $i6 = $i6 + 1;

        goto label07;

     label09:
        $z0 = 1;

     label10:
        if $z0 == 0 goto label11;

        return $i3;

     label11:
        $i6 = lengthof $r1;

        $i3 = $i3 + $i6;

        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i6 = lengthof $r3;

        if $i3 < $i6 goto label12;

        $i1 = -1;

        return $i1;

     label12:
        $b4 = $r3[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $r2[$i3];

        $i2 = $i2 + $i3;

        goto label06;

     label13:
        $i1 = -1;

        return $i1;

     label14:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label15:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pattern may not be null");

        goto label16;

     label16:
        throw $r5;
    }

    public int length()
    {
        int $i0, $i1;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public int limit()
    {
        int i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        return i0;
    }

    public boolean markSupported()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        return 0;
    }

    public int pos()
    {
        int i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        return i0;
    }

    public int read()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        short $s3;
        byte $b2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated>;

        if $z0 == 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $i0 = -1;

        return $i0;

     label2:
        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i1 + 1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i0;

        $b2 = $r1[$i1];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i0 = (int) $s3;

        return $i0;
    }

    public int read(byte[])
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated>;

        if $z0 == 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        if $r1 != null goto label2;

        return 0;

     label2:
        $i0 = lengthof $r1;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;
    }

    public int read(byte[], int, int)
    {
        byte[] $r1, $r2;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated>;

        if $z0 == 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        if $r1 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z0 != 0 goto label3;

        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        $i3 = -1;

        if $i2 != $i3 goto label2;

        $i0 = -1;

        return $i0;

     label3:
        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = $i2 - $i3;

        if $i2 <= $i1 goto label4;

        goto label5;

     label4:
        $i1 = $i2;

     label5:
        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1);

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i0 + $i1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i0;

        return $i1;
    }

    public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer)
    {
        byte[] $r2;
        org.apache.james.mime4j.io.MaxLineLimitException $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1, $i2, $i3;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        if $r1 == null goto label10;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated>;

        if $z0 == 0 goto label01;

        $i0 = -1;

        return $i0;

     label01:
        $z0 = 0;

        $i0 = 0;

        $i1 = 0;

     label02:
        if $z0 != 0 goto label08;

        $z1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label03;

        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        $i1 = $i2;

        $i3 = -1;

        if $i2 != $i3 goto label03;

        goto label08;

     label03:
        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte)>(10);

        $i3 = -1;

        if $i2 == $i3 goto label04;

        $i2 = $i2 + 1;

        $i3 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i2 = $i2 - $i3;

        $z0 = 1;

        goto label05;

     label04:
        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int length()>();

     label05:
        if $i2 <= 0 goto label06;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buf()>();

        $i3 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r2, $i3, $i2);

        virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>($i2);

        $i0 = $i0 + $i2;

     label06:
        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen>;

        if $i2 <= 0 goto label02;

        $i2 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen>;

        if $i2 >= $i3 goto label07;

        goto label02;

     label07:
        $r3 = new org.apache.james.mime4j.io.MaxLineLimitException;

        specialinvoke $r3.<org.apache.james.mime4j.io.MaxLineLimitException: void <init>(java.lang.String)>("Maximum line length limit exceeded");

        throw $r3;

     label08:
        if $i0 != 0 goto label09;

        $i2 = -1;

        if $i1 != $i2 goto label12;

        $i0 = -1;

     label09:
        return $i0;

     label10:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer may not be null");

        goto label11;

     label11:
        throw $r4;

     label12:
        return $i0;
    }

    public int skip(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i1 := @parameter0: int;

        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i2 - $i0;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i0 + $i1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i0;

        return $i1;
    }

    public java.lang.String toString()
    {
        byte[] $r3;
        char $c3;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte $b2;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[pos: ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[limit: ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

     label1:
        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b2 = $r3[$i0];

        $c3 = (char) $b2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void truncate()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void clear()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated> = 1;

        return;
    }
}
