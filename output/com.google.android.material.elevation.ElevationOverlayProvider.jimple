public class com.google.android.material.elevation.ElevationOverlayProvider extends java.lang.Object
{
    public static final float FORMULA_MULTIPLIER;
    public static final float FORMULA_OFFSET;
    public final int colorSurface;
    public final float displayDensity;
    public final int elevationOverlayColor;
    public final boolean elevationOverlayEnabled;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0;
        android.util.DisplayMetrics $r3;
        boolean $z0;
        android.content.res.Resources $r2;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <com.google.android.material.R$attr: int elevationOverlayEnabled>;

        $z0 = staticinvoke <com.google.android.material.resources.MaterialAttributes: boolean resolveBoolean(android.content.Context,int,boolean)>($r1, $i0, 0);

        r0.<com.google.android.material.elevation.ElevationOverlayProvider: boolean elevationOverlayEnabled> = $z0;

        $i0 = <com.google.android.material.R$attr: int elevationOverlayColor>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.content.Context,int,int)>($r1, $i0, 0);

        r0.<com.google.android.material.elevation.ElevationOverlayProvider: int elevationOverlayColor> = $i0;

        $i0 = <com.google.android.material.R$attr: int colorSurface>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int getColor(android.content.Context,int,int)>($r1, $i0, 0);

        r0.<com.google.android.material.elevation.ElevationOverlayProvider: int colorSurface> = $i0;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r3.<android.util.DisplayMetrics: float density>;

        r0.<com.google.android.material.elevation.ElevationOverlayProvider: float displayDensity> = $f0;

        return;
    }

    private boolean isThemeSurfaceColor(int)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <b.i.c.e: int c(int,int)>($i0, 255);

        $i1 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: int colorSurface>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int calculateOverlayAlpha(float)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $f0 := @parameter0: float;

        $f0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: float calculateOverlayAlphaFraction(float)>($f0);

        $f0 = $f0 * 255.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    public float calculateOverlayAlphaFraction(float)
    {
        byte $b0;
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i1;
        float $f0, $f1;
        double $d0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: float displayDensity>;

        $b0 = $f1 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $b0 = $f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 > 0 goto label1;

        return 0.0F;

     label1:
        $f0 = $f0 / $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double log1p(double)>($d0);

        $f0 = (float) $d0;

        $f0 = $f0 * 4.5F;

        $f0 = $f0 + 2.0F;

        $f0 = $f0 / 100.0F;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, 1.0F);

        return $f0;

     label2:
        return 0.0F;
    }

    public int compositeOverlay(int, float)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0, $i1, $i2;
        float $f0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $f0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: float calculateOverlayAlphaFraction(float)>($f0);

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i0 = staticinvoke <b.i.c.e: int c(int,int)>($i0, 255);

        $i2 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: int elevationOverlayColor>;

        $i0 = staticinvoke <com.google.android.material.color.MaterialColors: int layer(int,int,float)>($i0, $i2, $f0);

        $i0 = staticinvoke <b.i.c.e: int c(int,int)>($i0, $i1);

        return $i0;
    }

    public int compositeOverlay(int, float, android.view.View)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0, $f1;
        android.view.View $r1;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 := @parameter2: android.view.View;

        $f1 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: float getParentAbsoluteElevation(android.view.View)>($r1);

        $f0 = $f0 + $f1;

        $i0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlay(int,float)>($i0, $f0);

        return $i0;
    }

    public int compositeOverlayIfNeeded(int, float)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0;
        boolean $z0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $z0 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: boolean elevationOverlayEnabled>;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: boolean isThemeSurfaceColor(int)>($i0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlay(int,float)>($i0, $f0);

     label1:
        return $i0;
    }

    public int compositeOverlayIfNeeded(int, float, android.view.View)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0, $f1;
        android.view.View $r1;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 := @parameter2: android.view.View;

        $f1 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: float getParentAbsoluteElevation(android.view.View)>($r1);

        $f0 = $f0 + $f1;

        $i0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlayIfNeeded(int,float)>($i0, $f0);

        return $i0;
    }

    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $f0 := @parameter0: float;

        $i0 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: int colorSurface>;

        $i0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlayIfNeeded(int,float)>($i0, $f0);

        return $i0;
    }

    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float, android.view.View)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int $i0;
        float $f0, $f1;
        android.view.View $r1;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $f0 := @parameter0: float;

        $r1 := @parameter1: android.view.View;

        $f1 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: float getParentAbsoluteElevation(android.view.View)>($r1);

        $f0 = $f0 + $f1;

        $i0 = virtualinvoke r0.<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlayWithThemeSurfaceColorIfNeeded(float)>($f0);

        return $i0;
    }

    public float getParentAbsoluteElevation(android.view.View)
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        float $f0;
        android.view.View $r1;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        $r1 := @parameter0: android.view.View;

        $f0 = staticinvoke <com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)>($r1);

        return $f0;
    }

    public int getThemeElevationOverlayColor()
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int i0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        i0 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: int elevationOverlayColor>;

        return i0;
    }

    public int getThemeSurfaceColor()
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        int i0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        i0 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: int colorSurface>;

        return i0;
    }

    public boolean isThemeElevationOverlayEnabled()
    {
        com.google.android.material.elevation.ElevationOverlayProvider r0;
        boolean z0;

        r0 := @this: com.google.android.material.elevation.ElevationOverlayProvider;

        z0 = r0.<com.google.android.material.elevation.ElevationOverlayProvider: boolean elevationOverlayEnabled>;

        return z0;
    }

    public static void <clinit>()
    {
        <com.google.android.material.elevation.ElevationOverlayProvider: float FORMULA_OFFSET> = 2.0F;

        <com.google.android.material.elevation.ElevationOverlayProvider: float FORMULA_MULTIPLIER> = 4.5F;

        return;
    }
}
