public class com.google.android.material.internal.NavigationMenuPresenter extends java.lang.Object implements b.b.e.a.n
{
    public static final java.lang.String STATE_ADAPTER;
    public static final java.lang.String STATE_HEADER;
    public static final java.lang.String STATE_HIERARCHY;
    public com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter;
    public b.b.e.a.n$a callback;
    public boolean hasCustomItemIconSize;
    public android.widget.LinearLayout headerLayout;
    public android.content.res.ColorStateList iconTintList;
    public int id;
    public boolean isBehindStatusBar;
    public android.graphics.drawable.Drawable itemBackground;
    public int itemHorizontalPadding;
    public int itemIconPadding;
    public int itemIconSize;
    public int itemMaxLines;
    public android.view.LayoutInflater layoutInflater;
    public androidx.appcompat.view.menu.MenuBuilder menu;
    public com.google.android.material.internal.NavigationMenuView menuView;
    public final android.view.View$OnClickListener onClickListener;
    public int overScrollMode;
    public int paddingSeparator;
    public int paddingTopDefault;
    public int textAppearance;
    public boolean textAppearanceSet;
    public android.content.res.ColorStateList textColor;

    public void <init>()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;
        com.google.android.material.internal.NavigationMenuPresenter$1 $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean isBehindStatusBar> = 1;

        $i0 = -1;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int overScrollMode> = $i0;

        $r1 = new com.google.android.material.internal.NavigationMenuPresenter$1;

        specialinvoke $r1.<com.google.android.material.internal.NavigationMenuPresenter$1: void <init>(com.google.android.material.internal.NavigationMenuPresenter)>(r0);

        r0.<com.google.android.material.internal.NavigationMenuPresenter: android.view.View$OnClickListener onClickListener> = $r1;

        return;
    }

    public static int access$000(com.google.android.material.internal.NavigationMenuPresenter)
    {
        com.google.android.material.internal.NavigationMenuPresenter $r0;
        int i0;

        $r0 := @parameter0: com.google.android.material.internal.NavigationMenuPresenter;

        i0 = $r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemMaxLines>;

        return i0;
    }

    private void updateTopPadding()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.widget.LinearLayout $r2;
        com.google.android.material.internal.NavigationMenuView $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        $i0 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 != 0 goto label1;

        $z0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean isBehindStatusBar>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int paddingTopDefault>;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $i1 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingBottom()>();

        virtualinvoke $r1.<android.view.ViewGroup: void setPadding(int,int,int,int)>(0, $i0, 0, $i1);

        return;
    }

    public void addHeaderView(android.view.View)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.widget.LinearLayout $r2;
        com.google.android.material.internal.NavigationMenuView $r3;
        int $i0;
        android.view.View $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void addView(android.view.View)>($r1);

        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int getPaddingBottom()>();

        virtualinvoke $r3.<android.view.ViewGroup: void setPadding(int,int,int,int)>(0, 0, 0, $i0);

        return;
    }

    public boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder, androidx.appcompat.view.menu.MenuItemImpl)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r2 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r1 := @parameter1: androidx.appcompat.view.menu.MenuItemImpl;

        return 0;
    }

    public void dispatchApplyWindowInsets(b.i.i.I)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.widget.LinearLayout $r3;
        com.google.android.material.internal.NavigationMenuView $r2;
        int $i0, $i1;
        b.i.i.I $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: b.i.i.I;

        $i0 = virtualinvoke $r1.<b.i.i.I: int f()>();

        $i1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int paddingTopDefault>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int paddingTopDefault> = $i0;

        specialinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateTopPadding()>();

     label1:
        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getPaddingTop()>();

        $i1 = virtualinvoke $r1.<b.i.i.I: int c()>();

        virtualinvoke $r2.<android.view.ViewGroup: void setPadding(int,int,int,int)>(0, $i0, 0, $i1);

        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        staticinvoke <b.i.i.y: b.i.i.I a(android.view.View,b.i.i.I)>($r3, $r1);

        return;
    }

    public boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder, androidx.appcompat.view.menu.MenuItemImpl)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r2 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r1 := @parameter1: androidx.appcompat.view.menu.MenuItemImpl;

        return 0;
    }

    public boolean flagActionItems()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        return 0;
    }

    public androidx.appcompat.view.menu.MenuItemImpl getCheckedItem()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r2;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        $r1 = virtualinvoke $r2.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getCheckedItem()>();

        return $r1;
    }

    public int getHeaderCount()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;
        android.widget.LinearLayout $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getChildCount()>();

        return $i0;
    }

    public android.view.View getHeaderView(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.widget.LinearLayout $r1;
        int $i0;
        android.view.View $r2;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        return $r2;
    }

    public int getId()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int id>;

        return i0;
    }

    public android.graphics.drawable.Drawable getItemBackground()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.graphics.drawable.Drawable itemBackground>;

        return r1;
    }

    public int getItemHorizontalPadding()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemHorizontalPadding>;

        return i0;
    }

    public int getItemIconPadding()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemIconPadding>;

        return i0;
    }

    public int getItemMaxLines()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemMaxLines>;

        return i0;
    }

    public android.content.res.ColorStateList getItemTextColor()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.content.res.ColorStateList r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.content.res.ColorStateList textColor>;

        return r1;
    }

    public android.content.res.ColorStateList getItemTintList()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.content.res.ColorStateList r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.content.res.ColorStateList iconTintList>;

        return r1;
    }

    public b.b.e.a.o getMenuView(android.view.ViewGroup)
    {
        android.widget.LinearLayout $r6;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r5, $r8;
        com.google.android.material.internal.NavigationMenuView $r2;
        android.view.LayoutInflater $r3;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate $r7;
        android.view.ViewGroup $r1;
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0, $i1;
        android.view.View $r4;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        if $r2 != null goto label3;

        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.view.LayoutInflater layoutInflater>;

        $i0 = <com.google.android.material.R$layout: int design_navigation_menu>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r1, 0);

        $r2 = (com.google.android.material.internal.NavigationMenuView) $r4;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView> = $r2;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $r7 = new com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate;

        specialinvoke $r7.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate: void <init>(com.google.android.material.internal.NavigationMenuPresenter,androidx.recyclerview.widget.RecyclerView)>(r0, $r2);

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(b.s.a.K)>($r7);

        $r5 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        if $r5 != null goto label1;

        $r8 = new com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter;

        specialinvoke $r8.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void <init>(com.google.android.material.internal.NavigationMenuPresenter)>(r0);

        r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter> = $r8;

     label1:
        $i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int overScrollMode>;

        $i1 = -1;

        if $i0 == $i1 goto label2;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        virtualinvoke $r2.<android.view.ViewGroup: void setOverScrollMode(int)>($i0);

     label2:
        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.view.LayoutInflater layoutInflater>;

        $i0 = <com.google.android.material.R$layout: int design_navigation_item_header>;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r2, 0);

        $r6 = (android.widget.LinearLayout) $r4;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout> = $r6;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $r5 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$a)>($r5);

     label3:
        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        return $r2;
    }

    public android.view.View inflateHeaderView(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.widget.LinearLayout $r2;
        android.view.LayoutInflater $r1;
        int $i0;
        android.view.View $r3;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.view.LayoutInflater layoutInflater>;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        $r3 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r2, 0);

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void addHeaderView(android.view.View)>($r3);

        return $r3;
    }

    public void initForMenu(android.content.Context, androidx.appcompat.view.menu.MenuBuilder)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.content.Context $r1;
        android.view.LayoutInflater $r3;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        int $i0;
        android.content.res.Resources $r4;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: androidx.appcompat.view.menu.MenuBuilder;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        r0.<com.google.android.material.internal.NavigationMenuPresenter: android.view.LayoutInflater layoutInflater> = $r3;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: androidx.appcompat.view.menu.MenuBuilder menu> = $r2;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int design_navigation_separator_vertical_padding>;

        $i0 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i0);

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int paddingSeparator> = $i0;

        return;
    }

    public boolean isBehindStatusBar()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        boolean z0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        z0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean isBehindStatusBar>;

        return z0;
    }

    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder, boolean)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        b.b.e.a.n$a $r2;
        androidx.appcompat.view.menu.MenuBuilder $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: b.b.e.a.n$a callback>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<b.b.e.a.n$a: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)>($r1, $z0);

     label1:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.LinearLayout $r7;
        android.os.Parcelable $r1;
        android.os.Bundle $r2, $r5;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r6;
        com.google.android.material.internal.NavigationMenuView $r4;
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.util.SparseArray $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.os.Bundle;

        if $z0 == 0 goto label3;

        $r2 = (android.os.Bundle) $r1;

        $r3 = virtualinvoke $r2.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:menu:list");

        if $r3 == null goto label1;

        $r4 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        virtualinvoke $r4.<android.view.ViewGroup: void restoreHierarchyState(android.util.SparseArray)>($r3);

     label1:
        $r5 = virtualinvoke $r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:menu:adapter");

        if $r5 == null goto label2;

        $r6 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        virtualinvoke $r6.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void restoreInstanceState(android.os.Bundle)>($r5);

     label2:
        $r3 = virtualinvoke $r2.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:menu:header");

        if $r3 == null goto label3;

        $r7 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        virtualinvoke $r7.<android.widget.LinearLayout: void restoreHierarchyState(android.util.SparseArray)>($r3);

     label3:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.util.SparseArray $r4;
        android.widget.LinearLayout $r6;
        android.os.Bundle $r1, $r2;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r5;
        com.google.android.material.internal.NavigationMenuView $r3;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        if $r3 == null goto label1;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        virtualinvoke $r3.<android.view.ViewGroup: void saveHierarchyState(android.util.SparseArray)>($r4);

        virtualinvoke $r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:menu:list", $r4);

     label1:
        $r5 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        if $r5 == null goto label2;

        $r2 = virtualinvoke $r5.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: android.os.Bundle createInstanceState()>();

        virtualinvoke $r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:menu:adapter", $r2);

     label2:
        $r6 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        if $r6 == null goto label3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r6 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void saveHierarchyState(android.util.SparseArray)>($r4);

        virtualinvoke $r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:menu:header", $r4);

     label3:
        return $r1;
    }

    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        androidx.appcompat.view.menu.SubMenuBuilder $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: androidx.appcompat.view.menu.SubMenuBuilder;

        return 0;
    }

    public void removeHeaderView(android.view.View)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.widget.LinearLayout $r2;
        com.google.android.material.internal.NavigationMenuView $r3;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void removeView(android.view.View)>($r1);

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: android.widget.LinearLayout headerLayout>;

        $i0 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 != 0 goto label1;

        $r3 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        $i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int paddingTopDefault>;

        $i1 = virtualinvoke $r3.<android.view.ViewGroup: int getPaddingBottom()>();

        virtualinvoke $r3.<android.view.ViewGroup: void setPadding(int,int,int,int)>(0, $i0, 0, $i1);

     label1:
        return;
    }

    public void setBehindStatusBar(boolean)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean isBehindStatusBar>;

        if $z1 == $z0 goto label1;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean isBehindStatusBar> = $z0;

        specialinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateTopPadding()>();

     label1:
        return;
    }

    public void setCallback(b.b.e.a.n$a)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        b.b.e.a.n$a $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: b.b.e.a.n$a;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: b.b.e.a.n$a callback> = $r1;

        return;
    }

    public void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r2;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuItemImpl;

        $r2 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        virtualinvoke $r2.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl)>($r1);

        return;
    }

    public void setId(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int id> = $i0;

        return;
    }

    public void setItemBackground(android.graphics.drawable.Drawable)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: android.graphics.drawable.Drawable itemBackground> = $r1;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setItemHorizontalPadding(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemHorizontalPadding> = $i0;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setItemIconPadding(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemIconPadding> = $i0;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setItemIconSize(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i1 := @parameter0: int;

        $i0 = r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemIconSize>;

        if $i0 == $i1 goto label1;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemIconSize> = $i1;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean hasCustomItemIconSize> = 1;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

     label1:
        return;
    }

    public void setItemIconTintList(android.content.res.ColorStateList)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: android.content.res.ColorStateList iconTintList> = $r1;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setItemMaxLines(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int itemMaxLines> = $i0;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setItemTextAppearance(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int textAppearance> = $i0;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: boolean textAppearanceSet> = 1;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setItemTextColor(android.content.res.ColorStateList)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: android.content.res.ColorStateList textColor> = $r1;

        virtualinvoke r0.<com.google.android.material.internal.NavigationMenuPresenter: void updateMenuView(boolean)>(0);

        return;
    }

    public void setOverScrollMode(int)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        int $i0;
        com.google.android.material.internal.NavigationMenuView $r1;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.NavigationMenuPresenter: int overScrollMode> = $i0;

        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuView menuView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.ViewGroup: void setOverScrollMode(int)>($i0);

     label1:
        return;
    }

    public void setUpdateSuspended(boolean)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void setUpdateSuspended(boolean)>($z0);

     label1:
        return;
    }

    public void updateMenuView(boolean)
    {
        com.google.android.material.internal.NavigationMenuPresenter r0;
        com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.NavigationMenuPresenter;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.internal.NavigationMenuPresenter: com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void update()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.internal.NavigationMenuPresenter: java.lang.String STATE_HIERARCHY> = "android:menu:list";

        <com.google.android.material.internal.NavigationMenuPresenter: java.lang.String STATE_HEADER> = "android:menu:header";

        <com.google.android.material.internal.NavigationMenuPresenter: java.lang.String STATE_ADAPTER> = "android:menu:adapter";

        return;
    }
}
