public class com.google.common.reflect.Invokable$ConstructorInvokable extends com.google.common.reflect.Invokable
{
    public final java.lang.reflect.Constructor constructor;

    public void <init>(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor $r1;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        specialinvoke r0.<com.google.common.reflect.Invokable: void <init>(java.lang.reflect.AccessibleObject)>($r1);

        r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor> = $r1;

        return;
    }

    private boolean mayNeedHiddenThis()
    {
        com.google.common.reflect.Invokable$ConstructorInvokable r0;
        int $i0;
        java.lang.Class $r2, $r4;
        java.lang.reflect.Constructor $r1;
        java.lang.reflect.Method $r3;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>();

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        $z0 = $z0 ^ 1;

        return $z0;

     label2:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r4 == null goto label3;

        $i0 = virtualinvoke $r2.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.reflect.Type[] getGenericExceptionTypes()
    {
        java.lang.reflect.Type[] $r1;
        java.lang.reflect.Constructor $r2;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();

        return $r1;
    }

    public java.lang.reflect.Type[] getGenericParameterTypes()
    {
        java.lang.Object[] $r6;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r1;
        int $i0, $i1;
        java.lang.reflect.Type[] $r2;
        java.lang.Class $r4, $r5;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $z0 = specialinvoke r0.<com.google.common.reflect.Invokable$ConstructorInvokable: boolean mayNeedHiddenThis()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r2;

        $i0 = lengthof $r3;

        if $i1 != $i0 goto label1;

        $r4 = $r3[0];

        $r5 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Class getDeclaringClass()>();

        $r5 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r4 != $r5 goto label1;

        $i0 = lengthof $r2;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r2, 1, $i0);

        $r2 = (java.lang.reflect.Type[]) $r6;

     label1:
        return $r2;
    }

    public java.lang.reflect.Type getGenericReturnType()
    {
        java.lang.reflect.ParameterizedType $r3;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;
        java.lang.reflect.TypeVariable[] $r2;
        int $i0;
        java.lang.Class $r1;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Class getDeclaringClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r3 = staticinvoke <com.google.common.reflect.Types: java.lang.reflect.ParameterizedType newParameterizedType(java.lang.Class,java.lang.reflect.Type[])>($r1, $r2);

        return $r3;

     label1:
        return $r1;
    }

    public final java.lang.'annotation'.Annotation[][] getParameterAnnotations()
    {
        java.lang.'annotation'.Annotation[][] $r1;
        java.lang.reflect.Constructor $r2;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r2 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        return $r1;
    }

    public final java.lang.reflect.TypeVariable[] getTypeParameters()
    {
        com.google.common.reflect.Invokable$ConstructorInvokable r0;
        java.lang.reflect.Constructor $r3;
        java.lang.reflect.TypeVariable[] $r2, $r4, $r5;
        int $i0, $i1;
        java.lang.Class $r1;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Class getDeclaringClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r3 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i0 = lengthof $r2;

        $i1 = lengthof $r4;

        $i0 = $i0 + $i1;

        $r5 = newarray (java.lang.reflect.TypeVariable)[$i0];

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r5, 0, $i0);

        $i0 = lengthof $r2;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, $i0, $i1);

        return $r5;
    }

    public final java.lang.Object invokeInternal(java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r2;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;
        java.lang.RuntimeException $r5;
        java.lang.reflect.Constructor $r3;
        java.lang.InstantiationException $r4;
        java.lang.Object $r1;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

     label1:
        $r1 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r4);

        throw $r5;

        catch java.lang.InstantiationException from label1 to label2 with label3;
    }

    public final boolean isOverridable()
    {
        com.google.common.reflect.Invokable$ConstructorInvokable r0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        return 0;
    }

    public final boolean isVarArgs()
    {
        java.lang.reflect.Constructor $r1;
        com.google.common.reflect.Invokable$ConstructorInvokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable$ConstructorInvokable;

        $r1 = r0.<com.google.common.reflect.Invokable$ConstructorInvokable: java.lang.reflect.Constructor constructor>;

        $z0 = virtualinvoke $r1.<java.lang.reflect.Constructor: boolean isVarArgs()>();

        return $z0;
    }
}
