public class com.google.android.material.floatingactionbutton.FloatingActionButtonImpl extends java.lang.Object
{
    public static final int ANIM_STATE_HIDING;
    public static final int ANIM_STATE_NONE;
    public static final int ANIM_STATE_SHOWING;
    public static final long ELEVATION_ANIM_DELAY;
    public static final long ELEVATION_ANIM_DURATION;
    public static final android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR;
    public static final int[] EMPTY_STATE_SET;
    public static final int[] ENABLED_STATE_SET;
    public static final int[] FOCUSED_ENABLED_STATE_SET;
    public static final float HIDE_ICON_SCALE;
    public static final float HIDE_OPACITY;
    public static final float HIDE_SCALE;
    public static final int[] HOVERED_ENABLED_STATE_SET;
    public static final int[] HOVERED_FOCUSED_ENABLED_STATE_SET;
    public static final int[] PRESSED_ENABLED_STATE_SET;
    public static final float SHADOW_MULTIPLIER;
    public static final float SHOW_ICON_SCALE;
    public static final float SHOW_OPACITY;
    public static final float SHOW_SCALE;
    public int animState;
    public com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable;
    public android.graphics.drawable.Drawable contentBackground;
    public android.animation.Animator currentAnimator;
    public com.google.android.material.animation.MotionSpec defaultHideMotionSpec;
    public com.google.android.material.animation.MotionSpec defaultShowMotionSpec;
    public float elevation;
    public boolean ensureMinTouchTargetSize;
    public java.util.ArrayList hideListeners;
    public com.google.android.material.animation.MotionSpec hideMotionSpec;
    public float hoveredFocusedTranslationZ;
    public float imageMatrixScale;
    public int maxImageSize;
    public int minTouchTargetSize;
    public android.view.ViewTreeObserver$OnPreDrawListener preDrawListener;
    public float pressedTranslationZ;
    public android.graphics.drawable.Drawable rippleDrawable;
    public float rotation;
    public boolean shadowPaddingEnabled;
    public final com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearance;
    public com.google.android.material.shape.MaterialShapeDrawable shapeDrawable;
    public java.util.ArrayList showListeners;
    public com.google.android.material.animation.MotionSpec showMotionSpec;
    public final com.google.android.material.internal.StateListAnimator stateListAnimator;
    public final android.graphics.Matrix tmpMatrix;
    public final android.graphics.Rect tmpRect;
    public final android.graphics.RectF tmpRectF1;
    public final android.graphics.RectF tmpRectF2;
    public java.util.ArrayList transformationCallbacks;
    public final com.google.android.material.floatingactionbutton.FloatingActionButton view;

    static void <clinit>()
    {
        android.animation.TimeInterpolator $r0;
        int[] $r1;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float SHOW_SCALE> = 1.0F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float SHOW_OPACITY> = 1.0F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float SHOW_ICON_SCALE> = 1.0F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float SHADOW_MULTIPLIER> = 1.5F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float HIDE_SCALE> = 0.0F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float HIDE_OPACITY> = 0.0F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float HIDE_ICON_SCALE> = 0.0F;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: long ELEVATION_ANIM_DURATION> = 100L;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: long ELEVATION_ANIM_DELAY> = 100L;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int ANIM_STATE_SHOWING> = 2;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int ANIM_STATE_NONE> = 0;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int ANIM_STATE_HIDING> = 1;

        $r0 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 16842919;

        $r1[1] = 16842910;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[3];

        $r1[0] = 16843623;

        $r1[1] = 16842908;

        $r1[2] = 16842910;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] HOVERED_FOCUSED_ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842908;

        $r1[1] = 16842910;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16843623;

        $r1[1] = 16842910;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] HOVERED_ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 16842910;

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[0];

        <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] EMPTY_STATE_SET> = $r1;

        return;
    }

    public void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton, com.google.android.material.shadow.ShadowViewDelegate)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.RectF $r4;
        android.graphics.Rect $r3;
        com.google.android.material.shadow.ShadowViewDelegate $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation $r12;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation $r10;
        com.google.android.material.internal.StateListAnimator $r6;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation $r8;
        int[] $r7;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation $r11;
        float $f0;
        android.graphics.Matrix $r5;
        android.animation.ValueAnimator $r9;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButton;

        $r2 := @parameter1: com.google.android.material.shadow.ShadowViewDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shadowPaddingEnabled> = 1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float imageMatrixScale> = 1.0F;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Rect tmpRect> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.RectF tmpRectF1> = $r4;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.RectF tmpRectF2> = $r4;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix> = $r5;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view> = $r1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate> = $r2;

        $r6 = new com.google.android.material.internal.StateListAnimator;

        specialinvoke $r6.<com.google.android.material.internal.StateListAnimator: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator> = $r6;

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        $r7 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET>;

        $r8 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation;

        specialinvoke $r8.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r9 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r8);

        virtualinvoke $r6.<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r7, $r9);

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        $r7 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] HOVERED_FOCUSED_ENABLED_STATE_SET>;

        $r10 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        specialinvoke $r10.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r9 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r10);

        virtualinvoke $r6.<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r7, $r9);

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        $r7 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET>;

        $r10 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        specialinvoke $r10.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r9 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r10);

        virtualinvoke $r6.<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r7, $r9);

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        $r7 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] HOVERED_ENABLED_STATE_SET>;

        $r10 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation;

        specialinvoke $r10.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r9 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r10);

        virtualinvoke $r6.<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r7, $r9);

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        $r7 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] ENABLED_STATE_SET>;

        $r11 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation;

        specialinvoke $r11.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r9 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r11);

        virtualinvoke $r6.<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r7, $r9);

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        $r7 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int[] EMPTY_STATE_SET>;

        $r12 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation;

        specialinvoke $r12.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r9 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r12);

        virtualinvoke $r6.<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r7, $r9);

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $f0 = virtualinvoke $r1.<android.widget.ImageButton: float getRotation()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float rotation> = $f0;

        return;
    }

    public static int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl, int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r0;
        int $i0;

        $r0 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $i0 := @parameter1: int;

        $r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState> = $i0;

        return $i0;
    }

    public static android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl, android.animation.Animator)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r0;
        android.animation.Animator $r1;

        $r0 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter1: android.animation.Animator;

        $r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.Animator currentAnimator> = $r1;

        return $r1;
    }

    public static float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl, float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl $r0;
        float $f0;

        $r0 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter1: float;

        $r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float imageMatrixScale> = $f0;

        return $f0;
    }

    private void calculateImageMatrixFromScale(float, android.graphics.Matrix)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.RectF $r4, $r5;
        android.graphics.drawable.Drawable $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r2;
        android.graphics.Matrix$ScaleToFit $r6;
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Matrix $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $r1 := @parameter1: android.graphics.Matrix;

        virtualinvoke $r1.<android.graphics.Matrix: void reset()>();

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        if $r3 == null goto label1;

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int maxImageSize>;

        if $i0 == 0 goto label1;

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.RectF tmpRectF1>;

        $r5 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.RectF tmpRectF2>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f2 = (float) $i0;

        virtualinvoke $r4.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f2);

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int maxImageSize>;

        $f1 = (float) $i0;

        $f2 = (float) $i0;

        virtualinvoke $r5.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f2);

        $r6 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke $r1.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r4, $r5, $r6);

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int maxImageSize>;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $f2 = (float) $i0;

        $f2 = $f2 / 2.0F;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f0, $f0, $f1, $f2);

     label1:
        return;
    }

    private android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec, float, float, float)
    {
        android.graphics.Matrix[] $r11;
        com.google.android.material.animation.MotionSpec $r2;
        float[] $r5;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 $r10;
        java.util.ArrayList $r1;
        android.util.Property $r4;
        com.google.android.material.animation.ImageMatrixProperty $r9;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r3;
        android.animation.AnimatorSet $r13;
        com.google.android.material.animation.MotionTiming $r7;
        android.graphics.Matrix $r8, $r12;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.ObjectAnimator $r6;
        float $f0, $f1, $f2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 := @parameter0: com.google.android.material.animation.MotionSpec;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r4 = <android.view.View: android.util.Property ALPHA>;

        $r5 = newarray (float)[1];

        $r5[0] = $f0;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r3, $r4, $r5);

        $r7 = virtualinvoke $r2.<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionTiming getTiming(java.lang.String)>("opacity");

        virtualinvoke $r7.<com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r4 = <android.view.View: android.util.Property SCALE_X>;

        $r5 = newarray (float)[1];

        $r5[0] = $f1;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r3, $r4, $r5);

        $r7 = virtualinvoke $r2.<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionTiming getTiming(java.lang.String)>("scale");

        virtualinvoke $r7.<com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)>($r6);

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void workAroundOreoBug(android.animation.ObjectAnimator)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r4 = <android.view.View: android.util.Property SCALE_Y>;

        $r5 = newarray (float)[1];

        $r5[0] = $f1;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r3, $r4, $r5);

        $r7 = virtualinvoke $r2.<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionTiming getTiming(java.lang.String)>("scale");

        virtualinvoke $r7.<com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)>($r6);

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void workAroundOreoBug(android.animation.ObjectAnimator)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r8 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void calculateImageMatrixFromScale(float,android.graphics.Matrix)>($f2, $r8);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r9 = new com.google.android.material.animation.ImageMatrixProperty;

        specialinvoke $r9.<com.google.android.material.animation.ImageMatrixProperty: void <init>()>();

        $r10 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3;

        specialinvoke $r10.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        $r11 = newarray (android.graphics.Matrix)[1];

        $r8 = new android.graphics.Matrix;

        $r12 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>;

        specialinvoke $r8.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r12);

        $r11[0] = $r8;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r3, $r9, $r10, $r11);

        $r7 = virtualinvoke $r2.<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionTiming getTiming(java.lang.String)>("iconScale");

        virtualinvoke $r7.<com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r13 = new android.animation.AnimatorSet;

        specialinvoke $r13.<android.animation.AnimatorSet: void <init>()>();

        staticinvoke <com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>($r13, $r1);

        return $r13;
    }

    private android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.TimeInterpolator $r3;
        float[] $r4;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl $r2;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl;

        $r1 = new android.animation.ValueAnimator;

        specialinvoke $r1.<android.animation.ValueAnimator: void <init>()>();

        $r3 = <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r3);

        virtualinvoke $r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(100L);

        virtualinvoke $r1.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r2);

        virtualinvoke $r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r2);

        $r4 = newarray (float)[2];

        $r4[0] = 0.0F;

        $r4[1] = 1.0F;

        virtualinvoke $r1.<android.animation.ValueAnimator: void setFloatValues(float[])>($r4);

        return $r1;
    }

    private com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.content.Context $r3;
        com.google.android.material.animation.MotionSpec $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r2;
        int $i0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultHideMotionSpec>;

        if $r1 != null goto label1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$animator: int design_fab_hide_motion_spec>;

        $r1 = staticinvoke <com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int)>($r3, $i0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultHideMotionSpec> = $r1;

     label1:
        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultHideMotionSpec>;

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r1);

        return $r1;
    }

    private com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.content.Context $r3;
        com.google.android.material.animation.MotionSpec $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r2;
        int $i0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultShowMotionSpec>;

        if $r1 != null goto label1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.content.Context getContext()>();

        $i0 = <com.google.android.material.R$animator: int design_fab_show_motion_spec>;

        $r1 = staticinvoke <com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int)>($r3, $i0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultShowMotionSpec> = $r1;

     label1:
        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec defaultShowMotionSpec>;

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r1);

        return $r1;
    }

    private android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        if $r1 != null goto label1;

        $r2 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5;

        specialinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener> = $r2;

     label1:
        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        return $r1;
    }

    private boolean shouldAnimateVisibilityChange()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $z0 = staticinvoke <b.i.i.y: boolean E(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $z0 = virtualinvoke $r1.<android.widget.ImageButton: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void workAroundOreoBug(android.animation.ObjectAnimator)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.ObjectAnimator $r1;
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.animation.ObjectAnimator;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 26 goto label1;

        return;

     label1:
        $r2 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4;

        specialinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>(r0);

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setEvaluator(android.animation.TypeEvaluator)>($r2);

        return;
    }

    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.Animator$AnimatorListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList hideListeners>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList hideListeners> = $r2;

     label1:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList hideListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.Animator$AnimatorListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList showListeners>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList showListeners> = $r2;

     label1:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList showListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks> = $r2;

     label1:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel shapeAppearance>;

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r2);

        $r1 = new com.google.android.material.shape.MaterialShapeDrawable;

        specialinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r2);

        return $r1;
    }

    public final android.graphics.drawable.Drawable getContentBackground()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>;

        return r1;
    }

    public float getElevation()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        float f0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation>;

        return f0;
    }

    public boolean getEnsureMinTouchTargetSize()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        boolean z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        z0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean ensureMinTouchTargetSize>;

        return z0;
    }

    public final com.google.android.material.animation.MotionSpec getHideMotionSpec()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.animation.MotionSpec r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec hideMotionSpec>;

        return r1;
    }

    public float getHoveredFocusedTranslationZ()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        float f0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        return f0;
    }

    public void getPadding(android.graphics.Rect)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.Rect $r1;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r2;
        int $i0, $i1, $i2;
        float $f0, $f1;
        boolean $z0;
        double $d0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean ensureMinTouchTargetSize>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int minTouchTargetSize>;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i1 = virtualinvoke $r2.<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 / 2;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $z0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shadowPaddingEnabled>;

        if $z0 == 0 goto label3;

        $f0 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getElevation()>();

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ>;

        $f0 = $f0 + $f1;

        goto label4;

     label3:
        $f0 = 0.0F;

     label4:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $f0 = $f0 * 1.5F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d0;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i0, $i1, $i0);

        return;
    }

    public float getPressedTranslationZ()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        float f0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ>;

        return f0;
    }

    public final com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.shape.ShapeAppearanceModel r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel shapeAppearance>;

        return r1;
    }

    public final com.google.android.material.animation.MotionSpec getShowMotionSpec()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.animation.MotionSpec r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec showMotionSpec>;

        return r1;
    }

    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        java.util.Iterator $r7;
        com.google.android.material.animation.MotionSpec $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 $r5;
        android.animation.Animator $r2;
        java.util.ArrayList $r6;
        byte $b0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r10;
        android.animation.AnimatorSet $r4;
        android.animation.Animator$AnimatorListener $r9;
        java.lang.Object $r8;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeHidden()>();

        if $z1 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.Animator currentAnimator>;

        if $r2 == null goto label02;

        virtualinvoke $r2.<android.animation.Animator: void cancel()>();

     label02:
        $z1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>();

        if $z1 == 0 goto label07;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec hideMotionSpec>;

        if $r3 == null goto label03;

        goto label04;

     label03:
        $r3 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()>();

     label04:
        $r4 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)>($r3, 0.0F, 0.0F, 0.0F);

        $r5 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1;

        specialinvoke $r5.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener)>(r0, $z0, $r1);

        virtualinvoke $r4.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r5);

        $r6 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList hideListeners>;

        if $r6 == null goto label06;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.animation.Animator$AnimatorListener) $r8;

        virtualinvoke $r4.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r9);

        goto label05;

     label06:
        virtualinvoke $r4.<android.animation.AnimatorSet: void start()>();

        return;

     label07:
        $r10 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        if $z0 == 0 goto label08;

        $b0 = 8;

        goto label09;

     label08:
        $b0 = 4;

     label09:
        virtualinvoke $r10.<com.google.android.material.internal.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>($b0, $z0);

        if $r1 == null goto label10;

        interfaceinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onHidden()>();

     label10:
        return;
    }

    public void initializeBackgroundDrawable(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, android.content.res.ColorStateList, int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.content.Context $r6;
        android.graphics.drawable.LayerDrawable $r11;
        com.google.android.material.shape.ShapeAppearanceModel $r8;
        android.graphics.drawable.Drawable $r10;
        android.graphics.PorterDuff$Mode $r2;
        com.google.android.material.shape.MaterialShapeDrawable $r4;
        com.google.android.material.ripple.RippleDrawableCompat $r7;
        android.content.res.ColorStateList $r1, $r3;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r5;
        int $i0;
        android.graphics.drawable.Drawable[] $r9;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 := @parameter1: android.graphics.PorterDuff$Mode;

        $r3 := @parameter2: android.content.res.ColorStateList;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()>();

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable> = $r4;

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void setTintList(android.content.res.ColorStateList)>($r1);

        if $r2 == null goto label1;

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r2);

     label1:
        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowColor(int)>(-12303292);

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        $r5 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r6 = virtualinvoke $r5.<android.widget.ImageButton: android.content.Context getContext()>();

        virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r6);

        $r7 = new com.google.android.material.ripple.RippleDrawableCompat;

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        $r8 = virtualinvoke $r4.<com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>();

        specialinvoke $r7.<com.google.android.material.ripple.RippleDrawableCompat: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r8);

        $r1 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>($r3);

        virtualinvoke $r7.<com.google.android.material.ripple.RippleDrawableCompat: void setTintList(android.content.res.ColorStateList)>($r1);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable> = $r7;

        $r9 = newarray (android.graphics.drawable.Drawable)[2];

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object)>($r4);

        $r10 = (android.graphics.drawable.Drawable) $r4;

        $r9[0] = $r10;

        $r9[1] = $r7;

        $r11 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r11.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r9);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground> = $r11;

        return;
    }

    public boolean isOrWillBeHidden()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getVisibility()>();

        if $i0 != 0 goto label1;

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState>;

        if $i0 != 1 goto label2;

        return 1;

     label1:
        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState>;

        if $i0 == 2 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isOrWillBeShown()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        int $i0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getVisibility()>();

        if $i0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState>;

        if $i0 != 2 goto label2;

        return 1;

     label1:
        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int animState>;

        if $i0 == 1 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void jumpDrawableToCurrentState()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.internal.StateListAnimator $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        virtualinvoke $r1.<com.google.android.material.internal.StateListAnimator: void jumpToCurrentState()>();

        return;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r2;
        android.view.ViewTreeObserver$OnPreDrawListener $r4;
        android.view.ViewTreeObserver $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>($r2, $r1);

     label1:
        $z0 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean requirePreDrawListener()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r4 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()>();

        virtualinvoke $r3.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r4);

     label2:
        return;
    }

    public void onCompatShadowChanged()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        return;
    }

    public void onDetachedFromWindow()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r3;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        android.view.ViewTreeObserver $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $r2 = virtualinvoke $r3.<android.widget.ImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener>;

        if $r1 == null goto label1;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener preDrawListener> = null;

     label1:
        return;
    }

    public void onDrawableStateChanged(int[])
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.internal.StateListAnimator $r2;
        int[] $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: int[];

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.internal.StateListAnimator stateListAnimator>;

        virtualinvoke $r2.<com.google.android.material.internal.StateListAnimator: void setState(int[])>($r1);

        return;
    }

    public void onElevationsChanged(float, float, float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        float $f0, $f1, $f2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updatePadding()>();

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateShapeElevation(float)>($f0);

        return;
    }

    public void onPaddingUpdated(android.graphics.Rect)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.Rect $r2;
        android.graphics.drawable.InsetDrawable $r3;
        com.google.android.material.shadow.ShadowViewDelegate $r4;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 := @parameter0: android.graphics.Rect;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>;

        staticinvoke <b.i.h.h: java.lang.Object a(java.lang.Object,java.lang.Object)>($r1, "Didn\'t initialize content background");

        $z0 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAddPadding()>();

        if $z0 == 0 goto label1;

        $r3 = new android.graphics.drawable.InsetDrawable;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        specialinvoke $r3.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate>;

        interfaceinvoke $r4.<com.google.android.material.shadow.ShadowViewDelegate: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r3);

        return;

     label1:
        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate>;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable contentBackground>;

        interfaceinvoke $r4.<com.google.android.material.shadow.ShadowViewDelegate: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void onPreDraw()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        byte $b0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;
        float $f0, $f1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $f0 = virtualinvoke $r1.<android.widget.ImageButton: float getRotation()>();

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float rotation>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float rotation> = $f0;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateFromViewRotation()>();

     label1:
        return;
    }

    public void onScaleChanged()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        java.util.Iterator $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback $r4;
        java.lang.Object $r3;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks>;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) $r3;

        interfaceinvoke $r4.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback: void onScaleChanged()>();

        goto label1;

     label2:
        return;
    }

    public void onTranslationChanged()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        java.util.Iterator $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback $r4;
        java.lang.Object $r3;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks>;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) $r3;

        interfaceinvoke $r4.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback: void onTranslationChanged()>();

        goto label1;

     label2:
        return;
    }

    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.Animator$AnimatorListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList hideListeners>;

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.animation.Animator$AnimatorListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.animation.Animator$AnimatorListener;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList showListeners>;

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList transformationCallbacks>;

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public boolean requirePreDrawListener()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        return 1;
    }

    public void setBackgroundTintList(android.content.res.ColorStateList)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList $r1;
        com.google.android.material.floatingactionbutton.BorderDrawable $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setTintList(android.content.res.ColorStateList)>($r1);

     label1:
        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.BorderDrawable: void setBorderTint(android.content.res.ColorStateList)>($r1);

     label2:
        return;
    }

    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.PorterDuff$Mode $r1;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1);

     label1:
        return;
    }

    public final void setElevation(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        byte $b0;
        float $f0, $f1, $f2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation> = $f0;

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation>;

        $f2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ>;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>($f1, $f2, $f0);

     label1:
        return;
    }

    public void setEnsureMinTouchTargetSize(boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean ensureMinTouchTargetSize> = $z0;

        return;
    }

    public final void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.animation.MotionSpec $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.animation.MotionSpec;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec hideMotionSpec> = $r1;

        return;
    }

    public final void setHoveredFocusedTranslationZ(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        byte $b0;
        float $f0, $f1, $f2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ> = $f0;

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation>;

        $f2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ>;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>($f1, $f2, $f0);

     label1:
        return;
    }

    public final void setImageMatrixScale(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r2;
        float $f0;
        android.graphics.Matrix $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float imageMatrixScale> = $f0;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Matrix tmpMatrix>;

        specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void calculateImageMatrixFromScale(float,android.graphics.Matrix)>($f0, $r1);

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageMatrix(android.graphics.Matrix)>($r1);

        return;
    }

    public final void setMaxImageSize(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int maxImageSize>;

        if $i1 == $i0 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int maxImageSize> = $i0;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateImageMatrixScale()>();

     label1:
        return;
    }

    public void setMinTouchTargetSize(int)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        int $i0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int minTouchTargetSize> = $i0;

        return;
    }

    public final void setPressedTranslationZ(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        byte $b0;
        float $f0, $f1, $f2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ> = $f0;

        $f1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float elevation>;

        $f2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float hoveredFocusedTranslationZ>;

        $f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float pressedTranslationZ>;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>($f1, $f2, $f0);

     label1:
        return;
    }

    public void setRippleColor(android.content.res.ColorStateList)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 := @parameter0: android.content.res.ColorStateList;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        if $r1 == null goto label1;

        $r2 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>($r2);

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r2);

     label1:
        return;
    }

    public void setShadowPaddingEnabled(boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shadowPaddingEnabled> = $z0;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updatePadding()>();

        return;
    }

    public final void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.shape.Shapeable $r4;
        com.google.android.material.floatingactionbutton.BorderDrawable $r5;
        com.google.android.material.shape.ShapeAppearanceModel $r1;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel shapeAppearance> = $r1;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label1:
        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable rippleDrawable>;

        $z0 = $r3 instanceof com.google.android.material.shape.Shapeable;

        if $z0 == 0 goto label2;

        $r4 = (com.google.android.material.shape.Shapeable) $r3;

        interfaceinvoke $r4.<com.google.android.material.shape.Shapeable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label2:
        $r5 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable>;

        if $r5 == null goto label3;

        virtualinvoke $r5.<com.google.android.material.floatingactionbutton.BorderDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r1);

     label3:
        return;
    }

    public final void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.animation.MotionSpec $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.animation.MotionSpec;

        r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec showMotionSpec> = $r1;

        return;
    }

    public boolean shouldAddPadding()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        return 1;
    }

    public final boolean shouldExpandBoundsForA11y()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $z0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean ensureMinTouchTargetSize>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i1 = virtualinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()>();

        $i0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int minTouchTargetSize>;

        if $i1 < $i0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        java.util.Iterator $r8;
        com.google.android.material.animation.MotionSpec $r4;
        android.animation.Animator $r2;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 $r6;
        java.util.ArrayList $r7;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r3;
        int $i0;
        android.animation.AnimatorSet $r5;
        android.animation.Animator$AnimatorListener $r10;
        java.lang.Object $r9;
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r1 := @parameter0: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeShown()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.Animator currentAnimator>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.animation.Animator: void cancel()>();

     label2:
        $z1 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>();

        if $z1 == 0 goto label8;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i0 = virtualinvoke $r3.<android.widget.ImageButton: int getVisibility()>();

        if $i0 == 0 goto label3;

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<android.widget.ImageButton: void setAlpha(float)>(0.0F);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)>(0.0F);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)>(0.0F);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setImageMatrixScale(float)>(0.0F);

     label3:
        $r4 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec showMotionSpec>;

        if $r4 == null goto label4;

        goto label5;

     label4:
        $r4 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()>();

     label5:
        $r5 = specialinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)>($r4, 1.0F, 1.0F, 1.0F);

        $r6 = new com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2;

        specialinvoke $r6.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener)>(r0, $z0, $r1);

        virtualinvoke $r5.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        $r7 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: java.util.ArrayList showListeners>;

        if $r7 == null goto label7;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.animation.Animator$AnimatorListener) $r9;

        virtualinvoke $r5.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r10);

        goto label6;

     label7:
        virtualinvoke $r5.<android.animation.AnimatorSet: void start()>();

        return;

     label8:
        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<com.google.android.material.internal.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>(0, $z0);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<android.widget.ImageButton: void setAlpha(float)>(1.0F);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)>(1.0F);

        $r3 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r3.<com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)>(1.0F);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setImageMatrixScale(float)>(1.0F);

        if $r1 == null goto label9;

        interfaceinvoke $r1.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onShown()>();

     label9:
        return;
    }

    public void updateFromViewRotation()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        byte $b1;
        com.google.android.material.floatingactionbutton.FloatingActionButton $r1;
        int $i0;
        float $f0;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 19 goto label2;

        $f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float rotation>;

        $f0 = $f0 % 90.0F;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label1;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getLayerType()>();

        if $i0 == 1 goto label2;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r1.<android.widget.ImageButton: void setLayerType(int,android.graphics.Paint)>(1, null);

        goto label2;

     label1:
        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        $i0 = virtualinvoke $r1.<android.widget.ImageButton: int getLayerType()>();

        if $i0 == 0 goto label2;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.floatingactionbutton.FloatingActionButton view>;

        virtualinvoke $r1.<android.widget.ImageButton: void setLayerType(int,android.graphics.Paint)>(0, null);

     label2:
        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        if $r2 == null goto label3;

        $f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float rotation>;

        $i0 = (int) $f0;

        virtualinvoke $r2.<com.google.android.material.shape.MaterialShapeDrawable: void setShadowCompatRotation(int)>($i0);

     label3:
        return;
    }

    public final void updateImageMatrixScale()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        float $f0;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float imageMatrixScale>;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setImageMatrixScale(float)>($f0);

        return;
    }

    public final void updatePadding()
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        android.graphics.Rect $r2;
        com.google.android.material.shadow.ShadowViewDelegate $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $r2 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.Rect tmpRect>;

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void getPadding(android.graphics.Rect)>($r2);

        virtualinvoke r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onPaddingUpdated(android.graphics.Rect)>($r2);

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        interfaceinvoke $r1.<com.google.android.material.shadow.ShadowViewDelegate: void setShadowPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void updateShapeElevation(float)
    {
        com.google.android.material.floatingactionbutton.FloatingActionButtonImpl r0;
        float $f0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;

        r0 := @this: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable shapeDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

     label1:
        return;
    }
}
