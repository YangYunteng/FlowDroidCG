public final class com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound extends com.google.common.collect.AbstractNavigableMap
{
    public final com.google.common.collect.Range complementLowerBoundWindow;
    public final java.util.NavigableMap positiveRangesByLowerBound;
    public final java.util.NavigableMap positiveRangesByUpperBound;

    public void <init>(java.util.NavigableMap)
    {
        com.google.common.collect.Range $r2;
        java.util.NavigableMap $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 := @parameter0: java.util.NavigableMap;

        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        specialinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: void <init>(java.util.NavigableMap,com.google.common.collect.Range)>($r1, $r2);

        return;
    }

    public void <init>(java.util.NavigableMap, com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound $r3;
        java.util.NavigableMap $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 := @parameter0: java.util.NavigableMap;

        $r2 := @parameter1: com.google.common.collect.Range;

        specialinvoke r0.<com.google.common.collect.AbstractNavigableMap: void <init>()>();

        r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByLowerBound> = $r1;

        $r3 = new com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        specialinvoke $r3.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: void <init>(java.util.NavigableMap)>($r1);

        r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByUpperBound> = $r3;

        r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow> = $r2;

        return;
    }

    public static com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound)
    {
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound $r0;

        $r0 := @parameter0: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        r1 = $r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        return r1;
    }

    private java.util.NavigableMap subMap(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r2, $r3;
        java.util.NavigableMap $r1;
        com.google.common.collect.ImmutableSortedMap $r4;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0, $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: com.google.common.collect.Range;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $z0 = virtualinvoke $r3.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r2);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap of()>();

        return $r4;

     label1:
        $r3 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r2 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r3);

        $r5 = new com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByLowerBound>;

        specialinvoke $r5.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: void <init>(java.util.NavigableMap,com.google.common.collect.Range)>($r1, $r2);

        return $r5;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.Ordering $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        return $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.Range $r1;
        java.lang.Object $r2;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range get(java.lang.Object)>($r2);

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator descendingEntryIterator()
    {
        com.google.common.collect.Cut $r3, $r11;
        java.util.Iterator $r8;
        java.util.Collection $r7;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2 $r12;
        com.google.common.collect.Range $r1;
        java.util.NavigableMap $r6;
        com.google.common.collect.PeekingIterator $r9;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        com.google.common.collect.BoundType $r4, $r5;
        java.lang.Comparable $r2;
        java.lang.Object $r10;
        com.google.common.collect.UnmodifiableIterator $r13;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.Range: java.lang.Comparable upperEndpoint()>();

        $r3 = (com.google.common.collect.Cut) $r2;

        goto label2;

     label1:
        $r3 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut aboveAll()>();

     label2:
        $r1 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r4 = virtualinvoke $r1.<com.google.common.collect.Range: com.google.common.collect.BoundType upperBoundType()>();

        $r5 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        if $r4 != $r5 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r6 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByUpperBound>;

        $r6 = interfaceinvoke $r6.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>($r3, $z0);

        $r6 = interfaceinvoke $r6.<java.util.NavigableMap: java.util.NavigableMap descendingMap()>();

        $r7 = interfaceinvoke $r6.<java.util.NavigableMap: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

        $r9 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator)>($r8);

        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<com.google.common.collect.PeekingIterator: java.lang.Object peek()>();

        $r1 = (com.google.common.collect.Range) $r10;

        $r3 = $r1.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r11 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut aboveAll()>();

        if $r3 != $r11 goto label5;

        $r10 = interfaceinvoke $r9.<com.google.common.collect.PeekingIterator: java.lang.Object next()>();

        $r1 = (com.google.common.collect.Range) $r10;

        $r3 = $r1.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        goto label8;

     label5:
        $r6 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByLowerBound>;

        $r10 = interfaceinvoke $r9.<com.google.common.collect.PeekingIterator: java.lang.Object peek()>();

        $r1 = (com.google.common.collect.Range) $r10;

        $r3 = $r1.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r10 = interfaceinvoke $r6.<java.util.NavigableMap: java.lang.Object higherKey(java.lang.Object)>($r3);

        $r3 = (com.google.common.collect.Cut) $r10;

        goto label8;

     label6:
        $r1 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r3 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label9;

        $r6 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByLowerBound>;

        $r3 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        $z0 = interfaceinvoke $r6.<java.util.NavigableMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label7;

        goto label9;

     label7:
        $r6 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByLowerBound>;

        $r3 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        $r10 = interfaceinvoke $r6.<java.util.NavigableMap: java.lang.Object higherKey(java.lang.Object)>($r3);

        $r3 = (com.google.common.collect.Cut) $r10;

     label8:
        $r11 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut aboveAll()>();

        $r10 = staticinvoke <com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r3, $r11);

        $r3 = (com.google.common.collect.Cut) $r10;

        $r12 = new com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2;

        specialinvoke $r12.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2: void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator)>(r0, $r3, $r9);

        return $r12;

     label9:
        $r13 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>();

        return $r13;
    }

    public java.util.Iterator entryIterator()
    {
        com.google.common.collect.Cut $r9, $r11;
        java.util.Iterator $r7;
        java.util.Collection $r6;
        com.google.common.collect.Range $r2;
        java.util.NavigableMap $r3;
        com.google.common.collect.PeekingIterator $r8;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        com.google.common.collect.BoundType $r1, $r5;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1 $r12;
        java.lang.Comparable $r4;
        java.lang.Object $r10;
        com.google.common.collect.UnmodifiableIterator $r13;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean hasLowerBound()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByUpperBound>;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.Range: java.lang.Comparable lowerEndpoint()>();

        $r2 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r5 = virtualinvoke $r2.<com.google.common.collect.Range: com.google.common.collect.BoundType lowerBoundType()>();

        $r1 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        if $r5 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>($r4, $z0);

        $r6 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.Collection values()>();

        goto label4;

     label3:
        $r3 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap positiveRangesByUpperBound>;

        $r6 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.Collection values()>();

     label4:
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

        $r8 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator)>($r7);

        $r2 = r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range complementLowerBoundWindow>;

        $r9 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        $z0 = virtualinvoke $r2.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>($r9);

        if $z0 == 0 goto label6;

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r8.<com.google.common.collect.PeekingIterator: java.lang.Object peek()>();

        $r2 = (com.google.common.collect.Range) $r10;

        $r9 = $r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r11 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        if $r9 == $r11 goto label6;

     label5:
        $r9 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowAll()>();

        goto label7;

     label6:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r10 = interfaceinvoke $r8.<com.google.common.collect.PeekingIterator: java.lang.Object next()>();

        $r2 = (com.google.common.collect.Range) $r10;

        $r9 = $r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

     label7:
        $r12 = new com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1;

        specialinvoke $r12.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1: void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator)>(r0, $r9, $r8);

        return $r12;

     label8:
        $r13 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>();

        return $r13;
    }

    public com.google.common.collect.Range get(java.lang.Object)
    {
        com.google.common.collect.Cut $r3, $r6;
        java.util.Map$Entry $r5;
        com.google.common.collect.Range $r7;
        java.util.NavigableMap $r4;
        java.lang.ClassCastException $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof com.google.common.collect.Cut;

        if $z0 == 0 goto label7;

     label1:
        $r3 = (com.google.common.collect.Cut) $r2;

        $r4 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean)>($r3, 1);

        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.util.Map$Entry firstEntry()>();

     label2:
        if $r5 == null goto label9;

     label3:
        $r2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (com.google.common.collect.Cut) $r2;

        $z0 = virtualinvoke $r6.<com.google.common.collect.Cut: boolean equals(java.lang.Object)>($r3);

     label4:
        if $z0 == 0 goto label9;

     label5:
        $r2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.google.common.collect.Range) $r2;

     label6:
        return $r7;

     label7:
        return null;

     label8:
        $r1 := @caughtexception;

     label9:
        return null;

        catch java.lang.ClassCastException from label1 to label2 with label8;
        catch java.lang.ClassCastException from label3 to label4 with label8;
        catch java.lang.ClassCastException from label5 to label6 with label8;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.Range $r1;
        java.lang.Object $r2;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: com.google.common.collect.Range get(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.NavigableMap headMap(com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut $r1;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        java.util.NavigableMap $r4;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType)>($r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile java.util.NavigableMap headMap(java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r3;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (com.google.common.collect.Cut) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean)>($r3, $z0);

        return $r1;
    }

    public int size()
    {
        int $i0;
        java.util.Iterator $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.Iterator entryIterator()>();

        $i0 = staticinvoke <com.google.common.collect.Iterators: int size(java.util.Iterator)>($r1);

        return $i0;
    }

    public java.util.NavigableMap subMap(com.google.common.collect.Cut, boolean, com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut $r1, $r2;
        com.google.common.collect.Range $r5;
        java.util.NavigableMap $r6;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        com.google.common.collect.BoundType $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: com.google.common.collect.Cut;

        $z1 := @parameter3: boolean;

        $r3 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r4 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z1);

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)>($r2, $r3, $r1, $r4);

        $r6 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r5);

        return $r6;
    }

    public volatile java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r4, $r5;
        java.util.NavigableMap $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 := @parameter2: java.lang.Object;

        $z1 := @parameter3: boolean;

        $r4 = (com.google.common.collect.Cut) $r2;

        $r5 = (com.google.common.collect.Cut) $r3;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)>($r4, $z0, $r5, $z1);

        return $r1;
    }

    public java.util.NavigableMap tailMap(com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut $r1;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        java.util.NavigableMap $r4;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType)>($r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile java.util.NavigableMap tailMap(java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r3;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;
        com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (com.google.common.collect.Cut) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound: java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean)>($r3, $z0);

        return $r1;
    }
}
