public final class n.a.b.b extends java.lang.Object implements java.lang.Iterable
{
    public final java.util.ArrayList a;

    public void <init>()
    {
        n.a.b.b r0;
        java.util.ArrayList $r1;

        r0 := @this: n.a.b.b;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<n.a.b.b: java.util.ArrayList a> = $r1;

        return;
    }

    public void <init>(c.g.a.j.t)
    {
        c.g.a.j.t $r1;
        char $c0;
        java.util.ArrayList $r2;
        n.a.b.b r0;
        repackaged.org.json.JSONException $r7;
        int $i1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;

        r0 := @this: n.a.b.b;

        $r1 := @parameter0: c.g.a.j.t;

        specialinvoke r0.<n.a.b.b: void <init>()>();

     label01:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char e()>();

        if $c0 == 0 goto label02;

        $i1 = (int) $c0;

        if $i1 <= 32 goto label01;

     label02:
        $i1 = (int) $c0;

        if $i1 != 91 goto label10;

        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 == 93 goto label09;

        virtualinvoke $r1.<c.g.a.j.t: void d()>();

     label03:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 != 44 goto label04;

        virtualinvoke $r1.<c.g.a.j.t: void d()>();

        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

        $r3 = <n.a.b.a: java.lang.Object a>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label05;

     label04:
        virtualinvoke $r1.<c.g.a.j.t: void d()>();

        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

        $r3 = virtualinvoke $r1.<c.g.a.j.t: java.lang.Object c()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label05:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 == 44 goto label07;

        $i1 = (int) $c0;

        if $i1 != 93 goto label06;

        return;

     label06:
        $r7 = new repackaged.org.json.JSONException;

        $r6 = new java.lang.StringBuilder;

        $r4 = $r6;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a \',\' or \']\'");

        $r5 = virtualinvoke $r1.<c.g.a.j.t: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r5);

        throw $r7;

     label07:
        $c0 = virtualinvoke $r1.<c.g.a.j.t: char b()>();

        $i1 = (int) $c0;

        if $i1 != 93 goto label08;

        return;

     label08:
        virtualinvoke $r1.<c.g.a.j.t: void d()>();

        goto label03;

     label09:
        return;

     label10:
        $r7 = new repackaged.org.json.JSONException;

        $r6 = new java.lang.StringBuilder;

        $r4 = $r6;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A JSONArray text must start with \'[\'");

        $r5 = virtualinvoke $r1.<c.g.a.j.t: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<repackaged.org.json.JSONException: void <init>(java.lang.String)>($r5);

        goto label11;

     label11:
        throw $r7;
    }

    public void <init>(java.lang.Object)
    {
        java.util.ArrayList $r1;
        n.a.b.b r0;
        repackaged.org.json.JSONException $r5;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3;
        boolean $z0;

        r0 := @this: n.a.b.b;

        $r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<n.a.b.b: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, $i1);

        $r4 = staticinvoke <n.a.b.a: java.lang.Object a(java.lang.Object)>($r4);

        $r1 = r0.<n.a.b.b: java.util.ArrayList a>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r5 = new repackaged.org.json.JSONException;

        specialinvoke $r5.<repackaged.org.json.JSONException: void <init>(java.lang.String)>("JSONArray initial value should be a string or collection or array.");

        goto label4;

     label4:
        throw $r5;
    }

    public void <init>(java.util.Collection)
    {
        n.a.b.b r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.lang.Object $r4;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: n.a.b.b;

        $r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<n.a.b.b: java.util.ArrayList a> = $r1;

        if $r2 == null goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = r0.<n.a.b.b: java.util.ArrayList a>;

        $r4 = staticinvoke <n.a.b.a: java.lang.Object a(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    public final java.io.Writer a(java.io.Writer, int, int)
    {
        java.io.IOException $r4;
        java.util.ArrayList $r2;
        n.a.b.b r0;
        repackaged.org.json.JSONException $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.Writer $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: n.a.b.b;

        $r1 := @parameter0: java.io.Writer;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

     label01:
        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke $r1.<java.io.Writer: void write(int)>(91);

     label02:
        $i4 = 0;

        if $i3 != 1 goto label05;

        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

     label03:
        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        staticinvoke <n.a.b.a: java.io.Writer a(java.io.Writer,java.lang.Object,int,int)>($r1, $r3, $i2, $i0);

     label04:
        goto label17;

     label05:
        if $i3 == 0 goto label17;

        $i1 = $i0 + $i2;

        $z0 = 0;

     label06:
        if $i4 >= $i3 goto label14;

        if $z0 == 0 goto label08;

     label07:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(44);

     label08:
        if $i2 <= 0 goto label10;

     label09:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(10);

     label10:
        staticinvoke <n.a.b.a: void a(java.io.Writer,int)>($r1, $i1);

     label11:
        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

     label12:
        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        staticinvoke <n.a.b.a: java.io.Writer a(java.io.Writer,java.lang.Object,int,int)>($r1, $r3, $i2, $i1);

     label13:
        $i4 = $i4 + 1;

        $z0 = 1;

        goto label06;

     label14:
        if $i2 <= 0 goto label16;

     label15:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(10);

     label16:
        staticinvoke <n.a.b.a: void a(java.io.Writer,int)>($r1, $i0);

     label17:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(93);

     label18:
        return $r1;

     label19:
        $r4 := @caughtexception;

        $r5 = new repackaged.org.json.JSONException;

        specialinvoke $r5.<repackaged.org.json.JSONException: void <init>(java.lang.Throwable)>($r4);

        goto label20;

     label20:
        throw $r5;

        catch java.io.IOException from label01 to label02 with label19;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label09 to label11 with label19;
        catch java.io.IOException from label12 to label13 with label19;
        catch java.io.IOException from label15 to label18 with label19;
    }

    public final java.lang.String a()
    {
        n.a.b.b r0;
        java.lang.Throwable $r4;
        java.lang.StringBuffer $r2;
        java.io.StringWriter $r1;
        java.lang.String $r3;

        r0 := @this: n.a.b.b;

        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        entermonitor $r2;

     label1:
        virtualinvoke r0.<n.a.b.b: java.io.Writer a(java.io.Writer,int,int)>($r1, 0, 0);

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final n.a.b.b a(java.lang.Object)
    {
        n.a.b.b r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: n.a.b.b;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return r0;
    }

    public final java.util.Iterator iterator()
    {
        n.a.b.b r0;
        java.util.Iterator $r1;
        java.util.ArrayList $r2;

        r0 := @this: n.a.b.b;

        $r2 = r0.<n.a.b.b: java.util.ArrayList a>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r1;
    }

    public final java.lang.String toString()
    {
        n.a.b.b r0;
        java.lang.String $r1;
        java.lang.Exception $r2;

        r0 := @this: n.a.b.b;

     label1:
        $r1 = virtualinvoke r0.<n.a.b.b: java.lang.String a()>();

     label2:
        return $r1;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }
}
