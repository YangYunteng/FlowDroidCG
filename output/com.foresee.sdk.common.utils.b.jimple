public class com.foresee.sdk.common.utils.b extends java.util.ArrayList
{
    public int cF;
    public double cG;
    public int index;

    public void <init>(int)
    {
        int $i0;
        com.foresee.sdk.common.utils.b r0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<com.foresee.sdk.common.utils.b: int cF> = 0;

        r0.<com.foresee.sdk.common.utils.b: int index> = 0;

        r0.<com.foresee.sdk.common.utils.b: double cG> = 0.0;

        r0.<com.foresee.sdk.common.utils.b: int cF> = $i0;

        return;
    }

    public double a(int)
    {
        java.lang.Double $r2;
        double[] $r3;
        java.lang.IllegalArgumentException $r7;
        byte $b0;
        int $i1, $i2, $i3;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;
        com.foresee.sdk.common.utils.b r0;
        double $d0, $d1, $d2;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $i1 := @parameter0: int;

        if $i1 > 100 goto label7;

        if $i1 <= 0 goto label7;

        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label1;

        return #NaN;

     label1:
        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if $i2 != 1 goto label2;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r2 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;

     label2:
        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $r3 = newarray (double)[$i2];

        $i2 = 0;

     label3:
        $i3 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if $i2 >= $i3 goto label4;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r2 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3[$i2] = $d0;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        staticinvoke <java.util.Arrays: void sort(double[])>($r3);

        $i2 = lengthof $r3;

        $d0 = (double) $i2;

        $d1 = (double) $i1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d2 = $d0 + 1.0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * $d2;

        $d2 = $d1 / 100.0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i1 = (int) $d1;

        $d1 = $d2 - $d1;

        $b0 = $d2 cmpg 1.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label5;

        $d0 = $r3[0];

        return $d0;

     label5:
        $b0 = $d2 cmpl $d0;

        $i2 = (int) $b0;

        if $i2 < 0 goto label6;

        $i1 = lengthof $r3;

        $i1 = $i1 - 1;

        $d0 = $r3[$i1];

        return $d0;

     label6:
        $i2 = -1;

        $i2 = $i1 + $i2;

        $d0 = $r3[$i2];

        $d2 = $r3[$i1];

        $d2 = $d2 - $d0;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        return $d0;

     label7:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        $r4 = $r6;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid quantile value: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label8;

     label8:
        throw $r7;
    }

    public void a(double)
    {
        java.lang.Double $r1;
        com.foresee.sdk.common.utils.b r0;
        double $d0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r0.<com.foresee.sdk.common.utils.b: boolean a(java.lang.Double)>($r1);

        return;
    }

    public void a(java.lang.Integer)
    {
        java.lang.Double $r2;
        int $i0;
        java.lang.Integer $r1;
        com.foresee.sdk.common.utils.b r0;
        double $d0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $r1 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $d0 = (double) $i0;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r0.<com.foresee.sdk.common.utils.b: boolean a(java.lang.Double)>($r2);

        return;
    }

    public boolean a(java.lang.Double)
    {
        java.lang.Double $r1, $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        com.foresee.sdk.common.utils.b r0;
        double $d0, $d1;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $r1 := @parameter0: java.lang.Double;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $i1 = r0.<com.foresee.sdk.common.utils.b: int cF>;

        if $i0 >= $i1 goto label1;

        $i0 = r0.<com.foresee.sdk.common.utils.b: int index>;

        specialinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r1);

        $d0 = r0.<com.foresee.sdk.common.utils.b: double cG>;

        $d1 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 + $d1;

        r0.<com.foresee.sdk.common.utils.b: double cG> = $d0;

        goto label2;

     label1:
        $d0 = r0.<com.foresee.sdk.common.utils.b: double cG>;

        $i0 = r0.<com.foresee.sdk.common.utils.b: int index>;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.Double) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 - $d1;

        r0.<com.foresee.sdk.common.utils.b: double cG> = $d0;

        $d0 = r0.<com.foresee.sdk.common.utils.b: double cG>;

        $d1 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 + $d1;

        r0.<com.foresee.sdk.common.utils.b: double cG> = $d0;

        $i0 = r0.<com.foresee.sdk.common.utils.b: int index>;

        specialinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

     label2:
        $i0 = r0.<com.foresee.sdk.common.utils.b: int index>;

        $i0 = $i0 + 1;

        r0.<com.foresee.sdk.common.utils.b: int index> = $i0;

        $i0 = r0.<com.foresee.sdk.common.utils.b: int index>;

        $i1 = r0.<com.foresee.sdk.common.utils.b: int cF>;

        if $i0 < $i1 goto label3;

        r0.<com.foresee.sdk.common.utils.b: int index> = 0;

     label3:
        return 1;
    }

    public double aP()
    {
        int $i0;
        com.foresee.sdk.common.utils.b r0;
        double $d0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $d0 = (double) $i0;

        return $d0;
    }

    public double aQ()
    {
        int $i0;
        com.foresee.sdk.common.utils.b r0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $z0 = virtualinvoke r0.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        $d0 = r0.<com.foresee.sdk.common.utils.b: double cG>;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Double $r2;
        java.lang.Object $r1;
        com.foresee.sdk.common.utils.b r0;
        boolean $z0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) $r1;

        $z0 = virtualinvoke r0.<com.foresee.sdk.common.utils.b: boolean a(java.lang.Double)>($r2);

        return $z0;
    }

    public double getMax()
    {
        java.lang.Double $r2;
        java.lang.Object $r1;
        com.foresee.sdk.common.utils.b r0;
        double $d0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $r1 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r0);

        $r2 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public double getMin()
    {
        java.lang.Double $r2;
        java.lang.Object $r1;
        com.foresee.sdk.common.utils.b r0;
        double $d0;

        r0 := @this: com.foresee.sdk.common.utils.b;

        $r1 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r0);

        $r2 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }
}
