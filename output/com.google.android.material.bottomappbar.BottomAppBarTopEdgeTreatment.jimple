public class com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment extends com.google.android.material.shape.EdgeTreatment implements java.lang.Cloneable
{
    public static final int ANGLE_LEFT;
    public static final int ANGLE_UP;
    public static final int ARC_HALF;
    public static final int ARC_QUARTER;
    public float cradleVerticalOffset;
    public float fabDiameter;
    public float fabMargin;
    public float horizontalOffset;
    public float roundedCornerRadius;

    public void <init>(float, float, float)
    {
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;
        float $f0, $f1, $f2;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f2 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        specialinvoke r0.<com.google.android.material.shape.EdgeTreatment: void <init>()>();

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabMargin> = $f2;

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float roundedCornerRadius> = $f0;

        virtualinvoke r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setCradleVerticalOffset(float)>($f1);

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float horizontalOffset> = 0.0F;

        return;
    }

    public float getCradleVerticalOffset()
    {
        float f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        f0 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float cradleVerticalOffset>;

        return f0;
    }

    public void getEdgePath(float, float, float, com.google.android.material.shape.ShapePath)
    {
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;
        byte $b0;
        int $i1;
        com.google.android.material.shape.ShapePath $r1;
        double $d0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 := @parameter3: com.google.android.material.shape.ShapePath;

        $f4 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabDiameter>;

        $b0 = $f4 cmpl 0.0F;

        if $b0 != 0 goto label1;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void lineTo(float,float)>($f0, 0.0F);

        return;

     label1:
        $f3 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabMargin>;

        $f3 = $f3 * 2.0F;

        $f4 = $f3 + $f4;

        $f3 = $f4 / 2.0F;

        $f4 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float roundedCornerRadius>;

        $f4 = $f2 * $f4;

        $f5 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float horizontalOffset>;

        $f1 = $f1 + $f5;

        $f5 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float cradleVerticalOffset>;

        $f5 = $f5 * $f2;

        $f2 = 1.0F - $f2;

        $f2 = $f2 * $f3;

        $f2 = $f5 + $f2;

        $f5 = $f2 / $f3;

        $b0 = $f5 cmpl 1.0F;

        $i1 = (int) $b0;

        if $i1 < 0 goto label2;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void lineTo(float,float)>($f0, 0.0F);

        return;

     label2:
        $f5 = $f3 + $f4;

        $f5 = $f5 * $f5;

        $f7 = $f2 + $f4;

        $f6 = $f7 * $f7;

        $f5 = $f5 - $f6;

        $d0 = (double) $f5;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f8 = (float) $d0;

        $f6 = $f1 - $f8;

        $f5 = $f1 + $f8;

        $f7 = $f8 / $f7;

        $d0 = (double) $f7;

        $d0 = staticinvoke <java.lang.Math: double atan(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f7 = (float) $d0;

        $f8 = 90.0F - $f7;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void lineTo(float,float)>($f6, 0.0F);

        $f9 = $f6 - $f4;

        $f10 = $f6 + $f4;

        $f6 = $f4 * 2.0F;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void addArc(float,float,float,float,float,float)>($f9, 0.0F, $f10, $f6, 270.0F, $f7);

        $f9 = $f1 - $f3;

        $f10 = neg $f3;

        $f10 = $f10 - $f2;

        $f1 = $f1 + $f3;

        $f2 = $f3 - $f2;

        $f3 = 180.0F - $f8;

        $f8 = $f8 * 2.0F;

        $f8 = $f8 - 180.0F;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void addArc(float,float,float,float,float,float)>($f9, $f10, $f1, $f2, $f3, $f8);

        $f1 = $f5 - $f4;

        $f2 = $f5 + $f4;

        $f4 = 270.0F - $f7;

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void addArc(float,float,float,float,float,float)>($f1, 0.0F, $f2, $f6, $f4, $f7);

        virtualinvoke $r1.<com.google.android.material.shape.ShapePath: void lineTo(float,float)>($f0, 0.0F);

        return;
    }

    public float getFabCradleMargin()
    {
        float f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        f0 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabMargin>;

        return f0;
    }

    public float getFabCradleRoundedCornerRadius()
    {
        float f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        f0 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float roundedCornerRadius>;

        return f0;
    }

    public float getFabDiameter()
    {
        float f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        f0 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabDiameter>;

        return f0;
    }

    public float getHorizontalOffset()
    {
        float f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        f0 = r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float horizontalOffset>;

        return f0;
    }

    public void setCradleVerticalOffset(float)
    {
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;
        byte $b0;
        int $i1;
        float $f0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float cradleVerticalOffset> = $f0;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cradleVerticalOffset must be positive.");

        throw $r1;
    }

    public void setFabCradleMargin(float)
    {
        float $f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabMargin> = $f0;

        return;
    }

    public void setFabCradleRoundedCornerRadius(float)
    {
        float $f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float roundedCornerRadius> = $f0;

        return;
    }

    public void setFabDiameter(float)
    {
        float $f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float fabDiameter> = $f0;

        return;
    }

    public void setHorizontalOffset(float)
    {
        float $f0;
        com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment r0;

        r0 := @this: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float horizontalOffset> = $f0;

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: int ARC_QUARTER> = 90;

        <com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: int ARC_HALF> = 180;

        <com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: int ANGLE_UP> = 270;

        <com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: int ANGLE_LEFT> = 180;

        return;
    }
}
