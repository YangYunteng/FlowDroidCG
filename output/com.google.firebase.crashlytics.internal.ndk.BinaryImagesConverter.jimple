public class com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter extends java.lang.Object
{
    public static final java.lang.String DATA_DIR;
    public final android.content.Context context;
    public final com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy fileIdStrategy;

    public void <init>(android.content.Context, com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy)
    {
        android.content.Context $r1;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: android.content.Context context> = $r1;

        r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy fileIdStrategy> = $r2;

        return;
    }

    private java.io.File correctDataPath(java.io.File)
    {
        android.content.Context $r3;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.io.File $r1, $r6;
        com.google.firebase.crashlytics.internal.Logger $r9;
        int $i0;
        java.lang.String $r2, $r7;
        android.content.pm.ApplicationInfo $r5;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r1 := @parameter0: java.io.File;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 9 goto label1;

        return $r1;

     label1:
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/data");

        if $z0 == 0 goto label9;

        $r3 = r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: android.content.Context context>;

     label2:
        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label3:
        $r3 = r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: android.content.Context context>;

     label4:
        $r2 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, 0);

     label5:
        $r6 = new java.io.File;

        $r2 = $r5.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

     label6:
        $r7 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, $r7);

     label7:
        return $r6;

     label8:
        $r8 := @caughtexception;

        $r9 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r9.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("Error getting ApplicationInfo", $r8);

     label9:
        return $r1;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label6 to label7 with label8;
    }

    public static org.json.JSONObject createBinaryImageJson(java.lang.String, com.google.firebase.crashlytics.internal.ndk.ProcMapEntry)
    {
        com.google.firebase.crashlytics.internal.ndk.ProcMapEntry $r2;
        org.json.JSONObject $r1;
        long $l0;
        java.lang.String $r0, $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.firebase.crashlytics.internal.ndk.ProcMapEntry;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $l0 = $r2.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: long address>;

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("base_address", $l0);

        $l0 = $r2.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: long size>;

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("size", $l0);

        $r3 = $r2.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: java.lang.String path>;

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r3);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("uuid", $r0);

        return $r1;
    }

    public static byte[] generateBinaryImagesJsonString(org.json.JSONArray)
    {
        byte[] $r4;
        com.google.firebase.crashlytics.internal.Logger $r6;
        org.json.JSONException $r5;
        org.json.JSONObject $r1;
        java.nio.charset.Charset $r3;
        java.lang.String $r2;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

     label1:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("binary_images", $r0);

     label2:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r6.<com.google.firebase.crashlytics.internal.Logger: void w(java.lang.String,java.lang.Throwable)>("Binary images string is null", $r5);

        $r4 = newarray (byte)[0];

        return $r4;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    private java.io.File getLibraryFile(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        java.lang.String $r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: java.io.File correctDataPath(java.io.File)>($r2);

     label1:
        return $r2;
    }

    public static boolean isRelevant(com.google.firebase.crashlytics.internal.ndk.ProcMapEntry)
    {
        com.google.firebase.crashlytics.internal.ndk.ProcMapEntry $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: com.google.firebase.crashlytics.internal.ndk.ProcMapEntry;

        $r1 = $r0.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: java.lang.String perms>;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(120);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $r1 = $r0.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: java.lang.String path>;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(47);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String joinMapsEntries(org.json.JSONArray)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        org.json.JSONArray $r1;

        $r1 := @parameter0: org.json.JSONArray;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label2;

        $r2 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String getString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private org.json.JSONObject jsonFromMapEntryString(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.ndk.ProcMapEntry $r3;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        java.io.IOException $r9;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy $r5;
        java.io.File $r4;
        com.google.firebase.crashlytics.internal.Logger $r8;
        org.json.JSONException $r7;
        org.json.JSONObject $r6;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r2 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.ProcMapEntryParser: com.google.firebase.crashlytics.internal.ndk.ProcMapEntry parse(java.lang.String)>($r2);

        if $r3 == null goto label7;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: boolean isRelevant(com.google.firebase.crashlytics.internal.ndk.ProcMapEntry)>($r3);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = $r3.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: java.lang.String path>;

        $r4 = specialinvoke r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: java.io.File getLibraryFile(java.lang.String)>($r2);

        $r5 = r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy fileIdStrategy>;

     label2:
        $r2 = interfaceinvoke $r5.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter$FileIdStrategy: java.lang.String createId(java.io.File)>($r4);

     label3:
        $r6 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: org.json.JSONObject createBinaryImageJson(java.lang.String,com.google.firebase.crashlytics.internal.ndk.ProcMapEntry)>($r2, $r3);

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String,java.lang.Throwable)>("Could not create a binary image json string", $r7);

        return null;

     label6:
        $r9 := @caughtexception;

        $r8 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not generate ID for file ");

        $r2 = $r3.<com.google.firebase.crashlytics.internal.ndk.ProcMapEntry: java.lang.String path>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String,java.lang.Throwable)>($r2, $r9);

     label7:
        return null;

        catch java.io.IOException from label2 to label3 with label6;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    private org.json.JSONArray parseProcMapsJsonFromStream(java.io.BufferedReader)
    {
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        org.json.JSONObject $r4;
        java.io.BufferedReader $r1;
        java.lang.String $r3;
        org.json.JSONArray $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r1 := @parameter0: java.io.BufferedReader;

        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

     label1:
        $r3 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r3 == null goto label2;

        $r4 = specialinvoke r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: org.json.JSONObject jsonFromMapEntryString(java.lang.String)>($r3);

        if $r4 == null goto label1;

        virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r2;
    }

    private org.json.JSONArray parseProcMapsJsonFromString(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        java.lang.String[] $r5;
        com.google.firebase.crashlytics.internal.Logger $r7;
        org.json.JSONException $r6;
        org.json.JSONObject $r3;
        int $i0, $i1;
        java.lang.String $r2;
        org.json.JSONArray $r1, $r4;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r2 := @parameter0: java.lang.String;

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        $r3 = new org.json.JSONObject;

     label1:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("maps");

        $r2 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: java.lang.String joinMapsEntries(org.json.JSONArray)>($r4);

     label2:
        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        $i0 = 0;

     label3:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label5;

        $r2 = $r5[$i0];

        $r3 = specialinvoke r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: org.json.JSONObject jsonFromMapEntryString(java.lang.String)>($r2);

        if $r3 == null goto label4;

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        return $r1;

     label6:
        $r6 := @caughtexception;

        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void w(java.lang.String,java.lang.Throwable)>("Unable to parse proc maps string", $r6);

        return $r1;

        catch org.json.JSONException from label1 to label2 with label6;
    }

    public byte[] convert(java.io.BufferedReader)
    {
        byte[] $r3;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        java.io.BufferedReader $r1;
        org.json.JSONArray $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r1 := @parameter0: java.io.BufferedReader;

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: org.json.JSONArray parseProcMapsJsonFromStream(java.io.BufferedReader)>($r1);

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: byte[] generateBinaryImagesJsonString(org.json.JSONArray)>($r2);

        return $r3;
    }

    public byte[] convert(java.lang.String)
    {
        byte[] $r3;
        com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter r0;
        java.lang.String $r1;
        org.json.JSONArray $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: org.json.JSONArray parseProcMapsJsonFromString(java.lang.String)>($r1);

        $r3 = staticinvoke <com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: byte[] generateBinaryImagesJsonString(org.json.JSONArray)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.google.firebase.crashlytics.internal.ndk.BinaryImagesConverter: java.lang.String DATA_DIR> = "/data";

        return;
    }
}
