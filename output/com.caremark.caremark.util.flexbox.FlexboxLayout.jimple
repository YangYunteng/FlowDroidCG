public class com.caremark.caremark.util.flexbox.FlexboxLayout extends android.view.ViewGroup implements com.caremark.caremark.util.flexbox.FlexContainer
{
    public static final int SHOW_DIVIDER_BEGINNING;
    public static final int SHOW_DIVIDER_END;
    public static final int SHOW_DIVIDER_MIDDLE;
    public static final int SHOW_DIVIDER_NONE;
    public int mAlignContent;
    public int mAlignItems;
    public android.graphics.drawable.Drawable mDividerDrawableHorizontal;
    public android.graphics.drawable.Drawable mDividerDrawableVertical;
    public int mDividerHorizontalHeight;
    public int mDividerVerticalWidth;
    public int mFlexDirection;
    public java.util.List mFlexLines;
    public com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult;
    public int mFlexWrap;
    public com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper;
    public int mJustifyContent;
    public int mMaxLine;
    public android.util.SparseIntArray mOrderCache;
    public int[] mReorderedIndices;
    public int mShowDividerHorizontal;
    public int mShowDividerVertical;
    public int maxItemInRow;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult $r8;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r5;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r6;
        android.content.res.TypedArray $r4;
        java.util.ArrayList $r7;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $i1 = -1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mMaxLine> = $i1;

        $r6 = new com.caremark.caremark.util.flexbox.FlexboxHelper;

        specialinvoke $r6.<com.caremark.caremark.util.flexbox.FlexboxHelper: void <init>(com.caremark.caremark.util.flexbox.FlexContainer)>(r0);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines> = $r7;

        $r8 = new com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult;

        specialinvoke $r8.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: void <init>()>();

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult> = $r8;

        $r3 = <c.c.a.Lb: int[] FlexboxLayout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(1, 4);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignItems> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(0, 5);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignContent> = $i0;

        $i0 = -1;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(8, $i0);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mMaxLine> = $i0;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        if $r5 == null goto label1;

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)>($r5);

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setDividerDrawableVertical(android.graphics.drawable.Drawable)>($r5);

     label1:
        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(3);

        if $r5 == null goto label2;

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)>($r5);

     label2:
        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(4);

        if $r5 == null goto label3;

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setDividerDrawableVertical(android.graphics.drawable.Drawable)>($r5);

     label3:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(10, 0);

        if $i0 == 0 goto label4;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical> = $i0;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal> = $i0;

     label4:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(12, 0);

        if $i0 == 0 goto label5;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical> = $i0;

     label5:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(11, 0);

        if $i0 == 0 goto label6;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal> = $i0;

     label6:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>(9, 8);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int maxItemInRow> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private boolean allFlexLinesAreDummyBefore(int)
    {
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        com.caremark.caremark.util.flexbox.FlexLine $r3;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.caremark.caremark.util.flexbox.FlexLine) $r2;

        $i2 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i2 <= 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean allViewsAreGoneBefore(int, int)
    {
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = 1;

     label1:
        if $i2 > $i0 goto label3;

        $i3 = $i1 - $i2;

        $r1 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i3);

        if $r1 == null goto label2;

        $i3 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i3 == 8 goto label2;

        return 0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    private void drawDividersHorizontal(android.graphics.Canvas, boolean, boolean)
    {
        com.caremark.caremark.util.flexbox.FlexLine $r4;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r5;
        android.graphics.Canvas $r1;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup$LayoutParams $r6;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r7;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getWidth()>();

        $i2 = $i3 - $i2;

        $i2 = $i2 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i4 = 0;

     label01:
        if $i4 >= $i3 goto label17;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i4);

        $r4 = (com.caremark.caremark.util.flexbox.FlexLine) $r3;

        $i5 = 0;

     label02:
        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        if $i5 >= $i0 goto label10;

        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mFirstIndex>;

        $i0 = $i0 + $i5;

        $r5 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i0);

        if $r5 == null goto label09;

        $i6 = virtualinvoke $r5.<android.view.View: int getVisibility()>();

        if $i6 != 8 goto label03;

        goto label09;

     label03:
        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams) $r6;

        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i0, $i5);

        if $z2 == 0 goto label06;

        if $z0 == 0 goto label04;

        $i0 = virtualinvoke $r5.<android.view.View: int getRight()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i6 = $i0 + $i6;

        goto label05;

     label04:
        $i0 = virtualinvoke $r5.<android.view.View: int getLeft()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i0 = $i0 - $i6;

        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i6 = $i0 - $i6;

     label05:
        $i7 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mTop>;

        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawVerticalDivider(android.graphics.Canvas,int,int,int)>($r1, $i6, $i7, $i0);

     label06:
        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        $i6 = -1;

        $i0 = $i0 + $i6;

        if $i5 != $i0 goto label09;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label09;

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke $r5.<android.view.View: int getLeft()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i0 = $i0 - $i6;

        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i0 = $i0 - $i6;

        goto label08;

     label07:
        $i0 = virtualinvoke $r5.<android.view.View: int getRight()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i0 = $i0 + $i6;

     label08:
        $i6 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mTop>;

        $i7 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawVerticalDivider(android.graphics.Canvas,int,int,int)>($r1, $i0, $i6, $i7);

     label09:
        $i5 = $i5 + 1;

        goto label02;

     label10:
        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeFlexLine(int)>($i4);

        if $z2 == 0 goto label13;

        if $z1 == 0 goto label11;

        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mBottom>;

        goto label12;

     label11:
        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mTop>;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i5 = $i5 - $i0;

     label12:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawHorizontalDivider(android.graphics.Canvas,int,int,int)>($r1, $i1, $i5, $i2);

     label13:
        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasEndDividerAfterFlexLine(int)>($i4);

        if $z2 == 0 goto label16;

        $i5 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i5 = $i5 & 4;

        if $i5 <= 0 goto label16;

        if $z1 == 0 goto label14;

        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mTop>;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i5 = $i5 - $i0;

        goto label15;

     label14:
        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mBottom>;

     label15:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawHorizontalDivider(android.graphics.Canvas,int,int,int)>($r1, $i1, $i5, $i2);

     label16:
        $i4 = $i4 + 1;

        goto label01;

     label17:
        return;
    }

    private void drawDividersVertical(android.graphics.Canvas, boolean, boolean)
    {
        com.caremark.caremark.util.flexbox.FlexLine $r4;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r5;
        android.graphics.Canvas $r1;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup$LayoutParams $r6;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r7;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getHeight()>();

        $i2 = $i3 - $i2;

        $i2 = $i2 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i4 = 0;

     label01:
        if $i4 >= $i3 goto label17;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i4);

        $r4 = (com.caremark.caremark.util.flexbox.FlexLine) $r3;

        $i5 = 0;

     label02:
        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        if $i5 >= $i0 goto label10;

        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mFirstIndex>;

        $i0 = $i0 + $i5;

        $r5 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i0);

        if $r5 == null goto label09;

        $i6 = virtualinvoke $r5.<android.view.View: int getVisibility()>();

        if $i6 != 8 goto label03;

        goto label09;

     label03:
        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams) $r6;

        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i0, $i5);

        if $z2 == 0 goto label06;

        if $z1 == 0 goto label04;

        $i0 = virtualinvoke $r5.<android.view.View: int getBottom()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i6 = $i0 + $i6;

        goto label05;

     label04:
        $i0 = virtualinvoke $r5.<android.view.View: int getTop()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i0 = $i0 - $i6;

        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i6 = $i0 - $i6;

     label05:
        $i7 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mLeft>;

        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawHorizontalDivider(android.graphics.Canvas,int,int,int)>($r1, $i7, $i6, $i0);

     label06:
        $i0 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        $i6 = -1;

        $i0 = $i0 + $i6;

        if $i5 != $i0 goto label09;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label09;

        if $z1 == 0 goto label07;

        $i0 = virtualinvoke $r5.<android.view.View: int getTop()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i0 = $i0 - $i6;

        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i0 = $i0 - $i6;

        goto label08;

     label07:
        $i0 = virtualinvoke $r5.<android.view.View: int getBottom()>();

        $i6 = $r7.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i0 = $i0 + $i6;

     label08:
        $i6 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mLeft>;

        $i7 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawHorizontalDivider(android.graphics.Canvas,int,int,int)>($r1, $i6, $i0, $i7);

     label09:
        $i5 = $i5 + 1;

        goto label02;

     label10:
        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeFlexLine(int)>($i4);

        if $z2 == 0 goto label13;

        if $z0 == 0 goto label11;

        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mRight>;

        goto label12;

     label11:
        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mLeft>;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i5 = $i5 - $i0;

     label12:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawVerticalDivider(android.graphics.Canvas,int,int,int)>($r1, $i5, $i1, $i2);

     label13:
        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasEndDividerAfterFlexLine(int)>($i4);

        if $z2 == 0 goto label16;

        $i5 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i5 = $i5 & 4;

        if $i5 <= 0 goto label16;

        if $z0 == 0 goto label14;

        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mLeft>;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i5 = $i5 - $i0;

        goto label15;

     label14:
        $i5 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mRight>;

     label15:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawVerticalDivider(android.graphics.Canvas,int,int,int)>($r1, $i5, $i1, $i2);

     label16:
        $i4 = $i4 + 1;

        goto label01;

     label17:
        return;
    }

    private void drawHorizontalDivider(android.graphics.Canvas, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal>;

        if $r2 != null goto label1;

        return;

     label1:
        $i2 = $i2 + $i1;

        $i3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i3 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i2, $i3);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    private void drawVerticalDivider(android.graphics.Canvas, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical>;

        if $r2 != null goto label1;

        return;

     label1:
        $i3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i3 = $i3 + $i1;

        $i2 = $i2 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i3, $i2);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    private boolean hasDividerBeforeChildAtAlongMainAxis(int, int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean allViewsAreGoneBefore(int,int)>($i0, $i1);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        return 1;

     label1:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        return 1;

     label2:
        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label3;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label4;

        return 1;

     label3:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean hasDividerBeforeFlexLine(int)
    {
        java.util.List $r1;
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label5;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean allFlexLinesAreDummyBefore(int)>($i0);

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label2;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label5;

        return 1;

     label2:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label5;

        return 1;

     label3:
        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label4;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label5;

        return 1;

     label4:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private boolean hasEndDividerAfterFlexLine(int)
    {
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.caremark.caremark.util.flexbox.FlexLine $r3;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label6;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $i0 = $i0 + 1;

     label2:
        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.caremark.caremark.util.flexbox.FlexLine) $r2;

        $i1 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i1 <= 0 goto label3;

        return 0;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label5;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label6;

        return 1;

     label5:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    private void layoutHorizontal(boolean, int, int, int, int)
    {
        java.lang.IllegalStateException $r12;
        com.caremark.caremark.util.flexbox.FlexLine $r3, $r6;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.view.View $r7;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r8;
        java.util.List $r1;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.StringBuilder $r4, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r5;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r9;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r10;
        java.lang.Object $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i1 = $i3 - $i1;

        $i0 = $i2 - $i0;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i6 = 0;

     label01:
        if $i6 >= $i1 goto label34;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6);

        $r3 = (com.caremark.caremark.util.flexbox.FlexLine) $r2;

        $z1 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeFlexLine(int)>($i6);

        if $z1 == 0 goto label02;

        $i7 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i3 = $i3 - $i7;

        $i2 = $i2 + $i7;

     label02:
        $i7 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent>;

        lookupswitch($i7)
        {
            case 0: goto label16;
            case 1: goto label15;
            case 2: goto label14;
            case 3: goto label11;
            case 4: goto label08;
            case 5: goto label05;
            case 6: goto label04;
            default: goto label03;
        };

     label03:
        $r12 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        $r4 = $r11;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid justifyContent is set: ");

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r12;

     label04:
        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.caremark.caremark.util.flexbox.FlexLine) $r2;

        $i7 = virtualinvoke $r6.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i7 == 0 goto label06;

        $i8 = $r6.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i8;

        $f0 = (float) $i8;

        $i7 = $i7 + 1;

        $f1 = (float) $i7;

        $f0 = $f0 / $f1;

        goto label07;

     label05:
        $i7 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i7 == 0 goto label06;

        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i8;

        $f0 = (float) $i8;

        $i7 = $i7 + 1;

        $f1 = (float) $i7;

        $f0 = $f0 / $f1;

        goto label07;

     label06:
        $f0 = 0.0F;

     label07:
        $f1 = (float) $i4;

        $f1 = $f1 + $f0;

        $i7 = $i0 - $i5;

        $f2 = (float) $i7;

        $f2 = $f2 - $f0;

        goto label19;

     label08:
        $i7 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i7 == 0 goto label09;

        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i8;

        $f0 = (float) $i8;

        $f1 = (float) $i7;

        $f0 = $f0 / $f1;

        goto label10;

     label09:
        $f0 = 0.0F;

     label10:
        $f1 = (float) $i4;

        $f2 = $f0 / 2.0F;

        $f1 = $f1 + $f2;

        $i7 = $i0 - $i5;

        $f3 = (float) $i7;

        $f2 = $f3 - $f2;

        goto label19;

     label11:
        $f1 = (float) $i4;

        $i7 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i7 == 1 goto label12;

        $i8 = -1;

        $i7 = $i7 + $i8;

        $f0 = (float) $i7;

        goto label13;

     label12:
        $f0 = 1.0F;

     label13:
        $i7 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i7 = $i0 - $i7;

        $f2 = (float) $i7;

        $f0 = $f2 / $f0;

        $i7 = $i0 - $i5;

        $f2 = (float) $i7;

        goto label19;

     label14:
        $f0 = (float) $i4;

        $i7 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i7;

        $f1 = (float) $i8;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 + $f1;

        $i8 = $i0 - $i5;

        $f1 = (float) $i8;

        $i7 = $i0 - $i7;

        $f2 = (float) $i7;

        $f2 = $f2 / 2.0F;

        $f2 = $f1 - $f2;

        $f1 = $f0;

        goto label18;

     label15:
        $i7 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i7;

        $i8 = $i8 + $i5;

        $f1 = (float) $i8;

        $i7 = $i7 - $i4;

        goto label17;

     label16:
        $f1 = (float) $i4;

        $i7 = $i0 - $i5;

     label17:
        $f2 = (float) $i7;

     label18:
        $f0 = 0.0F;

     label19:
        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, 0.0F);

        $i9 = 0;

     label20:
        $i7 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        if $i9 >= $i7 goto label33;

        $i7 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mFirstIndex>;

        $i7 = $i7 + $i9;

        $r7 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i7);

        if $r7 == null goto label32;

        $i8 = virtualinvoke $r7.<android.view.View: int getVisibility()>();

        if $i8 != 8 goto label21;

        goto label32;

     label21:
        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r9 = (com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams) $r8;

        $i8 = $r9.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $f3 = (float) $i8;

        $f1 = $f1 + $f3;

        $i8 = $r9.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $f3 = (float) $i8;

        $f3 = $f2 - $f3;

        $z1 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i7, $i9);

        if $z1 == 0 goto label22;

        $i7 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $f2 = (float) $i7;

        $f3 = $f3 - $f2;

        $f2 = $f1 + $f2;

        $f1 = $f3;

        goto label23;

     label22:
        $f2 = $f1;

        $f1 = $f3;

        $i7 = 0;

     label23:
        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        $i8 = $i8 - 1;

        if $i9 != $i8 goto label24;

        $i8 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i8 = $i8 & 4;

        if $i8 <= 0 goto label24;

        $i8 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        goto label25;

     label24:
        $i8 = 0;

     label25:
        $i10 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i10 != 2 goto label27;

        if $z0 == 0 goto label26;

        $r10 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i11 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        $i10 = $i10 - $i11;

        $i11 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i11 = $i3 - $i11;

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f1);

        virtualinvoke $r10.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildHorizontal(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,int,int,int,int)>($r7, $r3, $i10, $i11, $i12, $i3);

        goto label29;

     label26:
        $r10 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i11 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i11 = $i3 - $i11;

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i13 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        $i12 = $i12 + $i13;

        virtualinvoke $r10.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildHorizontal(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,int,int,int,int)>($r7, $r3, $i10, $i11, $i12, $i3);

        goto label29;

     label27:
        if $z0 == 0 goto label28;

        $r10 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i11 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        $i10 = $i10 - $i11;

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i12 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i2 + $i12;

        virtualinvoke $r10.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildHorizontal(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,int,int,int,int)>($r7, $r3, $i10, $i2, $i11, $i12);

        goto label29;

     label28:
        $r10 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i12 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        $i11 = $i11 + $i12;

        $i12 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i2 + $i12;

        virtualinvoke $r10.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildHorizontal(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,int,int,int,int)>($r7, $r3, $i10, $i2, $i11, $i12);

     label29:
        $i10 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        $f3 = (float) $i10;

        $f3 = $f3 + $f0;

        $i10 = $r9.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $f4 = (float) $i10;

        $f3 = $f3 + $f4;

        $f2 = $f2 + $f3;

        $i10 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        $f3 = (float) $i10;

        $f3 = $f3 + $f0;

        $i10 = $r9.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $f4 = (float) $i10;

        $f3 = $f3 + $f4;

        $f3 = $f1 - $f3;

        if $z0 == 0 goto label30;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: void updatePositionFromView(android.view.View,int,int,int,int)>($r7, $i8, 0, $i7, 0);

        goto label31;

     label30:
        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: void updatePositionFromView(android.view.View,int,int,int,int)>($r7, $i7, 0, $i8, 0);

     label31:
        $f1 = $f2;

        $f2 = $f3;

        goto label32;

     label32:
        $i9 = $i9 + 1;

        goto label20;

     label33:
        $i7 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        $i2 = $i2 + $i7;

        $i3 = $i3 - $i7;

        $i6 = $i6 + 1;

        goto label01;

     label34:
        return;
    }

    private void layoutVertical(boolean, boolean, int, int, int, int)
    {
        java.lang.IllegalStateException $r11;
        com.caremark.caremark.util.flexbox.FlexLine $r3;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.view.View $r6;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup$LayoutParams $r7;
        java.util.List $r1;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.StringBuilder $r4, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r5;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r8;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r9;
        java.lang.Object $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i7 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i2 = $i2 - $i0;

        $i0 = $i3 - $i1;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = $i2 - $i6;

        $i3 = $i7;

        $i7 = 0;

     label01:
        if $i7 >= $i1 goto label37;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i7);

        $r3 = (com.caremark.caremark.util.flexbox.FlexLine) $r2;

        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeFlexLine(int)>($i7);

        if $z2 == 0 goto label02;

        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i3 = $i3 + $i6;

        $i2 = $i2 - $i6;

     label02:
        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent>;

        lookupswitch($i6)
        {
            case 0: goto label19;
            case 1: goto label18;
            case 2: goto label17;
            case 3: goto label14;
            case 4: goto label11;
            case 5: goto label08;
            case 6: goto label04;
            default: goto label03;
        };

     label03:
        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        $r4 = $r10;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid justifyContent is set: ");

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r11;

     label04:
        $i6 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i6 == 0 goto label05;

        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i8;

        $f0 = (float) $i8;

        $i6 = $i6 + 1;

        $f1 = (float) $i6;

        $f0 = $f0 / $f1;

        goto label06;

     label05:
        $f0 = 0.0F;

     label06:
        $f1 = (float) $i4;

        $f2 = $f1 + $f0;

        $i6 = $i0 - $i5;

        $f1 = (float) $i6;

        $f1 = $f1 - $f0;

     label07:
        goto label22;

     label08:
        $i6 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i6 == 0 goto label09;

        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i8;

        $f0 = (float) $i8;

        $i6 = $i6 + 1;

        $f1 = (float) $i6;

        $f0 = $f0 / $f1;

        goto label10;

     label09:
        $f0 = 0.0F;

     label10:
        $f1 = (float) $i4;

        $f2 = $f1 + $f0;

        $i6 = $i0 - $i5;

        $f1 = (float) $i6;

        $f1 = $f1 - $f0;

        goto label22;

     label11:
        $i6 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i6 == 0 goto label12;

        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i8;

        $f0 = (float) $i8;

        $f1 = (float) $i6;

        $f0 = $f0 / $f1;

        goto label13;

     label12:
        $f0 = 0.0F;

     label13:
        $f2 = (float) $i4;

        $f1 = $f0 / 2.0F;

        $f2 = $f2 + $f1;

        $i6 = $i0 - $i5;

        $f3 = (float) $i6;

        $f1 = $f3 - $f1;

        goto label22;

     label14:
        $f2 = (float) $i4;

        $i6 = virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i6 == 1 goto label15;

        $i8 = -1;

        $i6 = $i6 + $i8;

        $f0 = (float) $i6;

        goto label16;

     label15:
        $f0 = 1.0F;

     label16:
        $i6 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i6 = $i0 - $i6;

        $f1 = (float) $i6;

        $f0 = $f1 / $f0;

        $i6 = $i0 - $i5;

        $f1 = (float) $i6;

        goto label07;

     label17:
        $f0 = (float) $i4;

        $i6 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i6;

        $f1 = (float) $i8;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 + $f1;

        $i8 = $i0 - $i5;

        $f1 = (float) $i8;

        $i6 = $i0 - $i6;

        $f2 = (float) $i6;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        goto label20;

     label18:
        $i6 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i8 = $i0 - $i6;

        $i8 = $i8 + $i5;

        $f2 = (float) $i8;

        $i6 = $i6 - $i4;

        $f1 = (float) $i6;

        goto label21;

     label19:
        $f0 = (float) $i4;

        $i6 = $i0 - $i5;

        $f1 = (float) $i6;

     label20:
        $f2 = $f0;

     label21:
        $f0 = 0.0F;

     label22:
        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, 0.0F);

        $i9 = 0;

     label23:
        $i6 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        if $i9 >= $i6 goto label36;

        $i6 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mFirstIndex>;

        $i6 = $i6 + $i9;

        $r6 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i6);

        if $r6 == null goto label35;

        $i8 = virtualinvoke $r6.<android.view.View: int getVisibility()>();

        if $i8 != 8 goto label24;

        goto label35;

     label24:
        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams) $r7;

        $i8 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $f3 = (float) $i8;

        $f2 = $f2 + $f3;

        $i8 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $f3 = (float) $i8;

        $f1 = $f1 - $f3;

        $z2 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i6, $i9);

        if $z2 == 0 goto label25;

        $i6 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $f3 = (float) $i6;

        $f2 = $f2 + $f3;

        $f1 = $f1 - $f3;

        goto label26;

     label25:
        $i6 = 0;

     label26:
        $i8 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        $i8 = $i8 - 1;

        if $i9 != $i8 goto label27;

        $i8 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i8 = $i8 & 4;

        if $i8 <= 0 goto label27;

        $i8 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        goto label28;

     label27:
        $i8 = 0;

     label28:
        if $z0 == 0 goto label30;

        if $z1 == 0 goto label29;

        $r9 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        $i10 = $i2 - $i10;

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i12 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        $i11 = $i11 - $i12;

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f1);

        virtualinvoke $r9.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildVertical(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,boolean,int,int,int,int)>($r6, $r3, 1, $i10, $i11, $i2, $i12);

        goto label32;

     label29:
        $r9 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        $i10 = $i2 - $i10;

        $i11 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i13 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i12 + $i13;

        virtualinvoke $r9.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildVertical(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,boolean,int,int,int,int)>($r6, $r3, 1, $i10, $i11, $i2, $i12);

        goto label32;

     label30:
        if $z1 == 0 goto label31;

        $r9 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i11 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        $i10 = $i10 - $i11;

        $i11 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        $i11 = $i3 + $i11;

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f1);

        virtualinvoke $r9.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildVertical(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,boolean,int,int,int,int)>($r6, $r3, 0, $i3, $i10, $i11, $i12);

        goto label32;

     label31:
        $r9 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i11 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        $i11 = $i3 + $i11;

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i13 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i12 + $i13;

        virtualinvoke $r9.<com.caremark.caremark.util.flexbox.FlexboxHelper: void layoutSingleChildVertical(android.view.View,com.caremark.caremark.util.flexbox.FlexLine,boolean,int,int,int,int)>($r6, $r3, 0, $i3, $i10, $i11, $i12);

     label32:
        $i10 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        $f3 = (float) $i10;

        $f3 = $f3 + $f0;

        $i10 = $r8.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $f4 = (float) $i10;

        $f3 = $f3 + $f4;

        $f2 = $f2 + $f3;

        $i10 = virtualinvoke $r6.<android.view.View: int getMeasuredHeight()>();

        $f3 = (float) $i10;

        $f3 = $f3 + $f0;

        $i10 = $r8.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $f4 = (float) $i10;

        $f3 = $f3 + $f4;

        $f1 = $f1 - $f3;

        if $z1 == 0 goto label33;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: void updatePositionFromView(android.view.View,int,int,int,int)>($r6, 0, $i8, 0, $i6);

        goto label34;

     label33:
        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexLine: void updatePositionFromView(android.view.View,int,int,int,int)>($r6, 0, $i6, 0, $i8);

     label34:
        goto label35;

     label35:
        $i9 = $i9 + 1;

        goto label23;

     label36:
        $i6 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        $i3 = $i3 + $i6;

        $i2 = $i2 - $i6;

        $i7 = $i7 + 1;

        goto label01;

     label37:
        return;
    }

    private void measureHorizontal(int, int)
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult $r2;
        com.caremark.caremark.util.flexbox.FlexLine $r6;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r7;
        boolean $z0;
        java.util.Iterator $r4;
        android.view.ViewGroup$LayoutParams $r8;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r9;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r3;
        java.util.List $r1;
        java.lang.Object $r5;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        virtualinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: void reset()>();

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void calculateHorizontalFlexLines(com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult,int,int)>($r2, $i0, $i1);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        $r1 = $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: java.util.List mFlexLines>;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines> = $r1;

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void determineMainSize(int,int)>($i0, $i1);

        $i2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignItems>;

        if $i2 != 3 goto label7;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r4 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.caremark.caremark.util.flexbox.FlexLine) $r5;

        $i3 = -2147483648;

        $i2 = 0;

     label2:
        $i4 = $r6.<com.caremark.caremark.util.flexbox.FlexLine: int mItemCount>;

        if $i2 >= $i4 goto label6;

        $i4 = $r6.<com.caremark.caremark.util.flexbox.FlexLine: int mFirstIndex>;

        $i4 = $i4 + $i2;

        $r7 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i4);

        if $r7 == null goto label5;

        $i4 = virtualinvoke $r7.<android.view.View: int getVisibility()>();

        if $i4 != 8 goto label3;

        goto label5;

     label3:
        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r9 = (com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams) $r8;

        $i4 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i4 == 2 goto label4;

        $i4 = $r6.<com.caremark.caremark.util.flexbox.FlexLine: int mMaxBaseline>;

        $i5 = virtualinvoke $r7.<android.view.View: int getBaseline()>();

        $i4 = $i4 - $i5;

        $i5 = $r9.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $i5 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i5 + $i4;

        $i5 = $r9.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        goto label5;

     label4:
        $i4 = $r6.<com.caremark.caremark.util.flexbox.FlexLine: int mMaxBaseline>;

        $i5 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r7.<android.view.View: int getBaseline()>();

        $i4 = $i4 + $i5;

        $i5 = $r9.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $i5 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i6 = $r9.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i5 = $i5 + $i6;

        $i4 = $i5 + $i4;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

     label5:
        $i2 = $i2 + 1;

        goto label2;

     label6:
        $r6.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize> = $i3;

        goto label1;

     label7:
        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i2 = $i2 + $i3;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void determineCrossSize(int,int,int)>($i0, $i1, $i2);

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void stretchViews()>();

        $i2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        $i3 = $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: int mChildState>;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setMeasuredDimensionForFlex(int,int,int,int)>($i2, $i0, $i1, $i3);

        return;
    }

    private void measureVertical(int, int)
    {
        com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult $r2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r3;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        virtualinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: void reset()>();

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void calculateVerticalFlexLines(com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult,int,int)>($r2, $i0, $i1);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        $r1 = $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: java.util.List mFlexLines>;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines> = $r1;

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void determineMainSize(int,int)>($i0, $i1);

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void determineCrossSize(int,int,int)>($i0, $i1, $i2);

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        virtualinvoke $r3.<com.caremark.caremark.util.flexbox.FlexboxHelper: void stretchViews()>();

        $i2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult mFlexLinesResult>;

        $i3 = $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper$FlexLinesResult: int mChildState>;

        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setMeasuredDimensionForFlex(int,int,int,int)>($i2, $i0, $i1, $i3);

        return;
    }

    private void setMeasuredDimensionForFlex(int, int, int, int)
    {
        java.lang.IllegalStateException $r4;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i6 = $i5;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i2);

        $i8 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i2);

        if $i0 == 0 goto label03;

        if $i0 == 1 goto label03;

        if $i0 == 2 goto label02;

        if $i0 != 3 goto label01;

        goto label02;

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid flex direction: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label02:
        $i0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int getLargestMainSize()>();

        $i9 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int getSumOfCrossSize()>();

        $i10 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i9 = $i9 + $i10;

        $i10 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i9 = $i9 + $i10;

        goto label04;

     label03:
        $i0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int getSumOfCrossSize()>();

        $i9 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i0 = $i0 + $i9;

        $i9 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i0 = $i0 + $i9;

        $i9 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int getLargestMainSize()>();

     label04:
        if $i4 == -2147483648 goto label08;

        if $i4 == 0 goto label07;

        if $i4 != 1073741824 goto label06;

        if $i5 >= $i9 goto label05;

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, 16777216);

     label05:
        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i5, $i1, $i3);

        goto label11;

     label06:
        $r4 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown width mode is set: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label07:
        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i9, $i1, $i3);

        goto label11;

     label08:
        if $i5 >= $i9 goto label09;

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, 16777216);

        goto label10;

     label09:
        $i6 = $i9;

     label10:
        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i6, $i1, $i3);

     label11:
        if $i7 == -2147483648 goto label15;

        if $i7 == 0 goto label14;

        if $i7 != 1073741824 goto label13;

        if $i8 >= $i0 goto label12;

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, 256);

     label12:
        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i8, $i2, $i3);

        goto label17;

     label13:
        $r4 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown height mode is set: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label14:
        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i0, $i2, $i3);

        goto label17;

     label15:
        if $i8 >= $i0 goto label16;

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, 256);

        $i0 = $i8;

     label16:
        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i0, $i2, $i3);

     label17:
        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i1, $i0);

        return;
    }

    private void setWillNotDrawFlag()
    {
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal>;

        if $r1 != null goto label1;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical>;

        if $r1 != null goto label1;

        virtualinvoke r0.<android.view.ViewGroup: void setWillNotDraw(boolean)>(1);

        return;

     label1:
        virtualinvoke r0.<android.view.ViewGroup: void setWillNotDraw(boolean)>(0);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.util.SparseIntArray $r3;
        android.view.ViewGroup$LayoutParams $r2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r4;
        int[] $r5;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache>;

        if $r3 != null goto label1;

        $r3 = new android.util.SparseIntArray;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        specialinvoke $r3.<android.util.SparseIntArray: void <init>(int)>($i1);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache> = $r3;

     label1:
        $r4 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $r3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache>;

        $r5 = virtualinvoke $r4.<com.caremark.caremark.util.flexbox.FlexboxHelper: int[] createReorderedIndices(android.view.View,int,android.view.ViewGroup$LayoutParams,android.util.SparseIntArray)>($r1, $i0, $r2, $r3);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int[] mReorderedIndices> = $r5;

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }

    public boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams;

        return $z0;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.util.AttributeSet $r2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r2, $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams;

        $r3 = (com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams) $r1;

        specialinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams: void <init>(com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams)>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r2;

     label2:
        $r2 = new com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams;

        specialinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams $r2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    public int getAlignContent()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignContent>;

        return i0;
    }

    public int getAlignItems()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignItems>;

        return i0;
    }

    public int getChildHeightMeasureSpec(int, int, int)
    {
        int $i0, $i1, $i2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i2, $i0, $i1);

        return $i2;
    }

    public int getChildWidthMeasureSpec(int, int, int)
    {
        int $i0, $i1, $i2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i2, $i0, $i1);

        return $i2;
    }

    public int getDecorationLengthCrossAxis(android.view.View)
    {
        android.view.View $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getDecorationLengthMainAxis(android.view.View, int, int)
    {
        int $i0, $i1, $i2;
        android.view.View $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        $i2 = 0;

        if $z0 == 0 goto label2;

        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i2 = $i0;

     label1:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label5;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        goto label4;

     label2:
        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i0, $i1);

        if $z0 == 0 goto label3;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i2 = $i0;

     label3:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label5;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

     label4:
        $i0 = $i2 + $i0;

        return $i0;

     label5:
        return $i2;
    }

    public android.graphics.drawable.Drawable getDividerDrawableHorizontal()
    {
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal>;

        return r1;
    }

    public android.graphics.drawable.Drawable getDividerDrawableVertical()
    {
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical>;

        return r1;
    }

    public int getFlexDirection()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        return i0;
    }

    public android.view.View getFlexItemAt(int)
    {
        int $i0;
        android.view.View $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        return $r1;
    }

    public int getFlexItemCount()
    {
        int $i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        return $i0;
    }

    public java.util.List getFlexLines()
    {
        java.util.Iterator $r3;
        com.caremark.caremark.util.flexbox.FlexLine $r5;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        java.util.ArrayList $r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.caremark.caremark.util.flexbox.FlexLine) $r4;

        $i0 = virtualinvoke $r5.<com.caremark.caremark.util.flexbox.FlexLine: int getItemCountNotGone()>();

        if $i0 != 0 goto label2;

        goto label1;

     label2:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        return $r1;
    }

    public java.util.List getFlexLinesInternal()
    {
        java.util.List r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        return r1;
    }

    public int getFlexWrap()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        return i0;
    }

    public int getJustifyContent()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent>;

        return i0;
    }

    public int getLargestMainSize()
    {
        java.util.Iterator $r2;
        com.caremark.caremark.util.flexbox.FlexLine $r4;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $i0 = -2147483648;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.caremark.caremark.util.flexbox.FlexLine) $r3;

        $i1 = $r4.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        goto label1;

     label2:
        return $i0;
    }

    public int getMaxItemInRow()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int maxItemInRow>;

        return i0;
    }

    public int getMaxLine()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mMaxLine>;

        return i0;
    }

    public android.view.View getReorderedChildAt(int)
    {
        int[] $r1;
        int $i0, $i1;
        android.view.View $r2;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i1 := @parameter0: int;

        if $i1 < 0 goto label2;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int[] mReorderedIndices>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        goto label2;

     label1:
        $i1 = $r1[$i1];

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        return $r2;

     label2:
        return null;
    }

    public android.view.View getReorderedFlexItemAt(int)
    {
        int $i0;
        android.view.View $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.view.View getReorderedChildAt(int)>($i0);

        return $r1;
    }

    public int getShowDividerHorizontal()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        return i0;
    }

    public int getShowDividerVertical()
    {
        int i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        return i0;
    }

    public int getSumOfCrossSize()
    {
        com.caremark.caremark.util.flexbox.FlexLine $r3;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label8;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.caremark.caremark.util.flexbox.FlexLine) $r2;

        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeFlexLine(int)>($i1);

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label2;

        $i3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        goto label3;

     label2:
        $i3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

     label3:
        $i2 = $i2 + $i3;

     label4:
        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasEndDividerAfterFlexLine(int)>($i1);

        if $z0 == 0 goto label7;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label5;

        $i3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        goto label6;

     label5:
        $i3 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

     label6:
        $i2 = $i2 + $i3;

     label7:
        $i3 = $r3.<com.caremark.caremark.util.flexbox.FlexLine: int mCrossSize>;

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label8:
        return $i2;
    }

    public boolean isMainAxisDirectionHorizontal()
    {
        int $i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void onDraw(android.graphics.Canvas)
    {
        int $i0, $i1;
        android.graphics.Canvas $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r2;
        boolean $z0, $z1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical>;

        if $r2 != null goto label01;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal>;

        if $r2 != null goto label01;

        return;

     label01:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        if $i0 != 0 goto label02;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        if $i0 != 0 goto label02;

        return;

     label02:
        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        $z0 = 0;

        $z1 = 1;

        if $i1 == 0 goto label14;

        if $i1 == 1 goto label10;

        if $i1 == 2 goto label06;

        if $i1 == 3 goto label03;

        return;

     label03:
        if $i0 != 1 goto label04;

        $z0 = 1;

     label04:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i0 != 2 goto label05;

        $z0 = $z0 ^ 1;

     label05:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawDividersVertical(android.graphics.Canvas,boolean,boolean)>($r1, $z0, 1);

        return;

     label06:
        if $i0 != 1 goto label07;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i0 != 2 goto label09;

        $z1 = $z1 ^ 1;

     label09:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawDividersVertical(android.graphics.Canvas,boolean,boolean)>($r1, $z1, 0);

        return;

     label10:
        if $i0 == 1 goto label11;

        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i0 != 2 goto label13;

        $z0 = 1;

     label13:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawDividersHorizontal(android.graphics.Canvas,boolean,boolean)>($r1, $z1, $z0);

        return;

     label14:
        if $i0 != 1 goto label15;

        $z1 = 1;

        goto label16;

     label15:
        $z1 = 0;

     label16:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i0 != 2 goto label17;

        $z0 = 1;

     label17:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void drawDividersHorizontal(android.graphics.Canvas,boolean,boolean)>($r1, $z1, $z0);

        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        java.lang.IllegalStateException $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        $i5 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        $z0 = 0;

        if $i5 == 0 goto label10;

        if $i5 == 1 goto label07;

        if $i5 == 2 goto label04;

        if $i5 != 3 goto label03;

        if $i4 != 1 goto label01;

        $z0 = 1;

     label01:
        $i4 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i4 != 2 goto label02;

        $z0 = $z0 ^ 1;

        goto label02;

     label02:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void layoutVertical(boolean,boolean,int,int,int,int)>($z0, 1, $i0, $i1, $i2, $i3);

        return;

     label03:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid flex direction is set: ");

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label04:
        if $i4 != 1 goto label05;

        $z0 = 1;

     label05:
        $i4 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i4 != 2 goto label06;

        $z0 = $z0 ^ 1;

        goto label06;

     label06:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void layoutVertical(boolean,boolean,int,int,int,int)>($z0, 0, $i0, $i1, $i2, $i3);

        return;

     label07:
        if $i4 == 1 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void layoutHorizontal(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        return;

     label10:
        if $i4 != 1 goto label11;

        $z0 = 1;

        goto label12;

     label11:
        $z0 = 0;

     label12:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void layoutHorizontal(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        return;
    }

    public void onMeasure(int, int)
    {
        java.lang.IllegalStateException $r4;
        android.util.SparseIntArray $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        com.caremark.caremark.util.flexbox.FlexboxHelper $r2;
        int[] $r3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache>;

        if $r1 != null goto label1;

        $r1 = new android.util.SparseIntArray;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        specialinvoke $r1.<android.util.SparseIntArray: void <init>(int)>($i2);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache> = $r1;

     label1:
        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache>;

        $z0 = virtualinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper: boolean isOrderChangedFromLastMeasurement(android.util.SparseIntArray)>($r1);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: com.caremark.caremark.util.flexbox.FlexboxHelper mFlexboxHelper>;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.util.SparseIntArray mOrderCache>;

        $r3 = virtualinvoke $r2.<com.caremark.caremark.util.flexbox.FlexboxHelper: int[] createReorderedIndices(android.util.SparseIntArray)>($r1);

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int[] mReorderedIndices> = $r3;

     label2:
        $i2 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        if $i2 == 0 goto label5;

        if $i2 == 1 goto label5;

        if $i2 == 2 goto label4;

        if $i2 != 3 goto label3;

        goto label4;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for the flex direction is set: ");

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void measureVertical(int,int)>($i0, $i1);

        return;

     label5:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void measureHorizontal(int,int)>($i0, $i1);

        return;
    }

    public void onNewFlexItemAdded(android.view.View, int, int, com.caremark.caremark.util.flexbox.FlexLine)
    {
        int $i0, $i1;
        android.view.View $r2;
        com.caremark.caremark.util.flexbox.FlexLine $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r2 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: com.caremark.caremark.util.flexbox.FlexLine;

        $z0 = specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean hasDividerBeforeChildAtAlongMainAxis(int,int)>($i1, $i0);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label1;

        $i0 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i0 = $i0 + $i1;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize> = $i0;

        $i0 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize>;

        $i1 = $i0 + $i1;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize> = $i1;

        return;

     label1:
        $i0 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i0 = $i0 + $i1;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize> = $i0;

        $i0 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize>;

        $i1 = $i0 + $i1;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize> = $i1;

     label2:
        return;
    }

    public void onNewFlexLineAdded(com.caremark.caremark.util.flexbox.FlexLine)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexLine $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        boolean $z0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: com.caremark.caremark.util.flexbox.FlexLine;

        $z0 = virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: boolean isMainAxisDirectionHorizontal()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label2;

        $i1 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth>;

        $i1 = $i1 + $i0;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize> = $i1;

        $i1 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize>;

        $i0 = $i1 + $i0;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize> = $i0;

        return;

     label1:
        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label2;

        $i1 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize>;

        $i0 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight>;

        $i1 = $i1 + $i0;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mMainSize> = $i1;

        $i1 = $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize>;

        $i0 = $i1 + $i0;

        $r1.<com.caremark.caremark.util.flexbox.FlexLine: int mDividerLengthInMainSize> = $i0;

     label2:
        return;
    }

    public void setAlignContent(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignContent>;

        if $i1 == $i0 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignContent> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setAlignItems(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignItems>;

        if $i1 == $i0 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mAlignItems> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)>($r1);

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setDividerDrawableVertical(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
    {
        int $i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableHorizontal> = $r2;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight> = $i0;

        goto label3;

     label2:
        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerHorizontalHeight> = 0;

     label3:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setWillNotDrawFlag()>();

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setDividerDrawableVertical(android.graphics.drawable.Drawable)
    {
        int $i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: android.graphics.drawable.Drawable mDividerDrawableVertical> = $r2;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth> = $i0;

        goto label3;

     label2:
        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mDividerVerticalWidth> = 0;

     label3:
        specialinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setWillNotDrawFlag()>();

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setFlexDirection(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection>;

        if $i1 == $i0 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexDirection> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setFlexLines(java.util.List)
    {
        java.util.List $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $r1 := @parameter0: java.util.List;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: java.util.List mFlexLines> = $r1;

        return;
    }

    public void setFlexWrap(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap>;

        if $i1 == $i0 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mFlexWrap> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setJustifyContent(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent>;

        if $i1 == $i0 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mJustifyContent> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setMaxLine(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mMaxLine>;

        if $i1 == $i0 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mMaxLine> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setShowDivider(int)
    {
        int $i0;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setShowDividerVertical(int)>($i0);

        virtualinvoke r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: void setShowDividerHorizontal(int)>($i0);

        return;
    }

    public void setShowDividerHorizontal(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal>;

        if $i0 == $i1 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerHorizontal> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setShowDividerVertical(int)
    {
        int $i0, $i1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical>;

        if $i0 == $i1 goto label1;

        r0.<com.caremark.caremark.util.flexbox.FlexboxLayout: int mShowDividerVertical> = $i0;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void updateViewCache(int, android.view.View)
    {
        int $i0;
        android.view.View $r1;
        com.caremark.caremark.util.flexbox.FlexboxLayout r0;

        r0 := @this: com.caremark.caremark.util.flexbox.FlexboxLayout;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        return;
    }

    public static void <clinit>()
    {
        <com.caremark.caremark.util.flexbox.FlexboxLayout: int SHOW_DIVIDER_MIDDLE> = 2;

        <com.caremark.caremark.util.flexbox.FlexboxLayout: int SHOW_DIVIDER_END> = 4;

        <com.caremark.caremark.util.flexbox.FlexboxLayout: int SHOW_DIVIDER_BEGINNING> = 1;

        return;
    }
}
