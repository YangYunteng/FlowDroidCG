public class com.crashlytics.android.core.CrashlyticsCore extends f.a.a.a.l
{
    public static final float CLS_DEFAULT_PROCESS_DELAY;
    public static final java.lang.String CRASHLYTICS_REQUIRE_BUILD_ID;
    public static final boolean CRASHLYTICS_REQUIRE_BUILD_ID_DEFAULT;
    public static final java.lang.String CRASH_MARKER_FILE_NAME;
    public static final int DEFAULT_MAIN_HANDLER_TIMEOUT_SEC;
    public static final java.lang.String INITIALIZATION_MARKER_FILE_NAME;
    public static final int MAX_ATTRIBUTES;
    public static final int MAX_ATTRIBUTE_SIZE;
    public static final java.lang.String MISSING_BUILD_ID_MSG;
    public static final java.lang.String PREFERENCE_STORE_NAME;
    public static final java.lang.String TAG;
    public final java.util.concurrent.ConcurrentHashMap attributes;
    public com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker;
    public com.crashlytics.android.core.CrashlyticsController controller;
    public com.crashlytics.android.core.CrashlyticsFileMarker crashMarker;
    public com.crashlytics.android.core.CrashlyticsNdkDataProvider crashlyticsNdkDataProvider;
    public float delay;
    public boolean disabled;
    public f.a.a.a.a.e.g httpRequestFactory;
    public com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker;
    public com.crashlytics.android.core.CrashlyticsListener listener;
    public final com.crashlytics.android.core.PinningInfoProvider pinningInfo;
    public final long startTime;
    public java.lang.String userEmail;
    public java.lang.String userId;
    public java.lang.String userName;

    public void <init>()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void <init>(float,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.PinningInfoProvider,boolean)>(1.0F, null, null, 0);

        return;
    }

    public void <init>(float, com.crashlytics.android.core.CrashlyticsListener, com.crashlytics.android.core.PinningInfoProvider, boolean)
    {
        com.crashlytics.android.core.PinningInfoProvider $r2;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsListener $r1;
        float $f0;
        java.util.concurrent.ExecutorService $r3;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.crashlytics.android.core.CrashlyticsListener;

        $r2 := @parameter2: com.crashlytics.android.core.PinningInfoProvider;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <f.a.a.a.a.b.u: java.util.concurrent.ExecutorService a(java.lang.String)>("Crashlytics Exception Handler");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void <init>(float,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.PinningInfoProvider,boolean,java.util.concurrent.ExecutorService)>($f0, $r1, $r2, $z0, $r3);

        return;
    }

    public void <init>(float, com.crashlytics.android.core.CrashlyticsListener, com.crashlytics.android.core.PinningInfoProvider, boolean, java.util.concurrent.ExecutorService)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.util.concurrent.ConcurrentHashMap $r6;
        long $l0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r5;
        com.crashlytics.android.core.PinningInfoProvider $r1;
        com.crashlytics.android.core.CrashlyticsListener $r3;
        float $f0;
        com.crashlytics.android.core.CrashlyticsCore$NoOpListener $r4;
        java.util.concurrent.ExecutorService $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        $r3 := @parameter1: com.crashlytics.android.core.CrashlyticsListener;

        $r1 := @parameter2: com.crashlytics.android.core.PinningInfoProvider;

        $z0 := @parameter3: boolean;

        $r2 := @parameter4: java.util.concurrent.ExecutorService;

        specialinvoke r0.<f.a.a.a.l: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: float delay> = $f0;

        if $r3 == null goto label1;

        goto label2;

     label1:
        $r4 = new com.crashlytics.android.core.CrashlyticsCore$NoOpListener;

        $r3 = $r4;

        specialinvoke $r4.<com.crashlytics.android.core.CrashlyticsCore$NoOpListener: void <init>(com.crashlytics.android.core.CrashlyticsCore$1)>(null);

     label2:
        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener> = $r3;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled> = $z0;

        $r5 = new com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: void <init>(java.util.concurrent.ExecutorService)>($r2);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker> = $r5;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes> = $r6;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: long startTime> = $l0;

        return;
    }

    public static com.crashlytics.android.core.CrashlyticsFileMarker access$100(com.crashlytics.android.core.CrashlyticsCore)
    {
        com.crashlytics.android.core.CrashlyticsFileMarker r1;
        com.crashlytics.android.core.CrashlyticsCore $r0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker>;

        return r1;
    }

    private void checkForPreviousCrash()
    {
        f.a.a.a.o $r9;
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Exception $r8;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsListener $r7;
        java.lang.Boolean $r5, $r6;
        java.lang.Object $r4;
        com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck $r2;
        com.crashlytics.android.core.CrashlyticsFileMarker $r3;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker crashMarker>;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck: void <init>(com.crashlytics.android.core.CrashlyticsFileMarker)>($r3);

        $r4 = virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener>;

        interfaceinvoke $r7.<com.crashlytics.android.core.CrashlyticsListener: void crashlyticsDidDetectCrashDuringPreviousExecution()>();

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        $r9 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r9.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Exception thrown by CrashlyticsListener while notifying of previous crash.", $r8);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void doLog(int, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r3;
        long $l1, $l2;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to logging messages.");

        if $z0 != 0 goto label2;

        return;

     label2:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<com.crashlytics.android.core.CrashlyticsCore: long startTime>;

        $l1 = $l1 - $l2;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String formatLogMessage(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void writeToLog(long,java.lang.String)>($l1, $r1);

        return;
    }

    public static boolean ensureFabricWithCalled(java.lang.String)
    {
        f.a.a.a.o $r3;
        com.crashlytics.android.core.CrashlyticsCore $r1;
        com.crashlytics.android.core.CrashlyticsController $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsCore getInstance()>();

        if $r1 == null goto label2;

        $r2 = $r1.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        if $r2 != null goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics must be initialized by calling Fabric.with(Context) ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r0, null);

        return 0;
    }

    private void finishInitSynchronously()
    {
        f.a.a.a.o $r9;
        com.crashlytics.android.core.CrashlyticsCore$1 $r1;
        java.util.Iterator $r3;
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.util.Collection $r2;
        java.util.concurrent.TimeoutException $r11;
        f.a.a.a.a.c.t $r5;
        java.util.concurrent.TimeUnit $r10;
        java.util.concurrent.ExecutionException $r12;
        java.util.concurrent.Future $r8;
        f.a.a.a.f $r6;
        java.lang.InterruptedException $r13;
        java.lang.Object $r4;
        java.util.concurrent.ExecutorService $r7;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = new com.crashlytics.android.core.CrashlyticsCore$1;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore$1: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r2 = virtualinvoke r0.<f.a.a.a.l: java.util.Collection getDependencies()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (f.a.a.a.a.c.t) $r4;

        virtualinvoke $r1.<f.a.a.a.a.c.r: void addDependency(f.a.a.a.a.c.t)>($r5);

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<f.a.a.a.l: f.a.a.a.f getFabric()>();

        $r7 = virtualinvoke $r6.<f.a.a.a.f: java.util.concurrent.ExecutorService b()>();

        $r8 = interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r1);

        $r9 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r9.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics detected incomplete initialization on previous app launch. Will initialize synchronously.");

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label3:
        interfaceinvoke $r8.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r10);

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        $r9 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r9.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics timed out during initialization.", $r11);

        return;

     label6:
        $r12 := @caughtexception;

        $r9 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r9.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Problem encountered during Crashlytics initialization.", $r12);

        return;

     label7:
        $r13 := @caughtexception;

        $r9 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r9.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics was interrupted during initialization.", $r13);

        return;

        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.util.concurrent.ExecutionException from label3 to label4 with label6;
        catch java.util.concurrent.TimeoutException from label3 to label4 with label5;
    }

    public static java.lang.String formatLogMessage(int, java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1, $r3;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <f.a.a.a.a.b.l: java.lang.String a(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static com.crashlytics.android.core.CrashlyticsCore getInstance()
    {
        com.crashlytics.android.core.CrashlyticsCore $r1;
        f.a.a.a.l $r0;

        $r0 = staticinvoke <f.a.a.a.f: f.a.a.a.l a(java.lang.Class)>(class "Lcom/crashlytics/android/core/CrashlyticsCore;");

        $r1 = (com.crashlytics.android.core.CrashlyticsCore) $r0;

        return $r1;
    }

    public static boolean isBuildIdValid(java.lang.String, boolean)
    {
        f.a.a.a.o $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r1.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Configured not to require a build ID.");

        return 1;

     label1:
        $z0 = staticinvoke <f.a.a.a.a.b.l: boolean b(java.lang.String)>($r0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  | ");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".   \\ |  | /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".    \\    /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     \\  /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".      \\/");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", "The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app\'s build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".      /\\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     /  \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".    /    \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".   / |  | \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        return 0;
    }

    public static java.lang.String sanitizeAttribute(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1024 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1024);

     label1:
        return $r0;
    }

    public void crash()
    {
        com.crashlytics.android.core.CrashTest $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = new com.crashlytics.android.core.CrashTest;

        specialinvoke $r1.<com.crashlytics.android.core.CrashTest: void <init>()>();

        virtualinvoke $r1.<com.crashlytics.android.core.CrashTest: void indexOutOfBounds()>();

        return;
    }

    public void createCrashMarker()
    {
        com.crashlytics.android.core.CrashlyticsFileMarker $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker crashMarker>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsFileMarker: boolean create()>();

        return;
    }

    public boolean didPreviousInitializationFail()
    {
        com.crashlytics.android.core.CrashlyticsFileMarker $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker>;

        $z0 = virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsFileMarker: boolean isPresent()>();

        return $z0;
    }

    public volatile java.lang.Object doInBackground()
    {
        java.lang.Void $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.Void doInBackground()>();

        return $r1;
    }

    public java.lang.Void doInBackground()
    {
        f.a.a.a.a.b.o $r7;
        java.lang.Throwable $r10;
        android.content.Context $r6;
        f.a.a.a.o $r4;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r1;
        f.a.a.a.a.g.q $r9;
        f.a.a.a.a.g.n $r5;
        java.lang.Exception $r11;
        f.a.a.a.a.g.v $r3;
        f.a.a.a.a.g.s $r2;
        float $f0;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsNdkData $r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationStarted()>();

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsController: void cleanInvalidTempFiles()>();

     label01:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsController: void registerDevicePowerStateListener()>();

        $r2 = staticinvoke <f.a.a.a.a.g.s: f.a.a.a.a.g.s b()>();

        $r3 = virtualinvoke $r2.<f.a.a.a.a.g.s: f.a.a.a.a.g.v a()>();

     label02:
        if $r3 != null goto label05;

     label03:
        $r4 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r4.<f.a.a.a.o: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Received null settings, skipping report submission!");

     label04:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label05:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsController: void registerAnalyticsEventListener(f.a.a.a.a.g.v)>($r3);

        $r5 = $r3.<f.a.a.a.a.g.v: f.a.a.a.a.g.n d>;

        $z0 = $r5.<f.a.a.a.a.g.n: boolean c>;

     label06:
        if $z0 != 0 goto label09;

     label07:
        $r4 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r4.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Collection of crash reports disabled in Crashlytics settings.");

     label08:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label09:
        $r6 = virtualinvoke r0.<f.a.a.a.l: android.content.Context getContext()>();

        $r7 = staticinvoke <f.a.a.a.a.b.o: f.a.a.a.a.b.o a(android.content.Context)>($r6);

        $z0 = virtualinvoke $r7.<f.a.a.a.a.b.o: boolean a()>();

     label10:
        if $z0 != 0 goto label13;

     label11:
        $r4 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r4.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Automatic collection of crash reports disabled by Firebase settings.");

     label12:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label13:
        $r8 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsNdkData getNativeCrashData()>();

     label14:
        if $r8 == null goto label18;

     label15:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $z0 = virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsController: boolean finalizeNativeReport(com.crashlytics.android.core.CrashlyticsNdkData)>($r8);

     label16:
        if $z0 != 0 goto label18;

     label17:
        $r4 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r4.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Could not finalize previous NDK sessions.");

     label18:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r9 = $r3.<f.a.a.a.a.g.v: f.a.a.a.a.g.q b>;

        $z0 = virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsController: boolean finalizeSessions(f.a.a.a.a.g.q)>($r9);

     label19:
        if $z0 != 0 goto label21;

     label20:
        $r4 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r4.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Could not finalize previous sessions.");

     label21:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $f0 = r0.<com.crashlytics.android.core.CrashlyticsCore: float delay>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsController: void submitAllReports(float,f.a.a.a.a.g.v)>($f0, $r3);

     label22:
        goto label26;

     label23:
        $r10 := @caughtexception;

        goto label27;

     label24:
        $r11 := @caughtexception;

     label25:
        $r4 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r4.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics encountered a problem during asynchronous initialization.", $r11);

     label26:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label27:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        throw $r10;

        catch java.lang.Exception from label01 to label02 with label24;
        catch java.lang.Exception from label03 to label04 with label24;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Exception from label05 to label06 with label24;
        catch java.lang.Exception from label07 to label08 with label24;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label24;
        catch java.lang.Exception from label11 to label12 with label24;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label14 with label24;
        catch java.lang.Exception from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label19 with label24;
        catch java.lang.Exception from label20 to label22 with label24;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label19 with label23;
        catch java.lang.Throwable from label20 to label22 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
    }

    public java.util.Map getAttributes()
    {
        java.util.concurrent.ConcurrentHashMap $r2;
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.util.Map $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        return $r1;
    }

    public com.crashlytics.android.core.CrashlyticsController getController()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        return r1;
    }

    public java.lang.String getIdentifier()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        return "com.crashlytics.sdk.android.crashlytics-core";
    }

    public com.crashlytics.android.core.CrashlyticsNdkData getNativeCrashData()
    {
        com.crashlytics.android.core.CrashlyticsNdkDataProvider $r2;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsNdkData $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsNdkDataProvider crashlyticsNdkDataProvider>;

        if $r2 == null goto label1;

        $r1 = interfaceinvoke $r2.<com.crashlytics.android.core.CrashlyticsNdkDataProvider: com.crashlytics.android.core.CrashlyticsNdkData getCrashlyticsNdkData()>();

        return $r1;

     label1:
        return null;
    }

    public com.crashlytics.android.core.PinningInfoProvider getPinningInfoProvider()
    {
        com.crashlytics.android.core.PinningInfoProvider r1;
        com.crashlytics.android.core.CrashlyticsCore r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        return r1;

     label1:
        return null;
    }

    public java.lang.String getUserEmail()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        f.a.a.a.a.b.y $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<f.a.a.a.l: f.a.a.a.a.b.y getIdManager()>();

        $z0 = virtualinvoke $r1.<f.a.a.a.a.b.y: boolean a()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        return r2;

     label1:
        return null;
    }

    public java.lang.String getUserIdentifier()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        f.a.a.a.a.b.y $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<f.a.a.a.l: f.a.a.a.a.b.y getIdManager()>();

        $z0 = virtualinvoke $r1.<f.a.a.a.a.b.y: boolean a()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        return r2;

     label1:
        return null;
    }

    public java.lang.String getUserName()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        f.a.a.a.a.b.y $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<f.a.a.a.l: f.a.a.a.a.b.y getIdManager()>();

        $z0 = virtualinvoke $r1.<f.a.a.a.a.b.y: boolean a()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        return r2;

     label1:
        return null;
    }

    public java.lang.String getVersion()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        return "2.7.0.33";
    }

    public boolean internalVerifyPinning(java.net.URL)
    {
        java.net.HttpURLConnection $r7;
        javax.net.ssl.HttpsURLConnection $r8;
        io.fabric.sdk.android.services.network.HttpRequest $r6;
        com.crashlytics.android.core.CrashlyticsCore r0;
        f.a.a.a.a.e.g $r4;
        java.net.URL $r2;
        com.crashlytics.android.core.PinningInfoProvider $r3;
        f.a.a.a.a.e.d $r1;
        java.lang.String $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 := @parameter0: java.net.URL;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider getPinningInfoProvider()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: f.a.a.a.a.e.g httpRequestFactory>;

        $r1 = <f.a.a.a.a.e.d: f.a.a.a.a.e.d a>;

        $r5 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        $r6 = interfaceinvoke $r4.<f.a.a.a.a.e.g: io.fabric.sdk.android.services.network.HttpRequest a(f.a.a.a.a.e.d,java.lang.String)>($r1, $r5);

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection l()>();

        $r8 = (javax.net.ssl.HttpsURLConnection) $r7;

        virtualinvoke $r8.<javax.net.ssl.HttpsURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: int g()>();

        return 1;

     label1:
        return 0;
    }

    public void log(int, java.lang.String, java.lang.String)
    {
        f.a.a.a.o $r3;
        com.crashlytics.android.core.CrashlyticsCore r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void doLog(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<f.a.a.a.o: void a(int,java.lang.String,java.lang.String,boolean)>($i0, $r1, $r2, 1);

        return;
    }

    public void log(java.lang.String)
    {
        java.lang.String $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void doLog(int,java.lang.String,java.lang.String)>(3, "CrashlyticsCore", $r1);

        return;
    }

    public void logException(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        f.a.a.a.o $r2;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r3;
        java.lang.Thread $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to logging exceptions.");

        if $z0 != 0 goto label2;

        return;

     label2:
        if $r1 != null goto label3;

        $r2 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r2.<f.a.a.a.o: void a(int,java.lang.String,java.lang.String)>(5, "CrashlyticsCore", "Crashlytics is ignoring a request to log a null exception.");

        return;

     label3:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void writeNonFatalException(java.lang.Thread,java.lang.Throwable)>($r4, $r1);

        return;
    }

    public void markInitializationComplete()
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsCore$3 $r2;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$3;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$3: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2);

        return;
    }

    public void markInitializationStarted()
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsCore$2 $r2;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$2;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$2: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r2);

        return;
    }

    public boolean onPreExecute()
    {
        android.content.Context $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = specialinvoke r0.<f.a.a.a.l: android.content.Context getContext()>();

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean onPreExecute(android.content.Context)>($r1);

        return $z0;
    }

    public boolean onPreExecute(android.content.Context)
    {
        io.fabric.sdk.android.services.concurrency.UnmetDependencyException $r29;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r25;
        com.crashlytics.android.core.CrashlyticsPinningInfoProvider $r17;
        f.a.a.a.a.f.b $r2;
        com.crashlytics.android.core.CrashlyticsFileMarker $r12;
        boolean $z0, $z1;
        f.a.a.a.a.b.o $r5;
        f.a.a.a.o $r6;
        com.crashlytics.android.core.ManifestUnityVersionProvider $r22;
        f.a.a.a.a.b.i $r7;
        f.a.a.a.a.f.d $r13;
        java.lang.Exception $r28;
        com.crashlytics.android.core.PinningInfoProvider $r16;
        com.crashlytics.android.answers.EventLogger $r23;
        f.a.a.a.a.b.y $r20;
        f.a.a.a.a.b.x $r26;
        java.lang.StringBuilder $r10;
        com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar $r4;
        android.content.Context $r1, $r14;
        com.crashlytics.android.core.ResourceUnityVersionProvider $r3;
        com.crashlytics.android.core.CrashlyticsController $r24;
        java.lang.Thread$UncaughtExceptionHandler $r27;
        f.a.a.a.a.e.c $r18;
        java.lang.String $r8, $r9, $r11;
        f.a.a.a.a.e.g $r19;
        com.crashlytics.android.core.AppData $r21;
        com.crashlytics.android.core.PreferenceManager $r15;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: android.content.Context;

        $r5 = staticinvoke <f.a.a.a.a.b.o: f.a.a.a.a.b.o a(android.content.Context)>($r1);

        $z0 = virtualinvoke $r5.<f.a.a.a.a.b.o: boolean a()>();

        if $z0 != 0 goto label01;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics is disabled, because data collection is disabled by Firebase.");

        r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled> = 1;

     label01:
        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label02;

        return 0;

     label02:
        $r7 = new f.a.a.a.a.b.i;

        specialinvoke $r7.<f.a.a.a.a.b.i: void <init>()>();

        $r8 = virtualinvoke $r7.<f.a.a.a.a.b.i: java.lang.String d(android.content.Context)>($r1);

        if $r8 != null goto label03;

        return 0;

     label03:
        $r9 = staticinvoke <f.a.a.a.a.b.l: java.lang.String n(android.content.Context)>($r1);

        $z0 = staticinvoke <f.a.a.a.a.b.l: boolean a(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.RequireBuildId", 1);

        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean isBuildIdValid(java.lang.String,boolean)>($r9, $z0);

        if $z0 == 0 goto label36;

     label04:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

     label05:
        $r10 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing Crashlytics Core ");

        $r11 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersion()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<f.a.a.a.o: void e(java.lang.String,java.lang.String)>("CrashlyticsCore", $r11);

     label07:
        $r2 = new f.a.a.a.a.f.b;

     label08:
        specialinvoke $r2.<f.a.a.a.a.f.b: void <init>(f.a.a.a.l)>(r0);

     label09:
        $r12 = new com.crashlytics.android.core.CrashlyticsFileMarker;

     label10:
        specialinvoke $r12.<com.crashlytics.android.core.CrashlyticsFileMarker: void <init>(java.lang.String,f.a.a.a.a.f.a)>("crash_marker", $r2);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker crashMarker> = $r12;

     label11:
        $r12 = new com.crashlytics.android.core.CrashlyticsFileMarker;

     label12:
        specialinvoke $r12.<com.crashlytics.android.core.CrashlyticsFileMarker: void <init>(java.lang.String,f.a.a.a.a.f.a)>("initialization_marker", $r2);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker> = $r12;

     label13:
        $r13 = new f.a.a.a.a.f.d;

     label14:
        $r14 = virtualinvoke r0.<f.a.a.a.l: android.content.Context getContext()>();

        specialinvoke $r13.<f.a.a.a.a.f.d: void <init>(android.content.Context,java.lang.String)>($r14, "com.crashlytics.android.core.CrashlyticsCore");

        $r15 = staticinvoke <com.crashlytics.android.core.PreferenceManager: com.crashlytics.android.core.PreferenceManager create(f.a.a.a.a.f.c,com.crashlytics.android.core.CrashlyticsCore)>($r13, r0);

        $r16 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

     label15:
        if $r16 == null goto label18;

        $r17 = new com.crashlytics.android.core.CrashlyticsPinningInfoProvider;

     label16:
        $r16 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        specialinvoke $r17.<com.crashlytics.android.core.CrashlyticsPinningInfoProvider: void <init>(com.crashlytics.android.core.PinningInfoProvider)>($r16);

     label17:
        goto label19;

     label18:
        $r17 = null;

     label19:
        $r18 = new f.a.a.a.a.e.c;

     label20:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        specialinvoke $r18.<f.a.a.a.a.e.c: void <init>(f.a.a.a.o)>($r6);

        r0.<com.crashlytics.android.core.CrashlyticsCore: f.a.a.a.a.e.g httpRequestFactory> = $r18;

        $r19 = r0.<com.crashlytics.android.core.CrashlyticsCore: f.a.a.a.a.e.g httpRequestFactory>;

        interfaceinvoke $r19.<f.a.a.a.a.e.g: void a(f.a.a.a.a.e.i)>($r17);

        $r20 = virtualinvoke r0.<f.a.a.a.l: f.a.a.a.a.b.y getIdManager()>();

        $r21 = staticinvoke <com.crashlytics.android.core.AppData: com.crashlytics.android.core.AppData create(android.content.Context,f.a.a.a.a.b.y,java.lang.String,java.lang.String)>($r1, $r20, $r8, $r9);

     label21:
        $r3 = new com.crashlytics.android.core.ResourceUnityVersionProvider;

        $r22 = new com.crashlytics.android.core.ManifestUnityVersionProvider;

     label22:
        $r8 = $r21.<com.crashlytics.android.core.AppData: java.lang.String packageName>;

        specialinvoke $r22.<com.crashlytics.android.core.ManifestUnityVersionProvider: void <init>(android.content.Context,java.lang.String)>($r1, $r8);

        specialinvoke $r3.<com.crashlytics.android.core.ResourceUnityVersionProvider: void <init>(android.content.Context,com.crashlytics.android.core.UnityVersionProvider)>($r1, $r22);

     label23:
        $r4 = new com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar;

     label24:
        specialinvoke $r4.<com.crashlytics.android.core.DefaultAppMeasurementEventListenerRegistrar: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r23 = staticinvoke <com.crashlytics.android.answers.AppMeasurementEventLogger: com.crashlytics.android.answers.EventLogger getEventLogger(android.content.Context)>($r1);

     label25:
        $r24 = new com.crashlytics.android.core.CrashlyticsController;

     label26:
        $r25 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r19 = r0.<com.crashlytics.android.core.CrashlyticsCore: f.a.a.a.a.e.g httpRequestFactory>;

        specialinvoke $r24.<com.crashlytics.android.core.CrashlyticsController: void <init>(com.crashlytics.android.core.CrashlyticsCore,com.crashlytics.android.core.CrashlyticsBackgroundWorker,f.a.a.a.a.e.g,f.a.a.a.a.b.y,com.crashlytics.android.core.PreferenceManager,f.a.a.a.a.f.a,com.crashlytics.android.core.AppData,com.crashlytics.android.core.UnityVersionProvider,com.crashlytics.android.core.AppMeasurementEventListenerRegistrar,com.crashlytics.android.answers.EventLogger)>(r0, $r25, $r19, $r20, $r15, $r2, $r21, $r3, $r4, $r23);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller> = $r24;

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean didPreviousInitializationFail()>();

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void checkForPreviousCrash()>();

     label27:
        $r26 = new f.a.a.a.a.b.x;

     label28:
        specialinvoke $r26.<f.a.a.a.a.b.x: void <init>()>();

        $z1 = virtualinvoke $r26.<f.a.a.a.a.b.x: boolean e(android.content.Context)>($r1);

        $r24 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r27 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        virtualinvoke $r24.<com.crashlytics.android.core.CrashlyticsController: void enableExceptionHandling(java.lang.Thread$UncaughtExceptionHandler,boolean)>($r27, $z1);

     label29:
        if $z0 == 0 goto label34;

     label30:
        $z0 = staticinvoke <f.a.a.a.a.b.l: boolean b(android.content.Context)>($r1);

     label31:
        if $z0 == 0 goto label34;

     label32:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics did not finish previous background initialization. Initializing synchronously.");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void finishInitSynchronously()>();

     label33:
        return 0;

     label34:
        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r6.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Exception handling initialization successful");

        return 1;

     label35:
        $r28 := @caughtexception;

        $r6 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r6.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics was not started due to an exception during initialization", $r28);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller> = null;

        return 0;

     label36:
        $r29 = new io.fabric.sdk.android.services.concurrency.UnmetDependencyException;

        specialinvoke $r29.<io.fabric.sdk.android.services.concurrency.UnmetDependencyException: void <init>(java.lang.String)>("The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app\'s build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.");

        throw $r29;

        catch java.lang.Exception from label04 to label05 with label35;
        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Exception from label08 to label09 with label35;
        catch java.lang.Exception from label10 to label11 with label35;
        catch java.lang.Exception from label12 to label13 with label35;
        catch java.lang.Exception from label14 to label15 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label20 to label21 with label35;
        catch java.lang.Exception from label22 to label23 with label35;
        catch java.lang.Exception from label24 to label25 with label35;
        catch java.lang.Exception from label26 to label27 with label35;
        catch java.lang.Exception from label28 to label29 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Exception from label32 to label33 with label35;
    }

    public void setBool(java.lang.String, boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setCrashlyticsNdkDataProvider(com.crashlytics.android.core.CrashlyticsNdkDataProvider)
    {
        com.crashlytics.android.core.CrashlyticsNdkDataProvider $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsNdkDataProvider;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsNdkDataProvider crashlyticsNdkDataProvider> = $r1;

        return;
    }

    public void setDouble(java.lang.String, double)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        double $d0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setFloat(java.lang.String, float)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        float $f0;
        java.lang.String $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setInt(java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setListener(com.crashlytics.android.core.CrashlyticsListener)
    {
        java.lang.Throwable $r4;
        f.a.a.a.o $r1;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsListener $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 := @parameter0: com.crashlytics.android.core.CrashlyticsListener;

        entermonitor r0;

     label1:
        $r1 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r1.<f.a.a.a.o: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Use of setListener is deprecated.");

        if $r2 == null goto label3;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener> = $r2;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener must not be null.");

        throw $r3;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public void setLong(java.lang.String, long)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        long $l0;
        java.lang.String $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setString(java.lang.String, java.lang.String)
    {
        android.content.Context $r3;
        f.a.a.a.o $r5;
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r7;
        java.util.concurrent.ConcurrentHashMap $r6;
        java.lang.IllegalArgumentException $r4;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting keys.");

        if $z0 != 0 goto label2;

        return;

     label2:
        if $r1 != null goto label5;

        $r3 = virtualinvoke r0.<f.a.a.a.l: android.content.Context getContext()>();

        if $r3 == null goto label4;

        $z0 = staticinvoke <f.a.a.a.a.b.l: boolean j(android.content.Context)>($r3);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Custom attribute key must not be null.");

        throw $r4;

     label4:
        $r5 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r5.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Attempting to set custom attribute with null key, ignoring.", null);

        return;

     label5:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: int size()>();

        if $i0 < 64 goto label6;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label6;

        $r5 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r5.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Exceeded maximum number of custom attributes (64)");

        return;

     label6:
        if $r2 != null goto label7;

        $r2 = "";

        goto label8;

     label7:
        $r2 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r2);

     label8:
        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsController: void cacheKeyData(java.util.Map)>($r6);

        return;
    }

    public void setUserEmail(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r3;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting user data.");

        if $z0 != 0 goto label2;

        return;

     label2:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail> = $r1;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r2);

        return;
    }

    public void setUserIdentifier(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r3;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting user data.");

        if $z0 != 0 goto label2;

        return;

     label2:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId> = $r1;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r2);

        return;
    }

    public void setUserName(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController $r3;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting user data.");

        if $z0 != 0 goto label2;

        return;

     label2:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName> = $r1;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r2);

        return;
    }

    public boolean verifyPinning(java.net.URL)
    {
        f.a.a.a.o $r3;
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.net.URL $r1;
        java.lang.Exception $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.net.URL;

     label1:
        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean internalVerifyPinning(java.net.URL)>($r1);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <f.a.a.a.f: f.a.a.a.o e()>();

        interfaceinvoke $r3.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Could not verify SSL pinning", $r2);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.crashlytics.android.core.CrashlyticsCore: java.lang.String TAG> = "CrashlyticsCore";

        <com.crashlytics.android.core.CrashlyticsCore: java.lang.String PREFERENCE_STORE_NAME> = "com.crashlytics.android.core.CrashlyticsCore";

        <com.crashlytics.android.core.CrashlyticsCore: java.lang.String MISSING_BUILD_ID_MSG> = "The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app\'s build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.";

        <com.crashlytics.android.core.CrashlyticsCore: int MAX_ATTRIBUTE_SIZE> = 1024;

        <com.crashlytics.android.core.CrashlyticsCore: int MAX_ATTRIBUTES> = 64;

        <com.crashlytics.android.core.CrashlyticsCore: java.lang.String INITIALIZATION_MARKER_FILE_NAME> = "initialization_marker";

        <com.crashlytics.android.core.CrashlyticsCore: int DEFAULT_MAIN_HANDLER_TIMEOUT_SEC> = 4;

        <com.crashlytics.android.core.CrashlyticsCore: java.lang.String CRASH_MARKER_FILE_NAME> = "crash_marker";

        <com.crashlytics.android.core.CrashlyticsCore: boolean CRASHLYTICS_REQUIRE_BUILD_ID_DEFAULT> = 1;

        <com.crashlytics.android.core.CrashlyticsCore: java.lang.String CRASHLYTICS_REQUIRE_BUILD_ID> = "com.crashlytics.RequireBuildId";

        <com.crashlytics.android.core.CrashlyticsCore: float CLS_DEFAULT_PROCESS_DELAY> = 1.0F;

        return;
    }
}
