public class com.google.common.collect.AbstractMapBasedMultimap$AsMap extends com.google.common.collect.Maps$ViewCachingAbstractMap
{
    public final transient java.util.Map submap;
    public final com.google.common.collect.AbstractMapBasedMultimap this$0;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap, java.util.Map)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.Map $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $r2 := @parameter1: java.util.Map;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.Maps$ViewCachingAbstractMap: void <init>()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap> = $r2;

        return;
    }

    public void clear()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        com.google.common.collect.AbstractMapBasedMultimap $r3;
        java.util.Map $r1, $r2;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r1 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap)>($r3);

        if $r2 != $r1 goto label1;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        virtualinvoke $r3.<com.google.common.collect.AbstractMapBasedMultimap: void clear()>();

        return;

     label1:
        $r4 = new com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        specialinvoke $r4.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap)>(r0);

        staticinvoke <com.google.common.collect.Iterators: void clear(java.util.Iterator)>($r4);

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $z0 = staticinvoke <com.google.common.collect.Maps: boolean safeContainsKey(java.util.Map,java.lang.Object)>($r1, $r2);

        return $z0;
    }

    public java.util.Set createEntrySet()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap)>(r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.lang.Object;

        if r0 == $r2 goto label2;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.lang.Object $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Collection get(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Collection get(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.Map $r3;
        java.util.Collection $r5;
        java.lang.Object $r2, $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r4 = staticinvoke <com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>($r3, $r2);

        $r5 = (java.util.Collection) $r4;

        if $r5 != null goto label1;

        return null;

     label1:
        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r5 = virtualinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection wrapCollection(java.lang.Object,java.util.Collection)>($r2, $r5);

        return $r5;
    }

    public int hashCode()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.util.Set $r1;
        com.google.common.collect.AbstractMapBasedMultimap $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.AbstractMultimap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.lang.Object $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Collection remove(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Collection remove(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.util.Collection $r4, $r5;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.Map $r3;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        $r4 = (java.util.Collection) $r2;

        if $r4 != null goto label1;

        return null;

     label1:
        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r5 = virtualinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection()>();

        interfaceinvoke $r5.<java.util.Collection: boolean addAll(java.util.Collection)>($r4);

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $i0 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$200(com.google.common.collect.AbstractMapBasedMultimap)>($r1);

        $i1 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        $i0 = $i0 - $i1;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$202(com.google.common.collect.AbstractMapBasedMultimap,int)>($r1, $i0);

        interfaceinvoke $r4.<java.util.Collection: void clear()>();

        return $r5;
    }

    public int size()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        java.lang.String $r1;
        java.util.Map $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public java.util.Map$Entry wrapEntry(java.util.Map$Entry)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r0;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.Map$Entry $r2;
        java.util.Collection $r5;
        java.lang.Object $r3, $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 := @parameter0: java.util.Map$Entry;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.util.Collection) $r4;

        $r5 = virtualinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection wrapCollection(java.lang.Object,java.util.Collection)>($r3, $r5);

        $r2 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r3, $r5);

        return $r2;
    }
}
