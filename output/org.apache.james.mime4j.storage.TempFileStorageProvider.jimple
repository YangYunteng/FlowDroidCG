public class org.apache.james.mime4j.storage.TempFileStorageProvider extends org.apache.james.mime4j.storage.AbstractStorageProvider
{
    public static final java.lang.String DEFAULT_PREFIX;
    public final java.io.File directory;
    public final java.lang.String prefix;
    public final java.lang.String suffix;

    public void <init>()
    {
        org.apache.james.mime4j.storage.TempFileStorageProvider r0;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider;

        specialinvoke r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: void <init>(java.lang.String,java.lang.String,java.io.File)>("m4j", null, null);

        return;
    }

    public void <init>(java.io.File)
    {
        org.apache.james.mime4j.storage.TempFileStorageProvider r0;
        java.io.File $r1;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: void <init>(java.lang.String,java.lang.String,java.io.File)>("m4j", null, $r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.io.File)
    {
        org.apache.james.mime4j.storage.TempFileStorageProvider r0;
        int $i0;
        java.lang.String $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.io.File;

        specialinvoke r0.<org.apache.james.mime4j.storage.AbstractStorageProvider: void <init>()>();

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 < 3 goto label3;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid directory");

        throw $r4;

     label2:
        r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: java.lang.String prefix> = $r2;

        r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: java.lang.String suffix> = $r3;

        r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: java.io.File directory> = $r1;

        return;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid prefix");

        throw $r4;
    }

    public org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream()
    {
        org.apache.james.mime4j.storage.TempFileStorageProvider r0;
        org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream $r4;
        java.lang.String $r2, $r3;
        java.io.File $r1;

        r0 := @this: org.apache.james.mime4j.storage.TempFileStorageProvider;

        $r2 = r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: java.lang.String prefix>;

        $r3 = r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: java.lang.String suffix>;

        $r1 = r0.<org.apache.james.mime4j.storage.TempFileStorageProvider: java.io.File directory>;

        $r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r2, $r3, $r1);

        virtualinvoke $r1.<java.io.File: void deleteOnExit()>();

        $r4 = new org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream;

        specialinvoke $r4.<org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream: void <init>(java.io.File)>($r1);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.james.mime4j.storage.TempFileStorageProvider: java.lang.String DEFAULT_PREFIX> = "m4j";

        return;
    }
}
