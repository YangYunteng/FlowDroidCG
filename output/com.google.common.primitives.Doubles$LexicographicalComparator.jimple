public final enum class com.google.common.primitives.Doubles$LexicographicalComparator extends java.lang.Enum implements java.util.Comparator
{
    public static final com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES;
    public static final enum com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE;

    static void <clinit>()
    {
        com.google.common.primitives.Doubles$LexicographicalComparator $r0;
        com.google.common.primitives.Doubles$LexicographicalComparator[] $r1;

        $r0 = new com.google.common.primitives.Doubles$LexicographicalComparator;

        specialinvoke $r0.<com.google.common.primitives.Doubles$LexicographicalComparator: void <init>(java.lang.String,int)>("INSTANCE", 0);

        <com.google.common.primitives.Doubles$LexicographicalComparator: com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE> = $r0;

        $r1 = newarray (com.google.common.primitives.Doubles$LexicographicalComparator)[1];

        $r0 = <com.google.common.primitives.Doubles$LexicographicalComparator: com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE>;

        $r1[0] = $r0;

        <com.google.common.primitives.Doubles$LexicographicalComparator: com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.common.primitives.Doubles$LexicographicalComparator r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.primitives.Doubles$LexicographicalComparator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.google.common.primitives.Doubles$LexicographicalComparator valueOf(java.lang.String)
    {
        com.google.common.primitives.Doubles$LexicographicalComparator $r2;
        java.lang.String $r1;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/primitives/Doubles$LexicographicalComparator;", $r1);

        $r2 = (com.google.common.primitives.Doubles$LexicographicalComparator) $r0;

        return $r2;
    }

    public static com.google.common.primitives.Doubles$LexicographicalComparator[] values()
    {
        java.lang.Object $r0;
        com.google.common.primitives.Doubles$LexicographicalComparator[] $r1;

        $r1 = <com.google.common.primitives.Doubles$LexicographicalComparator: com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.primitives.Doubles$LexicographicalComparator[]) $r0;

        return $r1;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.primitives.Doubles$LexicographicalComparator r0;
        int $i0;
        double[] $r3, $r4;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.primitives.Doubles$LexicographicalComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (double[]) $r1;

        $r4 = (double[]) $r2;

        $i0 = virtualinvoke r0.<com.google.common.primitives.Doubles$LexicographicalComparator: int compare(double[],double[])>($r3, $r4);

        return $i0;
    }

    public int compare(double[], double[])
    {
        double[] $r1, $r2;
        com.google.common.primitives.Doubles$LexicographicalComparator r0;
        int $i0, $i1, $i2;
        double $d0, $d1;

        r0 := @this: com.google.common.primitives.Doubles$LexicographicalComparator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d1 = $r1[$i1];

        $d0 = $r2[$i1];

        $i2 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 - $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.primitives.Doubles$LexicographicalComparator r0;

        r0 := @this: com.google.common.primitives.Doubles$LexicographicalComparator;

        return "Doubles.lexicographicalComparator()";
    }
}
