public final class l.o extends java.lang.Object implements l.x
{
    public final l.z a;
    public final java.io.InputStream b;

    public void <init>(l.z, java.io.InputStream)
    {
        l.z $r1;
        l.o r0;
        java.io.InputStream $r2;

        r0 := @this: l.o;

        $r1 := @parameter0: l.z;

        $r2 := @parameter1: java.io.InputStream;

        r0.<l.o: l.z a> = $r1;

        r0.<l.o: java.io.InputStream b> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long b(l.e, long)
    {
        byte[] $r5;
        long $l0, $l3;
        java.lang.AssertionError $r6;
        byte $b1;
        int $i2, $i4;
        java.lang.String $r8;
        boolean $z0;
        l.e $r1;
        java.io.IOException $r9;
        l.o r0;
        java.lang.IllegalArgumentException $r11;
        l.t $r3;
        l.z $r2;
        java.lang.StringBuilder $r7, $r10;
        java.io.InputStream $r4;

        r0 := @this: l.o;

        $r1 := @parameter0: l.e;

        $l0 := @parameter1: long;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label11;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label01;

        return 0L;

     label01:
        $r2 = r0.<l.o: l.z a>;

     label02:
        virtualinvoke $r2.<l.z: void e()>();

        $r3 = virtualinvoke $r1.<l.e: l.t b(int)>(1);

     label03:
        $i2 = $r3.<l.t: int c>;

        $i2 = 8192 - $i2;

        $l3 = (long) $i2;

     label04:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l3);

     label05:
        $i2 = (int) $l0;

        $r4 = r0.<l.o: java.io.InputStream b>;

        $r5 = $r3.<l.t: byte[] a>;

        $i4 = $r3.<l.t: int c>;

     label06:
        $i2 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r5, $i4, $i2);

     label07:
        $i4 = -1;

        if $i2 != $i4 goto label08;

        return -1L;

     label08:
        $i4 = $r3.<l.t: int c>;

        $i4 = $i4 + $i2;

        $r3.<l.t: int c> = $i4;

        $l3 = $r1.<l.e: long c>;

        $l0 = (long) $i2;

        $l3 = $l3 + $l0;

        $r1.<l.e: long c> = $l3;

        return $l0;

     label09:
        $r6 := @caughtexception;

        $z0 = staticinvoke <l.q: boolean a(java.lang.AssertionError)>($r6);

        if $z0 == 0 goto label10;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.Throwable)>($r6);

        throw $r9;

     label10:
        throw $r6;

     label11:
        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        $r7 = $r10;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r11;

        catch java.lang.AssertionError from label02 to label03 with label09;
        catch java.lang.AssertionError from label04 to label05 with label09;
        catch java.lang.AssertionError from label06 to label07 with label09;
    }

    public l.z b()
    {
        l.z r1;
        l.o r0;

        r0 := @this: l.o;

        r1 = r0.<l.o: l.z a>;

        return r1;
    }

    public void close()
    {
        l.o r0;
        java.io.InputStream $r1;

        r0 := @this: l.o;

        $r1 = r0.<l.o: java.io.InputStream b>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        l.o r0;
        java.io.InputStream $r3;

        r0 := @this: l.o;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source(");

        $r3 = r0.<l.o: java.io.InputStream b>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
