public final class com.google.android.gms.vision.text.zzc extends java.lang.Object
{

    public static android.graphics.Rect zza(com.google.android.gms.vision.text.Text)
    {
        android.graphics.Rect $r3;
        android.graphics.Point $r2;
        com.google.android.gms.vision.text.Text $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Point[] $r1;

        $r0 := @parameter0: com.google.android.gms.vision.text.Text;

        $r1 = interfaceinvoke $r0.<com.google.android.gms.vision.text.Text: android.graphics.Point[] getCornerPoints()>();

        $i0 = lengthof $r1;

        $i1 = 2147483647;

        $i2 = 0;

        $i3 = 2147483647;

        $i4 = -2147483648;

        $i5 = -2147483648;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = $r1[$i2];

        $i6 = $r2.<android.graphics.Point: int x>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i6);

        $i6 = $r2.<android.graphics.Point: int x>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i6);

        $i6 = $r2.<android.graphics.Point: int y>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i6);

        $i6 = $r2.<android.graphics.Point: int y>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>($i1, $i3, $i4, $i5);

        return $r3;
    }

    public static android.graphics.Point[] zza(com.google.android.gms.internal.vision.zzy)
    {
        com.google.android.gms.internal.vision.zzy $r0;
        android.graphics.Point $r2, $r3;
        int $i0, $i1, $i2, $i3;
        android.graphics.Point[] $r1;
        float $f0;
        double $d0, $d1, $d2, $d3;

        $r0 := @parameter0: com.google.android.gms.internal.vision.zzy;

        $r1 = newarray (android.graphics.Point)[4];

        $f0 = $r0.<com.google.android.gms.internal.vision.zzy: float zzfb>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f0 = $r0.<com.google.android.gms.internal.vision.zzy: float zzfb>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $r2 = new android.graphics.Point;

        $i1 = $r0.<com.google.android.gms.internal.vision.zzy: int left>;

        $i0 = $r0.<com.google.android.gms.internal.vision.zzy: int top>;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r1[0] = $r2;

        $r2 = new android.graphics.Point;

        $i1 = $r0.<com.google.android.gms.internal.vision.zzy: int left>;

        $d2 = (double) $i1;

        $i0 = $r0.<com.google.android.gms.internal.vision.zzy: int width>;

        $d3 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d3 = $d3 * $d0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d2 = $d2 + $d3;

        $i1 = (int) $d2;

        $i2 = $r0.<com.google.android.gms.internal.vision.zzy: int top>;

        $d2 = (double) $i2;

        $d3 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d3 = $d3 * $d1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d2 = $d2 + $d3;

        $i0 = (int) $d2;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r1[1] = $r2;

        $r2 = new android.graphics.Point;

        $r3 = $r1[1];

        $i1 = $r3.<android.graphics.Point: int x>;

        $d2 = (double) $i1;

        $i0 = $r0.<com.google.android.gms.internal.vision.zzy: int height>;

        $d3 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d1 = $d3 * $d1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d1 = $d2 - $d1;

        $i1 = (int) $d1;

        $r3 = $r1[1];

        $i2 = $r3.<android.graphics.Point: int y>;

        $d1 = (double) $i2;

        $d2 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d0 = $d2 * $d0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d1 + $d0;

        $i0 = (int) $d0;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r1[2] = $r2;

        $r2 = new android.graphics.Point;

        $r3 = $r1[0];

        $i1 = $r3.<android.graphics.Point: int x>;

        $r3 = $r1[2];

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = $r1[1];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i0 = $i0 - $i2;

        $i1 = $i1 + $i0;

        $r3 = $r1[0];

        $i0 = $r3.<android.graphics.Point: int y>;

        $r3 = $r1[2];

        $i2 = $r3.<android.graphics.Point: int y>;

        $r3 = $r1[1];

        $i3 = $r3.<android.graphics.Point: int y>;

        $i2 = $i2 - $i3;

        $i0 = $i0 + $i2;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r1[3] = $r2;

        return $r1;
    }
}
