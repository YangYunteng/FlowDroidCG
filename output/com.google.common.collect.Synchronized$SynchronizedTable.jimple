public final class com.google.common.collect.Synchronized$SynchronizedTable extends com.google.common.collect.Synchronized$SynchronizedObject implements com.google.common.collect.Table
{

    public void <init>(com.google.common.collect.Table, java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 := @parameter0: com.google.common.collect.Table;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public java.util.Set cellSet()
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Set $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.util.Set cellSet()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Set set(java.util.Set,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clear()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        interfaceinvoke $r2.<com.google.common.collect.Table: void clear()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Map column(java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Map $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.util.Map column(java.lang.Object)>($r2);

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Map map(java.util.Map,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Set columnKeySet()
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Set $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.util.Set columnKeySet()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Set set(java.util.Set,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Map columnMap()
    {
        java.lang.Throwable $r6;
        com.google.common.collect.Synchronized$SynchronizedTable$2 $r4;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Map $r3;
        java.lang.Object $r1, $r5;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Map columnMap()>();

        $r4 = new com.google.common.collect.Synchronized$SynchronizedTable$2;

        specialinvoke $r4.<com.google.common.collect.Synchronized$SynchronizedTable$2: void <init>(com.google.common.collect.Synchronized$SynchronizedTable)>(r0);

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>($r3, $r4);

        $r5 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.Map map(java.util.Map,java.lang.Object)>($r3, $r5);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean contains(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Table $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $z0 = interfaceinvoke $r4.<com.google.common.collect.Table: boolean contains(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsColumn(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Table: boolean containsColumn(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsRow(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Table: boolean containsRow(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Table: boolean containsValue(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.google.common.collect.Table delegate()
    {
        java.lang.Object $r1;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object delegate()>();

        $r2 = (com.google.common.collect.Table) $r1;

        return $r2;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        com.google.common.collect.Table $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r2 := @parameter0: java.lang.Object;

        if r0 != $r2 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label2:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Table: boolean equals(java.lang.Object)>($r2);

        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object get(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Table $r4;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Table: java.lang.Object get(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int hashCode()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Table: int hashCode()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1;
        com.google.common.collect.Table $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Table: boolean isEmpty()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r6;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2, $r3, $r4;
        com.google.common.collect.Table $r5;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r3;

     label1:
        $r5 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r5.<com.google.common.collect.Table: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r2);

        exitmonitor $r3;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void putAll(com.google.common.collect.Table)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1;
        com.google.common.collect.Table $r2, $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r3 := @parameter0: com.google.common.collect.Table;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        interfaceinvoke $r2.<com.google.common.collect.Table: void putAll(com.google.common.collect.Table)>($r3);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object remove(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.lang.Object $r1, $r2, $r3;
        com.google.common.collect.Table $r4;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r3 = interfaceinvoke $r4.<com.google.common.collect.Table: java.lang.Object remove(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Map row(java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Map $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.util.Map row(java.lang.Object)>($r2);

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Map map(java.util.Map,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Set rowKeySet()
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Set $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.util.Set rowKeySet()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Set set(java.util.Set,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Map rowMap()
    {
        com.google.common.collect.Synchronized$SynchronizedTable$1 $r4;
        java.lang.Throwable $r6;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Map $r3;
        java.lang.Object $r1, $r5;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Table: java.util.Map rowMap()>();

        $r4 = new com.google.common.collect.Synchronized$SynchronizedTable$1;

        specialinvoke $r4.<com.google.common.collect.Synchronized$SynchronizedTable$1: void <init>(com.google.common.collect.Synchronized$SynchronizedTable)>(r0);

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.Map transformValues(java.util.Map,com.google.common.base.Function)>($r3, $r4);

        $r5 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r3 = staticinvoke <com.google.common.collect.Synchronized: java.util.Map map(java.util.Map,java.lang.Object)>($r3, $r5);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int size()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.Table $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Table: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Collection values()
    {
        java.lang.Throwable $r5;
        com.google.common.collect.Synchronized$SynchronizedTable r0;
        java.util.Collection $r4;
        java.lang.Object $r1, $r2;
        com.google.common.collect.Table $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedTable;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedTable: com.google.common.collect.Table delegate()>();

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Table: java.util.Collection values()>();

        $r2 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        $r4 = staticinvoke <com.google.common.collect.Synchronized: java.util.Collection access$500(java.util.Collection,java.lang.Object)>($r4, $r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
