public class b.A.b.a extends java.lang.Object implements java.util.Comparator
{
    public final b.A.b.b a;

    public void <init>(b.A.b.b)
    {
        b.A.b.b $r1;
        b.A.b.a r0;

        r0 := @this: b.A.b.a;

        $r1 := @parameter0: b.A.b.b;

        r0.<b.A.b.a: b.A.b.b a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int a(int[], int[])
    {
        int[] $r1, $r2;
        b.A.b.a r0;
        int $i0, $i1;

        r0 := @this: b.A.b.a;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 = $r1[0];

        $i1 = $r2[0];

        $i0 = $i0 - $i1;

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int[] $r3, $r4;
        b.A.b.a r0;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: b.A.b.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (int[]) $r1;

        $r4 = (int[]) $r2;

        $i0 = virtualinvoke r0.<b.A.b.a: int a(int[],int[])>($r3, $r4);

        return $i0;
    }
}
