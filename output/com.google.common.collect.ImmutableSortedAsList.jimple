public final class com.google.common.collect.ImmutableSortedAsList extends com.google.common.collect.RegularImmutableAsList implements com.google.common.collect.SortedIterable
{

    public void <init>(com.google.common.collect.ImmutableSortedSet, com.google.common.collect.ImmutableList)
    {
        com.google.common.collect.ImmutableSortedAsList r0;
        com.google.common.collect.ImmutableSortedSet $r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 := @parameter0: com.google.common.collect.ImmutableSortedSet;

        $r2 := @parameter1: com.google.common.collect.ImmutableList;

        specialinvoke r0.<com.google.common.collect.RegularImmutableAsList: void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList)>($r1, $r2);

        return;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.ImmutableSortedAsList r0;
        com.google.common.collect.ImmutableSortedSet $r1;
        java.util.Comparator $r2;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: com.google.common.collect.ImmutableSortedSet delegateCollection()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator()>();

        return $r2;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedAsList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile com.google.common.collect.ImmutableCollection delegateCollection()
    {
        com.google.common.collect.ImmutableSortedAsList r0;
        com.google.common.collect.ImmutableSortedSet $r1;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: com.google.common.collect.ImmutableSortedSet delegateCollection()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSortedSet delegateCollection()
    {
        com.google.common.collect.ImmutableSortedAsList r0;
        com.google.common.collect.ImmutableSortedSet $r2;
        com.google.common.collect.ImmutableCollection $r1;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 = specialinvoke r0.<com.google.common.collect.RegularImmutableAsList: com.google.common.collect.ImmutableCollection delegateCollection()>();

        $r2 = (com.google.common.collect.ImmutableSortedSet) $r1;

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedSet $r2;
        com.google.common.collect.ImmutableSortedAsList r0;
        int $i0;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: com.google.common.collect.ImmutableSortedSet delegateCollection()>();

        $i0 = virtualinvoke $r2.<com.google.common.collect.ImmutableSortedSet: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        $r3 = virtualinvoke r0.<com.google.common.collect.RegularImmutableAsList: java.lang.Object get(int)>($i0);

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedAsList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>($r1);

        return $i0;
    }

    public java.util.Spliterator spliterator()
    {
        c.i.b.c.Oa $r1;
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableSortedAsList r0;
        int $i0;
        java.util.Comparator $r3;
        java.util.Spliterator $r4;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableAsList: int size()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularImmutableAsList: com.google.common.collect.ImmutableList delegateList()>();

        virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = new c.i.b.c.Oa;

        specialinvoke $r1.<c.i.b.c.Oa: void <init>(com.google.common.collect.ImmutableList)>($r2);

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: java.util.Comparator comparator()>();

        $r4 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator indexed(int,int,java.util.function.IntFunction,java.util.Comparator)>($i0, 1301, $r1, $r3);

        return $r4;
    }

    public com.google.common.collect.ImmutableList subListUnchecked(int, int)
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableSortedAsList r0;
        int $i0, $i1;
        com.google.common.collect.RegularImmutableSortedSet $r2;
        java.util.Comparator $r3;

        r0 := @this: com.google.common.collect.ImmutableSortedAsList;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subListUnchecked(int,int)>($i0, $i1);

        $r2 = new com.google.common.collect.RegularImmutableSortedSet;

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedAsList: java.util.Comparator comparator()>();

        specialinvoke $r2.<com.google.common.collect.RegularImmutableSortedSet: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r1, $r3);

        $r1 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList()>();

        return $r1;
    }
}
