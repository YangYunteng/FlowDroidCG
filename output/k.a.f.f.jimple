public class k.a.f.f extends java.lang.Object
{
    public static final k.a.f.f a;
    public static final java.util.logging.Logger b;

    static void <clinit>()
    {
        k.a.f.f $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;

        $r0 = staticinvoke <k.a.f.f: k.a.f.f a()>();

        <k.a.f.f: k.a.f.f a> = $r0;

        $r1 = class "Lk/E;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <k.a.f.f: java.util.logging.Logger b> = $r3;

        return;
    }

    public void <init>()
    {
        k.a.f.f r0;

        r0 := @this: k.a.f.f;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List a(java.util.List)
    {
        k.F $r2, $r4;
        java.util.ArrayList $r1;
        java.util.List $r0;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r5;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (k.F) $r3;

        $r2 = <k.F: k.F a>;

        if $r4 != $r2 goto label2;

        goto label3;

     label2:
        $r5 = virtualinvoke $r4.<k.F: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return $r1;
    }

    public static k.a.f.f a()
    {
        k.a.f.f $r0;
        k.a.f.c $r2;
        k.a.f.b $r1;
        boolean $z0;

        $r0 = staticinvoke <k.a.f.a: k.a.f.f e()>();

        if $r0 == null goto label1;

        return $r0;

     label1:
        $z0 = staticinvoke <k.a.f.f: boolean d()>();

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <k.a.f.b: k.a.f.b e()>();

        if $r1 == null goto label2;

        return $r1;

     label2:
        $r2 = staticinvoke <k.a.f.c: k.a.f.c e()>();

        if $r2 == null goto label3;

        return $r2;

     label3:
        $r0 = staticinvoke <k.a.f.d: k.a.f.f e()>();

        if $r0 == null goto label4;

        return $r0;

     label4:
        $r0 = new k.a.f.f;

        specialinvoke $r0.<k.a.f.f: void <init>()>();

        return $r0;
    }

    public static k.a.f.f b()
    {
        k.a.f.f r0;

        r0 = <k.a.f.f: k.a.f.f a>;

        return r0;
    }

    public static byte[] b(java.util.List)
    {
        byte[] $r6;
        l.e $r0;
        k.F $r3, $r4;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r5;

        $r1 := @parameter0: java.util.List;

        $r0 = new l.e;

        specialinvoke $r0.<l.e: void <init>()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (k.F) $r2;

        $r4 = <k.F: k.F a>;

        if $r3 != $r4 goto label2;

        goto label3;

     label2:
        $r5 = virtualinvoke $r3.<k.F: java.lang.String toString()>();

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        virtualinvoke $r0.<l.e: l.e writeByte(int)>($i2);

        $r5 = virtualinvoke $r3.<k.F: java.lang.String toString()>();

        virtualinvoke $r0.<l.e: l.e a(java.lang.String)>($r5);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r6 = virtualinvoke $r0.<l.e: byte[] k()>();

        return $r6;
    }

    public static boolean d()
    {
        java.lang.String $r0, $r1;
        java.security.Provider[] $r2;
        boolean $z0;
        java.security.Provider $r3;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("okhttp.platform");

        $r1 = "conscrypt";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        $r3 = $r2[0];

        $r0 = virtualinvoke $r3.<java.security.Provider: java.lang.String getName()>();

        $r1 = "Conscrypt";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    public java.lang.Object a(java.lang.String)
    {
        java.lang.Throwable $r4;
        k.a.f.f r0;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r1;
        boolean $z0;

        r0 := @this: k.a.f.f;

        $r2 := @parameter0: java.lang.String;

        $r3 = <k.a.f.f: java.util.logging.Logger b>;

        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>(java.lang.String)>($r2);

        return $r4;

     label1:
        return null;
    }

    public k.a.h.c a(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r3;
        k.a.h.e $r2;
        k.a.f.f r0;
        k.a.h.a $r1;

        r0 := @this: k.a.f.f;

        $r3 := @parameter0: javax.net.ssl.X509TrustManager;

        $r1 = new k.a.h.a;

        $r2 = virtualinvoke r0.<k.a.f.f: k.a.h.e b(javax.net.ssl.X509TrustManager)>($r3);

        specialinvoke $r1.<k.a.h.a: void <init>(k.a.h.e)>($r2);

        return $r1;
    }

    public void a(int, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        int $i0;
        k.a.f.f r0;
        java.lang.String $r1;
        java.util.logging.Logger $r4;
        java.util.logging.Level $r3;

        r0 := @this: k.a.f.f;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        if $i0 != 5 goto label1;

        $r3 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        goto label2;

     label1:
        $r3 = <java.util.logging.Level: java.util.logging.Level INFO>;

     label2:
        $r4 = <k.a.f.f: java.util.logging.Logger b>;

        virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r1, $r2);

        return;
    }

    public void a(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r4;
        k.a.f.f r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = (java.lang.Throwable) $r2;

        virtualinvoke r0.<k.a.f.f: void a(int,java.lang.String,java.lang.Throwable)>(5, $r1, $r4);

        return;
    }

    public void a(java.net.Socket, java.net.InetSocketAddress, int)
    {
        java.net.Socket $r1;
        int $i0;
        k.a.f.f r0;
        java.net.InetSocketAddress $r2;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.net.InetSocketAddress;

        $i0 := @parameter2: int;

        virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0);

        return;
    }

    public void a(javax.net.ssl.SSLSocket)
    {
        javax.net.ssl.SSLSocket $r1;
        k.a.f.f r0;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        return;
    }

    public void a(javax.net.ssl.SSLSocket, java.lang.String, java.util.List)
    {
        java.util.List $r3;
        javax.net.ssl.SSLSocket $r1;
        k.a.f.f r0;
        java.lang.String $r2;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.List;

        return;
    }

    public void a(javax.net.ssl.SSLSocketFactory)
    {
        k.a.f.f r0;
        javax.net.ssl.SSLSocketFactory $r1;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        return;
    }

    public java.lang.String b(javax.net.ssl.SSLSocket)
    {
        javax.net.ssl.SSLSocket $r1;
        k.a.f.f r0;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        return null;
    }

    public k.a.h.e b(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r3;
        k.a.f.f r0;
        k.a.h.b $r1;
        java.security.cert.X509Certificate[] $r2;

        r0 := @this: k.a.f.f;

        $r3 := @parameter0: javax.net.ssl.X509TrustManager;

        $r1 = new k.a.h.b;

        $r2 = interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

        specialinvoke $r1.<k.a.h.b: void <init>(java.security.cert.X509Certificate[])>($r2);

        return $r1;
    }

    public boolean b(java.lang.String)
    {
        k.a.f.f r0;
        java.lang.String $r1;

        r0 := @this: k.a.f.f;

        $r1 := @parameter0: java.lang.String;

        return 1;
    }

    public javax.net.ssl.SSLContext c()
    {
        java.lang.IllegalStateException $r6;
        javax.net.ssl.SSLContext $r4;
        k.a.f.f r0;
        java.security.NoSuchAlgorithmException $r1, $r5;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: k.a.f.f;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.specification.version");

        $r3 = "1.7";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label1:
        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLSv1.2");

     label2:
        return $r4;

     label3:
        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("No TLS provider", $r5);

        throw $r6;

     label6:
        $r1 := @caughtexception;

        goto label3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    public java.lang.String toString()
    {
        k.a.f.f r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: k.a.f.f;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }
}
