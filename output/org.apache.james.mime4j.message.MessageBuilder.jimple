public class org.apache.james.mime4j.message.MessageBuilder extends java.lang.Object implements org.apache.james.mime4j.parser.ContentHandler
{
    public final org.apache.james.mime4j.message.BodyFactory bodyFactory;
    public final org.apache.james.mime4j.message.Entity entity;
    public java.util.Stack stack;

    public void <init>(org.apache.james.mime4j.message.Entity)
    {
        org.apache.james.mime4j.message.BodyFactory $r3;
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.message.Entity $r2;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r2 := @parameter0: org.apache.james.mime4j.message.Entity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack> = $r1;

        r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.Entity entity> = $r2;

        $r3 = new org.apache.james.mime4j.message.BodyFactory;

        specialinvoke $r3.<org.apache.james.mime4j.message.BodyFactory: void <init>()>();

        r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory> = $r3;

        return;
    }

    public void <init>(org.apache.james.mime4j.message.Entity, org.apache.james.mime4j.storage.StorageProvider)
    {
        org.apache.james.mime4j.message.BodyFactory $r4;
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.message.Entity $r3;
        org.apache.james.mime4j.storage.StorageProvider $r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r3 := @parameter0: org.apache.james.mime4j.message.Entity;

        $r1 := @parameter1: org.apache.james.mime4j.storage.StorageProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack> = $r2;

        r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.Entity entity> = $r3;

        $r4 = new org.apache.james.mime4j.message.BodyFactory;

        specialinvoke $r4.<org.apache.james.mime4j.message.BodyFactory: void <init>(org.apache.james.mime4j.storage.StorageProvider)>($r1);

        r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory> = $r4;

        return;
    }

    private void expect(java.lang.Class)
    {
        java.lang.IllegalStateException $r5;
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.util.Stack $r3;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r2 := @parameter0: java.lang.Class;

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal stack error: Expected \'");

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' found \'");

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream)
    {
        int $i0, $i1;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1, $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 = $r2;

        specialinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(int)>(64);

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = -1;

        if $i0 == $i1 goto label2;

        virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>($i0);

        goto label1;

     label2:
        return $r1;
    }

    public void body(org.apache.james.mime4j.descriptor.BodyDescriptor, java.io.InputStream)
    {
        org.apache.james.mime4j.message.SingleBody $r7;
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.util.Stack $r8;
        org.apache.james.mime4j.codec.QuotedPrintableInputStream $r12;
        org.apache.james.mime4j.message.BodyFactory $r6;
        org.apache.james.mime4j.descriptor.BodyDescriptor $r1;
        org.apache.james.mime4j.message.Entity $r10;
        java.lang.Object $r9;
        java.lang.String $r3, $r4;
        org.apache.james.mime4j.codec.Base64InputStream $r11;
        java.io.InputStream $r2, $r5;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.descriptor.BodyDescriptor;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Entity;");

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.descriptor.ContentDescriptor: java.lang.String getTransferEncoding()>();

        $r4 = "base64";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r11 = new org.apache.james.mime4j.codec.Base64InputStream;

        $r5 = $r11;

        specialinvoke $r11.<org.apache.james.mime4j.codec.Base64InputStream: void <init>(java.io.InputStream)>($r2);

        goto label3;

     label1:
        $r4 = "quoted-printable";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r12 = new org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r5 = $r12;

        specialinvoke $r12.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(java.io.InputStream)>($r2);

        goto label3;

     label2:
        $r5 = $r2;

     label3:
        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.descriptor.ContentDescriptor: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z0 == 0 goto label4;

        $r6 = r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory>;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.descriptor.ContentDescriptor: java.lang.String getCharset()>();

        $r7 = virtualinvoke $r6.<org.apache.james.mime4j.message.BodyFactory: org.apache.james.mime4j.message.TextBody textBody(java.io.InputStream,java.lang.String)>($r5, $r3);

        goto label5;

     label4:
        $r6 = r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory>;

        $r7 = virtualinvoke $r6.<org.apache.james.mime4j.message.BodyFactory: org.apache.james.mime4j.message.BinaryBody binaryBody(java.io.InputStream)>($r5);

     label5:
        $r8 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r9 = virtualinvoke $r8.<java.util.Stack: java.lang.Object peek()>();

        $r10 = (org.apache.james.mime4j.message.Entity) $r9;

        virtualinvoke $r10.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>($r7);

        return;
    }

    public void endBodyPart()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/BodyPart;");

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void endHeader()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.message.Entity $r4;
        org.apache.james.mime4j.message.Header $r3;
        java.lang.Object $r2;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Header;");

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (org.apache.james.mime4j.message.Header) $r2;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Entity;");

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.james.mime4j.message.Entity) $r2;

        virtualinvoke $r4.<org.apache.james.mime4j.message.Entity: void setHeader(org.apache.james.mime4j.message.Header)>($r3);

        return;
    }

    public void endMessage()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Message;");

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void endMultipart()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void epilogue(java.io.InputStream)
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.util.ByteSequence $r2;
        org.apache.james.mime4j.message.Multipart $r5;
        java.lang.Object $r4;
        java.util.Stack $r3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Multipart;");

        $r2 = staticinvoke <org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream)>($r1);

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = (org.apache.james.mime4j.message.Multipart) $r4;

        virtualinvoke $r5.<org.apache.james.mime4j.message.Multipart: void setEpilogueRaw(org.apache.james.mime4j.util.ByteSequence)>($r2);

        return;
    }

    public void field(org.apache.james.mime4j.parser.Field)
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.util.ByteSequence $r2;
        org.apache.james.mime4j.message.Header $r6;
        org.apache.james.mime4j.field.ParsedField $r3;
        java.lang.Object $r5;
        java.util.Stack $r4;
        org.apache.james.mime4j.parser.Field $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.parser.Field;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Header;");

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.parser.Field: org.apache.james.mime4j.util.ByteSequence getRaw()>();

        $r3 = staticinvoke <org.apache.james.mime4j.field.AbstractField: org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence)>($r2);

        $r4 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>();

        $r6 = (org.apache.james.mime4j.message.Header) $r5;

        virtualinvoke $r6.<org.apache.james.mime4j.message.Header: void addField(org.apache.james.mime4j.parser.Field)>($r3);

        return;
    }

    public void preamble(java.io.InputStream)
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.util.ByteSequence $r2;
        org.apache.james.mime4j.message.Multipart $r5;
        java.lang.Object $r4;
        java.util.Stack $r3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Multipart;");

        $r2 = staticinvoke <org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream)>($r1);

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = (org.apache.james.mime4j.message.Multipart) $r4;

        virtualinvoke $r5.<org.apache.james.mime4j.message.Multipart: void setPreambleRaw(org.apache.james.mime4j.util.ByteSequence)>($r2);

        return;
    }

    public void raw(java.io.InputStream)
    {
        java.lang.UnsupportedOperationException $r2;
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported");

        throw $r2;
    }

    public void startBodyPart()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.message.Multipart $r4;
        java.lang.Object $r1;
        org.apache.james.mime4j.message.BodyPart $r2;
        java.util.Stack $r3;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Multipart;");

        $r2 = new org.apache.james.mime4j.message.BodyPart;

        specialinvoke $r2.<org.apache.james.mime4j.message.BodyPart: void <init>()>();

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r1 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.james.mime4j.message.Multipart) $r1;

        virtualinvoke $r4.<org.apache.james.mime4j.message.Multipart: void addBodyPart(org.apache.james.mime4j.message.BodyPart)>($r2);

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;
    }

    public void startHeader()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        java.util.Stack $r1;
        org.apache.james.mime4j.message.Header $r2;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r2 = new org.apache.james.mime4j.message.Header;

        specialinvoke $r2.<org.apache.james.mime4j.message.Header: void <init>()>();

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;
    }

    public void startMessage()
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.message.Entity $r2;
        java.lang.Object $r4;
        org.apache.james.mime4j.message.Message $r3;
        java.util.Stack $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r2 = r0.<org.apache.james.mime4j.message.MessageBuilder: org.apache.james.mime4j.message.Entity entity>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;

     label1:
        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Entity;");

        $r3 = new org.apache.james.mime4j.message.Message;

        specialinvoke $r3.<org.apache.james.mime4j.message.Message: void <init>()>();

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r2 = (org.apache.james.mime4j.message.Entity) $r4;

        virtualinvoke $r2.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>($r3);

        $r1 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);

        return;
    }

    public void startMultipart(org.apache.james.mime4j.descriptor.BodyDescriptor)
    {
        org.apache.james.mime4j.message.MessageBuilder r0;
        org.apache.james.mime4j.descriptor.BodyDescriptor $r2;
        org.apache.james.mime4j.message.Entity $r5;
        org.apache.james.mime4j.message.Multipart $r1;
        java.lang.Object $r4;
        java.lang.String $r6;
        java.util.Stack $r3;

        r0 := @this: org.apache.james.mime4j.message.MessageBuilder;

        $r2 := @parameter0: org.apache.james.mime4j.descriptor.BodyDescriptor;

        specialinvoke r0.<org.apache.james.mime4j.message.MessageBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/Entity;");

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = (org.apache.james.mime4j.message.Entity) $r4;

        $r6 = interfaceinvoke $r2.<org.apache.james.mime4j.descriptor.ContentDescriptor: java.lang.String getSubType()>();

        $r1 = new org.apache.james.mime4j.message.Multipart;

        specialinvoke $r1.<org.apache.james.mime4j.message.Multipart: void <init>(java.lang.String)>($r6);

        virtualinvoke $r5.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>($r1);

        $r3 = r0.<org.apache.james.mime4j.message.MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        return;
    }
}
