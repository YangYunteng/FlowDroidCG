public final class org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer extends org.codehaus.jackson.map.deser.BaseNodeDeserializer
{
    public static final org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer _instance;

    static void <clinit>()
    {
        org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer $r0;

        $r0 = new org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: void <init>()>();

        <org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer _instance> = $r0;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BaseNodeDeserializer: void <init>(java.lang.Class)>(class "Lorg/codehaus/jackson/node/ObjectNode;");

        return;
    }

    public static org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer getInstance()
    {
        org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer r0;

        r0 = <org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer _instance>;

        return r0;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.node.ObjectNode $r2;

        r0 := @this: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        org.codehaus.jackson.map.JsonMappingException $r6;
        org.codehaus.jackson.JsonToken $r3, $r4;
        org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r2;
        org.codehaus.jackson.node.ObjectNode $r5;

        r0 := @this: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r3 != $r4 goto label1;

        virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BaseNodeDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r2, $r1);

        return $r5;

     label1:
        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r3 != $r4 goto label2;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BaseNodeDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r2, $r1);

        return $r5;

     label2:
        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>(class "Lorg/codehaus/jackson/node/ObjectNode;");

        throw $r6;
    }
}
