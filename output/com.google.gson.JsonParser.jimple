public final class com.google.gson.JsonParser extends java.lang.Object
{

    public void <init>()
    {
        com.google.gson.JsonParser r0;

        r0 := @this: com.google.gson.JsonParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
    {
        java.lang.Throwable $r3;
        com.google.gson.JsonParseException $r5;
        java.lang.StackOverflowError $r8;
        com.google.gson.JsonParser r0;
        com.google.gson.stream.JsonReader $r1;
        com.google.gson.JsonElement $r2;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.OutOfMemoryError $r4;
        boolean $z0;

        r0 := @this: com.google.gson.JsonParser;

        $r1 := @parameter0: com.google.gson.stream.JsonReader;

        $z0 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: boolean isLenient()>();

        virtualinvoke $r1.<com.google.gson.stream.JsonReader: void setLenient(boolean)>(1);

     label1:
        $r2 = staticinvoke <com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>($r1);

     label2:
        virtualinvoke $r1.<com.google.gson.stream.JsonReader: void setLenient(boolean)>($z0);

        return $r2;

     label3:
        $r3 := @caughtexception;

        goto label8;

     label4:
        $r4 := @caughtexception;

     label5:
        $r5 = new com.google.gson.JsonParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing JSON source: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to Json");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r4);

        throw $r5;

     label6:
        $r8 := @caughtexception;

     label7:
        $r5 = new com.google.gson.JsonParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing JSON source: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to Json");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r8);

        throw $r5;

     label8:
        virtualinvoke $r1.<com.google.gson.stream.JsonReader: void setLenient(boolean)>($z0);

        throw $r3;

        catch java.lang.StackOverflowError from label1 to label2 with label6;
        catch java.lang.OutOfMemoryError from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label7 to label8 with label3;
    }

    public com.google.gson.JsonElement parse(java.io.Reader)
    {
        com.google.gson.JsonSyntaxException $r6;
        java.lang.NumberFormatException $r7;
        java.io.IOException $r8;
        java.io.Reader $r1;
        com.google.gson.JsonParser r0;
        com.google.gson.stream.JsonReader $r2;
        com.google.gson.JsonElement $r3;
        com.google.gson.stream.MalformedJsonException $r10;
        com.google.gson.stream.JsonToken $r4, $r5;
        com.google.gson.JsonIOException $r9;
        boolean $z0;

        r0 := @this: com.google.gson.JsonParser;

        $r1 := @parameter0: java.io.Reader;

        $r2 = new com.google.gson.stream.JsonReader;

     label01:
        specialinvoke $r2.<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>($r1);

        $r3 = virtualinvoke r0.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>($r2);

        $z0 = virtualinvoke $r3.<com.google.gson.JsonElement: boolean isJsonNull()>();

     label02:
        if $z0 != 0 goto label11;

     label03:
        $r4 = virtualinvoke $r2.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

     label04:
        $r5 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT>;

        if $r4 != $r5 goto label05;

        return $r3;

     label05:
        $r6 = new com.google.gson.JsonSyntaxException;

     label06:
        specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String)>("Did not consume the entire document.");

     label07:
        throw $r6;

     label08:
        $r7 := @caughtexception;

        $r6 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

     label09:
        $r8 := @caughtexception;

        $r9 = new com.google.gson.JsonIOException;

        specialinvoke $r9.<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label10:
        $r10 := @caughtexception;

        $r6 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>($r10);

        throw $r6;

     label11:
        return $r3;

        catch com.google.gson.stream.MalformedJsonException from label01 to label02 with label10;
        catch com.google.gson.stream.MalformedJsonException from label03 to label04 with label10;
        catch com.google.gson.stream.MalformedJsonException from label06 to label07 with label10;
        catch java.io.IOException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label06 to label07 with label09;
        catch java.lang.NumberFormatException from label01 to label02 with label08;
        catch java.lang.NumberFormatException from label03 to label04 with label08;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
    }

    public com.google.gson.JsonElement parse(java.lang.String)
    {
        com.google.gson.JsonElement $r2;
        java.io.StringReader $r1;
        java.lang.String $r3;
        com.google.gson.JsonParser r0;

        r0 := @this: com.google.gson.JsonParser;

        $r3 := @parameter0: java.lang.String;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke r0.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.io.Reader)>($r1);

        return $r2;
    }
}
