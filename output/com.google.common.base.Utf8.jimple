public final class com.google.common.base.Utf8 extends java.lang.Object
{

    public void <init>()
    {
        com.google.common.base.Utf8 r0;

        r0 := @this: com.google.common.base.Utf8;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int encodedLength(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        char $c2;
        long $l5;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i3 = (int) $c2;

        if $i3 >= 128 goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i3 = $i0;

     label3:
        if $i1 >= $i0 goto label5;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i4 = (int) $c2;

        if $i4 >= 2048 goto label4;

        $i4 = (int) $c2;

        $i4 = 127 - $i4;

        $i4 = $i4 >>> 31;

        $i3 = $i3 + $i4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i1 = staticinvoke <com.google.common.base.Utf8: int encodedLengthGeneral(java.lang.CharSequence,int)>($r0, $i1);

        $i3 = $i3 + $i1;

     label5:
        if $i3 < $i0 goto label6;

        return $i3;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 length does not fit in int: ");

        $l5 = (long) $i3;

        $l5 = $l5 + 4294967296L;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        goto label7;

     label7:
        throw $r4;
    }

    public static int encodedLengthGeneral(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        char $c3;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i2 = 0;

     label1:
        if $i0 >= $i1 goto label5;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i4 = (int) $c3;

        if $i4 >= 2048 goto label2;

        $i4 = (int) $c3;

        $i4 = 127 - $i4;

        $i4 = $i4 >>> 31;

        $i2 = $i2 + $i4;

        goto label4;

     label2:
        $i2 = $i2 + 2;

        $i4 = 55296;

        $i5 = (int) $c3;

        if $i4 > $i5 goto label4;

        $i4 = (int) $c3;

        $i5 = 57343;

        if $i4 > $i5 goto label4;

        $i4 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r0, $i0);

        $i5 = (int) $c3;

        if $i4 == $i5 goto label3;

        $i0 = $i0 + 1;

        goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <com.google.common.base.Utf8: java.lang.String unpairedSurrogateMsg(int)>($i0);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        return $i2;
    }

    public static boolean isWellFormed(byte[])
    {
        int $i0;
        byte[] $r0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $z0 = staticinvoke <com.google.common.base.Utf8: boolean isWellFormed(byte[],int,int)>($r0, 0, $i0);

        return $z0;
    }

    public static boolean isWellFormed(byte[], int, int)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i1 + $i0;

        $i2 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i0, $i1, $i2);

     label1:
        if $i0 >= $i1 goto label3;

        $b3 = $r0[$i0];

        $i2 = (int) $b3;

        if $i2 >= 0 goto label2;

        $z0 = staticinvoke <com.google.common.base.Utf8: boolean isWellFormedSlowPath(byte[],int,int)>($r0, $i0, $i1);

        return $z0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isWellFormedSlowPath(byte[], int, int)
    {
        byte[] $r0;
        byte $b3, $b5;
        int $i0, $i1, $i2, $i4;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

     label01:
        if $i1 < $i0 goto label02;

        return 1;

     label02:
        $i2 = $i1 + 1;

        $b3 = $r0[$i1];

        $i1 = (int) $b3;

        if $i1 >= 0 goto label10;

        $i1 = (int) $b3;

        $i4 = -32;

        if $i1 >= $i4 goto label04;

        if $i2 != $i0 goto label03;

        return 0;

     label03:
        $i1 = (int) $b3;

        $i4 = -62;

        if $i1 < $i4 goto label11;

        $i1 = $i2 + 1;

        $b3 = $r0[$i2];

        $i2 = (int) $b3;

        $i4 = -65;

        if $i2 <= $i4 goto label01;

        return 0;

     label04:
        $i1 = (int) $b3;

        $i4 = -16;

        if $i1 >= $i4 goto label08;

        $i4 = $i2 + 1;

        if $i4 < $i0 goto label05;

        return 0;

     label05:
        $b5 = $r0[$i2];

        $i1 = (int) $b5;

        $i2 = -65;

        if $i1 > $i2 goto label11;

        $i1 = (int) $b3;

        $i2 = -32;

        if $i1 != $i2 goto label06;

        $i1 = (int) $b5;

        $i2 = -96;

        if $i1 < $i2 goto label11;

     label06:
        $i1 = (int) $b3;

        $i2 = -19;

        if $i1 != $i2 goto label07;

        $i1 = -96;

        $i2 = (int) $b5;

        if $i1 <= $i2 goto label11;

     label07:
        $i1 = $i4 + 1;

        $b3 = $r0[$i4];

        $i2 = (int) $b3;

        $i4 = -65;

        if $i2 <= $i4 goto label01;

        return 0;

     label08:
        $i1 = $i2 + 2;

        if $i1 < $i0 goto label09;

        return 0;

     label09:
        $i1 = $i2 + 1;

        $b5 = $r0[$i2];

        $i2 = (int) $b5;

        $i4 = -65;

        if $i2 > $i4 goto label11;

        $i2 = (int) $b3;

        $i2 = $i2 << 28;

        $i4 = (int) $b5;

        $i4 = $i4 + 112;

        $i2 = $i2 + $i4;

        $i2 = $i2 >> 30;

        if $i2 != 0 goto label11;

        $i4 = $i1 + 1;

        $b3 = $r0[$i1];

        $i1 = (int) $b3;

        $i2 = -65;

        if $i1 > $i2 goto label11;

        $i2 = $i4 + 1;

        $b3 = $r0[$i4];

        $i1 = (int) $b3;

        $i4 = -65;

        if $i1 <= $i4 goto label10;

        return 0;

     label10:
        $i1 = $i2;

        goto label01;

     label11:
        return 0;
    }

    public static java.lang.String unpairedSurrogateMsg(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
