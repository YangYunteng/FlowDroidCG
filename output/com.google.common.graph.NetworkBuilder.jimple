public final class com.google.common.graph.NetworkBuilder extends com.google.common.graph.AbstractGraphBuilder
{
    public boolean allowsParallelEdges;
    public com.google.common.graph.ElementOrder edgeOrder;
    public com.google.common.base.Optional expectedEdgeCount;

    public void <init>(boolean)
    {
        com.google.common.graph.ElementOrder $r1;
        com.google.common.graph.NetworkBuilder r0;
        com.google.common.base.Optional $r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.common.graph.AbstractGraphBuilder: void <init>(boolean)>($z0);

        r0.<com.google.common.graph.NetworkBuilder: boolean allowsParallelEdges> = 0;

        $r1 = staticinvoke <com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder insertion()>();

        r0.<com.google.common.graph.NetworkBuilder: com.google.common.graph.ElementOrder edgeOrder> = $r1;

        $r2 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        r0.<com.google.common.graph.NetworkBuilder: com.google.common.base.Optional expectedEdgeCount> = $r2;

        return;
    }

    private com.google.common.graph.NetworkBuilder cast()
    {
        com.google.common.graph.NetworkBuilder r0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        return r0;
    }

    public static com.google.common.graph.NetworkBuilder directed()
    {
        com.google.common.graph.NetworkBuilder $r0;

        $r0 = new com.google.common.graph.NetworkBuilder;

        specialinvoke $r0.<com.google.common.graph.NetworkBuilder: void <init>(boolean)>(1);

        return $r0;
    }

    public static com.google.common.graph.NetworkBuilder 'from'(com.google.common.graph.Network)
    {
        com.google.common.graph.ElementOrder $r2;
        com.google.common.graph.NetworkBuilder $r1;
        com.google.common.graph.Network $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.common.graph.Network;

        $r1 = new com.google.common.graph.NetworkBuilder;

        $z0 = interfaceinvoke $r0.<com.google.common.graph.Network: boolean isDirected()>();

        specialinvoke $r1.<com.google.common.graph.NetworkBuilder: void <init>(boolean)>($z0);

        $z0 = interfaceinvoke $r0.<com.google.common.graph.Network: boolean allowsParallelEdges()>();

        $r1 = virtualinvoke $r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.NetworkBuilder allowsParallelEdges(boolean)>($z0);

        $z0 = interfaceinvoke $r0.<com.google.common.graph.Network: boolean allowsSelfLoops()>();

        $r1 = virtualinvoke $r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.NetworkBuilder allowsSelfLoops(boolean)>($z0);

        $r2 = interfaceinvoke $r0.<com.google.common.graph.Network: com.google.common.graph.ElementOrder nodeOrder()>();

        $r1 = virtualinvoke $r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.NetworkBuilder nodeOrder(com.google.common.graph.ElementOrder)>($r2);

        $r2 = interfaceinvoke $r0.<com.google.common.graph.Network: com.google.common.graph.ElementOrder edgeOrder()>();

        $r1 = virtualinvoke $r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.NetworkBuilder edgeOrder(com.google.common.graph.ElementOrder)>($r2);

        return $r1;
    }

    public static com.google.common.graph.NetworkBuilder undirected()
    {
        com.google.common.graph.NetworkBuilder $r0;

        $r0 = new com.google.common.graph.NetworkBuilder;

        specialinvoke $r0.<com.google.common.graph.NetworkBuilder: void <init>(boolean)>(0);

        return $r0;
    }

    public com.google.common.graph.NetworkBuilder allowsParallelEdges(boolean)
    {
        com.google.common.graph.NetworkBuilder r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $z0 := @parameter0: boolean;

        r0.<com.google.common.graph.NetworkBuilder: boolean allowsParallelEdges> = $z0;

        return r0;
    }

    public com.google.common.graph.NetworkBuilder allowsSelfLoops(boolean)
    {
        com.google.common.graph.NetworkBuilder r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $z0 := @parameter0: boolean;

        r0.<com.google.common.graph.AbstractGraphBuilder: boolean allowsSelfLoops> = $z0;

        return r0;
    }

    public com.google.common.graph.MutableNetwork build()
    {
        com.google.common.graph.ConfigurableMutableNetwork $r1;
        com.google.common.graph.NetworkBuilder r0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $r1 = new com.google.common.graph.ConfigurableMutableNetwork;

        specialinvoke $r1.<com.google.common.graph.ConfigurableMutableNetwork: void <init>(com.google.common.graph.NetworkBuilder)>(r0);

        return $r1;
    }

    public com.google.common.graph.NetworkBuilder edgeOrder(com.google.common.graph.ElementOrder)
    {
        com.google.common.graph.ElementOrder $r1;
        com.google.common.graph.NetworkBuilder r0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $r1 := @parameter0: com.google.common.graph.ElementOrder;

        specialinvoke r0.<com.google.common.graph.NetworkBuilder: com.google.common.graph.NetworkBuilder cast()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.graph.NetworkBuilder: com.google.common.graph.ElementOrder edgeOrder> = $r1;

        return r0;
    }

    public com.google.common.graph.NetworkBuilder expectedEdgeCount(int)
    {
        com.google.common.graph.NetworkBuilder r0;
        com.google.common.base.Optional $r2;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $i0 := @parameter0: int;

        staticinvoke <com.google.common.graph.Graphs: int checkNonNegative(int)>($i0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r1);

        r0.<com.google.common.graph.NetworkBuilder: com.google.common.base.Optional expectedEdgeCount> = $r2;

        return r0;
    }

    public com.google.common.graph.NetworkBuilder expectedNodeCount(int)
    {
        com.google.common.graph.NetworkBuilder r0;
        com.google.common.base.Optional $r2;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $i0 := @parameter0: int;

        staticinvoke <com.google.common.graph.Graphs: int checkNonNegative(int)>($i0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r1);

        r0.<com.google.common.graph.AbstractGraphBuilder: com.google.common.base.Optional expectedNodeCount> = $r2;

        return r0;
    }

    public com.google.common.graph.NetworkBuilder nodeOrder(com.google.common.graph.ElementOrder)
    {
        com.google.common.graph.ElementOrder $r1;
        com.google.common.graph.NetworkBuilder r0;

        r0 := @this: com.google.common.graph.NetworkBuilder;

        $r1 := @parameter0: com.google.common.graph.ElementOrder;

        specialinvoke r0.<com.google.common.graph.NetworkBuilder: com.google.common.graph.NetworkBuilder cast()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.graph.AbstractGraphBuilder: com.google.common.graph.ElementOrder nodeOrder> = $r1;

        return r0;
    }
}
