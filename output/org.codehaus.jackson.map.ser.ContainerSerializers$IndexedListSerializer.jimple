public class org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer extends org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer
{

    public void <init>(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer r0;
        org.codehaus.jackson.map.TypeSerializer $r2;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.JsonSerializer $r4;
        org.codehaus.jackson.map.BeanProperty $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        $r3 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r4 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer)>(class "Ljava/util/List;", $r1, $z0, $r2, $r3, $r4);

        return;
    }

    public org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer r0, $r5;
        org.codehaus.jackson.map.TypeSerializer $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.JsonSerializer $r4;
        org.codehaus.jackson.map.BeanProperty $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.TypeSerializer;

        $r5 = new org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r2 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.type.JavaType _elementType>;

        $z0 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: boolean _staticTyping>;

        $r3 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.BeanProperty _property>;

        $r4 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _elementSerializer>;

        specialinvoke $r5.<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer)>($r2, $z0, $r1, $r3, $r4);

        return $r5;
    }

    public volatile void serializeContents(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        java.util.List $r4;
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer r0;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Object $r3;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.List) $r3;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serializeContents(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.SerializerProvider $r2;
        org.codehaus.jackson.map.JsonSerializer $r4, $r9;
        java.lang.Exception $r11;
        java.util.List $r1;
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer r0;
        org.codehaus.jackson.JsonGenerator $r3;
        org.codehaus.jackson.map.TypeSerializer $r5;
        int $i0, $i1;
        org.codehaus.jackson.type.JavaType $r10;
        java.lang.Object $r7;
        java.lang.Class $r8;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $r3 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _elementSerializer>;

        if $r4 == null goto label01;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeContentsUsing(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>($r1, $r3, $r2, $r4);

        return;

     label01:
        $r5 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer>;

        if $r5 == null goto label02;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeTypedContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r1, $r3, $r2);

        return;

     label02:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label03;

        return;

     label03:
        $i1 = 0;

     label04:
        $r6 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label05:
        if $i1 >= $i0 goto label22;

     label06:
        $r7 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

     label07:
        if $r7 != null goto label10;

     label08:
        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r3);

     label09:
        goto label20;

     label10:
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r6.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>($r8);

     label11:
        $r9 = $r4;

        if $r4 != null goto label19;

     label12:
        $r10 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.type.JavaType _elementType>;

        $z0 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: boolean hasGenericTypes()>();

     label13:
        if $z0 == 0 goto label16;

     label14:
        $r10 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.type.JavaType _elementType>;

        $r10 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class)>($r8);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider)>($r6, $r10, $r2);

     label15:
        goto label17;

     label16:
        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>($r6, $r8, $r2);

     label17:
        $r9 = $r4;

     label18:
        $r6 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label19:
        virtualinvoke $r9.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r7, $r3, $r2);

     label20:
        $i1 = $i1 + 1;

        goto label05;

     label21:
        $r11 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r2, $r11, $r1, $i1);

     label22:
        return;

        catch java.lang.Exception from label04 to label05 with label21;
        catch java.lang.Exception from label06 to label07 with label21;
        catch java.lang.Exception from label08 to label09 with label21;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label12 to label13 with label21;
        catch java.lang.Exception from label14 to label15 with label21;
        catch java.lang.Exception from label16 to label17 with label21;
        catch java.lang.Exception from label18 to label20 with label21;
    }

    public void serializeContentsUsing(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.JsonSerializer $r4;
        java.lang.Exception $r7;
        java.util.List $r1;
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer r0;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.TypeSerializer $r5;
        int $i0, $i1;
        java.lang.Object $r6;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.JsonSerializer;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer>;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label13;

        $r6 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        if $r6 != null goto label06;

     label03:
        virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r2);

     label04:
        goto label12;

     label05:
        $r7 := @caughtexception;

        goto label11;

     label06:
        if $r5 != null goto label09;

     label07:
        virtualinvoke $r4.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r6, $r2, $r3);

     label08:
        goto label12;

     label09:
        virtualinvoke $r4.<org.codehaus.jackson.map.JsonSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r6, $r2, $r3, $r5);

     label10:
        goto label12;

     label11:
        virtualinvoke r0.<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r3, $r7, $r1, $i1);

     label12:
        $i1 = $i1 + 1;

        goto label02;

     label13:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label05;
        catch java.lang.Exception from label09 to label10 with label05;
    }

    public void serializeTypedContents(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.SerializerProvider $r2;
        org.codehaus.jackson.map.JsonSerializer $r8, $r9;
        java.lang.Exception $r11;
        java.util.List $r1;
        org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer r0;
        org.codehaus.jackson.map.TypeSerializer $r3;
        org.codehaus.jackson.JsonGenerator $r4;
        int $i0, $i1;
        org.codehaus.jackson.type.JavaType $r10;
        java.lang.Object $r6;
        java.lang.Class $r7;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer;

        $r1 := @parameter0: java.util.List;

        $r4 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $i1 = 0;

     label02:
        $r3 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer>;

        $r5 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label03:
        if $i1 >= $i0 goto label20;

     label04:
        $r6 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

     label05:
        if $r6 != null goto label08;

     label06:
        virtualinvoke $r2.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r4);

     label07:
        goto label18;

     label08:
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r5.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>($r7);

     label09:
        $r9 = $r8;

        if $r8 != null goto label17;

     label10:
        $r10 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.type.JavaType _elementType>;

        $z0 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: boolean hasGenericTypes()>();

     label11:
        if $z0 == 0 goto label14;

     label12:
        $r10 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.type.JavaType _elementType>;

        $r10 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class)>($r7);

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider)>($r5, $r10, $r2);

     label13:
        goto label15;

     label14:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>($r5, $r7, $r2);

     label15:
        $r9 = $r8;

     label16:
        $r5 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label17:
        virtualinvoke $r9.<org.codehaus.jackson.map.JsonSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r6, $r4, $r2, $r3);

     label18:
        $i1 = $i1 + 1;

        goto label03;

     label19:
        $r11 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r2, $r11, $r1, $i1);

     label20:
        return;

        catch java.lang.Exception from label02 to label03 with label19;
        catch java.lang.Exception from label04 to label05 with label19;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Exception from label08 to label09 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label19;
        catch java.lang.Exception from label16 to label18 with label19;
    }
}
