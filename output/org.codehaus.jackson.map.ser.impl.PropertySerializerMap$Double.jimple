public final class org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double extends org.codehaus.jackson.map.ser.impl.PropertySerializerMap
{
    public final org.codehaus.jackson.map.JsonSerializer _serializer1;
    public final org.codehaus.jackson.map.JsonSerializer _serializer2;
    public final java.lang.Class _type1;
    public final java.lang.Class _type2;

    public void <init>(java.lang.Class, org.codehaus.jackson.map.JsonSerializer, java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        java.lang.Class $r1, $r3;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double r0;
        org.codehaus.jackson.map.JsonSerializer $r2, $r4;

        r0 := @this: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        $r3 := @parameter2: java.lang.Class;

        $r4 := @parameter3: org.codehaus.jackson.map.JsonSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: java.lang.Class _type1> = $r1;

        r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer _serializer1> = $r2;

        r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: java.lang.Class _type2> = $r3;

        r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer _serializer2> = $r4;

        return;
    }

    public org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi $r5;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer $r4;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[] $r3;
        java.lang.Class $r1;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double r0;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        $r3 = newarray (org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer)[2];

        $r4 = new org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer;

        $r1 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: java.lang.Class _type1>;

        $r2 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer _serializer1>;

        specialinvoke $r4.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>($r1, $r2);

        $r3[0] = $r4;

        $r4 = new org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer;

        $r1 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: java.lang.Class _type2>;

        $r2 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer _serializer2>;

        specialinvoke $r4.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>($r1, $r2);

        $r3[1] = $r4;

        $r5 = new org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi;

        specialinvoke $r5.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi: void <init>(org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[])>($r3);

        return $r5;
    }

    public org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)
    {
        java.lang.Class $r1, $r2;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double r0;
        org.codehaus.jackson.map.JsonSerializer r3;

        r0 := @this: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double;

        $r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: java.lang.Class _type1>;

        if $r1 != $r2 goto label1;

        r3 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer _serializer1>;

        return r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: java.lang.Class _type2>;

        if $r1 != $r2 goto label2;

        r3 = r0.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer _serializer2>;

        return r3;

     label2:
        return null;
    }
}
