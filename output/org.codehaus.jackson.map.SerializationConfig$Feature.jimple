public final enum class org.codehaus.jackson.map.SerializationConfig$Feature extends java.lang.Enum
{
    public static final org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES;
    public static final enum org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES;
    public final boolean _defaultState;

    static void <clinit>()
    {
        org.codehaus.jackson.map.SerializationConfig$Feature[] $r1;
        org.codehaus.jackson.map.SerializationConfig$Feature $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_ANNOTATIONS", 0, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_GETTERS", 1, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_IS_GETTERS", 2, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_FIELDS", 3, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("CAN_OVERRIDE_ACCESS_MODIFIERS", 4, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_NULL_PROPERTIES", 5, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_STATIC_TYPING", 6, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("DEFAULT_VIEW_INCLUSION", 7, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRAP_ROOT_VALUE", 8, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("INDENT_OUTPUT", 9, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("SORT_PROPERTIES_ALPHABETICALLY", 10, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_EMPTY_BEANS", 11, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRAP_EXCEPTIONS", 12, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("CLOSE_CLOSEABLE", 13, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FLUSH_AFTER_WRITE_VALUE", 14, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_DATES_AS_TIMESTAMPS", 15, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS", 16, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_ENUMS_USING_TO_STRING", 17, 0);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING> = $r0;

        $r0 = new org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRITE_NULL_MAP_VALUES", 18, 1);

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.SerializationConfig$Feature)[19];

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS>;

        $r1[1] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS>;

        $r1[2] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS>;

        $r1[3] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $r1[4] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES>;

        $r1[5] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING>;

        $r1[6] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION>;

        $r1[7] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE>;

        $r1[8] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>;

        $r1[9] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY>;

        $r1[10] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS>;

        $r1[11] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS>;

        $r1[12] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $r1[13] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $r1[14] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS>;

        $r1[15] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS>;

        $r1[16] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING>;

        $r1[17] = $r0;

        $r0 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES>;

        $r1[18] = $r0;

        <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int, boolean)
    {
        int $i0;
        java.lang.String $r1;
        org.codehaus.jackson.map.SerializationConfig$Feature r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig$Feature;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.codehaus.jackson.map.SerializationConfig$Feature: boolean _defaultState> = $z0;

        return;
    }

    public static int collectDefaults()
    {
        int $i0, $i1, $i2, $i3;
        org.codehaus.jackson.map.SerializationConfig$Feature[] $r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        $r0 = staticinvoke <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature[] values()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig$Feature: boolean enabledByDefault()>();

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        $i2 = $i2 | $i3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    public static org.codehaus.jackson.map.SerializationConfig$Feature valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/map/SerializationConfig$Feature;", $r1);

        $r2 = (org.codehaus.jackson.map.SerializationConfig$Feature) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.map.SerializationConfig$Feature[] values()
    {
        java.lang.Object $r0;
        org.codehaus.jackson.map.SerializationConfig$Feature[] $r1;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.map.SerializationConfig$Feature[]) $r0;

        return $r1;
    }

    public boolean enabledByDefault()
    {
        org.codehaus.jackson.map.SerializationConfig$Feature r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig$Feature;

        z0 = r0.<org.codehaus.jackson.map.SerializationConfig$Feature: boolean _defaultState>;

        return z0;
    }

    public int getMask()
    {
        int $i0;
        org.codehaus.jackson.map.SerializationConfig$Feature r0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig$Feature;

        $i0 = virtualinvoke r0.<java.lang.Enum: int ordinal()>();

        $i0 = 1 << $i0;

        return $i0;
    }
}
