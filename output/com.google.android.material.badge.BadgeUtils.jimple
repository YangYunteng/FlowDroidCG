public class com.google.android.material.badge.BadgeUtils extends java.lang.Object
{
    public static final boolean USE_COMPAT_PARENT;

    static void <clinit>()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 18 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT> = $z0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.badge.BadgeUtils r0;

        r0 := @this: com.google.android.material.badge.BadgeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable, android.view.View, android.widget.FrameLayout)
    {
        android.widget.FrameLayout $r1;
        android.view.View $r3;
        android.view.ViewOverlay $r2;
        com.google.android.material.badge.BadgeDrawable $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.material.badge.BadgeDrawable;

        $r3 := @parameter1: android.view.View;

        $r1 := @parameter2: android.widget.FrameLayout;

        staticinvoke <com.google.android.material.badge.BadgeUtils: void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>($r0, $r3, $r1);

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>($r0);

        return;

     label1:
        $r2 = virtualinvoke $r3.<android.view.View: android.view.ViewOverlay getOverlay()>();

        virtualinvoke $r2.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>($r0);

        return;
    }

    public static android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context, com.google.android.material.internal.ParcelableSparseArray)
    {
        android.content.Context $r1;
        com.google.android.material.internal.ParcelableSparseArray $r2;
        com.google.android.material.badge.BadgeDrawable$SavedState $r4;
        java.lang.IllegalArgumentException $r6;
        com.google.android.material.badge.BadgeDrawable $r5;
        android.util.SparseArray $r0;
        int $i0, $i1;
        java.lang.Object $r3;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.android.material.internal.ParcelableSparseArray;

        $r0 = new android.util.SparseArray;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        specialinvoke $r0.<android.util.SparseArray: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if $i0 >= $i1 goto label3;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int keyAt(int)>($i0);

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r4 = (com.google.android.material.badge.BadgeDrawable$SavedState) $r3;

        if $r4 == null goto label2;

        $r5 = staticinvoke <com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState)>($r1, $r4);

        virtualinvoke $r0.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("BadgeDrawable\'s savedState cannot be null");

        throw $r6;

     label3:
        return $r0;
    }

    public static com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray)
    {
        com.google.android.material.internal.ParcelableSparseArray $r1;
        com.google.android.material.badge.BadgeDrawable$SavedState $r4;
        java.lang.IllegalArgumentException $r5;
        com.google.android.material.badge.BadgeDrawable $r3;
        android.util.SparseArray $r0;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @parameter0: android.util.SparseArray;

        $r1 = new com.google.android.material.internal.ParcelableSparseArray;

        specialinvoke $r1.<com.google.android.material.internal.ParcelableSparseArray: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<android.util.SparseArray: int size()>();

        if $i0 >= $i1 goto label3;

        $i1 = virtualinvoke $r0.<android.util.SparseArray: int keyAt(int)>($i0);

        $r2 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r3 = (com.google.android.material.badge.BadgeDrawable) $r2;

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState getSavedState()>();

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("badgeDrawable cannot be null");

        throw $r5;

     label3:
        return $r1;
    }

    public static void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable, android.view.View, android.widget.FrameLayout)
    {
        android.widget.FrameLayout $r0;
        android.view.View $r3;
        android.view.ViewOverlay $r1;
        boolean $z0;
        com.google.android.material.badge.BadgeDrawable $r2;

        $r2 := @parameter0: com.google.android.material.badge.BadgeDrawable;

        $r3 := @parameter1: android.view.View;

        $r0 := @parameter2: android.widget.FrameLayout;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>(null);

        return;

     label2:
        $r1 = virtualinvoke $r3.<android.view.View: android.view.ViewOverlay getOverlay()>();

        virtualinvoke $r1.<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public static void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable, android.view.View, android.widget.FrameLayout)
    {
        android.graphics.Rect $r3;
        android.widget.FrameLayout $r2;
        android.view.View $r1, $r4;
        com.google.android.material.badge.BadgeDrawable $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.material.badge.BadgeDrawable;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.widget.FrameLayout;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label1;

        $r4 = $r2;

        goto label2;

     label1:
        $r4 = $r1;

     label2:
        virtualinvoke $r4.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r3);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r3);

        virtualinvoke $r0.<com.google.android.material.badge.BadgeDrawable: void updateBadgeCoordinates(android.view.View,android.view.ViewGroup)>($r1, $r2);

        return;
    }

    public static void updateBadgeBounds(android.graphics.Rect, float, float, float, float)
    {
        android.graphics.Rect $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4;

        $r0 := @parameter0: android.graphics.Rect;

        $f2 := @parameter1: float;

        $f3 := @parameter2: float;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $f4 = $f2 - $f0;

        $i0 = (int) $f4;

        $f4 = $f3 - $f1;

        $i1 = (int) $f4;

        $f2 = $f2 + $f0;

        $i2 = (int) $f2;

        $f2 = $f3 + $f1;

        $i3 = (int) $f2;

        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
}
