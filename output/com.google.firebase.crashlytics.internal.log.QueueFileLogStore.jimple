public class com.google.firebase.crashlytics.internal.log.QueueFileLogStore extends java.lang.Object implements com.google.firebase.crashlytics.internal.log.FileLogStore
{
    public static final java.nio.charset.Charset UTF_8;
    public com.google.firebase.crashlytics.internal.log.QueueFile logFile;
    public final int maxLogSize;
    public final java.io.File workingFile;

    static void <clinit>()
    {
        java.nio.charset.Charset $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.nio.charset.Charset UTF_8> = $r0;

        return;
    }

    public void <init>(java.io.File, int)
    {
        int $i0;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        java.io.File $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.io.File workingFile> = $r1;

        r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: int maxLogSize> = $i0;

        return;
    }

    private void doWriteToLog(long, java.lang.String)
    {
        byte[] $r8;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        java.lang.Object[] $r5;
        long $l0;
        java.io.IOException $r9;
        com.google.firebase.crashlytics.internal.log.QueueFile $r2;
        com.google.firebase.crashlytics.internal.Logger $r10;
        java.nio.charset.Charset $r7;
        java.lang.Long $r6;
        java.util.Locale $r4;
        int $i1, $i2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

        if $r2 != null goto label01;

        return;

     label01:
        if $r1 != null goto label02;

        $r1 = "null";

     label02:
        $i1 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: int maxLogSize>;

        $i1 = $i1 / 4;

     label03:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label04:
        if $i2 <= $i1 goto label08;

        $r3 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label06:
        $i1 = $i2 - $i1;

     label07:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r", " ");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", " ");

     label09:
        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[2];

     label10:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label11:
        $r5[0] = $r6;

        $r5[1] = $r1;

     label12:
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "%d %s%n", $r5);

     label13:
        $r7 = <com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.nio.charset.Charset UTF_8>;

     label14:
        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r7);

     label15:
        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

     label16:
        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFile: void add(byte[])>($r8);

     label17:
        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

     label18:
        $z0 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFile: boolean isEmpty()>();

     label19:
        if $z0 != 0 goto label25;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

     label20:
        $i1 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFile: int usedBytes()>();

     label21:
        $i2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: int maxLogSize>;

        if $i1 <= $i2 goto label25;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

     label22:
        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFile: void remove()>();

     label23:
        goto label17;

     label24:
        $r9 := @caughtexception;

        $r10 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r10.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("There was a problem writing to the Crashlytics log.", $r9);

     label25:
        return;

        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label12 to label13 with label24;
        catch java.io.IOException from label14 to label15 with label24;
        catch java.io.IOException from label16 to label17 with label24;
        catch java.io.IOException from label18 to label19 with label24;
        catch java.io.IOException from label20 to label21 with label24;
        catch java.io.IOException from label22 to label23 with label24;
    }

    private com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes getLogBytes()
    {
        byte[] $r4;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes $r8;
        java.io.IOException $r6;
        java.io.File $r1;
        com.google.firebase.crashlytics.internal.log.QueueFile $r2;
        com.google.firebase.crashlytics.internal.Logger $r7;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore$1 $r5;
        int[] $r3;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $r1 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.io.File workingFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        specialinvoke r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: void openLogFile()>();

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = newarray (int)[1];

        $r3[0] = 0;

        $i0 = virtualinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFile: int usedBytes()>();

        $r4 = newarray (byte)[$i0];

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

        $r5 = new com.google.firebase.crashlytics.internal.log.QueueFileLogStore$1;

     label3:
        specialinvoke $r5.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore$1: void <init>(com.google.firebase.crashlytics.internal.log.QueueFileLogStore,byte[],int[])>(r0, $r4, $r3);

        virtualinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFile: void forEach(com.google.firebase.crashlytics.internal.log.QueueFile$ElementReader)>($r5);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r7.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>("A problem occurred while reading the Crashlytics log file.", $r6);

     label6:
        $r8 = new com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes;

        $i0 = $r3[0];

        specialinvoke $r8.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes: void <init>(com.google.firebase.crashlytics.internal.log.QueueFileLogStore,byte[],int)>(r0, $r4, $i0);

        return $r8;

        catch java.io.IOException from label3 to label4 with label5;
    }

    private void openLogFile()
    {
        com.google.firebase.crashlytics.internal.Logger $r4;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        java.io.IOException $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.io.File $r2;
        com.google.firebase.crashlytics.internal.log.QueueFile $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $r1 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

        if $r1 != null goto label4;

        $r1 = new com.google.firebase.crashlytics.internal.log.QueueFile;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.io.File workingFile>;

     label1:
        specialinvoke $r1.<com.google.firebase.crashlytics.internal.log.QueueFile: void <init>(java.io.File)>($r2);

     label2:
        r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile> = $r1;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open log file: ");

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.io.File workingFile>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.google.firebase.crashlytics.internal.Logger: void e(java.lang.String,java.lang.Throwable)>($r6, $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void closeLogFile()
    {
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        com.google.firebase.crashlytics.internal.log.QueueFile $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $r1 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile>;

        staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r1, "There was a problem closing the Crashlytics log file.");

        r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFile logFile> = null;

        return;
    }

    public void deleteLogFile()
    {
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        java.io.File $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        virtualinvoke r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: void closeLogFile()>();

        $r1 = r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.io.File workingFile>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }

    public byte[] getLogAsBytes()
    {
        byte[] $r1, $r3;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        int $i0;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $r2 = specialinvoke r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes getLogBytes()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $i0 = $r2.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes: int offset>;

        $r1 = newarray (byte)[$i0];

        $r3 = $r2.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore$LogBytes: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r1, 0, $i0);

        return $r1;
    }

    public java.lang.String getLogAsString()
    {
        byte[] $r2;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r3;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $r2 = virtualinvoke r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: byte[] getLogAsBytes()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.String;

        $r1 = <com.google.firebase.crashlytics.internal.log.QueueFileLogStore: java.nio.charset.Charset UTF_8>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r2, $r1);

        return $r3;

     label1:
        return null;
    }

    public void writeToLog(long, java.lang.String)
    {
        long $l0;
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore r0;
        java.lang.String $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: void openLogFile()>();

        specialinvoke r0.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: void doWriteToLog(long,java.lang.String)>($l0, $r1);

        return;
    }
}
