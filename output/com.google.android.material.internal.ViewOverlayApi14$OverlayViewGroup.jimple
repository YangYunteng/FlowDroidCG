public class com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup extends android.view.ViewGroup
{
    public static java.lang.reflect.Method invalidateChildInParentFastMethod;
    public boolean disposed;
    public java.util.ArrayList drawables;
    public android.view.ViewGroup hostView;
    public android.view.View requestingView;
    public com.google.android.material.internal.ViewOverlayApi14 viewOverlay;

    static void <clinit>()
    {
        java.lang.NoSuchMethodException $r4;
        java.lang.Class[] $r2;
        java.lang.Class $r1, $r3;
        java.lang.RuntimeException $r5;
        java.lang.reflect.Method $r0;

        $r1 = class "Landroid/view/ViewGroup;";

        $r2 = newarray (java.lang.Class)[3];

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r2[2] = class "Landroid/graphics/Rect;";

     label1:
        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invalidateChildInParentFast", $r2);

     label2:
        <com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.lang.reflect.Method invalidateChildInParentFastMethod> = $r0;

        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public void <init>(android.content.Context, android.view.ViewGroup, android.view.View, com.google.android.material.internal.ViewOverlayApi14)
    {
        android.content.Context $r4;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0;
        android.view.View $r2;
        com.google.android.material.internal.ViewOverlayApi14 $r3;
        android.view.ViewGroup $r1;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r4 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.view.ViewGroup;

        $r2 := @parameter2: android.view.View;

        $r3 := @parameter3: com.google.android.material.internal.ViewOverlayApi14;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r4);

        r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables> = null;

        r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView> = $r1;

        r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.View requestingView> = $r2;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        virtualinvoke r0.<android.view.ViewGroup: void setRight(int)>($i0);

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        virtualinvoke r0.<android.view.ViewGroup: void setBottom(int)>($i0);

        virtualinvoke $r1.<android.view.ViewGroup: void addView(android.view.View)>(r0);

        r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: com.google.android.material.internal.ViewOverlayApi14 viewOverlay> = $r3;

        return;
    }

    private void assertNotDisposed()
    {
        java.lang.IllegalStateException $r1;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $z0 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: boolean disposed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This overlay was disposed already. Please use a new one via ViewGroupUtils.getOverlay()");

        throw $r1;
    }

    private void disposeIfEmpty()
    {
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0;
        android.view.ViewGroup $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 != 0 goto label2;

        $r1 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

     label1:
        r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: boolean disposed> = 1;

        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        virtualinvoke $r2.<android.view.ViewGroup: void removeView(android.view.View)>(r0);

     label2:
        return;
    }

    private void getOffset(int[])
    {
        android.view.ViewGroup $r4;
        int[] $r1, $r2, $r3;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0, $i1;
        android.view.View $r5;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: int[];

        $r2 = newarray (int)[2];

        $r3 = newarray (int)[2];

        $r4 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        virtualinvoke $r4.<android.view.ViewGroup: void getLocationOnScreen(int[])>($r2);

        $r5 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.View requestingView>;

        virtualinvoke $r5.<android.view.View: void getLocationOnScreen(int[])>($r3);

        $i1 = $r3[0];

        $i0 = $r2[0];

        $i0 = $i1 - $i0;

        $r1[0] = $i0;

        $i0 = $r3[1];

        $i1 = $r2[1];

        $i0 = $i0 - $i1;

        $r1[1] = $i0;

        return;
    }

    public void add(android.graphics.drawable.Drawable)
    {
        android.graphics.Rect $r3;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        android.graphics.drawable.Drawable $r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: void assertNotDisposed()>();

        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables> = $r2;

     label1:
        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.view.ViewGroup: void invalidate(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        return;
    }

    public void add(android.view.View)
    {
        android.view.ViewParent $r2;
        android.view.ViewGroup $r3, $r4;
        int[] $r5, $r6;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: void assertNotDisposed()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = (android.view.ViewGroup) $r2;

        $r4 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        if $r3 == $r4 goto label1;

        $r2 = virtualinvoke $r3.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        if $r2 == null goto label1;

        $z0 = staticinvoke <b.i.i.y: boolean D(android.view.View)>($r3);

        if $z0 == 0 goto label1;

        $r5 = newarray (int)[2];

        $r6 = newarray (int)[2];

        virtualinvoke $r3.<android.view.ViewGroup: void getLocationOnScreen(int[])>($r5);

        $r4 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        virtualinvoke $r4.<android.view.ViewGroup: void getLocationOnScreen(int[])>($r6);

        $i0 = $r5[0];

        $i1 = $r6[0];

        $i0 = $i0 - $i1;

        staticinvoke <b.i.i.y: void d(android.view.View,int)>($r1, $i0);

        $i0 = $r5[1];

        $i1 = $r6[1];

        $i0 = $i0 - $i1;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r1, $i0);

     label1:
        virtualinvoke $r3.<android.view.ViewGroup: void removeView(android.view.View)>($r1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == null goto label2;

        virtualinvoke $r3.<android.view.ViewGroup: void removeView(android.view.View)>($r1);

     label2:
        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>($r1);

        return;
    }

    public void dispatchDraw(android.graphics.Canvas)
    {
        android.graphics.Rect $r6;
        android.graphics.drawable.Drawable $r9;
        android.view.ViewGroup $r4;
        java.util.ArrayList $r7;
        int[] $r2, $r3;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0, $i1, $i2;
        android.view.View $r5;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        java.lang.Object $r8;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = newarray (int)[2];

        $r3 = newarray (int)[2];

        $r4 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        virtualinvoke $r4.<android.view.ViewGroup: void getLocationOnScreen(int[])>($r2);

        $r5 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.View requestingView>;

        virtualinvoke $r5.<android.view.View: void getLocationOnScreen(int[])>($r3);

        $i0 = 0;

        $i1 = $r3[0];

        $i2 = $r2[0];

        $i1 = $i1 - $i2;

        $f0 = (float) $i1;

        $i1 = $r3[1];

        $i2 = $r2[1];

        $i1 = $i1 - $i2;

        $f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r6 = new android.graphics.Rect;

        $r5 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.View requestingView>;

        $i1 = virtualinvoke $r5.<android.view.View: int getWidth()>();

        $r5 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.View requestingView>;

        $i2 = virtualinvoke $r5.<android.view.View: int getHeight()>();

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i2);

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r6);

        specialinvoke r0.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>($r1);

        $r7 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        if $r7 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label2:
        if $i0 >= $i1 goto label3;

        $r7 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (android.graphics.drawable.Drawable) $r8;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        android.view.MotionEvent $r1;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public android.view.ViewParent invalidateChildInParent(int[], android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.ViewParent $r2;
        android.view.ViewGroup $r4;
        int[] $r3, $r5;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0, $i1;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r3 := @parameter0: int[];

        $r1 := @parameter1: android.graphics.Rect;

        $r4 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        if $r4 == null goto label2;

        $i1 = $r3[0];

        $i0 = $r3[1];

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i1, $i0);

        $r4 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        if $r4 == null goto label1;

        $r3[0] = 0;

        $r3[1] = 0;

        $r5 = newarray (int)[2];

        specialinvoke r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: void getOffset(int[])>($r5);

        $i0 = $r5[0];

        $i1 = $r5[1];

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $r2 = specialinvoke r0.<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>($r3, $r1);

        return $r2;

     label1:
        virtualinvoke r0.<android.view.ViewGroup: void invalidate(android.graphics.Rect)>($r1);

     label2:
        return null;
    }

    public android.view.ViewParent invalidateChildInParentFast(int, int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        java.lang.IllegalAccessException $r8;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        android.view.ViewGroup $r2;
        java.lang.reflect.InvocationTargetException $r7;
        int[] $r4;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0, $i1;
        java.lang.reflect.Method $r3;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        if $r2 == null goto label11;

        $r3 = <com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.lang.reflect.Method invalidateChildInParentFastMethod>;

        if $r3 == null goto label11;

        $r4 = newarray (int)[2];

     label01:
        specialinvoke r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: void getOffset(int[])>($r4);

     label02:
        $r3 = <com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.lang.reflect.Method invalidateChildInParentFastMethod>;

        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: android.view.ViewGroup hostView>;

        $r5 = newarray (java.lang.Object)[3];

     label03:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        $r5[0] = $r6;

     label05:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label06:
        $r5[1] = $r6;

        $r5[2] = $r1;

     label07:
        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.IllegalAccessException: void printStackTrace()>();

     label11:
        return null;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.view.ViewGroup: void invalidate(android.graphics.Rect)>($r1);

        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        return;
    }

    public void remove(android.graphics.drawable.Drawable)
    {
        android.graphics.Rect $r2;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        android.graphics.drawable.Drawable $r1;
        java.util.ArrayList $r3;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        if $r3 == null goto label1;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.view.ViewGroup: void invalidate(android.graphics.Rect)>($r2);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        specialinvoke r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: void disposeIfEmpty()>();

     label1:
        return;
    }

    public void remove(android.view.View)
    {
        android.view.View $r1;
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r1);

        specialinvoke r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: void disposeIfEmpty()>();

        return;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup: java.util.ArrayList drawables>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
