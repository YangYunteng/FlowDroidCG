public class com.google.common.collect.RegularImmutableMultiset extends com.google.common.collect.ImmutableMultiset
{
    public static final com.google.common.collect.RegularImmutableMultiset EMPTY;
    public transient com.google.common.collect.ImmutableSet elementSet;
    public final transient com.google.common.collect.Multisets$ImmutableEntry[] entries;
    public final transient int hashCode;
    public final transient com.google.common.collect.Multisets$ImmutableEntry[] hashTable;
    public final transient int size;

    static void <clinit>()
    {
        com.google.common.collect.RegularImmutableMultiset $r0;
        com.google.common.collect.ImmutableList $r1;

        $r0 = new com.google.common.collect.RegularImmutableMultiset;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        specialinvoke $r0.<com.google.common.collect.RegularImmutableMultiset: void <init>(java.util.Collection)>($r1);

        <com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.RegularImmutableMultiset EMPTY> = $r0;

        return;
    }

    public void <init>(java.util.Collection)
    {
        com.google.common.collect.Multisets$ImmutableEntry[] $r1, $r4;
        long $l2, $l7;
        com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry $r10;
        com.google.common.collect.Multisets$ImmutableEntry $r8, $r9;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        boolean $z0;
        com.google.common.collect.RegularImmutableMultiset r0;
        com.google.common.collect.ImmutableSet $r3;
        java.util.Iterator $r5;
        java.util.Collection $r2;
        com.google.common.collect.Multiset$Entry $r7;
        java.lang.Object $r6;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        $r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<com.google.common.collect.ImmutableMultiset: void <init>()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $r1 = newarray (com.google.common.collect.Multisets$ImmutableEntry)[$i0];

        if $i0 != 0 goto label1;

        r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] entries> = $r1;

        r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] hashTable> = null;

        r0.<com.google.common.collect.RegularImmutableMultiset: int size> = 0;

        r0.<com.google.common.collect.RegularImmutableMultiset: int hashCode> = 0;

        $r3 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.ImmutableSet elementSet> = $r3;

        return;

     label1:
        $i1 = staticinvoke <com.google.common.collect.Hashing: int closedTableSize(int,double)>($i0, 1.0);

        $i0 = -1;

        $i0 = $i1 + $i0;

        $r4 = newarray (com.google.common.collect.Multisets$ImmutableEntry)[$i1];

        $l2 = 0L;

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $i1 = 0;

        $i3 = 0;

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.google.common.collect.Multiset$Entry) $r6;

        $r6 = interfaceinvoke $r7.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $i4 = interfaceinvoke $r7.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i5 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        $i6 = staticinvoke <com.google.common.collect.Hashing: int smear(int)>($i5);

        $i6 = $i6 & $i0;

        $r8 = $r4[$i6];

        if $r8 != null goto label6;

        $z0 = $r7 instanceof com.google.common.collect.Multisets$ImmutableEntry;

        if $z0 == 0 goto label3;

        $z0 = $r7 instanceof com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry;

        if $z0 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        if $z0 == 0 goto label5;

        $r9 = (com.google.common.collect.Multisets$ImmutableEntry) $r7;

        goto label7;

     label5:
        $r8 = new com.google.common.collect.Multisets$ImmutableEntry;

        $r9 = $r8;

        specialinvoke $r8.<com.google.common.collect.Multisets$ImmutableEntry: void <init>(java.lang.Object,int)>($r6, $i4);

        goto label7;

     label6:
        $r10 = new com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry;

        $r9 = $r10;

        specialinvoke $r10.<com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry: void <init>(java.lang.Object,int,com.google.common.collect.Multisets$ImmutableEntry)>($r6, $i4, $r8);

     label7:
        $i5 = $i5 ^ $i4;

        $i1 = $i1 + $i5;

        $r1[$i3] = $r9;

        $r4[$i6] = $r9;

        $l7 = (long) $i4;

        $l2 = $l2 + $l7;

        $i3 = $i3 + 1;

        goto label2;

     label8:
        r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] entries> = $r1;

        r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] hashTable> = $r4;

        $i0 = staticinvoke <com.google.common.primitives.Ints: int saturatedCast(long)>($l2);

        r0.<com.google.common.collect.RegularImmutableMultiset: int size> = $i0;

        r0.<com.google.common.collect.RegularImmutableMultiset: int hashCode> = $i1;

        return;
    }

    public static com.google.common.collect.Multisets$ImmutableEntry[] access$100(com.google.common.collect.RegularImmutableMultiset)
    {
        com.google.common.collect.RegularImmutableMultiset $r0;
        com.google.common.collect.Multisets$ImmutableEntry[] r1;

        $r0 := @parameter0: com.google.common.collect.RegularImmutableMultiset;

        r1 = $r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] entries>;

        return r1;
    }

    public int count(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableMultiset r0;
        com.google.common.collect.Multisets$ImmutableEntry[] $r2;
        com.google.common.collect.Multisets$ImmutableEntry $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] hashTable>;

        if $r1 == null goto label4;

        if $r2 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r1);

        $i1 = lengthof $r2;

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i0 = $i0 & $i1;

        $r3 = $r2[$i0];

     label2:
        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<com.google.common.collect.Multisets$ImmutableEntry: java.lang.Object getElement()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r3.<com.google.common.collect.Multisets$ImmutableEntry: int getCount()>();

        return $i0;

     label3:
        $r3 = virtualinvoke $r3.<com.google.common.collect.Multisets$ImmutableEntry: com.google.common.collect.Multisets$ImmutableEntry nextInBucket()>();

        goto label2;

     label4:
        return 0;
    }

    public com.google.common.collect.ImmutableSet elementSet()
    {
        com.google.common.collect.RegularImmutableMultiset$ElementSet $r2;
        com.google.common.collect.RegularImmutableMultiset r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        $r1 = r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.ImmutableSet elementSet>;

        if $r1 != null goto label1;

        $r2 = new com.google.common.collect.RegularImmutableMultiset$ElementSet;

        specialinvoke $r2.<com.google.common.collect.RegularImmutableMultiset$ElementSet: void <init>(com.google.common.collect.RegularImmutableMultiset,com.google.common.collect.RegularImmutableMultiset$1)>(r0, null);

        r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.ImmutableSet elementSet> = $r2;

        return $r2;

     label1:
        return $r1;
    }

    public volatile java.util.Set elementSet()
    {
        com.google.common.collect.RegularImmutableMultiset r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.ImmutableSet elementSet()>();

        return $r1;
    }

    public com.google.common.collect.Multiset$Entry getEntry(int)
    {
        com.google.common.collect.RegularImmutableMultiset r0;
        com.google.common.collect.Multisets$ImmutableEntry $r2;
        com.google.common.collect.Multisets$ImmutableEntry[] $r1;
        int $i0;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.Multisets$ImmutableEntry[] entries>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public int hashCode()
    {
        int i0;
        com.google.common.collect.RegularImmutableMultiset r0;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        i0 = r0.<com.google.common.collect.RegularImmutableMultiset: int hashCode>;

        return i0;
    }

    public boolean isPartialView()
    {
        com.google.common.collect.RegularImmutableMultiset r0;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        return 0;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.RegularImmutableMultiset r0;

        r0 := @this: com.google.common.collect.RegularImmutableMultiset;

        i0 = r0.<com.google.common.collect.RegularImmutableMultiset: int size>;

        return i0;
    }
}
