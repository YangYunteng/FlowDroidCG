public final class com.google.common.cache.CacheLoader$1 extends com.google.common.cache.CacheLoader
{
    public final java.util.concurrent.Executor val$executor;
    public final com.google.common.cache.CacheLoader val$loader;

    public void <init>(com.google.common.cache.CacheLoader, java.util.concurrent.Executor)
    {
        com.google.common.cache.CacheLoader $r1;
        com.google.common.cache.CacheLoader$1 r0;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.google.common.cache.CacheLoader$1;

        $r1 := @parameter0: com.google.common.cache.CacheLoader;

        $r2 := @parameter1: java.util.concurrent.Executor;

        r0.<com.google.common.cache.CacheLoader$1: com.google.common.cache.CacheLoader val$loader> = $r1;

        r0.<com.google.common.cache.CacheLoader$1: java.util.concurrent.Executor val$executor> = $r2;

        specialinvoke r0.<com.google.common.cache.CacheLoader: void <init>()>();

        return;
    }

    public java.lang.Object load(java.lang.Object)
    {
        com.google.common.cache.CacheLoader $r1;
        java.lang.Object $r2;
        com.google.common.cache.CacheLoader$1 r0;

        r0 := @this: com.google.common.cache.CacheLoader$1;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.cache.CacheLoader$1: com.google.common.cache.CacheLoader val$loader>;

        $r2 = virtualinvoke $r1.<com.google.common.cache.CacheLoader: java.lang.Object load(java.lang.Object)>($r2);

        return $r2;
    }

    public java.util.Map loadAll(java.lang.Iterable)
    {
        com.google.common.cache.CacheLoader $r1;
        com.google.common.cache.CacheLoader$1 r0;
        java.util.Map $r2;
        java.lang.Iterable $r3;

        r0 := @this: com.google.common.cache.CacheLoader$1;

        $r3 := @parameter0: java.lang.Iterable;

        $r1 = r0.<com.google.common.cache.CacheLoader$1: com.google.common.cache.CacheLoader val$loader>;

        $r2 = virtualinvoke $r1.<com.google.common.cache.CacheLoader: java.util.Map loadAll(java.lang.Iterable)>($r3);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.CacheLoader$1$1 $r1;
        com.google.common.cache.CacheLoader$1 r0;
        com.google.common.util.concurrent.ListenableFutureTask $r2;
        java.util.concurrent.Executor $r5;
        java.lang.Object $r3, $r4;

        r0 := @this: com.google.common.cache.CacheLoader$1;

        $r3 := @parameter0: java.lang.Object;

        $r4 := @parameter1: java.lang.Object;

        $r1 = new com.google.common.cache.CacheLoader$1$1;

        specialinvoke $r1.<com.google.common.cache.CacheLoader$1$1: void <init>(com.google.common.cache.CacheLoader$1,java.lang.Object,java.lang.Object)>(r0, $r3, $r4);

        $r2 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>($r1);

        $r5 = r0.<com.google.common.cache.CacheLoader$1: java.util.concurrent.Executor val$executor>;

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return $r2;
    }
}
