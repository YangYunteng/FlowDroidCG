public final class com.google.common.collect.TreeRangeMap$1 extends java.lang.Object implements com.google.common.collect.RangeMap
{

    public void <init>()
    {
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Map asDescendingMapOfRanges()
    {
        com.google.common.collect.TreeRangeMap$1 r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r1;
    }

    public java.util.Map asMapOfRanges()
    {
        com.google.common.collect.TreeRangeMap$1 r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r1;
    }

    public void clear()
    {
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        return;
    }

    public java.lang.Object get(java.lang.Comparable)
    {
        java.lang.Comparable $r1;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 := @parameter0: java.lang.Comparable;

        return null;
    }

    public java.util.Map$Entry getEntry(java.lang.Comparable)
    {
        java.lang.Comparable $r1;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 := @parameter0: java.lang.Comparable;

        return null;
    }

    public void put(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.Range $r3;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r5;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r3 := @parameter0: com.google.common.collect.Range;

        $r4 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot insert range ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into an empty subRangeMap");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;
    }

    public void putAll(com.google.common.collect.RangeMap)
    {
        java.util.Map $r2;
        com.google.common.collect.RangeMap $r1;
        java.lang.IllegalArgumentException $r3;
        com.google.common.collect.TreeRangeMap$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 := @parameter0: com.google.common.collect.RangeMap;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.RangeMap: java.util.Map asMapOfRanges()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot putAll(nonEmptyRangeMap) into an empty subRangeMap");

        throw $r3;
    }

    public void putCoalescing(com.google.common.collect.Range, java.lang.Object)
    {
        com.google.common.collect.Range $r3;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r5;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r3 := @parameter0: com.google.common.collect.Range;

        $r4 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot insert range ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into an empty subRangeMap");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;
    }

    public void remove(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 := @parameter0: com.google.common.collect.Range;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return;
    }

    public com.google.common.collect.Range span()
    {
        java.util.NoSuchElementException $r1;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.TreeRangeMap$1 r0;

        r0 := @this: com.google.common.collect.TreeRangeMap$1;

        $r1 := @parameter0: com.google.common.collect.Range;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return r0;
    }
}
