public class org.codehaus.jackson.map.deser.CollectionDeserializer extends org.codehaus.jackson.map.deser.ContainerDeserializer
{
    public final org.codehaus.jackson.type.JavaType _collectionType;
    public final java.lang.reflect.Constructor _defaultCtor;
    public final org.codehaus.jackson.map.JsonDeserializer _valueDeserializer;
    public final org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer;

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonDeserializer, org.codehaus.jackson.map.TypeDeserializer, java.lang.reflect.Constructor)
    {
        java.lang.IllegalArgumentException $r6;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        java.lang.reflect.Constructor $r4;
        org.codehaus.jackson.map.TypeDeserializer $r3;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.JsonDeserializer $r2;
        java.lang.Class $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        $r3 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r4 := @parameter3: java.lang.reflect.Constructor;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.ContainerDeserializer: void <init>(java.lang.Class)>($r5);

        r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.type.JavaType _collectionType> = $r1;

        r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = $r2;

        r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer> = $r3;

        if $r4 == null goto label1;

        r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: java.lang.reflect.Constructor _defaultCtor> = $r4;

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default constructor found for container class ");

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }

    private final java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.util.Collection)
    {
        org.codehaus.jackson.JsonToken $r4, $r8;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r6;
        java.util.Collection $r2;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.TypeDeserializer $r3;
        org.codehaus.jackson.map.JsonMappingException $r12;
        org.codehaus.jackson.type.JavaType $r10;
        org.codehaus.jackson.map.JsonDeserializer $r7;
        java.lang.Object $r9;
        java.lang.Class $r11;
        org.codehaus.jackson.JsonParser $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r5 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: java.util.Collection;

        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

        $r8 = virtualinvoke $r5.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r8 != $r4 goto label1;

        $r9 = null;

        goto label3;

     label1:
        if $r3 != null goto label2;

        $r9 = virtualinvoke $r7.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r5, $r1);

        goto label3;

     label2:
        $r9 = virtualinvoke $r7.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r5, $r1, $r3);

     label3:
        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        return $r2;

     label4:
        $r10 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.type.JavaType _collectionType>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r12 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r11);

        throw $r12;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        java.util.Collection $r2;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r3, $r1);

        return $r2;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object)
    {
        java.util.Collection $r2;
        java.lang.Object $r4;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r3 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 := @parameter2: java.lang.Object;

        $r2 = (java.util.Collection) $r4;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection)>($r3, $r1, $r2);

        return $r2;
    }

    public java.util.Collection deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext)
    {
        java.lang.Object[] $r4;
        java.util.Collection $r6;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        java.lang.reflect.Constructor $r3;
        org.codehaus.jackson.map.DeserializationContext $r1;
        java.lang.Exception $r7;
        org.codehaus.jackson.map.JsonMappingException $r10;
        org.codehaus.jackson.type.JavaType $r8;
        java.lang.Object $r5;
        java.lang.Class $r9;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: java.lang.reflect.Constructor _defaultCtor>;

     label2:
        $r4 = newarray (java.lang.Object)[0];

     label3:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        $r6 = (java.util.Collection) $r5;

     label4:
        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection)>($r2, $r1, $r6);

        return $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.type.JavaType _collectionType>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r10 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>($r9, $r7);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.util.Collection deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.util.Collection)
    {
        org.codehaus.jackson.JsonToken $r6, $r7;
        java.util.Collection $r3;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.map.TypeDeserializer $r4;
        org.codehaus.jackson.map.JsonDeserializer $r5;
        java.lang.Object $r8;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 := @parameter2: java.util.Collection;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection)>($r1, $r2, $r3);

        return $r3;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r4 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

     label2:
        $r6 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r6 == $r7 goto label6;

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r6 != $r7 goto label3;

        $r8 = null;

        goto label5;

     label3:
        if $r4 != null goto label4;

        $r8 = virtualinvoke $r5.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        goto label5;

     label4:
        $r8 = virtualinvoke $r5.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r1, $r2, $r4);

     label5:
        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        goto label2;

     label6:
        return $r3;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.TypeDeserializer $r2;
        java.lang.Object $r3;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r4 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r4, $r1);

        return $r3;
    }

    public org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()
    {
        org.codehaus.jackson.map.JsonDeserializer r1;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        r1 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        return r1;
    }

    public org.codehaus.jackson.type.JavaType getContentType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.deser.CollectionDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.CollectionDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.type.JavaType _collectionType>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType getContentType()>();

        return $r1;
    }
}
