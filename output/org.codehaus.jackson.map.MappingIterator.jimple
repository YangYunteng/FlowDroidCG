public class org.codehaus.jackson.map.MappingIterator extends java.lang.Object implements java.util.Iterator
{
    public static final org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR;
    public final org.codehaus.jackson.map.DeserializationContext _context;
    public final org.codehaus.jackson.map.JsonDeserializer _deserializer;
    public final org.codehaus.jackson.JsonParser _parser;
    public final org.codehaus.jackson.type.JavaType _type;

    static void <clinit>()
    {
        org.codehaus.jackson.map.MappingIterator $r0;

        $r0 = new org.codehaus.jackson.map.MappingIterator;

        specialinvoke $r0.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer)>(null, null, null, null);

        <org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR> = $r0;

        return;
    }

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.JsonToken $r5, $r6;
        org.codehaus.jackson.map.MappingIterator r0;
        org.codehaus.jackson.map.DeserializationContext $r4;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.JsonDeserializer $r2;
        org.codehaus.jackson.JsonStreamContext $r7;
        org.codehaus.jackson.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        $r3 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 := @parameter1: org.codehaus.jackson.JsonParser;

        $r4 := @parameter2: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.type.JavaType _type> = $r3;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser> = $r1;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.DeserializationContext _context> = $r4;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.JsonDeserializer _deserializer> = $r2;

        if $r1 == null goto label1;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        if $r5 != $r6 goto label1;

        $r7 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonStreamContext getParsingContext()>();

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.JsonStreamContext: boolean inRoot()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

     label1:
        return;
    }

    public static org.codehaus.jackson.map.MappingIterator emptyIterator()
    {
        org.codehaus.jackson.map.MappingIterator r0;

        r0 = <org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR>;

        return r0;
    }

    public boolean hasNext()
    {
        org.codehaus.jackson.map.JsonMappingException $r4;
        org.codehaus.jackson.map.MappingIterator r0;
        java.io.IOException $r1;
        java.lang.RuntimeException $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.RuntimeJsonMappingException $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.MappingIterator: boolean hasNextValue()>();

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r3 = virtualinvoke $r1.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r1);

        throw $r2;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.codehaus.jackson.map.RuntimeJsonMappingException;

        $r3 = virtualinvoke $r4.<org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.map.JsonMappingException)>($r3, $r4);

        throw $r5;

        catch org.codehaus.jackson.map.JsonMappingException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean hasNextValue()
    {
        org.codehaus.jackson.JsonToken $r1, $r3;
        org.codehaus.jackson.map.MappingIterator r0;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        $r2 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        if $r1 != null goto label3;

        $r2 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r3 != null goto label2;

        $r2 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonParser: void close()>();

        return 0;

     label2:
        $r1 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r3 != $r1 goto label3;

        return 0;

     label3:
        return 1;
    }

    public java.lang.Object next()
    {
        org.codehaus.jackson.map.JsonMappingException $r5;
        org.codehaus.jackson.map.MappingIterator r0;
        java.lang.Object $r1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;
        org.codehaus.jackson.map.RuntimeJsonMappingException $r6;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object nextValue()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r2);

        throw $r3;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.codehaus.jackson.map.RuntimeJsonMappingException;

        $r4 = virtualinvoke $r5.<org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>();

        specialinvoke $r6.<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.map.JsonMappingException)>($r4, $r5);

        throw $r6;

        catch org.codehaus.jackson.map.JsonMappingException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object nextValue()
    {
        org.codehaus.jackson.map.MappingIterator r0;
        java.lang.Object $r2;
        org.codehaus.jackson.map.JsonDeserializer $r3;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.JsonParser $r4;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        $r3 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.JsonDeserializer _deserializer>;

        $r4 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        $r1 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.DeserializationContext _context>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r4, $r1);

        $r4 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        virtualinvoke $r4.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        org.codehaus.jackson.map.MappingIterator r0;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
