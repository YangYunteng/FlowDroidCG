public class com.google.android.material.tabs.TabLayout$Tab extends java.lang.Object
{
    public static final int INVALID_POSITION;
    public java.lang.CharSequence contentDesc;
    public android.view.View customView;
    public android.graphics.drawable.Drawable icon;
    public int labelVisibilityMode;
    public com.google.android.material.tabs.TabLayout parent;
    public int position;
    public java.lang.Object tag;
    public java.lang.CharSequence text;
    public com.google.android.material.tabs.TabLayout$TabView view;

    public void <init>()
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$Tab: int position> = $i0;

        r0.<com.google.android.material.tabs.TabLayout$Tab: int labelVisibilityMode> = 1;

        return;
    }

    public static java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        r1 = $r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence contentDesc>;

        return r1;
    }

    public static int access$1000(com.google.android.material.tabs.TabLayout$Tab)
    {
        int i0;
        com.google.android.material.tabs.TabLayout$Tab $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        i0 = $r0.<com.google.android.material.tabs.TabLayout$Tab: int labelVisibilityMode>;

        return i0;
    }

    public static java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        r1 = $r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence text>;

        return r1;
    }

    public com.google.android.material.badge.BadgeDrawable getBadge()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout$TabView $r2;
        com.google.android.material.badge.BadgeDrawable $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $r1 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable access$800(com.google.android.material.tabs.TabLayout$TabView)>($r2);

        return $r1;
    }

    public java.lang.CharSequence getContentDescription()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.CharSequence $r1;
        com.google.android.material.tabs.TabLayout$TabView $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r2.<android.widget.LinearLayout: java.lang.CharSequence getContentDescription()>();

        return $r1;
    }

    public android.view.View getCustomView()
    {
        android.view.View r1;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: android.view.View customView>;

        return r1;
    }

    public android.graphics.drawable.Drawable getIcon()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable icon>;

        return r1;
    }

    public com.google.android.material.badge.BadgeDrawable getOrCreateBadge()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout$TabView $r2;
        com.google.android.material.badge.BadgeDrawable $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $r1 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable access$600(com.google.android.material.tabs.TabLayout$TabView)>($r2);

        return $r1;
    }

    public int getPosition()
    {
        int i0;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        i0 = r0.<com.google.android.material.tabs.TabLayout$Tab: int position>;

        return i0;
    }

    public int getTabLabelVisibility()
    {
        int i0;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        i0 = r0.<com.google.android.material.tabs.TabLayout$Tab: int labelVisibilityMode>;

        return i0;
    }

    public java.lang.Object getTag()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.Object r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.Object tag>;

        return r1;
    }

    public java.lang.CharSequence getText()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.CharSequence r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence text>;

        return r1;
    }

    public boolean isSelected()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()>();

        $i1 = r0.<com.google.android.material.tabs.TabLayout$Tab: int position>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab not attached to a TabLayout");

        throw $r2;
    }

    public void removeBadge()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout$TabView $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        staticinvoke <com.google.android.material.tabs.TabLayout$TabView: void access$700(com.google.android.material.tabs.TabLayout$TabView)>($r1);

        return;
    }

    public void reset()
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent> = null;

        r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view> = null;

        r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.Object tag> = null;

        r0.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable icon> = null;

        r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence text> = null;

        r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence contentDesc> = null;

        $i0 = -1;

        r0.<com.google.android.material.tabs.TabLayout$Tab: int position> = $i0;

        r0.<com.google.android.material.tabs.TabLayout$Tab: android.view.View customView> = null;

        return;
    }

    public void select()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.IllegalArgumentException $r2;
        com.google.android.material.tabs.TabLayout $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout: void selectTab(com.google.android.material.tabs.TabLayout$Tab)>(r0);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab not attached to a TabLayout");

        throw $r2;
    }

    public com.google.android.material.tabs.TabLayout$Tab setContentDescription(int)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.CharSequence $r3;
        com.google.android.material.tabs.TabLayout $r1;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        android.content.res.Resources $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.widget.HorizontalScrollView: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        r0 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence)>($r3);

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab not attached to a TabLayout");

        throw $r4;
    }

    public com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence contentDesc> = $r1;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: void updateView()>();

        return r0;
    }

    public com.google.android.material.tabs.TabLayout$Tab setCustomView(int)
    {
        android.content.Context $r2;
        com.google.android.material.tabs.TabLayout$Tab r0;
        android.view.LayoutInflater $r3;
        int $i0;
        android.view.View $r4;
        com.google.android.material.tabs.TabLayout$TabView $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r1, 0);

        r0 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View)>($r4);

        return r0;
    }

    public com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View)
    {
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 := @parameter0: android.view.View;

        r0.<com.google.android.material.tabs.TabLayout$Tab: android.view.View customView> = $r1;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: void updateView()>();

        return r0;
    }

    public com.google.android.material.tabs.TabLayout$Tab setIcon(int)
    {
        android.content.Context $r2;
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout $r1;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.widget.HorizontalScrollView: android.content.Context getContext()>();

        $r3 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r2, $i0);

        r0 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable)>($r3);

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab not attached to a TabLayout");

        throw $r4;
    }

    public com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout $r2;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.tabs.TabLayout$TabView $r3;
        boolean $z0;
        com.google.android.material.badge.BadgeDrawable $r4;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable icon> = $r1;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        $i0 = $r2.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        if $i0 == 1 goto label1;

        $i0 = $r2.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 != 2 goto label2;

     label1:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        virtualinvoke $r2.<com.google.android.material.tabs.TabLayout: void updateTabViews(boolean)>(1);

     label2:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: void updateView()>();

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $z0 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: boolean access$400(com.google.android.material.tabs.TabLayout$TabView)>($r3);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $r4 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable access$500(com.google.android.material.tabs.TabLayout$TabView)>($r3);

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        virtualinvoke $r3.<android.widget.LinearLayout: void invalidate()>();

     label3:
        return r0;
    }

    public void setPosition(int)
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$Tab r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.tabs.TabLayout$Tab: int position> = $i0;

        return;
    }

    public com.google.android.material.tabs.TabLayout$Tab setTabLabelVisibility(int)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout $r1;
        int $i0;
        com.google.android.material.tabs.TabLayout$TabView $r2;
        boolean $z0;
        com.google.android.material.badge.BadgeDrawable $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.tabs.TabLayout$Tab: int labelVisibilityMode> = $i0;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        $i0 = $r1.<com.google.android.material.tabs.TabLayout: int tabGravity>;

        if $i0 == 1 goto label1;

        $i0 = $r1.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i0 != 2 goto label2;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout: void updateTabViews(boolean)>(1);

     label2:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: void updateView()>();

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $z0 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: boolean access$400(com.google.android.material.tabs.TabLayout$TabView)>($r2);

        if $z0 == 0 goto label3;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        $r3 = staticinvoke <com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable access$500(com.google.android.material.tabs.TabLayout$TabView)>($r2);

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        virtualinvoke $r2.<android.widget.LinearLayout: void invalidate()>();

     label3:
        return r0;
    }

    public com.google.android.material.tabs.TabLayout$Tab setTag(java.lang.Object)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.Object $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 := @parameter0: java.lang.Object;

        r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.Object tag> = $r1;

        return r0;
    }

    public com.google.android.material.tabs.TabLayout$Tab setText(int)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.CharSequence $r3;
        com.google.android.material.tabs.TabLayout $r1;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        android.content.res.Resources $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout parent>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.widget.HorizontalScrollView: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        r0 = virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence)>($r3);

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tab not attached to a TabLayout");

        throw $r4;
    }

    public com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence)
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        java.lang.CharSequence $r1, $r2;
        com.google.android.material.tabs.TabLayout$TabView $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence contentDesc>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        virtualinvoke $r3.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>($r1);

     label1:
        r0.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence text> = $r1;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$Tab: void updateView()>();

        return r0;
    }

    public void updateView()
    {
        com.google.android.material.tabs.TabLayout$Tab r0;
        com.google.android.material.tabs.TabLayout$TabView $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$Tab;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$TabView view>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$TabView: void update()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.tabs.TabLayout$Tab: int INVALID_POSITION> = -1;

        return;
    }
}
