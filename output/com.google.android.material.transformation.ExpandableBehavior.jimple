public abstract class com.google.android.material.transformation.ExpandableBehavior extends androidx.coordinatorlayout.widget.CoordinatorLayout$b
{
    public static final int STATE_COLLAPSED;
    public static final int STATE_EXPANDED;
    public static final int STATE_UNINITIALIZED;
    public int currentState;

    public void <init>()
    {
        com.google.android.material.transformation.ExpandableBehavior r0;

        r0 := @this: com.google.android.material.transformation.ExpandableBehavior;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void <init>()>();

        r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState> = 0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        com.google.android.material.transformation.ExpandableBehavior r0;
        android.util.AttributeSet $r1;

        r0 := @this: com.google.android.material.transformation.ExpandableBehavior;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void <init>(android.content.Context,android.util.AttributeSet)>($r2, $r1);

        r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState> = 0;

        return;
    }

    public static int access$000(com.google.android.material.transformation.ExpandableBehavior)
    {
        int i0;
        com.google.android.material.transformation.ExpandableBehavior $r0;

        $r0 := @parameter0: com.google.android.material.transformation.ExpandableBehavior;

        i0 = $r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState>;

        return i0;
    }

    private boolean didStateChange(boolean)
    {
        int $i0;
        com.google.android.material.transformation.ExpandableBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.transformation.ExpandableBehavior;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $i0 = r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState>;

        if $i0 == 0 goto label1;

        if $i0 != 2 goto label3;

     label1:
        return 1;

     label2:
        $i0 = r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState>;

        if $i0 != 1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static com.google.android.material.transformation.ExpandableBehavior 'from'(android.view.View, java.lang.Class)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r4;
        java.lang.IllegalArgumentException $r7;
        com.google.android.material.transformation.ExpandableBehavior $r6;
        android.view.View $r0;
        java.lang.Class $r1;
        java.lang.Object $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r2 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label2;

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $r4 = virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()>();

        $z0 = $r4 instanceof com.google.android.material.transformation.ExpandableBehavior;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        $r6 = (com.google.android.material.transformation.ExpandableBehavior) $r5;

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The view is not associated with ExpandableBehavior");

        throw $r7;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The view is not a child of CoordinatorLayout");

        throw $r7;
    }

    public com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        com.google.android.material.expandable.ExpandableWidget $r6;
        java.util.List $r3;
        com.google.android.material.transformation.ExpandableBehavior r0;
        int $i0, $i1;
        android.view.View $r1, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.transformation.ExpandableBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r3 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>($r1);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (android.view.View) $r4;

        $z0 = virtualinvoke r0.<com.google.android.material.transformation.ExpandableBehavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r2, $r1, $r5);

        if $z0 == 0 goto label2;

        $r6 = (com.google.android.material.expandable.ExpandableWidget) $r5;

        return $r6;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public abstract boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View);

    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        com.google.android.material.transformation.ExpandableBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        byte $b0;
        com.google.android.material.expandable.ExpandableWidget $r4;
        android.view.View $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.transformation.ExpandableBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $r4 = (com.google.android.material.expandable.ExpandableWidget) $r3;

        $z0 = interfaceinvoke $r4.<com.google.android.material.expandable.ExpandableWidget: boolean isExpanded()>();

        $z0 = specialinvoke r0.<com.google.android.material.transformation.ExpandableBehavior: boolean didStateChange(boolean)>($z0);

        if $z0 == 0 goto label3;

        $z0 = interfaceinvoke $r4.<com.google.android.material.expandable.ExpandableWidget: boolean isExpanded()>();

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState> = $b0;

        $r3 = (android.view.View) $r4;

        $z0 = interfaceinvoke $r4.<com.google.android.material.expandable.ExpandableWidget: boolean isExpanded()>();

        $z0 = virtualinvoke r0.<com.google.android.material.transformation.ExpandableBehavior: boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean)>($r3, $r1, $z0, 1);

        return $z0;

     label3:
        return 0;
    }

    public abstract boolean onExpandedStateChange(android.view.View, android.view.View, boolean, boolean);

    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        com.google.android.material.transformation.ExpandableBehavior$1 $r2;
        com.google.android.material.expandable.ExpandableWidget $r4;
        com.google.android.material.transformation.ExpandableBehavior r0;
        byte $b1;
        int $i0;
        android.view.View $r1;
        android.view.ViewTreeObserver $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.transformation.ExpandableBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 = staticinvoke <b.i.i.y: boolean E(android.view.View)>($r1);

        if $z0 != 0 goto label3;

        $r4 = virtualinvoke r0.<com.google.android.material.transformation.ExpandableBehavior: com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r3, $r1);

        if $r4 == null goto label3;

        $z0 = interfaceinvoke $r4.<com.google.android.material.expandable.ExpandableWidget: boolean isExpanded()>();

        $z0 = specialinvoke r0.<com.google.android.material.transformation.ExpandableBehavior: boolean didStateChange(boolean)>($z0);

        if $z0 == 0 goto label3;

        $z0 = interfaceinvoke $r4.<com.google.android.material.expandable.ExpandableWidget: boolean isExpanded()>();

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState> = $b1;

        $i0 = r0.<com.google.android.material.transformation.ExpandableBehavior: int currentState>;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = new com.google.android.material.transformation.ExpandableBehavior$1;

        specialinvoke $r2.<com.google.android.material.transformation.ExpandableBehavior$1: void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget)>(r0, $r1, $i0, $r4);

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r2);

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <com.google.android.material.transformation.ExpandableBehavior: int STATE_EXPANDED> = 1;

        <com.google.android.material.transformation.ExpandableBehavior: int STATE_COLLAPSED> = 2;

        return;
    }
}
