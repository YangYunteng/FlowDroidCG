public abstract class com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState extends com.google.common.util.concurrent.AggregateFuture$RunningState
{
    public final com.google.common.util.concurrent.CollectionFuture this$0;
    public java.util.List values;

    public void <init>(com.google.common.util.concurrent.CollectionFuture, com.google.common.collect.ImmutableCollection, boolean)
    {
        java.util.List $r3;
        com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState r0;
        com.google.common.util.concurrent.CollectionFuture $r2;
        int $i0, $i1;
        com.google.common.collect.ImmutableCollection $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState;

        $r2 := @parameter0: com.google.common.util.concurrent.CollectionFuture;

        $r1 := @parameter1: com.google.common.collect.ImmutableCollection;

        $z0 := @parameter2: boolean;

        r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: com.google.common.util.concurrent.CollectionFuture this$0> = $r2;

        specialinvoke r0.<com.google.common.util.concurrent.AggregateFuture$RunningState: void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection,boolean,boolean)>($r2, $r1, $z0, 1);

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        goto label2;

     label1:
        $i0 = virtualinvoke $r1.<java.util.AbstractCollection: int size()>();

        $r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>($i0);

     label2:
        r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: java.util.List values> = $r3;

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.AbstractCollection: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: java.util.List values>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(null);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;
    }

    public final void collectOneValue(boolean, int, java.lang.Object)
    {
        java.util.List $r2;
        com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState r0;
        com.google.common.util.concurrent.CollectionFuture $r4;
        com.google.common.base.Optional $r3;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: java.util.List values>;

        if $r2 == null goto label1;

        $r3 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>($r1);

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r3);

        return;

     label1:
        if $z0 != 0 goto label3;

        $r4 = r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: com.google.common.util.concurrent.CollectionFuture this$0>;

        $z0 = virtualinvoke $r4.<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $z0 = 1;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Future was done before all dependencies completed");

        return;
    }

    public abstract java.lang.Object combine(java.util.List);

    public final void handleAllCompleted()
    {
        java.util.List $r2;
        com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState r0;
        com.google.common.util.concurrent.CollectionFuture $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState;

        $r2 = r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: java.util.List values>;

        if $r2 == null goto label1;

        $r1 = r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: com.google.common.util.concurrent.CollectionFuture this$0>;

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: java.lang.Object combine(java.util.List)>($r2);

        virtualinvoke $r1.<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>($r3);

        return;

     label1:
        $r1 = r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: com.google.common.util.concurrent.CollectionFuture this$0>;

        $z0 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        return;
    }

    public void releaseResourcesAfterFailure()
    {
        com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState r0;

        r0 := @this: com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState;

        specialinvoke r0.<com.google.common.util.concurrent.AggregateFuture$RunningState: void releaseResourcesAfterFailure()>();

        r0.<com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState: java.util.List values> = null;

        return;
    }
}
