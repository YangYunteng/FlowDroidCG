public interface  org.codehaus.jackson.map.introspect.VisibilityChecker extends java.lang.Object
{

    public abstract boolean isCreatorVisible(java.lang.reflect.Member);

    public abstract boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember);

    public abstract boolean isFieldVisible(java.lang.reflect.Field);

    public abstract boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField);

    public abstract boolean isGetterVisible(java.lang.reflect.Method);

    public abstract boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public abstract boolean isIsGetterVisible(java.lang.reflect.Method);

    public abstract boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public abstract boolean isSetterVisible(java.lang.reflect.Method);

    public abstract boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker 'with'(org.codehaus.jackson.annotate.JsonAutoDetect);

    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility);

    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility);

    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility);

    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility);

    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility);
}
