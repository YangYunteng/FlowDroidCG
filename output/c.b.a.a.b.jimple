public class c.b.a.a.b extends java.lang.Object
{
    public static final java.util.Comparator a;
    public java.util.List b;
    public java.util.List c;
    public int d;
    public final int e;

    static void <clinit>()
    {
        c.b.a.a.a $r0;

        $r0 = new c.b.a.a.a;

        specialinvoke $r0.<c.b.a.a.a: void <init>()>();

        <c.b.a.a.b: java.util.Comparator a> = $r0;

        return;
    }

    public void <init>(int)
    {
        int $i0;
        c.b.a.a.b r0;
        java.util.LinkedList $r1;
        java.util.ArrayList $r2;

        r0 := @this: c.b.a.a.b;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<c.b.a.a.b: java.util.List b> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(64);

        r0.<c.b.a.a.b: java.util.List c> = $r2;

        r0.<c.b.a.a.b: int d> = 0;

        r0.<c.b.a.a.b: int e> = $i0;

        return;
    }

    public final void a()
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        java.util.List $r2;
        int $i0, $i1;
        c.b.a.a.b r0;
        java.lang.Object $r1;

        r0 := @this: c.b.a.a.b;

        entermonitor r0;

     label1:
        $i0 = r0.<c.b.a.a.b: int d>;

        $i1 = r0.<c.b.a.a.b: int e>;

        if $i0 <= $i1 goto label3;

        $r2 = r0.<c.b.a.a.b: java.util.List b>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

        $r3 = (byte[]) $r1;

        $r2 = r0.<c.b.a.a.b: java.util.List c>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r3);

        $i0 = r0.<c.b.a.a.b: int d>;

        $i1 = lengthof $r3;

        $i0 = $i0 - $i1;

        r0.<c.b.a.a.b: int d> = $i0;

     label2:
        goto label1;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        goto label5;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void a(byte[])
    {
        java.lang.Throwable $r4;
        byte[] $r1;
        java.util.List $r2;
        int $i0, $i1;
        c.b.a.a.b r0;
        java.util.Comparator $r3;

        r0 := @this: c.b.a.a.b;

        $r1 := @parameter0: byte[];

        entermonitor r0;

        if $r1 == null goto label6;

     label1:
        $i0 = lengthof $r1;

        $i1 = r0.<c.b.a.a.b: int e>;

        if $i0 <= $i1 goto label2;

        goto label6;

     label2:
        $r2 = r0.<c.b.a.a.b: java.util.List b>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r2 = r0.<c.b.a.a.b: java.util.List c>;

        $r3 = <c.b.a.a.b: java.util.Comparator a>;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>($r2, $r1, $r3);

        $i1 = $i0;

        if $i0 >= 0 goto label3;

        $i0 = neg $i0;

        $i1 = -1;

        $i1 = $i0 + $i1;

     label3:
        $r2 = r0.<c.b.a.a.b: java.util.List c>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i1, $r1);

        $i0 = r0.<c.b.a.a.b: int d>;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        r0.<c.b.a.a.b: int d> = $i0;

        virtualinvoke r0.<c.b.a.a.b: void a()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public byte[] a(int)
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        c.b.a.a.b r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;

        r0 := @this: c.b.a.a.b;

        $i0 := @parameter0: int;

        entermonitor r0;

        $i1 = 0;

     label1:
        $r1 = r0.<c.b.a.a.b: java.util.List c>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label4;

        $r1 = r0.<c.b.a.a.b: java.util.List c>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (byte[]) $r2;

        $i2 = lengthof $r3;

        if $i2 < $i0 goto label3;

        $i0 = r0.<c.b.a.a.b: int d>;

        $i2 = lengthof $r3;

        $i0 = $i0 - $i2;

        r0.<c.b.a.a.b: int d> = $i0;

        $r1 = r0.<c.b.a.a.b: java.util.List c>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r1 = r0.<c.b.a.a.b: java.util.List b>;

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>($r3);

     label2:
        exitmonitor r0;

        return $r3;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r3 = newarray (byte)[$i0];

     label5:
        exitmonitor r0;

        return $r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor r0;

        goto label7;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
