public abstract class com.google.common.collect.Ordering extends java.lang.Object implements java.util.Comparator
{
    public static final int LEFT_IS_GREATER;
    public static final int RIGHT_IS_GREATER;

    public void <init>()
    {
        com.google.common.collect.Ordering r0;

        r0 := @this: com.google.common.collect.Ordering;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.collect.Ordering allEqual()
    {
        com.google.common.collect.AllEqualOrdering r0;

        r0 = <com.google.common.collect.AllEqualOrdering: com.google.common.collect.AllEqualOrdering INSTANCE>;

        return r0;
    }

    public static com.google.common.collect.Ordering arbitrary()
    {
        com.google.common.collect.Ordering r0;

        r0 = <com.google.common.collect.Ordering$ArbitraryOrderingHolder: com.google.common.collect.Ordering ARBITRARY_ORDERING>;

        return r0;
    }

    public static com.google.common.collect.Ordering compound(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        com.google.common.collect.CompoundOrdering $r1;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 = new com.google.common.collect.CompoundOrdering;

        specialinvoke $r1.<com.google.common.collect.CompoundOrdering: void <init>(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static transient com.google.common.collect.Ordering explicit(java.lang.Object, java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r0;
        com.google.common.collect.Ordering $r3;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <com.google.common.collect.Lists: java.util.List asList(java.lang.Object,java.lang.Object[])>($r1, $r0);

        $r3 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering explicit(java.util.List)>($r2);

        return $r3;
    }

    public static com.google.common.collect.Ordering explicit(java.util.List)
    {
        java.util.List $r0;
        com.google.common.collect.ExplicitOrdering $r1;

        $r0 := @parameter0: java.util.List;

        $r1 = new com.google.common.collect.ExplicitOrdering;

        specialinvoke $r1.<com.google.common.collect.ExplicitOrdering: void <init>(java.util.List)>($r0);

        return $r1;
    }

    public static com.google.common.collect.Ordering 'from'(com.google.common.collect.Ordering)
    {
        com.google.common.collect.Ordering $r0;

        $r0 := @parameter0: com.google.common.collect.Ordering;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        return $r0;
    }

    public static com.google.common.collect.Ordering 'from'(java.util.Comparator)
    {
        com.google.common.collect.Ordering $r1;
        com.google.common.collect.ComparatorOrdering $r2;
        java.util.Comparator $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Comparator;

        $z0 = $r0 instanceof com.google.common.collect.Ordering;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.collect.Ordering) $r0;

        return $r1;

     label1:
        $r2 = new com.google.common.collect.ComparatorOrdering;

        specialinvoke $r2.<com.google.common.collect.ComparatorOrdering: void <init>(java.util.Comparator)>($r0);

        return $r2;
    }

    public static com.google.common.collect.Ordering natural()
    {
        com.google.common.collect.NaturalOrdering r0;

        r0 = <com.google.common.collect.NaturalOrdering: com.google.common.collect.NaturalOrdering INSTANCE>;

        return r0;
    }

    public static com.google.common.collect.Ordering usingToString()
    {
        com.google.common.collect.UsingToStringOrdering r0;

        r0 = <com.google.common.collect.UsingToStringOrdering: com.google.common.collect.UsingToStringOrdering INSTANCE>;

        return r0;
    }

    public int binarySearch(java.util.List, java.lang.Object)
    {
        java.util.List $r2;
        com.google.common.collect.Ordering r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>($r2, $r1, r0);

        return $i0;
    }

    public abstract int compare(java.lang.Object, java.lang.Object);

    public com.google.common.collect.Ordering compound(java.util.Comparator)
    {
        com.google.common.collect.Ordering r0;
        java.util.Comparator $r2;
        com.google.common.collect.CompoundOrdering $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.util.Comparator;

        $r1 = new com.google.common.collect.CompoundOrdering;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        specialinvoke $r1.<com.google.common.collect.CompoundOrdering: void <init>(java.util.Comparator,java.util.Comparator)>(r0, $r2);

        return $r1;
    }

    public java.util.List greatestOf(java.lang.Iterable, int)
    {
        java.util.List $r2;
        com.google.common.collect.Ordering r0;
        int $i0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        r0 = virtualinvoke r0.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.Ordering: java.util.List leastOf(java.lang.Iterable,int)>($r1, $i0);

        return $r2;
    }

    public java.util.List greatestOf(java.util.Iterator, int)
    {
        java.util.List $r2;
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r1;
        int $i0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.util.Iterator;

        $i0 := @parameter1: int;

        r0 = virtualinvoke r0.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.Ordering: java.util.List leastOf(java.util.Iterator,int)>($r1, $i0);

        return $r2;
    }

    public com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable)
    {
        com.google.common.collect.Ordering r0;
        com.google.common.collect.ImmutableList $r1;
        java.lang.Iterable $r2;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList sortedCopyOf(java.util.Comparator,java.lang.Iterable)>(r0, $r2);

        return $r1;
    }

    public boolean isOrdered(java.lang.Iterable)
    {
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r2;
        int $i0;
        java.lang.Object $r3, $r4;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = virtualinvoke r0.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $i0 <= 0 goto label2;

        return 0;

     label2:
        $r3 = $r4;

        goto label1;

     label3:
        return 1;
    }

    public boolean isStrictlyOrdered(java.lang.Iterable)
    {
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r2;
        int $i0;
        java.lang.Object $r3, $r4;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = virtualinvoke r0.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $i0 < 0 goto label2;

        return 0;

     label2:
        $r3 = $r4;

        goto label1;

     label3:
        return 1;
    }

    public java.util.List leastOf(java.lang.Iterable, int)
    {
        java.lang.Object[] $r3, $r4;
        java.util.Iterator $r6;
        java.util.Collection $r2;
        long $l2, $l3;
        java.lang.Iterable $r1;
        java.util.List $r5;
        com.google.common.collect.Ordering r0;
        byte $b4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        $r2 = (java.util.Collection) $r1;

        $i1 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $l2 = (long) $i1;

        $l3 = (long) $i0;

        $l3 = $l3 * 2L;

        $b4 = $l2 cmp $l3;

        $i1 = (int) $b4;

        if $i1 > 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray()>();

        $r4 = $r3;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r3, r0);

        $i1 = lengthof $r3;

        if $i1 <= $i0 goto label1;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, $i0);

     label1:
        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        return $r5;

     label2:
        $r6 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r5 = virtualinvoke r0.<com.google.common.collect.Ordering: java.util.List leastOf(java.util.Iterator,int)>($r6, $i0);

        return $r5;
    }

    public java.util.List leastOf(java.util.Iterator, int)
    {
        java.util.Iterator $r1;
        java.util.ArrayList $r2;
        java.util.List $r3;
        com.google.common.collect.Ordering r0;
        int $i0, $i1;
        com.google.common.collect.TopKSelector $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.util.Iterator;

        $i0 := @parameter1: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "k");

        if $i0 == 0 goto label4;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        if $i0 < 1073741823 goto label3;

        $r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r1);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, r0);

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 <= $i0 goto label2;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.List subList(int,int)>($i0, $i1);

        interfaceinvoke $r3.<java.util.List: void clear()>();

     label2:
        virtualinvoke $r2.<java.util.ArrayList: void trimToSize()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;

     label3:
        $r4 = staticinvoke <com.google.common.collect.TopKSelector: com.google.common.collect.TopKSelector least(int,java.util.Comparator)>($i0, r0);

        virtualinvoke $r4.<com.google.common.collect.TopKSelector: void offerAll(java.util.Iterator)>($r1);

        $r3 = virtualinvoke $r4.<com.google.common.collect.TopKSelector: java.util.List topK()>();

        return $r3;

     label4:
        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;
    }

    public com.google.common.collect.Ordering lexicographical()
    {
        com.google.common.collect.Ordering r0;
        com.google.common.collect.LexicographicalOrdering $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 = new com.google.common.collect.LexicographicalOrdering;

        specialinvoke $r1.<com.google.common.collect.LexicographicalOrdering: void <init>(java.util.Comparator)>(r0);

        return $r1;
    }

    public java.lang.Object max(java.lang.Iterable)
    {
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object max(java.util.Iterator)>($r2);

        return $r3;
    }

    public java.lang.Object max(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.Ordering r0;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $i0 < 0 goto label1;

        return $r2;

     label1:
        return $r1;
    }

    public transient java.lang.Object max(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        com.google.common.collect.Ordering r0;
        int $i0, $i1;
        java.lang.Object $r2, $r3, $r4;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r4 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r3 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>($r2, $r4);

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        $r3 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public java.lang.Object max(java.util.Iterator)
    {
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.util.Iterator;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label1;

     label2:
        return $r2;
    }

    public java.lang.Object min(java.lang.Iterable)
    {
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object min(java.util.Iterator)>($r2);

        return $r3;
    }

    public java.lang.Object min(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.Ordering r0;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $i0 > 0 goto label1;

        return $r2;

     label1:
        return $r1;
    }

    public transient java.lang.Object min(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        com.google.common.collect.Ordering r0;
        int $i0, $i1;
        java.lang.Object $r2, $r3, $r4;

        r0 := @this: com.google.common.collect.Ordering;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r4 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r3 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>($r2, $r4);

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        $r3 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public java.lang.Object min(java.util.Iterator)
    {
        com.google.common.collect.Ordering r0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.util.Iterator;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label1;

     label2:
        return $r2;
    }

    public com.google.common.collect.Ordering nullsFirst()
    {
        com.google.common.collect.NullsFirstOrdering $r1;
        com.google.common.collect.Ordering r0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 = new com.google.common.collect.NullsFirstOrdering;

        specialinvoke $r1.<com.google.common.collect.NullsFirstOrdering: void <init>(com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public com.google.common.collect.Ordering nullsLast()
    {
        com.google.common.collect.NullsLastOrdering $r1;
        com.google.common.collect.Ordering r0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 = new com.google.common.collect.NullsLastOrdering;

        specialinvoke $r1.<com.google.common.collect.NullsLastOrdering: void <init>(com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public com.google.common.collect.Ordering onKeys()
    {
        com.google.common.base.Function $r1;
        com.google.common.collect.Ordering r0;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 = staticinvoke <com.google.common.collect.Maps: com.google.common.base.Function keyFunction()>();

        r0 = virtualinvoke r0.<com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)>($r1);

        return r0;
    }

    public com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)
    {
        com.google.common.base.Function $r1;
        com.google.common.collect.Ordering r0;
        com.google.common.collect.ByFunctionOrdering $r2;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: com.google.common.base.Function;

        $r2 = new com.google.common.collect.ByFunctionOrdering;

        specialinvoke $r2.<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>($r1, r0);

        return $r2;
    }

    public com.google.common.collect.Ordering reverse()
    {
        com.google.common.collect.Ordering r0;
        com.google.common.collect.ReverseOrdering $r1;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 = new com.google.common.collect.ReverseOrdering;

        specialinvoke $r1.<com.google.common.collect.ReverseOrdering: void <init>(com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public java.util.List sortedCopy(java.lang.Iterable)
    {
        java.util.List $r3;
        java.lang.Object[] $r2;
        com.google.common.collect.Ordering r0;
        java.lang.Iterable $r1;
        java.util.ArrayList $r4;

        r0 := @this: com.google.common.collect.Ordering;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable)>($r1);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, r0);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.Ordering: int RIGHT_IS_GREATER> = -1;

        <com.google.common.collect.Ordering: int LEFT_IS_GREATER> = 1;

        return;
    }
}
