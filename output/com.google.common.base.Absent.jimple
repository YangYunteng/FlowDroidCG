public final class com.google.common.base.Absent extends com.google.common.base.Optional
{
    public static final com.google.common.base.Absent INSTANCE;
    public static final long serialVersionUID;

    static void <clinit>()
    {
        com.google.common.base.Absent $r0;

        $r0 = new com.google.common.base.Absent;

        specialinvoke $r0.<com.google.common.base.Absent: void <init>()>();

        <com.google.common.base.Absent: com.google.common.base.Absent INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        specialinvoke r0.<com.google.common.base.Optional: void <init>()>();

        return;
    }

    private java.lang.Object readResolve()
    {
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        r0 = <com.google.common.base.Absent: com.google.common.base.Absent INSTANCE>;

        return r0;
    }

    public static com.google.common.base.Optional withType()
    {
        com.google.common.base.Absent r0;

        r0 = <com.google.common.base.Absent: com.google.common.base.Absent INSTANCE>;

        return r0;
    }

    public java.util.Set asSet()
    {
        java.util.Set $r1;
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object get()
    {
        java.lang.IllegalStateException $r1;
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Optional.get() cannot be called on an absent value");

        throw $r1;
    }

    public int hashCode()
    {
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        return 2040732332;
    }

    public boolean isPresent()
    {
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        return 0;
    }

    public com.google.common.base.Optional or(com.google.common.base.Optional)
    {
        com.google.common.base.Absent r0;
        com.google.common.base.Optional $r1;

        r0 := @this: com.google.common.base.Absent;

        $r1 := @parameter0: com.google.common.base.Optional;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public java.lang.Object or(com.google.common.base.Supplier)
    {
        com.google.common.base.Supplier $r2;
        java.lang.Object $r1;
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        $r2 := @parameter0: com.google.common.base.Supplier;

        $r1 = interfaceinvoke $r2.<com.google.common.base.Supplier: java.lang.Object get()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "use Optional.orNull() instead of a Supplier that returns null");

        return $r1;
    }

    public java.lang.Object or(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "use Optional.orNull() instead of Optional.or(null)");

        return $r1;
    }

    public java.lang.Object orNull()
    {
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        return null;
    }

    public java.lang.String toString()
    {
        com.google.common.base.Absent r0;

        r0 := @this: com.google.common.base.Absent;

        return "Optional.absent()";
    }

    public com.google.common.base.Optional transform(com.google.common.base.Function)
    {
        com.google.common.base.Absent r0;
        com.google.common.base.Function $r2;
        com.google.common.base.Optional $r1;

        r0 := @this: com.google.common.base.Absent;

        $r2 := @parameter0: com.google.common.base.Function;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r1 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r1;
    }
}
