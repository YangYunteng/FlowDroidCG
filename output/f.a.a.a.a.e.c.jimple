public class f.a.a.a.a.e.c extends java.lang.Object implements f.a.a.a.a.e.g
{
    public final f.a.a.a.o a;
    public f.a.a.a.a.e.i b;
    public javax.net.ssl.SSLSocketFactory c;
    public boolean d;

    public void <init>()
    {
        f.a.a.a.a.e.c r0;
        f.a.a.a.c $r1;

        r0 := @this: f.a.a.a.a.e.c;

        $r1 = new f.a.a.a.c;

        specialinvoke $r1.<f.a.a.a.c: void <init>()>();

        specialinvoke r0.<f.a.a.a.a.e.c: void <init>(f.a.a.a.o)>($r1);

        return;
    }

    public void <init>(f.a.a.a.o)
    {
        f.a.a.a.a.e.c r0;
        f.a.a.a.o $r1;

        r0 := @this: f.a.a.a.a.e.c;

        $r1 := @parameter0: f.a.a.a.o;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<f.a.a.a.a.e.c: f.a.a.a.o a> = $r1;

        return;
    }

    public io.fabric.sdk.android.services.network.HttpRequest a(f.a.a.a.a.e.d, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r4;
        java.util.Map $r3;
        f.a.a.a.a.e.d $r2;
        f.a.a.a.a.e.c r0;
        java.lang.String $r1;

        r0 := @this: f.a.a.a.a.e.c;

        $r2 := @parameter0: f.a.a.a.a.e.d;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r4 = virtualinvoke r0.<f.a.a.a.a.e.c: io.fabric.sdk.android.services.network.HttpRequest a(f.a.a.a.a.e.d,java.lang.String,java.util.Map)>($r2, $r1, $r3);

        return $r4;
    }

    public io.fabric.sdk.android.services.network.HttpRequest a(f.a.a.a.a.e.d, java.lang.String, java.util.Map)
    {
        java.net.HttpURLConnection $r9;
        javax.net.ssl.HttpsURLConnection $r10;
        f.a.a.a.a.e.i $r7;
        io.fabric.sdk.android.services.network.HttpRequest $r5;
        java.lang.IllegalArgumentException $r6;
        javax.net.ssl.SSLSocketFactory $r8;
        int[] $r4;
        java.util.Map $r3;
        f.a.a.a.a.e.d $r1;
        int $i0;
        f.a.a.a.a.e.c r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: f.a.a.a.a.e.c;

        $r1 := @parameter0: f.a.a.a.a.e.d;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        $r4 = <f.a.a.a.a.e.b: int[] a>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r4[$i0];

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label3;

        if $i0 == 3 goto label2;

        if $i0 != 4 goto label1;

        $r5 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.CharSequence)>($r2);

        goto label5;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported HTTP method!");

        throw $r6;

     label2:
        $r5 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest e(java.lang.CharSequence)>($r2);

        goto label5;

     label3:
        $r5 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest b(java.lang.CharSequence,java.util.Map,boolean)>($r2, $r3, 1);

        goto label5;

     label4:
        $r5 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.CharSequence,java.util.Map,boolean)>($r2, $r3, 1);

     label5:
        $z0 = virtualinvoke r0.<f.a.a.a.a.e.c: boolean a(java.lang.String)>($r2);

        if $z0 == 0 goto label6;

        $r7 = r0.<f.a.a.a.a.e.c: f.a.a.a.a.e.i b>;

        if $r7 == null goto label6;

        $r8 = virtualinvoke r0.<f.a.a.a.a.e.c: javax.net.ssl.SSLSocketFactory a()>();

        if $r8 == null goto label6;

        $r9 = virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection l()>();

        $r10 = (javax.net.ssl.HttpsURLConnection) $r9;

        virtualinvoke $r10.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r8);

     label6:
        return $r5;
    }

    public final javax.net.ssl.SSLSocketFactory a()
    {
        java.lang.Throwable $r2;
        f.a.a.a.a.e.c r0;
        javax.net.ssl.SSLSocketFactory $r1;
        boolean $z0;

        r0 := @this: f.a.a.a.a.e.c;

        entermonitor r0;

     label1:
        $r1 = r0.<f.a.a.a.a.e.c: javax.net.ssl.SSLSocketFactory c>;

        if $r1 != null goto label2;

        $z0 = r0.<f.a.a.a.a.e.c: boolean d>;

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke r0.<f.a.a.a.a.e.c: javax.net.ssl.SSLSocketFactory b()>();

        r0.<f.a.a.a.a.e.c: javax.net.ssl.SSLSocketFactory c> = $r1;

     label2:
        $r1 = r0.<f.a.a.a.a.e.c: javax.net.ssl.SSLSocketFactory c>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void a(f.a.a.a.a.e.i)
    {
        f.a.a.a.a.e.c r0;
        f.a.a.a.a.e.i $r1, $r2;

        r0 := @this: f.a.a.a.a.e.c;

        $r1 := @parameter0: f.a.a.a.a.e.i;

        $r2 = r0.<f.a.a.a.a.e.c: f.a.a.a.a.e.i b>;

        if $r2 == $r1 goto label1;

        r0.<f.a.a.a.a.e.c: f.a.a.a.a.e.i b> = $r1;

        virtualinvoke r0.<f.a.a.a.a.e.c: void c()>();

     label1:
        return;
    }

    public final boolean a(java.lang.String)
    {
        java.util.Locale $r2;
        f.a.a.a.a.e.c r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: f.a.a.a.a.e.c;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final javax.net.ssl.SSLSocketFactory b()
    {
        java.lang.Throwable $r5;
        f.a.a.a.o $r3;
        f.a.a.a.a.e.i $r2;
        f.a.a.a.a.e.c r0;
        java.lang.Exception $r4;
        javax.net.ssl.SSLSocketFactory $r1;

        r0 := @this: f.a.a.a.a.e.c;

        entermonitor r0;

     label1:
        r0.<f.a.a.a.a.e.c: boolean d> = 1;

     label2:
        $r2 = r0.<f.a.a.a.a.e.c: f.a.a.a.a.e.i b>;

        $r1 = staticinvoke <f.a.a.a.a.e.h: javax.net.ssl.SSLSocketFactory a(f.a.a.a.a.e.i)>($r2);

        $r3 = r0.<f.a.a.a.a.e.c: f.a.a.a.o a>;

        interfaceinvoke $r3.<f.a.a.a.o: void d(java.lang.String,java.lang.String)>("Fabric", "Custom SSL pinning enabled");

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r4 := @caughtexception;

     label5:
        $r3 = r0.<f.a.a.a.a.e.c: f.a.a.a.o a>;

        interfaceinvoke $r3.<f.a.a.a.o: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Exception while validating pinned certs", $r4);

     label6:
        exitmonitor r0;

        return null;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public final void c()
    {
        java.lang.Throwable $r1;
        f.a.a.a.a.e.c r0;

        r0 := @this: f.a.a.a.a.e.c;

        entermonitor r0;

     label1:
        r0.<f.a.a.a.a.e.c: boolean d> = 0;

        r0.<f.a.a.a.a.e.c: javax.net.ssl.SSLSocketFactory c> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
