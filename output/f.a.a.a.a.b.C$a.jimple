public class f.a.a.a.a.b.C$a extends java.lang.Object
{
    public static final f.a.a.a.a.b.C$a a;
    public final int b;
    public final int c;

    static void <clinit>()
    {
        f.a.a.a.a.b.C$a $r0;

        $r0 = new f.a.a.a.a.b.C$a;

        specialinvoke $r0.<f.a.a.a.a.b.C$a: void <init>(int,int)>(0, 0);

        <f.a.a.a.a.b.C$a: f.a.a.a.a.b.C$a a> = $r0;

        return;
    }

    public void <init>(int, int)
    {
        int $i0, $i1;
        f.a.a.a.a.b.C$a r0;

        r0 := @this: f.a.a.a.a.b.C$a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<f.a.a.a.a.b.C$a: int b> = $i0;

        r0.<f.a.a.a.a.b.C$a: int c> = $i1;

        return;
    }

    public java.lang.String toString()
    {
        f.a.a.a.a.b.C$a r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: f.a.a.a.a.b.C$a;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "Lf/a/a/a/a/b/C$a;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[position = ");

        $i0 = r0.<f.a.a.a.a.b.C$a: int b>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length = ");

        $i0 = r0.<f.a.a.a.a.b.C$a: int c>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
