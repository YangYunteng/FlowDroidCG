public abstract class f.a.a.a.a.c.e extends java.lang.Object
{
    public static final int a;
    public static final int b;
    public static final int c;
    public static final java.util.concurrent.ThreadFactory d;
    public static final java.util.concurrent.BlockingQueue e;
    public static final java.util.concurrent.Executor f;
    public static final java.util.concurrent.Executor g;
    public static final f.a.a.a.a.c.e$b h;
    public static volatile java.util.concurrent.Executor i;
    public final f.a.a.a.a.c.e$e j;
    public final java.util.concurrent.FutureTask k;
    public volatile f.a.a.a.a.c.e$d l;
    public final java.util.concurrent.atomic.AtomicBoolean m;
    public final java.util.concurrent.atomic.AtomicBoolean n;

    static void <clinit>()
    {
        java.util.concurrent.ThreadPoolExecutor $r6;
        java.util.concurrent.Executor $r9;
        f.a.a.a.a.c.e$b $r8;
        java.lang.Runtime $r3;
        f.a.a.a.a.c.e$c $r7;
        java.util.concurrent.BlockingQueue $r1;
        java.util.concurrent.LinkedBlockingQueue $r5;
        java.util.concurrent.TimeUnit $r0;
        int $i0, $i1;
        java.util.concurrent.ThreadFactory $r2;
        f.a.a.a.a.c.a $r4;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i0 = virtualinvoke $r3.<java.lang.Runtime: int availableProcessors()>();

        <f.a.a.a.a.c.e: int a> = $i0;

        $i0 = <f.a.a.a.a.c.e: int a>;

        $i1 = $i0 + 1;

        <f.a.a.a.a.c.e: int b> = $i1;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        <f.a.a.a.a.c.e: int c> = $i0;

        $r4 = new f.a.a.a.a.c.a;

        specialinvoke $r4.<f.a.a.a.a.c.a: void <init>()>();

        <f.a.a.a.a.c.e: java.util.concurrent.ThreadFactory d> = $r4;

        $r5 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r5.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(128);

        <f.a.a.a.a.c.e: java.util.concurrent.BlockingQueue e> = $r5;

        $r6 = new java.util.concurrent.ThreadPoolExecutor;

        $i0 = <f.a.a.a.a.c.e: int b>;

        $i1 = <f.a.a.a.a.c.e: int c>;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r1 = <f.a.a.a.a.c.e: java.util.concurrent.BlockingQueue e>;

        $r2 = <f.a.a.a.a.c.e: java.util.concurrent.ThreadFactory d>;

        specialinvoke $r6.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>($i0, $i1, 1L, $r0, $r1, $r2);

        <f.a.a.a.a.c.e: java.util.concurrent.Executor f> = $r6;

        $r7 = new f.a.a.a.a.c.e$c;

        specialinvoke $r7.<f.a.a.a.a.c.e$c: void <init>(f.a.a.a.a.c.a)>(null);

        <f.a.a.a.a.c.e: java.util.concurrent.Executor g> = $r7;

        $r8 = new f.a.a.a.a.c.e$b;

        specialinvoke $r8.<f.a.a.a.a.c.e$b: void <init>()>();

        <f.a.a.a.a.c.e: f.a.a.a.a.c.e$b h> = $r8;

        $r9 = <f.a.a.a.a.c.e: java.util.concurrent.Executor g>;

        <f.a.a.a.a.c.e: java.util.concurrent.Executor i> = $r9;

        return;
    }

    public void <init>()
    {
        f.a.a.a.a.c.e$d $r2;
        f.a.a.a.a.c.e$e $r1;
        f.a.a.a.a.c.e r0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        f.a.a.a.a.c.c $r5;
        f.a.a.a.a.c.b $r4;

        r0 := @this: f.a.a.a.a.c.e;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <f.a.a.a.a.c.e$d: f.a.a.a.a.c.e$d a>;

        r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d l> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<f.a.a.a.a.c.e: java.util.concurrent.atomic.AtomicBoolean m> = $r3;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<f.a.a.a.a.c.e: java.util.concurrent.atomic.AtomicBoolean n> = $r3;

        $r4 = new f.a.a.a.a.c.b;

        specialinvoke $r4.<f.a.a.a.a.c.b: void <init>(f.a.a.a.a.c.e)>(r0);

        r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$e j> = $r4;

        $r5 = new f.a.a.a.a.c.c;

        $r1 = r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$e j>;

        specialinvoke $r5.<f.a.a.a.a.c.c: void <init>(f.a.a.a.a.c.e,java.util.concurrent.Callable)>(r0, $r1);

        r0.<f.a.a.a.a.c.e: java.util.concurrent.FutureTask k> = $r5;

        return;
    }

    public static java.lang.Object a(f.a.a.a.a.c.e, java.lang.Object)
    {
        f.a.a.a.a.c.e $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: f.a.a.a.a.c.e;

        $r1 := @parameter1: java.lang.Object;

        virtualinvoke $r0.<f.a.a.a.a.c.e: java.lang.Object d(java.lang.Object)>($r1);

        return $r1;
    }

    public static java.util.concurrent.atomic.AtomicBoolean a(f.a.a.a.a.c.e)
    {
        f.a.a.a.a.c.e $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @parameter0: f.a.a.a.a.c.e;

        r1 = $r0.<f.a.a.a.a.c.e: java.util.concurrent.atomic.AtomicBoolean n>;

        return r1;
    }

    public static void b(f.a.a.a.a.c.e, java.lang.Object)
    {
        f.a.a.a.a.c.e $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: f.a.a.a.a.c.e;

        $r1 := @parameter1: java.lang.Object;

        virtualinvoke $r0.<f.a.a.a.a.c.e: void e(java.lang.Object)>($r1);

        return;
    }

    public static void c(f.a.a.a.a.c.e, java.lang.Object)
    {
        f.a.a.a.a.c.e $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: f.a.a.a.a.c.e;

        $r1 := @parameter1: java.lang.Object;

        virtualinvoke $r0.<f.a.a.a.a.c.e: void a(java.lang.Object)>($r1);

        return;
    }

    public final f.a.a.a.a.c.e$d a()
    {
        f.a.a.a.a.c.e r0;
        f.a.a.a.a.c.e$d r1;

        r0 := @this: f.a.a.a.a.c.e;

        r1 = r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d l>;

        return r1;
    }

    public final transient f.a.a.a.a.c.e a(java.util.concurrent.Executor, java.lang.Object[])
    {
        java.lang.IllegalStateException $r6;
        java.lang.Object[] $r2;
        f.a.a.a.a.c.e$d $r3, $r4;
        java.util.concurrent.Executor $r1;
        f.a.a.a.a.c.e$e $r7;
        java.util.concurrent.FutureTask $r8;
        int[] $r5;
        int $i0;
        f.a.a.a.a.c.e r0;

        r0 := @this: f.a.a.a.a.c.e;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d l>;

        $r4 = <f.a.a.a.a.c.e$d: f.a.a.a.a.c.e$d a>;

        if $r3 == $r4 goto label3;

        $r5 = <f.a.a.a.a.c.d: int[] a>;

        $r3 = r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d l>;

        $i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i0 = $r5[$i0];

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        goto label3;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task has already been executed (a task can be executed only once)");

        throw $r6;

     label2:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task is already running.");

        throw $r6;

     label3:
        $r3 = <f.a.a.a.a.c.e$d: f.a.a.a.a.c.e$d b>;

        r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d l> = $r3;

        virtualinvoke r0.<f.a.a.a.a.c.e: void c()>();

        $r7 = r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$e j>;

        $r7.<f.a.a.a.a.c.e$e: java.lang.Object[] a> = $r2;

        $r8 = r0.<f.a.a.a.a.c.e: java.util.concurrent.FutureTask k>;

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

        return r0;
    }

    public abstract transient java.lang.Object a(java.lang.Object[]);

    public final void a(java.lang.Object)
    {
        f.a.a.a.a.c.e$d $r2;
        f.a.a.a.a.c.e r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.e;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<f.a.a.a.a.c.e: boolean b()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<f.a.a.a.a.c.e: void b(java.lang.Object)>($r1);

        goto label2;

     label1:
        virtualinvoke r0.<f.a.a.a.a.c.e: void c(java.lang.Object)>($r1);

     label2:
        $r2 = <f.a.a.a.a.c.e$d: f.a.a.a.a.c.e$d c>;

        r0.<f.a.a.a.a.c.e: f.a.a.a.a.c.e$d l> = $r2;

        return;
    }

    public final boolean a(boolean)
    {
        f.a.a.a.a.c.e r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.util.concurrent.FutureTask $r2;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.e;

        $z0 := @parameter0: boolean;

        $r1 = r0.<f.a.a.a.a.c.e: java.util.concurrent.atomic.AtomicBoolean m>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r2 = r0.<f.a.a.a.a.c.e: java.util.concurrent.FutureTask k>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.FutureTask: boolean cancel(boolean)>($z0);

        return $z0;
    }

    public abstract void b(java.lang.Object);

    public transient void b(java.lang.Object[])
    {
        f.a.a.a.a.c.e r0;
        java.lang.Object[] $r1;

        r0 := @this: f.a.a.a.a.c.e;

        $r1 := @parameter0: java.lang.Object[];

        return;
    }

    public final boolean b()
    {
        f.a.a.a.a.c.e r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.e;

        $r1 = r0.<f.a.a.a.a.c.e: java.util.concurrent.atomic.AtomicBoolean m>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public void c()
    {
        f.a.a.a.a.c.e r0;

        r0 := @this: f.a.a.a.a.c.e;

        return;
    }

    public abstract void c(java.lang.Object);

    public final java.lang.Object d(java.lang.Object)
    {
        f.a.a.a.a.c.e$a $r2;
        java.lang.Object[] $r3;
        android.os.Message $r4;
        f.a.a.a.a.c.e$b $r5;
        f.a.a.a.a.c.e r0;
        java.lang.Object $r1;

        r0 := @this: f.a.a.a.a.c.e;

        $r1 := @parameter0: java.lang.Object;

        $r5 = <f.a.a.a.a.c.e: f.a.a.a.a.c.e$b h>;

        $r2 = new f.a.a.a.a.c.e$a;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        specialinvoke $r2.<f.a.a.a.a.c.e$a: void <init>(f.a.a.a.a.c.e,java.lang.Object[])>(r0, $r3);

        $r4 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return $r1;
    }

    public final void e(java.lang.Object)
    {
        f.a.a.a.a.c.e r0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: f.a.a.a.a.c.e;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<f.a.a.a.a.c.e: java.util.concurrent.atomic.AtomicBoolean n>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<f.a.a.a.a.c.e: java.lang.Object d(java.lang.Object)>($r1);

     label1:
        return;
    }
}
