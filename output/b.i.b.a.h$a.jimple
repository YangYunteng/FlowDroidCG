public abstract class b.i.b.a.h$a extends java.lang.Object
{

    public void <init>()
    {
        b.i.b.a.h$a r0;

        r0 := @this: b.i.b.a.h$a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void callbackFailAsync(int, android.os.Handler)
    {
        android.os.Looper $r1;
        android.os.Handler $r2;
        int $i0;
        b.i.b.a.g $r3;
        b.i.b.a.h$a r0;

        r0 := @this: b.i.b.a.h$a;

        $i0 := @parameter0: int;

        $r2 := @parameter1: android.os.Handler;

        if $r2 != null goto label1;

        $r2 = new android.os.Handler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r1);

     label1:
        $r3 = new b.i.b.a.g;

        specialinvoke $r3.<b.i.b.a.g: void <init>(b.i.b.a.h$a,int)>(r0, $i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public final void callbackSuccessAsync(android.graphics.Typeface, android.os.Handler)
    {
        android.graphics.Typeface $r1;
        android.os.Looper $r2;
        android.os.Handler $r3;
        b.i.b.a.f $r4;
        b.i.b.a.h$a r0;

        r0 := @this: b.i.b.a.h$a;

        $r1 := @parameter0: android.graphics.Typeface;

        $r3 := @parameter1: android.os.Handler;

        if $r3 != null goto label1;

        $r3 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r2);

     label1:
        $r4 = new b.i.b.a.f;

        specialinvoke $r4.<b.i.b.a.f: void <init>(b.i.b.a.h$a,android.graphics.Typeface)>(r0, $r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public abstract void onFontRetrievalFailed(int);

    public abstract void onFontRetrieved(android.graphics.Typeface);
}
