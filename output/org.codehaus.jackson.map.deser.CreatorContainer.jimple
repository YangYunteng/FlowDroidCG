public class org.codehaus.jackson.map.deser.CreatorContainer extends java.lang.Object
{
    public final org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc;
    public final boolean _canFixAccess;
    public java.lang.reflect.Constructor _defaultConstructor;
    public org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor;
    public org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory;
    public org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor;
    public org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory;
    public org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor;
    public org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory;
    public org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor;
    public org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties;
    public org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory;
    public org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties;
    public org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor;
    public org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory;

    public void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription, boolean)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties> = null;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties> = null;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc> = $r1;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: boolean _canFixAccess> = $z0;

        return;
    }

    public void addDelegatingConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r2, $r1, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor> = $r2;

        return;
    }

    public void addDelegatingFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r2, $r1, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory> = $r2;

        return;
    }

    public void addIntConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r2, $r1, "int");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor> = $r2;

        return;
    }

    public void addIntFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r2, $r1, "int");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory> = $r2;

        return;
    }

    public void addLongConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r2, $r1, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor> = $r2;

        return;
    }

    public void addLongFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r2, $r1, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory> = $r2;

        return;
    }

    public void addPropertyConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor, org.codehaus.jackson.map.deser.SettableBeanProperty[])
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r5;
        java.util.HashMap $r4;
        java.lang.IllegalArgumentException $r9;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r3;
        java.lang.Integer $r7;
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        int $i0, $i1;
        java.lang.Object $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r6;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty[];

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r1, $r3, "property-based");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor> = $r1;

        $i0 = lengthof $r2;

        if $i0 <= 1 goto label3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $i0 = 0;

        $i1 = lengthof $r2;

     label1:
        if $i0 >= $i1 goto label3;

        $r5 = $r2[$i0];

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getName()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r7 = (java.lang.Integer) $r8;

        if $r7 != null goto label2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate creator property \"");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" (index ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r9;

     label3:
        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties> = $r2;

        return;
    }

    public void addPropertyFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.map.deser.SettableBeanProperty[])
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r2, $r3;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r1;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r3 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty[];

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory>;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r3, $r2, "property-based");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory> = $r3;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties> = $r1;

        return;
    }

    public void addStringConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r2, $r1, "String");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor> = $r2;

        return;
    }

    public void addStringFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r2, $r1, "String");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory> = $r2;

        return;
    }

    public org.codehaus.jackson.map.deser.Creator$Delegating delegatingCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r2;
        org.codehaus.jackson.map.deser.Creator$Delegating $r4;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor>;

        if $r2 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new org.codehaus.jackson.map.deser.Creator$Delegating;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory>;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.Creator$Delegating: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r3);

        return $r4;
    }

    public java.lang.reflect.Constructor getDefaultConstructor()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.reflect.Constructor r1;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.reflect.Constructor _defaultConstructor>;

        return r1;
    }

    public org.codehaus.jackson.map.deser.Creator$NumberBased numberCreator()
    {
        org.codehaus.jackson.map.deser.Creator$NumberBased $r6;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r2, $r4;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r7;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r3;
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.Class $r5;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory>;

        if $r2 != null goto label1;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r6 = new org.codehaus.jackson.map.deser.Creator$NumberBased;

        $r7 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc>;

        $r5 = virtualinvoke $r7.<org.codehaus.jackson.map.BeanDescription: java.lang.Class getBeanClass()>();

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor>;

        $r4 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory>;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.Creator$NumberBased: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r5, $r1, $r2, $r3, $r4);

        return $r6;
    }

    public org.codehaus.jackson.map.deser.Creator$PropertyBased propertyBasedCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r2, $r4;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r5;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor>;

        if $r1 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = new org.codehaus.jackson.map.deser.Creator$PropertyBased;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory>;

        $r4 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.Creator$PropertyBased: void <init>(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[],org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.deser.SettableBeanProperty[])>($r1, $r2, $r3, $r4);

        return $r5;
    }

    public void setDefaultConstructor(java.lang.reflect.Constructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.reflect.Constructor _defaultConstructor> = $r1;

        return;
    }

    public org.codehaus.jackson.map.deser.Creator$StringBased stringCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r2;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r5;
        java.lang.Class $r3;
        org.codehaus.jackson.map.deser.Creator$StringBased $r4;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = new org.codehaus.jackson.map.deser.Creator$StringBased;

        $r5 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc>;

        $r3 = virtualinvoke $r5.<org.codehaus.jackson.map.BeanDescription: java.lang.Class getBeanClass()>();

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory>;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.Creator$StringBased: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r3, $r1, $r2);

        return $r4;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor, org.codehaus.jackson.map.introspect.AnnotatedConstructor, java.lang.String)
    {
        java.lang.IllegalArgumentException $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r3, $r4;
        java.lang.reflect.Constructor $r6;
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r3 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r4 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r5 := @parameter2: java.lang.String;

        if $r4 != null goto label1;

        $z0 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: boolean _canFixAccess>;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r6);

        return $r3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" constructors: already had ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", encountered ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return $r3;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3, $r4;
        java.lang.IllegalArgumentException $r1;
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.reflect.Method $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r3 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r4 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r5 := @parameter2: java.lang.String;

        if $r4 != null goto label1;

        $z0 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: boolean _canFixAccess>;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r6);

        return $r3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" factory methods: already had ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", encountered ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return $r3;
    }
}
