public class com.google.common.escape.Escapers$Builder$1 extends com.google.common.escape.ArrayBasedCharEscaper
{
    public final char[] replacementChars;
    public final com.google.common.escape.Escapers$Builder this$0;

    public void <init>(com.google.common.escape.Escapers$Builder, java.util.Map, char, char)
    {
        com.google.common.escape.Escapers$Builder$1 r0;
        java.util.Map $r1;
        char[] $r4;
        char $c0, $c1;
        java.lang.String $r3;
        com.google.common.escape.Escapers$Builder $r2;

        r0 := @this: com.google.common.escape.Escapers$Builder$1;

        $r2 := @parameter0: com.google.common.escape.Escapers$Builder;

        $r1 := @parameter1: java.util.Map;

        $c0 := @parameter2: char;

        $c1 := @parameter3: char;

        r0.<com.google.common.escape.Escapers$Builder$1: com.google.common.escape.Escapers$Builder this$0> = $r2;

        specialinvoke r0.<com.google.common.escape.ArrayBasedCharEscaper: void <init>(java.util.Map,char,char)>($r1, $c0, $c1);

        $r2 = r0.<com.google.common.escape.Escapers$Builder$1: com.google.common.escape.Escapers$Builder this$0>;

        $r3 = staticinvoke <com.google.common.escape.Escapers$Builder: java.lang.String access$100(com.google.common.escape.Escapers$Builder)>($r2);

        if $r3 == null goto label1;

        $r2 = r0.<com.google.common.escape.Escapers$Builder$1: com.google.common.escape.Escapers$Builder this$0>;

        $r3 = staticinvoke <com.google.common.escape.Escapers$Builder: java.lang.String access$100(com.google.common.escape.Escapers$Builder)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        r0.<com.google.common.escape.Escapers$Builder$1: char[] replacementChars> = $r4;

        return;
    }

    public char[] escapeUnsafe(char)
    {
        com.google.common.escape.Escapers$Builder$1 r0;
        char[] r1;
        char $c0;

        r0 := @this: com.google.common.escape.Escapers$Builder$1;

        $c0 := @parameter0: char;

        r1 = r0.<com.google.common.escape.Escapers$Builder$1: char[] replacementChars>;

        return r1;
    }
}
