public final enum class org.codehaus.jackson.map.annotate.JsonSerialize$Typing extends java.lang.Enum
{
    public static final org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES;
    public static final enum org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC;
    public static final enum org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC;

    static void <clinit>()
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $r1;
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing $r0;

        $r0 = new org.codehaus.jackson.map.annotate.JsonSerialize$Typing;

        specialinvoke $r0.<org.codehaus.jackson.map.annotate.JsonSerialize$Typing: void <init>(java.lang.String,int)>("DYNAMIC", 0);

        <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC> = $r0;

        $r0 = new org.codehaus.jackson.map.annotate.JsonSerialize$Typing;

        specialinvoke $r0.<org.codehaus.jackson.map.annotate.JsonSerialize$Typing: void <init>(java.lang.String,int)>("STATIC", 1);

        <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.annotate.JsonSerialize$Typing)[2];

        $r0 = <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC>;

        $r1[1] = $r0;

        <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing r0;

        r0 := @this: org.codehaus.jackson.map.annotate.JsonSerialize$Typing;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static org.codehaus.jackson.map.annotate.JsonSerialize$Typing valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/map/annotate/JsonSerialize$Typing;", $r1);

        $r2 = (org.codehaus.jackson.map.annotate.JsonSerialize$Typing) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] values()
    {
        java.lang.Object $r0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $r1;

        $r1 = <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.map.annotate.JsonSerialize$Typing[]) $r0;

        return $r1;
    }
}
