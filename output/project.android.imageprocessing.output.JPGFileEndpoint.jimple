public class project.android.imageprocessing.output.JPGFileEndpoint extends project.android.imageprocessing.GLRenderer implements project.android.imageprocessing.output.GLTextureInputRenderer
{
    public android.content.Context context;
    public int curNumber;
    public int[] depthRenderBuffer;
    public java.lang.String filePath;
    public int[] frameBuffer;
    public boolean increment;
    public boolean storeToMedia;
    public int[] texture_out;

    public void <init>(android.content.Context, boolean, java.lang.String, boolean)
    {
        project.android.imageprocessing.output.JPGFileEndpoint r0;
        android.content.Context $r1;
        java.nio.FloatBuffer $r7;
        float[] $r4;
        java.nio.ByteBuffer $r5;
        java.nio.ByteOrder $r6;
        java.nio.FloatBuffer[] $r3;
        int $i0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: project.android.imageprocessing.output.JPGFileEndpoint;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $z1 := @parameter3: boolean;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void <init>()>();

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: android.content.Context context> = $r1;

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: boolean storeToMedia> = $z0;

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: java.lang.String filePath> = $r2;

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: boolean increment> = $z1;

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int curNumber> = 1;

        $r3 = newarray (java.nio.FloatBuffer)[4];

        r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices> = $r3;

        $r4 = newarray (float)[8];

        $r4[0] = 0.0F;

        $r4[1] = 1.0F;

        $r4[2] = 1.0F;

        $r4[3] = 1.0F;

        $r4[4] = 0.0F;

        $r4[5] = 0.0F;

        $r4[6] = 1.0F;

        $r4[7] = 0.0F;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $i0 = lengthof $r4;

        $i0 = $i0 * 4;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i0);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $r7 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $r3[0] = $r7;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $r7 = $r3[0];

        $r7 = virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>($r4);

        virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

        $r4 = newarray (float)[8];

        $r4[0] = 1.0F;

        $r4[1] = 1.0F;

        $r4[2] = 1.0F;

        $r4[3] = 0.0F;

        $r4[4] = 0.0F;

        $r4[5] = 1.0F;

        $r4[6] = 0.0F;

        $r4[7] = 0.0F;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $i0 = lengthof $r4;

        $i0 = $i0 * 4;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i0);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $r7 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $r3[1] = $r7;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $r7 = $r3[1];

        $r7 = virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>($r4);

        virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

        $r4 = newarray (float)[8];

        $r4[0] = 1.0F;

        $r4[1] = 0.0F;

        $r4[2] = 0.0F;

        $r4[3] = 0.0F;

        $r4[4] = 1.0F;

        $r4[5] = 1.0F;

        $r4[6] = 0.0F;

        $r4[7] = 1.0F;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $i0 = lengthof $r4;

        $i0 = $i0 * 4;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i0);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $r7 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $r3[2] = $r7;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $r7 = $r3[2];

        $r7 = virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>($r4);

        virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

        $r4 = newarray (float)[8];

        $r4[0] = 0.0F;

        $r4[1] = 0.0F;

        $r4[2] = 0.0F;

        $r4[3] = 1.0F;

        $r4[4] = 1.0F;

        $r4[5] = 0.0F;

        $r4[6] = 1.0F;

        $r4[7] = 1.0F;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $i0 = lengthof $r4;

        $i0 = $i0 * 4;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i0);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $r7 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $r3[3] = $r7;

        $r3 = r0.<project.android.imageprocessing.GLRenderer: java.nio.FloatBuffer[] textureVertices>;

        $r7 = $r3[3];

        $r7 = virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>($r4);

        virtualinvoke $r7.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

        return;
    }

    private void initFBO()
    {
        project.android.imageprocessing.output.JPGFileEndpoint r0;
        java.lang.RuntimeException $r5;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;

        r0 := @this: project.android.imageprocessing.output.JPGFileEndpoint;

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer>;

        if $r1 == null goto label1;

        staticinvoke <android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>(1, $r1, 0);

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer> = null;

     label1:
        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out>;

        if $r1 == null goto label2;

        staticinvoke <android.opengl.GLES20: void glDeleteTextures(int,int[],int)>(1, $r1, 0);

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out> = null;

     label2:
        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer>;

        if $r1 == null goto label3;

        staticinvoke <android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>(1, $r1, 0);

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer> = null;

     label3:
        $r1 = newarray (int)[1];

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer> = $r1;

        $r1 = newarray (int)[1];

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out> = $r1;

        $r1 = newarray (int)[1];

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer> = $r1;

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer>;

        staticinvoke <android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>(1, $r1, 0);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer>;

        staticinvoke <android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>(1, $r1, 0);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out>;

        staticinvoke <android.opengl.GLES20: void glGenTextures(int,int[],int)>(1, $r1, 0);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer>;

        $i0 = $r1[0];

        $i1 = 36160;

        staticinvoke <android.opengl.GLES20: void glBindFramebuffer(int,int)>($i1, $i0);

        $i0 = 33984;

        staticinvoke <android.opengl.GLES20: void glActiveTexture(int)>($i0);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out>;

        $i0 = $r1[0];

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>(3553, $i0);

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        $i1 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        staticinvoke <android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>(3553, 0, 6408, $i0, $i1, 0, 6408, 5121, null);

        $i0 = 33071;

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(3553, 10242, $i0);

        $i0 = 33071;

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(3553, 10243, $i0);

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(3553, 10240, 9729);

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(3553, 10241, 9729);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out>;

        $i0 = $r1[0];

        $i1 = 36160;

        $i2 = 36064;

        staticinvoke <android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>($i1, $i2, 3553, $i0, 0);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer>;

        $i0 = $r1[0];

        $i1 = 36161;

        staticinvoke <android.opengl.GLES20: void glBindRenderbuffer(int,int)>($i1, $i0);

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        $i1 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        $i2 = 36161;

        $i3 = 33189;

        staticinvoke <android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer>;

        $i0 = $r1[0];

        $i1 = 36160;

        $i2 = 36096;

        $i3 = 36161;

        staticinvoke <android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>($i1, $i2, $i3, $i0);

        $i0 = 36160;

        $i0 = staticinvoke <android.opengl.GLES20: int glCheckFramebufferStatus(int)>($i0);

        $i1 = 36053;

        if $i0 != $i1 goto label4;

        return;

     label4:
        $r5 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Failed to set up render buffer with status ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and error ");

        $i0 = staticinvoke <android.opengl.GLES20: int glGetError()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r5;
    }

    public void destroy()
    {
        project.android.imageprocessing.output.JPGFileEndpoint r0;
        int[] $r1;

        r0 := @this: project.android.imageprocessing.output.JPGFileEndpoint;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void destroy()>();

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer>;

        if $r1 == null goto label1;

        staticinvoke <android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>(1, $r1, 0);

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer> = null;

     label1:
        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out>;

        if $r1 == null goto label2;

        staticinvoke <android.opengl.GLES20: void glDeleteTextures(int,int[],int)>(1, $r1, 0);

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] texture_out> = null;

     label2:
        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer>;

        if $r1 == null goto label3;

        staticinvoke <android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>(1, $r1, 0);

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] depthRenderBuffer> = null;

     label3:
        return;
    }

    public void drawFrame()
    {
        project.android.imageprocessing.output.JPGFileEndpoint r0;
        android.content.Context $r12;
        java.lang.String[] $r11;
        android.graphics.Bitmap$Config $r3;
        int[] $r1;
        java.nio.IntBuffer $r2;
        android.content.ContentResolver $r13;
        int $i0, $i1, $i2;
        android.graphics.Bitmap$CompressFormat $r9;
        java.lang.String $r6, $r10;
        boolean $z0;
        java.io.FileOutputStream $r7, $r18;
        java.io.IOException $r14;
        java.io.File $r8, $r17;
        java.io.FileNotFoundException $r15;
        android.graphics.Bitmap $r4;
        java.lang.StringBuilder $r5, $r16;

        r0 := @this: project.android.imageprocessing.output.JPGFileEndpoint;

        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer>;

        if $r1 != null goto label02;

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        if $i0 == 0 goto label01;

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        if $i0 == 0 goto label19;

        specialinvoke r0.<project.android.imageprocessing.output.JPGFileEndpoint: void initFBO()>();

        goto label02;

     label01:
        return;

     label02:
        $r1 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int[] frameBuffer>;

        $i0 = 0;

        $i1 = $r1[0];

        $i2 = 36160;

        staticinvoke <android.opengl.GLES20: void glBindFramebuffer(int,int)>($i2, $i1);

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void drawFrame()>();

        $i1 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        $i2 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        $i1 = $i1 * $i2;

        $r1 = newarray (int)[$i1];

        $r2 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer wrap(int[])>($r1);

        virtualinvoke $r2.<java.nio.IntBuffer: java.nio.Buffer position(int)>(0);

        $i1 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        $i2 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        staticinvoke <android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>(0, 0, $i1, $i2, 6408, 5121, $r2);

        $i1 = 36160;

        staticinvoke <android.opengl.GLES20: void glBindFramebuffer(int,int)>($i1, 0);

     label03:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label18;

        $i0 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        $i1 = virtualinvoke r0.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>($r1, $i0, $i1, $r3);

        $z0 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: boolean increment>;

        if $z0 == 0 goto label04;

        $r16 = new java.lang.StringBuilder;

        $r5 = $r16;

        $r6 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: java.lang.String filePath>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i0 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int curNumber>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: int curNumber>;

        $i0 = $i0 + 1;

        r0.<project.android.imageprocessing.output.JPGFileEndpoint: int curNumber> = $i0;

        goto label05;

     label04:
        $r16 = new java.lang.StringBuilder;

        $r5 = $r16;

        $r6 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: java.lang.String filePath>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r18 = new java.io.FileOutputStream;

        $r7 = $r18;

        $r17 = new java.io.File;

        $r8 = $r17;

     label06:
        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r6);

        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File)>($r8);

     label07:
        $r9 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label08:
        virtualinvoke $r4.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r9, 100, $r7);

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label09:
        $z0 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: boolean storeToMedia>;

        if $z0 == 0 goto label19;

        $r10 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: java.lang.String filePath>;

     label10:
        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

     label11:
        $r12 = r0.<project.android.imageprocessing.output.JPGFileEndpoint: android.content.Context context>;

     label12:
        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label13:
        $i0 = lengthof $r11;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r10 = $r11[$i0];

     label14:
        staticinvoke <android.provider.MediaStore$Images$Media: java.lang.String insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>($r13, $r6, $r10, "");

     label15:
        return;

     label16:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return;

     label17:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.io.FileNotFoundException: void printStackTrace()>();

        return;

     label18:
        $i1 = $r1[$i0];

        $i1 = $i1 & -16711936;

        $i2 = $r1[$i0];

        $i2 = $i2 >> 16;

        $i2 = $i2 & 255;

        $i1 = $i1 | $i2;

        $i2 = $r1[$i0];

        $i2 = $i2 << 16;

        $i2 = $i2 & 16711680;

        $i1 = $i1 | $i2;

        $r1[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label03;

     label19:
        return;

        catch java.io.FileNotFoundException from label06 to label07 with label17;
        catch java.io.FileNotFoundException from label08 to label09 with label17;
        catch java.io.FileNotFoundException from label10 to label11 with label17;
        catch java.io.FileNotFoundException from label12 to label13 with label17;
        catch java.io.FileNotFoundException from label14 to label15 with label17;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public void handleSizeChange()
    {
        project.android.imageprocessing.output.JPGFileEndpoint r0;

        r0 := @this: project.android.imageprocessing.output.JPGFileEndpoint;

        specialinvoke r0.<project.android.imageprocessing.output.JPGFileEndpoint: void initFBO()>();

        return;
    }

    public void newTextureReady(int, project.android.imageprocessing.input.GLTextureOutputRenderer, boolean)
    {
        project.android.imageprocessing.output.JPGFileEndpoint r0;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r1;
        int $i0;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.output.JPGFileEndpoint;

        $i0 := @parameter0: int;

        $r1 := @parameter1: project.android.imageprocessing.input.GLTextureOutputRenderer;

        $z0 := @parameter2: boolean;

        r0.<project.android.imageprocessing.GLRenderer: int texture_in> = $i0;

        $i0 = virtualinvoke $r1.<project.android.imageprocessing.GLRenderer: int getWidth()>();

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void setWidth(int)>($i0);

        $i0 = virtualinvoke $r1.<project.android.imageprocessing.GLRenderer: int getHeight()>();

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void setHeight(int)>($i0);

        virtualinvoke r0.<project.android.imageprocessing.GLRenderer: void onDrawFrame()>();

        return;
    }
}
