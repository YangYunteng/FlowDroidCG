public class com.google.common.collect.Synchronized$SynchronizedEntry extends com.google.common.collect.Synchronized$SynchronizedObject implements java.util.Map$Entry
{
    public static final long serialVersionUID;

    public void <init>(java.util.Map$Entry, java.lang.Object)
    {
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r1 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedEntry: java.util.Map$Entry delegate()>();

        return $r1;
    }

    public java.util.Map$Entry delegate()
    {
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r1 = specialinvoke r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object delegate()>();

        $r2 = (java.util.Map$Entry) $r1;

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedEntry: java.util.Map$Entry delegate()>();

        $z0 = interfaceinvoke $r3.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getKey()
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r2;
        java.lang.Object $r1, $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedEntry: java.util.Map$Entry delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getValue()
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r2;
        java.lang.Object $r1, $r3;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedEntry: java.util.Map$Entry delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int hashCode()
    {
        java.lang.Throwable $r3;
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedEntry: java.util.Map$Entry delegate()>();

        $i0 = interfaceinvoke $r2.<java.util.Map$Entry: int hashCode()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.Synchronized$SynchronizedEntry r0;
        java.util.Map$Entry $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.Synchronized$SynchronizedEntry;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Synchronized$SynchronizedObject: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Synchronized$SynchronizedEntry: java.util.Map$Entry delegate()>();

        $r2 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
