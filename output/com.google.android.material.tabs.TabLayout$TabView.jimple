public final class com.google.android.material.tabs.TabLayout$TabView extends android.widget.LinearLayout
{
    public android.view.View badgeAnchorView;
    public com.google.android.material.badge.BadgeDrawable badgeDrawable;
    public android.graphics.drawable.Drawable baseBackgroundDrawable;
    public android.widget.ImageView customIconView;
    public android.widget.TextView customTextView;
    public android.view.View customView;
    public int defaultMaxLines;
    public android.widget.ImageView iconView;
    public com.google.android.material.tabs.TabLayout$Tab tab;
    public android.widget.TextView textView;
    public final com.google.android.material.tabs.TabLayout this$0;

    public void <init>(com.google.android.material.tabs.TabLayout, android.content.Context)
    {
        android.content.Context $r2;
        b.i.i.r $r3;
        com.google.android.material.tabs.TabLayout $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout;

        $r2 := @parameter1: android.content.Context;

        r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0> = $r1;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>($r2);

        r0.<com.google.android.material.tabs.TabLayout$TabView: int defaultMaxLines> = 2;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void updateBackgroundDrawable(android.content.Context)>($r2);

        $i2 = $r1.<com.google.android.material.tabs.TabLayout: int tabPaddingStart>;

        $i3 = $r1.<com.google.android.material.tabs.TabLayout: int tabPaddingTop>;

        $i0 = $r1.<com.google.android.material.tabs.TabLayout: int tabPaddingEnd>;

        $i1 = $r1.<com.google.android.material.tabs.TabLayout: int tabPaddingBottom>;

        staticinvoke <b.i.i.y: void b(android.view.View,int,int,int,int)>(r0, $i2, $i3, $i0, $i1);

        virtualinvoke r0.<android.widget.LinearLayout: void setGravity(int)>(17);

        $z0 = $r1.<com.google.android.material.tabs.TabLayout: boolean inlineLabel>;

        $b4 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>($b4);

        virtualinvoke r0.<android.widget.LinearLayout: void setClickable(boolean)>(1);

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <b.i.i.r: b.i.i.r a(android.content.Context,int)>($r2, 1002);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.r)>(r0, $r3);

        return;
    }

    public static void access$000(com.google.android.material.tabs.TabLayout$TabView, android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.tabs.TabLayout$TabView $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter1: android.content.Context;

        specialinvoke $r0.<com.google.android.material.tabs.TabLayout$TabView: void updateBackgroundDrawable(android.content.Context)>($r1);

        return;
    }

    public static int access$1400(com.google.android.material.tabs.TabLayout$TabView)
    {
        int $i0;
        com.google.android.material.tabs.TabLayout$TabView $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $i0 = specialinvoke $r0.<com.google.android.material.tabs.TabLayout$TabView: int getContentWidth()>();

        return $i0;
    }

    public static void access$300(com.google.android.material.tabs.TabLayout$TabView, android.graphics.Canvas)
    {
        android.graphics.Canvas $r1;
        com.google.android.material.tabs.TabLayout$TabView $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter1: android.graphics.Canvas;

        specialinvoke $r0.<com.google.android.material.tabs.TabLayout$TabView: void drawBackground(android.graphics.Canvas)>($r1);

        return;
    }

    public static boolean access$400(com.google.android.material.tabs.TabLayout$TabView)
    {
        com.google.android.material.tabs.TabLayout$TabView $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $z0 = specialinvoke $r0.<com.google.android.material.tabs.TabLayout$TabView: boolean hasBadgeDrawable()>();

        return $z0;
    }

    public static com.google.android.material.badge.BadgeDrawable access$500(com.google.android.material.tabs.TabLayout$TabView)
    {
        com.google.android.material.tabs.TabLayout$TabView $r0;
        com.google.android.material.badge.BadgeDrawable r1;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        r1 = $r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        return r1;
    }

    public static com.google.android.material.badge.BadgeDrawable access$600(com.google.android.material.tabs.TabLayout$TabView)
    {
        com.google.android.material.tabs.TabLayout$TabView $r1;
        com.google.android.material.badge.BadgeDrawable $r0;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $r0 = specialinvoke $r1.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable getOrCreateBadge()>();

        return $r0;
    }

    public static void access$700(com.google.android.material.tabs.TabLayout$TabView)
    {
        com.google.android.material.tabs.TabLayout$TabView $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        specialinvoke $r0.<com.google.android.material.tabs.TabLayout$TabView: void removeBadge()>();

        return;
    }

    public static com.google.android.material.badge.BadgeDrawable access$800(com.google.android.material.tabs.TabLayout$TabView)
    {
        com.google.android.material.tabs.TabLayout$TabView $r1;
        com.google.android.material.badge.BadgeDrawable $r0;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $r0 = specialinvoke $r1.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable getBadge()>();

        return $r0;
    }

    public static void access$900(com.google.android.material.tabs.TabLayout$TabView, android.view.View)
    {
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView $r0;

        $r0 := @parameter0: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter1: android.view.View;

        specialinvoke $r0.<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeDrawableBounds(android.view.View)>($r1);

        return;
    }

    private void addOnLayoutChangeListener(android.view.View)
    {
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;
        com.google.android.material.tabs.TabLayout$TabView$1 $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.view.View;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = new com.google.android.material.tabs.TabLayout$TabView$1;

        specialinvoke $r2.<com.google.android.material.tabs.TabLayout$TabView$1: void <init>(com.google.android.material.tabs.TabLayout$TabView,android.view.View)>(r0, $r1);

        virtualinvoke $r1.<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r2);

        return;
    }

    private float approximateLineWidth(android.text.Layout, int, float)
    {
        android.text.Layout $r1;
        android.text.TextPaint $r2;
        int $i0;
        float $f0, $f1, $f2;
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.text.Layout;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 = virtualinvoke $r1.<android.text.Layout: float getLineWidth(int)>($i0);

        $r2 = virtualinvoke $r1.<android.text.Layout: android.text.TextPaint getPaint()>();

        $f2 = virtualinvoke $r2.<android.text.TextPaint: float getTextSize()>();

        $f0 = $f0 / $f2;

        $f0 = $f1 * $f0;

        return $f0;
    }

    private void clipViewToPaddingForBadge(boolean)
    {
        android.view.ViewParent $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;
        android.view.ViewGroup $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<android.widget.LinearLayout: void setClipChildren(boolean)>($z0);

        virtualinvoke r0.<android.widget.LinearLayout: void setClipToPadding(boolean)>($z0);

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.ViewParent getParent()>();

        $r2 = (android.view.ViewGroup) $r1;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.view.ViewGroup: void setClipChildren(boolean)>($z0);

        virtualinvoke $r2.<android.view.ViewGroup: void setClipToPadding(boolean)>($z0);

     label1:
        return;
    }

    private android.widget.FrameLayout createPreApi18BadgeAnchorRoot()
    {
        android.content.Context $r2;
        android.widget.FrameLayout $r1, $r3;
        int $i0, $i1;
        android.widget.FrameLayout$LayoutParams $r4;
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r3 = new android.widget.FrameLayout;

        $r1 = $r3;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.FrameLayout: void <init>(android.content.Context)>($r2);

        $r4 = new android.widget.FrameLayout$LayoutParams;

        $i0 = -2;

        $i1 = -2;

        specialinvoke $r4.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r1.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

        return $r1;
    }

    private void drawBackground(android.graphics.Canvas)
    {
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getLeft()>();

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getTop()>();

        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getRight()>();

        $i3 = virtualinvoke r0.<android.widget.LinearLayout: int getBottom()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label1:
        return;
    }

    private com.google.android.material.badge.BadgeDrawable getBadge()
    {
        com.google.android.material.tabs.TabLayout$TabView r0;
        com.google.android.material.badge.BadgeDrawable r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        return r1;
    }

    private int getContentWidth()
    {
        android.widget.ImageView $r4;
        android.widget.TextView $r3;
        android.view.View[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r2 = newarray (android.view.View)[3];

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $i0 = 0;

        $r2[0] = $r3;

        $r4 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        $r2[1] = $r4;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView>;

        $r2[2] = $r1;

        $i1 = lengthof $r2;

        $i2 = 0;

        $i3 = 0;

        $z0 = 0;

     label1:
        if $i0 >= $i1 goto label7;

        $r1 = $r2[$i0];

        if $r1 == null goto label6;

        $i4 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i4 != 0 goto label6;

        if $z0 == 0 goto label2;

        $i4 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        goto label3;

     label2:
        $i3 = virtualinvoke $r1.<android.view.View: int getLeft()>();

     label3:
        if $z0 == 0 goto label4;

        $i4 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i4);

        goto label5;

     label4:
        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

     label5:
        $z0 = 1;

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        $i0 = $i2 - $i3;

        return $i0;
    }

    private android.widget.FrameLayout getCustomParentForBadge(android.view.View)
    {
        android.view.ViewParent $r1;
        android.widget.TextView $r4;
        android.widget.ImageView $r3;
        android.widget.FrameLayout $r5;
        android.view.View $r2;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r2 := @parameter0: android.view.View;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        if $r2 == $r3 goto label1;

        $r4 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r2 == $r4 goto label1;

        return null;

     label1:
        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        $r5 = (android.widget.FrameLayout) $r1;

        return $r5;

     label2:
        return null;
    }

    private com.google.android.material.badge.BadgeDrawable getOrCreateBadge()
    {
        android.content.Context $r2;
        java.lang.IllegalStateException $r3;
        com.google.android.material.tabs.TabLayout$TabView r0;
        com.google.android.material.badge.BadgeDrawable $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r1 = staticinvoke <com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable create(android.content.Context)>($r2);

        r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable> = $r1;

     label1:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeAnchor()>();

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        if $r1 == null goto label2;

        return $r1;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to create badge");

        throw $r3;
    }

    private boolean hasBadgeDrawable()
    {
        com.google.android.material.tabs.TabLayout$TabView r0;
        com.google.android.material.badge.BadgeDrawable $r1;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void inflateAndAddDefaultIconView()
    {
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        android.widget.FrameLayout $r1;
        android.widget.ImageView $r6;
        android.view.ViewGroup $r2;
        int $i0;
        android.view.View $r5;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout createPreApi18BadgeAnchorRoot()>();

        $r2 = $r1;

        virtualinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int)>($r1, 0);

        goto label2;

     label1:
        $r2 = r0;

     label2:
        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $i0 = <com.google.android.material.R$layout: int design_layout_tab_icon>;

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r2, 0);

        $r6 = (android.widget.ImageView) $r5;

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView> = $r6;

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        virtualinvoke $r2.<android.view.ViewGroup: void addView(android.view.View,int)>($r6, 0);

        return;
    }

    private void inflateAndAddDefaultTextView()
    {
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        android.widget.FrameLayout $r1;
        android.view.ViewGroup $r2;
        android.widget.TextView $r6;
        int $i0;
        android.view.View $r5;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 = <com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout createPreApi18BadgeAnchorRoot()>();

        $r2 = $r1;

        virtualinvoke r0.<android.widget.LinearLayout: void addView(android.view.View)>($r1);

        goto label2;

     label1:
        $r2 = r0;

     label2:
        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $i0 = <com.google.android.material.R$layout: int design_layout_tab_text>;

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r2, 0);

        $r6 = (android.widget.TextView) $r5;

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView> = $r6;

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        virtualinvoke $r2.<android.view.ViewGroup: void addView(android.view.View)>($r6);

        return;
    }

    private void removeBadge()
    {
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryRemoveBadgeFromAnchor()>();

     label1:
        r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable> = null;

        return;
    }

    private void tryAttachBadgeToAnchor(android.view.View)
    {
        android.widget.FrameLayout $r3;
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;
        com.google.android.material.badge.BadgeDrawable $r2;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.view.View;

        $z0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: boolean hasBadgeDrawable()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        if $r1 == null goto label2;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void clipViewToPaddingForBadge(boolean)>(0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        $r3 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout getCustomParentForBadge(android.view.View)>($r1);

        staticinvoke <com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>($r2, $r1, $r3);

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView> = $r1;

     label2:
        return;
    }

    private void tryRemoveBadgeFromAnchor()
    {
        android.widget.FrameLayout $r3;
        android.view.View $r2;
        com.google.android.material.tabs.TabLayout$TabView r0;
        com.google.android.material.badge.BadgeDrawable $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: boolean hasBadgeDrawable()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void clipViewToPaddingForBadge(boolean)>(1);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView>;

        if $r2 == null goto label2;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        $r3 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout getCustomParentForBadge(android.view.View)>($r2);

        staticinvoke <com.google.android.material.badge.BadgeUtils: void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>($r1, $r2, $r3);

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView> = null;

     label2:
        return;
    }

    private void tryUpdateBadgeAnchor()
    {
        android.widget.ImageView $r2;
        android.graphics.drawable.Drawable $r4;
        com.google.android.material.tabs.TabLayout$Tab $r3;
        android.widget.TextView $r5;
        int $i0;
        android.view.View $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: boolean hasBadgeDrawable()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView>;

        if $r1 == null goto label2;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryRemoveBadgeFromAnchor()>();

        return;

     label2:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        if $r2 == null goto label4;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>();

        if $r4 == null goto label4;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView>;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        if $r1 == $r2 goto label3;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryRemoveBadgeFromAnchor()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryAttachBadgeToAnchor(android.view.View)>($r2);

        return;

     label3:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeDrawableBounds(android.view.View)>($r2);

        return;

     label4:
        $r5 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r5 == null goto label6;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r3 == null goto label6;

        $i0 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: int getTabLabelVisibility()>();

        if $i0 != 1 goto label6;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView>;

        $r5 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r1 == $r5 goto label5;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryRemoveBadgeFromAnchor()>();

        $r5 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryAttachBadgeToAnchor(android.view.View)>($r5);

        return;

     label5:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeDrawableBounds(android.view.View)>($r5);

        return;

     label6:
        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryRemoveBadgeFromAnchor()>();

        return;
    }

    private void tryUpdateBadgeDrawableBounds(android.view.View)
    {
        android.widget.FrameLayout $r4;
        android.view.View $r1, $r2;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;
        com.google.android.material.badge.BadgeDrawable $r3;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.view.View;

        $z0 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: boolean hasBadgeDrawable()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View badgeAnchorView>;

        if $r1 != $r2 goto label1;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        $r4 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout getCustomParentForBadge(android.view.View)>($r1);

        staticinvoke <com.google.android.material.badge.BadgeUtils: void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>($r3, $r1, $r4);

     label1:
        return;
    }

    private void updateBackgroundDrawable(android.content.Context)
    {
        android.content.Context $r1;
        android.graphics.drawable.LayerDrawable $r13;
        android.graphics.drawable.Drawable $r4, $r9;
        android.content.res.ColorStateList $r6;
        int[] $r5;
        android.graphics.drawable.GradientDrawable $r3, $r7, $r11;
        int $i0;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;
        com.google.android.material.tabs.TabLayout $r2;
        android.graphics.drawable.RippleDrawable $r8, $r12;
        android.graphics.drawable.Drawable[] $r10;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $i0 = $r2.<com.google.android.material.tabs.TabLayout: int tabBackgroundResId>;

        $r3 = null;

        if $i0 == 0 goto label1;

        $r4 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable> = $r4;

        $r4 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable>;

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable>;

        $r5 = virtualinvoke r0.<android.widget.LinearLayout: int[] getDrawableState()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5);

        goto label2;

     label1:
        r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable> = null;

     label2:
        $r7 = new android.graphics.drawable.GradientDrawable;

        $r4 = $r7;

        specialinvoke $r7.<android.graphics.drawable.GradientDrawable: void <init>()>();

        $r7 = (android.graphics.drawable.GradientDrawable) $r4;

        virtualinvoke $r7.<android.graphics.drawable.GradientDrawable: void setColor(int)>(0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $r6 = $r2.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabRippleColorStateList>;

        if $r6 == null goto label7;

        $r11 = new android.graphics.drawable.GradientDrawable;

        $r7 = $r11;

        specialinvoke $r11.<android.graphics.drawable.GradientDrawable: void <init>()>();

        virtualinvoke $r7.<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>(1.0E-5F);

        $i0 = -1;

        virtualinvoke $r7.<android.graphics.drawable.GradientDrawable: void setColor(int)>($i0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $r6 = $r2.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabRippleColorStateList>;

        $r6 = staticinvoke <com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)>($r6);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label6;

        $r12 = new android.graphics.drawable.RippleDrawable;

        $r8 = $r12;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $z0 = $r2.<com.google.android.material.tabs.TabLayout: boolean unboundedRipple>;

        if $z0 == 0 goto label3;

        $r4 = null;

     label3:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $z0 = $r2.<com.google.android.material.tabs.TabLayout: boolean unboundedRipple>;

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $r3 = $r7;

     label5:
        specialinvoke $r12.<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r6, $r4, $r3);

        $r4 = $r8;

        goto label7;

     label6:
        $r9 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r7);

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r9, $r6);

        $r13 = new android.graphics.drawable.LayerDrawable;

        $r10 = newarray (android.graphics.drawable.Drawable)[2];

        $r10[0] = $r4;

        $r10[1] = $r9;

        specialinvoke $r13.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r10);

        $r4 = $r13;

     label7:
        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>(r0, $r4);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        virtualinvoke $r2.<android.widget.HorizontalScrollView: void invalidate()>();

        return;
    }

    private void updateTextAndIcon(android.widget.TextView, android.widget.ImageView)
    {
        android.content.Context $r8;
        java.lang.CharSequence $r5;
        android.view.ViewGroup$LayoutParams $r6;
        com.google.android.material.tabs.TabLayout $r9;
        android.widget.ImageView $r1;
        android.graphics.drawable.Drawable $r4;
        com.google.android.material.tabs.TabLayout$Tab $r3;
        android.widget.TextView $r2;
        android.view.ViewGroup$MarginLayoutParams $r7;
        int $i0, $i1;
        float $f0;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r2 := @parameter0: android.widget.TextView;

        $r1 := @parameter1: android.widget.ImageView;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r3 == null goto label01;

        $r4 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>();

        if $r4 == null goto label01;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        $r4 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>();

        $r4 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r4);

        $r4 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        goto label02;

     label01:
        $r4 = null;

     label02:
        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r3 == null goto label03;

        $r5 = virtualinvoke $r3.<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence getText()>();

        goto label04;

     label03:
        $r5 = null;

     label04:
        if $r1 == null goto label06;

        if $r4 == null goto label05;

        virtualinvoke $r1.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

        virtualinvoke $r1.<android.widget.ImageView: void setVisibility(int)>(0);

        virtualinvoke r0.<android.widget.LinearLayout: void setVisibility(int)>(0);

        goto label06;

     label05:
        virtualinvoke $r1.<android.widget.ImageView: void setVisibility(int)>(8);

        virtualinvoke $r1.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

     label06:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        $z0 = $z0 ^ 1;

        if $r2 == null goto label10;

        if $z0 == 0 goto label09;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        $i0 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: int access$1000(com.google.android.material.tabs.TabLayout$Tab)>($r3);

        if $i0 != 1 goto label07;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

        goto label08;

     label07:
        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(8);

     label08:
        virtualinvoke r0.<android.widget.LinearLayout: void setVisibility(int)>(0);

        goto label10;

     label09:
        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(8);

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(null);

     label10:
        if $r1 == null goto label14;

        $r6 = virtualinvoke $r1.<android.widget.ImageView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (android.view.ViewGroup$MarginLayoutParams) $r6;

        if $z0 == 0 goto label11;

        $i0 = virtualinvoke $r1.<android.widget.ImageView: int getVisibility()>();

        if $i0 != 0 goto label11;

        $r8 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $f0 = staticinvoke <com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)>($r8, 8);

        $i0 = (int) $f0;

        goto label12;

     label11:
        $i0 = 0;

     label12:
        $r9 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $z1 = $r9.<com.google.android.material.tabs.TabLayout: boolean inlineLabel>;

        if $z1 == 0 goto label13;

        $i1 = staticinvoke <b.i.i.f: int a(android.view.ViewGroup$MarginLayoutParams)>($r7);

        if $i0 == $i1 goto label14;

        staticinvoke <b.i.i.f: void a(android.view.ViewGroup$MarginLayoutParams,int)>($r7, $i0);

        $r7.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = 0;

        virtualinvoke $r1.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r7);

        virtualinvoke $r1.<android.widget.ImageView: void requestLayout()>();

        goto label14;

     label13:
        $i1 = $r7.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        if $i0 == $i1 goto label14;

        $r7.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = $i0;

        staticinvoke <b.i.i.f: void a(android.view.ViewGroup$MarginLayoutParams,int)>($r7, 0);

        virtualinvoke $r1.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r7);

        virtualinvoke $r1.<android.widget.ImageView: void requestLayout()>();

     label14:
        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r3 == null goto label15;

        $r5 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)>($r3);

        goto label16;

     label15:
        $r5 = null;

     label16:
        if $z0 == 0 goto label17;

        $r5 = null;

     label17:
        staticinvoke <b.b.f.ua: void a(android.view.View,java.lang.CharSequence)>(r0, $r5);

        return;
    }

    public void drawableStateChanged()
    {
        int[] $r1;
        com.google.android.material.tabs.TabLayout $r3;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        specialinvoke r0.<android.widget.LinearLayout: void drawableStateChanged()>();

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: int[] getDrawableState()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable>;

        $z0 = 0;

        if $r2 == null goto label1;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.graphics.drawable.Drawable baseBackgroundDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void invalidate()>();

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        virtualinvoke $r3.<android.widget.HorizontalScrollView: void invalidate()>();

     label2:
        return;
    }

    public com.google.android.material.tabs.TabLayout$Tab getTab()
    {
        com.google.android.material.tabs.TabLayout$Tab r1;
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        return r1;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        java.lang.CharSequence $r3;
        b.i.i.a.b $r6;
        com.google.android.material.badge.BadgeDrawable $r2;
        com.google.android.material.tabs.TabLayout$Tab $r7;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        b.i.i.a.b$a $r9;
        com.google.android.material.tabs.TabLayout$TabView r0;
        b.i.i.a.b$c $r8;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: java.lang.CharSequence getContentDescription()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable badgeDrawable>;

        $r3 = virtualinvoke $r2.<com.google.android.material.badge.BadgeDrawable: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>($r5);

     label1:
        $r6 = staticinvoke <b.i.i.a.b: b.i.i.a.b a(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        $i0 = virtualinvoke $r7.<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>();

        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isSelected()>();

        $r8 = staticinvoke <b.i.i.a.b$c: b.i.i.a.b$c a(int,int,int,int,boolean,boolean)>(0, 1, $i0, 1, 0, $z0);

        virtualinvoke $r6.<b.i.i.a.b: void b(java.lang.Object)>($r8);

        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isSelected()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r6.<b.i.i.a.b: void e(boolean)>(0);

        $r9 = <b.i.i.a.b$a: b.i.i.a.b$a e>;

        virtualinvoke $r6.<b.i.i.a.b: boolean b(b.i.i.a.b$a)>($r9);

     label2:
        virtualinvoke $r6.<b.i.i.a.b: void h(java.lang.CharSequence)>("Tab");

        return;
    }

    public void onMeasure(int, int)
    {
        com.google.android.material.tabs.TabLayout $r1;
        android.widget.ImageView $r3;
        android.widget.TextView $r2;
        byte $b5;
        android.text.Layout $r4;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $i4 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout: int getTabMaxWidth()>();

        if $i4 <= 0 goto label2;

        if $i3 == 0 goto label1;

        if $i2 <= $i4 goto label2;

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $i1 = $r1.<com.google.android.material.tabs.TabLayout: int tabMaxWidth>;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, -2147483648);

     label2:
        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i1, $i0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r2 == null goto label8;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $f0 = $r1.<com.google.android.material.tabs.TabLayout: float tabTextSize>;

        $i2 = r0.<com.google.android.material.tabs.TabLayout$TabView: int defaultMaxLines>;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        $z0 = 1;

        if $r3 == null goto label3;

        $i3 = virtualinvoke $r3.<android.widget.ImageView: int getVisibility()>();

        if $i3 != 0 goto label3;

        $i2 = 1;

        goto label4;

     label3:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r2 == null goto label4;

        $i3 = virtualinvoke $r2.<android.widget.TextView: int getLineCount()>();

        if $i3 <= 1 goto label4;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $f0 = $r1.<com.google.android.material.tabs.TabLayout: float tabTextMultiLineSize>;

     label4:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $f1 = virtualinvoke $r2.<android.widget.TextView: float getTextSize()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $i3 = virtualinvoke $r2.<android.widget.TextView: int getLineCount()>();

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $i4 = staticinvoke <b.i.j.j: int d(android.widget.TextView)>($r2);

        $b5 = $f0 cmpl $f1;

        if $b5 != 0 goto label5;

        if $i4 < 0 goto label8;

        if $i2 == $i4 goto label8;

     label5:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $i4 = $r1.<com.google.android.material.tabs.TabLayout: int mode>;

        if $i4 != 1 goto label7;

        $b5 = $f0 cmpl $f1;

        $i4 = (int) $b5;

        if $i4 <= 0 goto label7;

        if $i3 != 1 goto label7;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $r4 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r4 == null goto label6;

        $f1 = specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: float approximateLineWidth(android.text.Layout,int,float)>($r4, 0, $f0);

        $i3 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredWidth()>();

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i3 = $i3 - $i4;

        $f2 = (float) $i3;

        $b5 = $f1 cmpl $f2;

        $i3 = (int) $b5;

        if $i3 <= 0 goto label7;

     label6:
        $z0 = 0;

     label7:
        if $z0 == 0 goto label8;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextSize(int,float)>(0, $f0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        virtualinvoke $r2.<android.widget.TextView: void setMaxLines(int)>($i2);

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i1, $i0);

     label8:
        return;
    }

    public boolean performClick()
    {
        com.google.android.material.tabs.TabLayout$Tab $r1;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean performClick()>();

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r1 == null goto label2;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void playSoundEffect(int)>(0);

     label1:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: void select()>();

        return 1;

     label2:
        return $z0;
    }

    public void reset()
    {
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void setTab(com.google.android.material.tabs.TabLayout$Tab)>(null);

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void setSelected(boolean)>(0);

        return;
    }

    public void setSelected(boolean)
    {
        android.widget.TextView $r1;
        int $i0;
        android.widget.ImageView $r2;
        android.view.View $r3;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean isSelected()>();

        if $z1 == $z0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<android.widget.LinearLayout: void setSelected(boolean)>($z0);

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label3;

        virtualinvoke r0.<android.widget.LinearLayout: void sendAccessibilityEvent(int)>(4);

     label3:
        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r1 == null goto label4;

        virtualinvoke $r1.<android.widget.TextView: void setSelected(boolean)>($z0);

     label4:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        if $r2 == null goto label5;

        virtualinvoke $r2.<android.widget.ImageView: void setSelected(boolean)>($z0);

     label5:
        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView>;

        if $r3 == null goto label6;

        virtualinvoke $r3.<android.view.View: void setSelected(boolean)>($z0);

     label6:
        return;
    }

    public void setTab(com.google.android.material.tabs.TabLayout$Tab)
    {
        com.google.android.material.tabs.TabLayout$Tab $r1, $r2;
        com.google.android.material.tabs.TabLayout$TabView r0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 := @parameter0: com.google.android.material.tabs.TabLayout$Tab;

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        if $r1 == $r2 goto label1;

        r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab> = $r1;

        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void update()>();

     label1:
        return;
    }

    public final void update()
    {
        android.view.ViewParent $r4;
        android.widget.ImageView $r7;
        android.graphics.drawable.Drawable $r2, $r9;
        android.content.res.ColorStateList $r11;
        com.google.android.material.tabs.TabLayout$Tab $r1;
        int $i0;
        android.view.View $r3, $r8;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;
        java.lang.CharSequence $r13;
        com.google.android.material.tabs.TabLayout $r10;
        android.view.ViewGroup $r5;
        android.graphics.PorterDuff$Mode $r12;
        android.widget.TextView $r6;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>;

        $r2 = null;

        if $r1 == null goto label01;

        $r3 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: android.view.View getCustomView()>();

        goto label02;

     label01:
        $r3 = null;

     label02:
        if $r3 == null goto label08;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == r0 goto label04;

        if $r4 == null goto label03;

        $r5 = (android.view.ViewGroup) $r4;

        virtualinvoke $r5.<android.view.ViewGroup: void removeView(android.view.View)>($r3);

     label03:
        virtualinvoke r0.<android.widget.LinearLayout: void addView(android.view.View)>($r3);

     label04:
        r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView> = $r3;

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r6 == null goto label05;

        virtualinvoke $r6.<android.widget.TextView: void setVisibility(int)>(8);

     label05:
        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        if $r7 == null goto label06;

        virtualinvoke $r7.<android.widget.ImageView: void setVisibility(int)>(8);

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        virtualinvoke $r7.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

     label06:
        $r8 = virtualinvoke $r3.<android.view.View: android.view.View findViewById(int)>(16908308);

        $r6 = (android.widget.TextView) $r8;

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView> = $r6;

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView>;

        if $r6 == null goto label07;

        $i0 = staticinvoke <b.i.j.j: int d(android.widget.TextView)>($r6);

        r0.<com.google.android.material.tabs.TabLayout$TabView: int defaultMaxLines> = $i0;

     label07:
        $r3 = virtualinvoke $r3.<android.view.View: android.view.View findViewById(int)>(16908294);

        $r7 = (android.widget.ImageView) $r3;

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView customIconView> = $r7;

        goto label10;

     label08:
        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView>;

        if $r3 == null goto label09;

        virtualinvoke r0.<android.widget.LinearLayout: void removeView(android.view.View)>($r3);

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView> = null;

     label09:
        r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView> = null;

        r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView customIconView> = null;

     label10:
        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.view.View customView>;

        if $r3 != null goto label16;

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        if $r7 != null goto label11;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void inflateAndAddDefaultIconView()>();

     label11:
        if $r1 == null goto label12;

        $r9 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>();

        if $r9 == null goto label12;

        $r2 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>();

        $r2 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r2);

        $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label12:
        if $r2 == null goto label13;

        $r10 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $r11 = $r10.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabIconTint>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r11);

        $r10 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $r12 = $r10.<com.google.android.material.tabs.TabLayout: android.graphics.PorterDuff$Mode tabIconTintMode>;

        if $r12 == null goto label13;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r12);

     label13:
        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        if $r6 != null goto label14;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void inflateAndAddDefaultTextView()>();

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $i0 = staticinvoke <b.i.j.j: int d(android.widget.TextView)>($r6);

        r0.<com.google.android.material.tabs.TabLayout$TabView: int defaultMaxLines> = $i0;

     label14:
        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $r10 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $i0 = $r10.<com.google.android.material.tabs.TabLayout: int tabTextAppearance>;

        staticinvoke <b.i.j.j: void d(android.widget.TextView,int)>($r6, $i0);

        $r10 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $r11 = $r10.<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList tabTextColors>;

        if $r11 == null goto label15;

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        virtualinvoke $r6.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r11);

     label15:
        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void updateTextAndIcon(android.widget.TextView,android.widget.ImageView)>($r6, $r7);

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeAnchor()>();

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void addOnLayoutChangeListener(android.view.View)>($r7);

        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void addOnLayoutChangeListener(android.view.View)>($r6);

        goto label18;

     label16:
        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView>;

        if $r6 != null goto label17;

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView customIconView>;

        if $r7 == null goto label18;

     label17:
        $r6 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView>;

        $r7 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView customIconView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void updateTextAndIcon(android.widget.TextView,android.widget.ImageView)>($r6, $r7);

     label18:
        if $r1 == null goto label19;

        $r13 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r13);

        if $z0 != 0 goto label19;

        $r13 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)>($r1);

        virtualinvoke r0.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>($r13);

     label19:
        if $r1 == null goto label20;

        $z0 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: boolean isSelected()>();

        if $z0 == 0 goto label20;

        $z0 = 1;

        goto label21;

     label20:
        $z0 = 0;

     label21:
        virtualinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void setSelected(boolean)>($z0);

        return;
    }

    public final void updateOrientation()
    {
        android.widget.TextView $r2;
        byte $b0;
        com.google.android.material.tabs.TabLayout $r1;
        android.widget.ImageView $r3;
        com.google.android.material.tabs.TabLayout$TabView r0;
        boolean $z0;

        r0 := @this: com.google.android.material.tabs.TabLayout$TabView;

        $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout this$0>;

        $z0 = $r1.<com.google.android.material.tabs.TabLayout: boolean inlineLabel>;

        $b0 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>($b0);

        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView>;

        if $r2 != null goto label2;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView customIconView>;

        if $r3 == null goto label1;

        goto label2;

     label1:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView textView>;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView iconView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void updateTextAndIcon(android.widget.TextView,android.widget.ImageView)>($r2, $r3);

        return;

     label2:
        $r2 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.TextView customTextView>;

        $r3 = r0.<com.google.android.material.tabs.TabLayout$TabView: android.widget.ImageView customIconView>;

        specialinvoke r0.<com.google.android.material.tabs.TabLayout$TabView: void updateTextAndIcon(android.widget.TextView,android.widget.ImageView)>($r2, $r3);

        return;
    }
}
