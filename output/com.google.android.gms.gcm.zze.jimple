public final class com.google.android.gms.gcm.zze extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    public final java.util.concurrent.atomic.AtomicInteger zzy;

    public void <init>(com.google.android.gms.gcm.GcmTaskService)
    {
        com.google.android.gms.gcm.GcmTaskService $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        com.google.android.gms.gcm.zze r0;

        r0 := @this: com.google.android.gms.gcm.zze;

        $r1 := @parameter0: com.google.android.gms.gcm.GcmTaskService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<com.google.android.gms.gcm.zze: java.util.concurrent.atomic.AtomicInteger zzy> = $r2;

        return;
    }

    public final java.lang.Thread newThread(java.lang.Runnable)
    {
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Thread $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Runnable $r3;
        com.google.android.gms.gcm.zze r0;

        r0 := @this: com.google.android.gms.gcm.zze;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 = new java.lang.Thread;

        $r4 = r0.<com.google.android.gms.gcm.zze: java.util.concurrent.atomic.AtomicInteger zzy>;

        $i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gcm-task#");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r3, $r5);

        virtualinvoke $r1.<java.lang.Thread: void setPriority(int)>(4);

        return $r1;
    }
}
