public abstract class org.codehaus.jackson.map.ser.ContainerSerializerBase extends org.codehaus.jackson.map.ser.SerializerBase
{

    public void <init>(java.lang.Class)
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.ser.ContainerSerializerBase r0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializerBase;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.ser.SerializerBase: void <init>(java.lang.Class)>($r1);

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.ser.ContainerSerializerBase r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializerBase;

        $r1 := @parameter0: java.lang.Class;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.codehaus.jackson.map.ser.SerializerBase: void <init>(java.lang.Class,boolean)>($r1, $z0);

        return;
    }

    public abstract org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer);

    public org.codehaus.jackson.map.ser.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    {
        org.codehaus.jackson.map.ser.ContainerSerializerBase r0;
        org.codehaus.jackson.map.TypeSerializer $r1;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializerBase;

        $r1 := @parameter0: org.codehaus.jackson.map.TypeSerializer;

        if $r1 != null goto label1;

        return r0;

     label1:
        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializerBase: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>($r1);

        return r0;
    }
}
