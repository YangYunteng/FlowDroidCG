public class com.google.android.material.bottomsheet.BottomSheetBehavior extends androidx.coordinatorlayout.widget.CoordinatorLayout$b
{
    public static final int CORNER_ANIMATION_DURATION;
    public static final int DEF_STYLE_RES;
    public static final float HIDE_FRICTION;
    public static final float HIDE_THRESHOLD;
    public static final int PEEK_HEIGHT_AUTO;
    public static final int SAVE_ALL;
    public static final int SAVE_FIT_TO_CONTENTS;
    public static final int SAVE_HIDEABLE;
    public static final int SAVE_NONE;
    public static final int SAVE_PEEK_HEIGHT;
    public static final int SAVE_SKIP_COLLAPSED;
    public static final int SIGNIFICANT_VEL_THRESHOLD;
    public static final int STATE_COLLAPSED;
    public static final int STATE_DRAGGING;
    public static final int STATE_EXPANDED;
    public static final int STATE_HALF_EXPANDED;
    public static final int STATE_HIDDEN;
    public static final int STATE_SETTLING;
    public static final java.lang.String TAG;
    public int activePointerId;
    public final java.util.ArrayList callbacks;
    public int collapsedOffset;
    public final b.k.b.g$a dragCallback;
    public boolean draggable;
    public float elevation;
    public int expandedOffset;
    public boolean fitToContents;
    public int fitToContentsOffset;
    public int gestureInsetBottom;
    public boolean gestureInsetBottomIgnored;
    public int halfExpandedOffset;
    public float halfExpandedRatio;
    public boolean hideable;
    public boolean ignoreEvents;
    public java.util.Map importantForAccessibilityMap;
    public int initialY;
    public android.animation.ValueAnimator interpolatorAnimator;
    public boolean isShapeExpanded;
    public int lastNestedScrollDy;
    public com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable;
    public float maximumVelocity;
    public boolean nestedScrolled;
    public java.lang.ref.WeakReference nestedScrollingChildRef;
    public int parentHeight;
    public int parentWidth;
    public int peekHeight;
    public boolean peekHeightAuto;
    public int peekHeightMin;
    public int saveFlags;
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelDefault;
    public boolean shapeThemingEnabled;
    public boolean skipCollapsed;
    public int state;
    public boolean touchingScrollingChild;
    public boolean updateImportantForAccessibilityOnSiblings;
    public android.view.VelocityTracker velocityTracker;
    public b.k.b.g viewDragHelper;
    public java.lang.ref.WeakReference viewRef;

    static void <clinit>()
    {
        int $i0;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.String TAG> = "BottomSheetBehavior";

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_SETTLING> = 2;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_HIDDEN> = 5;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_HALF_EXPANDED> = 6;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_EXPANDED> = 3;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_DRAGGING> = 1;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_COLLAPSED> = 4;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SIGNIFICANT_VEL_THRESHOLD> = 500;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_SKIP_COLLAPSED> = 8;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_PEEK_HEIGHT> = 1;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_NONE> = 0;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_HIDEABLE> = 4;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_FIT_TO_CONTENTS> = 2;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_ALL> = -1;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int PEEK_HEIGHT_AUTO> = -1;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: float HIDE_THRESHOLD> = 0.5F;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: float HIDE_FRICTION> = 0.1F;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int CORNER_ANIMATION_DURATION> = 500;

        $i0 = <com.google.android.material.R$style: int Widget_Design_BottomSheet_Modal>;

        <com.google.android.material.bottomsheet.BottomSheetBehavior: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.util.ArrayList $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior$4 $r2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void <init>()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags> = 0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents> = 1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean updateImportantForAccessibilityOnSiblings> = 0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable> = null;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio> = 0.5F;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float elevation> = -1.0F;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable> = 1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state> = 4;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks> = $r1;

        $r2 = new com.google.android.material.bottomsheet.BottomSheetBehavior$4;

        specialinvoke $r2.<com.google.android.material.bottomsheet.BottomSheetBehavior$4: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior)>(r0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g$a dragCallback> = $r2;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        android.content.res.TypedArray $r4;
        java.util.ArrayList $r8;
        com.google.android.material.bottomsheet.BottomSheetBehavior$4 $r9;
        android.content.res.ColorStateList $r5;
        android.view.ViewConfiguration $r7;
        android.util.AttributeSet $r2;
        android.util.TypedValue $r6;
        int[] $r3;
        int $i0, $i1;
        float $f0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags> = 0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents> = 1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean updateImportantForAccessibilityOnSiblings> = 0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable> = null;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio> = 0.5F;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float elevation> = -1.0F;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable> = 1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state> = 4;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks> = $r8;

        $r9 = new com.google.android.material.bottomsheet.BottomSheetBehavior$4;

        specialinvoke $r9.<com.google.android.material.bottomsheet.BottomSheetBehavior$4: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior)>(r0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g$a dragCallback> = $r9;

        $r3 = <com.google.android.material.R$styleable: int[] BottomSheetBehavior_Layout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_shapeAppearance>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shapeThemingEnabled> = $z0;

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_backgroundTint>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_backgroundTint>;

        $r5 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r1, $r4, $i0);

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList)>($r1, $r2, $z0, $r5);

        goto label2;

     label1:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)>($r1, $r2, $z0);

     label2:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void createShapeValueAnimator()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_android_elevation>;

        $f0 = virtualinvoke $r4.<android.content.res.TypedArray: float getDimension(int,float)>($i0, -1.0F);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float elevation> = $f0;

     label3:
        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_peekHeight>;

        $r6 = virtualinvoke $r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i0);

        if $r6 == null goto label4;

        $i0 = $r6.<android.util.TypedValue: int data>;

        $i1 = -1;

        if $i0 != $i1 goto label4;

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int)>($i0);

        goto label5;

     label4:
        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_peekHeight>;

        $i1 = -1;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, $i1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int)>($i0);

     label5:
        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_hideable>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setHideable(boolean)>($z0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_gestureInsetBottomIgnored>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setGestureInsetBottomIgnored(boolean)>($z0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_fitToContents>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setFitToContents(boolean)>($z0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_skipCollapsed>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setSkipCollapsed(boolean)>($z0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_draggable>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setDraggable(boolean)>($z0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_saveFlags>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setSaveFlags(int)>($i0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_halfExpandedRatio>;

        $f0 = virtualinvoke $r4.<android.content.res.TypedArray: float getFloat(int,float)>($i0, 0.5F);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setHalfExpandedRatio(float)>($f0);

        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_expandedOffset>;

        $r6 = virtualinvoke $r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i0);

        if $r6 == null goto label6;

        $i0 = $r6.<android.util.TypedValue: int type>;

        if $i0 != 16 goto label6;

        $i0 = $r6.<android.util.TypedValue: int data>;

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setExpandedOffset(int)>($i0);

        goto label7;

     label6:
        $i0 = <com.google.android.material.R$styleable: int BottomSheetBehavior_Layout_behavior_expandedOffset>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setExpandedOffset(int)>($i0);

     label7:
        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $f0 = (float) $i0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float maximumVelocity> = $f0;

        return;
    }

    public static com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;
        com.google.android.material.shape.MaterialShapeDrawable r1;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        r1 = $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        return r1;
    }

    public static int access$102(com.google.android.material.bottomsheet.BottomSheetBehavior, int)
    {
        int $i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter1: int;

        $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int gestureInsetBottom> = $i0;

        return $i0;
    }

    public static void access$200(com.google.android.material.bottomsheet.BottomSheetBehavior, boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updatePeekHeight(boolean)>($z0);

        return;
    }

    public static boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable>;

        return z0;
    }

    public static boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        return z0;
    }

    public static int access$600(com.google.android.material.bottomsheet.BottomSheetBehavior)
    {
        int i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        i0 = $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight>;

        return i0;
    }

    public static boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = $r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed>;

        return z0;
    }

    private void addAccessibilityActionForState(android.view.View, b.i.i.a.b$a, int)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        android.view.View $r1;
        b.i.i.a.b$a $r2;
        com.google.android.material.bottomsheet.BottomSheetBehavior$5 $r3;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: b.i.i.a.b$a;

        $i0 := @parameter2: int;

        $r3 = new com.google.android.material.bottomsheet.BottomSheetBehavior$5;

        specialinvoke $r3.<com.google.android.material.bottomsheet.BottomSheetBehavior$5: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int)>(r0, $i0);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a.b$a,java.lang.CharSequence,b.i.i.a.e)>($r1, $r2, null, $r3);

        return;
    }

    private void calculateCollapsedOffset()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 = specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int calculatePeekHeight()>();

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $i0 = $i1 - $i0;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset> = $i0;

        return;

     label1:
        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $i0 = $i1 - $i0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset> = $i0;

        return;
    }

    private void calculateHalfExpandedOffset()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        float $f0, $f1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $f1 = (float) $i0;

        $f0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio>;

        $f0 = 1.0F - $f0;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset> = $i0;

        return;
    }

    private int calculatePeekHeight()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeightMin>;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $i2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentWidth>;

        $i2 = $i2 * 9;

        $i2 = $i2 / 16;

        $i1 = $i1 - $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;

     label1:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight>;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean gestureInsetBottomIgnored>;

        if $z0 == 0 goto label2;

        $i1 = 0;

        goto label3;

     label2:
        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int gestureInsetBottom>;

     label3:
        $i0 = $i0 + $i1;

        return $i0;
    }

    private void createMaterialShapeDrawable(android.content.Context, android.util.AttributeSet, boolean)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList)>($r1, $r2, $z0, null);

        return;
    }

    private void createMaterialShapeDrawable(android.content.Context, android.util.AttributeSet, boolean, android.content.res.ColorStateList)
    {
        android.content.Context $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        com.google.android.material.shape.ShapeAppearanceModel $r5;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r4;
        com.google.android.material.shape.MaterialShapeDrawable $r6;
        android.content.res.ColorStateList $r3;
        android.util.AttributeSet $r2;
        android.util.TypedValue $r7;
        int $i0, $i1;
        android.content.res.Resources$Theme $r8;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: android.content.res.ColorStateList;

        $z1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shapeThemingEnabled>;

        if $z1 == 0 goto label2;

        $i1 = <com.google.android.material.R$attr: int bottomSheetStyle>;

        $i0 = <com.google.android.material.bottomsheet.BottomSheetBehavior: int DEF_STYLE_RES>;

        $r4 = staticinvoke <com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i1, $i0);

        $r5 = virtualinvoke $r4.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelDefault> = $r5;

        $r6 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelDefault>;

        specialinvoke $r6.<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>($r5);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable> = $r6;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        virtualinvoke $r6.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r1);

        if $z0 == 0 goto label1;

        if $r3 == null goto label1;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        virtualinvoke $r6.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r3);

        return;

     label1:
        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r8.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842801, $r7, 1);

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        $i0 = $r7.<android.util.TypedValue: int data>;

        virtualinvoke $r6.<com.google.android.material.shape.MaterialShapeDrawable: void setTint(int)>($i0);

     label2:
        return;
    }

    private void createShapeValueAnimator()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        com.google.android.material.bottomsheet.BottomSheetBehavior$2 $r3;
        float[] $r2;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r2);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator> = $r1;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(500L);

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator>;

        $r3 = new com.google.android.material.bottomsheet.BottomSheetBehavior$2;

        specialinvoke $r3.<com.google.android.material.bottomsheet.BottomSheetBehavior$2: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior)>(r0);

        virtualinvoke $r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r3);

        return;
    }

    public static com.google.android.material.bottomsheet.BottomSheetBehavior 'from'(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$b $r3;
        android.view.View $r0;
        java.lang.IllegalArgumentException $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r2;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r1 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label2;

        $r2 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r1;

        $r3 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()>();

        $z0 = $r3 instanceof com.google.android.material.bottomsheet.BottomSheetBehavior;

        if $z0 == 0 goto label1;

        $r4 = (com.google.android.material.bottomsheet.BottomSheetBehavior) $r3;

        return $r4;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The view is not associated with BottomSheetBehavior");

        throw $r5;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The view is not a child of CoordinatorLayout");

        throw $r5;
    }

    private float getYVelocity()
    {
        android.view.VelocityTracker $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        float $f0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        if $r1 != null goto label1;

        return 0.0F;

     label1:
        $f0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float maximumVelocity>;

        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId>;

        $f0 = virtualinvoke $r1.<android.view.VelocityTracker: float getYVelocity(int)>($i0);

        return $f0;
    }

    private void reset()
    {
        int $i0;
        android.view.VelocityTracker $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 = -1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId> = $i0;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker> = null;

     label1:
        return;
    }

    private void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1;
        com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = -1;

        if $i0 == $i1 goto label2;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label3;

     label2:
        $i0 = $r1.<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: int peekHeight>;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight> = $i0;

     label3:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags>;

        $i1 = -1;

        if $i0 == $i1 goto label4;

        $i0 = $i0 & 2;

        if $i0 != 2 goto label5;

     label4:
        $z0 = $r1.<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean fitToContents>;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents> = $z0;

     label5:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags>;

        $i1 = -1;

        if $i0 == $i1 goto label6;

        $i0 = $i0 & 4;

        if $i0 != 4 goto label7;

     label6:
        $z0 = $r1.<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean hideable>;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable> = $z0;

     label7:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags>;

        $i1 = -1;

        if $i0 == $i1 goto label8;

        $i0 = $i0 & 8;

        if $i0 != 8 goto label9;

     label8:
        $z0 = $r1.<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean skipCollapsed>;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed> = $z0;

     label9:
        return;
    }

    private void setSystemGestureInsets(android.view.View)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior$3 $r2;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $z0 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isGestureInsetBottomIgnored()>();

        if $z0 != 0 goto label1;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto>;

        if $z0 != 0 goto label1;

        $r2 = new com.google.android.material.bottomsheet.BottomSheetBehavior$3;

        specialinvoke $r2.<com.google.android.material.bottomsheet.BottomSheetBehavior$3: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior)>(r0);

        staticinvoke <com.google.android.material.internal.ViewUtils: void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)>($r1, $r2);

     label1:
        return;
    }

    private void settleToStatePendingLayout(int)
    {
        android.view.ViewParent $r4;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        com.google.android.material.bottomsheet.BottomSheetBehavior$1 $r5;
        int $i0;
        android.view.View $r3;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r2;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == null goto label2;

        $z0 = interfaceinvoke $r4.<android.view.ViewParent: boolean isLayoutRequested()>();

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <b.i.i.y: boolean D(android.view.View)>($r3);

        if $z0 == 0 goto label2;

        $r5 = new com.google.android.material.bottomsheet.BottomSheetBehavior$1;

        specialinvoke $r5.<com.google.android.material.bottomsheet.BottomSheetBehavior$1: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)>(r0, $r3, $i0);

        virtualinvoke $r3.<android.view.View: boolean post(java.lang.Runnable)>($r5);

        return;

     label2:
        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToState(android.view.View,int)>($r3, $i0);

        return;
    }

    private void updateAccessibilityActions()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        byte $b1;
        int $i0;
        android.view.View $r3;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        b.i.i.a.b$a $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r2 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r1;

        if $r3 != null goto label2;

        return;

     label2:
        staticinvoke <b.i.i.y: void f(android.view.View,int)>($r3, 524288);

        staticinvoke <b.i.i.y: void f(android.view.View,int)>($r3, 262144);

        staticinvoke <b.i.i.y: void f(android.view.View,int)>($r3, 1048576);

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z0 == 0 goto label3;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 == 5 goto label3;

        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a u>;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void addAccessibilityActionForState(android.view.View,b.i.i.a.b$a,int)>($r3, $r4, 5);

     label3:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        $b1 = 6;

        if $i0 == 3 goto label7;

        if $i0 == 4 goto label5;

        if $i0 == 6 goto label4;

        return;

     label4:
        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a t>;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void addAccessibilityActionForState(android.view.View,b.i.i.a.b$a,int)>($r3, $r4, 4);

        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a s>;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void addAccessibilityActionForState(android.view.View,b.i.i.a.b$a,int)>($r3, $r4, 3);

        return;

     label5:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label6;

        $b1 = 3;

     label6:
        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a s>;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void addAccessibilityActionForState(android.view.View,b.i.i.a.b$a,int)>($r3, $r4, $b1);

        return;

     label7:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label8;

        $b1 = 4;

     label8:
        $r4 = <b.i.i.a.b$a: b.i.i.a.b$a t>;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void addAccessibilityActionForState(android.view.View,b.i.i.a.b$a,int)>($r3, $r4, $b1);

        return;
    }

    private void updateDrawableForTargetState(int)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        float[] $r3;
        com.google.android.material.shape.MaterialShapeDrawable $r2;
        int $i0;
        float $f0, $f1;
        android.animation.ValueAnimator $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        if $i0 != 2 goto label1;

        return;

     label1:
        if $i0 != 3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isShapeExpanded>;

        if $z0 == $z1 goto label7;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isShapeExpanded> = $z1;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        if $r2 == null goto label7;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator>;

        if $r1 == null goto label7;

        $z0 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void reverse()>();

        return;

     label4:
        if $z1 == 0 goto label5;

        $f0 = 0.0F;

        goto label6;

     label5:
        $f0 = 1.0F;

     label6:
        $f1 = 1.0F - $f0;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator>;

        $r3 = newarray (float)[2];

        $r3[0] = $f1;

        $r3[1] = $f0;

        virtualinvoke $r1.<android.animation.ValueAnimator: void setFloatValues(float[])>($r3);

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void start()>();

     label7:
        return;
    }

    private void updateImportantForAccessibility(boolean)
    {
        android.view.ViewParent $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r5;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.util.HashMap $r7;
        java.lang.Integer $r8;
        java.util.Map $r6;
        int $i0, $i1, $i2;
        android.view.View $r3;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r2;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        $z1 = $r4 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout;

        if $z1 != 0 goto label02;

        return;

     label02:
        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout) $r4;

        $i0 = virtualinvoke $r5.<android.view.ViewGroup: int getChildCount()>();

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label04;

        if $z0 == 0 goto label04;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap>;

        if $r6 != null goto label03;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>(int)>($i0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap> = $r7;

        goto label04;

     label03:
        return;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

        $r3 = virtualinvoke $r5.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 != $r2 goto label06;

        goto label09;

     label06:
        if $z0 == 0 goto label08;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 16 goto label07;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap>;

        $i2 = virtualinvoke $r3.<android.view.View: int getImportantForAccessibility()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8);

     label07:
        $z1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean updateImportantForAccessibilityOnSiblings>;

        if $z1 == 0 goto label09;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r3, 4);

        goto label09;

     label08:
        $z1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean updateImportantForAccessibilityOnSiblings>;

        if $z1 == 0 goto label09;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap>;

        if $r6 == null goto label09;

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z1 == 0 goto label09;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap>;

        $r2 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r8 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r3, $i2);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        if $z0 != 0 goto label11;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap> = null;

     label11:
        return;
    }

    private void updatePeekHeight(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        android.view.View $r3;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r2 == null goto label2;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateCollapsedOffset()>();

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != 4 goto label2;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r1;

        if $r3 == null goto label2;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToStatePendingLayout(int)>($i0);

        return;

     label1:
        virtualinvoke $r3.<android.view.View: void requestLayout()>();

     label2:
        return;
    }

    public void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void disableShapeAnimations()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator> = null;

        return;
    }

    public void dispatchOnSlide(int)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.util.ArrayList $r4;
        int $i0, $i1, $i2;
        android.view.View $r3;
        float $f0, $f1;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r2;

        if $r3 == null goto label5;

        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        if $i0 > $i1 goto label2;

        $i2 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        if $i1 != $i2 goto label1;

        goto label2;

     label1:
        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $i0 = $i1 - $i0;

        $f0 = (float) $i0;

        $i0 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        $i0 = $i1 - $i0;

        $f1 = (float) $i0;

        goto label3;

     label2:
        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $i0 = $i1 - $i0;

        $f0 = (float) $i0;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

     label3:
        $f0 = $f0 / $f1;

        $i0 = 0;

     label4:
        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label5;

        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        $r2 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) $r2;

        virtualinvoke $r5.<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onSlide(android.view.View,float)>($r3, $f0);

        $i0 = $i0 + 1;

        goto label4;

     label5:
        return;
    }

    public android.view.View findScrollingChild(android.view.View)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.ViewGroup $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $z0 = staticinvoke <b.i.i.y: boolean F(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        $r2 = (android.view.ViewGroup) $r1;

        $i0 = 0;

        $i1 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

     label2:
        if $i0 >= $i1 goto label4;

        $r1 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $r1 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>($r1);

        if $r1 == null goto label3;

        return $r1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return null;
    }

    public int getExpandedOffset()
    {
        int i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label1;

        i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset>;

        return i0;

     label1:
        i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int expandedOffset>;

        return i0;
    }

    public float getHalfExpandedRatio()
    {
        float f0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        f0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio>;

        return f0;
    }

    public int getPeekHeight()
    {
        int i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto>;

        if $z0 == 0 goto label1;

        i0 = -1;

        return i0;

     label1:
        i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight>;

        return i0;
    }

    public int getPeekHeightMin()
    {
        int i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeightMin>;

        return i0;
    }

    public int getSaveFlags()
    {
        int i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags>;

        return i0;
    }

    public boolean getSkipCollapsed()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed>;

        return z0;
    }

    public int getState()
    {
        int i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        return i0;
    }

    public boolean isDraggable()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable>;

        return z0;
    }

    public boolean isFitToContents()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        return z0;
    }

    public boolean isGestureInsetBottomIgnored()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean gestureInsetBottomIgnored>;

        return z0;
    }

    public boolean isHideable()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        return z0;
    }

    public void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)>($r1);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef> = null;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper> = null;

        return;
    }

    public void onDetachedFromLayoutParams()
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onDetachedFromLayoutParams()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef> = null;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper> = null;

        return;
    }

    public boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        android.view.VelocityTracker $r4;
        byte $b3;
        android.view.MotionEvent $r1;
        b.k.b.g $r9;
        int $i0, $i1, $i2, $i4;
        android.view.View $r3, $r5, $r8;
        java.lang.ref.WeakReference $r6;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        float $f0, $f1;
        java.lang.Object $r7;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: android.view.View;

        $r1 := @parameter2: android.view.MotionEvent;

        $z0 = virtualinvoke $r3.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label14;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable>;

        if $z0 != 0 goto label01;

        goto label14;

     label01:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i1 != 0 goto label02;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void reset()>();

     label02:
        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        if $r4 != null goto label03;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker> = $r4;

     label03:
        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $r5 = null;

        if $i1 == 0 goto label05;

        if $i1 == 1 goto label04;

        if $i1 == 3 goto label04;

        goto label11;

     label04:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean touchingScrollingChild> = 0;

        $i2 = -1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId> = $i2;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents>;

        if $z0 == 0 goto label11;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents> = 0;

        return 0;

     label05:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = (int) $f0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY> = $i0;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 == 2 goto label08;

        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef>;

        if $r6 == null goto label06;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (android.view.View) $r7;

        goto label07;

     label06:
        $r8 = null;

     label07:
        if $r8 == null goto label08;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY>;

        $z0 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>($r8, $i2, $i0);

        if $z0 == 0 goto label08;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId> = $i0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean touchingScrollingChild> = 1;

     label08:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId>;

        $i4 = -1;

        if $i0 != $i4 goto label09;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY>;

        $z0 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>($r3, $i2, $i0);

        if $z0 != 0 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents> = $z0;

     label11:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents>;

        if $z0 != 0 goto label12;

        $r9 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        if $r9 == null goto label12;

        $z0 = virtualinvoke $r9.<b.k.b.g: boolean c(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label12;

        return 1;

     label12:
        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef>;

        if $r6 == null goto label13;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (android.view.View) $r7;

     label13:
        if $i1 != 2 goto label15;

        if $r5 == null goto label15;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents>;

        if $z0 != 0 goto label15;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i1 == 1 goto label15;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i2 = (int) $f0;

        $z0 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>($r5, $i1, $i2);

        if $z0 != 0 goto label15;

        $r9 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        if $r9 == null goto label15;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY>;

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $r9 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        $i1 = virtualinvoke $r9.<b.k.b.g: int f()>();

        $f1 = (float) $i1;

        $b3 = $f0 cmpl $f1;

        $i1 = (int) $b3;

        if $i1 <= 0 goto label15;

        return 1;

     label14:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents> = 1;

     label15:
        return 0;
    }

    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        com.google.android.material.shape.MaterialShapeDrawable $r5;
        byte $b2;
        b.k.b.g$a $r7;
        b.k.b.g $r6;
        int $i0, $i1, $i3;
        android.view.View $r2;
        float $f0;
        java.lang.ref.WeakReference $r3;
        boolean $z0;
        android.content.res.Resources $r4;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>($r1);

        if $z0 == 0 goto label01;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>($r2);

        if $z0 != 0 goto label01;

        virtualinvoke $r2.<android.view.View: void setFitsSystemWindows(boolean)>(1);

     label01:
        $r3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r3 != null goto label09;

        $r4 = virtualinvoke $r1.<android.view.ViewGroup: android.content.res.Resources getResources()>();

        $i1 = <com.google.android.material.R$dimen: int design_bottom_sheet_peek_height_min>;

        $i1 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeightMin> = $i1;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setSystemGestureInsets(android.view.View)>($r2);

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef> = $r3;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shapeThemingEnabled>;

        if $z0 == 0 goto label02;

        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        if $r5 == null goto label02;

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>($r2, $r5);

     label02:
        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        if $r5 == null goto label08;

        $f0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float elevation>;

        $b2 = $f0 cmpl -1.0F;

        if $b2 != 0 goto label03;

        $f0 = staticinvoke <b.i.i.y: float l(android.view.View)>($r2);

     label03:
        virtualinvoke $r5.<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>($f0);

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i1 != 3 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isShapeExpanded> = $z0;

        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable>;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isShapeExpanded>;

        if $z0 == 0 goto label06;

        $f0 = 0.0F;

        goto label07;

     label06:
        $f0 = 1.0F;

     label07:
        virtualinvoke $r5.<com.google.android.material.shape.MaterialShapeDrawable: void setInterpolation(float)>($f0);

     label08:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()>();

        $i1 = staticinvoke <b.i.i.y: int n(android.view.View)>($r2);

        if $i1 != 0 goto label09;

        staticinvoke <b.i.i.y: void h(android.view.View,int)>($r2, 1);

     label09:
        $r6 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        if $r6 != null goto label10;

        $r7 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g$a dragCallback>;

        $r6 = staticinvoke <b.k.b.g: b.k.b.g a(android.view.ViewGroup,b.k.b.g$a)>($r1, $r7);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper> = $r6;

     label10:
        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        virtualinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>($r2, $i0);

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight> = $i0;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $i3 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i0 = $i0 - $i3;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset> = $i0;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateHalfExpandedOffset()>();

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateCollapsedOffset()>();

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != 3 goto label11;

        $i0 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r2, $i0);

        goto label16;

     label11:
        if $i0 != 6 goto label12;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r2, $i0);

        goto label16;

     label12:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z0 == 0 goto label13;

        if $i0 != 5 goto label13;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r2, $i0);

        goto label16;

     label13:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != 4 goto label14;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r2, $i0);

        goto label16;

     label14:
        if $i0 == 1 goto label15;

        if $i0 != 2 goto label16;

     label15:
        $i0 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i0 = $i1 - $i0;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r2, $i0);

     label16:
        $r3 = new java.lang.ref.WeakReference;

        $r2 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>($r2);

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef> = $r3;

        return 1;
    }

    public boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, float, float)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        android.view.View $r1, $r2;
        float $f0, $f1;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef>;

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r2 != $r5 goto label2;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != 3 goto label1;

        $z0 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>($r3, $r1, $r2, $f0, $f1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int, int, int[], int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3, $r4, $r7;
        java.lang.Object $r6;
        java.lang.ref.WeakReference $r5;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: android.view.View;

        $r4 := @parameter2: android.view.View;

        $i1 := @parameter3: int;

        $i0 := @parameter4: int;

        $r1 := @parameter5: int[];

        $i2 := @parameter6: int;

        if $i2 != 1 goto label01;

        return;

     label01:
        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef>;

        if $r5 == null goto label02;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (android.view.View) $r6;

        goto label03;

     label02:
        $r7 = null;

     label03:
        if $r4 == $r7 goto label04;

        return;

     label04:
        $i1 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i2 = $i1 - $i0;

        if $i0 <= 0 goto label07;

        $i3 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        if $i2 >= $i3 goto label05;

        $i2 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        $i1 = $i1 - $i2;

        $r1[1] = $i1;

        $i1 = $r1[1];

        $i1 = neg $i1;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r3, $i1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>(3);

        goto label11;

     label05:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable>;

        if $z0 != 0 goto label06;

        return;

     label06:
        $r1[1] = $i0;

        $i1 = neg $i0;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r3, $i1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>(1);

        goto label11;

     label07:
        if $i0 >= 0 goto label11;

        $i3 = -1;

        $z0 = virtualinvoke $r4.<android.view.View: boolean canScrollVertically(int)>($i3);

        if $z0 != 0 goto label11;

        $i3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        if $i2 <= $i3 goto label09;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z0 == 0 goto label08;

        goto label09;

     label08:
        $i1 = $i1 - $i3;

        $r1[1] = $i1;

        $i1 = $r1[1];

        $i1 = neg $i1;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r3, $i1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>(4);

        goto label11;

     label09:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable>;

        if $z0 != 0 goto label10;

        return;

     label10:
        $r1[1] = $i0;

        $i1 = neg $i0;

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r3, $i1);

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>(1);

     label11:
        $i1 = virtualinvoke $r3.<android.view.View: int getTop()>();

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void dispatchOnSlide(int)>($i1);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int lastNestedScrollDy> = $i0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean nestedScrolled> = 1;

        return;
    }

    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int, int, int, int, int, int[])
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r2, $r3;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $i4 := @parameter7: int;

        $r4 := @parameter8: int[];

        return;
    }

    public void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        android.view.View $r3;
        com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState $r4;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r3 := @parameter1: android.view.View;

        $r1 := @parameter2: android.os.Parcelable;

        $r4 = (com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) $r1;

        $r1 = virtualinvoke $r4.<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>($r2, $r3, $r1);

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)>($r4);

        $i0 = $r4.<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: int state>;

        if $i0 == 1 goto label2;

        if $i0 != 2 goto label1;

        goto label2;

     label1:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state> = $i0;

        return;

     label2:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state> = 4;

        return;
    }

    public android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View)
    {
        android.os.Parcelable $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout $r4;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        android.view.View $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState $r2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r4 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r2 = new com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState;

        $r3 = specialinvoke r0.<androidx.coordinatorlayout.widget.CoordinatorLayout$b: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r4, $r1);

        specialinvoke $r2.<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior)>($r3, r0);

        return $r2;
    }

    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r3;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1;
        android.view.View $r1, $r2, $r4;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r3 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r4 := @parameter1: android.view.View;

        $r1 := @parameter2: android.view.View;

        $r2 := @parameter3: android.view.View;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int lastNestedScrollDy> = 0;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean nestedScrolled> = 0;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        byte $b2;
        int $i0, $i1, $i3;
        android.view.View $r1, $r3;
        float $f0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        $b2 = 3;

        if $i0 != $i1 goto label01;

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>(3);

        return;

     label01:
        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef>;

        if $r4 == null goto label18;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 != $r5 goto label18;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean nestedScrolled>;

        if $z0 != 0 goto label02;

        return;

     label02:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int lastNestedScrollDy>;

        if $i0 <= 0 goto label05;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label03;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset>;

        goto label17;

     label03:
        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        if $i0 <= $i1 goto label04;

        $i0 = $i1;

        goto label15;

     label04:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int expandedOffset>;

        goto label17;

     label05:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z0 == 0 goto label06;

        $f0 = specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float getYVelocity()>();

        $z0 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldHide(android.view.View,float)>($r1, $f0);

        if $z0 == 0 goto label06;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

        $b2 = 5;

        goto label17;

     label06:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int lastNestedScrollDy>;

        if $i0 != 0 goto label12;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label08;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $i0 = $i0 - $i3;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i1 >= $i0 goto label07;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset>;

        goto label17;

     label07:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        goto label13;

     label08:
        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        if $i0 >= $i1 goto label10;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        if $i0 >= $i1 goto label09;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int expandedOffset>;

        goto label17;

     label09:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        goto label15;

     label10:
        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $i0 = $i0 - $i3;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i1 >= $i0 goto label11;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        goto label15;

     label11:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        goto label13;

     label12:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label14;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

     label13:
        $b2 = 4;

        goto label17;

     label14:
        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $i0 = $i0 - $i3;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i1 >= $i0 goto label16;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

     label15:
        $b2 = 6;

        goto label17;

     label16:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        goto label13;

     label17:
        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void startSettlingAnimation(android.view.View,int,int,boolean)>($r1, $b2, $i0, 0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean nestedScrolled> = 0;

     label18:
        return;
    }

    public boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r2;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        android.view.VelocityTracker $r5;
        byte $b2;
        android.view.MotionEvent $r3;
        b.k.b.g $r4;
        int $i0, $i1;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r2 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.MotionEvent;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isShown()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r3.<android.view.MotionEvent: int getActionMasked()>();

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i1 != 1 goto label2;

        if $i0 != 0 goto label2;

        return 1;

     label2:
        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        if $r4 == null goto label3;

        virtualinvoke $r4.<b.k.b.g: void a(android.view.MotionEvent)>($r3);

     label3:
        if $i0 != 0 goto label4;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void reset()>();

     label4:
        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        if $r5 != null goto label5;

        $r5 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker> = $r5;

     label5:
        $r5 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r3);

        if $i0 != 2 goto label6;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents>;

        if $z0 != 0 goto label6;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        $i0 = virtualinvoke $r4.<b.k.b.g: int f()>();

        $f1 = (float) $i0;

        $b2 = $f0 cmpl $f1;

        $i0 = (int) $b2;

        if $i0 <= 0 goto label6;

        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        $i0 = virtualinvoke $r3.<android.view.MotionEvent: int getActionIndex()>();

        $i0 = virtualinvoke $r3.<android.view.MotionEvent: int getPointerId(int)>($i0);

        virtualinvoke $r4.<b.k.b.g: void a(android.view.View,int)>($r1, $i0);

     label6:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents>;

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BottomSheetBehavior", "BottomSheetBehavior now supports multiple callbacks. `setBottomSheetCallback()` removes all existing callbacks, including ones set internally by library authors, which may result in unintended behavior. This may change in the future. Please use `addBottomSheetCallback()` and `removeBottomSheetCallback()` instead to set your own callbacks.");

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        if $r1 == null goto label1;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void setDraggable(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable> = $z0;

        return;
    }

    public void setExpandedOffset(int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int expandedOffset> = $i0;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("offset must be greater than or equal to 0");

        throw $r1;
    }

    public void setFitToContents(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        java.lang.ref.WeakReference $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents> = $z0;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r1 == null goto label2;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateCollapsedOffset()>();

     label2:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label3;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != 6 goto label3;

        $i0 = 3;

        goto label4;

     label3:
        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

     label4:
        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>($i0);

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()>();

        return;
    }

    public void setGestureInsetBottomIgnored(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean gestureInsetBottomIgnored> = $z0;

        return;
    }

    public void setHalfExpandedRatio(float)
    {
        byte $b0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i1;
        float $f0;
        java.lang.ref.WeakReference $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $b0 = $f0 cmpl 1.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio> = $f0;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r1 == null goto label2;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateHalfExpandedOffset()>();

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ratio must be a float value between 0 and 1");

        throw $r2;

     label2:
        return;
    }

    public void setHideable(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z1 == $z0 goto label2;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable> = $z0;

        if $z0 != 0 goto label1;

        $i0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != 5 goto label1;

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setState(int)>(4);

     label1:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()>();

     label2:
        return;
    }

    public void setPeekHeight(int)
    {
        int $i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int,boolean)>($i0, 0);

        return;
    }

    public final void setPeekHeight(int, boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 = 1;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $z2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto>;

        if $z2 != 0 goto label2;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto> = 1;

        goto label4;

     label1:
        $z2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto>;

        if $z2 != 0 goto label3;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight>;

        if $i1 == $i0 goto label2;

        goto label3;

     label2:
        $z1 = 0;

        goto label4;

     label3:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto> = 0;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight> = $i0;

     label4:
        if $z1 == 0 goto label5;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updatePeekHeight(boolean)>($z0);

     label5:
        return;
    }

    public void setSaveFlags(int)
    {
        int $i0;
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags> = $i0;

        return;
    }

    public void setSkipCollapsed(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed> = $z0;

        return;
    }

    public void setState(int)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        int $i0, $i1;
        java.lang.ref.WeakReference $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r1 != null goto label3;

        if $i0 == 4 goto label2;

        if $i0 == 3 goto label2;

        if $i0 == 6 goto label2;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z0 == 0 goto label4;

        if $i0 != 5 goto label4;

     label2:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state> = $i0;

        return;

     label3:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToStatePendingLayout(int)>($i0);

     label4:
        return;
    }

    public void setStateInternal(int)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.util.ArrayList $r4;
        int $i0, $i1, $i2;
        android.view.View $r3;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;
        com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback $r5;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int state> = $i0;

        $r1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef>;

        if $r1 != null goto label2;

        return;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r2;

        if $r3 != null goto label3;

        return;

     label3:
        $i1 = 0;

        if $i0 != 3 goto label4;

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateImportantForAccessibility(boolean)>(1);

        goto label6;

     label4:
        if $i0 == 6 goto label5;

        if $i0 == 5 goto label5;

        if $i0 != 4 goto label6;

     label5:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateImportantForAccessibility(boolean)>(0);

     label6:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateDrawableForTargetState(int)>($i0);

     label7:
        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label8;

        $r4 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks>;

        $r2 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) $r2;

        virtualinvoke $r5.<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onStateChanged(android.view.View,int)>($r3, $i0);

        $i1 = $i1 + 1;

        goto label7;

     label8:
        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()>();

        return;
    }

    public void setUpdateImportantForAccessibilityOnSiblings(boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean updateImportantForAccessibilityOnSiblings> = $z0;

        return;
    }

    public void settleToState(android.view.View, int)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        if $i0 != 4 goto label1;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        goto label5;

     label1:
        if $i0 != 6 goto label3;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset>;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents>;

        if $z0 == 0 goto label2;

        $i2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset>;

        if $i1 > $i2 goto label2;

        $i1 = $i2;

        $i0 = 3;

        goto label5;

     label2:
        goto label5;

     label3:
        if $i0 != 3 goto label4;

        $i1 = virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>();

        goto label5;

     label4:
        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable>;

        if $z0 == 0 goto label6;

        if $i0 != 5 goto label6;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight>;

     label5:
        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void startSettlingAnimation(android.view.View,int,int,boolean)>($r1, $i0, $i1, 0);

        return;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal state argument: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public boolean shouldHide(android.view.View, float)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        byte $b2;
        int $i0, $i1;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $z0 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        if $i0 >= $i1 goto label2;

        return 0;

     label2:
        $i0 = specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int calculatePeekHeight()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        $f0 = $f0 * 0.1F;

        $f0 = $f1 + $f0;

        $i1 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset>;

        $f1 = (float) $i1;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $b2 = $f0 cmpl 0.5F;

        $i0 = (int) $b2;

        if $i0 <= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void startSettlingAnimation(android.view.View, int, int, boolean)
    {
        com.google.android.material.bottomsheet.BottomSheetBehavior r0;
        com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable $r3;
        b.k.b.g $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.bottomsheet.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $z0 = virtualinvoke $r2.<b.k.b.g: boolean e(int,int)>($i2, $i1);

        goto label2;

     label1:
        $r2 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: b.k.b.g viewDragHelper>;

        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $z0 = virtualinvoke $r2.<b.k.b.g: boolean b(android.view.View,int,int)>($r1, $i2, $i1);

     label2:
        if $z0 == 0 goto label5;

        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>(2);

        specialinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateDrawableForTargetState(int)>($i0);

        $r3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable>;

        if $r3 != null goto label3;

        $r3 = new com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable;

        specialinvoke $r3.<com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)>(r0, $r1, $i0);

        r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable> = $r3;

     label3:
        $r3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable>;

        $z0 = staticinvoke <com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean access$300(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable)>($r3);

        if $z0 != 0 goto label4;

        $r3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable>;

        $r3.<com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: int targetState> = $i0;

        staticinvoke <b.i.i.y: void a(android.view.View,java.lang.Runnable)>($r1, $r3);

        $r3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable>;

        staticinvoke <com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean access$302(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean)>($r3, 1);

        return;

     label4:
        $r3 = r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable settleRunnable>;

        $r3.<com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: int targetState> = $i0;

        return;

     label5:
        virtualinvoke r0.<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>($i0);

        return;
    }
}
