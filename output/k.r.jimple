public final class k.r extends java.lang.Object
{
    public int a;
    public int b;
    public java.lang.Runnable c;
    public java.util.concurrent.ExecutorService d;
    public final java.util.Deque e;
    public final java.util.Deque f;
    public final java.util.Deque g;

    public void <init>()
    {
        java.util.ArrayDeque $r1;
        k.r r0;

        r0 := @this: k.r;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<k.r: int a> = 64;

        r0.<k.r: int b> = 5;

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<k.r: java.util.Deque e> = $r1;

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<k.r: java.util.Deque f> = $r1;

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<k.r: java.util.Deque g> = $r1;

        return;
    }

    public java.util.concurrent.ExecutorService a()
    {
        java.util.concurrent.TimeUnit $r1;
        java.lang.Throwable $r6;
        java.util.concurrent.SynchronousQueue $r2;
        java.util.concurrent.ThreadPoolExecutor $r5;
        java.util.concurrent.ThreadFactory $r3;
        k.r r0;
        java.util.concurrent.ExecutorService $r4;

        r0 := @this: k.r;

        entermonitor r0;

     label1:
        $r4 = r0.<k.r: java.util.concurrent.ExecutorService d>;

        if $r4 != null goto label2;

        $r5 = new java.util.concurrent.ThreadPoolExecutor;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = new java.util.concurrent.SynchronousQueue;

        specialinvoke $r2.<java.util.concurrent.SynchronousQueue: void <init>()>();

        $r3 = staticinvoke <k.a.e: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>("OkHttp Dispatcher", 0);

        specialinvoke $r5.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(0, 2147483647, 60L, $r1, $r2, $r3);

        r0.<k.r: java.util.concurrent.ExecutorService d> = $r5;

     label2:
        $r4 = r0.<k.r: java.util.concurrent.ExecutorService d>;

     label3:
        exitmonitor r0;

        return $r4;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public final void a(java.util.Deque, java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.lang.Object $r2;
        java.lang.AssertionError $r4;
        java.util.Deque $r1;
        java.lang.Runnable $r3;
        k.r r0;
        boolean $z0;

        r0 := @this: k.r;

        $r1 := @parameter0: java.util.Deque;

        $r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean remove(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<k.r: java.lang.Runnable c>;

        exitmonitor r0;

     label2:
        $z0 = virtualinvoke r0.<k.r: boolean b()>();

        if $z0 != 0 goto label6;

        if $r3 == null goto label6;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        return;

     label3:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Call wasn\'t in-flight!");

        throw $r4;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public void a(k.H$a)
    {
        java.lang.Throwable $r3;
        k.H$a $r2;
        java.util.Deque $r1;
        k.r r0;

        r0 := @this: k.r;

        $r2 := @parameter0: k.H$a;

        entermonitor r0;

     label1:
        $r1 = r0.<k.r: java.util.Deque e>;

        interfaceinvoke $r1.<java.util.Deque: boolean add(java.lang.Object)>($r2);

        exitmonitor r0;

     label2:
        virtualinvoke r0.<k.r: boolean b()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void a(k.H)
    {
        java.lang.Throwable $r3;
        k.H $r2;
        java.util.Deque $r1;
        k.r r0;

        r0 := @this: k.r;

        $r2 := @parameter0: k.H;

        entermonitor r0;

     label1:
        $r1 = r0.<k.r: java.util.Deque g>;

        interfaceinvoke $r1.<java.util.Deque: boolean add(java.lang.Object)>($r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void b(k.H$a)
    {
        k.H$a $r1;
        java.util.Deque $r2;
        k.r r0;

        r0 := @this: k.r;

        $r1 := @parameter0: k.H$a;

        $r2 = r0.<k.r: java.util.Deque f>;

        virtualinvoke r0.<k.r: void a(java.util.Deque,java.lang.Object)>($r2, $r1);

        return;
    }

    public void b(k.H)
    {
        k.H $r1;
        java.util.Deque $r2;
        k.r r0;

        r0 := @this: k.r;

        $r1 := @parameter0: k.H;

        $r2 = r0.<k.r: java.util.Deque g>;

        virtualinvoke r0.<k.r: void a(java.util.Deque,java.lang.Object)>($r2, $r1);

        return;
    }

    public final boolean b()
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r3;
        java.util.Deque $r2;
        k.r r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        k.H$a $r5;
        java.util.concurrent.ExecutorService $r6;
        boolean $z0;

        r0 := @this: k.r;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        entermonitor r0;

     label01:
        $r2 = r0.<k.r: java.util.Deque e>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (k.H$a) $r4;

        $r2 = r0.<k.r: java.util.Deque f>;

        $i0 = interfaceinvoke $r2.<java.util.Deque: int size()>();

        $i1 = r0.<k.r: int a>;

        if $i0 < $i1 goto label03;

        goto label05;

     label03:
        $i0 = virtualinvoke r0.<k.r: int c(k.H$a)>($r5);

        $i1 = r0.<k.r: int b>;

        if $i0 < $i1 goto label04;

        goto label02;

     label04:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r2 = r0.<k.r: java.util.Deque f>;

        interfaceinvoke $r2.<java.util.Deque: boolean add(java.lang.Object)>($r5);

        goto label02;

     label05:
        $i1 = virtualinvoke r0.<k.r: int c()>();

        $i0 = 0;

        if $i1 <= 0 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        exitmonitor r0;

     label08:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

     label09:
        if $i0 >= $i1 goto label10;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (k.H$a) $r4;

        $r6 = virtualinvoke r0.<k.r: java.util.concurrent.ExecutorService a()>();

        virtualinvoke $r5.<k.H$a: void a(java.util.concurrent.ExecutorService)>($r6);

        $i0 = $i0 + 1;

        goto label09;

     label10:
        return $z0;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        goto label14;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int c()
    {
        java.lang.Throwable $r2;
        int $i0, $i1;
        java.util.Deque $r1;
        k.r r0;

        r0 := @this: k.r;

        entermonitor r0;

     label1:
        $r1 = r0.<k.r: java.util.Deque f>;

        $i0 = interfaceinvoke $r1.<java.util.Deque: int size()>();

        $r1 = r0.<k.r: java.util.Deque g>;

        $i1 = interfaceinvoke $r1.<java.util.Deque: int size()>();

     label2:
        $i0 = $i0 + $i1;

        exitmonitor r0;

        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int c(k.H$a)
    {
        java.util.Iterator $r3;
        k.H $r6;
        java.util.Deque $r2;
        k.r r0;
        int $i0;
        java.lang.Object $r4;
        k.H$a $r1, $r5;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: k.r;

        $r1 := @parameter0: k.H$a;

        $r2 = r0.<k.r: java.util.Deque f>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (k.H$a) $r4;

        $r6 = virtualinvoke $r5.<k.H$a: k.H c()>();

        $z0 = $r6.<k.H: boolean f>;

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r7 = virtualinvoke $r5.<k.H$a: java.lang.String d()>();

        $r8 = virtualinvoke $r1.<k.H$a: java.lang.String d()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i0;
    }
}
