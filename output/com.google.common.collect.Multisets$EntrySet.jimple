public abstract class com.google.common.collect.Multisets$EntrySet extends com.google.common.collect.Sets$ImprovedAbstractSet
{

    public void <init>()
    {
        com.google.common.collect.Multisets$EntrySet r0;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        specialinvoke r0.<com.google.common.collect.Sets$ImprovedAbstractSet: void <init>()>();

        return;
    }

    public void clear()
    {
        com.google.common.collect.Multisets$EntrySet r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: com.google.common.collect.Multiset multiset()>();

        interfaceinvoke $r1.<java.util.Collection: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Multisets$EntrySet r0;
        com.google.common.collect.Multiset $r3;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.collect.Multiset$Entry $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label2;

        $r2 = (com.google.common.collect.Multiset$Entry) $r1;

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 > 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: com.google.common.collect.Multiset multiset()>();

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r3.<com.google.common.collect.Multiset: int count(java.lang.Object)>($r1);

        $i1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }

    public abstract com.google.common.collect.Multiset multiset();

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.Multisets$EntrySet r0;
        com.google.common.collect.Multiset $r3;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.Multiset$Entry $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.collect.Multiset$Entry) $r1;

        $r1 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: com.google.common.collect.Multiset multiset()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multiset: boolean setCount(java.lang.Object,int,int)>($r1, $i0, 0);

        return $z0;

     label1:
        return 0;
    }
}
