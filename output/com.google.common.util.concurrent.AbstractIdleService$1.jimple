public class com.google.common.util.concurrent.AbstractIdleService$1 extends java.lang.Object implements java.util.concurrent.Executor
{
    public final com.google.common.util.concurrent.AbstractIdleService this$0;

    public void <init>(com.google.common.util.concurrent.AbstractIdleService)
    {
        com.google.common.util.concurrent.AbstractIdleService$1 r0;
        com.google.common.util.concurrent.AbstractIdleService $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$1;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractIdleService;

        r0.<com.google.common.util.concurrent.AbstractIdleService$1: com.google.common.util.concurrent.AbstractIdleService this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Runnable)
    {
        com.google.common.util.concurrent.AbstractIdleService $r2;
        java.lang.Thread $r6;
        com.google.common.base.Supplier $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.lang.Runnable $r1;
        com.google.common.util.concurrent.AbstractIdleService$1 r0;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService$1;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.google.common.util.concurrent.AbstractIdleService$1: com.google.common.util.concurrent.AbstractIdleService this$0>;

        $r3 = staticinvoke <com.google.common.util.concurrent.AbstractIdleService: com.google.common.base.Supplier access$200(com.google.common.util.concurrent.AbstractIdleService)>($r2);

        $r4 = interfaceinvoke $r3.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.lang.Thread newThread(java.lang.String,java.lang.Runnable)>($r5, $r1);

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }
}
