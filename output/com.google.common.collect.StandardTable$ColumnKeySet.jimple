public class com.google.common.collect.StandardTable$ColumnKeySet extends com.google.common.collect.StandardTable$TableSet
{
    public final com.google.common.collect.StandardTable this$0;

    public void <init>(com.google.common.collect.StandardTable)
    {
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        com.google.common.collect.StandardTable $r1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r1 := @parameter0: com.google.common.collect.StandardTable;

        r0.<com.google.common.collect.StandardTable$ColumnKeySet: com.google.common.collect.StandardTable this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.StandardTable$TableSet: void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1)>($r1, null);

        return;
    }

    public void <init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1)
    {
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        com.google.common.collect.StandardTable$1 $r2;
        com.google.common.collect.StandardTable $r1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r1 := @parameter0: com.google.common.collect.StandardTable;

        $r2 := @parameter1: com.google.common.collect.StandardTable$1;

        specialinvoke r0.<com.google.common.collect.StandardTable$ColumnKeySet: void <init>(com.google.common.collect.StandardTable)>($r1);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        com.google.common.collect.StandardTable $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.StandardTable$ColumnKeySet: com.google.common.collect.StandardTable this$0>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.StandardTable: boolean containsColumn(java.lang.Object)>($r2);

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        java.util.Iterator $r1;
        com.google.common.collect.StandardTable $r2;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnKeySet: com.google.common.collect.StandardTable this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.StandardTable: java.util.Iterator createColumnKeyIterator()>();

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Iterator $r5;
        java.util.Collection $r4;
        java.util.Set $r7;
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        com.google.common.collect.StandardTable $r2;
        java.util.Map $r3;
        java.lang.Object $r1, $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 0;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.google.common.collect.StandardTable$ColumnKeySet: com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map) $r6;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        $z0 = 1;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        goto label2;

     label3:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Iterator $r5, $r8;
        java.util.Collection $r1, $r4;
        java.util.Set $r7;
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        com.google.common.collect.StandardTable $r2;
        java.util.Map $r3;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnKeySet: com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map) $r6;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $z1 = staticinvoke <com.google.common.collect.Iterators: boolean removeAll(java.util.Iterator,java.util.Collection)>($r8, $r1);

        if $z1 == 0 goto label1;

        $z0 = 1;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Iterator $r5;
        java.util.Collection $r1, $r4;
        java.util.Set $r7;
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        com.google.common.collect.StandardTable $r2;
        java.util.Map $r3;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r1 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<com.google.common.collect.StandardTable$ColumnKeySet: com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map) $r6;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean retainAll(java.util.Collection)>($r1);

        if $z1 == 0 goto label1;

        $z0 = 1;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return $z0;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.StandardTable$ColumnKeySet r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.StandardTable$ColumnKeySet;

        $r1 = virtualinvoke r0.<com.google.common.collect.StandardTable$ColumnKeySet: java.util.Iterator iterator()>();

        $i0 = staticinvoke <com.google.common.collect.Iterators: int size(java.util.Iterator)>($r1);

        return $i0;
    }
}
