public class com.google.firebase.abt.AbtExperimentInfo extends java.lang.Object
{
    public static final java.lang.String[] ALL_REQUIRED_KEYS;
    public static final java.lang.String EXPERIMENT_ID_KEY;
    public static final java.lang.String EXPERIMENT_START_TIME_KEY;
    public static final java.lang.String TIME_TO_LIVE_KEY;
    public static final java.lang.String TRIGGER_EVENT_KEY;
    public static final java.lang.String TRIGGER_TIMEOUT_KEY;
    public static final java.lang.String VARIANT_ID_KEY;
    public static final java.text.DateFormat protoTimestampStringParser;
    public final java.lang.String experimentId;
    public final java.util.Date experimentStartTime;
    public final long timeToLiveInMillis;
    public final java.lang.String triggerEventName;
    public final long triggerTimeoutInMillis;
    public final java.lang.String variantId;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r1;
        java.lang.String[] $r0;
        java.util.Locale $r2;

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String VARIANT_ID_KEY> = "variantId";

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String TRIGGER_TIMEOUT_KEY> = "triggerTimeoutMillis";

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String TRIGGER_EVENT_KEY> = "triggerEvent";

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String TIME_TO_LIVE_KEY> = "timeToLiveMillis";

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String EXPERIMENT_START_TIME_KEY> = "experimentStartTime";

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String EXPERIMENT_ID_KEY> = "experimentId";

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "experimentId";

        $r0[1] = "experimentStartTime";

        $r0[2] = "timeToLiveMillis";

        $r0[3] = "triggerTimeoutMillis";

        $r0[4] = "variantId";

        <com.google.firebase.abt.AbtExperimentInfo: java.lang.String[] ALL_REQUIRED_KEYS> = $r0;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ss", $r2);

        <com.google.firebase.abt.AbtExperimentInfo: java.text.DateFormat protoTimestampStringParser> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.util.Date, long, long)
    {
        com.google.firebase.abt.AbtExperimentInfo r0;
        java.util.Date $r4;
        long $l0, $l1;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.Date;

        $l0 := @parameter4: long;

        $l1 := @parameter5: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String experimentId> = $r1;

        r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String variantId> = $r2;

        r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String triggerEventName> = $r3;

        r0.<com.google.firebase.abt.AbtExperimentInfo: java.util.Date experimentStartTime> = $r4;

        r0.<com.google.firebase.abt.AbtExperimentInfo: long triggerTimeoutInMillis> = $l0;

        r0.<com.google.firebase.abt.AbtExperimentInfo: long timeToLiveInMillis> = $l1;

        return;
    }

    public static com.google.firebase.abt.AbtExperimentInfo fromConditionalUserProperty(com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty)
    {
        com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty $r0;
        com.google.firebase.abt.AbtExperimentInfo $r5;
        java.util.Date $r2;
        long $l0, $l1;
        java.lang.Object $r6;
        java.lang.String $r1, $r3, $r4;

        $r0 := @parameter0: com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty;

        $r4 = $r0.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String triggerEventName>;

        if $r4 == null goto label1;

        goto label2;

     label1:
        $r4 = "";

     label2:
        $r5 = new com.google.firebase.abt.AbtExperimentInfo;

        $r1 = $r0.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String name>;

        $r6 = $r0.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.Object value>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r2 = new java.util.Date;

        $l0 = $r0.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long creationTimestamp>;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $l1 = $r0.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long triggerTimeout>;

        $l0 = $r0.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long timeToLive>;

        specialinvoke $r5.<com.google.firebase.abt.AbtExperimentInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Date,long,long)>($r1, $r3, $r4, $r2, $l1, $l0);

        return $r5;
    }

    public static com.google.firebase.abt.AbtExperimentInfo fromMap(java.util.Map)
    {
        com.google.firebase.abt.AbtExperimentInfo $r5;
        java.util.Date $r4;
        long $l0, $l1;
        java.lang.NumberFormatException $r8;
        com.google.firebase.abt.AbtException $r9;
        java.util.Map $r0;
        java.lang.Object $r2;
        java.lang.String $r3, $r6, $r7;
        java.text.ParseException $r10;
        java.text.DateFormat $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <com.google.firebase.abt.AbtExperimentInfo: void validateExperimentInfoMap(java.util.Map)>($r0);

        $r1 = <com.google.firebase.abt.AbtExperimentInfo: java.text.DateFormat protoTimestampStringParser>;

     label01:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("experimentStartTime");

     label02:
        $r3 = (java.lang.String) $r2;

     label03:
        $r4 = virtualinvoke $r1.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r3);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("triggerTimeoutMillis");

     label04:
        $r3 = (java.lang.String) $r2;

     label05:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeToLiveMillis");

     label06:
        $r3 = (java.lang.String) $r2;

     label07:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label08:
        $r5 = new com.google.firebase.abt.AbtExperimentInfo;

     label09:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("experimentId");

     label10:
        $r3 = (java.lang.String) $r2;

     label11:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("variantId");

     label12:
        $r6 = (java.lang.String) $r2;

     label13:
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>("triggerEvent");

     label14:
        if $z0 == 0 goto label17;

     label15:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("triggerEvent");

     label16:
        $r7 = (java.lang.String) $r2;

        goto label18;

     label17:
        $r7 = "";

     label18:
        specialinvoke $r5.<com.google.firebase.abt.AbtExperimentInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Date,long,long)>($r3, $r6, $r7, $r4, $l0, $l1);

     label19:
        return $r5;

     label20:
        $r8 := @caughtexception;

        $r9 = new com.google.firebase.abt.AbtException;

        specialinvoke $r9.<com.google.firebase.abt.AbtException: void <init>(java.lang.String,java.lang.Exception)>("Could not process experiment: one of the durations could not be converted into a long.", $r8);

        throw $r9;

     label21:
        $r10 := @caughtexception;

        $r9 = new com.google.firebase.abt.AbtException;

        specialinvoke $r9.<com.google.firebase.abt.AbtException: void <init>(java.lang.String,java.lang.Exception)>("Could not process experiment: parsing experiment start time failed.", $r10);

        throw $r9;

        catch java.text.ParseException from label01 to label02 with label21;
        catch java.text.ParseException from label03 to label04 with label21;
        catch java.text.ParseException from label05 to label06 with label21;
        catch java.text.ParseException from label07 to label08 with label21;
        catch java.text.ParseException from label09 to label10 with label21;
        catch java.text.ParseException from label11 to label12 with label21;
        catch java.text.ParseException from label13 to label14 with label21;
        catch java.text.ParseException from label15 to label16 with label21;
        catch java.text.ParseException from label18 to label19 with label21;
        catch java.lang.NumberFormatException from label01 to label02 with label20;
        catch java.lang.NumberFormatException from label03 to label04 with label20;
        catch java.lang.NumberFormatException from label05 to label06 with label20;
        catch java.lang.NumberFormatException from label07 to label08 with label20;
        catch java.lang.NumberFormatException from label09 to label10 with label20;
        catch java.lang.NumberFormatException from label11 to label12 with label20;
        catch java.lang.NumberFormatException from label13 to label14 with label20;
        catch java.lang.NumberFormatException from label15 to label16 with label20;
        catch java.lang.NumberFormatException from label18 to label19 with label20;
    }

    public static void validateAbtExperimentInfo(com.google.firebase.abt.AbtExperimentInfo)
    {
        com.google.firebase.abt.AbtExperimentInfo $r1;
        java.util.Map $r0;

        $r1 := @parameter0: com.google.firebase.abt.AbtExperimentInfo;

        $r0 = virtualinvoke $r1.<com.google.firebase.abt.AbtExperimentInfo: java.util.Map toStringMap()>();

        staticinvoke <com.google.firebase.abt.AbtExperimentInfo: void validateExperimentInfoMap(java.util.Map)>($r0);

        return;
    }

    public static void validateExperimentInfoMap(java.util.Map)
    {
        java.lang.Object[] $r5;
        java.lang.String[] $r3;
        java.util.ArrayList $r2;
        com.google.firebase.abt.AbtException $r4;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r1 := @parameter0: java.util.Map;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = <com.google.firebase.abt.AbtExperimentInfo: java.lang.String[] ALL_REQUIRED_KEYS>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r0 = $r3[$i1];

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        return;

     label4:
        $r4 = new com.google.firebase.abt.AbtException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The following keys are missing from the experiment info map: %s", $r5);

        specialinvoke $r4.<com.google.firebase.abt.AbtException: void <init>(java.lang.String)>($r0);

        goto label5;

     label5:
        throw $r4;
    }

    public java.lang.String getExperimentId()
    {
        java.lang.String r1;
        com.google.firebase.abt.AbtExperimentInfo r0;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        r1 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String experimentId>;

        return r1;
    }

    public long getStartTimeInMillisSinceEpoch()
    {
        long $l0;
        com.google.firebase.abt.AbtExperimentInfo r0;
        java.util.Date $r1;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        $r1 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.util.Date experimentStartTime>;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        return $l0;
    }

    public long getTimeToLiveInMillis()
    {
        long l0;
        com.google.firebase.abt.AbtExperimentInfo r0;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        l0 = r0.<com.google.firebase.abt.AbtExperimentInfo: long timeToLiveInMillis>;

        return l0;
    }

    public java.lang.String getTriggerEventName()
    {
        java.lang.String r1;
        com.google.firebase.abt.AbtExperimentInfo r0;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        r1 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String triggerEventName>;

        return r1;
    }

    public long getTriggerTimeoutInMillis()
    {
        long l0;
        com.google.firebase.abt.AbtExperimentInfo r0;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        l0 = r0.<com.google.firebase.abt.AbtExperimentInfo: long triggerTimeoutInMillis>;

        return l0;
    }

    public java.lang.String getVariantId()
    {
        java.lang.String r1;
        com.google.firebase.abt.AbtExperimentInfo r0;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        r1 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String variantId>;

        return r1;
    }

    public com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty toConditionalUserProperty(java.lang.String)
    {
        com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty $r1;
        com.google.firebase.abt.AbtExperimentInfo r0;
        long $l0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        $r2 := @parameter0: java.lang.String;

        $r1 = new com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty;

        specialinvoke $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: void <init>()>();

        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String origin> = $r2;

        $l0 = virtualinvoke r0.<com.google.firebase.abt.AbtExperimentInfo: long getStartTimeInMillisSinceEpoch()>();

        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long creationTimestamp> = $l0;

        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String experimentId>;

        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String name> = $r2;

        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String variantId>;

        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.Object value> = $r2;

        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String triggerEventName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String triggerEventName>;

     label2:
        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String triggerEventName> = $r2;

        $l0 = r0.<com.google.firebase.abt.AbtExperimentInfo: long triggerTimeoutInMillis>;

        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long triggerTimeout> = $l0;

        $l0 = r0.<com.google.firebase.abt.AbtExperimentInfo: long timeToLiveInMillis>;

        $r1.<com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long timeToLive> = $l0;

        return $r1;
    }

    public java.util.Map toStringMap()
    {
        com.google.firebase.abt.AbtExperimentInfo r0;
        java.util.Date $r4;
        java.util.HashMap $r1;
        long $l0;
        java.lang.String $r2;
        java.text.DateFormat $r3;

        r0 := @this: com.google.firebase.abt.AbtExperimentInfo;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String experimentId>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("experimentId", $r2);

        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String variantId>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("variantId", $r2);

        $r2 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.lang.String triggerEventName>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("triggerEvent", $r2);

        $r3 = <com.google.firebase.abt.AbtExperimentInfo: java.text.DateFormat protoTimestampStringParser>;

        $r4 = r0.<com.google.firebase.abt.AbtExperimentInfo: java.util.Date experimentStartTime>;

        $r2 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("experimentStartTime", $r2);

        $l0 = r0.<com.google.firebase.abt.AbtExperimentInfo: long triggerTimeoutInMillis>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("triggerTimeoutMillis", $r2);

        $l0 = r0.<com.google.firebase.abt.AbtExperimentInfo: long timeToLiveInMillis>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeToLiveMillis", $r2);

        return $r1;
    }
}
