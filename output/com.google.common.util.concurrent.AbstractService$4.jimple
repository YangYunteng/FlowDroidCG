public final class com.google.common.util.concurrent.AbstractService$4 extends java.lang.Object implements com.google.common.util.concurrent.ListenerCallQueue$Event
{
    public final com.google.common.util.concurrent.Service$State val$from;

    public void <init>(com.google.common.util.concurrent.Service$State)
    {
        com.google.common.util.concurrent.Service$State $r1;
        com.google.common.util.concurrent.AbstractService$4 r0;

        r0 := @this: com.google.common.util.concurrent.AbstractService$4;

        $r1 := @parameter0: com.google.common.util.concurrent.Service$State;

        r0.<com.google.common.util.concurrent.AbstractService$4: com.google.common.util.concurrent.Service$State val$from> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void call(com.google.common.util.concurrent.Service$Listener)
    {
        com.google.common.util.concurrent.Service$State $r2;
        com.google.common.util.concurrent.Service$Listener $r1;
        com.google.common.util.concurrent.AbstractService$4 r0;

        r0 := @this: com.google.common.util.concurrent.AbstractService$4;

        $r1 := @parameter0: com.google.common.util.concurrent.Service$Listener;

        $r2 = r0.<com.google.common.util.concurrent.AbstractService$4: com.google.common.util.concurrent.Service$State val$from>;

        virtualinvoke $r1.<com.google.common.util.concurrent.Service$Listener: void stopping(com.google.common.util.concurrent.Service$State)>($r2);

        return;
    }

    public volatile void call(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.util.concurrent.Service$Listener $r2;
        com.google.common.util.concurrent.AbstractService$4 r0;

        r0 := @this: com.google.common.util.concurrent.AbstractService$4;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.util.concurrent.Service$Listener) $r1;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService$4: void call(com.google.common.util.concurrent.Service$Listener)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.Service$State $r3;
        com.google.common.util.concurrent.AbstractService$4 r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractService$4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopping({from = ");

        $r3 = r0.<com.google.common.util.concurrent.AbstractService$4: com.google.common.util.concurrent.Service$State val$from>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
