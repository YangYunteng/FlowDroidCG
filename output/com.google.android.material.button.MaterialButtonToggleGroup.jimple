public class com.google.android.material.button.MaterialButtonToggleGroup extends android.widget.LinearLayout
{
    public static final int DEF_STYLE_RES;
    public static final java.lang.String LOG_TAG;
    public int checkedId;
    public final com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker checkedStateTracker;
    public java.lang.Integer[] childOrder;
    public final java.util.Comparator childOrderComparator;
    public final java.util.LinkedHashSet onButtonCheckedListeners;
    public final java.util.List originalCornerData;
    public final com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker pressedStateTracker;
    public boolean selectionRequired;
    public boolean singleSelection;
    public boolean skipCheckedStateTracker;

    static void <clinit>()
    {
        int $i0;

        <com.google.android.material.button.MaterialButtonToggleGroup: java.lang.String LOG_TAG> = "MaterialButtonToggleGroup";

        <com.google.android.material.button.MaterialButtonToggleGroup: int DEF_STYLE_RES> = 0;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_MaterialButtonToggleGroup>;

        <com.google.android.material.button.MaterialButtonToggleGroup: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.content.Context $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int materialButtonToggleGroupStyle>;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r3;
        com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker $r7;
        com.google.android.material.button.MaterialButtonToggleGroup$1 $r10;
        com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker $r8;
        android.content.res.TypedArray $r5;
        java.util.ArrayList $r6;
        android.util.AttributeSet $r4;
        int[] $r1, $r2;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.util.LinkedHashSet $r9;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.button.MaterialButtonToggleGroup: int DEF_STYLE_RES>;

        $r3 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r3, $r4, $i1, $i0);

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r4, $i1);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List originalCornerData> = $r6;

        $r7 = new com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker;

        specialinvoke $r7.<com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker: void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1)>(r0, null);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker checkedStateTracker> = $r7;

        $r8 = new com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker;

        specialinvoke $r8.<com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker: void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1)>(r0, null);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker pressedStateTracker> = $r8;

        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.LinkedHashSet onButtonCheckedListeners> = $r9;

        $r10 = new com.google.android.material.button.MaterialButtonToggleGroup$1;

        specialinvoke $r10.<com.google.android.material.button.MaterialButtonToggleGroup$1: void <init>(com.google.android.material.button.MaterialButtonToggleGroup)>(r0);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.Comparator childOrderComparator> = $r10;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean skipCheckedStateTracker> = 0;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r1 = <com.google.android.material.R$styleable: int[] MaterialButtonToggleGroup>;

        $i0 = <com.google.android.material.button.MaterialButtonToggleGroup: int DEF_STYLE_RES>;

        $r2 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r3, $r4, $r1, $i1, $i0, $r2);

        $i1 = <com.google.android.material.R$styleable: int MaterialButtonToggleGroup_singleSelection>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)>($z0);

        $i1 = <com.google.android.material.R$styleable: int MaterialButtonToggleGroup_checkedButton>;

        $i0 = -1;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, $i0);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId> = $i1;

        $i1 = <com.google.android.material.R$styleable: int MaterialButtonToggleGroup_selectionRequired>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean selectionRequired> = $z0;

        virtualinvoke r0.<android.widget.LinearLayout: void setChildrenDrawingOrderEnabled(boolean)>(1);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <b.i.i.y: void h(android.view.View,int)>(r0, 1);

        return;
    }

    public static int access$200(com.google.android.material.button.MaterialButtonToggleGroup, android.view.View)
    {
        int $i0;
        android.view.View $r0;
        com.google.android.material.button.MaterialButtonToggleGroup $r1;

        $r1 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup;

        $r0 := @parameter1: android.view.View;

        $i0 = specialinvoke $r1.<com.google.android.material.button.MaterialButtonToggleGroup: int getIndexWithinVisibleButtons(android.view.View)>($r0);

        return $i0;
    }

    public static boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup)
    {
        com.google.android.material.button.MaterialButtonToggleGroup $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup;

        z0 = $r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean skipCheckedStateTracker>;

        return z0;
    }

    public static boolean access$400(com.google.android.material.button.MaterialButtonToggleGroup)
    {
        com.google.android.material.button.MaterialButtonToggleGroup $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup;

        z0 = $r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean singleSelection>;

        return z0;
    }

    public static int access$502(com.google.android.material.button.MaterialButtonToggleGroup, int)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup $r0;

        $r0 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter1: int;

        $r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId> = $i0;

        return $i0;
    }

    public static boolean access$600(com.google.android.material.button.MaterialButtonToggleGroup, int, boolean)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z0 = specialinvoke $r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean updateCheckedStates(int,boolean)>($i0, $z0);

        return $z0;
    }

    public static void access$700(com.google.android.material.button.MaterialButtonToggleGroup, int, boolean)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchOnButtonChecked(int,boolean)>($i0, $z0);

        return;
    }

    private void adjustChildMarginsAndUpdateLayout()
    {
        com.google.android.material.button.MaterialButton $r1, $r2;
        int $i0, $i1, $i2, $i3;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.widget.LinearLayout$LayoutParams $r3;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()>();

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $i1 = $i0 + 1;

     label2:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i1 >= $i2 goto label5;

        $r1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i1);

        $i2 = -1;

        $i2 = $i1 + $i2;

        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i2);

        $i2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButton: int getStrokeWidth()>();

        $i3 = virtualinvoke $r2.<com.google.android.material.button.MaterialButton: int getStrokeWidth()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r3 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View)>($r1);

        $i3 = virtualinvoke r0.<android.widget.LinearLayout: int getOrientation()>();

        if $i3 != 0 goto label3;

        staticinvoke <b.i.i.f: void a(android.view.ViewGroup$MarginLayoutParams,int)>($r3, 0);

        $i2 = neg $i2;

        staticinvoke <b.i.i.f: void b(android.view.ViewGroup$MarginLayoutParams,int)>($r3, $i2);

        goto label4;

     label3:
        $r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin> = 0;

        $i2 = neg $i2;

        $r3.<android.widget.LinearLayout$LayoutParams: int topMargin> = $i2;

     label4:
        virtualinvoke $r1.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        $i1 = $i1 + 1;

        goto label2;

     label5:
        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void resetChildMargins(int)>($i0);

        return;
    }

    private android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r1;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r2;
        android.widget.LinearLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r1 instanceof android.widget.LinearLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r3 = (android.widget.LinearLayout$LayoutParams) $r1;

        return $r3;

     label1:
        $r3 = new android.widget.LinearLayout$LayoutParams;

        $i0 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        $i1 = $r1.<android.view.ViewGroup$LayoutParams: int height>;

        specialinvoke $r3.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        return $r3;
    }

    private void checkForced(int)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedStateForView(int,boolean)>($i0, 1);

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean updateCheckedStates(int,boolean)>($i0, 1);

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)>($i0);

        return;
    }

    private void dispatchOnButtonChecked(int, boolean)
    {
        java.util.Iterator $r2;
        com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener $r4;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.lang.Object $r3;
        java.util.LinkedHashSet $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.LinkedHashSet onButtonCheckedListeners>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) $r3;

        interfaceinvoke $r4.<com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener: void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean)>(r0, $i0, $z0);

        goto label1;

     label2:
        return;
    }

    private com.google.android.material.button.MaterialButton getChildButton(int)
    {
        com.google.android.material.button.MaterialButton $r2;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $r2 = (com.google.android.material.button.MaterialButton) $r1;

        return $r2;
    }

    private int getFirstVisibleChildIndex()
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean isChildVisible(int)>($i1);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = -1;

        return $i0;
    }

    private int getIndexWithinVisibleButtons(android.view.View)
    {
        int $i0, $i1, $i2;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof com.google.android.material.button.MaterialButton;

        if $z0 != 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $i0 = 0;

        $i1 = 0;

     label2:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i2 goto label5;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        if $r2 != $r1 goto label3;

        return $i1;

     label3:
        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r2 instanceof com.google.android.material.button.MaterialButton;

        if $z0 == 0 goto label4;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean isChildVisible(int)>($i0);

        if $z0 == 0 goto label4;

        $i1 = $i1 + 1;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $i0 = -1;

        return $i0;
    }

    private int getLastVisibleChildIndex()
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label3;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean isChildVisible(int)>($i0);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label3:
        $i0 = -1;

        return $i0;
    }

    private com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int, int, int)
    {
        java.util.List $r1;
        com.google.android.material.button.MaterialButtonToggleGroup$CornerData $r3;
        int $i0, $i1, $i2, $i3;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List originalCornerData>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (com.google.android.material.button.MaterialButtonToggleGroup$CornerData) $r2;

        if $i0 != $i1 goto label1;

        return $r3;

     label1:
        $i3 = virtualinvoke r0.<android.widget.LinearLayout: int getOrientation()>();

        if $i3 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $i2 != $i0 goto label5;

        if $z0 == 0 goto label4;

        $r3 = staticinvoke <com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View)>($r3, r0);

        return $r3;

     label4:
        $r3 = staticinvoke <com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>($r3);

        return $r3;

     label5:
        if $i2 != $i1 goto label7;

        if $z0 == 0 goto label6;

        $r3 = staticinvoke <com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View)>($r3, r0);

        return $r3;

     label6:
        $r3 = staticinvoke <com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>($r3);

        return $r3;

     label7:
        return null;
    }

    private int getVisibleButtonCount()
    {
        int $i0, $i1, $i2;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 = 0;

        $i1 = 0;

     label1:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i2 goto label3;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r1 instanceof com.google.android.material.button.MaterialButton;

        if $z0 == 0 goto label2;

        $z0 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean isChildVisible(int)>($i0);

        if $z0 == 0 goto label2;

        $i1 = $i1 + 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i1;
    }

    private boolean isChildVisible(int)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void resetChildMargins(int)
    {
        com.google.android.material.button.MaterialButton $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.widget.LinearLayout$LayoutParams $r3;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i1 == 0 goto label3;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i0);

        $r2 = virtualinvoke $r1.<android.widget.Button: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getOrientation()>();

        if $i0 != 1 goto label2;

        $r3.<android.widget.LinearLayout$LayoutParams: int topMargin> = 0;

        $r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin> = 0;

        return;

     label2:
        staticinvoke <b.i.i.f: void a(android.view.ViewGroup$MarginLayoutParams,int)>($r3, 0);

        staticinvoke <b.i.i.f: void b(android.view.ViewGroup$MarginLayoutParams,int)>($r3, 0);

        $r3.<android.widget.LinearLayout$LayoutParams: int leftMargin> = 0;

        $r3.<android.widget.LinearLayout$LayoutParams: int rightMargin> = 0;

     label3:
        return;
    }

    private void setCheckedId(int)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId> = $i0;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchOnButtonChecked(int,boolean)>($i0, 1);

        return;
    }

    private void setCheckedStateForView(int, boolean)
    {
        com.google.android.material.button.MaterialButton $r2;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View findViewById(int)>($i0);

        $z1 = $r1 instanceof com.google.android.material.button.MaterialButton;

        if $z1 == 0 goto label1;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean skipCheckedStateTracker> = 1;

        $r2 = (com.google.android.material.button.MaterialButton) $r1;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButton: void setChecked(boolean)>($z0);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean skipCheckedStateTracker> = 0;

     label1:
        return;
    }

    private void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
    {
        com.google.android.material.button.MaterialButton $r1;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: com.google.android.material.button.MaterialButton;

        $i0 = virtualinvoke $r1.<android.widget.Button: int getId()>();

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $i0 = staticinvoke <b.i.i.y: int b()>();

        virtualinvoke $r1.<android.widget.Button: void setId(int)>($i0);

     label1:
        return;
    }

    private void setupButtonChild(com.google.android.material.button.MaterialButton)
    {
        com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker $r3;
        com.google.android.material.button.MaterialButton $r1;
        android.text.TextUtils$TruncateAt $r2;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker $r4;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: com.google.android.material.button.MaterialButton;

        virtualinvoke $r1.<android.widget.Button: void setMaxLines(int)>(1);

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r1.<android.widget.Button: void setEllipsize(android.text.TextUtils$TruncateAt)>($r2);

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setCheckable(boolean)>(1);

        $r3 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker checkedStateTracker>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)>($r3);

        $r4 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker pressedStateTracker>;

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)>($r4);

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)>(1);

        return;
    }

    public static void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder, com.google.android.material.button.MaterialButtonToggleGroup$CornerData)
    {
        com.google.android.material.shape.CornerSize $r2;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r0;
        com.google.android.material.button.MaterialButtonToggleGroup$CornerData $r1;

        $r0 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel$Builder;

        $r1 := @parameter1: com.google.android.material.button.MaterialButtonToggleGroup$CornerData;

        if $r1 != null goto label1;

        virtualinvoke $r0.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)>(0.0F);

        return;

     label1:
        $r2 = $r1.<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.shape.CornerSize topLeft>;

        $r0 = virtualinvoke $r0.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)>($r2);

        $r2 = $r1.<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.shape.CornerSize bottomLeft>;

        $r0 = virtualinvoke $r0.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)>($r2);

        $r2 = $r1.<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.shape.CornerSize topRight>;

        $r0 = virtualinvoke $r0.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)>($r2);

        $r2 = $r1.<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.shape.CornerSize bottomRight>;

        virtualinvoke $r0.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)>($r2);

        return;
    }

    private boolean updateCheckedStates(int, boolean)
    {
        java.util.Iterator $r3;
        java.lang.Integer $r2;
        java.util.List $r1;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()>();

        $z1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean selectionRequired>;

        if $z1 == 0 goto label1;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedStateForView(int,boolean)>($i0, 1);

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId> = $i0;

        return 0;

     label1:
        if $z0 == 0 goto label3;

        $z0 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean singleSelection>;

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>($r2);

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedStateForView(int,boolean)>($i0, 0);

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchOnButtonChecked(int,boolean)>($i0, 0);

        goto label2;

     label3:
        return 1;
    }

    private void updateChildOrder()
    {
        java.lang.Object[] $r7;
        java.util.Collection $r5;
        java.lang.Integer $r4;
        java.util.TreeMap $r1;
        com.google.android.material.button.MaterialButton $r3;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.util.Comparator $r2;
        java.lang.Integer[] $r6;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 = new java.util.TreeMap;

        $r2 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.Comparator childOrderComparator>;

        specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Comparator)>($r2);

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Collection values()>();

        $r6 = newarray (java.lang.Integer)[0];

        $r7 = interfaceinvoke $r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (java.lang.Integer[]) $r7;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.lang.Integer[] childOrder> = $r6;

        return;
    }

    public void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener)
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener $r1;
        java.util.LinkedHashSet $r2;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener;

        $r2 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.LinkedHashSet onButtonCheckedListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.google.android.material.button.MaterialButtonToggleGroup$2 $r12;
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.shape.ShapeAppearanceModel $r5;
        java.util.List $r6;
        com.google.android.material.button.MaterialButton $r4;
        com.google.android.material.button.MaterialButtonToggleGroup$CornerData $r7;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1;
        com.google.android.material.shape.CornerSize $r8, $r9, $r10, $r11;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof com.google.android.material.button.MaterialButton;

        if $z0 != 0 goto label1;

        $r3 = <com.google.android.material.button.MaterialButtonToggleGroup: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Child views must be of type MaterialButton.");

        return;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        $r4 = (com.google.android.material.button.MaterialButton) $r1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)>($r4);

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)>($r4);

        $z0 = virtualinvoke $r4.<com.google.android.material.button.MaterialButton: boolean isChecked()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r4.<android.widget.Button: int getId()>();

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean updateCheckedStates(int,boolean)>($i0, 1);

        $i0 = virtualinvoke $r4.<android.widget.Button: int getId()>();

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)>($i0);

     label2:
        $r5 = virtualinvoke $r4.<com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>();

        $r6 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List originalCornerData>;

        $r7 = new com.google.android.material.button.MaterialButtonToggleGroup$CornerData;

        $r8 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $r9 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomLeftCornerSize()>();

        $r10 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopRightCornerSize()>();

        $r11 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomRightCornerSize()>();

        specialinvoke $r7.<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize)>($r8, $r9, $r10, $r11);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r12 = new com.google.android.material.button.MaterialButtonToggleGroup$2;

        specialinvoke $r12.<com.google.android.material.button.MaterialButtonToggleGroup$2: void <init>(com.google.android.material.button.MaterialButtonToggleGroup)>(r0);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.a)>($r4, $r12);

        return;
    }

    public void check(int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void checkForced(int)>($i0);

        return;
    }

    public void clearChecked()
    {
        com.google.android.material.button.MaterialButton $r1;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean skipCheckedStateTracker> = 1;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label2;

        $r1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i0);

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setChecked(boolean)>(0);

        $i1 = virtualinvoke $r1.<android.widget.Button: int getId()>();

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchOnButtonChecked(int,boolean)>($i1, 0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean skipCheckedStateTracker> = 0;

        $i0 = -1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)>($i0);

        return;
    }

    public void clearOnButtonCheckedListeners()
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.LinkedHashSet onButtonCheckedListeners>;

        virtualinvoke $r1.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public void dispatchDraw(android.graphics.Canvas)
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void updateChildOrder()>();

        specialinvoke r0.<android.widget.LinearLayout: void dispatchDraw(android.graphics.Canvas)>($r1);

        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.lang.Class $r2;
        java.lang.String $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r2 = class "Lcom/google/android/material/button/MaterialButtonToggleGroup;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }

    public int getCheckedButtonId()
    {
        int i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $z0 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean singleSelection>;

        if $z0 == 0 goto label1;

        i0 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId>;

        return i0;

     label1:
        i0 = -1;

        return i0;
    }

    public java.util.List getCheckedButtonIds()
    {
        com.google.android.material.button.MaterialButton $r2;
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.lang.Integer $r3;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r2 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i0);

        $z0 = virtualinvoke $r2.<com.google.android.material.button.MaterialButton: boolean isChecked()>();

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke $r2.<android.widget.Button: int getId()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public int getChildDrawingOrder(int, int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        java.lang.String $r3;
        java.lang.Integer $r2;
        java.lang.Integer[] $r1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.lang.Integer[] childOrder>;

        if $r1 == null goto label2;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label1;

        goto label2;

     label1:
        $r2 = $r1[$i0];

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i1;

     label2:
        $r3 = <com.google.android.material.button.MaterialButtonToggleGroup: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "Child order wasn\'t updated");

        return $i0;
    }

    public boolean isSelectionRequired()
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        z0 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean selectionRequired>;

        return z0;
    }

    public boolean isSingleSelection()
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        z0 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean singleSelection>;

        return z0;
    }

    public void onFinishInflate()
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        specialinvoke r0.<android.widget.LinearLayout: void onFinishInflate()>();

        $i0 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId>;

        $i1 = -1;

        if $i0 == $i1 goto label1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void checkForced(int)>($i0);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        byte $b1;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        b.i.i.a.b $r2;
        b.i.i.a.b$b $r3;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r2 = staticinvoke <b.i.i.a.b: b.i.i.a.b a(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $i0 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()>();

        $z0 = virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean isSingleSelection()>();

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        $r3 = staticinvoke <b.i.i.a.b$b: b.i.i.a.b$b a(int,int,boolean,int)>(1, $i0, 0, $b1);

        virtualinvoke $r2.<b.i.i.a.b: void a(java.lang.Object)>($r3);

        return;
    }

    public void onMeasure(int, int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void updateChildShapes()>();

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void adjustChildMarginsAndUpdateLayout()>();

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    public void onViewRemoved(android.view.View)
    {
        com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker $r3;
        java.util.List $r4;
        com.google.android.material.button.MaterialButton $r2;
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.LinearLayout: void onViewRemoved(android.view.View)>($r1);

        $z0 = $r1 instanceof com.google.android.material.button.MaterialButton;

        if $z0 == 0 goto label1;

        $r2 = (com.google.android.material.button.MaterialButton) $r1;

        $r3 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker checkedStateTracker>;

        virtualinvoke $r2.<com.google.android.material.button.MaterialButton: void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)>($r3);

        virtualinvoke $r2.<com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)>(null);

     label1:
        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int indexOfChild(android.view.View)>($r1);

        if $i0 < 0 goto label2;

        $r4 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List originalCornerData>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>($i0);

     label2:
        virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void updateChildShapes()>();

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void adjustChildMarginsAndUpdateLayout()>();

        return;
    }

    public void removeOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener)
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener $r1;
        java.util.LinkedHashSet $r2;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $r1 := @parameter0: com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener;

        $r2 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: java.util.LinkedHashSet onButtonCheckedListeners>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void setSelectionRequired(boolean)
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean selectionRequired> = $z0;

        return;
    }

    public void setSingleSelection(int)
    {
        int $i0;
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)>($z0);

        return;
    }

    public void setSingleSelection(boolean)
    {
        com.google.android.material.button.MaterialButtonToggleGroup r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean singleSelection>;

        if $z1 == $z0 goto label1;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean singleSelection> = $z0;

        virtualinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void clearChecked()>();

     label1:
        return;
    }

    public void uncheck(int)
    {
        int $i0, $i1;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedStateForView(int,boolean)>($i0, 0);

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: boolean updateCheckedStates(int,boolean)>($i0, 0);

        $i1 = -1;

        r0.<com.google.android.material.button.MaterialButtonToggleGroup: int checkedId> = $i1;

        specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchOnButtonChecked(int,boolean)>($i0, 0);

        return;
    }

    public void updateChildShapes()
    {
        com.google.android.material.shape.ShapeAppearanceModel $r2;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r3;
        com.google.android.material.button.MaterialButton $r1;
        com.google.android.material.button.MaterialButtonToggleGroup$CornerData $r4;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.android.material.button.MaterialButtonToggleGroup r0;

        r0 := @this: com.google.android.material.button.MaterialButtonToggleGroup;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()>();

        $i2 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()>();

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label4;

        $r1 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>($i3);

        $i4 = virtualinvoke $r1.<android.widget.Button: int getVisibility()>();

        if $i4 != 8 goto label2;

        goto label3;

     label2:
        $r2 = virtualinvoke $r1.<com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>();

        $r3 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()>();

        $r4 = specialinvoke r0.<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int)>($i3, $i1, $i2);

        staticinvoke <com.google.android.material.button.MaterialButtonToggleGroup: void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>($r3, $r4);

        $r2 = virtualinvoke $r3.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        virtualinvoke $r1.<com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>($r2);

     label3:
        $i3 = $i3 + 1;

        goto label1;

     label4:
        return;
    }
}
