public class com.google.android.material.shape.ShapePath extends java.lang.Object
{
    public static final float ANGLE_LEFT;
    public static final float ANGLE_UP;
    public boolean containsIncompatibleShadowOp;
    public float currentShadowAngle;
    public float endShadowAngle;
    public float endX;
    public float endY;
    public final java.util.List operations;
    public final java.util.List shadowCompatOperations;
    public float startX;
    public float startY;

    public void <init>()
    {
        com.google.android.material.shape.ShapePath r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.shape.ShapePath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.shape.ShapePath: java.util.List operations> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations> = $r1;

        virtualinvoke r0.<com.google.android.material.shape.ShapePath: void reset(float,float)>(0.0F, 0.0F);

        return;
    }

    public void <init>(float, float)
    {
        float $f0, $f1;
        com.google.android.material.shape.ShapePath r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.shape.ShapePath: java.util.List operations> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations> = $r1;

        virtualinvoke r0.<com.google.android.material.shape.ShapePath: void reset(float,float)>($f0, $f1);

        return;
    }

    private void addConnectingShadowIfNecessary(float)
    {
        com.google.android.material.shape.ShapePath$PathArcOperation $r1, $r3;
        com.google.android.material.shape.ShapePath$ArcShadowOperation $r4;
        java.util.List $r2;
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        $f1 = specialinvoke r0.<com.google.android.material.shape.ShapePath: float getCurrentShadowAngle()>();

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label1;

        return;

     label1:
        $f1 = specialinvoke r0.<com.google.android.material.shape.ShapePath: float getCurrentShadowAngle()>();

        $f1 = $f0 - $f1;

        $f1 = $f1 + 360.0F;

        $f1 = $f1 % 360.0F;

        $b0 = $f1 cmpl 180.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return;

     label2:
        $r3 = new com.google.android.material.shape.ShapePath$PathArcOperation;

        $r1 = $r3;

        $f2 = virtualinvoke r0.<com.google.android.material.shape.ShapePath: float getEndX()>();

        $f3 = virtualinvoke r0.<com.google.android.material.shape.ShapePath: float getEndY()>();

        $f4 = virtualinvoke r0.<com.google.android.material.shape.ShapePath: float getEndX()>();

        $f5 = virtualinvoke r0.<com.google.android.material.shape.ShapePath: float getEndY()>();

        specialinvoke $r3.<com.google.android.material.shape.ShapePath$PathArcOperation: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);

        $f2 = specialinvoke r0.<com.google.android.material.shape.ShapePath: float getCurrentShadowAngle()>();

        staticinvoke <com.google.android.material.shape.ShapePath$PathArcOperation: void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)>($r1, $f2);

        staticinvoke <com.google.android.material.shape.ShapePath$PathArcOperation: void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)>($r1, $f1);

        $r2 = r0.<com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations>;

        $r4 = new com.google.android.material.shape.ShapePath$ArcShadowOperation;

        specialinvoke $r4.<com.google.android.material.shape.ShapePath$ArcShadowOperation: void <init>(com.google.android.material.shape.ShapePath$PathArcOperation)>($r1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setCurrentShadowAngle(float)>($f0);

        return;
    }

    private void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation, float, float)
    {
        java.util.List $r2;
        float $f0, $f1;
        com.google.android.material.shape.ShapePath r0;
        com.google.android.material.shape.ShapePath$ShadowCompatOperation $r1;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $r1 := @parameter0: com.google.android.material.shape.ShapePath$ShadowCompatOperation;

        $f1 := @parameter1: float;

        $f0 := @parameter2: float;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void addConnectingShadowIfNecessary(float)>($f1);

        $r2 = r0.<com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setCurrentShadowAngle(float)>($f0);

        return;
    }

    private float getCurrentShadowAngle()
    {
        float f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        f0 = r0.<com.google.android.material.shape.ShapePath: float currentShadowAngle>;

        return f0;
    }

    private float getEndShadowAngle()
    {
        float f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        f0 = r0.<com.google.android.material.shape.ShapePath: float endShadowAngle>;

        return f0;
    }

    private void setCurrentShadowAngle(float)
    {
        float $f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.shape.ShapePath: float currentShadowAngle> = $f0;

        return;
    }

    private void setEndShadowAngle(float)
    {
        float $f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.shape.ShapePath: float endShadowAngle> = $f0;

        return;
    }

    private void setEndX(float)
    {
        float $f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.shape.ShapePath: float endX> = $f0;

        return;
    }

    private void setEndY(float)
    {
        float $f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.shape.ShapePath: float endY> = $f0;

        return;
    }

    private void setStartX(float)
    {
        float $f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.shape.ShapePath: float startX> = $f0;

        return;
    }

    private void setStartY(float)
    {
        float $f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        r0.<com.google.android.material.shape.ShapePath: float startY> = $f0;

        return;
    }

    public void addArc(float, float, float, float, float, float)
    {
        com.google.android.material.shape.ShapePath$ArcShadowOperation $r3, $r5;
        byte $b0;
        int $i1;
        com.google.android.material.shape.ShapePath r0;
        boolean $z0;
        double $d0, $d1;
        com.google.android.material.shape.ShapePath$PathArcOperation $r1, $r4;
        java.util.List $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f4 := @parameter4: float;

        $f5 := @parameter5: float;

        $r4 = new com.google.android.material.shape.ShapePath$PathArcOperation;

        $r1 = $r4;

        specialinvoke $r4.<com.google.android.material.shape.ShapePath$PathArcOperation: void <init>(float,float,float,float)>($f1, $f0, $f2, $f3);

        staticinvoke <com.google.android.material.shape.ShapePath$PathArcOperation: void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)>($r1, $f4);

        staticinvoke <com.google.android.material.shape.ShapePath$PathArcOperation: void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)>($r1, $f5);

        $r2 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r5 = new com.google.android.material.shape.ShapePath$ArcShadowOperation;

        $r3 = $r5;

        specialinvoke $r5.<com.google.android.material.shape.ShapePath$ArcShadowOperation: void <init>(com.google.android.material.shape.ShapePath$PathArcOperation)>($r1);

        $f6 = $f4 + $f5;

        $b0 = $f5 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $f4 = $f4 + 180.0F;

        $f4 = $f4 % 360.0F;

     label3:
        if $z0 == 0 goto label4;

        $f5 = 180.0F + $f6;

        $f5 = $f5 % 360.0F;

        goto label5;

     label4:
        $f5 = $f6;

     label5:
        specialinvoke r0.<com.google.android.material.shape.ShapePath: void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)>($r3, $f4, $f5);

        $f4 = $f1 + $f2;

        $f4 = $f4 * 0.5F;

        $f1 = $f2 - $f1;

        $f1 = $f1 / 2.0F;

        $d0 = (double) $f6;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $f2 = (float) $d1;

        $f1 = $f1 * $f2;

        $f1 = $f4 + $f1;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndX(float)>($f1);

        $f1 = $f0 + $f3;

        $f1 = $f1 * 0.5F;

        $f0 = $f3 - $f0;

        $f0 = $f0 / 2.0F;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f2 = (float) $d0;

        $f0 = $f0 * $f2;

        $f1 = $f1 + $f0;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndY(float)>($f1);

        return;
    }

    public void applyToPath(android.graphics.Matrix, android.graphics.Path)
    {
        android.graphics.Path $r2;
        java.util.List $r3;
        int $i0, $i1;
        com.google.android.material.shape.ShapePath$PathOperation $r5;
        com.google.android.material.shape.ShapePath r0;
        java.lang.Object $r4;
        android.graphics.Matrix $r1;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $r1 := @parameter0: android.graphics.Matrix;

        $r2 := @parameter1: android.graphics.Path;

        $r3 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (com.google.android.material.shape.ShapePath$PathOperation) $r4;

        virtualinvoke $r5.<com.google.android.material.shape.ShapePath$PathOperation: void applyToPath(android.graphics.Matrix,android.graphics.Path)>($r1, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean containsIncompatibleShadowOp()
    {
        com.google.android.material.shape.ShapePath r0;
        boolean z0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        z0 = r0.<com.google.android.material.shape.ShapePath: boolean containsIncompatibleShadowOp>;

        return z0;
    }

    public com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix)
    {
        java.util.List $r3;
        com.google.android.material.shape.ShapePath$1 $r4;
        float $f0;
        com.google.android.material.shape.ShapePath r0;
        android.graphics.Matrix $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $r1 := @parameter0: android.graphics.Matrix;

        $f0 = specialinvoke r0.<com.google.android.material.shape.ShapePath: float getEndShadowAngle()>();

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void addConnectingShadowIfNecessary(float)>($f0);

        $r2 = new java.util.ArrayList;

        $r3 = r0.<com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = new com.google.android.material.shape.ShapePath$1;

        specialinvoke $r4.<com.google.android.material.shape.ShapePath$1: void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix)>(r0, $r2, $r1);

        return $r4;
    }

    public void cubicToPoint(float, float, float, float, float, float)
    {
        com.google.android.material.shape.ShapePath$PathCubicOperation $r1;
        java.util.List $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f5 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $f4 := @parameter5: float;

        $r1 = new com.google.android.material.shape.ShapePath$PathCubicOperation;

        specialinvoke $r1.<com.google.android.material.shape.ShapePath$PathCubicOperation: void <init>(float,float,float,float,float,float)>($f5, $f0, $f1, $f2, $f3, $f4);

        $r2 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        r0.<com.google.android.material.shape.ShapePath: boolean containsIncompatibleShadowOp> = 1;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndX(float)>($f3);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndY(float)>($f4);

        return;
    }

    public float getEndX()
    {
        float f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        f0 = r0.<com.google.android.material.shape.ShapePath: float endX>;

        return f0;
    }

    public float getEndY()
    {
        float f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        f0 = r0.<com.google.android.material.shape.ShapePath: float endY>;

        return f0;
    }

    public float getStartX()
    {
        float f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        f0 = r0.<com.google.android.material.shape.ShapePath: float startX>;

        return f0;
    }

    public float getStartY()
    {
        float f0;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        f0 = r0.<com.google.android.material.shape.ShapePath: float startY>;

        return f0;
    }

    public void lineTo(float, float)
    {
        java.util.List $r2;
        float $f0, $f1, $f2, $f3;
        com.google.android.material.shape.ShapePath r0;
        com.google.android.material.shape.ShapePath$PathLineOperation $r1;
        com.google.android.material.shape.ShapePath$LineShadowOperation $r3;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = new com.google.android.material.shape.ShapePath$PathLineOperation;

        specialinvoke $r1.<com.google.android.material.shape.ShapePath$PathLineOperation: void <init>()>();

        staticinvoke <com.google.android.material.shape.ShapePath$PathLineOperation: float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)>($r1, $f0);

        staticinvoke <com.google.android.material.shape.ShapePath$PathLineOperation: float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)>($r1, $f1);

        $r2 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = new com.google.android.material.shape.ShapePath$LineShadowOperation;

        $f2 = virtualinvoke r0.<com.google.android.material.shape.ShapePath: float getEndX()>();

        $f3 = virtualinvoke r0.<com.google.android.material.shape.ShapePath: float getEndY()>();

        specialinvoke $r3.<com.google.android.material.shape.ShapePath$LineShadowOperation: void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float)>($r1, $f2, $f3);

        $f2 = virtualinvoke $r3.<com.google.android.material.shape.ShapePath$LineShadowOperation: float getAngle()>();

        $f2 = $f2 + 270.0F;

        $f3 = virtualinvoke $r3.<com.google.android.material.shape.ShapePath$LineShadowOperation: float getAngle()>();

        $f3 = $f3 + 270.0F;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)>($r3, $f2, $f3);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndX(float)>($f0);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndY(float)>($f1);

        return;
    }

    public void quadToPoint(float, float, float, float)
    {
        java.util.List $r2;
        com.google.android.material.shape.ShapePath$PathQuadOperation $r1;
        float $f0, $f1, $f2, $f3;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f3 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $r1 = new com.google.android.material.shape.ShapePath$PathQuadOperation;

        specialinvoke $r1.<com.google.android.material.shape.ShapePath$PathQuadOperation: void <init>()>();

        staticinvoke <com.google.android.material.shape.ShapePath$PathQuadOperation: void access$200(com.google.android.material.shape.ShapePath$PathQuadOperation,float)>($r1, $f3);

        staticinvoke <com.google.android.material.shape.ShapePath$PathQuadOperation: void access$300(com.google.android.material.shape.ShapePath$PathQuadOperation,float)>($r1, $f0);

        staticinvoke <com.google.android.material.shape.ShapePath$PathQuadOperation: void access$400(com.google.android.material.shape.ShapePath$PathQuadOperation,float)>($r1, $f1);

        staticinvoke <com.google.android.material.shape.ShapePath$PathQuadOperation: void access$500(com.google.android.material.shape.ShapePath$PathQuadOperation,float)>($r1, $f2);

        $r2 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        r0.<com.google.android.material.shape.ShapePath: boolean containsIncompatibleShadowOp> = 1;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndX(float)>($f1);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndY(float)>($f2);

        return;
    }

    public void reset(float, float)
    {
        float $f0, $f1;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        virtualinvoke r0.<com.google.android.material.shape.ShapePath: void reset(float,float,float,float)>($f0, $f1, 270.0F, 0.0F);

        return;
    }

    public void reset(float, float, float, float)
    {
        java.util.List $r1;
        float $f0, $f1, $f2, $f3;
        com.google.android.material.shape.ShapePath r0;

        r0 := @this: com.google.android.material.shape.ShapePath;

        $f2 := @parameter0: float;

        $f0 := @parameter1: float;

        $f3 := @parameter2: float;

        $f1 := @parameter3: float;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setStartX(float)>($f2);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setStartY(float)>($f0);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndX(float)>($f2);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndY(float)>($f0);

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setCurrentShadowAngle(float)>($f3);

        $f2 = $f3 + $f1;

        $f2 = $f2 % 360.0F;

        specialinvoke r0.<com.google.android.material.shape.ShapePath: void setEndShadowAngle(float)>($f2);

        $r1 = r0.<com.google.android.material.shape.ShapePath: java.util.List operations>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r1 = r0.<com.google.android.material.shape.ShapePath: java.util.List shadowCompatOperations>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r0.<com.google.android.material.shape.ShapePath: boolean containsIncompatibleShadowOp> = 0;

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.material.shape.ShapePath: float ANGLE_UP> = 270.0F;

        <com.google.android.material.shape.ShapePath: float ANGLE_LEFT> = 180.0F;

        return;
    }
}
