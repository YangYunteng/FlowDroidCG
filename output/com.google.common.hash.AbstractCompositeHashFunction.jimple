public abstract class com.google.common.hash.AbstractCompositeHashFunction extends com.google.common.hash.AbstractHashFunction
{
    public static final long serialVersionUID;
    public final com.google.common.hash.HashFunction[] functions;

    public transient void <init>(com.google.common.hash.HashFunction[])
    {
        int $i0, $i1;
        com.google.common.hash.HashFunction[] $r1;
        com.google.common.hash.AbstractCompositeHashFunction r0;
        com.google.common.hash.HashFunction $r2;

        r0 := @this: com.google.common.hash.AbstractCompositeHashFunction;

        $r1 := @parameter0: com.google.common.hash.HashFunction[];

        specialinvoke r0.<com.google.common.hash.AbstractHashFunction: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.HashFunction[] functions> = $r1;

        return;
    }

    private com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])
    {
        com.google.common.hash.AbstractCompositeHashFunction$1 $r2;
        com.google.common.hash.AbstractCompositeHashFunction r0;
        com.google.common.hash.Hasher[] $r1;

        r0 := @this: com.google.common.hash.AbstractCompositeHashFunction;

        $r1 := @parameter0: com.google.common.hash.Hasher[];

        $r2 = new com.google.common.hash.AbstractCompositeHashFunction$1;

        specialinvoke $r2.<com.google.common.hash.AbstractCompositeHashFunction$1: void <init>(com.google.common.hash.AbstractCompositeHashFunction,com.google.common.hash.Hasher[])>(r0, $r1);

        return $r2;
    }

    public abstract com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]);

    public com.google.common.hash.Hasher newHasher()
    {
        int $i0, $i1;
        com.google.common.hash.HashFunction[] $r1;
        com.google.common.hash.AbstractCompositeHashFunction r0;
        com.google.common.hash.Hasher[] $r2;
        com.google.common.hash.HashFunction $r3;
        com.google.common.hash.Hasher $r4;

        r0 := @this: com.google.common.hash.AbstractCompositeHashFunction;

        $r1 = r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.HashFunction[] functions>;

        $i0 = lengthof $r1;

        $r2 = newarray (com.google.common.hash.Hasher)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r1 = r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.HashFunction[] functions>;

        $r3 = $r1[$i0];

        $r4 = interfaceinvoke $r3.<com.google.common.hash.HashFunction: com.google.common.hash.Hasher newHasher()>();

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r2);

        return $r4;
    }

    public com.google.common.hash.Hasher newHasher(int)
    {
        com.google.common.hash.HashFunction[] $r1;
        com.google.common.hash.AbstractCompositeHashFunction r0;
        com.google.common.hash.Hasher[] $r2;
        int $i0, $i1, $i2;
        com.google.common.hash.HashFunction $r3;
        com.google.common.hash.Hasher $r4;
        boolean $z0;

        r0 := @this: com.google.common.hash.AbstractCompositeHashFunction;

        $i0 := @parameter0: int;

        $i1 = 0;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r1 = r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.HashFunction[] functions>;

        $i2 = lengthof $r1;

        $r2 = newarray (com.google.common.hash.Hasher)[$i2];

     label3:
        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label4;

        $r1 = r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.HashFunction[] functions>;

        $r3 = $r1[$i1];

        $r4 = interfaceinvoke $r3.<com.google.common.hash.HashFunction: com.google.common.hash.Hasher newHasher(int)>($i0);

        $r2[$i1] = $r4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r2);

        return $r4;
    }
}
