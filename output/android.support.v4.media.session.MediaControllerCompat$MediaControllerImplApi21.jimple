public class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 extends java.lang.Object implements android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
{
    public java.util.HashMap mCallbackMap;
    public final java.lang.Object mControllerObj;
    public final java.lang.Object mLock;
    public final java.util.List mPendingCallbacks;
    public final android.support.v4.media.session.MediaSessionCompat$Token mSessionToken;

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        android.content.Context $r1;
        java.util.HashMap $r5;
        android.support.v4.media.session.IMediaSession $r6;
        android.os.RemoteException $r7;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        java.util.ArrayList $r4;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mLock> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.HashMap mCallbackMap> = $r5;

        r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken> = $r2;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()>();

        $r3 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object fromToken(android.content.Context,java.lang.Object)>($r1, $r3);

        r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj> = $r3;

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        if $r3 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r6 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r6 != null goto label2;

        specialinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void requestExtraBinder()>();

        return;

     label1:
        $r7 = new android.os.RemoteException;

        specialinvoke $r7.<android.os.RemoteException: void <init>()>();

        throw $r7;

     label2:
        return;
    }

    private void requestExtraBinder()
    {
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver;

        specialinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver: void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21)>(r0);

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>("android.support.v4.media.session.command.GET_EXTRA_BINDER", null, $r1);

        return;
    }

    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        java.lang.UnsupportedOperationException $r3;
        android.os.Bundle $r2;
        byte $b0;
        android.support.v4.media.MediaDescriptionCompat $r1;
        long $l1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $l1 = virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: long getFlags()>();

        $l1 = $l1 & 4L;

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION", $r1);

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>("android.support.v4.media.session.command.ADD_QUEUE_ITEM", $r2, null);

        return;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This session doesn\'t support queue management operations");

        throw $r3;
    }

    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat, int)
    {
        java.lang.UnsupportedOperationException $r3;
        android.os.Bundle $r2;
        byte $b0;
        android.support.v4.media.MediaDescriptionCompat $r1;
        int $i2;
        long $l1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $i2 := @parameter1: int;

        $l1 = virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: long getFlags()>();

        $l1 = $l1 & 4L;

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION", $r1);

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.support.v4.media.session.command.ARGUMENT_INDEX", $i2);

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>("android.support.v4.media.session.command.ADD_QUEUE_ITEM_AT", $r2, null);

        return;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This session doesn\'t support queue management operations");

        throw $r3;
    }

    public void adjustVolume(int, int)
    {
        int $i0, $i1;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void adjustVolume(java.lang.Object,int,int)>($r1, $i0, $i1);

        return;
    }

    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r2;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r2 := @parameter0: android.view.KeyEvent;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $z0 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)>($r1, $r2);

        return $z0;
    }

    public android.os.Bundle getExtras()
    {
        java.lang.Object $r2;
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: android.os.Bundle getExtras(java.lang.Object)>($r2);

        return $r1;
    }

    public long getFlags()
    {
        long $l0;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $l0 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: long getFlags(java.lang.Object)>($r1);

        return $l0;
    }

    public java.lang.Object getMediaController()
    {
        java.lang.Object r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        return r1;
    }

    public android.support.v4.media.MediaMetadataCompat getMetadata()
    {
        java.lang.Object $r1;
        android.support.v4.media.MediaMetadataCompat $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getMetadata(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $r2 = staticinvoke <android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object)>($r1);

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getPackageName()
    {
        java.lang.Object $r2;
        java.lang.String $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.String getPackageName(java.lang.Object)>($r2);

        return $r1;
    }

    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    {
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getPlaybackInfo(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $r2 = new android.support.v4.media.session.MediaControllerCompat$PlaybackInfo;

        $i0 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getPlaybackType(java.lang.Object)>($r1);

        $i1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getLegacyAudioStream(java.lang.Object)>($r1);

        $i2 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getVolumeControl(java.lang.Object)>($r1);

        $i3 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getMaxVolume(java.lang.Object)>($r1);

        $i4 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getCurrentVolume(java.lang.Object)>($r1);

        specialinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: void <init>(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        return $r2;

     label1:
        return null;
    }

    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    {
        android.support.v4.media.session.IMediaSession $r2;
        android.os.RemoteException $r4;
        java.lang.Object $r5;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.PlaybackStateCompat $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r2 == null goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label1:
        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        $r3 = interfaceinvoke $r2.<android.support.v4.media.session.IMediaSession: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in getPlaybackState.", $r4);

     label4:
        $r5 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r5 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getPlaybackState(java.lang.Object)>($r5);

        if $r5 == null goto label5;

        $r3 = staticinvoke <android.support.v4.media.session.PlaybackStateCompat: android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object)>($r5);

        return $r3;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getQueue()
    {
        java.lang.Object $r1;
        java.util.List $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r2 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.util.List getQueue(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        $r2 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$QueueItem: java.util.List fromQueueItemList(java.util.List)>($r2);

        return $r2;

     label1:
        return null;
    }

    public java.lang.CharSequence getQueueTitle()
    {
        java.lang.Object $r2;
        java.lang.CharSequence $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.CharSequence getQueueTitle(java.lang.Object)>($r2);

        return $r1;
    }

    public int getRatingType()
    {
        int $i0;
        android.support.v4.media.session.IMediaSession $r2;
        android.os.RemoteException $r3;
        java.lang.Object $r4;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 22 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r2 == null goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label1:
        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        $i0 = interfaceinvoke $r2.<android.support.v4.media.session.IMediaSession: int getRatingType()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in getRatingType.", $r3);

     label4:
        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $i0 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: int getRatingType(java.lang.Object)>($r4);

        return $i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getRepeatMode()
    {
        int $i0;
        android.support.v4.media.session.IMediaSession $r2;
        android.os.RemoteException $r3;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r2 == null goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label1:
        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        $i0 = interfaceinvoke $r2.<android.support.v4.media.session.IMediaSession: int getRepeatMode()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in getRepeatMode.", $r3);

     label4:
        $i0 = -1;

        return $i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        java.lang.Object $r2;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: android.app.PendingIntent getSessionActivity(java.lang.Object)>($r2);

        return $r1;
    }

    public int getShuffleMode()
    {
        int $i0;
        android.support.v4.media.session.IMediaSession $r2;
        android.os.RemoteException $r3;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r2 == null goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label1:
        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        $i0 = interfaceinvoke $r2.<android.support.v4.media.session.IMediaSession: int getShuffleMode()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in getShuffleMode.", $r3);

     label4:
        $i0 = -1;

        return $i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    {
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 $r2;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r1 = staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object getTransportControls(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $r2 = new android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21;

        specialinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21: void <init>(java.lang.Object)>($r1);

        return $r2;

     label1:
        return null;
    }

    public boolean isCaptioningEnabled()
    {
        android.support.v4.media.session.IMediaSession $r2;
        android.os.RemoteException $r3;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r2 == null goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label1:
        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        $z0 = interfaceinvoke $r2.<android.support.v4.media.session.IMediaSession: boolean isCaptioningEnabled()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in isCaptioningEnabled.", $r3);

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSessionReady()
    {
        android.support.v4.media.session.IMediaSession $r1;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r1 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void processPendingCallbacksLocked()
    {
        java.util.Iterator $r4;
        android.support.v4.media.session.IMediaSession $r2;
        java.util.HashMap $r8;
        android.os.RemoteException $r9;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        java.util.List $r3;
        android.support.v4.media.session.MediaControllerCompat$Callback $r6;
        java.lang.Object $r5;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback $r7;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.support.v4.media.session.MediaControllerCompat$Callback) $r5;

        $r7 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback;

        specialinvoke $r7.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void <init>(android.support.v4.media.session.MediaControllerCompat$Callback)>($r6);

        $r8 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.HashMap mCallbackMap>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r6.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback> = $r7;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label3:
        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        interfaceinvoke $r2.<android.support.v4.media.session.IMediaSession: void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)>($r7);

     label4:
        virtualinvoke $r6.<android.support.v4.media.session.MediaControllerCompat$Callback: void postToHandler(int,java.lang.Object,android.os.Bundle)>(13, null, null);

        goto label2;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in registerCallback.", $r9);

     label6:
        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public final void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback, android.os.Handler)
    {
        java.lang.Throwable $r11;
        android.support.v4.media.session.IMediaSession $r6;
        java.util.HashMap $r8;
        android.os.RemoteException $r9;
        android.support.v4.media.session.MediaSessionCompat$Token $r5;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        java.util.List $r10;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;
        android.os.Handler $r2;
        java.lang.Object $r3, $r4;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback $r7;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r2 := @parameter1: android.os.Handler;

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r4 = $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: java.lang.Object mCallbackObj>;

        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)>($r3, $r4, $r2);

        $r3 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mLock>;

        entermonitor $r3;

     label01:
        $r5 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r6 = virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        if $r6 == null goto label07;

        $r7 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback;

        specialinvoke $r7.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void <init>(android.support.v4.media.session.MediaControllerCompat$Callback)>($r1);

        $r8 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.HashMap mCallbackMap>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

        $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback> = $r7;

     label02:
        $r5 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label03:
        $r6 = virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        interfaceinvoke $r6.<android.support.v4.media.session.IMediaSession: void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)>($r7);

        virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: void postToHandler(int,java.lang.Object,android.os.Bundle)>(13, null, null);

     label04:
        goto label08;

     label05:
        $r9 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in registerCallback.", $r9);

        goto label08;

     label07:
        $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback> = null;

        $r10 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r1);

     label08:
        exitmonitor $r3;

     label09:
        return;

     label10:
        $r11 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        java.lang.UnsupportedOperationException $r3;
        android.os.Bundle $r2;
        byte $b0;
        android.support.v4.media.MediaDescriptionCompat $r1;
        long $l1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        $l1 = virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: long getFlags()>();

        $l1 = $l1 & 4L;

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION", $r1);

        virtualinvoke r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>("android.support.v4.media.session.command.REMOVE_QUEUE_ITEM", $r2, null);

        return;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This session doesn\'t support queue management operations");

        throw $r3;
    }

    public void sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        android.os.Bundle $r2;
        java.lang.Object $r4;
        java.lang.String $r1;
        android.os.ResultReceiver $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 := @parameter2: android.os.ResultReceiver;

        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)>($r4, $r1, $r2, $r3);

        return;
    }

    public void setVolumeTo(int, int)
    {
        int $i0, $i1;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void setVolumeTo(java.lang.Object,int,int)>($r1, $i0, $i1);

        return;
    }

    public final void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        java.lang.Throwable $r10;
        android.support.v4.media.session.IMediaSession $r5;
        java.util.HashMap $r6;
        android.os.RemoteException $r8;
        android.support.v4.media.session.MediaSessionCompat$Token $r4;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 r0;
        java.util.List $r9;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;
        java.lang.Object $r2, $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback $r7;

        r0 := @this: android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mControllerObj>;

        $r3 = $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: java.lang.Object mCallbackObj>;

        staticinvoke <android.support.v4.media.session.MediaControllerCompatApi21: void unregisterCallback(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mLock>;

        entermonitor $r2;

     label01:
        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

        $r5 = virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

     label02:
        if $r5 == null goto label10;

     label03:
        $r6 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.HashMap mCallbackMap>;

     label04:
        $r3 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label05:
        $r7 = (android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback) $r3;

        if $r7 == null goto label11;

        $r1.<android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback> = null;

        $r4 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken>;

     label06:
        $r5 = virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()>();

        interfaceinvoke $r5.<android.support.v4.media.session.IMediaSession: void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)>($r7);

     label07:
        goto label11;

     label08:
        $r8 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaControllerCompat", "Dead object in unregisterCallback.", $r8);

        goto label11;

     label10:
        $r9 = r0.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks>;

        interfaceinvoke $r9.<java.util.List: boolean remove(java.lang.Object)>($r1);

     label11:
        exitmonitor $r2;

     label12:
        return;

     label13:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label14:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch android.os.RemoteException from label04 to label05 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label07 with label13;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }
}
