public final class com.google.zxing.pdf417.PDF417Writer extends java.lang.Object implements com.google.zxing.Writer
{
    public static final int WHITE_SPACE;

    public void <init>()
    {
        com.google.zxing.pdf417.PDF417Writer r0;

        r0 := @this: com.google.zxing.pdf417.PDF417Writer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417, java.lang.String, int, int, int)
    {
        byte[] $r5;
        byte[][] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.zxing.common.BitMatrix $r6;
        java.lang.String $r1;
        com.google.zxing.pdf417.encoder.PDF417 $r0;
        com.google.zxing.pdf417.encoder.BarcodeMatrix $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: com.google.zxing.pdf417.encoder.PDF417;

        $r1 := @parameter1: java.lang.String;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i0 := @parameter4: int;

        virtualinvoke $r0.<com.google.zxing.pdf417.encoder.PDF417: void generateBarcodeLogic(java.lang.String,int)>($r1, 2);

        $r2 = virtualinvoke $r0.<com.google.zxing.pdf417.encoder.PDF417: com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix()>();

        $r3 = virtualinvoke $r2.<com.google.zxing.pdf417.encoder.BarcodeMatrix: byte[][] getScaledMatrix(int,int)>(2, 8);

        $r4 = $r3;

        if $i3 <= $i2 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r5 = $r3[0];

        $i4 = lengthof $r5;

        $i1 = lengthof $r3;

        if $i4 >= $i1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label05;

        $r4 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: byte[][] rotateArray(byte[][])>($r3);

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        $r5 = $r4[0];

        $i1 = lengthof $r5;

        $i2 = $i2 / $i1;

        $i1 = lengthof $r4;

        $i3 = $i3 / $i1;

        if $i2 >= $i3 goto label07;

        goto label08;

     label07:
        $i2 = $i3;

     label08:
        if $i2 <= 1 goto label10;

        $r2 = virtualinvoke $r0.<com.google.zxing.pdf417.encoder.PDF417: com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix()>();

        $i3 = $i2 * 2;

        $i2 = $i2 * 4;

        $i2 = $i2 * 2;

        $r3 = virtualinvoke $r2.<com.google.zxing.pdf417.encoder.BarcodeMatrix: byte[][] getScaledMatrix(int,int)>($i3, $i2);

        $r4 = $r3;

        if $z0 == 0 goto label09;

        $r4 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: byte[][] rotateArray(byte[][])>($r3);

     label09:
        $r6 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int)>($r4, $i0);

        return $r6;

     label10:
        $r6 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int)>($r4, $i0);

        return $r6;
    }

    public static com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][], int)
    {
        byte[] $r2;
        byte[][] $r0;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.zxing.common.BitMatrix $r1, $r3;

        $r0 := @parameter0: byte[][];

        $i0 := @parameter1: int;

        $r3 = new com.google.zxing.common.BitMatrix;

        $r1 = $r3;

        $r2 = $r0[0];

        $i2 = lengthof $r2;

        $i1 = $i0 * 2;

        $i2 = $i2 + $i1;

        $i3 = lengthof $r0;

        $i1 = $i3 + $i1;

        specialinvoke $r3.<com.google.zxing.common.BitMatrix: void <init>(int,int)>($i2, $i1);

        virtualinvoke $r1.<com.google.zxing.common.BitMatrix: void clear()>();

        $i1 = virtualinvoke $r1.<com.google.zxing.common.BitMatrix: int getHeight()>();

        $i1 = $i1 - $i0;

        $i1 = $i1 - 1;

        $i2 = 0;

     label1:
        $i3 = lengthof $r0;

        if $i2 >= $i3 goto label5;

        $i3 = 0;

     label2:
        $r2 = $r0[0];

        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label4;

        $r2 = $r0[$i2];

        $b5 = $r2[$i3];

        if $b5 != 1 goto label3;

        $i4 = $i3 + $i0;

        virtualinvoke $r1.<com.google.zxing.common.BitMatrix: void set(int,int)>($i4, $i1);

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        $i3 = -1;

        $i1 = $i1 + $i3;

        goto label1;

     label5:
        return $r1;
    }

    public static byte[][] rotateArray(byte[][])
    {
        byte[] $r1, $r5;
        byte[][] $r0, $r4;
        byte $b4;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;

        $r0 := @parameter0: byte[][];

        $r1 = $r0[0];

        $i0 = lengthof $r1;

        $i1 = lengthof $r0;

        $r2 = newarray (int)[2];

        $r2[0] = $i0;

        $r2[1] = $i1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "B", $r2);

        $r4 = (byte[][]) $r3;

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $i1 = lengthof $r0;

        $i1 = $i1 - $i0;

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i2 = 0;

     label2:
        $r1 = $r0[0];

        $i3 = lengthof $r1;

        if $i2 >= $i3 goto label3;

        $r1 = $r4[$i2];

        $r5 = $r0[$i0];

        $b4 = $r5[$i2];

        $r1[$i1] = $b4;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return $r4;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int)
    {
        com.google.zxing.pdf417.PDF417Writer r0;
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r2;
        java.lang.String $r3;
        com.google.zxing.BarcodeFormat $r1;

        r0 := @this: com.google.zxing.pdf417.PDF417Writer;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>($r3, $r1, $i0, $i1, null);

        return $r2;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Map)
    {
        com.google.zxing.pdf417.PDF417Writer r0;
        java.util.Map $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Boolean $r8;
        java.lang.String $r1;
        java.lang.Number $r11;
        com.google.zxing.pdf417.encoder.PDF417 $r5;
        boolean $z0;
        com.google.zxing.pdf417.encoder.Compaction $r9;
        java.lang.IllegalArgumentException $r13;
        com.google.zxing.EncodeHintType $r6;
        com.google.zxing.pdf417.encoder.Dimensions $r10;
        java.lang.Object $r7;
        com.google.zxing.common.BitMatrix $r12;
        java.lang.StringBuilder $r14;
        com.google.zxing.BarcodeFormat $r2, $r4;

        r0 := @this: com.google.zxing.pdf417.PDF417Writer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.util.Map;

        $r4 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat PDF_417>;

        if $r2 != $r4 goto label5;

        $r5 = new com.google.zxing.pdf417.encoder.PDF417;

        specialinvoke $r5.<com.google.zxing.pdf417.encoder.PDF417: void <init>()>();

        $i2 = 30;

        if $r3 == null goto label4;

        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACT>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACT>;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r5.<com.google.zxing.pdf417.encoder.PDF417: void setCompact(boolean)>($z0);

     label1:
        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACTION>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACTION>;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (com.google.zxing.pdf417.encoder.Compaction) $r7;

        virtualinvoke $r5.<com.google.zxing.pdf417.encoder.PDF417: void setCompaction(com.google.zxing.pdf417.encoder.Compaction)>($r9);

     label2:
        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_DIMENSIONS>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_DIMENSIONS>;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r10 = (com.google.zxing.pdf417.encoder.Dimensions) $r7;

        $i3 = virtualinvoke $r10.<com.google.zxing.pdf417.encoder.Dimensions: int getMaxCols()>();

        $i4 = virtualinvoke $r10.<com.google.zxing.pdf417.encoder.Dimensions: int getMinCols()>();

        $i5 = virtualinvoke $r10.<com.google.zxing.pdf417.encoder.Dimensions: int getMaxRows()>();

        $i6 = virtualinvoke $r10.<com.google.zxing.pdf417.encoder.Dimensions: int getMinRows()>();

        virtualinvoke $r5.<com.google.zxing.pdf417.encoder.PDF417: void setDimensions(int,int,int,int)>($i3, $i4, $i5, $i6);

     label3:
        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MARGIN>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r6 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MARGIN>;

        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r11 = (java.lang.Number) $r7;

        $i2 = virtualinvoke $r11.<java.lang.Number: int intValue()>();

     label4:
        $r12 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int)>($r5, $r1, $i0, $i1, $i2);

        return $r12;

     label5:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only encode PDF_417, but got ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r13;
    }

    public static void <clinit>()
    {
        <com.google.zxing.pdf417.PDF417Writer: int WHITE_SPACE> = 30;

        return;
    }
}
