public abstract class b.k.b.g$a extends java.lang.Object
{

    public void <init>()
    {
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int clampViewPositionHorizontal(android.view.View, int, int);

    public abstract int clampViewPositionVertical(android.view.View, int, int);

    public int getOrderedChildIndex(int)
    {
        int $i0;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $i0 := @parameter0: int;

        return $i0;
    }

    public int getViewHorizontalDragRange(android.view.View)
    {
        android.view.View $r1;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getViewVerticalDragRange(android.view.View)
    {
        android.view.View $r1;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public void onEdgeDragStarted(int, int)
    {
        int $i0, $i1;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return;
    }

    public boolean onEdgeLock(int)
    {
        int $i0;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $i0 := @parameter0: int;

        return 0;
    }

    public void onEdgeTouched(int, int)
    {
        int $i0, $i1;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return;
    }

    public void onViewCaptured(android.view.View, int)
    {
        int $i0;
        android.view.View $r1;
        b.k.b.g$a r0;

        r0 := @this: b.k.b.g$a;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return;
    }

    public abstract void onViewDragStateChanged(int);

    public abstract void onViewPositionChanged(android.view.View, int, int, int, int);

    public abstract void onViewReleased(android.view.View, float, float);

    public abstract boolean tryCaptureView(android.view.View, int);
}
