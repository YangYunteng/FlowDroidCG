public class com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler extends java.lang.Object implements com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler
{
    public static final java.lang.String ATTEMPT_NUMBER;
    public static final java.lang.String BACKEND_NAME;
    public static final java.lang.String EVENT_PRIORITY;
    public static final java.lang.String EXTRAS;
    public static final java.lang.String LOG_TAG;
    public android.app.AlarmManager alarmManager;
    public final com.google.android.datatransport.runtime.time.Clock clock;
    public final com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config;
    public final android.content.Context context;
    public final com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore;

    public void <init>(android.content.Context, com.google.android.datatransport.runtime.scheduling.persistence.EventStore, android.app.AlarmManager, com.google.android.datatransport.runtime.time.Clock, com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)
    {
        com.google.android.datatransport.runtime.time.Clock $r4;
        android.content.Context $r1;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig $r5;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler r0;
        android.app.AlarmManager $r3;
        com.google.android.datatransport.runtime.scheduling.persistence.EventStore $r2;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.android.datatransport.runtime.scheduling.persistence.EventStore;

        $r3 := @parameter2: android.app.AlarmManager;

        $r4 := @parameter3: com.google.android.datatransport.runtime.time.Clock;

        $r5 := @parameter4: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.content.Context context> = $r1;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore> = $r2;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.app.AlarmManager alarmManager> = $r3;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.time.Clock clock> = $r4;

        r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config> = $r5;

        return;
    }

    public void <init>(android.content.Context, com.google.android.datatransport.runtime.scheduling.persistence.EventStore, com.google.android.datatransport.runtime.time.Clock, com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)
    {
        com.google.android.datatransport.runtime.time.Clock $r3;
        android.content.Context $r1;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig $r4;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler r0;
        android.app.AlarmManager $r6;
        com.google.android.datatransport.runtime.scheduling.persistence.EventStore $r2;
        java.lang.Object $r5;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.android.datatransport.runtime.scheduling.persistence.EventStore;

        $r3 := @parameter2: com.google.android.datatransport.runtime.time.Clock;

        $r4 := @parameter3: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig;

        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r6 = (android.app.AlarmManager) $r5;

        specialinvoke r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: void <init>(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,android.app.AlarmManager,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)>($r1, $r2, $r6, $r3, $r4);

        return;
    }

    public boolean isJobServiceOn(android.content.Intent)
    {
        android.content.Context $r1;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler r0;
        android.content.Intent $r3;
        android.app.PendingIntent $r2;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler;

        $r3 := @parameter0: android.content.Intent;

        $r1 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.content.Context context>;

        $r2 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r1, 0, $r3, 536870912);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void schedule(com.google.android.datatransport.runtime.TransportContext, int)
    {
        com.google.android.datatransport.runtime.time.Clock $r16;
        byte[] $r5;
        android.content.Context $r7;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler r0;
        java.lang.Object[] $r11;
        android.net.Uri $r8;
        android.content.Intent $r6;
        long $l2, $l3;
        android.app.PendingIntent $r14;
        java.lang.Integer $r13;
        com.google.android.datatransport.runtime.TransportContext $r1;
        java.lang.Long $r12;
        int $i0, $i1;
        com.google.android.datatransport.runtime.scheduling.persistence.EventStore $r9;
        android.net.Uri$Builder $r2;
        java.lang.String $r3;
        boolean $z0;
        com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig $r10;
        android.app.AlarmManager $r15;
        com.google.android.datatransport.Priority $r4;

        r0 := @this: com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler;

        $r1 := @parameter0: com.google.android.datatransport.runtime.TransportContext;

        $i0 := @parameter1: int;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r1.<com.google.android.datatransport.runtime.TransportContext: java.lang.String getBackendName()>();

        virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("backendName", $r3);

        $r4 = virtualinvoke $r1.<com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.Priority getPriority()>();

        $i1 = staticinvoke <com.google.android.datatransport.runtime.util.PriorityMapping: int toInt(com.google.android.datatransport.Priority)>($r4);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("priority", $r3);

        $r5 = virtualinvoke $r1.<com.google.android.datatransport.runtime.TransportContext: byte[] getExtras()>();

        if $r5 == null goto label1;

        $r5 = virtualinvoke $r1.<com.google.android.datatransport.runtime.TransportContext: byte[] getExtras()>();

        $r3 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, 0);

        virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("extras", $r3);

     label1:
        $r6 = new android.content.Intent;

        $r7 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.content.Context context>;

        specialinvoke $r6.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r7, class "Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/AlarmManagerSchedulerBroadcastReceiver;");

        $r8 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r8);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("attemptNumber", $i0);

        $z0 = virtualinvoke r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: boolean isJobServiceOn(android.content.Intent)>($r6);

        if $z0 == 0 goto label2;

        staticinvoke <com.google.android.datatransport.runtime.logging.Logging: void d(java.lang.String,java.lang.String,java.lang.Object)>("AlarmManagerScheduler", "Upload for context %s is already scheduled. Returning...", $r1);

        return;

     label2:
        $r9 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore>;

        $l2 = interfaceinvoke $r9.<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: long getNextCallTime(com.google.android.datatransport.runtime.TransportContext)>($r1);

        $r10 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config>;

        $r4 = virtualinvoke $r1.<com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.Priority getPriority()>();

        $l3 = virtualinvoke $r10.<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: long getScheduleDelay(com.google.android.datatransport.Priority,long,int)>($r4, $l2, $i0);

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = $r1;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r11[1] = $r12;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r11[2] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[3] = $r13;

        staticinvoke <com.google.android.datatransport.runtime.logging.Logging: void d(java.lang.String,java.lang.String,java.lang.Object[])>("AlarmManagerScheduler", "Scheduling upload for context %s in %dms(Backend next call timestamp %d). Attempt %d", $r11);

        $r7 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.content.Context context>;

        $r14 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r7, 0, $r6, 0);

        $r15 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.app.AlarmManager alarmManager>;

        $r16 = r0.<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.time.Clock clock>;

        $l2 = interfaceinvoke $r16.<com.google.android.datatransport.runtime.time.Clock: long getTime()>();

        $l3 = $l2 + $l3;

        virtualinvoke $r15.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(3, $l3, $r14);

        return;
    }

    public static void <clinit>()
    {
        <com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: java.lang.String LOG_TAG> = "AlarmManagerScheduler";

        <com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: java.lang.String EXTRAS> = "extras";

        <com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: java.lang.String EVENT_PRIORITY> = "priority";

        <com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: java.lang.String BACKEND_NAME> = "backendName";

        <com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: java.lang.String ATTEMPT_NUMBER> = "attemptNumber";

        return;
    }
}
