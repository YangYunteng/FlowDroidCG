public class c.b.a.l extends java.lang.Object
{
    public java.util.concurrent.atomic.AtomicInteger a;
    public final java.util.Map b;
    public final java.util.Set c;
    public final java.util.concurrent.PriorityBlockingQueue d;
    public final java.util.concurrent.PriorityBlockingQueue e;
    public final c.b.a.a f;
    public final c.b.a.g g;
    public final c.b.a.n h;
    public c.b.a.h[] i;
    public c.b.a.c j;
    public java.util.List k;

    public void <init>(c.b.a.a, c.b.a.g)
    {
        c.b.a.g $r2;
        c.b.a.l r0;
        c.b.a.a $r1;

        r0 := @this: c.b.a.l;

        $r1 := @parameter0: c.b.a.a;

        $r2 := @parameter1: c.b.a.g;

        specialinvoke r0.<c.b.a.l: void <init>(c.b.a.a,c.b.a.g,int)>($r1, $r2, 6);

        return;
    }

    public void <init>(c.b.a.a, c.b.a.g, int)
    {
        c.b.a.g $r2;
        c.b.a.f $r3;
        android.os.Handler $r4;
        android.os.Looper $r5;
        int $i0;
        c.b.a.l r0;
        c.b.a.a $r1;

        r0 := @this: c.b.a.l;

        $r1 := @parameter0: c.b.a.a;

        $r2 := @parameter1: c.b.a.g;

        $i0 := @parameter2: int;

        $r3 = new c.b.a.f;

        $r4 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        specialinvoke $r3.<c.b.a.f: void <init>(android.os.Handler)>($r4);

        specialinvoke r0.<c.b.a.l: void <init>(c.b.a.a,c.b.a.g,int,c.b.a.n)>($r1, $r2, $i0, $r3);

        return;
    }

    public void <init>(c.b.a.a, c.b.a.g, int, c.b.a.n)
    {
        c.b.a.g $r1;
        c.b.a.n $r2;
        java.util.HashMap $r5;
        c.b.a.l r0;
        java.util.concurrent.PriorityBlockingQueue $r7;
        java.util.ArrayList $r8;
        java.util.HashSet $r6;
        c.b.a.h[] $r9;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i0;
        c.b.a.a $r3;

        r0 := @this: c.b.a.l;

        $r3 := @parameter0: c.b.a.a;

        $r1 := @parameter1: c.b.a.g;

        $i0 := @parameter2: int;

        $r2 := @parameter3: c.b.a.n;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<c.b.a.l: java.util.concurrent.atomic.AtomicInteger a> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<c.b.a.l: java.util.Map b> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<c.b.a.l: java.util.Set c> = $r6;

        $r7 = new java.util.concurrent.PriorityBlockingQueue;

        specialinvoke $r7.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue d> = $r7;

        $r7 = new java.util.concurrent.PriorityBlockingQueue;

        specialinvoke $r7.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue e> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<c.b.a.l: java.util.List k> = $r8;

        r0.<c.b.a.l: c.b.a.a f> = $r3;

        r0.<c.b.a.l: c.b.a.g g> = $r1;

        $r9 = newarray (c.b.a.h)[$i0];

        r0.<c.b.a.l: c.b.a.h[] i> = $r9;

        r0.<c.b.a.l: c.b.a.n h> = $r2;

        return;
    }

    public int a()
    {
        int $i0;
        c.b.a.l r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: c.b.a.l;

        $r1 = r0.<c.b.a.l: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return $i0;
    }

    public c.b.a.j a(c.b.a.j)
    {
        java.lang.Throwable $r11, $r12;
        java.lang.Object[] $r10;
        c.b.a.j $r1;
        c.b.a.l r0;
        java.util.concurrent.PriorityBlockingQueue $r4;
        java.util.Map $r5, $r7;
        int $i0;
        java.lang.String $r6;
        java.util.LinkedList $r13;
        boolean $z0;
        java.util.Set $r2, $r3;
        java.lang.Object $r8;
        java.util.Queue $r9;

        r0 := @this: c.b.a.l;

        $r1 := @parameter0: c.b.a.j;

        virtualinvoke $r1.<c.b.a.j: c.b.a.j setRequestQueue(c.b.a.l)>(r0);

        $r2 = r0.<c.b.a.l: java.util.Set c>;

        entermonitor $r2;

     label01:
        $r3 = r0.<c.b.a.l: java.util.Set c>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        exitmonitor $r2;

     label02:
        $i0 = virtualinvoke r0.<c.b.a.l: int a()>();

        virtualinvoke $r1.<c.b.a.j: c.b.a.j setSequence(int)>($i0);

        virtualinvoke $r1.<c.b.a.j: void addMarker(java.lang.String)>("add-to-queue");

        $z0 = virtualinvoke $r1.<c.b.a.j: boolean shouldCache()>();

        if $z0 != 0 goto label03;

        $r4 = r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue e>;

        virtualinvoke $r4.<java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>($r1);

        return $r1;

     label03:
        $r5 = r0.<c.b.a.l: java.util.Map b>;

        entermonitor $r5;

     label04:
        $r6 = virtualinvoke $r1.<c.b.a.j: java.lang.String getCacheKey()>();

        $r7 = r0.<c.b.a.l: java.util.Map b>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label06;

        $r7 = r0.<c.b.a.l: java.util.Map b>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (java.util.Queue) $r8;

        if $r9 != null goto label05;

        $r13 = new java.util.LinkedList;

        $r9 = $r13;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

     label05:
        interfaceinvoke $r9.<java.util.Queue: boolean add(java.lang.Object)>($r1);

        $r7 = r0.<c.b.a.l: java.util.Map b>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r9);

        $z0 = <c.b.a.p: boolean b>;

        if $z0 == 0 goto label07;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r6;

        staticinvoke <c.b.a.p: void d(java.lang.String,java.lang.Object[])>("Request for cacheKey=%s is in flight, putting on hold.", $r10);

        goto label07;

     label06:
        $r7 = r0.<c.b.a.l: java.util.Map b>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, null);

        $r4 = r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue d>;

        virtualinvoke $r4.<java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>($r1);

     label07:
        exitmonitor $r5;

     label08:
        return $r1;

     label09:
        $r11 := @caughtexception;

        exitmonitor $r5;

     label10:
        throw $r11;

     label11:
        $r12 := @caughtexception;

     label12:
        exitmonitor $r2;

     label13:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void a(c.b.a.l$a)
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r4;
        c.b.a.j $r6;
        java.util.Set $r1, $r3;
        c.b.a.l r0;
        c.b.a.l$a $r2;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: c.b.a.l;

        $r2 := @parameter0: c.b.a.l$a;

        $r1 = r0.<c.b.a.l: java.util.Set c>;

        entermonitor $r1;

     label1:
        $r3 = r0.<c.b.a.l: java.util.Set c>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (c.b.a.j) $r5;

        $z0 = interfaceinvoke $r2.<c.b.a.l$a: boolean a(c.b.a.j)>($r6);

        if $z0 == 0 goto label2;

        virtualinvoke $r6.<c.b.a.j: void cancel()>();

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        goto label7;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void a(java.lang.Object)
    {
        c.b.a.k $r2;
        java.lang.Object $r1;
        c.b.a.l r0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: c.b.a.l;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = new c.b.a.k;

        specialinvoke $r2.<c.b.a.k: void <init>(c.b.a.l,java.lang.Object)>(r0, $r1);

        virtualinvoke r0.<c.b.a.l: void a(c.b.a.l$a)>($r2);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot cancelAll with a null tag");

        throw $r3;
    }

    public void b()
    {
        c.b.a.g $r8;
        c.b.a.h $r7;
        c.b.a.n $r1;
        c.b.a.l r0;
        java.util.concurrent.PriorityBlockingQueue $r3, $r4;
        c.b.a.h[] $r6;
        int $i0, $i1;
        c.b.a.c $r2;
        c.b.a.a $r5;

        r0 := @this: c.b.a.l;

        virtualinvoke r0.<c.b.a.l: void c()>();

        $r2 = new c.b.a.c;

        $r3 = r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue d>;

        $r4 = r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue e>;

        $r5 = r0.<c.b.a.l: c.b.a.a f>;

        $r1 = r0.<c.b.a.l: c.b.a.n h>;

        specialinvoke $r2.<c.b.a.c: void <init>(java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,c.b.a.a,c.b.a.n)>($r3, $r4, $r5, $r1);

        r0.<c.b.a.l: c.b.a.c j> = $r2;

        $r2 = r0.<c.b.a.l: c.b.a.c j>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        $i0 = 0;

     label1:
        $r6 = r0.<c.b.a.l: c.b.a.h[] i>;

        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label2;

        $r7 = new c.b.a.h;

        $r3 = r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue e>;

        $r8 = r0.<c.b.a.l: c.b.a.g g>;

        $r5 = r0.<c.b.a.l: c.b.a.a f>;

        $r1 = r0.<c.b.a.l: c.b.a.n h>;

        specialinvoke $r7.<c.b.a.h: void <init>(java.util.concurrent.BlockingQueue,c.b.a.g,c.b.a.a,c.b.a.n)>($r3, $r8, $r5, $r1);

        $r6 = r0.<c.b.a.l: c.b.a.h[] i>;

        $r6[$i0] = $r7;

        virtualinvoke $r7.<java.lang.Thread: void start()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void b(c.b.a.j)
    {
        java.lang.Throwable $r16, $r17, $r18;
        java.lang.Object[] $r13;
        c.b.a.j $r1;
        c.b.a.l r0;
        java.lang.Integer $r14;
        java.util.concurrent.PriorityBlockingQueue $r15;
        java.util.Map $r9, $r11;
        int $i0;
        java.lang.String $r10;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.Set $r2, $r3;
        java.util.List $r4, $r5;
        java.lang.Object $r7;
        c.b.a.l$b $r8;
        java.util.Queue $r12;

        r0 := @this: c.b.a.l;

        $r1 := @parameter0: c.b.a.j;

        $r2 = r0.<c.b.a.l: java.util.Set c>;

        entermonitor $r2;

     label01:
        $r3 = r0.<c.b.a.l: java.util.Set c>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r2;

     label02:
        $r4 = r0.<c.b.a.l: java.util.List k>;

        entermonitor $r4;

     label03:
        $r5 = r0.<c.b.a.l: java.util.List k>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (c.b.a.l$b) $r7;

        interfaceinvoke $r8.<c.b.a.l$b: void a(c.b.a.j)>($r1);

        goto label04;

     label05:
        exitmonitor $r4;

     label06:
        $z0 = virtualinvoke $r1.<c.b.a.j: boolean shouldCache()>();

        if $z0 == 0 goto label20;

        $r9 = r0.<c.b.a.l: java.util.Map b>;

        entermonitor $r9;

     label07:
        $r10 = virtualinvoke $r1.<c.b.a.j: java.lang.String getCacheKey()>();

        $r11 = r0.<c.b.a.l: java.util.Map b>;

        $r7 = interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r10);

        $r12 = (java.util.Queue) $r7;

        if $r12 == null goto label09;

        $z0 = <c.b.a.p: boolean b>;

        if $z0 == 0 goto label08;

        $r13 = newarray (java.lang.Object)[2];

        $i0 = interfaceinvoke $r12.<java.util.Queue: int size()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13[0] = $r14;

        $r13[1] = $r10;

        staticinvoke <c.b.a.p: void d(java.lang.String,java.lang.Object[])>("Releasing %d waiting requests for cacheKey=%s.", $r13);

     label08:
        $r15 = r0.<c.b.a.l: java.util.concurrent.PriorityBlockingQueue d>;

        virtualinvoke $r15.<java.util.concurrent.PriorityBlockingQueue: boolean addAll(java.util.Collection)>($r12);

     label09:
        exitmonitor $r9;

     label10:
        return;

     label11:
        $r16 := @caughtexception;

        exitmonitor $r9;

     label12:
        throw $r16;

     label13:
        $r17 := @caughtexception;

     label14:
        exitmonitor $r4;

     label15:
        throw $r17;

     label16:
        $r18 := @caughtexception;

     label17:
        exitmonitor $r2;

     label18:
        goto label19;

     label19:
        throw $r18;

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label06 with label13;
        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void c()
    {
        c.b.a.h[] $r2;
        c.b.a.h $r3;
        int $i0, $i1;
        c.b.a.l r0;
        c.b.a.c $r1;

        r0 := @this: c.b.a.l;

        $r1 = r0.<c.b.a.l: c.b.a.c j>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<c.b.a.c: void a()>();

     label1:
        $i0 = 0;

     label2:
        $r2 = r0.<c.b.a.l: c.b.a.h[] i>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label4;

        $r3 = $r2[$i0];

        if $r3 == null goto label3;

        $r3 = $r2[$i0];

        virtualinvoke $r3.<c.b.a.h: void a()>();

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return;
    }
}
