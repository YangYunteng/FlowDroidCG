public class androidx.appcompat.widget.SwitchCompat extends android.widget.CompoundButton
{
    public static final java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME;
    public static final int[] CHECKED_STATE_SET;
    public static final int MONOSPACE;
    public static final int SANS;
    public static final int SERIF;
    public static final int THUMB_ANIMATION_DURATION;
    public static final android.util.Property THUMB_POS;
    public static final int TOUCH_MODE_DOWN;
    public static final int TOUCH_MODE_DRAGGING;
    public static final int TOUCH_MODE_IDLE;
    public boolean mHasThumbTint;
    public boolean mHasThumbTintMode;
    public boolean mHasTrackTint;
    public boolean mHasTrackTintMode;
    public int mMinFlingVelocity;
    public android.text.Layout mOffLayout;
    public android.text.Layout mOnLayout;
    public android.animation.ObjectAnimator mPositionAnimator;
    public boolean mShowText;
    public boolean mSplitTrack;
    public int mSwitchBottom;
    public int mSwitchHeight;
    public int mSwitchLeft;
    public int mSwitchMinWidth;
    public int mSwitchPadding;
    public int mSwitchRight;
    public int mSwitchTop;
    public android.text.method.TransformationMethod mSwitchTransformationMethod;
    public int mSwitchWidth;
    public final android.graphics.Rect mTempRect;
    public android.content.res.ColorStateList mTextColors;
    public final b.b.f.F mTextHelper;
    public java.lang.CharSequence mTextOff;
    public java.lang.CharSequence mTextOn;
    public final android.text.TextPaint mTextPaint;
    public android.graphics.drawable.Drawable mThumbDrawable;
    public float mThumbPosition;
    public int mThumbTextPadding;
    public android.content.res.ColorStateList mThumbTintList;
    public android.graphics.PorterDuff$Mode mThumbTintMode;
    public int mThumbWidth;
    public int mTouchMode;
    public int mTouchSlop;
    public float mTouchX;
    public float mTouchY;
    public android.graphics.drawable.Drawable mTrackDrawable;
    public android.content.res.ColorStateList mTrackTintList;
    public android.graphics.PorterDuff$Mode mTrackTintMode;
    public android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        b.b.f.ia $r0;
        int[] $r1;

        <androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DRAGGING> = 2;

        <androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DOWN> = 1;

        <androidx.appcompat.widget.SwitchCompat: int THUMB_ANIMATION_DURATION> = 250;

        <androidx.appcompat.widget.SwitchCompat: int SERIF> = 2;

        <androidx.appcompat.widget.SwitchCompat: int SANS> = 1;

        <androidx.appcompat.widget.SwitchCompat: int MONOSPACE> = 3;

        <androidx.appcompat.widget.SwitchCompat: java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME> = "android.widget.Switch";

        $r0 = new b.b.f.ia;

        specialinvoke $r0.<b.b.f.ia: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "thumbPos");

        <androidx.appcompat.widget.SwitchCompat: android.util.Property THUMB_POS> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842912;

        <androidx.appcompat.widget.SwitchCompat: int[] CHECKED_STATE_SET> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <b.b.a: int switchStyle>;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2;
        android.graphics.Rect $r16;
        android.graphics.drawable.Drawable $r10;
        android.content.res.ColorStateList $r12;
        android.view.VelocityTracker $r4;
        android.view.ViewConfiguration $r15;
        android.util.AttributeSet $r3;
        int[] $r8;
        int $i0, $i1, $i2;
        boolean $z0;
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r11;
        android.graphics.PorterDuff$Mode $r1, $r13;
        android.util.DisplayMetrics $r7;
        b.b.f.ma $r9;
        android.text.TextPaint $r5, $r17;
        float $f0;
        b.b.f.F $r14, $r18;
        android.content.res.Resources $r6;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r3, $i0);

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList> = null;

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode> = null;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint> = 0;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode> = 0;

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList> = null;

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode> = null;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint> = 0;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode> = 0;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker> = $r4;

        $r16 = new android.graphics.Rect;

        specialinvoke $r16.<android.graphics.Rect: void <init>()>();

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect> = $r16;

        $r17 = new android.text.TextPaint;

        specialinvoke $r17.<android.text.TextPaint: void <init>(int)>(1);

        r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint> = $r17;

        $r6 = virtualinvoke r0.<android.widget.CompoundButton: android.content.res.Resources getResources()>();

        $r5 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r7.<android.util.DisplayMetrics: float density>;

        $r5.<android.text.TextPaint: float density> = $f0;

        $r8 = <b.b.j: int[] SwitchCompat>;

        $r9 = staticinvoke <b.b.f.ma: b.b.f.ma a(android.content.Context,android.util.AttributeSet,int[],int,int)>($r2, $r3, $r8, $i0, 0);

        $i1 = <b.b.j: int SwitchCompat_android_thumb>;

        $r10 = virtualinvoke $r9.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i1);

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable> = $r10;

        $r10 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r10 == null goto label01;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label01:
        $i1 = <b.b.j: int SwitchCompat_track>;

        $r10 = virtualinvoke $r9.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i1);

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable> = $r10;

        $r10 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r10 == null goto label02;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label02:
        $i1 = <b.b.j: int SwitchCompat_android_textOn>;

        $r11 = virtualinvoke $r9.<b.b.f.ma: java.lang.CharSequence e(int)>($i1);

        r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn> = $r11;

        $i1 = <b.b.j: int SwitchCompat_android_textOff>;

        $r11 = virtualinvoke $r9.<b.b.f.ma: java.lang.CharSequence e(int)>($i1);

        r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff> = $r11;

        $i1 = <b.b.j: int SwitchCompat_showText>;

        $z0 = virtualinvoke $r9.<b.b.f.ma: boolean a(int,boolean)>($i1, 1);

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mShowText> = $z0;

        $i1 = <b.b.j: int SwitchCompat_thumbTextPadding>;

        $i1 = virtualinvoke $r9.<b.b.f.ma: int c(int,int)>($i1, 0);

        r0.<androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding> = $i1;

        $i1 = <b.b.j: int SwitchCompat_switchMinWidth>;

        $i1 = virtualinvoke $r9.<b.b.f.ma: int c(int,int)>($i1, 0);

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth> = $i1;

        $i1 = <b.b.j: int SwitchCompat_switchPadding>;

        $i1 = virtualinvoke $r9.<b.b.f.ma: int c(int,int)>($i1, 0);

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchPadding> = $i1;

        $i1 = <b.b.j: int SwitchCompat_splitTrack>;

        $z0 = virtualinvoke $r9.<b.b.f.ma: boolean a(int,boolean)>($i1, 0);

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack> = $z0;

        $i1 = <b.b.j: int SwitchCompat_thumbTint>;

        $r12 = virtualinvoke $r9.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i1);

        if $r12 == null goto label03;

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList> = $r12;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint> = 1;

     label03:
        $i1 = <b.b.j: int SwitchCompat_thumbTintMode>;

        $i2 = -1;

        $i1 = virtualinvoke $r9.<b.b.f.ma: int d(int,int)>($i1, $i2);

        $r13 = staticinvoke <b.b.f.J: android.graphics.PorterDuff$Mode a(int,android.graphics.PorterDuff$Mode)>($i1, null);

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode>;

        if $r1 == $r13 goto label04;

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode> = $r13;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode> = 1;

     label04:
        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint>;

        if $z0 != 0 goto label05;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode>;

        if $z0 == 0 goto label06;

     label05:
        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void applyThumbTint()>();

     label06:
        $i1 = <b.b.j: int SwitchCompat_trackTint>;

        $r12 = virtualinvoke $r9.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i1);

        if $r12 == null goto label07;

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList> = $r12;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint> = 1;

     label07:
        $i1 = <b.b.j: int SwitchCompat_trackTintMode>;

        $i2 = -1;

        $i1 = virtualinvoke $r9.<b.b.f.ma: int d(int,int)>($i1, $i2);

        $r1 = staticinvoke <b.b.f.J: android.graphics.PorterDuff$Mode a(int,android.graphics.PorterDuff$Mode)>($i1, null);

        $r13 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode>;

        if $r13 == $r1 goto label08;

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode> = $r1;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode> = 1;

     label08:
        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint>;

        if $z0 != 0 goto label09;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode>;

        if $z0 == 0 goto label10;

     label09:
        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void applyTrackTint()>();

     label10:
        $i1 = <b.b.j: int SwitchCompat_switchTextAppearance>;

        $i1 = virtualinvoke $r9.<b.b.f.ma: int g(int,int)>($i1, 0);

        if $i1 == 0 goto label11;

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)>($r2, $i1);

     label11:
        $r18 = new b.b.f.F;

        specialinvoke $r18.<b.b.f.F: void <init>(android.widget.TextView)>(r0);

        r0.<androidx.appcompat.widget.SwitchCompat: b.b.f.F mTextHelper> = $r18;

        $r14 = r0.<androidx.appcompat.widget.SwitchCompat: b.b.f.F mTextHelper>;

        virtualinvoke $r14.<b.b.f.F: void a(android.util.AttributeSet,int)>($r3, $i0);

        virtualinvoke $r9.<b.b.f.ma: void a()>();

        $r15 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke $r15.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<androidx.appcompat.widget.SwitchCompat: int mTouchSlop> = $i0;

        $i0 = virtualinvoke $r15.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<androidx.appcompat.widget.SwitchCompat: int mMinFlingVelocity> = $i0;

        virtualinvoke r0.<android.widget.CompoundButton: void refreshDrawableState()>();

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)>($z0);

        return;
    }

    private void animateThumbToCheckedState(boolean)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.animation.ObjectAnimator $r1;
        int $i0;
        float $f0;
        float[] $r3;
        boolean $z0;
        android.util.Property $r2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $f0 = 1.0F;

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        $r2 = <androidx.appcompat.widget.SwitchCompat: android.util.Property THUMB_POS>;

        $r3 = newarray (float)[1];

        $r3[0] = $f0;

        $r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r2, $r3);

        r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator> = $r1;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(250L);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label3;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setAutoCancel(boolean)>(1);

     label3:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    private void applyThumbTint()
    {
        android.content.res.ColorStateList $r2;
        androidx.appcompat.widget.SwitchCompat r0;
        int[] $r4;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 == null goto label4;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint>;

        if $z0 != 0 goto label1;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode>;

        if $z0 == 0 goto label4;

     label1:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $r1 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r1);

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable> = $r1;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r2);

     label2:
        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode>;

        if $z0 == 0 goto label3;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r1, $r3);

     label3:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $r4 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

     label4:
        return;
    }

    private void applyTrackTint()
    {
        android.content.res.ColorStateList $r2;
        androidx.appcompat.widget.SwitchCompat r0;
        int[] $r4;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r1 == null goto label4;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint>;

        if $z0 != 0 goto label1;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode>;

        if $z0 == 0 goto label4;

     label1:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        $r1 = staticinvoke <b.i.c.a.a: android.graphics.drawable.Drawable i(android.graphics.drawable.Drawable)>($r1);

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable> = $r1;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r2);

     label2:
        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode>;

        if $z0 == 0 goto label3;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode>;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r1, $r3);

     label3:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        $r4 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

     label4:
        return;
    }

    private void cancelPositionAnimator()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.animation.ObjectAnimator $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        return;
    }

    private void cancelSuperTouch(android.view.MotionEvent)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.view.MotionEvent $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.MotionEvent;

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);

        virtualinvoke $r1.<android.view.MotionEvent: void setAction(int)>(3);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        virtualinvoke $r1.<android.view.MotionEvent: void recycle()>();

        return;
    }

    public static float constrain(float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2;

        $f1 := @parameter0: float;

        $f2 := @parameter1: float;

        $f0 := @parameter2: float;

        $b0 = $f1 cmpg $f2;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return $f2;

     label1:
        $b0 = $f1 cmpl $f0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return $f0;

     label2:
        return $f1;
    }

    private boolean getTargetCheckedState()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        byte $b0;
        int $i1;
        float $f0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $f0 = r0.<androidx.appcompat.widget.SwitchCompat: float mThumbPosition>;

        $b0 = $f0 cmpl 0.5F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private int getThumbOffset()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        int $i0;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $f0 = r0.<androidx.appcompat.widget.SwitchCompat: float mThumbPosition>;

        $f0 = 1.0F - $f0;

        goto label2;

     label1:
        $f0 = r0.<androidx.appcompat.widget.SwitchCompat: float mThumbPosition>;

     label2:
        $i0 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()>();

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    private int getThumbScrollRange()
    {
        android.graphics.Rect $r1, $r3;
        androidx.appcompat.widget.SwitchCompat r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label3;

        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label1;

        $r1 = staticinvoke <b.b.f.J: android.graphics.Rect d(android.graphics.drawable.Drawable)>($r2);

        goto label2;

     label1:
        $r1 = <b.b.f.J: android.graphics.Rect c>;

     label2:
        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchWidth>;

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mThumbWidth>;

        $i0 = $i0 - $i1;

        $i1 = $r3.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $i1 = $r3.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $i1 = $r1.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        return 0;
    }

    private boolean hitThumb(float, float)
    {
        android.graphics.Rect $r2;
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable $r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i1 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: int getThumbOffset()>();

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i2 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchTop>;

        $i3 = r0.<androidx.appcompat.widget.SwitchCompat: int mTouchSlop>;

        $i2 = $i2 - $i3;

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchLeft>;

        $i1 = $i0 + $i1;

        $i1 = $i1 - $i3;

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mThumbWidth>;

        $i4 = $i0 + $i1;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i4 + $i0;

        $i4 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 + $i4;

        $i0 = $i0 + $i3;

        $i4 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchBottom>;

        $i3 = $i4 + $i3;

        $f2 = (float) $i1;

        $b5 = $f1 cmpl $f2;

        $i1 = (int) $b5;

        if $i1 <= 0 goto label2;

        $f2 = (float) $i0;

        $b5 = $f1 cmpg $f2;

        $i1 = (int) $b5;

        if $i1 >= 0 goto label2;

        $f1 = (float) $i2;

        $b5 = $f0 cmpl $f1;

        $i2 = (int) $b5;

        if $i2 <= 0 goto label2;

        $f1 = (float) $i3;

        $b5 = $f0 cmpg $f1;

        $i2 = (int) $b5;

        if $i2 >= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private android.text.Layout makeLayout(java.lang.CharSequence)
    {
        android.text.StaticLayout $r6;
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r1, $r4;
        android.text.method.TransformationMethod $r5;
        android.text.Layout$Alignment $r3;
        android.text.TextPaint $r2;
        int $i0;
        float $f0;
        double $d0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r4 := @parameter0: java.lang.CharSequence;

        $r5 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod>;

        if $r5 == null goto label1;

        $r4 = interfaceinvoke $r5.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>($r4, r0);

     label1:
        $r1 = $r4;

        $r6 = new android.text.StaticLayout;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        if $r4 == null goto label2;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r4, $r2);

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        goto label3;

     label2:
        $i0 = 0;

     label3:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        specialinvoke $r6.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r1, $r2, $i0, $r3, 1.0F, 0.0F, 1);

        return $r6;
    }

    private void setSwitchTypefaceByIndex(int, int)
    {
        android.graphics.Typeface $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        int $i0, $i1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        if $i1 == 1 goto label3;

        if $i1 == 2 goto label2;

        if $i1 == 3 goto label1;

        $r1 = null;

        goto label4;

     label1:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        goto label4;

     label2:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        goto label4;

     label3:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

     label4:
        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)>($r1, $i0);

        return;
    }

    private void stopDrag(android.view.MotionEvent)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.view.VelocityTracker $r2;
        byte $b1;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.MotionEvent;

        r0.<androidx.appcompat.widget.SwitchCompat: int mTouchMode> = 0;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $z0 = 1;

        if $i0 != 1 goto label1;

        $z1 = virtualinvoke r0.<android.widget.CompoundButton: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $z1 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z2 == 0 goto label7;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;

        $f0 = virtualinvoke $r2.<android.view.VelocityTracker: float getXVelocity()>();

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mMinFlingVelocity>;

        $f2 = (float) $i0;

        $b1 = $f1 cmpl $f2;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label6;

        $z2 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z2 == 0 goto label3;

        $b1 = $f0 cmpg 0.0F;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label4;

        goto label5;

     label3:
        $b1 = $f0 cmpl 0.0F;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        goto label8;

     label6:
        $z0 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()>();

        goto label8;

     label7:
        $z0 = $z1;

     label8:
        if $z0 == $z1 goto label9;

        virtualinvoke r0.<android.widget.CompoundButton: void playSoundEffect(int)>(0);

     label9:
        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)>($z0);

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void cancelSuperTouch(android.view.MotionEvent)>($r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.Rect $r2, $r4;
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Canvas $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        $i3 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchLeft>;

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchTop>;

        $i4 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchRight>;

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchBottom>;

        $i5 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: int getThumbOffset()>();

        $i5 = $i5 + $i3;

        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r3 == null goto label01;

        $r4 = staticinvoke <b.b.f.J: android.graphics.Rect d(android.graphics.drawable.Drawable)>($r3);

        goto label02;

     label01:
        $r4 = <b.b.f.J: android.graphics.Rect c>;

     label02:
        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r3 == null goto label10;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i6 = $r2.<android.graphics.Rect: int left>;

        $i5 = $i5 + $i6;

        if $r4 == null goto label07;

        $i2 = $r4.<android.graphics.Rect: int left>;

        if $i2 <= $i6 goto label03;

        $i6 = $i2 - $i6;

        $i3 = $i3 + $i6;

     label03:
        $i6 = $r4.<android.graphics.Rect: int top>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        if $i6 <= $i2 goto label04;

        $i6 = $i6 - $i2;

        $i6 = $i6 + $i0;

        goto label05;

     label04:
        $i6 = $i0;

     label05:
        $i7 = $r4.<android.graphics.Rect: int right>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        if $i7 <= $i2 goto label06;

        $i2 = $i7 - $i2;

        $i4 = $i4 - $i2;

     label06:
        $i2 = $r4.<android.graphics.Rect: int bottom>;

        $i7 = $r2.<android.graphics.Rect: int bottom>;

        if $i2 <= $i7 goto label08;

        $i2 = $i2 - $i7;

        $i2 = $i1 - $i2;

        goto label09;

     label07:
        $i6 = $i0;

     label08:
        $i2 = $i1;

     label09:
        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i6, $i4, $i2);

     label10:
        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r3 == null goto label11;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i3 = $r2.<android.graphics.Rect: int left>;

        $i3 = $i5 - $i3;

        $i4 = r0.<androidx.appcompat.widget.SwitchCompat: int mThumbWidth>;

        $i5 = $i5 + $i4;

        $i4 = $r2.<android.graphics.Rect: int right>;

        $i5 = $i5 + $i4;

        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i0, $i5, $i1);

        $r3 = virtualinvoke r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable getBackground()>();

        if $r3 == null goto label11;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,int,int,int,int)>($r3, $i3, $i0, $i5, $i1);

     label11:
        specialinvoke r0.<android.widget.CompoundButton: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        int $i0;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        specialinvoke r0.<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>($f0, $f1);

     label1:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 == null goto label2;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,float,float)>($r1, $f0, $f1);

     label2:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r1 == null goto label3;

        staticinvoke <b.i.c.a.a: void a(android.graphics.drawable.Drawable,float,float)>($r1, $f0, $f1);

     label3:
        return;
    }

    public void drawableStateChanged()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        specialinvoke r0.<android.widget.CompoundButton: void drawableStateChanged()>();

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $z0 = 0;

        if $r2 == null goto label1;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label1;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

     label1:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label2;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label2;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        $z0 = $z0 | $z1;

     label2:
        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.CompoundButton: void invalidate()>();

     label3:
        return;
    }

    public int getCompoundPaddingLeft()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 != 0 goto label1;

        $i0 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchWidth>;

        $i0 = $i0 + $i1;

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchPadding>;

        $i0 = $i0 + $i1;

     label2:
        return $i0;
    }

    public int getCompoundPaddingRight()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchWidth>;

        $i0 = $i0 + $i1;

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchPadding>;

        $i0 = $i0 + $i1;

     label2:
        return $i0;
    }

    public boolean getShowText()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        boolean z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mShowText>;

        return z0;
    }

    public boolean getSplitTrack()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        boolean z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack>;

        return z0;
    }

    public int getSwitchMinWidth()
    {
        int i0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth>;

        return i0;
    }

    public int getSwitchPadding()
    {
        int i0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchPadding>;

        return i0;
    }

    public java.lang.CharSequence getTextOff()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff>;

        return r1;
    }

    public java.lang.CharSequence getTextOn()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn>;

        return r1;
    }

    public android.graphics.drawable.Drawable getThumbDrawable()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        return r1;
    }

    public int getThumbTextPadding()
    {
        int i0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding>;

        return i0;
    }

    public android.content.res.ColorStateList getThumbTintList()
    {
        android.content.res.ColorStateList r1;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList>;

        return r1;
    }

    public android.graphics.PorterDuff$Mode getThumbTintMode()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode>;

        return r1;
    }

    public android.graphics.drawable.Drawable getTrackDrawable()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        return r1;
    }

    public android.content.res.ColorStateList getTrackTintList()
    {
        android.content.res.ColorStateList r1;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList>;

        return r1;
    }

    public android.graphics.PorterDuff$Mode getTrackTintMode()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode>;

        return r1;
    }

    public void jumpDrawablesToCurrentState()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.animation.ObjectAnimator $r2;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        specialinvoke r0.<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator>;

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<android.animation.ObjectAnimator: boolean isStarted()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void end()>();

        r0.<androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator> = null;

     label3:
        return;
    }

    public int[] onCreateDrawableState(int)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        int[] $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $r1 = specialinvoke r0.<android.widget.CompoundButton: int[] onCreateDrawableState(int)>($i0);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <androidx.appcompat.widget.SwitchCompat: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.CompoundButton: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label1:
        return $r1;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.graphics.Rect $r2, $r5;
        android.graphics.Region$Op $r6;
        android.graphics.drawable.Drawable $r3, $r4;
        android.content.res.ColorStateList $r9;
        int[] $r8;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Canvas $r1;
        boolean $z0;
        androidx.appcompat.widget.SwitchCompat r0;
        android.text.Layout $r7;
        android.text.TextPaint $r10;
        float $f0, $f1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r3 == null goto label01;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        goto label02;

     label01:
        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

     label02:
        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchTop>;

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchBottom>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + $i2;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i2;

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r3 == null goto label04;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack>;

        if $z0 == 0 goto label03;

        if $r4 == null goto label03;

        $r5 = staticinvoke <b.b.f.J: android.graphics.Rect d(android.graphics.drawable.Drawable)>($r4);

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r2);

        $i2 = $r2.<android.graphics.Rect: int left>;

        $i3 = $r5.<android.graphics.Rect: int left>;

        $i2 = $i2 + $i3;

        $r2.<android.graphics.Rect: int left> = $i2;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i3 = $r5.<android.graphics.Rect: int right>;

        $i2 = $i2 - $i3;

        $r2.<android.graphics.Rect: int right> = $i2;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r6 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>($r2, $r6);

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

        goto label04;

     label03:
        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label04:
        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        if $r4 == null goto label05;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label05:
        $z0 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()>();

        if $z0 == 0 goto label06;

        $r7 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout>;

        goto label07;

     label06:
        $r7 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout>;

     label07:
        if $r7 == null goto label11;

        $r8 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        $r9 = r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors>;

        if $r9 == null goto label08;

        $r10 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $i3 = virtualinvoke $r9.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, 0);

        virtualinvoke $r10.<android.text.TextPaint: void setColor(int)>($i3);

     label08:
        $r10 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $r10.<android.text.TextPaint: int[] drawableState> = $r8;

        if $r4 == null goto label09;

        $r2 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i3 = $r2.<android.graphics.Rect: int left>;

        $i4 = $r2.<android.graphics.Rect: int right>;

        $i3 = $i3 + $i4;

        goto label10;

     label09:
        $i3 = virtualinvoke r0.<android.widget.CompoundButton: int getWidth()>();

     label10:
        $i3 = $i3 / 2;

        $i4 = virtualinvoke $r7.<android.text.Layout: int getWidth()>();

        $i4 = $i4 / 2;

        $i3 = $i3 - $i4;

        $i0 = $i0 + $i1;

        $i0 = $i0 / 2;

        $i1 = virtualinvoke $r7.<android.text.Layout: int getHeight()>();

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i3;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        virtualinvoke $r7.<android.text.Layout: void draw(android.graphics.Canvas)>($r1);

     label11:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.accessibility.AccessibilityEvent $r1;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>("android.widget.Switch");

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r2, $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>("android.widget.Switch");

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff>;

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label4;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r2);

        return;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r2);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r4);

     label4:
        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        android.graphics.Rect $r2, $r3;
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.CompoundButton: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $i3 = 0;

        if $r1 == null goto label03;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r1 == null goto label01;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        goto label02;

     label01:
        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

     label02:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $r3 = staticinvoke <b.b.f.J: android.graphics.Rect d(android.graphics.drawable.Drawable)>($r1);

        $i0 = $r3.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i0 = $r3.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        goto label04;

     label03:
        $i2 = 0;

     label04:
        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 == 0 goto label05;

        $i0 = virtualinvoke r0.<android.widget.CompoundButton: int getPaddingLeft()>();

        $i0 = $i0 + $i2;

        $i1 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchWidth>;

        $i1 = $i1 + $i0;

        $i1 = $i1 - $i2;

        $i1 = $i1 - $i3;

        goto label06;

     label05:
        $i0 = virtualinvoke r0.<android.widget.CompoundButton: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.CompoundButton: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = $i0 - $i3;

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchWidth>;

        $i0 = $i1 - $i0;

        $i0 = $i0 + $i2;

        $i0 = $i0 + $i3;

     label06:
        $i2 = virtualinvoke r0.<android.widget.CompoundButton: int getGravity()>();

        $i2 = $i2 & 112;

        if $i2 == 16 goto label09;

        if $i2 == 80 goto label08;

        $i3 = virtualinvoke r0.<android.widget.CompoundButton: int getPaddingTop()>();

        $i2 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchHeight>;

     label07:
        $i2 = $i2 + $i3;

        goto label10;

     label08:
        $i2 = virtualinvoke r0.<android.widget.CompoundButton: int getHeight()>();

        $i3 = virtualinvoke r0.<android.widget.CompoundButton: int getPaddingBottom()>();

        $i2 = $i2 - $i3;

        $i3 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchHeight>;

        $i3 = $i2 - $i3;

        goto label10;

     label09:
        $i2 = virtualinvoke r0.<android.widget.CompoundButton: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.widget.CompoundButton: int getHeight()>();

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<android.widget.CompoundButton: int getPaddingBottom()>();

        $i2 = $i2 - $i3;

        $i3 = $i2 / 2;

        $i2 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchHeight>;

        $i4 = $i2 / 2;

        $i3 = $i3 - $i4;

        goto label07;

     label10:
        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchLeft> = $i0;

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchTop> = $i3;

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchBottom> = $i2;

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchRight> = $i1;

        return;
    }

    public void onMeasure(int, int)
    {
        android.graphics.Rect $r3;
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r2;
        android.graphics.drawable.Drawable $r4;
        android.text.Layout $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mShowText>;

        if $z0 == 0 goto label02;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout>;

        if $r1 != null goto label01;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn>;

        $r1 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout makeLayout(java.lang.CharSequence)>($r2);

        r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout> = $r1;

     label01:
        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout>;

        if $r1 != null goto label02;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff>;

        $r1 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout makeLayout(java.lang.CharSequence)>($r2);

        r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout> = $r1;

     label02:
        $r3 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect>;

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $i2 = 0;

        if $r4 == null goto label03;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $i3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i4 = $r3.<android.graphics.Rect: int left>;

        $i3 = $i3 - $i4;

        $i4 = $r3.<android.graphics.Rect: int right>;

        $i4 = $i3 - $i4;

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        $i3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label04;

     label03:
        $i4 = 0;

        $i3 = 0;

     label04:
        $z0 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mShowText>;

        if $z0 == 0 goto label05;

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout>;

        $i5 = virtualinvoke $r1.<android.text.Layout: int getWidth()>();

        $r1 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout>;

        $i6 = virtualinvoke $r1.<android.text.Layout: int getWidth()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $i6 = r0.<androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding>;

        $i6 = $i6 * 2;

        $i5 = $i5 + $i6;

        goto label06;

     label05:
        $i5 = 0;

     label06:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        r0.<androidx.appcompat.widget.SwitchCompat: int mThumbWidth> = $i4;

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r4 == null goto label07;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        $i2 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label08;

     label07:
        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

     label08:
        $i5 = $r3.<android.graphics.Rect: int left>;

        $i4 = $r3.<android.graphics.Rect: int right>;

        $r4 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r4 == null goto label09;

        $r3 = staticinvoke <b.b.f.J: android.graphics.Rect d(android.graphics.drawable.Drawable)>($r4);

        $i6 = $r3.<android.graphics.Rect: int left>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $i6 = $r3.<android.graphics.Rect: int right>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i6);

     label09:
        $i6 = r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth>;

        $i7 = r0.<androidx.appcompat.widget.SwitchCompat: int mThumbWidth>;

        $i7 = $i7 * 2;

        $i5 = $i7 + $i5;

        $i4 = $i5 + $i4;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i4);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchWidth> = $i4;

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchHeight> = $i2;

        specialinvoke r0.<android.widget.CompoundButton: void onMeasure(int,int)>($i1, $i0);

        $i1 = virtualinvoke r0.<android.widget.CompoundButton: int getMeasuredHeight()>();

        if $i1 >= $i2 goto label10;

        $i1 = virtualinvoke r0.<android.widget.CompoundButton: int getMeasuredWidthAndState()>();

        virtualinvoke r0.<android.widget.CompoundButton: void setMeasuredDimension(int,int)>($i1, $i2);

     label10:
        return;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        java.util.List $r3;
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r2;
        android.view.accessibility.AccessibilityEvent $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff>;

     label2:
        if $r2 == null goto label3;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label3:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.ViewParent $r3;
        androidx.appcompat.widget.SwitchCompat r0;
        android.view.VelocityTracker $r2;
        byte $b1;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 == 0 goto label11;

        if $i0 == 1 goto label09;

        if $i0 == 2 goto label01;

        if $i0 == 3 goto label09;

        goto label12;

     label01:
        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mTouchMode>;

        if $i0 == 0 goto label12;

        if $i0 == 1 goto label07;

        if $i0 == 2 goto label02;

        goto label12;

     label02:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()>();

        $f1 = r0.<androidx.appcompat.widget.SwitchCompat: float mTouchX>;

        $f1 = $f0 - $f1;

        if $i0 == 0 goto label03;

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        goto label05;

     label03:
        $b1 = $f1 cmpl 0.0F;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label04;

        $f1 = 1.0F;

        goto label05;

     label04:
        $f1 = -1.0F;

     label05:
        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 == 0 goto label06;

        $f1 = neg $f1;

     label06:
        $f2 = r0.<androidx.appcompat.widget.SwitchCompat: float mThumbPosition>;

        $f1 = $f2 + $f1;

        $f1 = staticinvoke <androidx.appcompat.widget.SwitchCompat: float constrain(float,float,float)>($f1, 0.0F, 1.0F);

        $f2 = r0.<androidx.appcompat.widget.SwitchCompat: float mThumbPosition>;

        $b1 = $f1 cmpl $f2;

        if $b1 == 0 goto label13;

        r0.<androidx.appcompat.widget.SwitchCompat: float mTouchX> = $f0;

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)>($f1);

        return 1;

     label07:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f2 = r0.<androidx.appcompat.widget.SwitchCompat: float mTouchX>;

        $f2 = $f0 - $f2;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mTouchSlop>;

        $f3 = (float) $i0;

        $b1 = $f2 cmpl $f3;

        $i0 = (int) $b1;

        if $i0 > 0 goto label08;

        $f2 = r0.<androidx.appcompat.widget.SwitchCompat: float mTouchY>;

        $f2 = $f1 - $f2;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mTouchSlop>;

        $f3 = (float) $i0;

        $b1 = $f2 cmpl $f3;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label12;

     label08:
        r0.<androidx.appcompat.widget.SwitchCompat: int mTouchMode> = 2;

        $r3 = virtualinvoke r0.<android.widget.CompoundButton: android.view.ViewParent getParent()>();

        interfaceinvoke $r3.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        r0.<androidx.appcompat.widget.SwitchCompat: float mTouchX> = $f0;

        r0.<androidx.appcompat.widget.SwitchCompat: float mTouchY> = $f1;

        return 1;

     label09:
        $i0 = r0.<androidx.appcompat.widget.SwitchCompat: int mTouchMode>;

        if $i0 != 2 goto label10;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void stopDrag(android.view.MotionEvent)>($r1);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return 1;

     label10:
        r0.<androidx.appcompat.widget.SwitchCompat: int mTouchMode> = 0;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

        goto label12;

     label11:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isEnabled()>();

        if $z0 == 0 goto label12;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: boolean hitThumb(float,float)>($f0, $f1);

        if $z0 == 0 goto label12;

        r0.<androidx.appcompat.widget.SwitchCompat: int mTouchMode> = 1;

        r0.<androidx.appcompat.widget.SwitchCompat: float mTouchX> = $f0;

        r0.<androidx.appcompat.widget.SwitchCompat: float mTouchY> = $f1;

     label12:
        $z0 = specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label13:
        return 1;
    }

    public void setChecked(boolean)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        float $f0;
        android.os.IBinder $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z0);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: android.os.IBinder getWindowToken()>();

        if $r1 == null goto label1;

        $z1 = staticinvoke <b.i.i.y: boolean E(android.view.View)>(r0);

        if $z1 == 0 goto label1;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void animateThumbToCheckedState(boolean)>($z0);

        return;

     label1:
        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void cancelPositionAnimator()>();

        if $z0 == 0 goto label2;

        $f0 = 1.0F;

        goto label3;

     label2:
        $f0 = 0.0F;

     label3:
        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)>($f0);

        return;
    }

    public void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.view.ActionMode$Callback $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.view.ActionMode$Callback;

        $r1 = staticinvoke <b.i.j.j: android.view.ActionMode$Callback a(android.widget.TextView,android.view.ActionMode$Callback)>(r0, $r1);

        specialinvoke r0.<android.widget.CompoundButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>($r1);

        return;
    }

    public void setShowText(boolean)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 := @parameter0: boolean;

        $z1 = r0.<androidx.appcompat.widget.SwitchCompat: boolean mShowText>;

        if $z1 == $z0 goto label1;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mShowText> = $z0;

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

     label1:
        return;
    }

    public void setSplitTrack(boolean)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 := @parameter0: boolean;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack> = $z0;

        virtualinvoke r0.<android.widget.CompoundButton: void invalidate()>();

        return;
    }

    public void setSwitchMinWidth(int)
    {
        int $i0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth> = $i0;

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setSwitchPadding(int)
    {
        int $i0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.SwitchCompat: int mSwitchPadding> = $i0;

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setSwitchTextAppearance(android.content.Context, int)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        androidx.appcompat.text.AllCapsTransformationMethod $r6;
        b.b.f.ma $r3;
        android.content.res.ColorStateList $r4;
        byte $b2;
        int[] $r2;
        android.text.TextPaint $r5;
        int $i0, $i1, $i3;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.content.Context;

        $i1 := @parameter1: int;

        $r2 = <b.b.j: int[] TextAppearance>;

        $r3 = staticinvoke <b.b.f.ma: b.b.f.ma a(android.content.Context,int,int[])>($r1, $i1, $r2);

        $i1 = <b.b.j: int TextAppearance_android_textColor>;

        $r4 = virtualinvoke $r3.<b.b.f.ma: android.content.res.ColorStateList a(int)>($i1);

        if $r4 == null goto label1;

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors> = $r4;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<android.widget.CompoundButton: android.content.res.ColorStateList getTextColors()>();

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors> = $r4;

     label2:
        $i1 = <b.b.j: int TextAppearance_android_textSize>;

        $i1 = virtualinvoke $r3.<b.b.f.ma: int c(int,int)>($i1, 0);

        if $i1 == 0 goto label3;

        $f0 = (float) $i1;

        $r5 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r5.<android.text.TextPaint: float getTextSize()>();

        $b2 = $f0 cmpl $f1;

        if $b2 == 0 goto label3;

        $r5 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        virtualinvoke $r5.<android.text.TextPaint: void setTextSize(float)>($f0);

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

     label3:
        $i1 = <b.b.j: int TextAppearance_android_typeface>;

        $i0 = -1;

        $i1 = virtualinvoke $r3.<b.b.f.ma: int d(int,int)>($i1, $i0);

        $i0 = <b.b.j: int TextAppearance_android_textStyle>;

        $i3 = -1;

        $i0 = virtualinvoke $r3.<b.b.f.ma: int d(int,int)>($i0, $i3);

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setSwitchTypefaceByIndex(int,int)>($i1, $i0);

        $i1 = <b.b.j: int TextAppearance_textAllCaps>;

        $z0 = virtualinvoke $r3.<b.b.f.ma: boolean a(int,boolean)>($i1, 0);

        if $z0 == 0 goto label4;

        $r6 = new androidx.appcompat.text.AllCapsTransformationMethod;

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: android.content.Context getContext()>();

        specialinvoke $r6.<androidx.appcompat.text.AllCapsTransformationMethod: void <init>(android.content.Context)>($r1);

        r0.<androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod> = $r6;

        goto label5;

     label4:
        r0.<androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod> = null;

     label5:
        virtualinvoke $r3.<b.b.f.ma: void a()>();

        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface)
    {
        android.graphics.Typeface $r1, $r3;
        androidx.appcompat.widget.SwitchCompat r0;
        android.text.TextPaint $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 == null goto label1;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        $z0 = virtualinvoke $r3.<android.graphics.Typeface: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 != null goto label3;

        if $r1 == null goto label3;

     label2:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r1);

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        virtualinvoke r0.<android.widget.CompoundButton: void invalidate()>();

     label3:
        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface, int)
    {
        android.graphics.Typeface $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        android.text.TextPaint $r2;
        int $i0, $i1, $i2;
        float $f0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.Typeface;

        $i0 := @parameter1: int;

        $f0 = 0.0F;

        $z0 = 0;

        if $i0 <= 0 goto label7;

        if $r1 != null goto label1;

        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>($i0);

        goto label2;

     label1:
        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r1, $i0);

     label2:
        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)>($r1);

        if $r1 == null goto label3;

        $i1 = virtualinvoke $r1.<android.graphics.Typeface: int getStyle()>();

        goto label4;

     label3:
        $i1 = 0;

     label4:
        $i2 = -1;

        $i1 = $i1 ^ $i2;

        $i1 = $i1 & $i0;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $i0 = $i1 & 1;

        if $i0 == 0 goto label5;

        $z0 = 1;

     label5:
        virtualinvoke $r2.<android.text.TextPaint: void setFakeBoldText(boolean)>($z0);

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        $i0 = $i1 & 2;

        if $i0 == 0 goto label6;

        $f0 = -0.25F;

     label6:
        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>($f0);

        return;

     label7:
        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)>($r1);

        return;
    }

    public void setTextOff(java.lang.CharSequence)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff> = $r1;

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setTextOn(java.lang.CharSequence)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn> = $r1;

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setThumbDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable> = $r1;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setThumbPosition(float)
    {
        float $f0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $f0 := @parameter0: float;

        r0.<androidx.appcompat.widget.SwitchCompat: float mThumbPosition> = $f0;

        virtualinvoke r0.<android.widget.CompoundButton: void invalidate()>();

        return;
    }

    public void setThumbResource(int)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setThumbTextPadding(int)
    {
        int $i0;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding> = $i0;

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setThumbTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList> = $r1;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint> = 1;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void applyThumbTint()>();

        return;
    }

    public void setThumbTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode> = $r1;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode> = 1;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void applyThumbTint()>();

        return;
    }

    public void setTrackDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable> = $r1;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public void setTrackResource(int)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.SwitchCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setTrackTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.SwitchCompat r0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList> = $r1;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint> = 1;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void applyTrackTint()>();

        return;
    }

    public void setTrackTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode> = $r1;

        r0.<androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode> = 1;

        specialinvoke r0.<androidx.appcompat.widget.SwitchCompat: void applyTrackTint()>();

        return;
    }

    public void toggle()
    {
        androidx.appcompat.widget.SwitchCompat r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)>($z0);

        return;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.SwitchCompat r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.SwitchCompat;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 == $r2 goto label2;

        $r2 = r0.<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r1 != $r2 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
