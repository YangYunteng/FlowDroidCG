public abstract class l.j extends java.lang.Object implements l.x
{
    public final l.x a;

    public void <init>(l.x)
    {
        l.j r0;
        java.lang.IllegalArgumentException $r2;
        l.x $r1;

        r0 := @this: l.j;

        $r1 := @parameter0: l.x;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label1;

        r0.<l.j: l.x a> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("delegate == null");

        throw $r2;
    }

    public l.z b()
    {
        l.j r0;
        l.z $r1;
        l.x $r2;

        r0 := @this: l.j;

        $r2 = r0.<l.j: l.x a>;

        $r1 = interfaceinvoke $r2.<l.x: l.z b()>();

        return $r1;
    }

    public final l.x c()
    {
        l.j r0;
        l.x r1;

        r0 := @this: l.j;

        r1 = r0.<l.j: l.x a>;

        return r1;
    }

    public void close()
    {
        l.j r0;
        l.x $r1;

        r0 := @this: l.j;

        $r1 = r0.<l.j: l.x a>;

        interfaceinvoke $r1.<l.x: void close()>();

        return;
    }

    public java.lang.String toString()
    {
        l.x $r4;
        l.j r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: l.j;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = r0.<l.j: l.x a>;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
