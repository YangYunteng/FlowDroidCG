public final class androidx.lifecycle.Input_collectorKt extends java.lang.Object
{

    public static final androidx.lifecycle.model.InputModel collectAndVerifyInput(javax.'annotation'.processing.ProcessingEnvironment, javax.'annotation'.processing.RoundEnvironment)
    {
        androidx.lifecycle.Validator $r2;
        javax.lang.model.element.TypeElement $r7;
        java.util.ArrayList $r5;
        java.util.Map $r13, $r14;
        int $i0;
        androidx.lifecycle.ObserversCollector $r3;
        boolean $z0;
        i.f $r16;
        java.util.Iterator $r6;
        javax.lang.model.element.ElementKind $r10, $r11;
        java.util.Set $r4, $r15;
        javax.lang.model.element.Element $r9;
        java.util.List $r12;
        androidx.lifecycle.model.InputModel $r17;
        javax.'annotation'.processing.RoundEnvironment $r1;
        javax.'annotation'.processing.ProcessingEnvironment $r0;
        java.lang.Object $r8;

        $r0 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        $r1 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "processingEnv");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "roundEnv");

        $r2 = new androidx.lifecycle.Validator;

        specialinvoke $r2.<androidx.lifecycle.Validator: void <init>(javax.'annotation'.processing.ProcessingEnvironment)>($r0);

        $r3 = new androidx.lifecycle.ObserversCollector;

        specialinvoke $r3.<androidx.lifecycle.ObserversCollector: void <init>(javax.'annotation'.processing.ProcessingEnvironment)>($r0);

        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Landroidx/lifecycle/OnLifecycleEvent;");

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r4, "roundEnv.getElementsAnno\u2026fecycleEvent::class.java)");

        $r5 = new java.util.ArrayList;

        $i0 = staticinvoke <i.a.i: int a(java.lang.Iterable,int)>($r4, 10);

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        $r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        $r7 = null;

        if $z0 == 0 goto label04;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (javax.lang.model.element.Element) $r8;

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r9, "elem");

        $r10 = interfaceinvoke $r9.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r11 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind METHOD>;

        if $r10 == $r11 goto label02;

        virtualinvoke $r2.<androidx.lifecycle.Validator: void printErrorMessage(java.lang.CharSequence,javax.lang.model.element.Element)>("OnLifecycleEvent can only be added to methods", $r9);

        goto label03;

     label02:
        $r9 = interfaceinvoke $r9.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r9, "enclosingElement");

        $z0 = virtualinvoke $r2.<androidx.lifecycle.Validator: boolean validateClass(javax.lang.model.element.Element)>($r9);

        if $z0 == 0 goto label03;

        $r7 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r9);

     label03:
        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r7);

        goto label01;

     label04:
        $r12 = staticinvoke <i.a.p: java.util.List a(java.lang.Iterable)>($r5);

        $r4 = staticinvoke <i.a.p: java.util.Set e(java.lang.Iterable)>($r12);

        $r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (javax.lang.model.element.TypeElement) $r8;

        virtualinvoke $r3.<androidx.lifecycle.ObserversCollector: androidx.lifecycle.model.LifecycleObserverInfo collect(javax.lang.model.element.TypeElement)>($r7);

        goto label05;

     label06:
        $r13 = virtualinvoke $r3.<androidx.lifecycle.ObserversCollector: java.util.Map getObservers()>();

        $r14 = virtualinvoke $r3.<androidx.lifecycle.ObserversCollector: java.util.Map getObservers()>();

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (javax.lang.model.element.TypeElement) $r8;

        $r12 = virtualinvoke $r3.<androidx.lifecycle.ObserversCollector: java.util.List generatedAdapterInfoFor(javax.lang.model.element.TypeElement)>($r7);

        if $r12 == null goto label08;

        $r16 = staticinvoke <i.j: i.f a(java.lang.Object,java.lang.Object)>($r7, $r12);

        goto label09;

     label08:
        $r16 = null;

     label09:
        if $r16 == null goto label07;

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label07;

     label10:
        $r14 = staticinvoke <i.a.x: java.util.Map a(java.lang.Iterable)>($r5);

        $r17 = new androidx.lifecycle.model.InputModel;

        specialinvoke $r17.<androidx.lifecycle.model.InputModel: void <init>(java.util.Set,java.util.Map,java.util.Map)>($r4, $r13, $r14);

        return $r17;
    }
}
