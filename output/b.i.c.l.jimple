public class b.i.c.l extends b.i.c.k
{

    public void <init>()
    {
        b.i.c.l r0;

        r0 := @this: b.i.c.l;

        specialinvoke r0.<b.i.c.k: void <init>()>();

        return;
    }

    public android.graphics.Typeface a(java.lang.Object)
    {
        android.graphics.Typeface $r7;
        java.lang.Object[] $r5;
        java.lang.ReflectiveOperationException $r8;
        java.lang.RuntimeException $r9;
        java.lang.Integer $r6;
        b.i.c.l r0;
        int $i0;
        java.lang.Object $r1, $r3;
        java.lang.Class $r2;
        java.lang.reflect.Method $r4;

        r0 := @this: b.i.c.l;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.i.c.k: java.lang.Class g>;

     label01:
        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, 1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r3, 0, $r1);

     label02:
        $r4 = r0.<b.i.c.k: java.lang.reflect.Method m>;

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = $r3;

        $r5[1] = "sans-serif";

        $i0 = -1;

     label03:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        $r5[2] = $r6;

        $i0 = -1;

     label05:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label06:
        $r5[3] = $r6;

     label07:
        $r1 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

     label08:
        $r7 = (android.graphics.Typeface) $r1;

        return $r7;

     label09:
        $r8 := @caughtexception;

        goto label11;

     label10:
        $r8 := @caughtexception;

     label11:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }

    public java.lang.reflect.Method d(java.lang.Class)
    {
        java.lang.Class[] $r3;
        java.lang.Class $r1, $r4;
        java.lang.Object $r2;
        java.lang.reflect.Method $r5;
        b.i.c.l r0;

        r0 := @this: b.i.c.l;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, 1);

        $r1 = class "Landroid/graphics/Typeface;";

        $r3 = newarray (java.lang.Class)[4];

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r3[0] = $r4;

        $r3[1] = class "Ljava/lang/String;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r3[3] = $r4;

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createFromFamiliesWithDefault", $r3);

        virtualinvoke $r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        return $r5;
    }
}
