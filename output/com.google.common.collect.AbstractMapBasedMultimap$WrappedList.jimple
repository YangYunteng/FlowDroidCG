public class com.google.common.collect.AbstractMapBasedMultimap$WrappedList extends com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection implements java.util.List
{
    public final com.google.common.collect.AbstractMapBasedMultimap this$0;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap, java.lang.Object, java.util.List, com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.List $r3;
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.util.List;

        $r4 := @parameter3: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: com.google.common.collect.AbstractMapBasedMultimap this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>($r1, $r2, $r3, $r4);

        return;
    }

    public void add(int, java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r3;
        com.google.common.collect.AbstractMapBasedMultimap $r4;
        java.util.Collection $r2;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection getDelegate()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        $r3 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i0, $r1);

        $r4 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$208(com.google.common.collect.AbstractMapBasedMultimap)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void addToMap()>();

     label1:
        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Collection $r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r2;
        com.google.common.collect.AbstractMapBasedMultimap $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.Collection;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>($i0, $r1);

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection getDelegate()>();

        $i2 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $i0 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$200(com.google.common.collect.AbstractMapBasedMultimap)>($r3);

        $i2 = $i2 - $i1;

        $i0 = $i0 + $i2;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$202(com.google.common.collect.AbstractMapBasedMultimap,int)>($r3, $i0);

        if $i1 != 0 goto label2;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void addToMap()>();

     label2:
        return $z0;
    }

    public java.lang.Object get(int)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r2;
    }

    public java.util.List getListDelegate()
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r2;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Collection getDelegate()>();

        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>($r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>($r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList)>(r0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        int $i0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int)>(r0, $i0);

        return $r1;
    }

    public java.lang.Object remove(int)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r1;
        com.google.common.collect.AbstractMapBasedMultimap $r3;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$210(com.google.common.collect.AbstractMapBasedMultimap)>($r3);

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void removeIfEmpty()>();

        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        return $r1;
    }

    public java.util.List subList(int, int)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList r0;
        com.google.common.collect.AbstractMapBasedMultimap $r1;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r4;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.Object getKey()>();

        $r3 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List getListDelegate()>();

        $r3 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

        if $r4 != null goto label1;

        $r4 = r0;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor()>();

     label2:
        $r3 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: java.util.List access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>($r1, $r2, $r3, $r4);

        return $r3;
    }
}
