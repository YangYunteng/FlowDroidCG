public class com.google.common.io.AppendableWriter extends java.io.Writer
{
    public boolean closed;
    public final java.lang.Appendable target;

    public void <init>(java.lang.Appendable)
    {
        com.google.common.io.AppendableWriter r0;
        java.lang.Appendable $r1;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r1 := @parameter0: java.lang.Appendable;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target> = $r1;

        return;
    }

    private void checkNotClosed()
    {
        java.io.IOException $r1;
        com.google.common.io.AppendableWriter r0;
        boolean $z0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $z0 = r0.<com.google.common.io.AppendableWriter: boolean closed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Cannot write to a closed writer.");

        throw $r1;
    }

    public java.io.Writer append(char)
    {
        char $c0;
        com.google.common.io.AppendableWriter r0;
        java.lang.Appendable $r1;

        r0 := @this: com.google.common.io.AppendableWriter;

        $c0 := @parameter0: char;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r1 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

        return r0;
    }

    public java.io.Writer append(java.lang.CharSequence)
    {
        com.google.common.io.AppendableWriter r0;
        java.lang.CharSequence $r1;
        java.lang.Appendable $r2;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r2 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

        return r0;
    }

    public java.io.Writer append(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r1;
        java.lang.Appendable $r2;
        int $i0, $i1;
        com.google.common.io.AppendableWriter r0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r2 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return r0;
    }

    public volatile java.lang.Appendable append(char)
    {
        java.io.Writer $r1;
        char $c0;
        com.google.common.io.AppendableWriter r0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<com.google.common.io.AppendableWriter: java.io.Writer append(char)>($c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence)
    {
        java.io.Writer $r1;
        com.google.common.io.AppendableWriter r0;
        java.lang.CharSequence $r2;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r2 := @parameter0: java.lang.CharSequence;

        $r1 = virtualinvoke r0.<com.google.common.io.AppendableWriter: java.io.Writer append(java.lang.CharSequence)>($r2);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r2;
        int $i0, $i1;
        java.io.Writer $r1;
        com.google.common.io.AppendableWriter r0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.google.common.io.AppendableWriter: java.io.Writer append(java.lang.CharSequence,int,int)>($r2, $i0, $i1);

        return $r1;
    }

    public void close()
    {
        java.lang.Appendable $r1;
        java.io.Closeable $r2;
        com.google.common.io.AppendableWriter r0;
        boolean $z0;

        r0 := @this: com.google.common.io.AppendableWriter;

        r0.<com.google.common.io.AppendableWriter: boolean closed> = 1;

        $r1 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        $z0 = $r1 instanceof java.io.Closeable;

        if $z0 == 0 goto label1;

        $r2 = (java.io.Closeable) $r1;

        interfaceinvoke $r2.<java.io.Closeable: void close()>();

     label1:
        return;
    }

    public void flush()
    {
        java.lang.Appendable $r1;
        com.google.common.io.AppendableWriter r0;
        boolean $z0;
        java.io.Flushable $r2;

        r0 := @this: com.google.common.io.AppendableWriter;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r1 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        $z0 = $r1 instanceof java.io.Flushable;

        if $z0 == 0 goto label1;

        $r2 = (java.io.Flushable) $r1;

        interfaceinvoke $r2.<java.io.Flushable: void flush()>();

     label1:
        return;
    }

    public void write(int)
    {
        java.lang.Appendable $r1;
        int $i0;
        char $c1;
        com.google.common.io.AppendableWriter r0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r1 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        $c1 = (char) $i0;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c1);

        return;
    }

    public void write(java.lang.String)
    {
        java.lang.String $r1;
        com.google.common.io.AppendableWriter r0;
        java.lang.Appendable $r2;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r2 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

        return;
    }

    public void write(java.lang.String, int, int)
    {
        java.lang.Appendable $r2;
        int $i0, $i1;
        java.lang.String $r1;
        com.google.common.io.AppendableWriter r0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r2 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        $i1 = $i1 + $i0;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return;
    }

    public void write(char[], int, int)
    {
        java.lang.Appendable $r2;
        int $i0, $i1;
        char[] $r1;
        java.lang.String $r3;
        com.google.common.io.AppendableWriter r0;

        r0 := @this: com.google.common.io.AppendableWriter;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<com.google.common.io.AppendableWriter: void checkNotClosed()>();

        $r2 = r0.<com.google.common.io.AppendableWriter: java.lang.Appendable target>;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return;
    }
}
