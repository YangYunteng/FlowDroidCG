public class org.dom4j.bean.BeanMetaData extends java.lang.Object
{
    public static final org.dom4j.DocumentFactory DOCUMENT_FACTORY;
    public static final java.lang.Object[] NULL_ARGS;
    public static java.util.Map singletonCache;
    public java.lang.Class beanClass;
    public java.util.Map nameMap;
    public java.beans.PropertyDescriptor[] propertyDescriptors;
    public org.dom4j.QName[] qNames;
    public java.lang.reflect.Method[] readMethods;
    public java.lang.reflect.Method[] writeMethods;

    static void <clinit>()
    {
        java.util.HashMap $r2;
        java.lang.Object[] $r1;
        org.dom4j.DocumentFactory $r0;

        $r1 = newarray (java.lang.Object)[0];

        <org.dom4j.bean.BeanMetaData: java.lang.Object[] NULL_ARGS> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache> = $r2;

        $r0 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        <org.dom4j.bean.BeanMetaData: org.dom4j.DocumentFactory DOCUMENT_FACTORY> = $r0;

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Throwable $r4;
        java.beans.PropertyDescriptor[] $r3;
        org.dom4j.QName[] $r5;
        java.util.HashMap $r14;
        java.lang.Integer $r12, $r15;
        java.lang.reflect.Method[] $r6;
        org.dom4j.DocumentFactory $r9;
        java.beans.BeanInfo $r2;
        java.util.Map $r13;
        int $i0, $i1;
        java.lang.String $r8;
        java.lang.reflect.Method $r11;
        java.lang.Exception $r16;
        org.dom4j.bean.BeanMetaData r0;
        java.beans.PropertyDescriptor $r7;
        java.lang.Class $r1;
        org.dom4j.QName $r10;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap> = $r14;

        r0.<org.dom4j.bean.BeanMetaData: java.lang.Class beanClass> = $r1;

        if $r1 == null goto label4;

     label1:
        $r2 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r1);

        $r3 = interfaceinvoke $r2.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

     label2:
        r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors> = $r3;

        goto label4;

     label3:
        $r4 := @caughtexception;

        $r16 = (java.lang.Exception) $r4;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r16);

     label4:
        $r3 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $i0 = 0;

        if $r3 != null goto label5;

        $r3 = newarray (java.beans.PropertyDescriptor)[0];

        r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors> = $r3;

     label5:
        $r3 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $i1 = lengthof $r3;

        $r5 = newarray (org.dom4j.QName)[$i1];

        r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames> = $r5;

        $r6 = newarray (java.lang.reflect.Method)[$i1];

        r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods> = $r6;

        $r6 = newarray (java.lang.reflect.Method)[$i1];

        r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods> = $r6;

     label6:
        if $i0 < $i1 goto label7;

        return;

     label7:
        $r3 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $r7 = $r3[$i0];

        $r8 = virtualinvoke $r7.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r9 = <org.dom4j.bean.BeanMetaData: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r10 = virtualinvoke $r9.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r8);

        $r5 = r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames>;

        $r5[$i0] = $r10;

        $r6 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods>;

        $r11 = virtualinvoke $r7.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        $r6[$i0] = $r11;

        $r6 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods>;

        $r11 = virtualinvoke $r7.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        $r6[$i0] = $r11;

        $r15 = new java.lang.Integer;

        $r12 = $r15;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i0);

        $r13 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r12);

        $r13 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        $i0 = $i0 + 1;

        goto label6;

        catch java.beans.IntrospectionException from label1 to label2 with label3;
    }

    public static org.dom4j.bean.BeanMetaData get(java.lang.Class)
    {
        org.dom4j.bean.BeanMetaData $r3;
        java.util.Map $r1;
        java.lang.Class $r0;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Class;

        $r1 = <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (org.dom4j.bean.BeanMetaData) $r2;

        if $r3 != null goto label1;

        $r3 = new org.dom4j.bean.BeanMetaData;

        specialinvoke $r3.<org.dom4j.bean.BeanMetaData: void <init>(java.lang.Class)>($r0);

        $r1 = <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

     label1:
        return $r3;
    }

    public int attributeCount()
    {
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        java.beans.PropertyDescriptor[] $r1;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.dom4j.bean.BeanAttributeList createAttributeList(org.dom4j.bean.BeanElement)
    {
        org.dom4j.bean.BeanMetaData r0;
        org.dom4j.bean.BeanElement $r1;
        org.dom4j.bean.BeanAttributeList $r2;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: org.dom4j.bean.BeanElement;

        $r2 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r2.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement,org.dom4j.bean.BeanMetaData)>($r1, r0);

        return $r2;
    }

    public java.lang.Object getData(int, java.lang.Object)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.lang.Object[] $r4;
        int $i0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r3;
        java.lang.reflect.Method[] $r2;
        java.lang.Exception $r5;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

     label1:
        $r2 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods>;

        $r3 = $r2[$i0];

     label2:
        $r4 = <org.dom4j.bean.BeanMetaData: java.lang.Object[] NULL_ARGS>;

     label3:
        $r1 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public int getIndex(java.lang.String)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r2;
        java.lang.Integer $r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public int getIndex(org.dom4j.QName)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.util.Map $r1;
        int $i0;
        org.dom4j.QName $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r2 := @parameter0: org.dom4j.QName;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public org.dom4j.QName getQName(int)
    {
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        org.dom4j.QName[] $r1;
        org.dom4j.QName $r2;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $i0 := @parameter0: int;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public void handleException(java.lang.Exception)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.lang.Exception $r1;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: java.lang.Exception;

        return;
    }

    public void setData(int, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r5;
        java.lang.reflect.Method[] $r3;
        java.lang.Exception $r6;
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.reflect.Method $r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

     label1:
        $r3 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods>;

        $r4 = $r3[$i0];

     label2:
        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r6);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
