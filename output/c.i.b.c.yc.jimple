public final class c.i.b.c.yc extends java.lang.Object
{

    public static java.util.Spliterator a(com.google.common.collect.Multiset)
    {
        java.util.Spliterator $r1;
        com.google.common.collect.Multiset $r0;

        $r0 := @parameter0: com.google.common.collect.Multiset;

        $r1 = staticinvoke <com.google.common.collect.Multisets: java.util.Spliterator spliteratorImpl(com.google.common.collect.Multiset)>($r0);

        return $r1;
    }

    public static void a(com.google.common.collect.Multiset, java.util.function.Consumer)
    {
        java.util.function.Consumer $r1;
        com.google.common.collect.Multiset $r0;
        c.i.b.c.nb $r2;
        java.util.Set $r3;

        $r0 := @parameter0: com.google.common.collect.Multiset;

        $r1 := @parameter1: java.util.function.Consumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = interfaceinvoke $r0.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r2 = new c.i.b.c.nb;

        specialinvoke $r2.<c.i.b.c.nb: void <init>(java.util.function.Consumer)>($r1);

        interfaceinvoke $r3.<java.util.Set: void forEach(java.util.function.Consumer)>($r2);

        return;
    }

    public static void a(com.google.common.collect.Multiset, java.util.function.ObjIntConsumer)
    {
        c.i.b.c.mb $r2;
        com.google.common.collect.Multiset $r0;
        java.util.Set $r3;
        java.util.function.ObjIntConsumer $r1;

        $r0 := @parameter0: com.google.common.collect.Multiset;

        $r1 := @parameter1: java.util.function.ObjIntConsumer;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = interfaceinvoke $r0.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r2 = new c.i.b.c.mb;

        specialinvoke $r2.<c.i.b.c.mb: void <init>(java.util.function.ObjIntConsumer)>($r1);

        interfaceinvoke $r3.<java.util.Set: void forEach(java.util.function.Consumer)>($r2);

        return;
    }

    public static void a(java.util.function.Consumer, com.google.common.collect.Multiset$Entry)
    {
        java.util.function.Consumer $r0;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.common.collect.Multiset$Entry $r1;

        $r0 := @parameter0: java.util.function.Consumer;

        $r1 := @parameter1: com.google.common.collect.Multiset$Entry;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r1.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        interfaceinvoke $r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void a(java.util.function.ObjIntConsumer, com.google.common.collect.Multiset$Entry)
    {
        int $i0;
        java.lang.Object $r2;
        java.util.function.ObjIntConsumer $r0;
        com.google.common.collect.Multiset$Entry $r1;

        $r0 := @parameter0: java.util.function.ObjIntConsumer;

        $r1 := @parameter1: com.google.common.collect.Multiset$Entry;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke $r1.<com.google.common.collect.Multiset$Entry: int getCount()>();

        interfaceinvoke $r0.<java.util.function.ObjIntConsumer: void accept(java.lang.Object,int)>($r2, $i0);

        return;
    }
}
