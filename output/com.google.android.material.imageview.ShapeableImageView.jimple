public class com.google.android.material.imageview.ShapeableImageView extends androidx.appcompat.widget.AppCompatImageView implements com.google.android.material.shape.Shapeable
{
    public static final int DEF_STYLE_RES;
    public final android.graphics.Paint borderPaint;
    public final android.graphics.Paint clearPaint;
    public final android.graphics.RectF destination;
    public android.graphics.Path maskPath;
    public final android.graphics.RectF maskRect;
    public final android.graphics.Path path;
    public final com.google.android.material.shape.ShapeAppearancePathProvider pathProvider;
    public com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel;
    public android.content.res.ColorStateList strokeColor;
    public float strokeWidth;

    static void <clinit>()
    {
        int $i0;

        $i0 = <com.google.android.material.R$style: int Widget_MaterialComponents_ShapeableImageView>;

        <com.google.android.material.imageview.ShapeableImageView: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.graphics.Path $r12;
        com.google.android.material.imageview.ShapeableImageView r0;
        android.content.res.TypedArray $r6;
        android.content.res.ColorStateList $r7;
        android.graphics.Paint$Style $r8;
        android.util.AttributeSet $r2;
        int[] $r5;
        int $i0, $i1;
        android.graphics.RectF $r15;
        com.google.android.material.imageview.ShapeableImageView$OutlineProvider $r16;
        com.google.android.material.shape.ShapeAppearancePathProvider $r11;
        com.google.android.material.shape.ShapeAppearanceModel $r10;
        android.graphics.PorterDuff$Mode $r4;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r9;
        android.graphics.PorterDuffXfermode $r14;
        float $f0;
        android.graphics.Paint $r3, $r13;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 = <com.google.android.material.imageview.ShapeableImageView: int DEF_STYLE_RES>;

        $r1 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        specialinvoke r0.<androidx.appcompat.widget.AppCompatImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r11 = new com.google.android.material.shape.ShapeAppearancePathProvider;

        specialinvoke $r11.<com.google.android.material.shape.ShapeAppearancePathProvider: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearancePathProvider pathProvider> = $r11;

        $r12 = new android.graphics.Path;

        specialinvoke $r12.<android.graphics.Path: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path path> = $r12;

        $r1 = virtualinvoke r0.<android.widget.ImageView: android.content.Context getContext()>();

        $r13 = new android.graphics.Paint;

        specialinvoke $r13.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint clearPaint> = $r13;

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint clearPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint clearPaint>;

        $i1 = -1;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i1);

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint clearPaint>;

        $r14 = new android.graphics.PorterDuffXfermode;

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode DST_OUT>;

        specialinvoke $r14.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r4);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r14);

        $r15 = new android.graphics.RectF;

        specialinvoke $r15.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF destination> = $r15;

        $r15 = new android.graphics.RectF;

        specialinvoke $r15.<android.graphics.RectF: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF maskRect> = $r15;

        $r12 = new android.graphics.Path;

        specialinvoke $r12.<android.graphics.Path: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path maskPath> = $r12;

        $r5 = <com.google.android.material.R$styleable: int[] ShapeableImageView>;

        $i1 = <com.google.android.material.imageview.ShapeableImageView: int DEF_STYLE_RES>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i0, $i1);

        $i1 = <com.google.android.material.R$styleable: int ShapeableImageView_strokeColor>;

        $r7 = staticinvoke <com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>($r1, $r6, $i1);

        r0.<com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList strokeColor> = $r7;

        $i1 = <com.google.android.material.R$styleable: int ShapeableImageView_strokeWidth>;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        $f0 = (float) $i1;

        r0.<com.google.android.material.imageview.ShapeableImageView: float strokeWidth> = $f0;

        $r13 = new android.graphics.Paint;

        specialinvoke $r13.<android.graphics.Paint: void <init>()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint borderPaint> = $r13;

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint borderPaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint borderPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $i1 = <com.google.android.material.imageview.ShapeableImageView: int DEF_STYLE_RES>;

        $r9 = staticinvoke <com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        $r10 = virtualinvoke $r9.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r10;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r16 = new com.google.android.material.imageview.ShapeableImageView$OutlineProvider;

        specialinvoke $r16.<com.google.android.material.imageview.ShapeableImageView$OutlineProvider: void <init>(com.google.android.material.imageview.ShapeableImageView)>(r0);

        virtualinvoke r0.<android.widget.ImageView: void setOutlineProvider(android.view.ViewOutlineProvider)>($r16);

     label1:
        return;
    }

    public static com.google.android.material.shape.ShapeAppearanceModel access$000(com.google.android.material.imageview.ShapeableImageView)
    {
        com.google.android.material.shape.ShapeAppearanceModel r1;
        com.google.android.material.imageview.ShapeableImageView $r0;

        $r0 := @parameter0: com.google.android.material.imageview.ShapeableImageView;

        r1 = $r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        return r1;
    }

    public static android.graphics.RectF access$100(com.google.android.material.imageview.ShapeableImageView)
    {
        android.graphics.RectF r1;
        com.google.android.material.imageview.ShapeableImageView $r0;

        $r0 := @parameter0: com.google.android.material.imageview.ShapeableImageView;

        r1 = $r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF destination>;

        return r1;
    }

    private void drawStroke(android.graphics.Canvas)
    {
        android.graphics.Path $r6;
        com.google.android.material.imageview.ShapeableImageView r0;
        android.content.res.ColorStateList $r2, $r5;
        byte $b1;
        int[] $r4;
        int $i0, $i2;
        float $f0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList strokeColor>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint borderPaint>;

        $f0 = r0.<com.google.android.material.imageview.ShapeableImageView: float strokeWidth>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r2 = r0.<com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList strokeColor>;

        $r4 = virtualinvoke r0.<android.widget.ImageView: int[] getDrawableState()>();

        $r5 = r0.<com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList strokeColor>;

        $i0 = virtualinvoke $r5.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r4, $i0);

        $f0 = r0.<com.google.android.material.imageview.ShapeableImageView: float strokeWidth>;

        $b1 = $f0 cmpl 0.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label2;

        if $i0 == 0 goto label2;

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint borderPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r6 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path path>;

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint borderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r6, $r3);

     label2:
        return;
    }

    private void updateShapeMask(int, int)
    {
        android.graphics.RectF $r1;
        android.graphics.Path $r4, $r5;
        com.google.android.material.shape.ShapeAppearancePathProvider $r2;
        com.google.android.material.imageview.ShapeableImageView r0;
        com.google.android.material.shape.ShapeAppearanceModel $r3;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3;
        android.graphics.Path$Direction $r6;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF destination>;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getPaddingLeft()>();

        $f0 = (float) $i2;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getPaddingTop()>();

        $f1 = (float) $i2;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getPaddingRight()>();

        $i2 = $i0 - $i2;

        $f2 = (float) $i2;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getPaddingBottom()>();

        $i2 = $i1 - $i2;

        $f3 = (float) $i2;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r2 = r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearancePathProvider pathProvider>;

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        $r1 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF destination>;

        $r4 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path path>;

        virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearancePathProvider: void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)>($r3, 1.0F, $r1, $r4);

        $r4 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path maskPath>;

        virtualinvoke $r4.<android.graphics.Path: void rewind()>();

        $r4 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path maskPath>;

        $r5 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path path>;

        virtualinvoke $r4.<android.graphics.Path: void addPath(android.graphics.Path)>($r5);

        $r1 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF maskRect>;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        $r4 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path maskPath>;

        $r1 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.RectF maskRect>;

        $r6 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke $r4.<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path$Direction)>($r1, $r6);

        return;
    }

    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    {
        com.google.android.material.shape.ShapeAppearanceModel r1;
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        r1 = r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel>;

        return r1;
    }

    public android.content.res.ColorStateList getStrokeColor()
    {
        android.content.res.ColorStateList r1;
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        r1 = r0.<com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList strokeColor>;

        return r1;
    }

    public float getStrokeWidth()
    {
        float f0;
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        f0 = r0.<com.google.android.material.imageview.ShapeableImageView: float strokeWidth>;

        return f0;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        specialinvoke r0.<android.widget.ImageView: void onAttachedToWindow()>();

        virtualinvoke r0.<android.widget.ImageView: void setLayerType(int,android.graphics.Paint)>(2, null);

        return;
    }

    public void onDetachedFromWindow()
    {
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        virtualinvoke r0.<android.widget.ImageView: void setLayerType(int,android.graphics.Paint)>(0, null);

        specialinvoke r0.<android.widget.ImageView: void onDetachedFromWindow()>();

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.graphics.Path $r2;
        com.google.android.material.imageview.ShapeableImageView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.ImageView: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Path maskPath>;

        $r3 = r0.<com.google.android.material.imageview.ShapeableImageView: android.graphics.Paint clearPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r2, $r3);

        specialinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void drawStroke(android.graphics.Canvas)>($r1);

        return;
    }

    public void onSizeChanged(int, int, int, int)
    {
        com.google.android.material.imageview.ShapeableImageView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.widget.ImageView: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        specialinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void updateShapeMask(int,int)>($i0, $i1);

        return;
    }

    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    {
        com.google.android.material.imageview.ShapeableImageView r0;
        int $i0, $i1;
        com.google.android.material.shape.ShapeAppearanceModel $r1;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        r0.<com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel> = $r1;

        $i0 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        specialinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void updateShapeMask(int,int)>($i0, $i1);

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        return;
    }

    public void setStrokeColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        com.google.android.material.imageview.ShapeableImageView r0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList strokeColor> = $r1;

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        return;
    }

    public void setStrokeColorResource(int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        com.google.android.material.imageview.ShapeableImageView r0;
        int $i0;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageView: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.content.res.ColorStateList b(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void setStrokeColor(android.content.res.ColorStateList)>($r2);

        return;
    }

    public void setStrokeWidth(float)
    {
        byte $b0;
        com.google.android.material.imageview.ShapeableImageView r0;
        float $f0, $f1;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $f0 := @parameter0: float;

        $f1 = r0.<com.google.android.material.imageview.ShapeableImageView: float strokeWidth>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<com.google.android.material.imageview.ShapeableImageView: float strokeWidth> = $f0;

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    public void setStrokeWidthResource(int)
    {
        com.google.android.material.imageview.ShapeableImageView r0;
        int $i0;
        float $f0;
        android.content.res.Resources $r1;

        r0 := @this: com.google.android.material.imageview.ShapeableImageView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.ImageView: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        $f0 = (float) $i0;

        virtualinvoke r0.<com.google.android.material.imageview.ShapeableImageView: void setStrokeWidth(float)>($f0);

        return;
    }
}
