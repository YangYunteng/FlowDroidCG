public class com.google.android.material.appbar.AppBarLayout extends android.widget.LinearLayout implements androidx.coordinatorlayout.widget.CoordinatorLayout$a
{
    public static final int DEF_STYLE_RES;
    public static final int INVALID_SCROLL_RANGE;
    public static final int PENDING_ACTION_ANIMATE_ENABLED;
    public static final int PENDING_ACTION_COLLAPSED;
    public static final int PENDING_ACTION_EXPANDED;
    public static final int PENDING_ACTION_FORCE;
    public static final int PENDING_ACTION_NONE;
    public int currentOffset;
    public int downPreScrollRange;
    public int downScrollRange;
    public android.animation.ValueAnimator elevationOverlayAnimator;
    public boolean haveChildWithInterpolator;
    public b.i.i.I lastInsets;
    public boolean liftOnScroll;
    public java.lang.ref.WeakReference liftOnScrollTargetView;
    public int liftOnScrollTargetViewId;
    public boolean liftable;
    public boolean liftableOverride;
    public boolean lifted;
    public java.util.List listeners;
    public int pendingAction;
    public android.graphics.drawable.Drawable statusBarForeground;
    public int[] tmpStatesArray;
    public int totalScrollRange;

    static void <clinit>()
    {
        int $i0;

        <com.google.android.material.appbar.AppBarLayout: int PENDING_ACTION_FORCE> = 8;

        <com.google.android.material.appbar.AppBarLayout: int PENDING_ACTION_EXPANDED> = 1;

        <com.google.android.material.appbar.AppBarLayout: int PENDING_ACTION_COLLAPSED> = 2;

        <com.google.android.material.appbar.AppBarLayout: int PENDING_ACTION_ANIMATE_ENABLED> = 4;

        <com.google.android.material.appbar.AppBarLayout: int INVALID_SCROLL_RANGE> = -1;

        <com.google.android.material.appbar.AppBarLayout: int DEF_STYLE_RES> = 0;

        $i0 = <com.google.android.material.R$style: int Widget_Design_AppBarLayout>;

        <com.google.android.material.appbar.AppBarLayout: int DEF_STYLE_RES> = $i0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.google.android.material.R$attr: int appBarLayoutStyle>;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r3;
        android.graphics.drawable.ColorDrawable $r7;
        android.graphics.drawable.Drawable $r6;
        com.google.android.material.appbar.AppBarLayout r0;
        android.content.res.TypedArray $r5;
        android.content.res.ColorStateList $r9;
        android.util.AttributeSet $r4;
        int[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        com.google.android.material.shape.MaterialShapeDrawable $r8, $r10;
        com.google.android.material.appbar.AppBarLayout$1 $r11;
        float $f0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r3 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 = <com.google.android.material.appbar.AppBarLayout: int DEF_STYLE_RES>;

        $r3 = staticinvoke <com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>($r3, $r4, $i1, $i0);

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r4, $i1);

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout: int totalScrollRange> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout: int downPreScrollRange> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout: int downScrollRange> = $i0;

        r0.<com.google.android.material.appbar.AppBarLayout: int pendingAction> = 0;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setOrientation(int)>(1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <com.google.android.material.appbar.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)>(r0);

        $i0 = <com.google.android.material.appbar.AppBarLayout: int DEF_STYLE_RES>;

        staticinvoke <com.google.android.material.appbar.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>(r0, $r4, $i1, $i0);

     label1:
        $r1 = <com.google.android.material.R$styleable: int[] AppBarLayout>;

        $i0 = <com.google.android.material.appbar.AppBarLayout: int DEF_STYLE_RES>;

        $r2 = newarray (int)[0];

        $r5 = staticinvoke <com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>($r3, $r4, $r1, $i1, $i0, $r2);

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_android_background>;

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>(r0, $r6);

        $r6 = virtualinvoke r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>();

        $z0 = $r6 instanceof android.graphics.drawable.ColorDrawable;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>();

        $r7 = (android.graphics.drawable.ColorDrawable) $r6;

        $r10 = new com.google.android.material.shape.MaterialShapeDrawable;

        $r8 = $r10;

        specialinvoke $r10.<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>();

        $i1 = virtualinvoke $r7.<android.graphics.drawable.ColorDrawable: int getColor()>();

        $r9 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i1);

        virtualinvoke $r8.<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>($r9);

        virtualinvoke $r8.<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>($r3);

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>(r0, $r8);

     label2:
        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_expanded>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label3;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_expanded>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean,boolean)>($z0, 0, 0);

     label3:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label4;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_elevation>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label4;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_elevation>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        $f0 = (float) $i1;

        staticinvoke <com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>(r0, $f0);

     label4:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 26 goto label6;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_android_keyboardNavigationCluster>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label5;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_android_keyboardNavigationCluster>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        virtualinvoke r0.<android.widget.LinearLayout: void setKeyboardNavigationCluster(boolean)>($z0);

     label5:
        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label6;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        virtualinvoke r0.<android.widget.LinearLayout: void setTouchscreenBlocksFocus(boolean)>($z0);

     label6:
        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_liftOnScroll>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<com.google.android.material.appbar.AppBarLayout: boolean liftOnScroll> = $z0;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_liftOnScrollTargetViewId>;

        $i0 = -1;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, $i0);

        r0.<com.google.android.material.appbar.AppBarLayout: int liftOnScrollTargetViewId> = $i1;

        $i1 = <com.google.android.material.R$styleable: int AppBarLayout_statusBarForeground>;

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>($r6);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r11 = new com.google.android.material.appbar.AppBarLayout$1;

        specialinvoke $r11.<com.google.android.material.appbar.AppBarLayout$1: void <init>(com.google.android.material.appbar.AppBarLayout)>(r0);

        staticinvoke <b.i.i.y: void a(android.view.View,b.i.i.q)>(r0, $r11);

        return;
    }

    private void clearLiftOnScrollTargetView()
    {
        java.lang.ref.WeakReference $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: java.lang.ref.WeakReference liftOnScrollTargetView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<java.lang.ref.WeakReference: void clear()>();

     label1:
        r0.<com.google.android.material.appbar.AppBarLayout: java.lang.ref.WeakReference liftOnScrollTargetView> = null;

        return;
    }

    private android.view.View findLiftOnScrollTargetView(android.view.View)
    {
        android.view.ViewParent $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        android.view.ViewGroup $r4;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r2, $r6;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: java.lang.ref.WeakReference liftOnScrollTargetView>;

        if $r2 != null goto label4;

        $i0 = r0.<com.google.android.material.appbar.AppBarLayout: int liftOnScrollTargetViewId>;

        $i1 = -1;

        if $i0 == $i1 goto label4;

        if $r1 == null goto label1;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        if $r1 != null goto label3;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.ViewParent getParent()>();

        $z0 = $r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.ViewParent getParent()>();

        $r4 = (android.view.ViewGroup) $r3;

        $i0 = r0.<com.google.android.material.appbar.AppBarLayout: int liftOnScrollTargetViewId>;

        $r1 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View findViewById(int)>($i0);

     label3:
        if $r1 == null goto label4;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.google.android.material.appbar.AppBarLayout: java.lang.ref.WeakReference liftOnScrollTargetView> = $r6;

     label4:
        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: java.lang.ref.WeakReference liftOnScrollTargetView>;

        if $r2 == null goto label5;

        $r5 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r1 = (android.view.View) $r5;

        return $r1;

     label5:
        return null;
    }

    private boolean hasCollapsibleChild()
    {
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r2;

        $z0 = virtualinvoke $r3.<com.google.android.material.appbar.AppBarLayout$LayoutParams: boolean isCollapsible()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void invalidateScrollRanges()
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout: int totalScrollRange> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout: int downPreScrollRange> = $i0;

        $i0 = -1;

        r0.<com.google.android.material.appbar.AppBarLayout: int downScrollRange> = $i0;

        return;
    }

    private void setExpanded(boolean, boolean, boolean)
    {
        byte $b0, $b1, $b2;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z1 := @parameter0: boolean;

        $z2 := @parameter1: boolean;

        $z0 := @parameter2: boolean;

        if $z1 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        $b1 = 0;

        if $z2 == 0 goto label3;

        $b2 = 4;

        goto label4;

     label3:
        $b2 = 0;

     label4:
        $b0 = $b0 | $b2;

        if $z0 == 0 goto label5;

        $b1 = 8;

     label5:
        $b1 = $b0 | $b1;

        r0.<com.google.android.material.appbar.AppBarLayout: int pendingAction> = $b1;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    private boolean setLiftableState(boolean)
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z1 := @parameter0: boolean;

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftable>;

        if $z0 == $z1 goto label1;

        r0.<com.google.android.material.appbar.AppBarLayout: boolean liftable> = $z1;

        virtualinvoke r0.<android.widget.LinearLayout: void refreshDrawableState()>();

        return 1;

     label1:
        return 0;
    }

    private boolean shouldDrawStatusBarForeground()
    {
        int $i0;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean shouldOffsetFirstChild()
    {
        int $i0;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable, boolean)
    {
        android.animation.TimeInterpolator $r5;
        float[] $r4;
        long $l1;
        com.google.android.material.appbar.AppBarLayout r0;
        com.google.android.material.shape.MaterialShapeDrawable $r1;
        int $i0;
        float $f0, $f1;
        com.google.android.material.appbar.AppBarLayout$2 $r6;
        boolean $z0;
        android.content.res.Resources $r2;
        android.animation.ValueAnimator $r3;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: com.google.android.material.shape.MaterialShapeDrawable;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$dimen: int design_appbar_elevation>;

        $f0 = virtualinvoke $r2.<android.content.res.Resources: float getDimension(int)>($i0);

        $f1 = $f0;

        if $z0 == 0 goto label1;

        $f0 = 0.0F;

        goto label1;

     label1:
        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $f1 = 0.0F;

     label3:
        $r3 = r0.<com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator>;

        if $r3 == null goto label4;

        virtualinvoke $r3.<android.animation.ValueAnimator: void cancel()>();

     label4:
        $r4 = newarray (float)[2];

        $r4[0] = $f0;

        $r4[1] = $f1;

        $r3 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r4);

        r0.<com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator> = $r3;

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator>;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.content.res.Resources getResources()>();

        $i0 = <com.google.android.material.R$integer: int app_bar_elevation_anim_duration>;

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>($i0);

        $l1 = (long) $i0;

        virtualinvoke $r3.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l1);

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator>;

        $r5 = <com.google.android.material.animation.AnimationUtils: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator>;

        $r6 = new com.google.android.material.appbar.AppBarLayout$2;

        specialinvoke $r6.<com.google.android.material.appbar.AppBarLayout$2: void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable)>(r0, $r1);

        virtualinvoke $r3.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r6);

        $r3 = r0.<com.google.android.material.appbar.AppBarLayout: android.animation.ValueAnimator elevationOverlayAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void start()>();

        return;
    }

    private void updateWillNotDraw()
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean shouldDrawStatusBarForeground()>();

        $z0 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>($z0);

        return;
    }

    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    {
        java.util.List $r2;
        com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener $r1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners> = $r3;

     label1:
        if $r1 == null goto label2;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        return;
    }

    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    {
        com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)>($r1);

        return;
    }

    public boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof com.google.android.material.appbar.AppBarLayout$LayoutParams;

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        int $i0, $i1;
        float $f0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>($r1);

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean shouldDrawStatusBarForeground()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i1 = r0.<com.google.android.material.appbar.AppBarLayout: int currentOffset>;

        $i1 = neg $i1;

        $f0 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label1:
        return;
    }

    public void drawableStateChanged()
    {
        int[] $r2;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        specialinvoke r0.<android.widget.LinearLayout: void drawableStateChanged()>();

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: int[] getDrawableState()>();

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void invalidateDrawable(android.graphics.drawable.Drawable)>($r1);

     label1:
        return;
    }

    public volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()
    {
        int $i0, $i1;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = new com.google.android.material.appbar.AppBarLayout$LayoutParams;

        $i0 = -1;

        $i1 = -2;

        specialinvoke $r1.<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        return $r1;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        return $r1;
    }

    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.google.android.material.appbar.AppBarLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r2.<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r1;
        android.view.ViewGroup$MarginLayoutParams $r4;
        int $i0;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = $r1 instanceof android.widget.LinearLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new com.google.android.material.appbar.AppBarLayout$LayoutParams;

        $r3 = (android.widget.LinearLayout$LayoutParams) $r1;

        specialinvoke $r2.<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.widget.LinearLayout$LayoutParams)>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new com.google.android.material.appbar.AppBarLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r2;

     label2:
        $r2 = new com.google.android.material.appbar.AppBarLayout$LayoutParams;

        specialinvoke $r2.<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public androidx.coordinatorlayout.widget.CoordinatorLayout$b getBehavior()
    {
        com.google.android.material.appbar.AppBarLayout$Behavior $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = new com.google.android.material.appbar.AppBarLayout$Behavior;

        specialinvoke $r1.<com.google.android.material.appbar.AppBarLayout$Behavior: void <init>()>();

        return $r1;
    }

    public int getDownNestedPreScrollRange()
    {
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i1 = r0.<com.google.android.material.appbar.AppBarLayout: int downPreScrollRange>;

        $i2 = -1;

        if $i1 == $i2 goto label01;

        return $i1;

     label01:
        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i2 = 0;

     label02:
        if $i1 < 0 goto label10;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r2;

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i0 = $r3.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int scrollFlags>;

        $i4 = $i0 & 5;

        if $i4 != 5 goto label08;

        $i4 = $r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i5 = $r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i5 = $i0 & 8;

        if $i5 == 0 goto label04;

        $i0 = staticinvoke <b.i.i.y: int q(android.view.View)>($r1);

     label03:
        $i4 = $i4 + $i0;

        goto label06;

     label04:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label05;

        $i0 = staticinvoke <b.i.i.y: int q(android.view.View)>($r1);

        $i0 = $i3 - $i0;

        goto label03;

     label05:
        $i4 = $i4 + $i3;

     label06:
        if $i1 != 0 goto label07;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>($r1);

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i3 = $i3 - $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

     label07:
        $i2 = $i2 + $i4;

        goto label09;

     label08:
        if $i2 <= 0 goto label09;

        goto label10;

     label09:
        $i3 = -1;

        $i1 = $i1 + $i3;

        goto label02;

     label10:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        r0.<com.google.android.material.appbar.AppBarLayout: int downPreScrollRange> = $i1;

        return $i1;
    }

    public int getDownNestedScrollRange()
    {
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i1 = r0.<com.google.android.material.appbar.AppBarLayout: int downScrollRange>;

        $i2 = -1;

        if $i1 == $i2 goto label1;

        return $i1;

     label1:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i3 = 0;

        $i1 = 0;

     label2:
        if $i3 >= $i2 goto label4;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i3);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r2;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = $r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i0 = $r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i0 = $i5 + $i0;

        $i4 = $i4 + $i0;

        $i0 = $r3.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int scrollFlags>;

        $i5 = $i0 & 1;

        if $i5 == 0 goto label4;

        $i1 = $i1 + $i4;

        $i4 = $i0 & 2;

        if $i4 == 0 goto label3;

        $i2 = staticinvoke <b.i.i.y: int q(android.view.View)>($r1);

        $i1 = $i1 - $i2;

        goto label4;

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.google.android.material.appbar.AppBarLayout: int downScrollRange> = $i1;

        return $i1;
    }

    public int getLiftOnScrollTargetViewId()
    {
        int i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        i0 = r0.<com.google.android.material.appbar.AppBarLayout: int liftOnScrollTargetViewId>;

        return i0;
    }

    public final int getMinimumHeightForVisibleOverlappingContent()
    {
        int $i0, $i1, $i2;
        android.view.View $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i1 = staticinvoke <b.i.i.y: int q(android.view.View)>(r0);

        $i2 = $i1;

        if $i1 == 0 goto label2;

     label1:
        $i1 = $i2 * 2;

        $i0 = $i1 + $i0;

        return $i0;

     label2:
        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if $i1 < 1 goto label3;

        $i1 = $i1 - 1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $i2 = staticinvoke <b.i.i.y: int q(android.view.View)>($r1);

        goto label4;

     label3:
        $i2 = 0;

     label4:
        if $i2 == 0 goto label5;

        goto label1;

     label5:
        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i0 = $i0 / 3;

        return $i0;
    }

    public int getPendingAction()
    {
        int i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        i0 = r0.<com.google.android.material.appbar.AppBarLayout: int pendingAction>;

        return i0;
    }

    public android.graphics.drawable.Drawable getStatusBarForeground()
    {
        android.graphics.drawable.Drawable r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        return r1;
    }

    public float getTargetElevation()
    {
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        return 0.0F;
    }

    public final int getTopInset()
    {
        int $i0;
        b.i.i.I $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: b.i.i.I lastInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<b.i.i.I: int f()>();

        return $i0;

     label1:
        return 0;
    }

    public final int getTotalScrollRange()
    {
        android.view.ViewGroup$LayoutParams $r2;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i1 = r0.<com.google.android.material.appbar.AppBarLayout: int totalScrollRange>;

        $i2 = -1;

        if $i1 == $i2 goto label1;

        return $i1;

     label1:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i3 = 0;

        $i1 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i3);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r2;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i0 = $r3.<com.google.android.material.appbar.AppBarLayout$LayoutParams: int scrollFlags>;

        $i5 = $i0 & 1;

        if $i5 == 0 goto label5;

        $i5 = $r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i1 = $i1 + $i4;

        if $i3 != 0 goto label3;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>($r1);

        if $z0 == 0 goto label3;

        $i4 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i1 = $i1 - $i4;

     label3:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label4;

        $i2 = staticinvoke <b.i.i.y: int q(android.view.View)>($r1);

        $i1 = $i1 - $i2;

        goto label5;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.google.android.material.appbar.AppBarLayout: int totalScrollRange> = $i1;

        return $i1;
    }

    public int getUpNestedPreScrollRange()
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        return $i0;
    }

    public boolean hasChildWithInterpolator()
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean haveChildWithInterpolator>;

        return z0;
    }

    public boolean hasScrollableChildren()
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLiftOnScroll()
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftOnScroll>;

        return z0;
    }

    public void onAttachedToWindow()
    {
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        specialinvoke r0.<android.widget.LinearLayout: void onAttachedToWindow()>();

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View)>(r0);

        return;
    }

    public int[] onCreateDrawableState(int)
    {
        int[] $r1, $r2;
        int $i0, $i1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: int[] tmpStatesArray>;

        if $r1 != null goto label1;

        $r1 = newarray (int)[4];

        r0.<com.google.android.material.appbar.AppBarLayout: int[] tmpStatesArray> = $r1;

     label1:
        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: int[] tmpStatesArray>;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r2 = specialinvoke r0.<android.widget.LinearLayout: int[] onCreateDrawableState(int)>($i0);

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftable>;

        if $z0 == 0 goto label2;

        $i0 = <com.google.android.material.R$attr: int state_liftable>;

        goto label3;

     label2:
        $i0 = <com.google.android.material.R$attr: int state_liftable>;

        $i0 = neg $i0;

     label3:
        $r1[0] = $i0;

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftable>;

        if $z0 == 0 goto label4;

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean lifted>;

        if $z0 == 0 goto label4;

        $i0 = <com.google.android.material.R$attr: int state_lifted>;

        goto label5;

     label4:
        $i0 = <com.google.android.material.R$attr: int state_lifted>;

        $i0 = neg $i0;

     label5:
        $r1[1] = $i0;

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftable>;

        if $z0 == 0 goto label6;

        $i0 = <com.google.android.material.R$attr: int state_collapsible>;

        goto label7;

     label6:
        $i0 = <com.google.android.material.R$attr: int state_collapsible>;

        $i0 = neg $i0;

     label7:
        $r1[2] = $i0;

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftable>;

        if $z0 == 0 goto label8;

        $z0 = r0.<com.google.android.material.appbar.AppBarLayout: boolean lifted>;

        if $z0 == 0 goto label8;

        $i0 = <com.google.android.material.R$attr: int state_collapsed>;

        goto label9;

     label8:
        $i0 = <com.google.android.material.R$attr: int state_collapsed>;

        $i0 = neg $i0;

     label9:
        $r1[3] = $i0;

        $r1 = staticinvoke <android.widget.LinearLayout: int[] mergeDrawableStates(int[],int[])>($r2, $r1);

        return $r1;
    }

    public void onDetachedFromWindow()
    {
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        specialinvoke r0.<android.widget.LinearLayout: void onDetachedFromWindow()>();

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void clearLiftOnScrollTargetView()>();

        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        android.view.animation.Interpolator $r4;
        com.google.android.material.appbar.AppBarLayout$LayoutParams $r3;
        android.graphics.drawable.Drawable $r5;
        com.google.android.material.appbar.AppBarLayout r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>(r0);

        if $z0 == 0 goto label2;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean shouldOffsetFirstChild()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        staticinvoke <b.i.i.y: void e(android.view.View,int)>($r1, $i0);

        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label1;

     label2:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void invalidateScrollRanges()>();

        $z0 = 0;

        r0.<com.google.android.material.appbar.AppBarLayout: boolean haveChildWithInterpolator> = 0;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.google.android.material.appbar.AppBarLayout$LayoutParams) $r2;

        $r4 = virtualinvoke $r3.<com.google.android.material.appbar.AppBarLayout$LayoutParams: android.view.animation.Interpolator getScrollInterpolator()>();

        if $r4 == null goto label4;

        r0.<com.google.android.material.appbar.AppBarLayout: boolean haveChildWithInterpolator> = 1;

        goto label5;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r5 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r5 == null goto label6;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label6:
        $z1 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftableOverride>;

        if $z1 != 0 goto label9;

        $z1 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftOnScroll>;

        if $z1 != 0 goto label7;

        $z1 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean hasCollapsibleChild()>();

        if $z1 == 0 goto label8;

     label7:
        $z0 = 1;

     label8:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean setLiftableState(boolean)>($z0);

     label9:
        return;
    }

    public void onMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i2 == 1073741824 goto label4;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>(r0);

        if $z0 == 0 goto label4;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean shouldOffsetFirstChild()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredHeight()>();

        $i3 = $i0;

        if $i2 == -2147483648 goto label2;

        if $i2 == 0 goto label1;

        goto label3;

     label1:
        $i1 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i3 = $i0 + $i1;

        goto label3;

     label2:
        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: int getTopInset()>();

        $i0 = $i0 + $i3;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i3 = staticinvoke <b.i.d.a: int a(int,int,int)>($i0, 0, $i1);

     label3:
        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredWidth()>();

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i0, $i3);

     label4:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void invalidateScrollRanges()>();

        return;
    }

    public void onOffsetChanged(int)
    {
        com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.appbar.AppBarLayout: int currentOffset> = $i0;

        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean willNotDraw()>();

        if $z0 != 0 goto label1;

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label1:
        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners>;

        if $r1 == null goto label4;

        $i1 = 0;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

     label2:
        if $i1 >= $i2 goto label4;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) $r2;

        if $r3 == null goto label3;

        interfaceinvoke $r3.<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>(r0, $i0);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;
    }

    public b.i.i.I onWindowInsetChanged(b.i.i.I)
    {
        b.i.i.I $r1, $r2, $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: b.i.i.I;

        $z0 = staticinvoke <b.i.i.y: boolean m(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        $r3 = r0.<com.google.android.material.appbar.AppBarLayout: b.i.i.I lastInsets>;

        $z0 = staticinvoke <b.i.h.c: boolean a(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 != 0 goto label3;

        r0.<com.google.android.material.appbar.AppBarLayout: b.i.i.I lastInsets> = $r2;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void updateWillNotDraw()>();

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label3:
        return $r1;
    }

    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    {
        com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener $r1;
        java.util.List $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: java.util.List listeners>;

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    {
        com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener;

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)>($r1);

        return;
    }

    public void resetPendingAction()
    {
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        r0.<com.google.android.material.appbar.AppBarLayout: int pendingAction> = 0;

        return;
    }

    public void setElevation(float)
    {
        float $f0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.LinearLayout: void setElevation(float)>($f0);

        staticinvoke <com.google.android.material.shape.MaterialShapeUtils: void setElevation(android.view.View,float)>(r0, $f0);

        return;
    }

    public void setExpanded(boolean)
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 = staticinvoke <b.i.i.y: boolean E(android.view.View)>(r0);

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean)>($z0, $z1);

        return;
    }

    public void setExpanded(boolean, boolean)
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean,boolean)>($z0, $z1, 1);

        return;
    }

    public void setLiftOnScroll(boolean)
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.appbar.AppBarLayout: boolean liftOnScroll> = $z0;

        return;
    }

    public void setLiftOnScrollTargetViewId(int)
    {
        int $i0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.appbar.AppBarLayout: int liftOnScrollTargetViewId> = $i0;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void clearLiftOnScrollTargetView()>();

        return;
    }

    public boolean setLiftable(boolean)
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.appbar.AppBarLayout: boolean liftableOverride> = 1;

        $z0 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean setLiftableState(boolean)>($z0);

        return $z0;
    }

    public boolean setLifted(boolean)
    {
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)>($z0);

        return $z0;
    }

    public boolean setLiftedState(boolean)
    {
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0, $z1;
        com.google.android.material.shape.MaterialShapeDrawable $r2;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.google.android.material.appbar.AppBarLayout: boolean lifted>;

        if $z1 == $z0 goto label2;

        r0.<com.google.android.material.appbar.AppBarLayout: boolean lifted> = $z0;

        virtualinvoke r0.<android.widget.LinearLayout: void refreshDrawableState()>();

        $z1 = r0.<com.google.android.material.appbar.AppBarLayout: boolean liftOnScroll>;

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>();

        $z1 = $r1 instanceof com.google.android.material.shape.MaterialShapeDrawable;

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>();

        $r2 = (com.google.android.material.shape.MaterialShapeDrawable) $r1;

        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)>($r2, $z0);

     label1:
        return 1;

     label2:
        return 0;
    }

    public void setOrientation(int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>($i0);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AppBarLayout is always vertical and does not support horizontal orientation");

        throw $r1;
    }

    public void setStatusBarForeground(android.graphics.drawable.Drawable)
    {
        int[] $r4;
        int $i0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r2 == $r1 goto label7;

        $r3 = null;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        if $r1 == null goto label2;

        $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground> = $r3;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        $r4 = virtualinvoke r0.<android.widget.LinearLayout: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

     label3:
        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        $i0 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        staticinvoke <b.i.c.a.a: boolean a(android.graphics.drawable.Drawable,int)>($r1, $i0);

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVisibility()>();

        if $i0 != 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 0);

        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label6:
        specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: void updateWillNotDraw()>();

        staticinvoke <b.i.i.y: void I(android.view.View)>(r0);

     label7:
        return;
    }

    public void setStatusBarForegroundColor(int)
    {
        int $i0;
        android.graphics.drawable.ColorDrawable $r1;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setStatusBarForegroundResource(int)
    {
        android.content.Context $r1;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <b.b.b.a.a: android.graphics.drawable.Drawable c(android.content.Context,int)>($r1, $i0);

        virtualinvoke r0.<com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setTargetElevation(float)
    {
        int $i0;
        float $f0;
        com.google.android.material.appbar.AppBarLayout r0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $f0 := @parameter0: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>(r0, $f0);

     label1:
        return;
    }

    public void setVisibility(int)
    {
        int $i0;
        android.graphics.drawable.Drawable $r1;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.widget.LinearLayout: void setVisibility(int)>($i0);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r1 == null goto label3;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 0);

     label3:
        return;
    }

    public boolean shouldLift(android.view.View)
    {
        int $i0;
        android.view.View $r1, $r2;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = specialinvoke r0.<com.google.android.material.appbar.AppBarLayout: android.view.View findLiftOnScrollTargetView(android.view.View)>($r1);

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r1 = $r2;

     label2:
        if $r1 == null goto label4;

        $i0 = -1;

        $z0 = virtualinvoke $r1.<android.view.View: boolean canScrollVertically(int)>($i0);

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        if $i0 <= 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r1, $r2;
        com.google.android.material.appbar.AppBarLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.appbar.AppBarLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable statusBarForeground>;

        if $r1 != $r2 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
