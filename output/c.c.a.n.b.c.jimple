public class c.c.a.n.b.c extends java.lang.Object
{
    public static final java.lang.String a;

    public static java.lang.String a()
    {
        java.lang.String r0;

        r0 = <c.c.a.n.b.c: java.lang.String a>;

        return r0;
    }

    public static org.json.JSONObject a(java.util.HashMap, java.util.HashMap)
    {
        java.util.HashMap $r0, $r2;
        org.json.JSONObject $r1;

        $r2 := @parameter0: java.util.HashMap;

        $r0 := @parameter1: java.util.HashMap;

        $r1 = staticinvoke <c.c.a.n.b.c: org.json.JSONObject b(java.util.HashMap,java.util.HashMap)>($r2, $r0);

        return $r1;
    }

    public static void a(android.content.Context)
    {
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        return;
    }

    public static java.lang.String b()
    {
        c.c.a.n.b.e $r1;
        java.util.Date $r5;
        java.text.SimpleDateFormat $r0;
        java.util.Calendar $r4;
        java.util.Locale $r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r2, $r6, $r8;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <c.c.a.n.b.e: c.c.a.n.b.e Q>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.e: java.lang.String a()>();

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r2, $r3);

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r5 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        $r2 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r5);

        $r6 = <c.c.a.n.b.c: java.lang.String a>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Report Date: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, $r8);

        return $r2;
    }

    public static org.json.JSONObject b(java.util.HashMap, java.util.HashMap)
    {
        c.c.a.n.b.d $r10;
        java.util.HashMap $r1, $r2;
        org.json.JSONObject $r0, $r3, $r9;
        c.c.a.d.d $r14;
        java.lang.String $r11, $r12;
        boolean $z0;
        com.caremark.caremark.util.RXClaimConstants $r13;
        java.util.Map$Entry $r8;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Exception $r15;
        java.lang.Object $r7;
        java.lang.StringBuilder $r16;
        org.json.JSONArray $r4;

        $r1 := @parameter0: java.util.HashMap;

        $r2 := @parameter1: java.util.HashMap;

        $r0 = new org.json.JSONObject;

        specialinvoke $r0.<org.json.JSONObject: void <init>()>();

        $r3 = new org.json.JSONObject;

        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        $r4 = new org.json.JSONArray;

        specialinvoke $r4.<org.json.JSONArray: void <init>()>();

     label01:
        $r5 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label12;

     label04:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

     label05:
        $r9 = new org.json.JSONObject;

     label06:
        specialinvoke $r9.<org.json.JSONObject: void <init>()>();

     label07:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d ca>;

     label08:
        $r11 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r7);

     label09:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d da>;

     label10:
        $r11 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r7);

        virtualinvoke $r4.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r9);

     label11:
        goto label02;

     label12:
        $r2 = staticinvoke <c.c.a.n.b.c: java.util.HashMap c()>();

        $r5 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label14:
        if $z0 == 0 goto label17;

     label15:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r7);

     label16:
        goto label13;

     label17:
        $r5 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label22;

     label20:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r7);

     label21:
        goto label18;

     label22:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d x>;

     label23:
        $r11 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

        $r12 = staticinvoke <c.c.a.n.b.c: java.lang.String b()>();

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r12);

     label24:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d A>;

     label25:
        $r11 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

     label26:
        $r9 = new org.json.JSONObject;

     label27:
        specialinvoke $r9.<org.json.JSONObject: void <init>()>();

     label28:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d F>;

     label29:
        $r12 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

        $r9 = virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r12, $r4);

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r9);

     label30:
        $r13 = <com.caremark.caremark.util.RXClaimConstants: com.caremark.caremark.util.RXClaimConstants TOKEN_ID>;

     label31:
        $r11 = virtualinvoke $r13.<com.caremark.caremark.util.RXClaimConstants: java.lang.String getName()>();

        $r14 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        $r12 = virtualinvoke $r14.<c.c.a.d.d: java.lang.String f()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r12);

     label32:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d u>;

     label33:
        $r11 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

        $r14 = staticinvoke <c.c.a.d.d: c.c.a.d.d w()>();

        $r12 = virtualinvoke $r14.<c.c.a.d.d: java.lang.String f()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r12);

     label34:
        $r10 = <c.c.a.n.b.d: c.c.a.n.b.d H>;

     label35:
        $r11 = virtualinvoke $r10.<c.c.a.n.b.d: java.lang.String a()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r11, $r3);

     label36:
        goto label38;

     label37:
        $r15 := @caughtexception;

        $r11 = <c.c.a.n.b.c: java.lang.String a>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in getJsPayload :- ");

        $r12 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r12);

     label38:
        $r11 = <c.c.a.n.b.c: java.lang.String a>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("outPutObject :- ");

        $r12 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r12);

        return $r0;

        catch java.lang.Exception from label01 to label03 with label37;
        catch java.lang.Exception from label04 to label05 with label37;
        catch java.lang.Exception from label06 to label07 with label37;
        catch java.lang.Exception from label08 to label09 with label37;
        catch java.lang.Exception from label10 to label11 with label37;
        catch java.lang.Exception from label12 to label14 with label37;
        catch java.lang.Exception from label15 to label16 with label37;
        catch java.lang.Exception from label17 to label19 with label37;
        catch java.lang.Exception from label20 to label21 with label37;
        catch java.lang.Exception from label23 to label24 with label37;
        catch java.lang.Exception from label25 to label26 with label37;
        catch java.lang.Exception from label27 to label28 with label37;
        catch java.lang.Exception from label29 to label30 with label37;
        catch java.lang.Exception from label31 to label32 with label37;
        catch java.lang.Exception from label33 to label34 with label37;
        catch java.lang.Exception from label35 to label36 with label37;
    }

    public static java.util.HashMap c()
    {
        c.c.a.n.b.d $r1;
        c.c.a.n.b.e $r3;
        java.util.HashMap $r0;
        java.lang.String $r2, $r4;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = <c.c.a.n.b.d: c.c.a.n.b.d v>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.d: java.lang.String a()>();

        $r3 = <c.c.a.n.b.e: c.c.a.n.b.e b>;

        $r4 = virtualinvoke $r3.<c.c.a.n.b.e: java.lang.String a()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r1 = <c.c.a.n.b.d: c.c.a.n.b.d w>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.d: java.lang.String a()>();

        $r3 = <c.c.a.n.b.e: c.c.a.n.b.e c>;

        $r4 = virtualinvoke $r3.<c.c.a.n.b.e: java.lang.String a()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r1 = <c.c.a.n.b.d: c.c.a.n.b.d B>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.d: java.lang.String a()>();

        $r4 = staticinvoke <c.c.a.n.c: java.lang.String a(boolean)>(1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r1 = <c.c.a.n.b.d: c.c.a.n.b.d C>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.d: java.lang.String a()>();

        $r3 = <c.c.a.n.b.e: c.c.a.n.b.e e>;

        $r4 = virtualinvoke $r3.<c.c.a.n.b.e: java.lang.String a()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r1 = <c.c.a.n.b.d: c.c.a.n.b.d I>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.d: java.lang.String a()>();

        $r4 = staticinvoke <c.c.a.n.b.c: java.lang.String b()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r1 = <c.c.a.n.b.d: c.c.a.n.b.d G>;

        $r2 = virtualinvoke $r1.<c.c.a.n.b.d: java.lang.String a()>();

        $r3 = <c.c.a.n.b.e: c.c.a.n.b.e g>;

        $r4 = virtualinvoke $r3.<c.c.a.n.b.e: java.lang.String a()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $r0;
    }

    public static void c(java.util.HashMap, java.util.HashMap)
    {
        c.c.a.n.b.c$a $r1;
        java.util.HashMap $r0, $r2;
        java.util.HashMap[] $r3;

        $r2 := @parameter0: java.util.HashMap;

        $r0 := @parameter1: java.util.HashMap;

        $r1 = new c.c.a.n.b.c$a;

        specialinvoke $r1.<c.c.a.n.b.c$a: void <init>(c.c.a.n.b.a)>(null);

        $r3 = newarray (java.util.HashMap)[2];

        $r3[0] = $r2;

        $r3[1] = $r0;

        virtualinvoke $r1.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    public static void <clinit>()
    {
        <c.c.a.n.b.c: java.lang.String a> = "c.c.a.n.b.c";

        return;
    }
}
