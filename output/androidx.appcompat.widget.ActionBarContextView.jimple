public class androidx.appcompat.widget.ActionBarContextView extends b.b.f.b
{
    public static final java.lang.String TAG;
    public android.view.View mClose;
    public int mCloseItemLayout;
    public android.view.View mCustomView;
    public java.lang.CharSequence mSubtitle;
    public int mSubtitleStyleRes;
    public android.widget.TextView mSubtitleView;
    public java.lang.CharSequence mTitle;
    public android.widget.LinearLayout mTitleLayout;
    public boolean mTitleOptional;
    public int mTitleStyleRes;
    public android.widget.TextView mTitleView;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.appcompat.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <b.b.a: int actionModeStyle>;

        specialinvoke r0.<androidx.appcompat.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2;
        android.graphics.drawable.Drawable $r5;
        androidx.appcompat.widget.ActionBarContextView r0;
        b.b.f.ma $r4;
        android.util.AttributeSet $r3;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<b.b.f.b: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r3, $i0);

        $r1 = <b.b.j: int[] ActionMode>;

        $r4 = staticinvoke <b.b.f.ma: b.b.f.ma a(android.content.Context,android.util.AttributeSet,int[],int,int)>($r2, $r3, $r1, $i0, 0);

        $i0 = <b.b.j: int ActionMode_background>;

        $r5 = virtualinvoke $r4.<b.b.f.ma: android.graphics.drawable.Drawable b(int)>($i0);

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>(r0, $r5);

        $i0 = <b.b.j: int ActionMode_titleTextStyle>;

        $i0 = virtualinvoke $r4.<b.b.f.ma: int g(int,int)>($i0, 0);

        r0.<androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes> = $i0;

        $i0 = <b.b.j: int ActionMode_subtitleTextStyle>;

        $i0 = virtualinvoke $r4.<b.b.f.ma: int g(int,int)>($i0, 0);

        r0.<androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes> = $i0;

        $i0 = <b.b.j: int ActionMode_height>;

        $i0 = virtualinvoke $r4.<b.b.f.ma: int f(int,int)>($i0, 0);

        r0.<b.b.f.b: int mContentHeight> = $i0;

        $i0 = <b.b.j: int ActionMode_closeItemLayout>;

        $i1 = <b.b.g: int abc_action_mode_close_item_material>;

        $i0 = virtualinvoke $r4.<b.b.f.ma: int g(int,int)>($i0, $i1);

        r0.<androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout> = $i0;

        virtualinvoke $r4.<b.b.f.ma: void a()>();

        return;
    }

    private void initTitle()
    {
        android.content.Context $r2;
        android.widget.LinearLayout $r1;
        android.view.ViewParent $r7;
        java.lang.CharSequence $r6;
        android.view.LayoutInflater $r3;
        androidx.appcompat.widget.ActionBarContextView r0;
        android.widget.TextView $r5;
        byte $b1, $b2;
        int $i0, $i3;
        android.view.View $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $i0 = <b.b.g: int abc_action_bar_title_item>;

        virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, r0);

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i3 = -1;

        $i0 = $i0 + $i3;

        $r4 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $r1 = (android.widget.LinearLayout) $r4;

        r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout> = $r1;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $i0 = <b.b.f: int action_bar_title>;

        $r4 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>($i0);

        $r5 = (android.widget.TextView) $r4;

        r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView> = $r5;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $i0 = <b.b.f: int action_bar_subtitle>;

        $r4 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>($i0);

        $r5 = (android.widget.TextView) $r4;

        r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView> = $r5;

        $i0 = r0.<androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes>;

        if $i0 == 0 goto label1;

        $r5 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView>;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $i0 = r0.<androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes>;

        virtualinvoke $r5.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r2, $i0);

     label1:
        $i0 = r0.<androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes>;

        if $i0 == 0 goto label2;

        $r5 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView>;

        $r2 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $i0 = r0.<androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes>;

        virtualinvoke $r5.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r2, $i0);

     label2:
        $r5 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView>;

        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        $r5 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView>;

        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        $z0 = $z0 ^ 1;

        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        $z1 = $z1 ^ 1;

        $r5 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView>;

        $b1 = 0;

        if $z1 == 0 goto label3;

        $b2 = 0;

        goto label4;

     label3:
        $b2 = 8;

     label4:
        virtualinvoke $r5.<android.widget.TextView: void setVisibility(int)>($b2);

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $z0 != 0 goto label6;

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        $b1 = 8;

     label6:
        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>($b1);

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $r7 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.ViewParent getParent()>();

        if $r7 != null goto label7;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>($r1);

     label7:
        return;
    }

    public volatile void animateToVisibility(int)
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i0 := @parameter0: int;

        specialinvoke r0.<b.b.f.b: void animateToVisibility(int)>($i0);

        return;
    }

    public volatile boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $z0 = specialinvoke r0.<b.b.f.b: boolean canShowOverflowMenu()>();

        return $z0;
    }

    public void closeMode()
    {
        android.view.View $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        if $r1 != null goto label1;

        virtualinvoke r0.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

     label1:
        return;
    }

    public volatile void dismissPopupMenus()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        specialinvoke r0.<b.b.f.b: void dismissPopupMenus()>();

        return;
    }

    public android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.view.ViewGroup$MarginLayoutParams $r1;
        int $i0, $i1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 = new android.view.ViewGroup$MarginLayoutParams;

        $i0 = -1;

        $i1 = -2;

        specialinvoke $r1.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        android.view.ViewGroup$MarginLayoutParams $r2;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.view.ViewGroup$MarginLayoutParams;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    public volatile int getAnimatedVisibility()
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i0 = specialinvoke r0.<b.b.f.b: int getAnimatedVisibility()>();

        return $i0;
    }

    public volatile int getContentHeight()
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i0 = specialinvoke r0.<b.b.f.b: int getContentHeight()>();

        return $i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        java.lang.CharSequence r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        r1 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle>;

        return r1;
    }

    public java.lang.CharSequence getTitle()
    {
        java.lang.CharSequence r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        r1 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        return r1;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean d()>();

        return $z0;

     label1:
        return 0;
    }

    public void initForMode(b.b.e.b)
    {
        android.content.Context $r3;
        android.view.ViewParent $r5;
        androidx.appcompat.widget.ActionMenuView $r10;
        int $i0, $i1;
        android.view.Menu $r6;
        android.view.View $r2;
        b.b.f.d $r11;
        androidx.appcompat.widget.ActionMenuPresenter $r8, $r12;
        b.b.e.b $r1;
        android.view.ViewGroup$LayoutParams $r13;
        android.view.LayoutInflater $r4;
        androidx.appcompat.view.menu.MenuBuilder $r7;
        androidx.appcompat.widget.ActionBarContextView r0;
        b.b.e.a.o $r9;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: b.b.e.b;

        $r2 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $i0 = r0.<androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout>;

        $r2 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, r0, 0);

        r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose> = $r2;

        $r2 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>($r2);

        goto label2;

     label1:
        $r5 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 != null goto label2;

        $r2 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>($r2);

     label2:
        $r2 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        $i0 = <b.b.f: int action_mode_close_button>;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>($i0);

        $r11 = new b.b.f.d;

        specialinvoke $r11.<b.b.f.d: void <init>(androidx.appcompat.widget.ActionBarContextView,b.b.e.b)>(r0, $r1);

        virtualinvoke $r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r11);

        $r6 = virtualinvoke $r1.<b.b.e.b: android.view.Menu c()>();

        $r7 = (androidx.appcompat.view.menu.MenuBuilder) $r6;

        $r8 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r8 == null goto label3;

        virtualinvoke $r8.<androidx.appcompat.widget.ActionMenuPresenter: boolean b()>();

     label3:
        $r12 = new androidx.appcompat.widget.ActionMenuPresenter;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r12.<androidx.appcompat.widget.ActionMenuPresenter: void <init>(android.content.Context)>($r3);

        r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter> = $r12;

        $r8 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r8.<androidx.appcompat.widget.ActionMenuPresenter: void c(boolean)>(1);

        $r13 = new android.view.ViewGroup$LayoutParams;

        $i0 = -2;

        $i1 = -1;

        specialinvoke $r13.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>($i0, $i1);

        $r8 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r3 = r0.<b.b.f.b: android.content.Context mPopupContext>;

        virtualinvoke $r7.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(b.b.e.a.n,android.content.Context)>($r8, $r3);

        $r8 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        $r9 = virtualinvoke $r8.<androidx.appcompat.widget.ActionMenuPresenter: b.b.e.a.o b(android.view.ViewGroup)>(r0);

        $r10 = (androidx.appcompat.widget.ActionMenuView) $r9;

        r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView> = $r10;

        $r10 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView>;

        staticinvoke <b.i.i.y: void a(android.view.View,android.graphics.drawable.Drawable)>($r10, null);

        $r10 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r10, $r13);

        return;
    }

    public volatile boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $z0 = specialinvoke r0.<b.b.f.b: boolean isOverflowMenuShowPending()>();

        return $z0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean g()>();

        return $z0;

     label1:
        return 0;
    }

    public volatile boolean isOverflowReserved()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $z0 = specialinvoke r0.<b.b.f.b: boolean isOverflowReserved()>();

        return $z0;
    }

    public boolean isTitleOptional()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        z0 = r0.<androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional>;

        return z0;
    }

    public void killMode()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        virtualinvoke r0.<android.view.ViewGroup: void removeAllViews()>();

        r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView> = null;

        r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView> = null;

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean d()>();

        $r1 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean e()>();

     label1:
        return;
    }

    public volatile boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<b.b.f.b: boolean onHoverEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.content.Context $r4;
        java.lang.CharSequence $r5;
        int $i0;
        java.lang.Class $r2;
        android.view.accessibility.AccessibilityEvent $r1;
        java.lang.String $r3;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 32 goto label1;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View)>(r0);

        $r2 = class "Landroidx/appcompat/widget/ActionBarContextView;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $r4 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r3 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r3);

        $r5 = r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r5);

        return;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        android.widget.LinearLayout $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ActionBarContextView r0;
        androidx.appcompat.widget.ActionMenuView $r5;
        android.view.ViewGroup$MarginLayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $z0 = staticinvoke <b.b.f.za: boolean a(android.view.View)>(r0);

        if $z0 == 0 goto label01;

        $i4 = $i2 - $i0;

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i5 = $i4 - $i5;

        goto label02;

     label01:
        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

     label02:
        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i1 = $i3 - $i1;

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i1 = $i1 - $i3;

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i1 - $i3;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        if $r1 == null goto label07;

        $i3 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i3 == 8 goto label07;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        if $z0 == 0 goto label03;

        $i6 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        goto label04;

     label03:
        $i6 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

     label04:
        if $z0 == 0 goto label05;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        goto label06;

     label05:
        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

     label06:
        $i5 = staticinvoke <b.b.f.b: int next(int,int,boolean)>($i5, $i6, $z0);

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        $i6 = virtualinvoke r0.<b.b.f.b: int positionChild(android.view.View,int,int,int,boolean)>($r1, $i5, $i4, $i1, $z0);

        $i5 = $i5 + $i6;

        $i3 = staticinvoke <b.b.f.b: int next(int,int,boolean)>($i5, $i3, $z0);

        goto label08;

     label07:
        $i3 = $i5;

     label08:
        $r4 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $r4 == null goto label09;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r1 != null goto label09;

        $i5 = virtualinvoke $r4.<android.widget.LinearLayout: int getVisibility()>();

        if $i5 == 8 goto label09;

        $r4 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $i5 = virtualinvoke r0.<b.b.f.b: int positionChild(android.view.View,int,int,int,boolean)>($r4, $i3, $i4, $i1, $z0);

        $i3 = $i3 + $i5;

     label09:
        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r1 == null goto label10;

        virtualinvoke r0.<b.b.f.b: int positionChild(android.view.View,int,int,int,boolean)>($r1, $i3, $i4, $i1, $z0);

     label10:
        if $z0 == 0 goto label11;

        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        goto label12;

     label11:
        $i0 = $i2 - $i0;

        $i2 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i0 = $i0 - $i2;

     label12:
        $r5 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r5 == null goto label13;

        $z0 = $z0 ^ 1;

        virtualinvoke r0.<b.b.f.b: int positionChild(android.view.View,int,int,int,boolean)>($r5, $i0, $i4, $i1, $z0);

     label13:
        return;
    }

    public void onMeasure(int, int)
    {
        java.lang.IllegalStateException $r11;
        android.view.ViewParent $r5;
        android.widget.LinearLayout $r6;
        androidx.appcompat.widget.ActionMenuView $r4;
        byte $b10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View $r1;
        java.lang.String $r9;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.ViewGroup$MarginLayoutParams $r3;
        java.lang.StringBuilder $r7, $r10;
        java.lang.Class $r8;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = 1073741824;

        if $i2 != 1073741824 goto label24;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i2 == 0 goto label23;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i2 = r0.<b.b.f.b: int mContentHeight>;

        if $i2 <= 0 goto label01;

        goto label02;

     label01:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

     label02:
        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i1 + $i4;

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i4 = $i0 - $i4;

        $i5 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i6 = $i4 - $i5;

        $i5 = $i2 - $i1;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, -2147483648);

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        $i4 = 0;

        if $r1 == null goto label03;

        $i6 = virtualinvoke r0.<b.b.f.b: int measureChildView(android.view.View,int,int,int)>($r1, $i6, $i7, 0);

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mClose>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i8 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i9 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i8 = $i8 + $i9;

        $i6 = $i6 - $i8;

     label03:
        $r4 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r4 == null goto label04;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        if $r5 != r0 goto label04;

        $r4 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i6 = virtualinvoke r0.<b.b.f.b: int measureChildView(android.view.View,int,int,int)>($r4, $i6, $i7, 0);

     label04:
        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $r6 == null goto label11;

        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r1 != null goto label11;

        $z0 = r0.<androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional>;

        if $z0 == 0 goto label10;

        $i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void measure(int,int)>($i8, $i7);

        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        $i7 = virtualinvoke $r6.<android.widget.LinearLayout: int getMeasuredWidth()>();

        if $i7 > $i6 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        if $z0 == 0 goto label07;

        $i6 = $i6 - $i7;

     label07:
        $r6 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $z0 == 0 goto label08;

        $b10 = 0;

        goto label09;

     label08:
        $b10 = 8;

     label09:
        virtualinvoke $r6.<android.widget.LinearLayout: void setVisibility(int)>($b10);

        goto label11;

     label10:
        $i6 = virtualinvoke r0.<b.b.f.b: int measureChildView(android.view.View,int,int,int)>($r6, $i6, $i7, 0);

     label11:
        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r1 == null goto label18;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i7 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i8 = -2;

        if $i7 == $i8 goto label12;

        $i7 = 1073741824;

        goto label13;

     label12:
        $i7 = -2147483648;

     label13:
        $i8 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i8 < 0 goto label14;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i6);

     label14:
        $i8 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        $i9 = -2;

        if $i8 == $i9 goto label15;

        goto label16;

     label15:
        $i3 = -2147483648;

     label16:
        $i8 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i8 < 0 goto label17;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i5);

     label17:
        $r1 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView>;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, $i7);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i6, $i3);

     label18:
        $i3 = r0.<b.b.f.b: int mContentHeight>;

        if $i3 > 0 goto label22;

        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = 0;

     label19:
        if $i4 >= $i3 goto label21;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = $i5 + $i1;

        if $i5 <= $i2 goto label20;

        $i2 = $i5;

     label20:
        $i4 = $i4 + 1;

        goto label19;

     label21:
        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i2);

        return;

     label22:
        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i2);

        return;

     label23:
        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        $r7 = $r10;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r8 = class "Landroidx/appcompat/widget/ActionBarContextView;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with android:layout_height=\"wrap_content\"");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label24:
        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        $r7 = $r10;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r8 = class "Landroidx/appcompat/widget/ActionBarContextView;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with android:layout_width=\"match_parent\" (or fill_parent)");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        goto label25;

     label25:
        throw $r11;
    }

    public volatile boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<b.b.f.b: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public volatile void postShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        specialinvoke r0.<b.b.f.b: void postShowOverflowMenu()>();

        return;
    }

    public void setContentHeight(int)
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i0 := @parameter0: int;

        r0.<b.b.f.b: int mContentHeight> = $i0;

        return;
    }

    public void setCustomView(android.view.View)
    {
        android.widget.LinearLayout $r3;
        android.view.View $r1, $r2;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

     label1:
        r0.<androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView> = $r1;

        if $r1 == null goto label2;

        $r3 = r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout>;

        if $r3 == null goto label2;

        virtualinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r3);

        r0.<androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout> = null;

     label2:
        if $r1 == null goto label3;

        virtualinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>($r1);

     label3:
        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle> = $r1;

        specialinvoke r0.<androidx.appcompat.widget.ActionBarContextView: void initTitle()>();

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle> = $r1;

        specialinvoke r0.<androidx.appcompat.widget.ActionBarContextView: void initTitle()>();

        return;
    }

    public void setTitleOptional(boolean)
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional>;

        if $z0 == $z1 goto label1;

        virtualinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        r0.<androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional> = $z0;

        return;
    }

    public volatile void setVisibility(int)
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i0 := @parameter0: int;

        specialinvoke r0.<b.b.f.b: void setVisibility(int)>($i0);

        return;
    }

    public volatile b.i.i.E setupAnimatorToVisibility(int, long)
    {
        b.i.i.E $r1;
        int $i1;
        long $l0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $i1 := @parameter0: int;

        $l0 := @parameter1: long;

        $r1 = specialinvoke r0.<b.b.f.b: b.i.i.E setupAnimatorToVisibility(int,long)>($i1, $l0);

        return $r1;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        return 0;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.ActionBarContextView;

        $r1 = r0.<b.b.f.b: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean i()>();

        return $z0;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.ActionBarContextView: java.lang.String TAG> = "ActionBarContextView";

        return;
    }
}
