public class com.google.android.material.internal.FlowLayout extends android.view.ViewGroup
{
    public int itemSpacing;
    public int lineSpacing;
    public int rowCount;
    public boolean singleLine;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.google.android.material.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.google.android.material.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.google.android.material.internal.FlowLayout: boolean singleLine> = 0;

        specialinvoke r0.<com.google.android.material.internal.FlowLayout: void loadFromAttributes(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        $i0 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i1, $i0);

        r0.<com.google.android.material.internal.FlowLayout: boolean singleLine> = 0;

        specialinvoke r0.<com.google.android.material.internal.FlowLayout: void loadFromAttributes(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public static int getMeasuredDimension(int, int, int)
    {
        int $i0, $i1, $i2;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 == -2147483648 goto label2;

        if $i0 == 1073741824 goto label1;

        return $i1;

     label1:
        return $i2;

     label2:
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        return $i2;
    }

    private void loadFromAttributes(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        android.util.AttributeSet $r3;
        int[] $r1;
        int $i0;
        android.content.res.Resources$Theme $r4;
        com.google.android.material.internal.FlowLayout r0;
        android.content.res.TypedArray $r5;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r1 = <com.google.android.material.R$styleable: int[] FlowLayout>;

        $r5 = virtualinvoke $r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r3, $r1, 0, 0);

        $i0 = <com.google.android.material.R$styleable: int FlowLayout_lineSpacing>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<com.google.android.material.internal.FlowLayout: int lineSpacing> = $i0;

        $i0 = <com.google.android.material.R$styleable: int FlowLayout_itemSpacing>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<com.google.android.material.internal.FlowLayout: int itemSpacing> = $i0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public int getItemSpacing()
    {
        int i0;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        i0 = r0.<com.google.android.material.internal.FlowLayout: int itemSpacing>;

        return i0;
    }

    public int getLineSpacing()
    {
        int i0;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        i0 = r0.<com.google.android.material.internal.FlowLayout: int lineSpacing>;

        return i0;
    }

    public int getRowCount()
    {
        int i0;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        i0 = r0.<com.google.android.material.internal.FlowLayout: int rowCount>;

        return i0;
    }

    public int getRowIndex(android.view.View)
    {
        int $i0;
        android.view.View $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        com.google.android.material.internal.FlowLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $r1 := @parameter0: android.view.View;

        $i0 = <com.google.android.material.R$id: int row_index_key>;

        $r2 = virtualinvoke $r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 != 0 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public boolean isSingleLine()
    {
        com.google.android.material.internal.FlowLayout r0;
        boolean z0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        z0 = r0.<com.google.android.material.internal.FlowLayout: boolean singleLine>;

        return z0;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        java.lang.Integer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View $r1;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 != 0 goto label01;

        r0.<com.google.android.material.internal.FlowLayout: int rowCount> = 0;

        return;

     label01:
        r0.<com.google.android.material.internal.FlowLayout: int rowCount> = 1;

        $i1 = staticinvoke <b.i.i.y: int p(android.view.View)>(r0);

        if $i1 != 1 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        if $z0 == 0 goto label04;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        goto label05;

     label04:
        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

     label05:
        if $z0 == 0 goto label06;

        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        goto label07;

     label06:
        $i4 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

     label07:
        $i3 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i5 = $i3;

        $i0 = $i2 - $i0;

        $i0 = $i0 - $i4;

        $i4 = $i1;

        $i2 = 0;

     label08:
        $i6 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        if $i2 >= $i6 goto label16;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $i6 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i6 != 8 goto label09;

        $i6 = <com.google.android.material.R$id: int row_index_key>;

        $i7 = -1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r1.<android.view.View: void setTag(int,java.lang.Object)>($i6, $r2);

        goto label15;

     label09:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z1 = $r3 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label10;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i6 = staticinvoke <b.i.i.f: int b(android.view.ViewGroup$MarginLayoutParams)>($r4);

        $i7 = staticinvoke <b.i.i.f: int a(android.view.ViewGroup$MarginLayoutParams)>($r4);

        goto label11;

     label10:
        $i7 = 0;

        $i6 = 0;

     label11:
        $i8 = $i4 + $i6;

        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i8 = $i8 + $i9;

        $z1 = r0.<com.google.android.material.internal.FlowLayout: boolean singleLine>;

        if $z1 != 0 goto label12;

        if $i8 <= $i0 goto label12;

        $i3 = r0.<com.google.android.material.internal.FlowLayout: int lineSpacing>;

        $i3 = $i5 + $i3;

        $i4 = r0.<com.google.android.material.internal.FlowLayout: int rowCount>;

        $i4 = $i4 + 1;

        r0.<com.google.android.material.internal.FlowLayout: int rowCount> = $i4;

        $i4 = $i1;

     label12:
        $i5 = <com.google.android.material.R$id: int row_index_key>;

        $i8 = r0.<com.google.android.material.internal.FlowLayout: int rowCount>;

        $i8 = $i8 - 1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke $r1.<android.view.View: void setTag(int,java.lang.Object)>($i5, $r2);

        $i8 = $i4 + $i6;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i9 = $i5 + $i8;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = $i5 + $i3;

        if $z0 == 0 goto label13;

        $i8 = $i0 - $i9;

        $i9 = $i0 - $i4;

        $i9 = $i9 - $i6;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i8, $i3, $i9, $i5);

        goto label14;

     label13:
        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i8, $i3, $i9, $i5);

     label14:
        $i6 = $i6 + $i7;

        $i7 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i6 = $i6 + $i7;

        $i7 = r0.<com.google.android.material.internal.FlowLayout: int itemSpacing>;

        $i6 = $i6 + $i7;

        $i4 = $i4 + $i6;

     label15:
        $i2 = $i2 + 1;

        goto label08;

     label16:
        return;
    }

    public void onMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.view.View $r1;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i4 == -2147483648 goto label02;

        if $i4 != 1073741824 goto label01;

        goto label02;

     label01:
        $i7 = 2147483647;

        goto label03;

     label02:
        $i7 = $i3;

     label03:
        $i8 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i9 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingTop()>();

        $i10 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i7 = $i7 - $i10;

        $i11 = $i8;

        $i12 = $i9;

        $i10 = $i9;

        $i8 = 0;

        $i9 = 0;

     label04:
        $i13 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        if $i8 >= $i13 goto label11;

        $r1 = virtualinvoke r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i8);

        $i13 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label05;

        goto label10;

     label05:
        virtualinvoke r0.<android.view.ViewGroup: void measureChild(android.view.View,int,int)>($r1, $i0, $i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r2 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label06;

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i14 = $i13;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        goto label07;

     label06:
        $i14 = 0;

        $i13 = 0;

     label07:
        $i2 = $i11 + $i14;

        $i15 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i2 + $i15;

        if $i2 <= $i7 goto label08;

        $z0 = virtualinvoke r0.<com.google.android.material.internal.FlowLayout: boolean isSingleLine()>();

        if $z0 != 0 goto label08;

        $i11 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingLeft()>();

        $i10 = r0.<com.google.android.material.internal.FlowLayout: int lineSpacing>;

        $i10 = $i10 + $i12;

     label08:
        $i12 = $i11 + $i14;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i12 + $i2;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i12 + $i10;

        if $i2 <= $i9 goto label09;

        $i9 = $i2;

     label09:
        $i14 = $i14 + $i13;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i14 = $i14 + $i2;

        $i2 = r0.<com.google.android.material.internal.FlowLayout: int itemSpacing>;

        $i14 = $i14 + $i2;

        $i11 = $i11 + $i14;

        $i14 = virtualinvoke r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = -1;

        $i14 = $i14 + $i2;

        if $i8 != $i14 goto label10;

        $i9 = $i9 + $i13;

     label10:
        $i8 = $i8 + 1;

        goto label04;

     label11:
        $i0 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingRight()>();

        $i0 = $i9 + $i0;

        $i1 = virtualinvoke r0.<android.view.ViewGroup: int getPaddingBottom()>();

        $i1 = $i12 + $i1;

        $i0 = staticinvoke <com.google.android.material.internal.FlowLayout: int getMeasuredDimension(int,int,int)>($i3, $i4, $i0);

        $i1 = staticinvoke <com.google.android.material.internal.FlowLayout: int getMeasuredDimension(int,int,int)>($i5, $i6, $i1);

        virtualinvoke r0.<android.view.ViewGroup: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public void setItemSpacing(int)
    {
        int $i0;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.FlowLayout: int itemSpacing> = $i0;

        return;
    }

    public void setLineSpacing(int)
    {
        int $i0;
        com.google.android.material.internal.FlowLayout r0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $i0 := @parameter0: int;

        r0.<com.google.android.material.internal.FlowLayout: int lineSpacing> = $i0;

        return;
    }

    public void setSingleLine(boolean)
    {
        com.google.android.material.internal.FlowLayout r0;
        boolean $z0;

        r0 := @this: com.google.android.material.internal.FlowLayout;

        $z0 := @parameter0: boolean;

        r0.<com.google.android.material.internal.FlowLayout: boolean singleLine> = $z0;

        return;
    }
}
