public final class j.a.b.m extends java.lang.Object
{
    public static final j.a.b.m a;

    static void <clinit>()
    {
        j.a.b.m $r0;

        $r0 = new j.a.b.m;

        specialinvoke $r0.<j.a.b.m: void <init>()>();

        <j.a.b.m: j.a.b.m a> = $r0;

        return;
    }

    public void <init>()
    {
        j.a.b.m r0;

        r0 := @this: j.a.b.m;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object a(java.lang.String, java.lang.ClassLoader, java.lang.Class)
    {
        java.lang.Object[] $r7;
        java.lang.Class[] $r5;
        java.lang.IllegalArgumentException $r10;
        java.lang.reflect.Constructor $r6;
        j.a.b.m r0;
        java.lang.Class $r3, $r4;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r1;
        java.lang.ClassLoader $r2;
        boolean $z0;

        r0 := @this: j.a.b.m;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.ClassLoader;

        $r3 := @parameter2: java.lang.Class;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 0, $r2);

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label1;

        $r5 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r5);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

        $r8 = virtualinvoke $r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

        return $r8;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected service of class ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but found ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalArgumentException;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r10;
    }

    public final java.util.List a(java.io.BufferedReader)
    {
        kotlin.TypeCastException $r10;
        j.a.b.m r0;
        int $i0, $i1;
        java.lang.String $r3;
        java.util.LinkedHashSet $r2, $r7;
        boolean $z0, $z1;
        java.lang.CharSequence $r4;
        char $c2;
        java.lang.IllegalArgumentException $r9;
        java.util.List $r6;
        java.lang.StringBuilder $r5, $r8;
        java.io.BufferedReader $r1;

        r0 := @this: j.a.b.m;

        $r1 := @parameter0: java.io.BufferedReader;

        $r7 = new java.util.LinkedHashSet;

        $r2 = $r7;

        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();

     label01:
        $r3 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r3 == null goto label12;

        $r3 = staticinvoke <i.j.s: java.lang.String b(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>($r3, "#", null, 2, null);

        if $r3 == null goto label11;

        $r4 = staticinvoke <i.j.s: java.lang.CharSequence f(java.lang.CharSequence)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $z0 = 0;

        $i0 = 0;

     label02:
        $i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label07;

        $c2 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 == 46 goto label04;

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c2);

        if $z1 == 0 goto label03;

        goto label04;

     label03:
        $z1 = 0;

        goto label05;

     label04:
        $z1 = 1;

     label05:
        if $z1 != 0 goto label06;

        $z1 = 0;

        goto label08;

     label06:
        $i0 = $i0 + 1;

        goto label02;

     label07:
        $z1 = 1;

     label08:
        if $z1 == 0 goto label10;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label09;

        $z0 = 1;

     label09:
        if $z0 == 0 goto label01;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        goto label01;

     label10:
        $r8 = new java.lang.StringBuilder;

        $r5 = $r8;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal service provider class name: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label11:
        $r10 = new kotlin.TypeCastException;

        specialinvoke $r10.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r10;

     label12:
        $r6 = staticinvoke <i.a.p: java.util.List c(java.lang.Iterable)>($r2);

        return $r6;
    }

    public final java.util.List a(java.lang.Class, java.lang.ClassLoader)
    {
        j.a.b.m r0;
        java.lang.Throwable $r1;
        java.util.List $r4;
        java.lang.Class $r2;
        java.util.ServiceLoader $r5;
        java.lang.ClassLoader $r3;

        r0 := @this: j.a.b.m;

        $r2 := @parameter0: java.lang.Class;

        $r3 := @parameter1: java.lang.ClassLoader;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "service");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r3, "loader");

     label1:
        $r4 = virtualinvoke r0.<j.a.b.m: java.util.List b(java.lang.Class,java.lang.ClassLoader)>($r2, $r3);

     label2:
        return $r4;

     label3:
        $r5 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>($r2, $r3);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r5, "ServiceLoader.load(service, loader)");

        $r4 = staticinvoke <i.a.p: java.util.List c(java.lang.Iterable)>($r5);

        return $r4;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public final java.util.List a(java.net.URL)
    {
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.net.URL $r1;
        java.util.jar.JarFile $r4;
        j.a.b.m r0;
        java.lang.String $r2, $r3;
        java.util.zip.ZipEntry $r7;
        boolean $z0;
        java.io.InputStreamReader $r6;
        java.util.List $r9;
        java.io.BufferedReader $r5;
        java.io.InputStream $r8;

        r0 := @this: j.a.b.m;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r2, "url.toString()");

        $z0 = staticinvoke <i.j.p: boolean a(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r2, "jar", 0, 2, null);

        if $z0 == 0 goto label18;

        $r3 = staticinvoke <i.j.s: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>($r2, "jar:file:", null, 2, null);

        $r3 = staticinvoke <i.j.s: java.lang.String b(java.lang.String,char,java.lang.String,int,java.lang.Object)>($r3, 33, null, 2, null);

        $r2 = staticinvoke <i.j.s: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>($r2, "!/", null, 2, null);

        $r4 = new java.util.jar.JarFile;

        specialinvoke $r4.<java.util.jar.JarFile: void <init>(java.lang.String,boolean)>($r3, 0);

     label01:
        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        $r7 = new java.util.zip.ZipEntry;

        specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r2);

        $r8 = virtualinvoke $r4.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r7);

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r8, "UTF-8");

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label02:
        r0 = <j.a.b.m: j.a.b.m a>;

        $r9 = virtualinvoke r0.<j.a.b.m: java.util.List a(java.io.BufferedReader)>($r5);

     label03:
        staticinvoke <i.e.a: void a(java.io.Closeable,java.lang.Throwable)>($r5, null);

     label04:
        virtualinvoke $r4.<java.util.jar.JarFile: void close()>();

     label05:
        return $r9;

     label06:
        $r10 := @caughtexception;

        throw $r10;

     label07:
        $r11 := @caughtexception;

     label08:
        throw $r11;

     label09:
        $r12 := @caughtexception;

     label10:
        staticinvoke <i.e.a: void a(java.io.Closeable,java.lang.Throwable)>($r5, $r11);

        throw $r12;

     label11:
        $r13 := @caughtexception;

        goto label14;

     label12:
        $r14 := @caughtexception;

     label13:
        throw $r14;

     label14:
        virtualinvoke $r4.<java.util.jar.JarFile: void close()>();

     label15:
        throw $r13;

     label16:
        $r15 := @caughtexception;

        if $r14 != null goto label17;

        throw $r15;

     label17:
        staticinvoke <i.a: void a(java.lang.Throwable,java.lang.Throwable)>($r14, $r15);

        throw $r14;

     label18:
        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        $r8 = staticinvoke <com.google.firebase.perf.network.FirebasePerfUrlConnection: java.io.InputStream openStream(java.net.URL)>($r1);

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r8);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label19:
        r0 = <j.a.b.m: j.a.b.m a>;

        $r9 = virtualinvoke r0.<j.a.b.m: java.util.List a(java.io.BufferedReader)>($r5);

     label20:
        staticinvoke <i.e.a: void a(java.io.Closeable,java.lang.Throwable)>($r5, null);

        return $r9;

     label21:
        $r16 := @caughtexception;

        goto label24;

     label22:
        $r17 := @caughtexception;

     label23:
        throw $r17;

     label24:
        staticinvoke <i.e.a: void a(java.io.Closeable,java.lang.Throwable)>($r5, $r17);

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label23 to label24 with label21;
    }

    public final java.util.List b(java.lang.Class, java.lang.ClassLoader)
    {
        java.util.Enumeration $r5;
        java.net.URL $r10;
        java.util.ArrayList $r6, $r7;
        j.a.b.m r0;
        int $i0;
        java.lang.String $r4;
        boolean $z0;
        java.util.Iterator $r8;
        java.util.Set $r12;
        java.lang.IllegalArgumentException $r13;
        java.util.List $r11;
        java.lang.Class $r1;
        java.lang.StringBuilder $r3;
        java.lang.Object $r9;
        java.lang.ClassLoader $r2;

        r0 := @this: j.a.b.m;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.ClassLoader;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "service");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r2, "loader");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r4);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r5, "urls");

        $r6 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r5);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r6, "java.util.Collections.list(this)");

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.net.URL) $r9;

        r0 = <j.a.b.m: j.a.b.m a>;

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r10, "it");

        $r11 = virtualinvoke r0.<j.a.b.m: java.util.List a(java.net.URL)>($r10);

        staticinvoke <i.a.m: boolean a(java.util.Collection,java.lang.Iterable)>($r7, $r11);

        goto label1;

     label2:
        $r12 = staticinvoke <i.a.p: java.util.Set e(java.lang.Iterable)>($r7);

        $z0 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label5;

        $r6 = new java.util.ArrayList;

        $i0 = staticinvoke <i.a.i: int a(java.lang.Iterable,int)>($r12, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r8 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r9;

        r0 = <j.a.b.m: j.a.b.m a>;

        $r9 = virtualinvoke r0.<j.a.b.m: java.lang.Object a(java.lang.String,java.lang.ClassLoader,java.lang.Class)>($r4, $r2, $r1);

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        goto label3;

     label4:
        return $r6;

     label5:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No providers were loaded with FastServiceLoader");

        goto label6;

     label6:
        throw $r13;
    }
}
