public class com.google.common.collect.AbstractBiMap$Inverse extends com.google.common.collect.AbstractBiMap
{
    public static final long serialVersionUID;

    public void <init>(java.util.Map, com.google.common.collect.AbstractBiMap)
    {
        com.google.common.collect.AbstractBiMap$Inverse r0;
        com.google.common.collect.AbstractBiMap $r2;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.google.common.collect.AbstractBiMap;

        specialinvoke r0.<com.google.common.collect.AbstractBiMap: void <init>(java.util.Map,com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1)>($r1, $r2, null);

        return;
    }

    private void readObject(java.io.ObjectInputStream)
    {
        com.google.common.collect.AbstractBiMap$Inverse r0;
        com.google.common.collect.AbstractBiMap $r3;
        java.io.ObjectInputStream $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r2 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r2.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r1 = virtualinvoke $r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (com.google.common.collect.AbstractBiMap) $r1;

        virtualinvoke r0.<com.google.common.collect.AbstractBiMap: void setInverse(com.google.common.collect.AbstractBiMap)>($r3);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream)
    {
        com.google.common.collect.BiMap $r2;
        com.google.common.collect.AbstractBiMap$Inverse r0;
        java.io.ObjectOutputStream $r1;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractBiMap: com.google.common.collect.BiMap inverse()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    public java.lang.Object checkKey(java.lang.Object)
    {
        com.google.common.collect.AbstractBiMap$Inverse r0;
        java.lang.Object $r2;
        com.google.common.collect.AbstractBiMap $r1;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.AbstractBiMap: com.google.common.collect.AbstractBiMap inverse>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.AbstractBiMap: java.lang.Object checkValue(java.lang.Object)>($r2);

        return $r2;
    }

    public java.lang.Object checkValue(java.lang.Object)
    {
        com.google.common.collect.AbstractBiMap$Inverse r0;
        java.lang.Object $r2;
        com.google.common.collect.AbstractBiMap $r1;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.AbstractBiMap: com.google.common.collect.AbstractBiMap inverse>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.AbstractBiMap: java.lang.Object checkKey(java.lang.Object)>($r2);

        return $r2;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.AbstractBiMap$Inverse r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractBiMap: java.util.Map delegate()>();

        return $r1;
    }

    public java.lang.Object readResolve()
    {
        com.google.common.collect.BiMap $r1;
        com.google.common.collect.AbstractBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractBiMap: com.google.common.collect.BiMap inverse()>();

        $r1 = interfaceinvoke $r1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        java.util.Set $r1;
        com.google.common.collect.AbstractBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.AbstractBiMap$Inverse;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractBiMap: java.util.Set values()>();

        return $r1;
    }
}
