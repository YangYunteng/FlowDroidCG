public abstract class com.google.common.graph.AbstractGraph extends com.google.common.graph.AbstractBaseGraph implements com.google.common.graph.Graph
{

    public void <init>()
    {
        com.google.common.graph.AbstractGraph r0;

        r0 := @this: com.google.common.graph.AbstractGraph;

        specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: void <init>()>();

        return;
    }

    public volatile int degree(java.lang.Object)
    {
        int $i0;
        com.google.common.graph.AbstractGraph r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: int degree(java.lang.Object)>($r1);

        return $i0;
    }

    public volatile java.util.Set edges()
    {
        com.google.common.graph.AbstractGraph r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: java.util.Set edges()>();

        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        com.google.common.graph.AbstractGraph r0;
        java.util.Set $r3, $r4;
        java.lang.Object $r1;
        com.google.common.graph.Graph $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.common.graph.Graph;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.common.graph.Graph) $r1;

        $z0 = interfaceinvoke r0.<com.google.common.graph.Graph: boolean isDirected()>();

        $z1 = interfaceinvoke $r2.<com.google.common.graph.Graph: boolean isDirected()>();

        if $z0 != $z1 goto label3;

        $r3 = interfaceinvoke r0.<com.google.common.graph.Graph: java.util.Set nodes()>();

        $r4 = interfaceinvoke $r2.<com.google.common.graph.Graph: java.util.Set nodes()>();

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.google.common.graph.AbstractGraph: java.util.Set edges()>();

        $r4 = interfaceinvoke $r2.<com.google.common.graph.Graph: java.util.Set edges()>();

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public volatile boolean hasEdgeConnecting(java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.AbstractGraph r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: boolean hasEdgeConnecting(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public final int hashCode()
    {
        int $i0;
        com.google.common.graph.AbstractGraph r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 = virtualinvoke r0.<com.google.common.graph.AbstractGraph: java.util.Set edges()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int hashCode()>();

        return $i0;
    }

    public volatile int inDegree(java.lang.Object)
    {
        int $i0;
        com.google.common.graph.AbstractGraph r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: int inDegree(java.lang.Object)>($r1);

        return $i0;
    }

    public volatile int outDegree(java.lang.Object)
    {
        int $i0;
        com.google.common.graph.AbstractGraph r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.graph.AbstractBaseGraph: int outDegree(java.lang.Object)>($r1);

        return $i0;
    }

    public volatile java.lang.Iterable predecessors(java.lang.Object)
    {
        com.google.common.graph.AbstractGraph r0;
        java.lang.Object $r2;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <c.i.b.d.b: java.lang.Iterable a(com.google.common.graph.Graph,java.lang.Object)>(r0, $r2);

        return $r1;
    }

    public volatile java.lang.Iterable successors(java.lang.Object)
    {
        com.google.common.graph.AbstractGraph r0;
        java.lang.Object $r2;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <c.i.b.d.b: java.lang.Iterable b(com.google.common.graph.Graph,java.lang.Object)>(r0, $r2);

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.common.graph.AbstractGraph r0;
        java.util.Set $r2;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.google.common.graph.AbstractGraph;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isDirected: ");

        $z0 = interfaceinvoke r0.<com.google.common.graph.Graph: boolean isDirected()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowsSelfLoops: ");

        $z0 = interfaceinvoke r0.<com.google.common.graph.Graph: boolean allowsSelfLoops()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nodes: ");

        $r2 = interfaceinvoke r0.<com.google.common.graph.Graph: java.util.Set nodes()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", edges: ");

        $r2 = virtualinvoke r0.<com.google.common.graph.AbstractGraph: java.util.Set edges()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
