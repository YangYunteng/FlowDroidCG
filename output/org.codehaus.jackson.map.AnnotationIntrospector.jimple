public abstract class org.codehaus.jackson.map.AnnotationIntrospector extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.codehaus.jackson.map.AnnotationIntrospector nopInstance()
    {
        org.codehaus.jackson.map.introspect.NopAnnotationIntrospector r0;

        r0 = <org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance>;

        return r0;
    }

    public static org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$Pair $r2;
        org.codehaus.jackson.map.AnnotationIntrospector $r0, $r1;

        $r0 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = new org.codehaus.jackson.map.AnnotationIntrospector$Pair;

        specialinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector$Pair: void <init>(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector)>($r0, $r1);

        return $r2;
    }

    public java.util.Collection allIntrospectors()
    {
        java.util.List $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r0);

        return $r1;
    }

    public java.util.Collection allIntrospectors(java.util.Collection)
    {
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        java.util.Collection $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: java.util.Collection;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>(r0);

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r2;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.VisibilityChecker;

        return $r2;
    }

    public abstract java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass);

    public abstract java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated);

    public java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        return null;
    }

    public abstract java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField);

    public abstract java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String);

    public abstract java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String);

    public abstract java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String);

    public java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r2;
        java.lang.Object $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r2, null);

        return $r1;
    }

    public java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.introspect.Annotated $r3;
        java.lang.Object $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        org.codehaus.jackson.map.BeanProperty $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r3 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated)>($r3);

        return $r2;

     label1:
        return null;
    }

    public abstract java.lang.String findEnumValue(java.lang.Enum);

    public java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        return null;
    }

    public abstract java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public abstract java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass);

    public abstract java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated);

    public java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        return null;
    }

    public abstract java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass);

    public org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.MapperConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r2 := @parameter2: org.codehaus.jackson.type.JavaType;

        return null;
    }

    public abstract java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter);

    public org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.MapperConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r2 := @parameter2: org.codehaus.jackson.type.JavaType;

        return null;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMember;

        return null;
    }

    public abstract java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass);

    public abstract java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField);

    public java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.introspect.Annotated $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        return null;
    }

    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r2 := @parameter1: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        return $r2;
    }

    public java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.introspect.Annotated $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        return null;
    }

    public abstract java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass);

    public abstract java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass);

    public abstract java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated);

    public abstract org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated);

    public abstract java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated);

    public java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r2;
        java.lang.Object $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r2, null);

        return $r1;
    }

    public java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.introspect.Annotated $r3;
        java.lang.Object $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        org.codehaus.jackson.map.BeanProperty $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r3 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        $r1 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)>($r3);

        return $r2;

     label1:
        return null;
    }

    public abstract java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        return null;
    }

    public java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        return null;
    }

    public org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.MapperConfig $r3;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        $r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedClass;

        $r2 := @parameter2: org.codehaus.jackson.type.JavaType;

        return null;
    }

    public boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        return 0;
    }

    public boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        return 0;
    }

    public abstract boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)
    {
        org.codehaus.jackson.map.introspect.Annotated $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        return 0;
    }

    public abstract boolean isHandled(java.lang.'annotation'.Annotation);

    public abstract boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor);

    public abstract boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField);

    public abstract boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod);

    public java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        org.codehaus.jackson.map.AnnotationIntrospector r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedClass;

        return null;
    }
}
