public class com.google.android.material.transition.platform.TransitionUtils extends java.lang.Object
{
    public static final android.graphics.RectF transformAlphaRectF;

    static void <clinit>()
    {
        android.graphics.RectF $r0;

        $r0 = new android.graphics.RectF;

        specialinvoke $r0.<android.graphics.RectF: void <init>()>();

        <com.google.android.material.transition.platform.TransitionUtils: android.graphics.RectF transformAlphaRectF> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.android.material.transition.platform.TransitionUtils r0;

        r0 := @this: com.google.android.material.transition.platform.TransitionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float calculateArea(android.graphics.RectF)
    {
        android.graphics.RectF $r0;
        float $f0, $f1;

        $r0 := @parameter0: android.graphics.RectF;

        $f0 = virtualinvoke $r0.<android.graphics.RectF: float width()>();

        $f1 = virtualinvoke $r0.<android.graphics.RectF: float height()>();

        $f0 = $f0 * $f1;

        return $f0;
    }

    public static com.google.android.material.shape.ShapeAppearanceModel convertToRelativeCornerSizes(com.google.android.material.shape.ShapeAppearanceModel, android.graphics.RectF)
    {
        android.graphics.RectF $r0;
        com.google.android.material.transition.platform.TransitionUtils$1 $r1;
        com.google.android.material.shape.ShapeAppearanceModel $r2;

        $r2 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $r0 := @parameter1: android.graphics.RectF;

        $r1 = new com.google.android.material.transition.platform.TransitionUtils$1;

        specialinvoke $r1.<com.google.android.material.transition.platform.TransitionUtils$1: void <init>(android.graphics.RectF)>($r0);

        $r2 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator)>($r1);

        return $r2;
    }

    public static android.graphics.Shader createColorShader(int)
    {
        int $i0;
        android.graphics.Shader$TileMode $r0;
        android.graphics.LinearGradient $r1;

        $i0 := @parameter0: int;

        $r1 = new android.graphics.LinearGradient;

        $r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r1.<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>(0.0F, 0.0F, 0.0F, 0.0F, $i0, $i0, $r0);

        return $r1;
    }

    public static java.lang.Object defaultIfNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        return $r1;

     label1:
        return $r0;
    }

    public static android.view.View findAncestorById(android.view.View, int)
    {
        android.view.ViewParent $r3;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1;
        android.view.View $r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r2;
        android.content.res.Resources $r1;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

     label1:
        if $r0 == null goto label3;

        $i1 = virtualinvoke $r0.<android.view.View: int getId()>();

        if $i1 != $i0 goto label2;

        return $r0;

     label2:
        $r3 = virtualinvoke $r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r3 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $r0 = (android.view.View) $r3;

        goto label1;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid ancestor");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        goto label4;

     label4:
        throw $r4;
    }

    public static android.view.View findDescendantOrAncestorById(android.view.View, int)
    {
        int $i0;
        android.view.View $r0, $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>($i0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r0 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: android.view.View findAncestorById(android.view.View,int)>($r0, $i0);

        return $r0;
    }

    public static android.graphics.RectF getLocationOnScreen(android.view.View)
    {
        android.graphics.RectF $r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        float $f0, $f1, $f2, $f3;

        $r1 := @parameter0: android.view.View;

        $r2 = newarray (int)[2];

        virtualinvoke $r1.<android.view.View: void getLocationOnScreen(int[])>($r2);

        $i0 = $r2[0];

        $i1 = $r2[1];

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = $i2 + $i0;

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i3 = $i3 + $i1;

        $r0 = new android.graphics.RectF;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f2 = (float) $i2;

        $f3 = (float) $i3;

        specialinvoke $r0.<android.graphics.RectF: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        return $r0;
    }

    public static android.graphics.RectF getRelativeBounds(android.view.View)
    {
        android.graphics.RectF $r0;
        int $i0;
        android.view.View $r1;
        float $f0, $f1, $f2, $f3;

        $r1 := @parameter0: android.view.View;

        $r0 = new android.graphics.RectF;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $f2 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $f3 = (float) $i0;

        specialinvoke $r0.<android.graphics.RectF: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        return $r0;
    }

    public static android.graphics.Rect getRelativeBoundsRect(android.view.View)
    {
        android.graphics.Rect $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r1 := @parameter0: android.view.View;

        $r0 = new android.graphics.Rect;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        specialinvoke $r0.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r0;
    }

    public static boolean isShapeAppearanceSignificant(com.google.android.material.shape.ShapeAppearanceModel, android.graphics.RectF)
    {
        android.graphics.RectF $r0;
        byte $b0;
        float $f0;
        com.google.android.material.shape.CornerSize $r2;
        com.google.android.material.shape.ShapeAppearanceModel $r1;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $r0 := @parameter1: android.graphics.RectF;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $f0 = interfaceinvoke $r2.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r0);

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopRightCornerSize()>();

        $f0 = interfaceinvoke $r2.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r0);

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomRightCornerSize()>();

        $f0 = interfaceinvoke $r2.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r0);

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomLeftCornerSize()>();

        $f0 = interfaceinvoke $r2.<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>($r0);

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static float lerp(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f1 = $f1 - $f0;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

        return $f0;
    }

    public static float lerp(float, float, float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4;

        $f2 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f3 := @parameter3: float;

        $f4 := @parameter4: float;

        $b0 = $f4 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return $f2;

     label1:
        $b0 = $f4 cmpl $f3;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return $f0;

     label2:
        $f4 = $f4 - $f1;

        $f1 = $f3 - $f1;

        $f1 = $f4 / $f1;

        $f2 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: float lerp(float,float,float)>($f2, $f0, $f1);

        return $f2;
    }

    public static int lerp(int, int, float, float, float)
    {
        byte $b2;
        int $i0, $i1, $i3;
        float $f0, $f1, $f2, $f3, $f4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $f2 := @parameter4: float;

        $b2 = $f2 cmpg $f0;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        return $i0;

     label1:
        $b2 = $f2 cmpl $f1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label2;

        return $i1;

     label2:
        $f3 = (float) $i0;

        $f4 = (float) $i1;

        $f2 = $f2 - $f0;

        $f0 = $f1 - $f0;

        $f0 = $f2 / $f0;

        $f0 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: float lerp(float,float,float)>($f3, $f4, $f0);

        $i0 = (int) $f0;

        return $i0;
    }

    public static com.google.android.material.shape.ShapeAppearanceModel lerp(com.google.android.material.shape.ShapeAppearanceModel, com.google.android.material.shape.ShapeAppearanceModel, android.graphics.RectF, android.graphics.RectF, float, float, float)
    {
        android.graphics.RectF $r1, $r2;
        com.google.android.material.transition.platform.TransitionUtils$2 $r4;
        com.google.android.material.shape.ShapeAppearanceModel $r0, $r3;
        byte $b0;
        int $i1;
        float $f0, $f1, $f2;

        $r3 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $r0 := @parameter1: com.google.android.material.shape.ShapeAppearanceModel;

        $r1 := @parameter2: android.graphics.RectF;

        $r2 := @parameter3: android.graphics.RectF;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $f2 := @parameter6: float;

        $b0 = $f2 cmpg $f0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return $r3;

     label1:
        $b0 = $f2 cmpl $f1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return $r0;

     label2:
        $r4 = new com.google.android.material.transition.platform.TransitionUtils$2;

        specialinvoke $r4.<com.google.android.material.transition.platform.TransitionUtils$2: void <init>(android.graphics.RectF,android.graphics.RectF,float,float,float)>($r1, $r2, $f0, $f1, $f2);

        $r3 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: com.google.android.material.shape.ShapeAppearanceModel transformCornerSizes(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator)>($r3, $r0, $r1, $r4);

        return $r3;
    }

    public static void maybeAddTransition(android.transition.TransitionSet, android.transition.Transition)
    {
        android.transition.Transition $r1;
        android.transition.TransitionSet $r0;

        $r0 := @parameter0: android.transition.TransitionSet;

        $r1 := @parameter1: android.transition.Transition;

        if $r1 == null goto label1;

        virtualinvoke $r0.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>($r1);

     label1:
        return;
    }

    public static void maybeRemoveTransition(android.transition.TransitionSet, android.transition.Transition)
    {
        android.transition.Transition $r1;
        android.transition.TransitionSet $r0;

        $r0 := @parameter0: android.transition.TransitionSet;

        $r1 := @parameter1: android.transition.Transition;

        if $r1 == null goto label1;

        virtualinvoke $r0.<android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>($r1);

     label1:
        return;
    }

    public static int saveLayerAlphaCompat(android.graphics.Canvas, android.graphics.Rect, int)
    {
        android.graphics.RectF $r2;
        android.graphics.Rect $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.graphics.Canvas $r0;

        $r0 := @parameter0: android.graphics.Canvas;

        $r1 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        $r2 = <com.google.android.material.transition.platform.TransitionUtils: android.graphics.RectF transformAlphaRectF>;

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.Rect)>($r1);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r2 = <com.google.android.material.transition.platform.TransitionUtils: android.graphics.RectF transformAlphaRectF>;

        $i0 = virtualinvoke $r0.<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>($r2, $i0);

        return $i0;

     label1:
        $r2 = <com.google.android.material.transition.platform.TransitionUtils: android.graphics.RectF transformAlphaRectF>;

        $f0 = $r2.<android.graphics.RectF: float left>;

        $f1 = $r2.<android.graphics.RectF: float top>;

        $f2 = $r2.<android.graphics.RectF: float right>;

        $f3 = $r2.<android.graphics.RectF: float bottom>;

        $i0 = virtualinvoke $r0.<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>($f0, $f1, $f2, $f3, $i0, 31);

        return $i0;
    }

    public static void transform(android.graphics.Canvas, android.graphics.Rect, float, float, float, int, com.google.android.material.transition.platform.TransitionUtils$CanvasOperation)
    {
        android.graphics.Rect $r1;
        com.google.android.material.transition.platform.TransitionUtils$CanvasOperation $r2;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r0;

        $r0 := @parameter0: android.graphics.Canvas;

        $r1 := @parameter1: android.graphics.Rect;

        $f2 := @parameter2: float;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $i0 := @parameter5: int;

        $r2 := @parameter6: com.google.android.material.transition.platform.TransitionUtils$CanvasOperation;

        if $i0 > 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke $r0.<android.graphics.Canvas: int save()>();

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f2, $f0);

        virtualinvoke $r0.<android.graphics.Canvas: void scale(float,float)>($f1, $f1);

        if $i0 >= 255 goto label2;

        staticinvoke <com.google.android.material.transition.platform.TransitionUtils: int saveLayerAlphaCompat(android.graphics.Canvas,android.graphics.Rect,int)>($r0, $r1, $i0);

     label2:
        interfaceinvoke $r2.<com.google.android.material.transition.platform.TransitionUtils$CanvasOperation: void run(android.graphics.Canvas)>($r0);

        virtualinvoke $r0.<android.graphics.Canvas: void restoreToCount(int)>($i1);

        return;
    }

    public static com.google.android.material.shape.ShapeAppearanceModel transformCornerSizes(com.google.android.material.shape.ShapeAppearanceModel, com.google.android.material.shape.ShapeAppearanceModel, android.graphics.RectF, com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator)
    {
        android.graphics.RectF $r3;
        com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator $r0;
        com.google.android.material.shape.ShapeAppearanceModel $r1, $r2, $r4;
        com.google.android.material.shape.ShapeAppearanceModel$Builder $r5;
        com.google.android.material.shape.CornerSize $r6, $r7;
        boolean $z0;

        $r1 := @parameter0: com.google.android.material.shape.ShapeAppearanceModel;

        $r2 := @parameter1: com.google.android.material.shape.ShapeAppearanceModel;

        $r3 := @parameter2: android.graphics.RectF;

        $r0 := @parameter3: com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator;

        $z0 = staticinvoke <com.google.android.material.transition.platform.TransitionUtils: boolean isShapeAppearanceSignificant(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF)>($r1, $r3);

        if $z0 == 0 goto label1;

        $r4 = $r1;

        goto label2;

     label1:
        $r4 = $r2;

     label2:
        $r5 = virtualinvoke $r4.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()>();

        $r6 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $r7 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>();

        $r6 = interfaceinvoke $r0.<com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator: com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize)>($r6, $r7);

        $r5 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)>($r6);

        $r6 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopRightCornerSize()>();

        $r7 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopRightCornerSize()>();

        $r6 = interfaceinvoke $r0.<com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator: com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize)>($r6, $r7);

        $r5 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)>($r6);

        $r6 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomLeftCornerSize()>();

        $r7 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomLeftCornerSize()>();

        $r6 = interfaceinvoke $r0.<com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator: com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize)>($r6, $r7);

        $r5 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)>($r6);

        $r6 = virtualinvoke $r1.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomRightCornerSize()>();

        $r7 = virtualinvoke $r2.<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomRightCornerSize()>();

        $r6 = interfaceinvoke $r0.<com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator: com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize)>($r6, $r7);

        $r5 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)>($r6);

        $r1 = virtualinvoke $r5.<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>();

        return $r1;
    }
}
