public final class com.google.common.util.concurrent.AbstractFuture$SetFuture extends java.lang.Object implements java.lang.Runnable
{
    public final com.google.common.util.concurrent.ListenableFuture future;
    public final com.google.common.util.concurrent.AbstractFuture owner;

    public void <init>(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.AbstractFuture$SetFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.AbstractFuture $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SetFuture;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.AbstractFuture owner> = $r1;

        r0.<com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future> = $r2;

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.AbstractFuture$AtomicHelper $r4;
        com.google.common.util.concurrent.ListenableFuture $r3;
        com.google.common.util.concurrent.AbstractFuture$SetFuture r0;
        java.lang.Object $r2;
        com.google.common.util.concurrent.AbstractFuture $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SetFuture;

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.AbstractFuture owner>;

        $r2 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$400(com.google.common.util.concurrent.AbstractFuture)>($r1);

        if $r2 == r0 goto label1;

        return;

     label1:
        $r3 = r0.<com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future>;

        $r2 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$500(com.google.common.util.concurrent.ListenableFuture)>($r3);

        $r4 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200()>();

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.AbstractFuture owner>;

        $z0 = virtualinvoke $r4.<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)>($r1, r0, $r2);

        if $z0 == 0 goto label2;

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.AbstractFuture owner>;

        staticinvoke <com.google.common.util.concurrent.AbstractFuture: void access$600(com.google.common.util.concurrent.AbstractFuture)>($r1);

     label2:
        return;
    }
}
