public final class com.google.common.primitives.UnsignedInteger extends java.lang.Number implements java.lang.Comparable
{
    public static final com.google.common.primitives.UnsignedInteger MAX_VALUE;
    public static final com.google.common.primitives.UnsignedInteger ONE;
    public static final com.google.common.primitives.UnsignedInteger ZERO;
    public final int value;

    static void <clinit>()
    {
        int $i0;
        com.google.common.primitives.UnsignedInteger $r0;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>(0);

        <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger ZERO> = $r0;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>(1);

        <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger ONE> = $r0;

        $i0 = -1;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger MAX_VALUE> = $r0;

        return;
    }

    public void <init>(int)
    {
        int $i0, $i1;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $i1 = -1;

        $i0 = $i0 & $i1;

        r0.<com.google.common.primitives.UnsignedInteger: int value> = $i0;

        return;
    }

    public static com.google.common.primitives.UnsignedInteger fromIntBits(int)
    {
        int $i0;
        com.google.common.primitives.UnsignedInteger $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.common.primitives.UnsignedInteger;

        specialinvoke $r0.<com.google.common.primitives.UnsignedInteger: void <init>(int)>($i0);

        return $r0;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(long)
    {
        byte $b1;
        com.google.common.primitives.UnsignedInteger $r0;
        int $i0;
        long $l2, $l3;
        boolean $z0;

        $l2 := @parameter0: long;

        $l3 = 4294967295L & $l2;

        $b1 = $l3 cmp $l2;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>($z0, "value (%s) is outside the range for an unsigned integer value", $l2);

        $i0 = (int) $l2;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return $r0;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(java.lang.String)
    {
        java.lang.String $r1;
        com.google.common.primitives.UnsignedInteger $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger valueOf(java.lang.String,int)>($r1, 10);

        return $r0;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        com.google.common.primitives.UnsignedInteger $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <com.google.common.primitives.UnsignedInts: int parseUnsignedInt(java.lang.String,int)>($r0, $i0);

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return $r1;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(java.math.BigInteger)
    {
        com.google.common.primitives.UnsignedInteger $r1;
        int $i0;
        java.math.BigInteger $r0;
        boolean $z0;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int signum()>();

        if $i0 < 0 goto label1;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int bitLength()>();

        if $i0 > 32 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "value (%s) is outside the range for an unsigned integer value", $r0);

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int intValue()>();

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return $r1;
    }

    public java.math.BigInteger bigIntegerValue()
    {
        long $l0;
        java.math.BigInteger $r1;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $l0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: long longValue()>();

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        return $r1;
    }

    public int compareTo(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i1 = $r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = staticinvoke <com.google.common.primitives.UnsignedInts: int compare(int,int)>($i0, $i1);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.google.common.primitives.UnsignedInteger r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.primitives.UnsignedInteger) $r1;

        $i0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: int compareTo(com.google.common.primitives.UnsignedInteger)>($r2);

        return $i0;
    }

    public com.google.common.primitives.UnsignedInteger dividedBy(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0 = $r1;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = staticinvoke <com.google.common.primitives.UnsignedInts: int divide(int,int)>($i0, $i1);

        r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return r0;
    }

    public double doubleValue()
    {
        long $l0;
        com.google.common.primitives.UnsignedInteger r0;
        double $d0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $l0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: long longValue()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.primitives.UnsignedInteger r0, $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.primitives.UnsignedInteger;

        if $z0 == 0 goto label1;

        $r2 = (com.google.common.primitives.UnsignedInteger) $r1;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i1 = $r2.<com.google.common.primitives.UnsignedInteger: int value>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public float floatValue()
    {
        float $f0;
        long $l0;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $l0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: long longValue()>();

        $f0 = (float) $l0;

        return $f0;
    }

    public int hashCode()
    {
        int i0;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        return i0;
    }

    public int intValue()
    {
        int i0;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        return i0;
    }

    public long longValue()
    {
        int $i1;
        long $l0;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $l0 = staticinvoke <com.google.common.primitives.UnsignedInts: long toLong(int)>($i1);

        return $l0;
    }

    public com.google.common.primitives.UnsignedInteger minus(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0 = $r1;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = $i0 - $i1;

        r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return r0;
    }

    public com.google.common.primitives.UnsignedInteger mod(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0 = $r1;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = staticinvoke <com.google.common.primitives.UnsignedInts: int remainder(int,int)>($i0, $i1);

        r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return r0;
    }

    public com.google.common.primitives.UnsignedInteger plus(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0 = $r1;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = $i0 + $i1;

        r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return r0;
    }

    public com.google.common.primitives.UnsignedInteger times(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0 = $r1;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = $i0 * $i1;

        r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger fromIntBits(int)>($i0);

        return r0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.primitives.UnsignedInteger r0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: java.lang.String toString(int)>(10);

        return $r1;
    }

    public java.lang.String toString(int)
    {
        com.google.common.primitives.UnsignedInteger r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $i1 := @parameter0: int;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInts: java.lang.String toString(int,int)>($i0, $i1);

        return $r1;
    }
}
