public class com.google.firebase.crashlytics.internal.log.LogFileManager extends java.lang.Object
{
    public static final java.lang.String COLLECT_CUSTOM_LOGS;
    public static final java.lang.String LOGFILE_EXT;
    public static final java.lang.String LOGFILE_PREFIX;
    public static final int MAX_LOG_SIZE;
    public static final com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore NOOP_LOG_STORE;
    public final android.content.Context context;
    public com.google.firebase.crashlytics.internal.log.FileLogStore currentLog;
    public final com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider directoryProvider;

    static void <clinit>()
    {
        com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore $r0;

        <com.google.firebase.crashlytics.internal.log.LogFileManager: int MAX_LOG_SIZE> = 65536;

        <com.google.firebase.crashlytics.internal.log.LogFileManager: java.lang.String LOGFILE_PREFIX> = "crashlytics-userlog-";

        <com.google.firebase.crashlytics.internal.log.LogFileManager: java.lang.String LOGFILE_EXT> = ".temp";

        <com.google.firebase.crashlytics.internal.log.LogFileManager: java.lang.String COLLECT_CUSTOM_LOGS> = "com.crashlytics.CollectCustomLogs";

        $r0 = new com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore;

        specialinvoke $r0.<com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore: void <init>(com.google.firebase.crashlytics.internal.log.LogFileManager$1)>(null);

        <com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore NOOP_LOG_STORE> = $r0;

        return;
    }

    public void <init>(android.content.Context, com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider)
    {
        android.content.Context $r1;
        com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider $r2;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider;

        specialinvoke r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: void <init>(android.content.Context,com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider,java.lang.String)>($r1, $r2, null);

        return;
    }

    public void <init>(android.content.Context, com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider, java.lang.String)
    {
        android.content.Context $r3;
        com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore $r4;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider $r1;
        java.lang.String $r2;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r3 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: android.content.Context context> = $r3;

        r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider directoryProvider> = $r1;

        $r4 = <com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore NOOP_LOG_STORE>;

        r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog> = $r4;

        virtualinvoke r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: void setCurrentSession(java.lang.String)>($r2);

        return;
    }

    private java.lang.String getSessionIdForFile(java.io.File)
    {
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        int $i0, $i1;
        java.lang.String $r2;
        java.io.File $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(".temp");

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return $r2;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(20, $i0);

        return $r2;
    }

    private java.io.File getWorkingFileForSession(java.lang.String)
    {
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider $r4;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        java.io.File $r3, $r5;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crashlytics-userlog-");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".temp");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.io.File;

        $r4 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider directoryProvider>;

        $r5 = interfaceinvoke $r4.<com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider: java.io.File getLogFileDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r1);

        return $r3;
    }

    public void clearLog()
    {
        com.google.firebase.crashlytics.internal.log.FileLogStore $r1;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog>;

        interfaceinvoke $r1.<com.google.firebase.crashlytics.internal.log.FileLogStore: void deleteLogFile()>();

        return;
    }

    public void discardOldLogFiles(java.util.Set)
    {
        java.util.Set $r1;
        com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider $r3;
        java.io.File $r2;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        int $i0, $i1;
        java.lang.String $r5;
        java.io.File[] $r4;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 := @parameter0: java.util.Set;

        $r3 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider directoryProvider>;

        $r2 = interfaceinvoke $r3.<com.google.firebase.crashlytics.internal.log.LogFileManager$DirectoryProvider: java.io.File getLogFileDir()>();

        $r4 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        if $r4 == null goto label3;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r4[$i1];

        $r5 = specialinvoke r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: java.lang.String getSessionIdForFile(java.io.File)>($r2);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public byte[] getBytesForLog()
    {
        byte[] $r1;
        com.google.firebase.crashlytics.internal.log.FileLogStore $r2;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog>;

        $r1 = interfaceinvoke $r2.<com.google.firebase.crashlytics.internal.log.FileLogStore: byte[] getLogAsBytes()>();

        return $r1;
    }

    public java.lang.String getLogString()
    {
        com.google.firebase.crashlytics.internal.log.FileLogStore $r2;
        java.lang.String $r1;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog>;

        $r1 = interfaceinvoke $r2.<com.google.firebase.crashlytics.internal.log.FileLogStore: java.lang.String getLogAsString()>();

        return $r1;
    }

    public final void setCurrentSession(java.lang.String)
    {
        android.content.Context $r4;
        com.google.firebase.crashlytics.internal.log.FileLogStore $r2;
        java.io.File $r6;
        com.google.firebase.crashlytics.internal.Logger $r5;
        com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore $r3;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog>;

        interfaceinvoke $r2.<com.google.firebase.crashlytics.internal.log.FileLogStore: void closeLogFile()>();

        $r3 = <com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.LogFileManager$NoopLogStore NOOP_LOG_STORE>;

        r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog> = $r3;

        if $r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: android.content.Context context>;

        $z0 = staticinvoke <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r4, "com.crashlytics.CollectCustomLogs", 1);

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <com.google.firebase.crashlytics.internal.Logger: com.google.firebase.crashlytics.internal.Logger getLogger()>();

        virtualinvoke $r5.<com.google.firebase.crashlytics.internal.Logger: void d(java.lang.String)>("Preferences requested no custom logs. Aborting log file creation.");

        return;

     label2:
        $r6 = specialinvoke r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: java.io.File getWorkingFileForSession(java.lang.String)>($r1);

        virtualinvoke r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: void setLogFile(java.io.File,int)>($r6, 65536);

        return;
    }

    public void setLogFile(java.io.File, int)
    {
        com.google.firebase.crashlytics.internal.log.QueueFileLogStore $r2;
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        int $i0;
        java.io.File $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $r2 = new com.google.firebase.crashlytics.internal.log.QueueFileLogStore;

        specialinvoke $r2.<com.google.firebase.crashlytics.internal.log.QueueFileLogStore: void <init>(java.io.File,int)>($r1, $i0);

        r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog> = $r2;

        return;
    }

    public void writeToLog(long, java.lang.String)
    {
        com.google.firebase.crashlytics.internal.log.LogFileManager r0;
        long $l0;
        com.google.firebase.crashlytics.internal.log.FileLogStore $r2;
        java.lang.String $r1;

        r0 := @this: com.google.firebase.crashlytics.internal.log.LogFileManager;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.google.firebase.crashlytics.internal.log.LogFileManager: com.google.firebase.crashlytics.internal.log.FileLogStore currentLog>;

        interfaceinvoke $r2.<com.google.firebase.crashlytics.internal.log.FileLogStore: void writeToLog(long,java.lang.String)>($l0, $r1);

        return;
    }
}
