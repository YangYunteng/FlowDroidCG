public class org.dom4j.tree.ConcurrentReaderHashMap$Entry extends java.lang.Object implements java.util.Map$Entry
{
    public final int hash;
    public final java.lang.Object key;
    public final org.dom4j.tree.ConcurrentReaderHashMap$Entry next;
    public volatile java.lang.Object value;

    public void <init>(int, java.lang.Object, java.lang.Object, org.dom4j.tree.ConcurrentReaderHashMap$Entry)
    {
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0, $r3;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: int hash> = $i0;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key> = $r1;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: org.dom4j.tree.ConcurrentReaderHashMap$Entry next> = $r3;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value> = $r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) $r1;

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.Object getKey()
    {
        java.lang.Object r1;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key>;

        return r1;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object r1;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value>;

        return r1;
    }

    public int hashCode()
    {
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0;
        java.lang.Object $r1, r3;
        java.lang.NullPointerException $r2;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        r3 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value>;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value> = $r1;

        return r3;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;
    }

    public java.lang.String toString()
    {
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r0;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$Entry;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
