public final class com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask extends com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask
{
    public final com.google.common.util.concurrent.AsyncCallable callable;
    public final com.google.common.util.concurrent.CombinedFuture this$0;

    public void <init>(com.google.common.util.concurrent.CombinedFuture, com.google.common.util.concurrent.AsyncCallable, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.CombinedFuture $r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask r0;
        com.google.common.util.concurrent.AsyncCallable $r3;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask;

        $r1 := @parameter0: com.google.common.util.concurrent.CombinedFuture;

        $r3 := @parameter1: com.google.common.util.concurrent.AsyncCallable;

        $r2 := @parameter2: java.util.concurrent.Executor;

        r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: com.google.common.util.concurrent.CombinedFuture this$0> = $r1;

        specialinvoke r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask: void <init>(com.google.common.util.concurrent.CombinedFuture,java.util.concurrent.Executor)>($r1, $r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: com.google.common.util.concurrent.AsyncCallable callable> = $r3;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture runInterruptibly()
    {
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask r0;
        com.google.common.util.concurrent.AsyncCallable $r2;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask;

        r0.<com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask: boolean thrownByExecute> = 0;

        $r2 = r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: com.google.common.util.concurrent.AsyncCallable callable>;

        $r1 = interfaceinvoke $r2.<com.google.common.util.concurrent.AsyncCallable: com.google.common.util.concurrent.ListenableFuture call()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "AsyncCallable.call returned null instead of a Future. Did you mean to return immediateFuture(null)?");

        return $r1;
    }

    public volatile java.lang.Object runInterruptibly()
    {
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask r0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: com.google.common.util.concurrent.ListenableFuture runInterruptibly()>();

        return $r1;
    }

    public void setValue(com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.CombinedFuture $r2;
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask r0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask;

        $r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r2 = r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: com.google.common.util.concurrent.CombinedFuture this$0>;

        virtualinvoke $r2.<com.google.common.util.concurrent.AbstractFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>($r1);

        return;
    }

    public volatile void setValue(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask r0;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.util.concurrent.ListenableFuture) $r1;

        virtualinvoke r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: void setValue(com.google.common.util.concurrent.ListenableFuture)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask r0;
        com.google.common.util.concurrent.AsyncCallable $r2;

        r0 := @this: com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask;

        $r2 = r0.<com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask: com.google.common.util.concurrent.AsyncCallable callable>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }
}
