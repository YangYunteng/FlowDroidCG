public final class com.google.common.collect.EnumMultiset extends com.google.common.collect.AbstractMultiset implements java.io.Serializable
{
    public static final long serialVersionUID;
    public transient int[] counts;
    public transient int distinctElements;
    public transient java.lang.Enum[] enumConstants;
    public transient long size;
    public transient java.lang.Class type;

    public void <init>(java.lang.Class)
    {
        java.lang.Object[] $r2;
        int[] $r4;
        int $i0;
        java.lang.Enum[] $r3;
        java.lang.Class $r1;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<com.google.common.collect.AbstractMultiset: void <init>()>();

        r0.<com.google.common.collect.EnumMultiset: java.lang.Class type> = $r1;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isEnum()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r3 = (java.lang.Enum[]) $r2;

        r0.<com.google.common.collect.EnumMultiset: java.lang.Enum[] enumConstants> = $r3;

        $r3 = r0.<com.google.common.collect.EnumMultiset: java.lang.Enum[] enumConstants>;

        $i0 = lengthof $r3;

        $r4 = newarray (int)[$i0];

        r0.<com.google.common.collect.EnumMultiset: int[] counts> = $r4;

        return;
    }

    public static java.lang.Enum[] access$000(com.google.common.collect.EnumMultiset)
    {
        java.lang.Enum[] r1;
        com.google.common.collect.EnumMultiset $r0;

        $r0 := @parameter0: com.google.common.collect.EnumMultiset;

        r1 = $r0.<com.google.common.collect.EnumMultiset: java.lang.Enum[] enumConstants>;

        return r1;
    }

    public static int[] access$100(com.google.common.collect.EnumMultiset)
    {
        com.google.common.collect.EnumMultiset $r0;
        int[] r1;

        $r0 := @parameter0: com.google.common.collect.EnumMultiset;

        r1 = $r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        return r1;
    }

    public static int access$210(com.google.common.collect.EnumMultiset)
    {
        int $i0, $i1;
        com.google.common.collect.EnumMultiset $r0;

        $r0 := @parameter0: com.google.common.collect.EnumMultiset;

        $i0 = $r0.<com.google.common.collect.EnumMultiset: int distinctElements>;

        $i1 = -1;

        $i1 = $i0 + $i1;

        $r0.<com.google.common.collect.EnumMultiset: int distinctElements> = $i1;

        return $i0;
    }

    public static long access$300(com.google.common.collect.EnumMultiset)
    {
        long l0;
        com.google.common.collect.EnumMultiset $r0;

        $r0 := @parameter0: com.google.common.collect.EnumMultiset;

        l0 = $r0.<com.google.common.collect.EnumMultiset: long size>;

        return l0;
    }

    public static long access$302(com.google.common.collect.EnumMultiset, long)
    {
        long $l0;
        com.google.common.collect.EnumMultiset $r0;

        $r0 := @parameter0: com.google.common.collect.EnumMultiset;

        $l0 := @parameter1: long;

        $r0.<com.google.common.collect.EnumMultiset: long size> = $l0;

        return $l0;
    }

    public static com.google.common.collect.EnumMultiset create(java.lang.Class)
    {
        java.lang.Class $r0;
        com.google.common.collect.EnumMultiset $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = new com.google.common.collect.EnumMultiset;

        specialinvoke $r1.<com.google.common.collect.EnumMultiset: void <init>(java.lang.Class)>($r0);

        return $r1;
    }

    public static com.google.common.collect.EnumMultiset create(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.lang.Enum $r4;
        java.lang.Object $r3;
        java.lang.Class $r5;
        com.google.common.collect.EnumMultiset $r2;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "EnumMultiset constructor passed empty Iterable");

        $r2 = new com.google.common.collect.EnumMultiset;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Enum) $r3;

        $r5 = virtualinvoke $r4.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        specialinvoke $r2.<com.google.common.collect.EnumMultiset: void <init>(java.lang.Class)>($r5);

        staticinvoke <com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>($r2, $r0);

        return $r2;
    }

    public static com.google.common.collect.EnumMultiset create(java.lang.Iterable, java.lang.Class)
    {
        java.lang.Class $r2;
        com.google.common.collect.EnumMultiset $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: java.lang.Class;

        $r1 = staticinvoke <com.google.common.collect.EnumMultiset: com.google.common.collect.EnumMultiset create(java.lang.Class)>($r2);

        staticinvoke <com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r0);

        return $r1;
    }

    private boolean isActuallyE(java.lang.Object)
    {
        java.lang.Enum $r3, $r4;
        int $i0, $i1;
        java.lang.Enum[] $r1;
        java.lang.Object $r2;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof java.lang.Enum;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Enum) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $r1 = r0.<com.google.common.collect.EnumMultiset: java.lang.Enum[] enumConstants>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $r4 = $r1[$i1];

        if $r4 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void readObject(java.io.ObjectInputStream)
    {
        java.lang.Object[] $r4;
        java.io.ObjectInputStream $r1;
        int[] $r6;
        int $i0;
        java.lang.Enum[] $r5;
        java.lang.Object $r2;
        java.lang.Class $r3;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.Class) $r2;

        r0.<com.google.common.collect.EnumMultiset: java.lang.Class type> = $r3;

        $r3 = r0.<com.google.common.collect.EnumMultiset: java.lang.Class type>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r5 = (java.lang.Enum[]) $r4;

        r0.<com.google.common.collect.EnumMultiset: java.lang.Enum[] enumConstants> = $r5;

        $r5 = r0.<com.google.common.collect.EnumMultiset: java.lang.Enum[] enumConstants>;

        $i0 = lengthof $r5;

        $r6 = newarray (int)[$i0];

        r0.<com.google.common.collect.EnumMultiset: int[] counts> = $r6;

        staticinvoke <com.google.common.collect.Serialization: void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream)>(r0, $r1);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream)
    {
        java.io.ObjectOutputStream $r1;
        java.lang.Class $r2;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<com.google.common.collect.EnumMultiset: java.lang.Class type>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        staticinvoke <com.google.common.collect.Serialization: void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream)>(r0, $r1);

        return;
    }

    public int add(java.lang.Enum, int)
    {
        long $l1, $l5;
        byte $b2;
        java.lang.Enum $r1;
        int[] $r2;
        int $i0, $i3, $i4;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Enum;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.google.common.collect.EnumMultiset: void checkIsE(java.lang.Object)>($r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "occurrences");

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke r0.<com.google.common.collect.EnumMultiset: int count(java.lang.Object)>($r1);

        return $i0;

     label1:
        $i3 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $r2 = r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        $i4 = $r2[$i3];

        $l5 = (long) $i4;

        $l1 = (long) $i0;

        $l5 = $l5 + $l1;

        $b2 = $l5 cmp 2147483647L;

        $i0 = (int) $b2;

        if $i0 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>($z0, "too many occurrences: %s", $l5);

        $r2 = r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        $i0 = (int) $l5;

        $r2[$i3] = $i0;

        if $i4 != 0 goto label4;

        $i0 = r0.<com.google.common.collect.EnumMultiset: int distinctElements>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.EnumMultiset: int distinctElements> = $i0;

     label4:
        $l5 = r0.<com.google.common.collect.EnumMultiset: long size>;

        $l1 = $l5 + $l1;

        r0.<com.google.common.collect.EnumMultiset: long size> = $l1;

        return $i4;
    }

    public volatile int add(java.lang.Object, int)
    {
        java.lang.Enum $r2;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = (java.lang.Enum) $r1;

        $i0 = virtualinvoke r0.<com.google.common.collect.EnumMultiset: int add(java.lang.Enum,int)>($r2, $i0);

        return $i0;
    }

    public volatile boolean addAll(java.util.Collection)
    {
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.util.Collection;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean addAll(java.util.Collection)>($r1);

        return $z0;
    }

    public void checkIsE(java.lang.Object)
    {
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.Class $r4;
        java.lang.String $r5;
        com.google.common.collect.EnumMultiset r0;
        java.lang.ClassCastException $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r2 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $z0 = specialinvoke r0.<com.google.common.collect.EnumMultiset: boolean isActuallyE(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.ClassCastException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected an ");

        $r4 = r0.<com.google.common.collect.EnumMultiset: java.lang.Class type>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public void clear()
    {
        com.google.common.collect.EnumMultiset r0;
        int[] $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, 0);

        r0.<com.google.common.collect.EnumMultiset: long size> = 0L;

        r0.<com.google.common.collect.EnumMultiset: int distinctElements> = 0;

        return;
    }

    public volatile boolean contains(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public int count(java.lang.Object)
    {
        java.lang.Enum $r2;
        int[] $r3;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label2;

        $z0 = specialinvoke r0.<com.google.common.collect.EnumMultiset: boolean isActuallyE(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = (java.lang.Enum) $r1;

        $r3 = r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        $i0 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $r3[$i0];

        return $i0;

     label2:
        return 0;
    }

    public java.util.Set createElementSet()
    {
        com.google.common.collect.EnumMultiset r0;
        com.google.common.collect.EnumMultiset$1 $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = new com.google.common.collect.EnumMultiset$1;

        specialinvoke $r1.<com.google.common.collect.EnumMultiset$1: void <init>(com.google.common.collect.EnumMultiset)>(r0);

        return $r1;
    }

    public int distinctElements()
    {
        int i0;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        i0 = r0.<com.google.common.collect.EnumMultiset: int distinctElements>;

        return i0;
    }

    public volatile java.util.Set elementSet()
    {
        java.util.Set $r1;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: java.util.Set elementSet()>();

        return $r1;
    }

    public java.util.Iterator entryIterator()
    {
        com.google.common.collect.EnumMultiset r0;
        com.google.common.collect.EnumMultiset$2 $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = new com.google.common.collect.EnumMultiset$2;

        specialinvoke $r1.<com.google.common.collect.EnumMultiset$2: void <init>(com.google.common.collect.EnumMultiset)>(r0);

        return $r1;
    }

    public volatile java.util.Set entrySet()
    {
        java.util.Set $r1;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile int hashCode()
    {
        int $i0;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: int hashCode()>();

        return $i0;
    }

    public volatile boolean isEmpty()
    {
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean isEmpty()>();

        return $z0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: java.util.Iterator iterator()>();

        return $r1;
    }

    public int remove(java.lang.Object, int)
    {
        long $l3, $l4;
        java.lang.Enum $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i5;
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        if $r1 == null goto label5;

        $z0 = specialinvoke r0.<com.google.common.collect.EnumMultiset: boolean isActuallyE(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.lang.Enum) $r1;

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "occurrences");

        if $i0 != 0 goto label2;

        $i0 = virtualinvoke r0.<com.google.common.collect.EnumMultiset: int count(java.lang.Object)>($r1);

        return $i0;

     label2:
        $i1 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $r3 = r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        $i2 = $r3[$i1];

        if $i2 != 0 goto label3;

        return 0;

     label3:
        if $i2 > $i0 goto label4;

        $r3[$i1] = 0;

        $i0 = r0.<com.google.common.collect.EnumMultiset: int distinctElements>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.EnumMultiset: int distinctElements> = $i0;

        $l3 = r0.<com.google.common.collect.EnumMultiset: long size>;

        $l4 = (long) $i2;

        $l3 = $l3 - $l4;

        r0.<com.google.common.collect.EnumMultiset: long size> = $l3;

        return $i2;

     label4:
        $i5 = $i2 - $i0;

        $r3[$i1] = $i5;

        $l3 = r0.<com.google.common.collect.EnumMultiset: long size>;

        $l4 = (long) $i0;

        $l3 = $l3 - $l4;

        r0.<com.google.common.collect.EnumMultiset: long size> = $l3;

        return $i2;

     label5:
        return 0;
    }

    public volatile boolean remove(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean remove(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.util.Collection;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean removeAll(java.util.Collection)>($r1);

        return $z0;
    }

    public volatile boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.util.Collection;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: boolean retainAll(java.util.Collection)>($r1);

        return $z0;
    }

    public int setCount(java.lang.Enum, int)
    {
        long $l2, $l4;
        java.lang.Enum $r1;
        int[] $r2;
        int $i0, $i1, $i3;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Enum;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.google.common.collect.EnumMultiset: void checkIsE(java.lang.Object)>($r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "count");

        $i3 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $r2 = r0.<com.google.common.collect.EnumMultiset: int[] counts>;

        $i1 = $r2[$i3];

        $r2[$i3] = $i0;

        $l4 = r0.<com.google.common.collect.EnumMultiset: long size>;

        $i3 = $i0 - $i1;

        $l2 = (long) $i3;

        $l2 = $l4 + $l2;

        r0.<com.google.common.collect.EnumMultiset: long size> = $l2;

        if $i1 != 0 goto label1;

        if $i0 <= 0 goto label1;

        $i0 = r0.<com.google.common.collect.EnumMultiset: int distinctElements>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.EnumMultiset: int distinctElements> = $i0;

        return $i1;

     label1:
        if $i1 <= 0 goto label2;

        if $i0 != 0 goto label2;

        $i0 = r0.<com.google.common.collect.EnumMultiset: int distinctElements>;

        $i3 = -1;

        $i0 = $i0 + $i3;

        r0.<com.google.common.collect.EnumMultiset: int distinctElements> = $i0;

     label2:
        return $i1;
    }

    public volatile int setCount(java.lang.Object, int)
    {
        java.lang.Enum $r2;
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = (java.lang.Enum) $r1;

        $i0 = virtualinvoke r0.<com.google.common.collect.EnumMultiset: int setCount(java.lang.Enum,int)>($r2, $i0);

        return $i0;
    }

    public int size()
    {
        int $i0;
        long $l1;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $l1 = r0.<com.google.common.collect.EnumMultiset: long size>;

        $i0 = staticinvoke <com.google.common.primitives.Ints: int saturatedCast(long)>($l1);

        return $i0;
    }

    public volatile java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultiset: java.lang.String toString()>();

        return $r1;
    }
}
