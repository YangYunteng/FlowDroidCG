public class com.google.common.collect.Lists$AbstractListWrapper extends java.util.AbstractList
{
    public final java.util.List backingList;

    public void <init>(java.util.List)
    {
        java.util.List $r1;
        com.google.common.collect.Lists$AbstractListWrapper r0;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList> = $r1;

        return;
    }

    public void add(int, java.lang.Object)
    {
        java.util.List $r2;
        com.google.common.collect.Lists$AbstractListWrapper r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i0, $r1);

        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.List $r2;
        com.google.common.collect.Lists$AbstractListWrapper r0;
        java.util.Collection $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.Collection;

        $r2 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>($i0, $r1);

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List $r1;
        com.google.common.collect.Lists$AbstractListWrapper r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        java.util.List $r1;
        com.google.common.collect.Lists$AbstractListWrapper r0;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r2;
    }

    public java.lang.Object remove(int)
    {
        java.util.List $r1;
        com.google.common.collect.Lists$AbstractListWrapper r0;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.List $r2;
        com.google.common.collect.Lists$AbstractListWrapper r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        return $r1;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        com.google.common.collect.Lists$AbstractListWrapper r0;

        r0 := @this: com.google.common.collect.Lists$AbstractListWrapper;

        $r1 = r0.<com.google.common.collect.Lists$AbstractListWrapper: java.util.List backingList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
}
