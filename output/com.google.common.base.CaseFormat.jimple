public abstract enum class com.google.common.base.CaseFormat extends java.lang.Enum
{
    public static final com.google.common.base.CaseFormat[] $VALUES;
    public static final enum com.google.common.base.CaseFormat LOWER_CAMEL;
    public static final enum com.google.common.base.CaseFormat LOWER_HYPHEN;
    public static final enum com.google.common.base.CaseFormat LOWER_UNDERSCORE;
    public static final enum com.google.common.base.CaseFormat UPPER_CAMEL;
    public static final enum com.google.common.base.CaseFormat UPPER_UNDERSCORE;
    public final com.google.common.base.CharMatcher wordBoundary;
    public final java.lang.String wordSeparator;

    static void <clinit>()
    {
        com.google.common.base.CaseFormat$1 $r0;
        com.google.common.base.CaseFormat $r7;
        com.google.common.base.CaseFormat$2 $r2;
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CaseFormat$3 $r3;
        com.google.common.base.CaseFormat$4 $r4;
        com.google.common.base.CaseFormat$5 $r5;
        com.google.common.base.CaseFormat[] $r6;

        $r0 = new com.google.common.base.CaseFormat$1;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)>(45);

        specialinvoke $r0.<com.google.common.base.CaseFormat$1: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>("LOWER_HYPHEN", 0, $r1, "-");

        <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_HYPHEN> = $r0;

        $r2 = new com.google.common.base.CaseFormat$2;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)>(95);

        specialinvoke $r2.<com.google.common.base.CaseFormat$2: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>("LOWER_UNDERSCORE", 1, $r1, "_");

        <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_UNDERSCORE> = $r2;

        $r3 = new com.google.common.base.CaseFormat$3;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher inRange(char,char)>(65, 90);

        specialinvoke $r3.<com.google.common.base.CaseFormat$3: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>("LOWER_CAMEL", 2, $r1, "");

        <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL> = $r3;

        $r4 = new com.google.common.base.CaseFormat$4;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher inRange(char,char)>(65, 90);

        specialinvoke $r4.<com.google.common.base.CaseFormat$4: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>("UPPER_CAMEL", 3, $r1, "");

        <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat UPPER_CAMEL> = $r4;

        $r5 = new com.google.common.base.CaseFormat$5;

        $r1 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)>(95);

        specialinvoke $r5.<com.google.common.base.CaseFormat$5: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>("UPPER_UNDERSCORE", 4, $r1, "_");

        <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat UPPER_UNDERSCORE> = $r5;

        $r6 = newarray (com.google.common.base.CaseFormat)[5];

        $r7 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_HYPHEN>;

        $r6[0] = $r7;

        $r7 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_UNDERSCORE>;

        $r6[1] = $r7;

        $r7 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;

        $r6[2] = $r7;

        $r7 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat UPPER_CAMEL>;

        $r6[3] = $r7;

        $r7 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat UPPER_UNDERSCORE>;

        $r6[4] = $r7;

        <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat[] $VALUES> = $r6;

        return;
    }

    public void <init>(java.lang.String, int, com.google.common.base.CharMatcher, java.lang.String)
    {
        com.google.common.base.CaseFormat r0;
        int $i0;
        com.google.common.base.CharMatcher $r2;
        java.lang.String $r1, $r3;

        r0 := @this: com.google.common.base.CaseFormat;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.base.CharMatcher;

        $r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<com.google.common.base.CaseFormat: com.google.common.base.CharMatcher wordBoundary> = $r2;

        r0.<com.google.common.base.CaseFormat: java.lang.String wordSeparator> = $r3;

        return;
    }

    public void <init>(java.lang.String, int, com.google.common.base.CharMatcher, java.lang.String, com.google.common.base.CaseFormat$1)
    {
        com.google.common.base.CaseFormat r0;
        com.google.common.base.CaseFormat$1 $r4;
        int $i0;
        com.google.common.base.CharMatcher $r2;
        java.lang.String $r1, $r3;

        r0 := @this: com.google.common.base.CaseFormat;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.common.base.CharMatcher;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: com.google.common.base.CaseFormat$1;

        specialinvoke r0.<com.google.common.base.CaseFormat: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>($r1, $i0, $r2, $r3);

        return;
    }

    public static java.lang.String access$100(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.common.base.CaseFormat: java.lang.String firstCharOnlyToUpper(java.lang.String)>($r0);

        return $r0;
    }

    public static java.lang.String firstCharOnlyToUpper(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        char $c0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $c0 = staticinvoke <com.google.common.base.Ascii: char toUpperCase(char)>($c0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r0 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private java.lang.String normalizeFirstWord(java.lang.String)
    {
        java.lang.String $r2;
        com.google.common.base.CaseFormat r0, $r1;

        r0 := @this: com.google.common.base.CaseFormat;

        $r2 := @parameter0: java.lang.String;

        $r1 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;

        if r0 != $r1 goto label1;

        $r2 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r2);

        return $r2;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.base.CaseFormat: java.lang.String normalizeWord(java.lang.String)>($r2);

        return $r2;
    }

    public static com.google.common.base.CaseFormat valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        com.google.common.base.CaseFormat $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/base/CaseFormat;", $r1);

        $r2 = (com.google.common.base.CaseFormat) $r0;

        return $r2;
    }

    public static com.google.common.base.CaseFormat[] values()
    {
        java.lang.Object $r0;
        com.google.common.base.CaseFormat[] $r1;

        $r1 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.base.CaseFormat[]) $r0;

        return $r1;
    }

    public java.lang.String convert(com.google.common.base.CaseFormat, java.lang.String)
    {
        com.google.common.base.CaseFormat r0, $r1;
        com.google.common.base.CharMatcher $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r2, $r5;

        r0 := @this: com.google.common.base.CaseFormat;

        $r1 := @parameter0: com.google.common.base.CaseFormat;

        $r2 := @parameter1: java.lang.String;

        $i0 = 0;

        $r3 = null;

        $i1 = -1;

     label1:
        $r4 = r0.<com.google.common.base.CaseFormat: com.google.common.base.CharMatcher wordBoundary>;

        $i1 = $i1 + 1;

        $i2 = virtualinvoke $r4.<com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence,int)>($r2, $i1);

        $i1 = $i2;

        $i3 = -1;

        if $i2 == $i3 goto label4;

        if $i0 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        $r3 = $r6;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r5 = r0.<com.google.common.base.CaseFormat: java.lang.String wordSeparator>;

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i4 = $i4 * 4;

        $i3 = $i3 + $i4;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r5 = specialinvoke $r1.<com.google.common.base.CaseFormat: java.lang.String normalizeFirstWord(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label3;

     label2:
        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r5 = virtualinvoke $r1.<com.google.common.base.CaseFormat: java.lang.String normalizeWord(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label3:
        $r5 = $r1.<com.google.common.base.CaseFormat: java.lang.String wordSeparator>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = r0.<com.google.common.base.CaseFormat: java.lang.String wordSeparator>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i2;

        goto label1;

     label4:
        if $i0 != 0 goto label5;

        $r2 = specialinvoke $r1.<com.google.common.base.CaseFormat: java.lang.String normalizeFirstWord(java.lang.String)>($r2);

        return $r2;

     label5:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r1.<com.google.common.base.CaseFormat: java.lang.String normalizeWord(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public com.google.common.base.Converter converterTo(com.google.common.base.CaseFormat)
    {
        com.google.common.base.CaseFormat$StringConverter $r2;
        com.google.common.base.CaseFormat r0, $r1;

        r0 := @this: com.google.common.base.CaseFormat;

        $r1 := @parameter0: com.google.common.base.CaseFormat;

        $r2 = new com.google.common.base.CaseFormat$StringConverter;

        specialinvoke $r2.<com.google.common.base.CaseFormat$StringConverter: void <init>(com.google.common.base.CaseFormat,com.google.common.base.CaseFormat)>(r0, $r1);

        return $r2;
    }

    public abstract java.lang.String normalizeWord(java.lang.String);

    public final java.lang.String 'to'(com.google.common.base.CaseFormat, java.lang.String)
    {
        java.lang.String $r2;
        com.google.common.base.CaseFormat r0, $r1;

        r0 := @this: com.google.common.base.CaseFormat;

        $r1 := @parameter0: com.google.common.base.CaseFormat;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        if $r1 != r0 goto label1;

        return $r2;

     label1:
        $r2 = virtualinvoke r0.<com.google.common.base.CaseFormat: java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String)>($r1, $r2);

        return $r2;
    }
}
