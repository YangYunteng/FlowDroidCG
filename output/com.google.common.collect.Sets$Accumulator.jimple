public final class com.google.common.collect.Sets$Accumulator extends java.lang.Object
{
    public static final java.util.stream.Collector TO_IMMUTABLE_ENUM_SET;
    public java.util.EnumSet set;

    static void <clinit>()
    {
        c.i.b.c.nc $r2;
        c.i.b.c.Ub $r0;
        c.i.b.c.cc $r1;
        java.util.stream.Collector $r4;
        java.util.stream.Collector$Characteristics $r3;
        c.i.b.c.b $r5;
        java.util.stream.Collector$Characteristics[] $r6;

        $r5 = <c.i.b.c.b: c.i.b.c.b a>;

        $r0 = <c.i.b.c.Ub: c.i.b.c.Ub a>;

        $r1 = <c.i.b.c.cc: c.i.b.c.cc a>;

        $r2 = <c.i.b.c.nc: c.i.b.c.nc a>;

        $r6 = newarray (java.util.stream.Collector$Characteristics)[1];

        $r3 = <java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics UNORDERED>;

        $r6[0] = $r3;

        $r4 = staticinvoke <g.a.b.a: java.util.stream.Collector a(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector$Characteristics[])>($r5, $r0, $r1, $r2, $r6);

        <com.google.common.collect.Sets$Accumulator: java.util.stream.Collector TO_IMMUTABLE_ENUM_SET> = $r4;

        return;
    }

    public void <init>()
    {
        com.google.common.collect.Sets$Accumulator r0;

        r0 := @this: com.google.common.collect.Sets$Accumulator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void add(java.lang.Enum)
    {
        java.lang.Enum $r2;
        com.google.common.collect.Sets$Accumulator r0;
        java.util.EnumSet $r1;

        r0 := @this: com.google.common.collect.Sets$Accumulator;

        $r2 := @parameter0: java.lang.Enum;

        $r1 = r0.<com.google.common.collect.Sets$Accumulator: java.util.EnumSet set>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r2);

        r0.<com.google.common.collect.Sets$Accumulator: java.util.EnumSet set> = $r1;

        return;

     label1:
        virtualinvoke $r1.<java.util.EnumSet: boolean add(java.lang.Object)>($r2);

        return;
    }

    public com.google.common.collect.Sets$Accumulator combine(com.google.common.collect.Sets$Accumulator)
    {
        com.google.common.collect.Sets$Accumulator r0, $r2;
        java.util.EnumSet $r1, $r3;

        r0 := @this: com.google.common.collect.Sets$Accumulator;

        $r2 := @parameter0: com.google.common.collect.Sets$Accumulator;

        $r1 = r0.<com.google.common.collect.Sets$Accumulator: java.util.EnumSet set>;

        if $r1 != null goto label1;

        return $r2;

     label1:
        $r3 = $r2.<com.google.common.collect.Sets$Accumulator: java.util.EnumSet set>;

        if $r3 != null goto label2;

        return r0;

     label2:
        virtualinvoke $r1.<java.util.EnumSet: boolean addAll(java.util.Collection)>($r3);

        return r0;
    }

    public com.google.common.collect.ImmutableSet toImmutableSet()
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.Sets$Accumulator r0;
        java.util.EnumSet $r1;

        r0 := @this: com.google.common.collect.Sets$Accumulator;

        $r1 = r0.<com.google.common.collect.Sets$Accumulator: java.util.EnumSet set>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r2;

     label1:
        $r2 = staticinvoke <com.google.common.collect.ImmutableEnumSet: com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet)>($r1);

        return $r2;
    }
}
