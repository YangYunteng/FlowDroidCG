public class com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries extends com.google.common.collect.Maps$EntrySet
{
    public final com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r1;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1> = $r1;

        specialinvoke r0.<com.google.common.collect.Maps$EntrySet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r2;
        java.util.Map $r3;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries r0;
        java.util.Set $r4;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r3 = $r2.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $z0 = staticinvoke <com.google.common.collect.Collections2: boolean safeContains(java.util.Collection,java.lang.Object)>($r4, $r1);

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r2;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries r0;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap)>($r2);

        return $r1;
    }

    public java.util.Map map()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap r1;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        return r1;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r3;
        java.util.Map$Entry $r2;
        com.google.common.collect.AbstractMapBasedMultimap $r4;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) $r1;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r4 = $r3.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: void access$400(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object)>($r4, $r1);

        return 1;
    }

    public java.util.Spliterator spliterator()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r1;
        java.util.Map $r3;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries r0;
        java.util.Set $r4;
        java.util.Spliterator $r5;
        c.i.b.c.fa $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r3 = $r1.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Spliterator spliterator()>();

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r2 = new c.i.b.c.fa;

        specialinvoke $r2.<c.i.b.c.fa: void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap)>($r1);

        $r5 = staticinvoke <com.google.common.collect.CollectSpliterators: java.util.Spliterator map(java.util.Spliterator,java.util.function.Function)>($r5, $r2);

        return $r5;
    }
}
