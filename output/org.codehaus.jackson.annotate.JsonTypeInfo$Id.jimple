public final enum class org.codehaus.jackson.annotate.JsonTypeInfo$Id extends java.lang.Enum
{
    public static final org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE;
    public final java.lang.String _defaultPropertyName;

    static void <clinit>()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $r1;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r0;

        $r0 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("NONE", 0, null);

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE> = $r0;

        $r0 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("CLASS", 1, "@class");

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS> = $r0;

        $r0 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("MINIMAL_CLASS", 2, "@c");

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS> = $r0;

        $r0 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("NAME", 3, "@type");

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME> = $r0;

        $r0 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("CUSTOM", 4, null);

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM> = $r0;

        $r1 = newarray (org.codehaus.jackson.annotate.JsonTypeInfo$Id)[5];

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE>;

        $r1[0] = $r0;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $r1[1] = $r0;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS>;

        $r1[2] = $r0;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME>;

        $r1[3] = $r0;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM>;

        $r1[4] = $r0;

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES> = $r1;

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String)
    {
        int $i0;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: java.lang.String _defaultPropertyName> = $r2;

        return;
    }

    public static org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String)
    {
        java.lang.String $r1;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r2;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;", $r1);

        $r2 = (org.codehaus.jackson.annotate.JsonTypeInfo$Id) $r0;

        return $r2;
    }

    public static org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $r1;
        java.lang.Object $r0;

        $r1 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.codehaus.jackson.annotate.JsonTypeInfo$Id[]) $r0;

        return $r1;
    }

    public java.lang.String getDefaultPropertyName()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        r1 = r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: java.lang.String _defaultPropertyName>;

        return r1;
    }
}
