public abstract class project.android.imageprocessing.filter.CompositeFilter extends project.android.imageprocessing.filter.MultiInputFilter
{
    public java.util.List filters;
    public java.util.List initialFilters;
    public java.util.List inputOutputFilters;
    public java.util.List terminalFilters;

    public void <init>(int)
    {
        int $i0;
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.ArrayList $r1;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $i0 := @parameter0: int;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void <init>(int)>($i0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List initialFilters> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List terminalFilters> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List inputOutputFilters> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List filters> = $r1;

        return;
    }

    public void destroy()
    {
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        specialinvoke r0.<project.android.imageprocessing.input.GLTextureOutputRenderer: void destroy()>();

        $r1 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List filters>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (project.android.imageprocessing.input.GLTextureOutputRenderer) $r3;

        virtualinvoke $r4.<project.android.imageprocessing.input.GLTextureOutputRenderer: void destroy()>();

        goto label1;
    }

    public void newTextureReady(int, project.android.imageprocessing.input.GLTextureOutputRenderer, boolean)
    {
        project.android.imageprocessing.filter.BasicFilter $r5;
        java.util.Iterator $r3;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r1;
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: project.android.imageprocessing.input.GLTextureOutputRenderer;

        $z0 := @parameter2: boolean;

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List inputOutputFilters>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        $r2 = r0.<project.android.imageprocessing.filter.MultiInputFilter: java.util.List texturesReceived>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z1 != 0 goto label7;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void newTextureReady(int,project.android.imageprocessing.input.GLTextureOutputRenderer,boolean)>($i0, $r1, $z0);

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List initialFilters>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (project.android.imageprocessing.filter.BasicFilter) $r4;

        virtualinvoke $r5.<project.android.imageprocessing.filter.BasicFilter: void newTextureReady(int,project.android.imageprocessing.input.GLTextureOutputRenderer,boolean)>($i0, $r1, $z0);

        goto label1;

     label3:
        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List terminalFilters>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z1 == 0 goto label4;

        specialinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void newTextureReady(int,project.android.imageprocessing.input.GLTextureOutputRenderer,boolean)>($i0, $r1, $z0);

        return;

     label4:
        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List initialFilters>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label6;

        return;

     label6:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (project.android.imageprocessing.filter.BasicFilter) $r4;

        virtualinvoke $r5.<project.android.imageprocessing.filter.BasicFilter: void newTextureReady(int,project.android.imageprocessing.input.GLTextureOutputRenderer,boolean)>($i0, $r1, $z0);

        goto label5;

     label7:
        return;
    }

    public void registerFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)
    {
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r2;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r1;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $r1 := @parameter0: project.android.imageprocessing.input.GLTextureOutputRenderer;

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List filters>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List filters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void registerInitialFilter(project.android.imageprocessing.filter.BasicFilter)
    {
        project.android.imageprocessing.filter.BasicFilter $r1;
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r2;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $r1 := @parameter0: project.android.imageprocessing.filter.BasicFilter;

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List initialFilters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        virtualinvoke r0.<project.android.imageprocessing.filter.CompositeFilter: void registerFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)>($r1);

        return;
    }

    public void registerInputOutputFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)
    {
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r2;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r1;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $r1 := @parameter0: project.android.imageprocessing.input.GLTextureOutputRenderer;

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List inputOutputFilters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void registerTerminalFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)
    {
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r2;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r1;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $r1 := @parameter0: project.android.imageprocessing.input.GLTextureOutputRenderer;

        $r2 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List terminalFilters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        virtualinvoke r0.<project.android.imageprocessing.filter.CompositeFilter: void registerFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)>($r1);

        return;
    }

    public void setRenderSize(int, int)
    {
        java.util.Iterator $r2;
        project.android.imageprocessing.input.GLTextureOutputRenderer $r4;
        project.android.imageprocessing.filter.CompositeFilter r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: project.android.imageprocessing.filter.CompositeFilter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<project.android.imageprocessing.filter.CompositeFilter: java.util.List filters>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<project.android.imageprocessing.GLRenderer: void setRenderSize(int,int)>($i0, $i1);

        return;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (project.android.imageprocessing.input.GLTextureOutputRenderer) $r3;

        virtualinvoke $r4.<project.android.imageprocessing.GLRenderer: void setRenderSize(int,int)>($i0, $i1);

        goto label1;
    }
}
