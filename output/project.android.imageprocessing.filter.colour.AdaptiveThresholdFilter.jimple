public class project.android.imageprocessing.filter.colour.AdaptiveThresholdFilter extends project.android.imageprocessing.filter.CompositeFilter
{

    public void <init>()
    {
        project.android.imageprocessing.filter.processing.BoxBlurFilter $r1;
        project.android.imageprocessing.filter.colour.AdaptiveThresholdFilter r0;
        project.android.imageprocessing.filter.colour.GreyScaleFilter $r2;

        r0 := @this: project.android.imageprocessing.filter.colour.AdaptiveThresholdFilter;

        specialinvoke r0.<project.android.imageprocessing.filter.CompositeFilter: void <init>(int)>(2);

        $r2 = new project.android.imageprocessing.filter.colour.GreyScaleFilter;

        specialinvoke $r2.<project.android.imageprocessing.filter.colour.GreyScaleFilter: void <init>()>();

        $r1 = new project.android.imageprocessing.filter.processing.BoxBlurFilter;

        specialinvoke $r1.<project.android.imageprocessing.filter.processing.BoxBlurFilter: void <init>()>();

        virtualinvoke $r2.<project.android.imageprocessing.input.GLTextureOutputRenderer: void addTarget(project.android.imageprocessing.output.GLTextureInputRenderer)>($r1);

        virtualinvoke $r1.<project.android.imageprocessing.input.GLTextureOutputRenderer: void addTarget(project.android.imageprocessing.output.GLTextureInputRenderer)>(r0);

        virtualinvoke $r2.<project.android.imageprocessing.input.GLTextureOutputRenderer: void addTarget(project.android.imageprocessing.output.GLTextureInputRenderer)>(r0);

        virtualinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void registerFilterLocation(project.android.imageprocessing.input.GLTextureOutputRenderer,int)>($r2, 0);

        virtualinvoke r0.<project.android.imageprocessing.filter.MultiInputFilter: void registerFilterLocation(project.android.imageprocessing.input.GLTextureOutputRenderer,int)>($r1, 1);

        virtualinvoke r0.<project.android.imageprocessing.filter.CompositeFilter: void registerInitialFilter(project.android.imageprocessing.filter.BasicFilter)>($r2);

        virtualinvoke r0.<project.android.imageprocessing.filter.CompositeFilter: void registerTerminalFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)>($r2);

        virtualinvoke r0.<project.android.imageprocessing.filter.CompositeFilter: void registerTerminalFilter(project.android.imageprocessing.input.GLTextureOutputRenderer)>($r1);

        return;
    }

    public java.lang.String getFragmentShader()
    {
        project.android.imageprocessing.filter.colour.AdaptiveThresholdFilter r0;

        r0 := @this: project.android.imageprocessing.filter.colour.AdaptiveThresholdFilter;

        return "precision mediump float;\nuniform sampler2D u_Texture0;\nuniform sampler2D u_Texture1;\nvarying vec2 v_TexCoord;\nvoid main(){\n   vec4 luminance = texture2D(u_Texture0,v_TexCoord);\n   vec4 blur = texture2D(u_Texture1,v_TexCoord);\n   gl_FragColor = vec4(vec3(step(blur - 0.05, luminance)), 1.0);\n}\n";
    }
}
