public class org.codehaus.jackson.map.ObjectMapper$2 extends java.lang.Object
{
    public static final int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping;

    static void <clinit>()
    {
        java.lang.NoSuchFieldError $r0, $r1, $r2;
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping $r5;
        int[] $r4;
        int $i0;
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] $r3;

        $r3 = staticinvoke <org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] values()>();

        $i0 = lengthof $r3;

        $r4 = newarray (int)[$i0];

        <org.codehaus.jackson.map.ObjectMapper$2: int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping> = $r4;

     label1:
        $r4 = <org.codehaus.jackson.map.ObjectMapper$2: int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping>;

        $r5 = <org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS>;

        $i0 = virtualinvoke $r5.<java.lang.Enum: int ordinal()>();

     label2:
        $r4[$i0] = 1;

     label3:
        $r4 = <org.codehaus.jackson.map.ObjectMapper$2: int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping>;

        $r5 = <org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE>;

        $i0 = virtualinvoke $r5.<java.lang.Enum: int ordinal()>();

     label4:
        $r4[$i0] = 2;

     label5:
        $r4 = <org.codehaus.jackson.map.ObjectMapper$2: int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping>;

        $r5 = <org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_FINAL>;

        $i0 = virtualinvoke $r5.<java.lang.Enum: int ordinal()>();

     label6:
        $r4[$i0] = 3;

        return;

     label7:
        $r0 := @caughtexception;

        goto label3;

     label8:
        $r1 := @caughtexception;

        goto label5;

     label9:
        $r2 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label7;
        catch java.lang.NoSuchFieldError from label3 to label4 with label8;
        catch java.lang.NoSuchFieldError from label5 to label6 with label9;
    }
}
