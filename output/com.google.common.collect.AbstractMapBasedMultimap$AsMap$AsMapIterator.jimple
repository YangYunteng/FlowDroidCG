public class com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator extends java.lang.Object implements java.util.Iterator
{
    public java.util.Collection collection;
    public final java.util.Iterator delegateIterator;
    public final com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1;

    public void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap)
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r1;
        java.util.Iterator $r4;
        java.util.Map $r2;
        java.util.Set $r3;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        $r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r2 = $r1.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map submap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator> = $r4;

        return;
    }

    public boolean hasNext()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public volatile java.lang.Object next()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r5;
        java.util.Map$Entry $r3;
        java.util.Iterator $r1;
        java.util.Collection $r4;
        java.lang.Object $r2;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        $r2 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.Collection) $r2;

        r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Collection collection> = $r4;

        $r5 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r3 = virtualinvoke $r5.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.util.Map$Entry wrapEntry(java.util.Map$Entry)>($r3);

        return $r3;
    }

    public void remove()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r2;
        com.google.common.collect.AbstractMapBasedMultimap $r3;
        java.util.Iterator $r1;
        java.util.Collection $r4;
        int $i0, $i1;
        com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1>;

        $r3 = $r2.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: com.google.common.collect.AbstractMapBasedMultimap this$0>;

        $i0 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$200(com.google.common.collect.AbstractMapBasedMultimap)>($r3);

        $r4 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Collection collection>;

        $i1 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        $i0 = $i0 - $i1;

        staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: int access$202(com.google.common.collect.AbstractMapBasedMultimap,int)>($r3, $i0);

        $r4 = r0.<com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.util.Collection collection>;

        interfaceinvoke $r4.<java.util.Collection: void clear()>();

        return;
    }
}
