public final class com.google.common.util.concurrent.SequentialExecutor$QueueWorker extends java.lang.Object implements java.lang.Runnable
{
    public final com.google.common.util.concurrent.SequentialExecutor this$0;

    public void <init>(com.google.common.util.concurrent.SequentialExecutor)
    {
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        com.google.common.util.concurrent.SequentialExecutor $r1;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        $r1 := @parameter0: com.google.common.util.concurrent.SequentialExecutor;

        r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(com.google.common.util.concurrent.SequentialExecutor, com.google.common.util.concurrent.SequentialExecutor$1)
    {
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        com.google.common.util.concurrent.SequentialExecutor $r1;
        com.google.common.util.concurrent.SequentialExecutor$1 $r2;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        $r1 := @parameter0: com.google.common.util.concurrent.SequentialExecutor;

        $r2 := @parameter1: com.google.common.util.concurrent.SequentialExecutor$1;

        specialinvoke r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: void <init>(com.google.common.util.concurrent.SequentialExecutor)>($r1);

        return;
    }

    private void workOnQueue()
    {
        java.lang.Throwable $r12, $r13;
        java.lang.Runnable $r7;
        java.util.logging.Level $r1;
        java.lang.Thread $r8;
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        java.lang.String $r11;
        boolean $z0, $z1;
        com.google.common.util.concurrent.SequentialExecutor $r3;
        java.lang.RuntimeException $r9;
        java.util.logging.Logger $r10;
        java.lang.StringBuilder $r2;
        java.lang.Object $r6;
        java.util.Queue $r4, $r5;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        $z0 = 0;

     label01:
        $z1 = staticinvoke <java.lang.Thread: boolean interrupted()>();

     label02:
        $z0 = $z0 | $z1;

     label03:
        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r4 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.Queue access$100(com.google.common.util.concurrent.SequentialExecutor)>($r3);

        entermonitor $r4;

     label04:
        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r5 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.Queue access$100(com.google.common.util.concurrent.SequentialExecutor)>($r3);

        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

        $r7 = (java.lang.Runnable) $r6;

        if $r7 != null goto label06;

        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        staticinvoke <com.google.common.util.concurrent.SequentialExecutor: boolean access$202(com.google.common.util.concurrent.SequentialExecutor,boolean)>($r3, 0);

        exitmonitor $r4;

     label05:
        if $z0 == 0 goto label18;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();

        return;

     label06:
        exitmonitor $r4;

     label07:
        interfaceinvoke $r7.<java.lang.Runnable: void run()>();

     label08:
        goto label01;

     label09:
        $r9 := @caughtexception;

     label10:
        $r10 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.logging.Logger access$300()>();

        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while executing runnable ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r1, $r11, $r9);

     label11:
        goto label01;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor $r4;

     label14:
        throw $r12;

     label15:
        $r13 := @caughtexception;

        if $z0 == 0 goto label16;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();

     label16:
        goto label17;

     label17:
        throw $r13;

     label18:
        return;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.RuntimeException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label14 to label15 with label15;
    }

    public void run()
    {
        java.lang.Throwable $r4;
        java.lang.Error $r3;
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        com.google.common.util.concurrent.SequentialExecutor $r1;
        java.util.Queue $r2;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

     label1:
        specialinvoke r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: void workOnQueue()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r2 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.Queue access$100(com.google.common.util.concurrent.SequentialExecutor)>($r1);

        entermonitor $r2;

     label4:
        $r1 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        staticinvoke <com.google.common.util.concurrent.SequentialExecutor: boolean access$202(com.google.common.util.concurrent.SequentialExecutor,boolean)>($r1, 0);

        exitmonitor $r2;

     label5:
        throw $r3;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor $r2;

     label8:
        throw $r4;

        catch java.lang.Error from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
