public class org.dom4j.swing.LeafTreeNode extends java.lang.Object implements javax.swing.tree.TreeNode
{
    public static final java.util.Enumeration EMPTY_ENUMERATION;
    public javax.swing.tree.TreeNode parent;
    public org.dom4j.Node xmlNode;

    static void <clinit>()
    {
        org.dom4j.swing.LeafTreeNode$1 $r0;

        $r0 = new org.dom4j.swing.LeafTreeNode$1;

        specialinvoke $r0.<org.dom4j.swing.LeafTreeNode$1: void <init>()>();

        <org.dom4j.swing.LeafTreeNode: java.util.Enumeration EMPTY_ENUMERATION> = $r0;

        return;
    }

    public void <init>()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(javax.swing.tree.TreeNode, org.dom4j.Node)
    {
        org.dom4j.swing.LeafTreeNode r0;
        javax.swing.tree.TreeNode $r1;
        org.dom4j.Node $r2;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 := @parameter0: javax.swing.tree.TreeNode;

        $r2 := @parameter1: org.dom4j.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.swing.LeafTreeNode: javax.swing.tree.TreeNode parent> = $r1;

        r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode> = $r2;

        return;
    }

    public void <init>(org.dom4j.Node)
    {
        org.dom4j.swing.LeafTreeNode r0;
        org.dom4j.Node $r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 := @parameter0: org.dom4j.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode> = $r1;

        return;
    }

    public java.util.Enumeration children()
    {
        org.dom4j.swing.LeafTreeNode r0;
        java.util.Enumeration r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 = <org.dom4j.swing.LeafTreeNode: java.util.Enumeration EMPTY_ENUMERATION>;

        return r1;
    }

    public boolean getAllowsChildren()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        return 0;
    }

    public javax.swing.tree.TreeNode getChildAt(int)
    {
        int $i0;
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $i0 := @parameter0: int;

        return null;
    }

    public int getChildCount()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        return 0;
    }

    public int getIndex(javax.swing.tree.TreeNode)
    {
        int $i0;
        org.dom4j.swing.LeafTreeNode r0;
        javax.swing.tree.TreeNode $r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 := @parameter0: javax.swing.tree.TreeNode;

        $i0 = -1;

        return $i0;
    }

    public javax.swing.tree.TreeNode getParent()
    {
        org.dom4j.swing.LeafTreeNode r0;
        javax.swing.tree.TreeNode r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 = r0.<org.dom4j.swing.LeafTreeNode: javax.swing.tree.TreeNode parent>;

        return r1;
    }

    public org.dom4j.Node getXmlNode()
    {
        org.dom4j.swing.LeafTreeNode r0;
        org.dom4j.Node r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 = r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode>;

        return r1;
    }

    public boolean isLeaf()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        return 1;
    }

    public void setParent(org.dom4j.swing.LeafTreeNode)
    {
        org.dom4j.swing.LeafTreeNode r0, $r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 := @parameter0: org.dom4j.swing.LeafTreeNode;

        r0.<org.dom4j.swing.LeafTreeNode: javax.swing.tree.TreeNode parent> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.dom4j.swing.LeafTreeNode r0;
        org.dom4j.Node $r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 = r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Node: java.lang.String getText()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r2;

     label1:
        return "";
    }
}
