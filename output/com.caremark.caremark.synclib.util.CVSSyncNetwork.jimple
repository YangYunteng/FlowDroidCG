public class com.caremark.caremark.synclib.util.CVSSyncNetwork extends java.lang.Object
{
    public static final java.lang.String TAG;
    public static android.content.Context mCtx;
    public static com.caremark.caremark.synclib.util.CVSSyncNetwork mInstance;
    public static int requestType;
    public c.b.a.a.g mImageLoader;
    public c.b.a.l mRequestQueue;

    static void <clinit>()
    {
        <com.caremark.caremark.synclib.util.CVSSyncNetwork: java.lang.String TAG> = "CVSSyncNetwork";

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.caremark.caremark.synclib.util.CVSSyncNetwork r0;

        r0 := @this: com.caremark.caremark.synclib.util.CVSSyncNetwork;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        <com.caremark.caremark.synclib.util.CVSSyncNetwork: android.content.Context mCtx> = $r1;

        return;
    }

    public static com.caremark.caremark.synclib.util.CVSSyncNetwork getInstance(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        com.caremark.caremark.synclib.util.CVSSyncNetwork $r1;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/caremark/caremark/synclib/util/CVSSyncNetwork;";

     label1:
        $r1 = <com.caremark.caremark.synclib.util.CVSSyncNetwork: com.caremark.caremark.synclib.util.CVSSyncNetwork mInstance>;

        if $r1 != null goto label2;

        $r1 = new com.caremark.caremark.synclib.util.CVSSyncNetwork;

        specialinvoke $r1.<com.caremark.caremark.synclib.util.CVSSyncNetwork: void <init>(android.content.Context)>($r0);

        <com.caremark.caremark.synclib.util.CVSSyncNetwork: com.caremark.caremark.synclib.util.CVSSyncNetwork mInstance> = $r1;

     label2:
        $r1 = <com.caremark.caremark.synclib.util.CVSSyncNetwork: com.caremark.caremark.synclib.util.CVSSyncNetwork mInstance>;

     label3:
        exitmonitor class "Lcom/caremark/caremark/synclib/util/CVSSyncNetwork;";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/caremark/caremark/synclib/util/CVSSyncNetwork;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void addToRequestQueue(c.b.a.j)
    {
        c.f.a.a.b $r3;
        c.b.a.j $r1;
        java.net.MalformedURLException $r7;
        java.net.URL $r4;
        c.b.a.l $r6;
        javax.net.ssl.SSLSocketFactory $r5;
        com.caremark.caremark.synclib.util.CVSSyncNetwork r0;
        java.lang.String $r2;

        r0 := @this: com.caremark.caremark.synclib.util.CVSSyncNetwork;

        $r1 := @parameter0: c.b.a.j;

        $r2 = <com.caremark.caremark.synclib.util.CVSSyncNetwork: java.lang.String TAG>;

        virtualinvoke $r1.<c.b.a.j: c.b.a.j setTag(java.lang.Object)>($r2);

     label1:
        $r3 = staticinvoke <c.f.a.a.b: c.f.a.a.b b()>();

     label2:
        $r4 = new java.net.URL;

     label3:
        $r2 = virtualinvoke $r1.<c.b.a.j: java.lang.String getUrl()>();

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>();

        $r5 = virtualinvoke $r3.<c.f.a.a.b: javax.net.ssl.SSLSocketFactory a(java.lang.String)>($r2);

        $r6 = virtualinvoke r0.<com.caremark.caremark.synclib.util.CVSSyncNetwork: c.b.a.l getRequestQueue(javax.net.ssl.SSLSocketFactory)>($r5);

        virtualinvoke $r6.<c.b.a.l: c.b.a.j a(c.b.a.j)>($r1);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.net.MalformedURLException: void printStackTrace()>();

        return;

        catch java.net.MalformedURLException from label1 to label2 with label5;
        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    public void addToRequestQueue(c.b.a.j, java.lang.String)
    {
        c.f.a.a.b $r3;
        c.b.a.j $r1;
        java.net.MalformedURLException $r7;
        java.net.URL $r4;
        c.b.a.l $r6;
        javax.net.ssl.SSLSocketFactory $r5;
        com.caremark.caremark.synclib.util.CVSSyncNetwork r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.caremark.caremark.synclib.util.CVSSyncNetwork;

        $r1 := @parameter0: c.b.a.j;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $r2 = <com.caremark.caremark.synclib.util.CVSSyncNetwork: java.lang.String TAG>;

     label1:
        virtualinvoke $r1.<c.b.a.j: c.b.a.j setTag(java.lang.Object)>($r2);

     label2:
        $r3 = staticinvoke <c.f.a.a.b: c.f.a.a.b b()>();

     label3:
        $r4 = new java.net.URL;

     label4:
        $r2 = virtualinvoke $r1.<c.b.a.j: java.lang.String getUrl()>();

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>();

        $r5 = virtualinvoke $r3.<c.f.a.a.b: javax.net.ssl.SSLSocketFactory a(java.lang.String)>($r2);

        $r6 = virtualinvoke r0.<com.caremark.caremark.synclib.util.CVSSyncNetwork: c.b.a.l getRequestQueue(javax.net.ssl.SSLSocketFactory)>($r5);

        virtualinvoke $r6.<c.b.a.l: c.b.a.j a(c.b.a.j)>($r1);

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.net.MalformedURLException: void printStackTrace()>();

        return;

        catch java.net.MalformedURLException from label2 to label3 with label6;
        catch java.net.MalformedURLException from label4 to label5 with label6;
    }

    public void cancelPendingRequests(java.lang.Object)
    {
        com.caremark.caremark.synclib.util.CVSSyncNetwork r0;
        java.lang.Object $r1;
        c.b.a.l $r2;

        r0 := @this: com.caremark.caremark.synclib.util.CVSSyncNetwork;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.caremark.caremark.synclib.util.CVSSyncNetwork: c.b.a.l mRequestQueue>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<c.b.a.l: void a(java.lang.Object)>($r1);

     label1:
        return;
    }

    public c.b.a.l getRequestQueue(javax.net.ssl.SSLSocketFactory)
    {
        android.content.Context $r4;
        com.caremark.caremark.synclib.util.CVSSyncNetwork r0;
        c.b.a.l $r2;
        c.d.a.b.c $r1;
        javax.net.ssl.SSLSocketFactory $r3;

        r0 := @this: com.caremark.caremark.synclib.util.CVSSyncNetwork;

        $r3 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r4 = <com.caremark.caremark.synclib.util.CVSSyncNetwork: android.content.Context mCtx>;

        $r1 = new c.d.a.b.c;

        specialinvoke $r1.<c.d.a.b.c: void <init>(c.d.a.b.c$a,javax.net.ssl.SSLSocketFactory)>(null, $r3);

        $r2 = staticinvoke <c.b.a.a.m: c.b.a.l a(android.content.Context,c.b.a.a.f)>($r4, $r1);

        r0.<com.caremark.caremark.synclib.util.CVSSyncNetwork: c.b.a.l mRequestQueue> = $r2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Volley ", "Created stack with Trustkit SSL socket factory");

        $r2 = r0.<com.caremark.caremark.synclib.util.CVSSyncNetwork: c.b.a.l mRequestQueue>;

        virtualinvoke $r2.<c.b.a.l: void b()>();

        $r2 = r0.<com.caremark.caremark.synclib.util.CVSSyncNetwork: c.b.a.l mRequestQueue>;

        return $r2;
    }
}
