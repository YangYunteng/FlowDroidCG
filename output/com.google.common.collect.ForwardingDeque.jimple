public abstract class com.google.common.collect.ForwardingDeque extends com.google.common.collect.ForwardingQueue implements java.util.Deque
{

    public void <init>()
    {
        com.google.common.collect.ForwardingDeque r0;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        specialinvoke r0.<com.google.common.collect.ForwardingQueue: void <init>()>();

        return;
    }

    public void addFirst(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        interfaceinvoke $r2.<java.util.Deque: void addFirst(java.lang.Object)>($r1);

        return;
    }

    public void addLast(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        interfaceinvoke $r2.<java.util.Deque: void addLast(java.lang.Object)>($r1);

        return;
    }

    public volatile java.lang.Object delegate()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        return $r1;
    }

    public volatile java.util.Collection delegate()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        return $r1;
    }

    public abstract java.util.Deque delegate();

    public volatile java.util.Queue delegate()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        return $r1;
    }

    public java.util.Iterator descendingIterator()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.util.Deque $r1;
        java.util.Iterator $r2;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.util.Iterator descendingIterator()>();

        return $r2;
    }

    public java.lang.Object getFirst()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object getFirst()>();

        return $r2;
    }

    public java.lang.Object getLast()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object getLast()>();

        return $r2;
    }

    public boolean offerFirst(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean offerFirst(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean offerLast(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean offerLast(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object peekFirst()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peekFirst()>();

        return $r2;
    }

    public java.lang.Object peekLast()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peekLast()>();

        return $r2;
    }

    public java.lang.Object pollFirst()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pollFirst()>();

        return $r2;
    }

    public java.lang.Object pollLast()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pollLast()>();

        return $r2;
    }

    public java.lang.Object pop()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pop()>();

        return $r2;
    }

    public void push(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        interfaceinvoke $r2.<java.util.Deque: void push(java.lang.Object)>($r1);

        return;
    }

    public java.lang.Object removeFirst()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object removeFirst()>();

        return $r2;
    }

    public boolean removeFirstOccurrence(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean removeFirstOccurrence(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object removeLast()
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r2;
        java.util.Deque $r1;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object removeLast()>();

        return $r2;
    }

    public boolean removeLastOccurrence(java.lang.Object)
    {
        com.google.common.collect.ForwardingDeque r0;
        java.lang.Object $r1;
        java.util.Deque $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingDeque;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingDeque: java.util.Deque delegate()>();

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean removeLastOccurrence(java.lang.Object)>($r1);

        return $z0;
    }
}
