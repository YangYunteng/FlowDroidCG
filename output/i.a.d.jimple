public class i.a.d extends i.a.c
{

    public static final java.util.List a(java.lang.Object[])
    {
        java.util.List $r0;
        java.lang.Object[] $r1;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "$this$asList");

        $r0 = staticinvoke <i.a.f: java.util.List a(java.lang.Object[])>($r1);

        staticinvoke <i.f.b.i: void a(java.lang.Object,java.lang.String)>($r0, "ArraysUtilJVM.asList(this)");

        return $r0;
    }

    public static final void a(java.lang.Object[], java.util.Comparator)
    {
        int $i0;
        java.lang.Object[] $r0;
        java.util.Comparator $r1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$sortWith");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "comparator");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r0, $r1);

     label1:
        return;
    }

    public static final java.lang.Object[] a(java.lang.Object[], java.lang.Object[], int, int, int)
    {
        java.lang.Object[] $r0, $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r0, "$this$copyInto");

        staticinvoke <i.f.b.i: void b(java.lang.Object,java.lang.String)>($r1, "destination");

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i1, $r1, $i0, $i2);

        return $r1;
    }

    public static java.lang.Object[] a(java.lang.Object[], java.lang.Object[], int, int, int, int, java.lang.Object)
    {
        java.lang.Object[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r2 := @parameter6: java.lang.Object;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label1;

        $i0 = 0;

     label1:
        $i4 = $i3 & 4;

        if $i4 == 0 goto label2;

        $i1 = 0;

     label2:
        $i3 = $i3 & 8;

        if $i3 == 0 goto label3;

        $i2 = lengthof $r0;

     label3:
        staticinvoke <i.a.d: java.lang.Object[] a(java.lang.Object[],java.lang.Object[],int,int,int)>($r0, $r1, $i0, $i1, $i2);

        return $r1;
    }
}
