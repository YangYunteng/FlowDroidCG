public final class com.caremark.caremark.util.StringUtils extends java.lang.Object
{
    public static final java.lang.String DELETE_PERIODS_REGEX;
    public static final java.lang.String EMPTY_STRING;

    public void <init>()
    {
        com.caremark.caremark.util.StringUtils r0;

        r0 := @this: com.caremark.caremark.util.StringUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean findSequence(java.lang.String, java.lang.String)
    {
        java.util.Locale $r2;
        int $i0;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[,|.| |\\n]+", "");

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r1);

        return $z0;

     label1:
        return 0;
    }

    public static java.lang.String getDate(java.lang.String)
    {
        java.util.Locale $r0;
        java.util.Date $r4;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r2, $r5;
        java.text.ParseException $r1;

        $r2 := @parameter0: java.lang.String;

        if $r2 == null goto label6;

        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

     label1:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyyMMdd", $r0);

        $r4 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r2);

     label2:
        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

     label3:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MM/dd/yyyy", $r0);

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r4);

     label4:
        return $r5;

     label5:
        $r1 := @caughtexception;

     label6:
        return $r2;

        catch java.text.ParseException from label1 to label2 with label5;
        catch java.text.ParseException from label3 to label4 with label5;
    }

    public static java.lang.String getUpdatedDate(java.lang.String)
    {
        java.util.Locale $r0;
        java.util.Date $r4;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r2, $r5;
        java.text.ParseException $r1;

        $r2 := @parameter0: java.lang.String;

        if $r2 == null goto label7;

        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

     label1:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE MMM dd HH:mm:ss zzz yyyy", $r0);

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r2);

     label2:
        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

     label3:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MM/dd/yyyy", $r0);

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r4);

     label4:
        return $r5;

     label5:
        $r2 = staticinvoke <com.caremark.caremark.util.StringUtils: java.lang.String getUpdatedLatestDate(java.lang.String)>($r2);

        return $r2;

     label6:
        $r1 := @caughtexception;

        goto label5;

     label7:
        return $r2;

        catch java.text.ParseException from label1 to label2 with label6;
        catch java.text.ParseException from label3 to label4 with label6;
    }

    public static java.lang.String getUpdatedLatestDate(java.lang.String)
    {
        java.util.Locale $r0;
        java.util.Date $r4;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r2, $r5;
        java.text.ParseException $r1;

        $r2 := @parameter0: java.lang.String;

        if $r2 == null goto label6;

        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

     label1:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MM/dd/yyyy mm:ss", $r0);

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r2);

     label2:
        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

     label3:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MM/dd/yyyy", $r0);

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r4);

     label4:
        return $r5;

     label5:
        $r1 := @caughtexception;

     label6:
        return $r2;

        catch java.text.ParseException from label1 to label2 with label5;
        catch java.text.ParseException from label3 to label4 with label5;
    }

    public static java.lang.String removeZerosInTheBeggining(java.lang.String)
    {
        int $i0, $i1, $i3;
        char[] $r1;
        char $c2;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r1[$i1];

        $i3 = (int) $c2;

        if $i3 != 48 goto label2;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r0, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static void <clinit>()
    {
        <com.caremark.caremark.util.StringUtils: java.lang.String EMPTY_STRING> = "";

        <com.caremark.caremark.util.StringUtils: java.lang.String DELETE_PERIODS_REGEX> = "[,|.| |\\n]+";

        return;
    }
}
