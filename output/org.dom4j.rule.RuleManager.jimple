public class org.dom4j.rule.RuleManager extends java.lang.Object
{
    public int appearenceCount;
    public java.util.HashMap modes;
    public org.dom4j.rule.Action valueOfAction;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.dom4j.rule.RuleManager r0;

        r0 := @this: org.dom4j.rule.RuleManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.rule.RuleManager: java.util.HashMap modes> = $r1;

        return;
    }

    public void addDefaultRule(org.dom4j.rule.Mode, org.dom4j.rule.Pattern, org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action $r2;
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.Mode $r1;
        org.dom4j.rule.Pattern $r4;
        org.dom4j.rule.Rule $r3;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: org.dom4j.rule.Mode;

        $r4 := @parameter1: org.dom4j.rule.Pattern;

        $r2 := @parameter2: org.dom4j.rule.Action;

        $r3 = virtualinvoke r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Rule createDefaultRule(org.dom4j.rule.Pattern,org.dom4j.rule.Action)>($r4, $r2);

        virtualinvoke $r1.<org.dom4j.rule.Mode: void addRule(org.dom4j.rule.Rule)>($r3);

        return;
    }

    public void addDefaultRules(org.dom4j.rule.Mode)
    {
        org.dom4j.rule.Action $r2;
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.pattern.NodeTypePattern $r4;
        org.dom4j.rule.Mode $r1;
        org.dom4j.rule.RuleManager$1 $r3;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: org.dom4j.rule.Mode;

        $r3 = new org.dom4j.rule.RuleManager$1;

        specialinvoke $r3.<org.dom4j.rule.RuleManager$1: void <init>(org.dom4j.rule.RuleManager,org.dom4j.rule.Mode)>(r0, $r1);

        $r2 = virtualinvoke r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Action getValueOfAction()>();

        $r4 = <org.dom4j.rule.pattern.NodeTypePattern: org.dom4j.rule.pattern.NodeTypePattern ANY_DOCUMENT>;

        virtualinvoke r0.<org.dom4j.rule.RuleManager: void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action)>($r1, $r4, $r3);

        $r4 = <org.dom4j.rule.pattern.NodeTypePattern: org.dom4j.rule.pattern.NodeTypePattern ANY_ELEMENT>;

        virtualinvoke r0.<org.dom4j.rule.RuleManager: void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action)>($r1, $r4, $r3);

        if $r2 == null goto label1;

        $r4 = <org.dom4j.rule.pattern.NodeTypePattern: org.dom4j.rule.pattern.NodeTypePattern ANY_ATTRIBUTE>;

        virtualinvoke r0.<org.dom4j.rule.RuleManager: void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action)>($r1, $r4, $r2);

        $r4 = <org.dom4j.rule.pattern.NodeTypePattern: org.dom4j.rule.pattern.NodeTypePattern ANY_TEXT>;

        virtualinvoke r0.<org.dom4j.rule.RuleManager: void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action)>($r1, $r4, $r2);

     label1:
        return;
    }

    public void addRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.Mode $r3;
        int $i0, $i1;
        org.dom4j.rule.Rule $r1;
        java.lang.String $r2;
        org.dom4j.rule.Rule[] $r4;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: org.dom4j.rule.Rule;

        $i0 = r0.<org.dom4j.rule.RuleManager: int appearenceCount>;

        $i0 = $i0 + 1;

        r0.<org.dom4j.rule.RuleManager: int appearenceCount> = $i0;

        virtualinvoke $r1.<org.dom4j.rule.Rule: void setAppearenceCount(int)>($i0);

        $r2 = virtualinvoke $r1.<org.dom4j.rule.Rule: java.lang.String getMode()>();

        $r3 = virtualinvoke r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>($r2);

        $r4 = virtualinvoke $r1.<org.dom4j.rule.Rule: org.dom4j.rule.Rule[] getUnionRules()>();

        if $r4 == null goto label3;

        $i1 = 0;

        $i0 = lengthof $r4;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $r1 = $r4[$i1];

        virtualinvoke $r3.<org.dom4j.rule.Mode: void addRule(org.dom4j.rule.Rule)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r3.<org.dom4j.rule.Mode: void addRule(org.dom4j.rule.Rule)>($r1);

        return;
    }

    public void clear()
    {
        java.util.HashMap $r1;
        org.dom4j.rule.RuleManager r0;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 = r0.<org.dom4j.rule.RuleManager: java.util.HashMap modes>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        r0.<org.dom4j.rule.RuleManager: int appearenceCount> = 0;

        return;
    }

    public org.dom4j.rule.Rule createDefaultRule(org.dom4j.rule.Pattern, org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action $r1;
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.Pattern $r3;
        int $i0;
        org.dom4j.rule.Rule $r2, $r4;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r3 := @parameter0: org.dom4j.rule.Pattern;

        $r1 := @parameter1: org.dom4j.rule.Action;

        $r4 = new org.dom4j.rule.Rule;

        $r2 = $r4;

        specialinvoke $r4.<org.dom4j.rule.Rule: void <init>(org.dom4j.rule.Pattern,org.dom4j.rule.Action)>($r3, $r1);

        $i0 = -1;

        virtualinvoke $r2.<org.dom4j.rule.Rule: void setImportPrecedence(int)>($i0);

        return $r2;
    }

    public org.dom4j.rule.Mode createMode()
    {
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.Mode $r1;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 = new org.dom4j.rule.Mode;

        specialinvoke $r1.<org.dom4j.rule.Mode: void <init>()>();

        virtualinvoke r0.<org.dom4j.rule.RuleManager: void addDefaultRules(org.dom4j.rule.Mode)>($r1);

        return $r1;
    }

    public org.dom4j.rule.Rule getMatchingRule(java.lang.String, org.dom4j.Node)
    {
        java.io.PrintStream $r7;
        org.dom4j.rule.RuleManager r0;
        org.dom4j.Node $r2;
        org.dom4j.rule.Mode $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8;
        java.lang.String $r1;
        org.dom4j.rule.Rule $r6;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.Node;

        $r3 = r0.<org.dom4j.rule.RuleManager: java.util.HashMap modes>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (org.dom4j.rule.Mode) $r4;

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<org.dom4j.rule.Mode: org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)>($r2);

        return $r6;

     label1:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Warning: No Mode for mode: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return null;
    }

    public org.dom4j.rule.Mode getMode(java.lang.String)
    {
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.Mode $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.rule.RuleManager: java.util.HashMap modes>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (org.dom4j.rule.Mode) $r3;

        if $r4 != null goto label1;

        $r4 = virtualinvoke r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode createMode()>();

        $r2 = r0.<org.dom4j.rule.RuleManager: java.util.HashMap modes>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return $r4;
    }

    public org.dom4j.rule.Action getValueOfAction()
    {
        org.dom4j.rule.Action r1;
        org.dom4j.rule.RuleManager r0;

        r0 := @this: org.dom4j.rule.RuleManager;

        r1 = r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Action valueOfAction>;

        return r1;
    }

    public void removeRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.RuleManager r0;
        org.dom4j.rule.Mode $r3;
        int $i0, $i1;
        org.dom4j.rule.Rule $r1;
        java.lang.String $r2;
        org.dom4j.rule.Rule[] $r4;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = virtualinvoke $r1.<org.dom4j.rule.Rule: java.lang.String getMode()>();

        $r3 = virtualinvoke r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>($r2);

        $r4 = virtualinvoke $r1.<org.dom4j.rule.Rule: org.dom4j.rule.Rule[] getUnionRules()>();

        if $r4 == null goto label3;

        $i1 = 0;

        $i0 = lengthof $r4;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $r1 = $r4[$i1];

        virtualinvoke $r3.<org.dom4j.rule.Mode: void removeRule(org.dom4j.rule.Rule)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r3.<org.dom4j.rule.Mode: void removeRule(org.dom4j.rule.Rule)>($r1);

        return;
    }

    public void setValueOfAction(org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action $r1;
        org.dom4j.rule.RuleManager r0;

        r0 := @this: org.dom4j.rule.RuleManager;

        $r1 := @parameter0: org.dom4j.rule.Action;

        r0.<org.dom4j.rule.RuleManager: org.dom4j.rule.Action valueOfAction> = $r1;

        return;
    }
}
