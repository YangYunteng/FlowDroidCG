public class org.dom4j.rule.pattern.DefaultPattern extends java.lang.Object implements org.dom4j.rule.Pattern
{
    public org.dom4j.NodeFilter filter;

    public void <init>(org.dom4j.NodeFilter)
    {
        org.dom4j.NodeFilter $r1;
        org.dom4j.rule.pattern.DefaultPattern r0;

        r0 := @this: org.dom4j.rule.pattern.DefaultPattern;

        $r1 := @parameter0: org.dom4j.NodeFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.rule.pattern.DefaultPattern: org.dom4j.NodeFilter filter> = $r1;

        return;
    }

    public short getMatchType()
    {
        org.dom4j.rule.pattern.DefaultPattern r0;

        r0 := @this: org.dom4j.rule.pattern.DefaultPattern;

        return 0;
    }

    public java.lang.String getMatchesNodeName()
    {
        org.dom4j.rule.pattern.DefaultPattern r0;

        r0 := @this: org.dom4j.rule.pattern.DefaultPattern;

        return null;
    }

    public double getPriority()
    {
        org.dom4j.rule.pattern.DefaultPattern r0;

        r0 := @this: org.dom4j.rule.pattern.DefaultPattern;

        return 0.5;
    }

    public org.dom4j.rule.Pattern[] getUnionPatterns()
    {
        org.dom4j.rule.pattern.DefaultPattern r0;

        r0 := @this: org.dom4j.rule.pattern.DefaultPattern;

        return null;
    }

    public boolean matches(org.dom4j.Node)
    {
        org.dom4j.NodeFilter $r1;
        org.dom4j.Node $r2;
        org.dom4j.rule.pattern.DefaultPattern r0;
        boolean $z0;

        r0 := @this: org.dom4j.rule.pattern.DefaultPattern;

        $r2 := @parameter0: org.dom4j.Node;

        $r1 = r0.<org.dom4j.rule.pattern.DefaultPattern: org.dom4j.NodeFilter filter>;

        $z0 = interfaceinvoke $r1.<org.dom4j.NodeFilter: boolean matches(org.dom4j.Node)>($r2);

        return $z0;
    }
}
